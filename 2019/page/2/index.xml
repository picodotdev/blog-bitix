<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/2019/</id>
    <updated>2019-12-27T19:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/</id>
        <title>Ventajas de usar un tipo específico para los identificadores de las entidades en vez de un tipo básico</title>
        <updated>2019-10-18T16:30:00+02:00</updated>
        <published>2019-10-18T16:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hibernate.svg" width="200" height="200" alt="Hibernate" title="Hibernate"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/jooq.png" width="200" height="200" alt="jOOQ" title="jOOQ"  class=""></p>
</div>
<p>Al persistir una entidad de dominio en la base de datos su identificador se guarda como un tipo de datos soportado por la base de datos. Si es una base de datos relacional habitualmente es el equivalente a un <em>bigint</em> o en una base de datos de documentos quizá un UUID. En las entidades de dominio el tipo de datos usado para el identificador es el equivalente de la base de datos en el lenguaje de programación. Por ejemplo, si en una base de datos la clave primaria es un <em>bigint</em> el identificador en la entidad de dominio es un <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Long.html">Long</a>. Esto es lo mas simple pero tiene algún inconveniente.</p>
<p>El inconveniente es que al ser el identificador un tipo de datos básico cualquier <em>Long</em> es aceptado, con lo que se hacen posibles errores o malos comportamientos al usar un identificador de otra entidad de dominio si también es un <em>Long</em> donde no se debería. El compilador no captura este tipo de errores porque entiende como correcto cualquier <em>Long</em> independientemente de su significado desde el punto de vista de la aplicación.</p>
<p>También en cierta medida es un problema en la legibilidad del código ya que el tipo de dato de una variable no es significativo para saber si es un identificador. También es un problema al trabajar con colecciones, los siguientes ejemplos de código demuestran que los tipos no son todo lo semánticos o significativos que deberían.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">Long</span> <span class="n">id</span> <span class="o">=</span> <span class="o">...;</span>&#10;<span class="n">List</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;</span> <span class="n">ids</span> <span class="o">=</span> <span class="o">...;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Collection-Long.java</span>
    </div>
</div>
<p>La solución es crear un tipo para cada identificador de cada entidad y en vez de usar un <em>Long</em> pasar a usar un <em>ProductoId</em>, <em>UsuarioId</em>, <em>CompraId</em> o como en el ejemplo <em>EventId</em>. Estas serían unas posibles implementaciones.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.domain.misc</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">EntityId</span> <span class="o">{</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>EntityId.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.domain.misc</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">LongId</span> <span class="kd">implements</span> <span class="n">EntityId</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Long</span> <span class="n">value</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LongId</span><span class="o">(</span><span class="n">Long</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Long</span> <span class="nf">getValue</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">value</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LongId.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.domain.event</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.domain.misc.LongId</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.Objects</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">EventId</span> <span class="kd">extends</span> <span class="n">LongId</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">EventId</span><span class="o">(</span><span class="n">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">super</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hashCode</span><span class="o">(</span><span class="n">getId</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">EventId</span><span class="o">))</span> <span class="o">{</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">getId</span><span class="o">(),</span> <span class="o">((</span><span class="n">EventId</span><span class="o">)</span> <span class="n">o</span><span class="o">).</span><span class="na">getId</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>EventId.java</span>
    </div>
</div>
<p>El tipo de las colecciones ahora son más semánticas además de que el compilador realizará comprobaciones de tipos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">EventId</span> <span class="n">id</span> <span class="o">=</span> <span class="o">...;</span>&#10;<span class="n">List</span><span class="o">&lt;</span><span class="n">EventId</span><span class="o">&gt;</span> <span class="n">ids</span> <span class="o">=</span> <span class="o">...;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Collection-EventId.java</span>
    </div>
</div>
<p>En la popular herramienta ORM de persistencia <a href="https://hibernate.org/">Hibernate</a> o JPA se puede usar el tipo propio para el identificador usando la anotación <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/Converter.html">@Converter</a> y en otra alternativa de persistencia para Java como <a href="https://www.jooq.org/">jOOQ</a> especificando en el generador el tipo que se quiere usar para una columna. En ambos casos hay que proporcionar una implementación que convierta del tipo de la base de datos al del identificador en el dominio y viceversa. Son muy simples.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.infrastructure.datasource.hibernate.converter</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.persistence.AttributeConverter</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.Converter</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.domain.event.EventId</span><span class="o">;</span>&#10;&#10;<span class="nd">@Converter</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">EventIdConverter</span> <span class="kd">implements</span> <span class="n">AttributeConverter</span><span class="o">&lt;</span><span class="n">EventId</span><span class="o">,</span> <span class="n">Long</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Long</span> <span class="nf">convertToDatabaseColumn</span><span class="o">(</span><span class="n">EventId</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">id</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">EventId</span> <span class="nf">convertToEntityAttribute</span><span class="o">(</span><span class="n">Long</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">EventId</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>EventIdConverter-hibernate.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.infrastructure.datasource.jooq.converter</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.domain.event.EventId</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">EventIdConverter</span> <span class="kd">implements</span> <span class="n">Converter</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">,</span> <span class="n">EventId</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Class</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;</span> <span class="nf">fromType</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Long</span><span class="o">.</span><span class="na">class</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">EventId</span> <span class="nf">from</span><span class="o">(</span><span class="n">Long</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">EventId</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Class</span><span class="o">&lt;</span><span class="n">EventId</span><span class="o">&gt;</span> <span class="nf">toType</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">EventId</span><span class="o">.</span><span class="na">class</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Long</span> <span class="nf">to</span><span class="o">(</span><span class="n">EventId</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">id</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>EventIdConverter-jooq.java</span>
    </div>
</div>
<p>En una entidad de Hibernate los identificadores se definen de la siguiente forma.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.domain.event</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Entity</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Event</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Id</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GeneratedValue</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Convert</span><span class="o">(</span><span class="n">converter</span> <span class="o">=</span> <span class="n">EventIdConverter</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">EventId</span> <span class="n">id</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Event.java</span>
    </div>
</div>
<p>En jOOQ en la configuración del generador hay que especificar que para un campo se use un <em>converter</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;nu.studer.jooq&#39;</span> <span class="n">version</span> <span class="s1">&#39;3.0.3&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="n">jooq</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">version</span> <span class="o">=</span> <span class="n">versions</span><span class="o">.</span><span class="na">jooq</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">edition</span> <span class="o">=</span> <span class="s1">&#39;OSS&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mysql</span><span class="o">(</span><span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jdbc</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">driver</span> <span class="o">=</span> <span class="s1">&#39;com.mysql.cj.jdbc.Driver&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">url</span> <span class="o">=</span> <span class="s2">&#34;jdbc:mysql://localhost:3306/${mysqlDdlJooqSchema}&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span> <span class="o">=</span> <span class="s1">&#39;root&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">password</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">generator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;org.jooq.codegen.DefaultGenerator&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">database</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;org.jooq.meta.mysql.MySQLDatabase&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">inputSchema</span> <span class="o">=</span> <span class="n">mysqlDdlJooqSchema</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">outputSchema</span> <span class="o">=</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">includes</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;&#10;</span><span class="s2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event&#10;</span><span class="s2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;&#34;&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">excludes</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">forcedTypes</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Ids&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">forcedType</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">types</span> <span class="o">=</span> <span class="s1">&#39;BIGINT&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">userType</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.domain.event.EventId&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">converter</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.infrastructure.datasource.jooq.converter.EventIdConverter&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expression</span> <span class="o">=</span> <span class="s1">&#39;.*\\.event\\.id&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">generate</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javaTimeTypes</span> <span class="o">=</span> <span class="kc">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">interfaces</span> <span class="o">=</span> <span class="kc">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">pojos</span> <span class="o">=</span> <span class="kc">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">records</span> <span class="o">=</span> <span class="kc">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">relations</span> <span class="o">=</span> <span class="kc">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">target</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">packageName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.infrastructure.datasource.jooq.entities&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">directory</span> <span class="o">=</span> <span class="s1">&#39;src/main/java-generated&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="o">...</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Con un tipo de datos propio para los identificadores es muy importante <a href="https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/">implementar correctamente los métodos equals y hashCode</a> tanto en clases de identificadores como en las entidades de dominio ya que las colecciones de Java se basan en estos métodos para determinar si una colección contiene un elemento.</p>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2020/06/generar-en-el-dominio-los-identificativos-de-las-entidades-aplicando-ddd-antes-de-persistirlas-en-la-base-de-datos/">generar en el dominio los identificativos de las entidades aplicando DDD antes de persistirlas en la base de datos</a> muestro un ejemplo completo y funcional implementando este principio de usar un tipo específico para representar la clave primaria de la entidad.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/</id>
        <title>Microservicios con Spring Cloud, Consul, Nomad y Traefik</title>
        <updated>2020-03-11T11:00:00+01:00</updated>
        <published>2019-10-12T02:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Sin entrar a si los microservicios son adecuados o no son adecuados en una aplicación, está claro que si se utilizan estos tienen varias necesidades. Un servicio de registro y descubrimiento, configuración centralizada, tolerancia a fallos, <em>gateway/load balancer/reverse proxy</em>, trazabilidad y métricas, autenticación, orquestación, &hellip; Los microservicios quizá no sean un gran monolito, quizá mas pequeños y con funcinalidad más acotada, pero el hecho de que se comuniquen a través de un medio más complejo y menos fiable como la red en vez de una llamada a un método y sean más numerosos hacen que la complejidad sea incluso mayor. Este artículo propone un ejemplo con Spring Cloud para los servicios, Consul para el registro y descubrimiento, Nomad para la orquestación y Traefik como <em>gateway</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p>En otro artículo mostraba un ejemplo de <a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">microservicios con Spring Cloud</a> usando únicamente herramientas de <a href="https://spring.io/">Spring</a>. Cada una de esas herramientas cubren una funcionalidad que necesitan los microservicios. Entre ellas:</p>
<ul>
<li>Registro y descubrimiento, con <a href="https://github.com/Netflix/eureka">Eureka</a>. Los microservicios son numerosos, de vida efímera creándose y destruyéndose en diferentes ubicaciones por lo tanto necesitan una forma de localizarse unos a otros, la forma para encontrarse es acudiendo a un servicio donde se registran cuando se inician y se descubren cuando necesitan la ubicación de otro servicio.</li>
<li>Configuración centralizada, con <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a>. Dado el número de microservicios actualizar la configuración de cada uno de ellos puede ser un problema, además dado que se pueden iniciar en diferentes ubicaciones aprovisionarles la configuración adecuada es un reto. En vez de aprovisionar la configuración otra técnica es hacer que cuando se inicien la obtengan de un servicio donde queda centralizada la configuración.</li>
<li>Tolerancia a fallos, con <a href="https://github.com/Netflix/Hystrix">Hyxtrix</a> y <a href="https://github.com/resilience4j/resilience4j">Resilience4j</a>. El medio de comunicación de los microservicios es a través de la red un medio mucho menos confiable que una llamada a un método en un lenguaje de programación en una aplicación monolítica. De modo que los microservicios han de estar preparados para tolerar fallos en sus comunicaciones con otros servicios.</li>
<li><em>Gateway</em>, <em>load balancer</em> y <em>reverse proxy</em> con tolerancia a fallos, con <a href="https://github.com/Netflix/zuul">Zuul</a>. Para aumentar la disponibilidad, escalabilidad y tolerar fallos en algunos servicios se suelen crear varias instancias de cada microservicio pero tener varias instancias hace que sea necesario balancear la carga entre cada una de las instancias. Para que los clientes sean agnósticos del número de instancias se emplea un <em>gateway</em> que proporciona balanceo de carga e implementa a su vez patrones de tolerancia a fallos.</li>
<li>Trazabilidad y correlación de trazas entre diferentes servicios, con <a href="https://spring.io/projects/spring-cloud-sleuth">Spring Cloud Sleuth</a>. Una petición puede desencadenar una cadena de peticiones entre diferentes servicios ubicados en múltiples nodos, para tareas de diagnóstico en caso de querer investigar un <em>bug</em> o que ha ocurrido es necesario correlacionar todas las trazas que ha desencadenado una petición, se implementa asignado un identificativo global a la petición que es transmitido en las llamadas de microservicio a microservicio.</li>
</ul>
<p>En otro <a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/">ejemplo sobre OAuth con Spring</a> mostraba otra funcionalidad:</p>
<ul>
<li><em>Gateway</em>, con <a href="https://spring.io/projects/spring-cloud-gateway">Spring Cloud Gateway</a>.</li>
<li>Autenticación y autorización, con <a href="https://spring.io/projects/spring-security-oauth">Spring Security OAuth</a>.</li>
</ul>
<p>Los microservicios también necesitan monitorización y métricas, en el ejemplo <a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/">Monitorizar una aplicación Java de Spring Boot con Micrometer, Prometheus y Grafana</a>:</p>
<ul>
<li>Con <a href="https://prometheus.io/">Prometheus</a> y <a href="https://grafana.com/">Grafana</a>. Nuevamente el número de instancias que requiere una arquitectura orientada a microservicios origina la necesidad en mayor medida de conocer el estado del sistema, ya sean métricas de los sistemas como uso de CPU, memoria o almacenamiento o de la aplicación como peticiones por segundo y porcentaje de correctas e incorrectas.</li>
</ul>
<p>En esta lista falta un orquestador para el despliegue de los microservicios, que se encargue de su ciclo de vida, escalado de instancias y despliegue con estrategias <em>rolling</em>, <em>blue/green</em> y <em>canary</em>. Es una cosa que le faltaba al ejemplo de microservicios con Spring Cloud.</p>
<ul>
<li>Orquestador de servicios, con <a href="https://www.nomadproject.io/">Nomad</a>. <a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a>, <a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad</a>.</li>
</ul>
<p>Además, en este ejemplo reemplazo varias de estas herramientas de Spring. Sustituyo el servicio de registro y descubrimiento proporcionado por Eureka por <a href="https://www.consul.io/">Consul</a>, el <em>gateway</em>, <em>load balancer</em> y <em>reverse proxy</em> proporcionado por Zuul por <a href="https://traefik.io/">Traefik</a> y añado el orquestador de microservicios <a href="https://www.nomadproject.io/">Nomad</a>.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="200" alt="Traefik" title="Traefik"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="200"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/traefik.svg" width="200" height="200"  class="lozad "></p>
</figure>
</div>
<p>Traefik se configura con los servicios iniciados en los contenedores de Docker utilizando junto con los bloques o <em>stanzas</em> de <em>config</em> y <em>tags</em> en la definición de los servicios de Nomad. Según el criterio definido por el servicio Traefik es capaz de redirigir el tráfico que le llegue al servicio apropiado, entre las posibilidades que puede realizar Traefik es balanceo de carga entre las múltiples instancias que se hayan definido pero también implementa patrones de tolerancia a fallos con reintentos, el patrón <em>circuit breaker</em> o limitar el tráfico para evitar saturar a un servicio con demasiadas peticiones.</p>
<p>El esquema de servicios sería el siguiente. Los <em>job</em> son enviados a Nomad desde la linea de comandos que inicia los contenedores en Docker y registra los servicios en Consul, Traefik monitoriza el catálogo de servicios registrados en Consul y se autoconfigura según los <em>tags</em> asociados a los servicios, los <em>tags</em> se especificar en los archivos de los servicios para Nomad. Una vez iniciados los servicios desde la terminal con un <em>curl</em> o desde la aplicación cliente que accede a Consul para conocer la ubicación del servicio de Traefik envían una petición a Traefik que haciendo balanceo de carga la reenvía a una de las instancias del servicio, el servicio responde y Traefik envía la respuesta al cliente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/esquema-arquitectura_hu4a60e9874e21fb74b7496e4608f1c5ff_356960_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Esquema arquitectura"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/esquema-arquitectura_hu4a60e9874e21fb74b7496e4608f1c5ff_356960_600x450_fit_box_3.png" width="600" height="382" alt="Esquema arquitectura" title="Esquema arquitectura"  class="lozad "></a></p>
<figcaption>Esquema arquitectura</figcaption>
</figure>
</div>
<p>La ejecución del ejemplo requiere <a href="https://www.docker.com/">Docker</a> ya que es en este caso el <em>driver</em> empleado en Nomad para ejecutar los servicios del servicio de configuración, el <em>gateway</em>, el servicio y el cliente del servicio. Nomad además se encarga de registrar los servicios en el servicio de registro y descubrimiento de Consul.</p>
<p>Los contenedores de Docker se añade a una misma red para que puedan comunicarse entre ellos, ha de ser así hasta que no se resuelva una <a href="https://github.com/docker/for-linux/issues/264">petición de Docker para que los contenedores puedan comunicarse con la máquina <em>host</em></a> que los alberga.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker network create --subnet 172.30.0.0/16 nomad&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-network-create.sh</span>
    </div>
</div>
<p>Posteriormente hay que ejecutar Consul y Nomad tras lo cual se puede acceder a sus consolas de estado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev -ui -client<span class="o">=</span>0.0.0.0&#10;$ nomad agent -dev&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-consul-run.sh</span>
    </div>
</div>
<p>Enviar a Nomad los <em>job</em> de Traefik tras lo cual se puede acceder a su consola de estado. El siguiente paso es enviar el <em>job</em> del servicio que proporciona la configuración a los microservicios. Lo anterior únicamente es infraestructura aún no hay ningún servicio que proporcione alguna funcionalidad, la funcionalidad que proporciona el servicio implementado con Spring es simplemente devolver un mensaje como respuesta a la petición que se le realice, se envía el <em>job</em> del servicio a Nomad. Finalmente, el servicio es consumido por un cliente que realiza una petición al servicio cada 1 segundo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew assemble&#10;&#10;$ nomad job run nomad/traefik.nomad&#10;$ nomad job run nomad/configserver.nomad&#10;$ nomad job run nomad/service.nomad&#10;$ nomad job run nomad/client.nomad</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-run.sh</span>
    </div>
</div>
<p>Definición de un servicio en un <em>job</em> para Nomad. <em>count</em> define cuantas instancias del servicio se inicia, la <em>stanza</em> <em>update</em> define como será la actualización cuando se actualice el servicio, la <em>stanza</em> <em>labels</em> contiene la configuración para Traefik, <em>check</em> define los parámetros para la monitorización.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="k">job</span> <span class="s2">&#34;service&#34;</span> {&#10;<span class="n">  datacenters</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;dc1&#34;</span><span class="p">]</span>&#10;&#10;  <span class="k">group</span> <span class="s2">&#34;service&#34;</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;count</span> <span class="o">=</span> <span class="m">2</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">update</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  max_parallel</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">1</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  health_check</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s2">&#34;checks&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  min_healthy_time</span>  <span class="o">=</span> <span class="s2">&#34;20s&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  healthy_deadline</span>  <span class="o">=</span> <span class="s2">&#34;10m&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  progress_deadline</span> <span class="o">=</span> <span class="s2">&#34;20m&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  canary</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">1</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  stagger</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s2">&#34;15s&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">task</span> <span class="s2">&#34;service&#34;</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">config</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image</span> <span class="o">=</span> <span class="s2">&#34;openjdk:11-jdk&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args</span> <span class="o">=</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;bash&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;-c&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;(cd /app &amp;&amp; java -jar /app/service/build/libs/service-1.0.jar --port</span><span class="o">=</span><span class="m">8080</span><span class="p">)</span><span class="err">&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">port_map</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  http</span> <span class="o">=</span> <span class="s2">&#34;8080&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network_mode</span> <span class="o">=</span> <span class="s2">&#34;nomad&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extra_hosts</span> <span class="o">=</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;traefik:172.30.0.3&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;volumes</span> <span class="o">=</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;/home/picodotdev/Software/personal/blog-ejemplos/SpringCloudConsulNomadTraefik/:/app&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">service</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name</span> <span class="o">=</span> <span class="s2">&#34;service&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port</span> <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">check</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  type</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  path</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;/actuator/health&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  interval</span> <span class="o">=</span> <span class="s2">&#34;5s&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  timeout</span>  <span class="o">=</span> <span class="s2">&#34;2s&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tags</span> <span class="o">=</span> <span class="p">[</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.middlewares.service1-stripprefix.stripprefix.prefixes</span><span class="o">=</span><span class="err">/</span><span class="k">service</span><span class="err">&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.middlewares.service1-retry.retry.attempts</span><span class="o">=</span><span class="m">10</span><span class="err">&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.routers.service1.middlewares</span><span class="o">=</span><span class="k">service1</span><span class="err">-</span><span class="k">stripprefix</span><span class="p">,</span><span class="k">service1</span><span class="err">-</span><span class="k">retry</span><span class="err">&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.routers.service1.rule</span><span class="o">=</span><span class="k">PathPrefix</span><span class="p">(</span><span class="err">`/</span><span class="k">service</span><span class="err">`</span><span class="p">)</span><span class="err">&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.services.service1.loadbalancer.server.port</span><span class="o">=</span><span class="m">8080</span><span class="err">&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">resources</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cpu</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">200</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory</span> <span class="o">=</span> <span class="m">1024</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">network</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  mbits</span> <span class="o">=</span> <span class="m">20</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">port</span> <span class="s2">&#34;http&#34;</span> {}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service.nomad</span>
    </div>
</div>
<p>Tanto Consul, Nomad como Traefik ofrecen una consola para ver su estado ubicadas en las siguientes direcciones respectivamente accesibles con el navegador <em>http://127.0.0.1:8500</em>, <em>http://127.0.0.1:4646</em>, <em>http://127.0.0.1:8092</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/consul_hud3df5263e4ff8422559f6f7fab94c175_89169_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/consul_hud3df5263e4ff8422559f6f7fab94c175_89169_200x150_fit_box_3.png" width="160" height="150" alt="Consul" title="Consul"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-1_hu7dea68e7f0ccfcb1f8f0def4178aee0e_68294_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-1_hu7dea68e7f0ccfcb1f8f0def4178aee0e_68294_200x150_fit_box_3.png" width="160" height="150" alt="Nomad" title="Nomad"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-2_hu8ddf74c95bb84f5e3e2ed8d218a76259_132025_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-2_hu8ddf74c95bb84f5e3e2ed8d218a76259_132025_200x150_fit_box_3.png" width="160" height="150" alt="Nomad" title="Nomad"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-1_hu3af731e91707f43f4848927f9f158b51_144944_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Traefik"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-1_hu3af731e91707f43f4848927f9f158b51_144944_200x150_fit_box_3.png" width="160" height="150" alt="Traefik" title="Traefik"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-2_huaf1df74fbd86c4da2a3168542bc294a4_157667_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Traefik"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-2_huaf1df74fbd86c4da2a3168542bc294a4_157667_200x150_fit_box_3.png" width="160" height="150" alt="Traefik" title="Traefik"  class="lozad "></a></p>
<figcaption>Consolas de administración de Consul, Nomad y Traefik</figcaption>
</figure>
</div>
<p>El código del servicio, del cliente implementados con Spring y la salida del cliente son los siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@RestController</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracing</span> <span class="n">tracing</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracer</span> <span class="n">tracer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Counter</span> <span class="n">counter</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">(</span><span class="n">MeterRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">counter</span> <span class="o">=</span> <span class="n">Counter</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">&#34;service.invocations&#34;</span><span class="o">).</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;Total service invocations&#34;</span><span class="o">).</span><span class="na">register</span><span class="o">(</span><span class="n">registry</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">counter</span><span class="o">.</span><span class="na">increment</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Timeout simulation&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//Thread.sleep(random.nextInt(4000));&#10;</span><span class="c1"></span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TraceContext</span><span class="o">.</span><span class="na">Extractor</span><span class="o">&lt;</span><span class="n">HttpServletRequest</span><span class="o">&gt;</span> <span class="n">extractor</span> <span class="o">=</span> <span class="n">tracing</span><span class="o">.</span><span class="na">propagation</span><span class="o">().</span><span class="na">extractor</span><span class="o">((</span><span class="n">HttpServletRequest</span> <span class="n">carrier</span><span class="o">,</span> <span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">carrier</span><span class="o">.</span><span class="na">getHeader</span><span class="o">(</span><span class="n">key</span><span class="o">);</span> <span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Span</span> <span class="n">span</span> <span class="o">=</span> <span class="n">tracer</span><span class="o">.</span><span class="na">nextSpan</span><span class="o">(</span><span class="n">extractor</span><span class="o">.</span><span class="na">extract</span><span class="o">(</span><span class="n">request</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service Span (traceId: %s, spanId: %s)%n&#34;</span><span class="o">,</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (url: %s, remoteAddress_%s, localAddress: %s, traceId: %s, spanId: %s, key: %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">(),</span> <span class="n">request</span><span class="o">.</span><span class="na">getLocalAddr</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProxyService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracing</span> <span class="n">tracing</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracer</span> <span class="n">tracer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">CircuitBreakerConfig</span> <span class="n">circuitBreakerConfiguration</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TimeLimiterConfig</span> <span class="n">timeLimiterConfiguration</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">HttpClient</span> <span class="n">client</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">ProxyService</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">circuitBreakerConfiguration</span> <span class="o">=</span> <span class="n">CircuitBreakerConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">failureRateThreshold</span><span class="o">(</span><span class="n">50</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">recordExceptions</span><span class="o">(</span><span class="n">IOException</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">TimeoutException</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">timeLimiterConfiguration</span> <span class="o">=</span> <span class="n">TimeLimiterConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">timeoutDuration</span><span class="o">(</span><span class="n">Duration</span><span class="o">.</span><span class="na">ofMillis</span><span class="o">(</span><span class="n">2500</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">cancelRunningFuture</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">client</span> <span class="o">=</span> <span class="n">HttpClient</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">().</span><span class="na">version</span><span class="o">(</span><span class="n">HttpClient</span><span class="o">.</span><span class="na">Version</span><span class="o">.</span><span class="na">HTTP_2</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;traefik&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">resource</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s%s&#34;</span><span class="o">,</span> <span class="n">uri</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="s">&#34;127.0.0.1&#34;</span><span class="o">,</span> <span class="s">&#34;traefik&#34;</span><span class="o">),</span> <span class="s">&#34;/service&#34;</span><span class="o">);</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">r</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span> <span class="o">=</span> <span class="n">HttpRequest</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="k">new</span> <span class="n">URI</span><span class="o">(</span><span class="n">resource</span><span class="o">)).</span><span class="na">GET</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getFallback</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">final</span> <span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">request</span> <span class="o">=</span> <span class="n">r</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Span</span> <span class="n">span</span> <span class="o">=</span> <span class="n">tracer</span><span class="o">.</span><span class="na">newTrace</span><span class="o">().</span><span class="na">start</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TraceContext</span><span class="o">.</span><span class="na">Injector</span><span class="o">&lt;</span><span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span><span class="o">&gt;</span> <span class="n">injector</span> <span class="o">=</span> <span class="n">tracing</span><span class="o">.</span><span class="na">propagation</span><span class="o">().</span><span class="na">injector</span><span class="o">((</span><span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">carrier</span><span class="o">,</span> <span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">String</span> <span class="n">value</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="n">carrier</span><span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">value</span><span class="o">);</span> <span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">injector</span><span class="o">.</span><span class="na">inject</span><span class="o">(</span><span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">(),</span> <span class="n">request</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Client Span (traceId: %s, spanId: %s)%n&#34;</span><span class="o">,</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CircuitBreaker</span> <span class="n">circuitBreaker</span> <span class="o">=</span> <span class="n">CircuitBreaker</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;resilience4jCircuitBreakerProxyService&#34;</span><span class="o">,</span> <span class="n">circuitBreakerConfiguration</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TimeLimiter</span> <span class="n">timeLimiter</span> <span class="o">=</span> <span class="n">TimeLimiter</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">timeLimiterConfiguration</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Supplier</span><span class="o">&lt;</span><span class="n">CompletableFuture</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">get</span> <span class="o">=</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpResponse</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">build</span><span class="o">(),</span> <span class="n">HttpResponse</span><span class="o">.</span><span class="na">BodyHandlers</span><span class="o">.</span><span class="na">ofString</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getFallback</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getLimiter</span> <span class="o">=</span> <span class="n">TimeLimiter</span><span class="o">.</span><span class="na">decorateFutureSupplier</span><span class="o">(</span><span class="n">timeLimiter</span><span class="o">,</span> <span class="n">get</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getCircuitBreaker</span> <span class="o">=</span> <span class="n">CircuitBreaker</span><span class="o">.</span><span class="na">decorateCallable</span><span class="o">(</span><span class="n">circuitBreaker</span><span class="o">,</span> <span class="n">getLimiter</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">getCircuitBreaker</span><span class="o">::</span><span class="n">call</span><span class="o">).</span><span class="na">recover</span><span class="o">((</span><span class="n">throwable</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">getFallback</span><span class="o">()).</span><span class="na">get</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProxyService.java</span>
    </div>
</div>
<p>Como hay 2 instancias del servicio y Traefik realiza balanceo de carga utilizando el algoritmo <em>round robbin</em> se observa en la salida con las respuestas que la dirección IP que ha atendido la petición es alternativamente una de las dos instancias del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">...&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 63afa4d0cd4f466c, spanId: 4719dfcc16b6104e, key: value)&#10;Client Span (traceId: 57eeaa436aa09238, spanId: 57eeaa436aa09238)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: 57eeaa436aa09238, spanId: 26dc213be2d933ac, key: value)&#10;Client Span (traceId: 23c748bf222052a6, spanId: 23c748bf222052a6)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 23c748bf222052a6, spanId: 0404d949c6e04c18, key: value)&#10;Client Span (traceId: c45d66a4ec9cf14c, spanId: c45d66a4ec9cf14c)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: c45d66a4ec9cf14c, spanId: e7f6ccf2efb8234b, key: value)&#10;Client Span (traceId: 2fdb3b71a682d2e6, spanId: 2fdb3b71a682d2e6)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 2fdb3b71a682d2e6, spanId: 24ac2a8d2bfb1e6e, key: value)&#10;Client Span (traceId: a33b010e02709c6a, spanId: a33b010e02709c6a)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: a33b010e02709c6a, spanId: 0abe6074fc277af6, key: value)&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En un momento posterior si surge la necesidad de querer desplegar una nueva versión del microservicio basta con generar de nuevo el artefacto del microservicio, cambiando la versión en el archivo <em>build.gradle</em>. El despliegue de la nueva versión se realizan mediante la estrategia <em>canary</em>, manteniendo las instancias con la versión anterior del servicio y añadiendo una nueva con la nueva versión. Si se descubre algún error en la instancia <em>canary</em> se puede revertir el estado a la versión anterior, que consiste en detener la instancia <em>canary</em>. Una vez se comprueba que la instancia con la nueva versión funciona correctamente analizando sus trazas y métricas se envía la order a Nomad de promocionar las instancias de forma progresiva con la versión antigua a la nueva versión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job run nomad/service.nomad&#10;$ nomad job promote service&#10;$ nomad job revert service <span class="m">0</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-promote.sh</span>
    </div>
</div>
<p>El servicio exporta métricas en formato para Prometheus que con Grafana. Según se realizan peticiones al servicio el valor de métrica de contador de llamadas al servicio aumenta de forma progresiva.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl http://127.0.0.1:8093/service/actuator/prometheus <span class="p">|</span> grep <span class="s2">&#34;service.invocations&#34;</span>&#10;<span class="c1"># HELP service_invocations_total Total service invocations</span>&#10;<span class="c1"># TYPE service_invocations_total counter</span>&#10;service_invocations_total 20.0&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service-prometheus.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudConsulNomadTraefik">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./run.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/</id>
        <title>Guía de inicio del gestor de terminales y sesiones tmux</title>
        <updated>2019-10-04T18:00:00+02:00</updated>
        <published>2019-10-04T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las personas que usan de forma intensiva la terminal seguramente usando un multiplexador de terminales como tmux su trabajo es facilitado. Tmux permite dividir una terminal en paneles, ventanas independiente y sesiones. Usando sus múltiples combinaciones de teclas se divide una terminal o una ventana de forma horizontal y vertical en paneles del tamaño que se desee pudiendo de esta forma visualizar al mismo tiempo varias terminales ubicadas en cada panel. También se puede crear una configuración para iniciar tmux con la misma disposición de paneles, ventanas y sesiones.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Las terminales gráficas como <a href="https://www.gnome.org/">GNOME</a> Terminal y <a href="https://www.kde.org/">KDE</a> Konsole soportan pestañas e incluso desde un entorno gráfico en GNU/Linux están disponibles según la distribución varias terminales de texto accesibles con la combinación de teclas <kbd>Ctrl+Alt+F3</kbd> y <kbd>Ctrl+Alt+F4</kbd>, con <kbd>Ctrl+Alt+F2</kbd> se puede retornar a la interfaz gráfica. Sin embargo, ninguna de estas opciones permite dividir la misma terminal en varias ventanas o paneles para realizar operaciones y ver los resultados al mismo tiempo. Por otro lado cuando realizamos una sesión SSH y esta finaliza o termina abruptamente por un fallo en la conexión los procesos que se hayan iniciado desde ella son terminados lo que es especialmente grave si se está realizando una operación importante que puede ocasionar problemas.</p>
<p><a href="https://github.com/tmux/tmux/wiki">Tmux</a> es un multiplexador de terminales con soporte para iniciar sesiones. Con tmux en una misma terminal o sesión SSH es posible dividirla en varios paneles y ventanas. También permite iniciar sesiones y salir de ellas sin que los procesos que están corriendo sean terminados lo que permite iniciar una sesión por ejemplo en el trabajo, dejarla suspendida y luego continuarla desde otro equipo, ubicación o ser iniciada por una persona y continuada por otra.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/images/tmux_hu77ea831290e4496781697c4e09451f28_32101_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Sesión de tmux en la terminal de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/images/tmux_hu77ea831290e4496781697c4e09451f28_32101_300x200_fit_box_3.png" width="300" height="166" alt="Sesión de tmux en la terminal de GNOME" title="Sesión de tmux en la terminal de GNOME"  class="lozad "></a></p>
<figcaption>Sesión de tmux en la terminal de GNOME</figcaption>
</figure>
</div>
<p>Tmux al ser un programa de la terminal todas sus opciones se realizan con el teclado, y no son pocas <a href="https://tmuxcheatsheet.com/">las combinaciones de teclas de su <em>cheatsheet</em> o chuleta</a>. Algunas opciones básicas necesario conocer con son:</p>
<ul>
<li>Dividir una terminal en paneles verticales y horizontales, <kbd>Ctrl-b &ldquo;</kbd>, <kbd>Ctrl-b %</kbd>.</li>
<li>Cambiar entre paneles, <kbd>Ctrl-b q 0..9</kbd>.</li>
<li>Cambiar tamaño de un panel, <kbd>Ctrl-b Up</kbd>, <kbd>Ctrl-b Down</kbd>, <kbd>Ctrl-b Left</kbd>, <kbd>Ctrl-b Right</kbd>. Una panel se maximiza y minimiza con <kbd>Ctrl-b z</kbd>.</li>
<li>Cerrar un panel, <kbd>Ctrl-b x</kbd>.</li>
<li>Cerrar una sesión <kbd>Ctrl-b :, kill-session</kbd>.</li>
<li>Crear, moverse a otra ventana y cerrar una ventana, <kbd>Ctrl-b c</kbd>, <kbd>Ctrl-b 0..9</kbd>, <kbd>Ctrl-b ,</kbd>.</li>
<li>Hacer <em>scroll</em> en las ventanas, <kbd>Ctrl-b [</kbd>.</li>
</ul>
<p>Para facilitar un poco su uso y poder cambiar entre paneles y hacer <em>scroll</em> si se usa en un entorno gráfico se pueden habilitar las funciones del ratón. Basta editar el archivo de configuración <em>~/.tmux.conf</em> o introducir la opción con <kbd>Ctrl-b :</kbd>. En un entorno gráfico habilitar el soporte para el ratón cambia el comportamiento de copiar y pegar, para seleccionar texto hay que hacer uso de la tecla <kbd>Shift</kbd> a la vez que se selecciona el texto con el botón izquierdo del ratón.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">set-option -g mouse on&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tmux.conf</span>
    </div>
</div>
<p>Para automatizar la configuración inicial de tmux soporta un archivo para personalizarlo a través de un <em>script</em> con comandos. Así por ejemplo si siempre se desea una misma configuración de paneles y ventanas con la misma disposición es posible realizarlo con un <em>script</em> como el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>tmux new-session -s <span class="s2">&#34;Session&#34;</span> -d&#10;tmux set-option -g mouse on&#10;tmux split-window -h&#10;tmux split-window -v&#10;tmux attach-session -t <span class="s2">&#34;Session&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tmux.sh</span>
    </div>
</div>
<p>En el <a href="http://man.openbsd.org/OpenBSD-current/man1/tmux.1">manpage de tmux</a> y los enlaces de referencia hay guías con una lista más completa que las operaciones básicas que incluyo en este artículo.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/gmjyMxezIWU" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://robots.thoughtbot.com/a-tmux-crash-course">A tmux Crash Course</a></li>
<li><a href="http://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/">A Quick and Easy Guide to tmux</a></li>
<li><a href="https://www.linode.com/docs/networking/ssh/persistent-terminal-sessions-with-tmux/">How to Use tmux the Terminal Multiplexer</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Tmux">Archlinux Wiki tmux</a></li>
<li><a href="https://leanpub.com/the-tao-of-tmux/read">The Tao of tmux</a></li>
<li><a href="http://www.sromero.org/wiki/linux/aplicaciones/tmux">tmux: Multiplexador de terminal</a></li>
<li><a href="https://askubuntu.com/questions/830484/how-to-start-tmux-with-several-panes-open-at-the-same-time">How to start tmux with several panes open at the same time?</a></li>
<li><a href="https://superuser.com/questions/209437/how-do-i-scroll-in-tmux#209608">How do I scroll in tmux?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/09/novedades-de-java-13/</id>
        <title>Novedades de Java 13</title>
        <updated>2019-10-22T19:00:00+02:00</updated>
        <published>2019-09-27T16:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/09/novedades-de-java-13/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Continuando las mejoras incrementales cada seis meses el 17 de septiembre se publico Java 13. Java 13 incorpora algunas nuevas características interesantes que mejoran un facilitan la lectura del código, entre las más destacadas están los bloques de texto y las expresiones <em>switch</em> mejoradas.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="introducción">Introducción</h3>
<p>Casi coincidiendo con la publicación de Java 13 se publicado <a href="https://jakarta.ee/">Jakarta EE</a> 8 que únicamente tiene como novedad que su propiedad ha pasado a estar baja la fundación Eclipse, es totalmente compatible con <a href="https://picodotdev.github.io/blog-bitix/2018/11/novedades-de-java-ee-8/">Java EE 8 y sus últimas mejoras</a>, las novedades vendrán en versiones posteriores de Jakarta EE en las que se dará importancia a la tendencia de las aplicaciones para su funcionamiento en entornos orientados a la nube. Casi al mismo tiempo se ha publicado <a href="https://openjfx.io/">JavaFX</a> 13 ya fuera del JDK en onde puede seguir su propio ciclo de publicaciones independiente del JDK.</p>
<ul>
<li><a href="https://openjdk.java.net/projects/jdk/13/">Características de Java 13</a></li>
<li><a href="https://www.oracle.com/java/technologies/javase/13-relnote-issues.html">Notas de publicación de Java 13</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/13/docs/api/">Documentación Javadoc de Java 13</a></li>
<li><a href="https://blogs.oracle.com/javamagazine/october-2019-v2">JavaMagazine: Inside Java 13</a></li>
</ul>
<p>Las mejoras incluídas en esta versión son:</p>
<ul>
<li>JEP 350: <a href="https://openjdk.java.net/jeps/350">Dynamic CDS Archives</a></li>
<li>JEP 351: <a href="https://openjdk.java.net/jeps/351">ZGC: Uncommit Unused Memory</a></li>
<li>JEP 353: <a href="https://openjdk.java.net/jeps/353">Reimplement the Legacy Socket API</a></li>
<li>JEP 354: <a href="https://openjdk.java.net/jeps/354">Switch Expressions (Preview)</a></li>
<li>JEP 355: <a href="https://openjdk.java.net/jeps/355">Text Blocks (Preview)</a></li>
</ul>
<h3 id="nuevas-características-en-vista-previa">Nuevas características en vista previa</h3>
<h4 id="bloques-de-texto">Bloques de texto</h4>
<p>Para definir una cadena de caracteres que tuviese varias lineas en Java había que emplear concatenación de cadenas, si esa cadena contiene el caracter comilla doble <em>&quot;</em> de inicio de cadena había que escaparlo, si esa cadena contenía saltos de línea había que emplear el caracter de escape de salto de línea <em>\n</em>. El resultado es una cadena con problemas de legibilidad por los caracteres de escape que incluye en el código fuente del lenguaje. Esto podría se al definir una cadena de texto que tuviese elementos HTML, JSON, sentencias SQL o expresiones regulares.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">String</span> <span class="n">html</span> <span class="o">=</span> <span class="s">&#34;&lt;html&gt;\n&#34;</span> <span class="o">+</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;   &lt;body&gt;\n&#34;</span> <span class="o">+</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;&nbsp;&nbsp;&nbsp;&nbsp;  &lt;p class=\&#34;text\&#34;&gt;Hello, Escapes&lt;/p&gt;\n&#34;</span> <span class="o">+</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;   &lt;/body&gt;\n&#34;</span> <span class="o">+</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;&lt;/html&gt;\n&#34;</span><span class="o">;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>TextBlock-1.java</span>
    </div>
</div>
<p>Con los bloques de texto se emplean una triple comilla doble <em>&quot;</em> para la apertura y cierre de la cadena.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">String</span> <span class="n">html</span> <span class="o">=</span> <span class="s">&#34;&#34;&#34;&#10;</span><span class="s">&nbsp;&nbsp;&nbsp;&nbsp;&lt;html&gt;&#10;</span><span class="s">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;&#10;</span><span class="s">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;p class=&#34;</span><span class="n">text</span><span class="s">&#34;&gt;Hello, Text Blocks&lt;/p&gt;&#10;</span><span class="s">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;&#10;</span><span class="s">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/html&gt;&#34;&#34;&#34;</span><span class="o">;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>TextBlock-2.java</span>
    </div>
</div>
<p>Como ayuda a las cadenas de texto en la clase <a href="https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/String.html">String</a> se han añadido varios métodos para eliminar la indentación (<em>String::stripIndent</em>), traducir los caracteres secuencia de escape (<em>String::translateEscapes</em>) y formatear una cadena usando un método de instancia (<em>String::formatted</em>).</p>
<ul>
<li><a href="https://blogs.oracle.com/javamagazine/text-blocks-come-to-java">Text Blocks Come to Java</a></li>
</ul>
<h4 id="expresiones-_switch_-mejoradas">Expresiones <em>switch</em> mejoradas</h4>
<p>En las <a href="https://picodotdev.github.io/blog-bitix/2019/03/novedades-de-java-12/">novedades de Java 12</a> se añadió la posibilidad de los <em>switch</em> fueran expresiones que retornan un valor en vez de sentencias y se evita el uso de la palabra reservada <em>break</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">String</span> <span class="n">numericString</span> <span class="o">=</span> <span class="k">switch</span><span class="o">(</span><span class="n">integer</span><span class="o">)</span> <span class="o">{</span> &#10;   <span class="k">case</span> <span class="n">0</span> <span class="o">-&gt;</span> <span class="s">&#34;zero&#34;</span><span class="o">;</span> &#10;   <span class="k">case</span> <span class="n">1</span><span class="o">,</span> <span class="n">3</span><span class="o">,</span> <span class="n">5</span><span class="o">,</span> <span class="n">7</span><span class="o">,</span> <span class="n">9</span> <span class="o">-&gt;</span> <span class="s">&#34;odd&#34;</span><span class="o">;</span> &#10;   <span class="k">case</span> <span class="n">2</span><span class="o">,</span> <span class="n">4</span><span class="o">,</span> <span class="n">6</span><span class="o">,</span> <span class="n">8</span><span class="o">,</span> <span class="n">10</span> <span class="o">-&gt;</span> <span class="s">&#34;even&#34;</span><span class="o">;</span> &#10;   <span class="k">default</span> <span class="o">-&gt;</span> <span class="s">&#34;N/A&#34;</span><span class="o">;</span> &#10;<span class="o">};</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Switch-1.java</span>
    </div>
</div>
<p>En Java 13 en vez únicamente el valor a retornar se permite crear bloques de sentencias para cada rama <em>case</em> y retornar el valor con la palabra reservada <em>yield</em>. En los bloques de sentencias puede haber algún cálculo más complejo que directamente retornar el valor deseado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">String</span> <span class="n">numericString</span> <span class="o">=</span> <span class="k">switch</span><span class="o">(</span><span class="n">integer</span><span class="o">)</span> <span class="o">{</span> &#10;   <span class="k">case</span> <span class="n">0</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">calculateZero</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">yield</span> <span class="n">value</span><span class="o">;</span>&#10;   <span class="o">}</span> <span class="o">;</span> &#10;   <span class="k">case</span> <span class="n">1</span><span class="o">,</span> <span class="n">3</span><span class="o">,</span> <span class="n">5</span><span class="o">,</span> <span class="n">7</span><span class="o">,</span> <span class="n">9</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">calculateOdd</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">yield</span> <span class="n">value</span><span class="o">;</span>&#10;   <span class="o">};</span>&#10;   <span class="k">case</span> <span class="n">2</span><span class="o">,</span> <span class="n">4</span><span class="o">,</span> <span class="n">6</span><span class="o">,</span> <span class="n">8</span><span class="o">,</span> <span class="n">10</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">calculateEven</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">yield</span> <span class="n">value</span><span class="o">;</span>&#10;   <span class="o">};</span>&#10;   <span class="k">default</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">calculateDefault</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">yield</span> <span class="n">value</span><span class="o">;</span>&#10;   <span class="o">};</span>&#10;<span class="o">};</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Switch-2.java</span>
    </div>
</div>
<ul>
<li><a href="https://blogs.oracle.com/javamagazine/inside-java-13s-switch-expressions-and-reimplemented-socket-api">Inside Java 13’s switch Expressions and Reimplemented Socket API</a></li>
</ul>
<h4 id="otras-características-incorporadas-y-cambios">Otras características incorporadas y cambios</h4>
<p>Las las otras tres características destacadas <em>Dynamic CDS Archives</em>, <em>ZGC: Uncommit Unused Memory</em> para la mejora del recolector de basura y <em>Reimplement the Legacy Socket API</em> reescribiendo el código para los <em>sockets</em> en lenguaje Java son cambios internos que afectan a la plataforma Java pero no al lenguaje.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.mkyong.com/java/what-is-new-in-java-13/">What is new in Java 13</a></li>
<li><a href="https://blog.codefx.org/java/java-13-guide/">Definitive Guide To Java 13</a></li>
<li><a href="https://jaxenter.com/java-13-jdk-deep-dive-new-features-162272.html">Java 13 – a deep dive into the JDK’s new features</a></li>
<li><a href="https://jaxenter.com/java-13-text-blocks-162278.html">Java 13 – why text blocks are worth the wait</a></li>
<li><a href="https://jaxenter.com/jakarta-ee-8-future-enterprise-java-161984.html">Jakarta EE 8 is sprinting towards an exciting future for enterprise Java</a></li>
<li><a href="https://dzone.com/articles/the-differences-between-java-ee-jakarta-ee-and-mic">The Differences Between Java EE, Jakarta EE, and MicroProfile</a></li>
<li><a href="https://jakarta.ee/documents/insights/cloud_native_java_ebook.pdf">Cloud Native Java</a></li>
<li><a href="https://jaxenter.com/openjfx-13-interview-dirk-lemmermann-161967.html">OpenJFX 13 – “JavaFX gets its own identity”</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/</id>
        <title>Librería editor de markdown JavaScript y procesador de markdown para generar HTML con Java</title>
        <updated>2019-09-20T15:00:00+02:00</updated>
        <published>2019-09-20T13:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/javascript.svg" width="200" height="200" alt="JavaScript" title="JavaScript"  class=""></p>
</div>
<p>Algunas aplicaciones permiten escribir contenido para posteriormente mostrarse en una página web. Permitir introducir directamente en texto en formato HTML es peligroso ya que puede causar problemas si no es correcto y ha de validarse para no permitir introducir archivos CSS, archivos JavaScript u otras etiquetas que supongan un problema de seguridad o desmaqueten la página web. Una alternativa es utilizar como entrada texto en formato <em>markdown</em> y posteriormente transformarlo a contenido en formato HTML.</p>
<p><em>Markdown</em> es un formato de texto simple con una sintaxis que permite introducir títulos, negritas, itálica, listas y listas numeradas, enlaces o imágenes. El texto en formato <em>markdown</em> se puede transformar posteriormente a formato HTML. Hay múltiples librerías de JavaScript para crear un editor <em>markdown</em> con algunos botones para introducir las opciones básicas e incluso previsualizar el contenido.</p>
<p>Como editor JavaScript para <em>markdown</em> de las varias opciones que he encontrado la que más me ha gustado es <a href="https://pandao.github.io/editor.md/en.html">Editor.md</a> por sus numerosas opciones, documentación y ejemplos, aunque no tiene una versión reciente. Posee barra de herramientas para realizar opciones básicas de edición, previsualizador de contenido HTML, colapsador de secciones, manejadores de eventos, subir imágenes, internacionalización, personalizar la barra de herramientas como está descrito en su <a href="https://pandao.github.io/editor.md/examples/index.html">sección de ejemplos</a>. En la <a href="https://github.com/pandao/editor.md">página de Editor.md en GitHub</a> están documentadas las opciones de configuración.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">link</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;resources/css/editormd.css&#34;</span> <span class="p">/&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;resources/js/editormd.min.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">editor</span> <span class="o">=</span> <span class="nx">editormd</span><span class="p">(</span><span class="s2">&#34;test-editor&#34;</span><span class="p">,</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// width  : &#34;100%&#34;,&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// height : &#34;100%&#34;,&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">path</span>   <span class="o">:</span> <span class="s2">&#34;resources/lib/&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;test-editor&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">textarea</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;display:none;&#34;</span><span class="p">&gt;</span>### Editor.md&#10;&#10;**Editor.md**: The open source embeddable online markdown editor, based on CodeMirror <span class="err">&amp;</span> jQuery <span class="err">&amp;</span> Marked.&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">textarea</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>index-1.html</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/images/editor-md_hu8590a6b882a54d9f2c5070316e74f92a_151427_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Editor JavaScript de markdown"><img src="https://picodotdev.github.io/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/images/editor-md_hu8590a6b882a54d9f2c5070316e74f92a_151427_650x450_fit_box_3.png" width="650" height="278" alt="Editor JavaScript de markdown" title="Editor JavaScript de markdown"  class="lozad "></a></p>
<figcaption>Editor JavaScript de markdown</figcaption>
</figure>
</div>
<p>Una vez que se obtiene el texto en formato <em>markdown</em> en algún momento al visualizarlo como parte del código fuente en una página web hay que transformarlo a formato HTML, para esto en Java hay varias librerías algunas ya obsoletas, antiguas y sin mantenimiento. De las que su desarrollo sigue activa una es <a href="https://github.com/vsch/flexmark-java">Flexmark Java</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.vladsch.flexmark.samples</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">com.vladsch.flexmark.util.ast.Node</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.vladsch.flexmark.html.HtmlRenderer</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.vladsch.flexmark.parser.Parser</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.vladsch.flexmark.util.data.MutableDataSet</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BasicSample</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">MutableDataSet</span> <span class="n">options</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MutableDataSet</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// uncomment to set optional extensions&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//options.set(Parser.EXTENSIONS, Arrays.asList(TablesExtension.create(), StrikethroughExtension.create()));&#10;</span><span class="c1"></span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// uncomment to convert soft-breaks to hard breaks&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//options.set(HtmlRenderer.SOFT_BREAK, &#34;&lt;br /&gt;\n&#34;);&#10;</span><span class="c1"></span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Parser</span> <span class="n">parser</span> <span class="o">=</span> <span class="n">Parser</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="n">options</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HtmlRenderer</span> <span class="n">renderer</span> <span class="o">=</span> <span class="n">HtmlRenderer</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="n">options</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// You can re-use parser and renderer instances&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Node</span> <span class="n">document</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">&#34;This is *Sparta*&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">html</span> <span class="o">=</span> <span class="n">renderer</span><span class="o">.</span><span class="na">render</span><span class="o">(</span><span class="n">document</span><span class="o">);</span>  <span class="c1">// &#34;&lt;p&gt;This is &lt;em&gt;Sparta&lt;/em&gt;&lt;/p&gt;\n&#34;&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">html</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s2">&#34;com.vladsch.flexmark:flexmark-all:0.50.40&#34;</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.markdownguide.org/getting-started">Markdown Guide</a></li>
<li><a href="https://www.markdownguide.org/basic-syntax">Markdown Basic Syntax</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/</id>
        <title>Desempaquetado de PlayStation 4 Slim de 1 TB</title>
        <updated>2019-09-18T14:30:00+02:00</updated>
        <published>2019-09-08T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>A pesar de estar la PlayStation 4 al final de su ciclo de vida igualmente puede ser un buen momento para comprarla por otros motivos. Como por ejemplo que ahora es cuando mejor catálogo de juegos posee y que se ofrece en un modelo <em>slim</em> que consume menos energía, es sensiblemente más pequeña, se calienta menos y es más silenciosa. Como usuario de GNU/Linux y un Intel NUC como ordenador personal una consola es una buena opción como plataforma de juegos sin complicaciones.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/playstation.svg" width="200" height="155" alt="PlayStation" title="PlayStation"  class=""></p>
</div>
<p>Desde que me pase a <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> como mi único sistema operativo para mi ordenador personal he dejado de jugar a juegos, en parte porque el ordenador que tenía ya no era suficiente para mover los juegos actuales del momento y porque luego como mi equipo elegí un ordenador portátil que no son los más indicados para los juegos porque estos le exigen a la tarjeta gráfica y al procesador buen desempeño lo que resulta en calor que en los portátiles sus sistemas de refrigeración tienen importantes limitaciones para mantenerse en temperaturas bajas.</p>
<p>Más tarde compré un <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Intel NUC Bean Canyon</a> que es un ordenador muy compacto de escritorio con un procesador de bajo consumo, tiene una tarjeta gráfica Intel integrada pero suficientemente capaz para mover juegos bajando detalles como <a href="https://picodotdev.github.io/blog-bitix/2018/12/como-usar-wine-para-jugar-en-gnu-linux-a-juegos-de-windows/">Diablo 3 o World of Warships usando Wine</a>. Sin embargo al NUC con los juegos le hace alcanzar temperaturas de entre 70º y 80º lo que tampoco es lo ideal en su funcionamiento.</p>
<p>Así que llevaba un tiempo buscando una consola pero al haber estado varios años con portátil no tenía ni siquiera un pantalla externa, esperé a comprar el NUC para adquirir un <a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/">monitor BenQ PD2700Q</a> de 27 pulgadas y resolución 2K. Salvo algún momento muy puntual he estado más de una década sin jugar a juegos recientes, de los últimos que jugué que recuerde fueron el <a href="https://en.wikipedia.org/wiki/Diablo_II">Diablo 2</a> y el <a href="https://en.wikipedia.org/wiki/Fallout_Tactics%3A_Brotherhood_of_Steel">Fallout Tactics</a>, más o menos desde el ¿2004-2006?. Tengo instalados varios <a href="https://picodotdev.github.io/blog-bitix/2018/02/consola-de-juegos-retro-con-lakka-y-una-raspberry-pi/">juegos retro con emulador</a> y he comprado unos <a href="https://amzn.to/2UHzGNh">mandos estilo Super NES</a>, aunque algunos juegos retro son míticos al menos en mis recuerdos y siguen siendo muy divertidos para pasar un rato los juegos actuales son mucho mejores al menos en calidad gráfica.</p>
<p>He evaluado varias posibilidades como una <a href="https://www.playstation.com/es-es/explore/ps3/">PlayStation 3</a> de segunda mano, una <a href="https://www.playstation.com/es-es/explore/ps4/">PlayStation 4</a> o una <a href="https://www.xbox.com/es-ES/xbox-one-s">Xbox One</a> también de segunda mano si pudiese conseguir o nueva. Aún sabiendo que la PlayStation 5 será lanzada en el 2020 en poco menos de un año. Finalmente me he decidido por comprar una PlayStation 4 nueva, no de segunda mano ya que encontrar alguna en <a href="https://es.wallapop.com/">Wallapop</a> no me ha resultado sencillo de un vendedor que la ponga a buen precio, y no casi a precio de tienda pero sin garantía, sea serio para quedar, la confianza por saber si funciona correctamente, que haya estado no muy usada, bien cuidada y que no tiene garantía en caso de fallo. Como no he jugado a juegos recientemente el catálogo que tiene ya al final de su ciclo de vida es completamente nuevo para mi, es muy amplio y seguro que me ofrece juegos durante varios años incluso aún cuando la PlayStation 5 sea comercializada. Otra opción sería esperar a <a href="https://stadia.google.com">Stadia</a> pero yo tengo un lento ADSL que dudo tenga la capacidad para jugar a 1080p sin problemas, pasarme a fibra me resultaría algo más cara la cuota mensual de internet y el catálogo de Stadia inicialmente va a ser bastante limitado comparado con el de la PS, el futuro puede ser algo como Stadia pero hasta pasados unos años y si el modelo tiene éxito no, no voy a esperar a que tenga un catálogo amplio.</p>
<p>Nuevas ya solo se puede elegir el modelo <em>Slim</em> que reduce el consumo de energía de los modelos anteriores, eso le permite tener un tamaño más reducido, generar menos calor y ser más silenciosa. Está la versión de 500 GB y de 1 TB de capacidad de disco duro, he optado por la de 1 TB ya que 500 GB dicen que si se es alguien de jugar a muchos juegos hay que estar administrando con más cuidado el espacio del disco duro, admite cambiar el disco duro interno por uno de 2 TB y también admite disco duro externo USB 3.0 de hasta 8 TB pero por no cambiarle el disco duro con su coste adicional de adquirirlo y no tener que tener un disco duro externo he preferido el modelo de 1 TB. Hay juegos de 10, 25 y 50 GB así que dependiendo de la cantidad de juegos que un pretenda instalar convendrá un modelo de menor o mayor capacidad. La <em>Slim</em> de 500 GB se comercializa a 290 € sin juegos y la de 1 TB con un <em>pack</em> de juegos a 350 €, en algún momento de rebajas el descuento puede estar en 50 €. Un PC dedicado a juegos es mucho más caro, solo la tarjeta gráfica puede valer eso o más.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/PlayStation_4_models">Modelos de PlayStation</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-models_hu8134221e12cd61054ab42af1aad12397_7988_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Modelos de PlayStation 4"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-models_hu8134221e12cd61054ab42af1aad12397_7988_300x200_fit_q90_box.jpg" width="300" height="165" alt="Modelos de PlayStation 4" title="Modelos de PlayStation 4"  class="lozad "></a></p>
<figcaption>Modelos de PlayStation 4</figcaption>
</figure>
</div>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="playstation-xbox-stadia-o-pc">PlayStation, Xbox, Stadia o PC</h3>
<p>Entre la Xbox y la PlayStation he preferido la última aún siendo más cara por tres motivos principalmente. Uno, porque los juegos de la PlayStation me ha dado la sensación de que son más baratos al menos sus respectivas tiendas digitales, la PlayStation tiene varios juegos muy populares catalogados como <em>PlayStation Hits</em> al precio de unos razonables 20 € y la PS4 parece tener más ofertas puntuales en algunos juegos para incentivar su compra, los juegos de la Xbox en lo que he visto los mismos están alrededor de 30 € cuando en la PS están en 20 €. Dos, porque el mano de la Xbox va con pilas y no quiero estar cambiándolas o usando pilas recargables, creo que se puede comprar una batería aunque aparte con su cargador. La Xbox está más barata para hacerla más atractiva en el mercado en parte seguramente porque la consola que ha vendido más unidades ha sido la PlayStation, la he visto en algunos momentos a 200 € la de 1 TB con unidad de disco cuando la PlayStation en algunos momentos de rebajas únicamente la he visto a 300 € aunque con un paquete de juegos. Tres, para jugar a través de internet en la Xbox se requiere una suscripción mensual y en la PlayStation para el <em>World of Warships</em> que es del estilo <em>free to play</em> no he visto que sea necesario, y este es un juego que me llama la atención.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim_hud13ec7dd7c87198a611f7529b55f3055_70744_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="PlayStation 4 Slim y Xbox One S"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim_hud13ec7dd7c87198a611f7529b55f3055_70744_300x200_fit_q90_box.jpg" width="300" height="169" alt="PlayStation 4 Slim y Xbox One S" title="PlayStation 4 Slim y Xbox One S"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/xbox-one-s_hu9b12101d659117ac4d6719e9a70768cc_70108_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/xbox-one-s_hu9b12101d659117ac4d6719e9a70768cc_70108_200x150_fit_q90_box.jpg" width="200" height="113" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a></p>
<figcaption>PlayStation 4 Slim y Xbox One S</figcaption>
</figure>
</div>
<p>La mayoría de juegos están en ambas consolas, salvo unos cuantos exclusivos que tiene cada una (hay más exclusivos en la PS). Revisando la lista que hecho de los juegos que me han llamado la atención de la PlayStation  solo tenía tres o cuatro exclusivos apuntados, así que esto para mi no ha sido determinante. Las dos consolas ofrecen diría que la misma calidad al utilizar ambas un procesador SOC similar producido por <a href="https://www.amd.com/es">AMD</a>, asi que esto tampoco es determinante para elegir una u otra plataforma.</p>
<p>En el caso de Stadia con mi conexión actual de ADSL no creo que me posibilite jugar con una calidad de al menos 1080p y está por ver que tal resulta la jugabilidad con las latencias. También está por ver a que precio salen los juegos en Stadia ya que en la opción sin suscripción de comprar únicamente los juegos y poder jugarlos cuanto se quiera me extraña que sean al mismo precio que en la PS, quizá me equivoque pero creo que los juegos de Stadia serán más caros o será un punto a su favor por no tener que hacer un desembolso inicial en hardware.</p>
<p>Si hubiese sabido que los juegos con Wine en GNU/Linux funcionan en lo que probado tan bien quizá en vez de un NUC hubiese evaluado de forma más positiva un ordenador ITX, aún así por el tamaño posiblemente hubiese seguido eligiendo el NUC y la PlayStation. Quizá en un futuro si que opte por un ITX o un equipo del tamaño del NUC pero más destinado a <em>gaming</em> como los de <a href="https://www.zotac.com/es/">Zotac</a>.</p>
<h3 id="la-nueva-generación-playstation-5-y-xbox-series-xs">La nueva generación, PlayStation 5 y Xbox Series X/S</h3>
<p>Con la nueva generación de consolas ya a la venta en el mercado tanto de <a href="https://www.sony.es/">Sony</a> con la PlayStation 5 y <a href="https://www.microsoft.com/">Microsoft</a> con la Xbox Series X/S optar por una de esta nueva generación es la opción recomendada. Ya sea en la versión más económica de la generación <a href="https://amzn.to/33ETjLr">Xbox Series S</a> pero con diferentes características en cuanto a potencia y capacidad de almacenamiento que la <a href="https://amzn.to/36xjIfZ">Xbox Series X</a> que es la que compite con la <a href="https://amzn.to/3qnTmF1">PlayStation 5 con disco</a> y la <a href="https://amzn.to/3lzY7rD">PlayStation 5 digital</a> que es algo más económica pero que se deshace del formato físico en discos.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/10/sobre-la-generacion-de-consolas-playstation-5-y-xbox-series-x-s-antes-de-que-se-comercialice-y-la-renovacion-del-hardware-de-pc/">Sobre la generación de consolas PlayStation 5 y Xbox Series X/S antes de que se comercialice y la renovación del hardware de PC</a></li>
</ul>
<p>Dado que ambas consolas ofrecen compatibilidad con los juegos de la anterior generación y los mejoran con tiempos de carga más reducidos y mejores tasas de imágenes por segundo son mejor opción que una consola de la anterior generación Xbox One o PlayStation 4 a no ser que estas se encuentren a un muy buen precio teniendo en cuenta que la Xbox Series S ya tiene un precio muy atractivo.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08KKJ37F7&amp;linkId=25e9abfe5ed88b98b9d15bd0c0c43455" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08KJF2D25&amp;linkId=617850e00511a810b16dd2342a83217c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08KJPLGLF&amp;linkId=e98b40ae43ea944046a09652d72c4d4b" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08H97WTBL&amp;linkId=f5f9e03cc0e549dba09905a2a8fc0b66" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08H99878P&amp;linkId=9de8d6693c56e067add3ba5c63920294" title="Amazon" class="lozad"></iframe>
</div>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08H93ZRLL&amp;linkId=3279bf68c4f6647fc51849ce5cc1290c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B087VM5XC6&amp;linkId=608090c668f2d3d616f26e0787fa6c0c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08JW624NN&amp;linkId=9af902ac772d3ea3ecf44d492b15c9d6" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="lista-de-juegos-de-playstation">Lista de juegos de PlayStation</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/List_of_best-selling_PlayStation_4_video_games">Juegos PlayStation 4</a></li>
<li><a href="https://en.wikipedia.org/wiki/Category:PlayStation_4-only_games">Juegos exclusivos PlayStation 4</a></li>
<li><a href="https://es.wikipedia.org/wiki/Anexo:Videojuegos_m%C3%A1s_vendidos_de_la_PlayStation_4">Juegos más vendidos PlayStation 4</a></li>
<li><a href="https://en.wikipedia.org/wiki/List_of_PlayStation_4_free-to-play_games">Juegos <em>free to play</em> PlayStation 4</a></li>
</ul>
<h3 id="lista-de-juegos-de-xbox">Lista de juegos de XBOX</h3>
<ul>
<li><a href="https://es.wikipedia.org/wiki/Anexo:Videojuegos_para_Xbox_One">Juegos Xbox One</a></li>
<li><a href="https://es.wikipedia.org/wiki/Anexo:Videojuegos_m%C3%A1s_vendidos_de_la_Xbox_One">Video juegos más vendidos de Xbox One</a></li>
</ul>
<h3 id="juegos-digitales-o-físicos">Juegos digitales o físicos</h3>
<p>Los juegos que tengo apuntados como candidatos a jugar son los siguientes, tendría entretenimiento para varios años. Muchos usuarios de consolas prefieren los juegos físicos, el motivo puede ser por coleccionarlos, ponerlos en una balda y verlos, palparlos y recordar algún buen momento, por poder venderlos una vez completados o por poderlos jugar siempre que deseen sin necesidad de internet o ante un hipotético caso de que Sony ya no preste el servicio.</p>
<p>En mi caso seguramente adquiera la mayoría en formato digital por la comodidad de no tener que estar introduciendo el disco en una unidad lectora que con el uso intensivo es probable que empiece a fallar, en mi caso no soy coleccionista y prefiero ahorrar espacio por no tener objetos en casa que no uso de forma cotidiana. La Xbox por ejemplo ofrece una edición completamente digital a un más atractivo precio que su edición equivalente con unidad lectora.</p>
<h3 id="mi-lista-de-juegos">Mi lista de juegos</h3>
<p>La PS5 seguramente ofrezca compatibilidad con los juegos de PS4 lo que hará que posee un buen catálogo de salida y que todos los juegos digitales de la PS4 en principio puedan ser aprovechados en la PS5, así que los juegos digitales no me parece mala idea. Después de averiguar <a href="https://picodotdev.github.io/blog-bitix/2020/11/como-encontrar-las-mejores-ofertas-de-juegos-para-consola-y-pc/">cómo encontrar los juegos en oferta</a> iré comprando según reciba una notificación de los de esta lista.</p>
<ul class="list-columns">
    <li>Watch Dogs 1 y 2</li>
    <li>Last of Us 1 y 2 (*)</li>
    <li>Grand Theft Auto V</li>
    <li>Red Dead Redemtion 2</li>
    <li>Tropico 6</li>
    <li>The Witcher 3</li>
    <li>The Division 1 y 2</li>
    <li>Trine 1, 2, 3 y 4</li>
    <li>Darkest Dungeon</li>
    <li>XCOM 2</li>
    <li>Divinity: Original Sin 2</li>
    <li>Dirt Rally 2.0</li>
    <li>Dark Souls</li>
    <li>Hellblade</li>
    <li>For the king</li>
    <li>Train Sim World</li>
    <li>World of Warships</li>
    <li>World of Tanks</li>
    <li>Fortnite</li>
    <li>Assasins Creed</li>
    <li>FIFA</li>
    <li>Horizon Zero Dawn (*)</li>
    <li>God of War (*)</li>
    <li>Blodborne (*)</li>
    <li>Far Cry 5</li>
    <li>Fallout 4</li>
    <li>Days Gone (*)</li>
    <li>Uncharted (*)</li>
    <li>Metro Exodus</li>
    <li>Lords Of The Fallen</li>
    <li>La Tierra Media: Sombras De Guerra</li>
    <li>Little Big Planet</li>
    <li>The Last Guardian</li>
    <li>The Order</li>
    <li>Titanfall</li>
    <li>Until Down (*)</li>
    <li>Rime</li>
    <li>Journey</li>
    <li>Wasteland 3</li>
    <li>Rage 2</li>
    <li>Infamous Second Son</li>
    <li>Frostpunk</li>
</ul>
<p>Estos son los juegos que incluye el <em>pack</em> del modelo de la consola que he comprado. Aunque es muy posible que al final que alguno lo acabe adquiriendo en formato digital.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-1_hub2098bc21bde4a7dc734776a4ebc86aa_4392443_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-1_hub2098bc21bde4a7dc734776a4ebc86aa_4392443_200x150_fit_q90_box.jpg" width="200" height="87" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-2_hu35c019b802ec1e8f1de2f6abf1b82e2e_5112261_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-2_hu35c019b802ec1e8f1de2f6abf1b82e2e_5112261_200x150_fit_q90_box.jpg" width="200" height="87" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-3_hu895a037ab351cafee9c1116294203dfb_2989684_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-3_hu895a037ab351cafee9c1116294203dfb_2989684_200x150_fit_q90_box.jpg" width="120" height="150" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-4_hu61423545450bbdae0f141b1eb801713c_3885748_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-4_hu61423545450bbdae0f141b1eb801713c_3885748_200x150_fit_q90_box.jpg" width="115" height="150" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-5_hu908d52115fcb454052b1b102e6fc15eb_4137515_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-5_hu908d52115fcb454052b1b102e6fc15eb_4137515_200x150_fit_q90_box.jpg" width="119" height="150" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-6_hu7acedfb703bbd209ec26e87043755f0d_3849584_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-6_hu7acedfb703bbd209ec26e87043755f0d_3849584_200x150_fit_q90_box.jpg" width="120" height="150" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-7_hu5f458025393e15490df3a00903044882_4003881_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-7_hu5f458025393e15490df3a00903044882_4003881_200x150_fit_q90_box.jpg" width="117" height="150" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-8_hu1b0cdcd29c4aafbe36c59c6df411e7be_4514120_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Juegos incluidos en el pack"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/juegos-8_hu1b0cdcd29c4aafbe36c59c6df411e7be_4514120_200x150_fit_q90_box.jpg" width="120" height="150" alt="Juegos incluidos en el pack" title="Juegos incluidos en el pack"  class="lozad "></a></p>
<figcaption>Juegos incluidos en el pack</figcaption>
</figure>
</div>
<h3 id="desempaquetado-playstation-4-slim-1-tb">Desempaquetado PlayStation 4 Slim 1 TB</h3>
<p>La PS4 tiene 1.84 TFLOPs de potencia, la PS5 tendrá alrededor de 10 TFLOPS con lo que es claro que será mucho más potente y eso se notará en la calidad gráfica muy significativamente, posiblemente incorporando trazado de rayos que dotará a las imágenes de una física de luces y reflejos mucho más realista. La PlayStation 4 Pro tiene más potencia, 4 TFLOPS pero consume más energía, es algo más grande y más ruidosa, ofrece algo mejor calidad gráfica para los juegos que los aprovechen o tasas de fotogramas más estables, pero realmente no hay mucha más diferencia.</p>
<p>Las <a href="https://www.playstation.com/en-gb/explore/ps4/tech-specs/">especificaciones ténicas de la PlayStation 4 Slim</a> son:</p>
<ul>
<li>Nombre de producto: PlayStation®4</li>
<li>Código de producto: CUH-2000 series</li>
<li>Procesador principal: Single-chip custom processor, CPU : x86-64 AMD &ldquo;Jaguar&rdquo;, 8 cores, GPU : 1.84 TFLOPS, AMD Radeon™ based graphics engine</li>
<li>Memoria: GDDR5 8GB</li>
<li>Almacenamiento: 500GB, 1TB</li>
<li>Dimensiones externas: 265×39×288 mm aproximadamente (ancho × alto × longitud)</li>
<li>Peso: 2.1 kg aproximadamente</li>
<li>Unidad disco: BD/DVD, DVD × 8 CAV, BD × 6 CAV (solo lectura)</li>
<li>Entrada/Salida: Super-Speed USB (USB 3.1 Gen1) 2 puertos</li>
<li>1 puerto AUX</li>
<li>Red: Ethernet 10BASE-T, 100BASE-TX, 1000BASE-T x1, IEEE 802.11 a/b/g/n/ac</li>
<li>Conectividad: Bluetooth®v4.0</li>
<li>Energía: 	AC 100-240V, 50/60Hz</li>
<li>Consumo energía: 165W máximo</li>
<li>Temperatura funcionamiento: 5 ºC – 35ºC</li>
<li>Salida vídeo: puerto HDMI™ (con soporte para HDR)</li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07LFY8WBX&amp;linkId=95a091643d28db1abfa20f5e3e12a899" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01LYWPQUN&amp;linkId=f88c13419ae6b063f4ff9000db4bd837" title="Amazon" class="lozad"></iframe>
</div>
<p>Estos es lo que incluye la caja del <em>pack</em> que he comprado:</p>
<ul>
<li>Consola PlayStation 4.</li>
<li>Mando Dual Shock 2 y cable cargador.</li>
<li>Cable fuente de alimentación.</li>
<li>Cable HDMI.</li>
<li>Auriculares y micrófono.</li>
<li>Juegos del <em>pack</em> (Ratchet &amp; Clank, Uncharted 4, The Last of Us).</li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-1_hu3f9c92109165290ac236c9e45e765953_4486059_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Caja"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-1_hu3f9c92109165290ac236c9e45e765953_4486059_200x150_fit_q90_box.jpg" width="193" height="150" alt="Caja" title="Caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-2_huc1f278297bd1f0043d1c730f98789d50_5606022_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Caja"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-2_huc1f278297bd1f0043d1c730f98789d50_5606022_200x150_fit_q90_box.jpg" width="190" height="150" alt="Caja" title="Caja"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-3_hu2ba7ea5f47b1a01a218931d3cef93296_3211322_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Caja"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-3_hu2ba7ea5f47b1a01a218931d3cef93296_3211322_200x150_fit_q90_box.jpg" width="200" height="60" alt="Caja" title="Caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-4_hu03d1394246d77dda4248d5fff5b1e78a_2556775_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Caja"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-4_hu03d1394246d77dda4248d5fff5b1e78a_2556775_200x150_fit_q90_box.jpg" width="200" height="45" alt="Caja" title="Caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-5_huc61c75ff5c83924b0456ccfabfb327ac_2792211_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Caja"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-5_huc61c75ff5c83924b0456ccfabfb327ac_2792211_200x150_fit_q90_box.jpg" width="200" height="58" alt="Caja" title="Caja"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-6_hu14301e7da42efe7d3db789f5317fa40e_3456080_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Caja"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-6_hu14301e7da42efe7d3db789f5317fa40e_3456080_200x150_fit_q90_box.jpg" width="200" height="124" alt="Caja" title="Caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-7_hu76baf176267fb611760421d7e88de6c1_4459750_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Caja"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-7_hu76baf176267fb611760421d7e88de6c1_4459750_200x150_fit_q90_box.jpg" width="188" height="150" alt="Caja" title="Caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-8_hu2a4e9338dd04877ca218e81e14a6fe54_4061049_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Caja"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/caja-8_hu2a4e9338dd04877ca218e81e14a6fe54_4061049_200x150_fit_q90_box.jpg" width="169" height="150" alt="Caja" title="Caja"  class="lozad "></a></p>
<figcaption>Caja</figcaption>
</figure>
</div>
<p>La consola.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-1_huafb50a11c535051ffe563e01b3f91c29_6216481_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="PlayStation 4 Slim"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-1_huafb50a11c535051ffe563e01b3f91c29_6216481_200x150_fit_q90_box.jpg" width="187" height="150" alt="PlayStation 4 Slim" title="PlayStation 4 Slim"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-2_hu67e5407073f784a31c225c1c09b097d7_3309353_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="PlayStation 4 Slim"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-2_hu67e5407073f784a31c225c1c09b097d7_3309353_200x150_fit_q90_box.jpg" width="200" height="58" alt="PlayStation 4 Slim" title="PlayStation 4 Slim"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-3_hua9732bc3c761937d1c95ef700c39b791_3531779_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="PlayStation 4 Slim"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-3_hua9732bc3c761937d1c95ef700c39b791_3531779_200x150_fit_q90_box.jpg" width="200" height="65" alt="PlayStation 4 Slim" title="PlayStation 4 Slim"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-4_hu09e6d55e11fad23ff484fce10a477e01_3065598_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="PlayStation 4 Slim"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-4_hu09e6d55e11fad23ff484fce10a477e01_3065598_200x150_fit_q90_box.jpg" width="140" height="150" alt="PlayStation 4 Slim" title="PlayStation 4 Slim"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-5_huebd88c4fcf81aa2c52b11a0a86fd2b7a_5117800_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="PlayStation 4 Slim"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-5_huebd88c4fcf81aa2c52b11a0a86fd2b7a_5117800_200x150_fit_q90_box.jpg" width="200" height="86" alt="PlayStation 4 Slim" title="PlayStation 4 Slim"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-6_hua30ae418e67d07db922a97cc84b8153d_3950976_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="PlayStation 4 Slim"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/playstation-4-slim-6_hua30ae418e67d07db922a97cc84b8153d_3950976_200x150_fit_q90_box.jpg" width="150" height="150" alt="PlayStation 4 Slim" title="PlayStation 4 Slim"  class="lozad "></a></p>
<figcaption>PlayStation 4 Slim</figcaption>
</figure>
</div>
<p>Y los cables y manuales incluidos. En la foto se ven el mando, el cable HDMI, el cable USB cargador del mando, el cable de energía y los auriculares con micrófono.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/cables-1_hu5ec5a7b7785a7d705dda78415353206c_4728540_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Cables y manuales"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/cables-1_hu5ec5a7b7785a7d705dda78415353206c_4728540_200x150_fit_q90_box.jpg" width="200" height="94" alt="Cables y manuales" title="Cables y manuales"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/manuales-1_hu634a5b95b71bba3476ada2febaaf06ae_3052995_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Cables y manuales"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/manuales-1_hu634a5b95b71bba3476ada2febaaf06ae_3052995_200x150_fit_q90_box.jpg" width="172" height="150" alt="Cables y manuales" title="Cables y manuales"  class="lozad "></a></p>
<figcaption>Cables y manuales</figcaption>
</figure>
</div>
<p><a href="https://manuals.playstation.net/document/es/ps4/">La guía de usuario de la PS4</a> incluye información para saber como realizar varias tareas y en estos dos vídeos sobre el mando, que función tiene el panel táctil parece que no sirve para mucho salvo como botón de selección, como bajar la intensidad de la luz para que le dure más la batería, se puede seguir jugando con el mando mientras se carga con el cable y la duración de la carga tarda unas dos horas.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=gHGMWLhPAkw">PS4: Mando análisis, funciones y demás</a></li>
<li><a href="https://www.youtube.com/watch?v=Bz0S5LpJEAs">Uso del DualShock 4</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/mando-dualshock-4-1_hue4fb1467ae1d244daba46a9070af6f55_3665140_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Mando DualShock 4 V2"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/mando-dualshock-4-1_hue4fb1467ae1d244daba46a9070af6f55_3665140_200x150_fit_q90_box.jpg" width="200" height="131" alt="Mando DualShock 4 V2" title="Mando DualShock 4 V2"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/mando-dualshock-4-2_hue0fd45f6c3b711dc058121a6dc63fc0c_3799898_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Mando DualShock 4 V2"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/mando-dualshock-4-2_hue0fd45f6c3b711dc058121a6dc63fc0c_3799898_200x150_fit_q90_box.jpg" width="200" height="136" alt="Mando DualShock 4 V2" title="Mando DualShock 4 V2"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/mando-dualshock-4-3_hu139178d2a3613a9715ea9d1d317c108a_3735348_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Mando DualShock 4 V2"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/mando-dualshock-4-3_hu139178d2a3613a9715ea9d1d317c108a_3735348_200x150_fit_q90_box.jpg" width="200" height="104" alt="Mando DualShock 4 V2" title="Mando DualShock 4 V2"  class="lozad "></a></p>
<figcaption>Mando DualShock</figcaption>
</figure>
</div>
<p>La verdad es que el precio no la he comprado en el mejor momento como se puede comprobar usando el <a href="https://picodotdev.github.io/blog-bitix/2019/06/historial-y-evolucion-de-precios-en-amazon-con-camelcamelcamel/">seguidor de precios CamelCamelCamel</a>, para estar el producto en el final de su vida el precio no es que sea mucho menor que desde su comercialización ni comparándolo con sus competidores. Para adquirirla a mejor precio hubiera sido mejor que esperase un par e meses al <em>black friday</em> o época navideña o un día sin IVA de algún centro comercial o ya casi hasta que salga la PS5 momento en el que bajara algo de precio por empezar a agotar existencias y quedar descatalogada. Pero es durante unas semanas de vacaciones en las que iba a poder jugar de forma más intensiva, los ingresos de Adsense del blog los empleo en esto, de esta manera me compensa la dedicación que me requiere, otra gente tendrá otros vicios y gastos que yo no tengo. Otra posibilidad era haber cogido la versión de 500 GB que salía algo más económica y un disco de 1 o 2 TB aparte pero entre portátiles que voy desechando quedándome con los discos duros no quería tener otro más de 500 GB junto con tener que adquirirle una caja USB de disco duro externa.</p>
<h3 id="primera-toma-de-contacto">Primera toma de contacto</h3>
<p>Como decía prefiero juegos digitales pero con mi lento ADSL que descarga entre 1 y 1.5 MiB por segundo descargar 25 GiB tarda como unas 5 horas, nada que no pueda poner varios juegos en la cola de descarga y dejarlo bajando una noche pero es posible que las actualizaciones quizá me impida jugar en algún momento que quisiese. Salvo estos momentos puntuales de descarga mi ADSL me es más que suficiente, para mi no es mayor inconveniente.</p>
<p>Desde el ordenador me he creado una cuenta en <a href="https://www.playstation.com/es-es/explore/playstation-network/">PlayStation Network</a> para acceder a los juegos digitales y empezar a añadir los favoritos que deseo y así enterarme de cuando alguno de ellos esté de oferta comprarlo. Es importante elegir bien el nombre de la cuenta, el primer cambio de nombre de la cuenta es gratuito pero los siguientes hay que pagar. Creada la cuenta descargo algunos juegos <em>free to play</em> para probar, empezando por <em>Fortnite</em> y <em>World of Warships</em>.</p>
<p>En el primer inicio se solicitan múltiples datos de configuración y preferencias entre ellos si se desea la cuenta de PlayStation Network, como la he creado previamente desde el ordenador solo he tenido que introducir el nombre de usuario de inicio de sesión y la contraseña. Otras opciones solicitadas son las relativas a la privacidad y que información ven otros usuarios de nuestra actividad en la consola, pide unas cuantas, estas opciones se pueden editar también desde un ordenador entrando a la cuenta de PSN con el navegador.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-1_hu4cd6e39cd86bbefe1e6c7da8d7386d78_4673754_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-1_hu4cd6e39cd86bbefe1e6c7da8d7386d78_4673754_200x150_fit_q90_box.jpg" width="200" height="112" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-2_hu2300feee51a6856c184d40e9c70bae8f_4721632_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-2_hu2300feee51a6856c184d40e9c70bae8f_4721632_200x150_fit_q90_box.jpg" width="200" height="110" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-3_hub7e315a3e315f12a9e969488217a90e3_4984871_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-3_hub7e315a3e315f12a9e969488217a90e3_4984871_200x150_fit_q90_box.jpg" width="200" height="112" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-4_hu3e1a205ccde5db1f3dab7a6bba6db56c_4640852_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-4_hu3e1a205ccde5db1f3dab7a6bba6db56c_4640852_200x150_fit_q90_box.jpg" width="200" height="112" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-5_hu77de3cdabc114cf1236c185cd559ef5a_3791766_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-5_hu77de3cdabc114cf1236c185cd559ef5a_3791766_200x150_fit_q90_box.jpg" width="200" height="111" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-6_huc93789a5a0eb0c6fcf01a8955fdab982_4372597_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-6_huc93789a5a0eb0c6fcf01a8955fdab982_4372597_200x150_fit_q90_box.jpg" width="200" height="112" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-7_hu93f637e404889f184464035c3bf3eb55_4762124_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-7_hu93f637e404889f184464035c3bf3eb55_4762124_200x150_fit_q90_box.jpg" width="200" height="110" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-8_hu922d0f1b40538df0bd366e1dc143d5d0_4796004_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-8_hu922d0f1b40538df0bd366e1dc143d5d0_4796004_200x150_fit_q90_box.jpg" width="200" height="110" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-9_hudde3926f40aa1f210195bb590fb49e1d_3933406_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-9_hudde3926f40aa1f210195bb590fb49e1d_3933406_200x150_fit_q90_box.jpg" width="200" height="109" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-10_hu853223084cfb09238b2748b77c2ce15a_4348495_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-10_hu853223084cfb09238b2748b77c2ce15a_4348495_200x150_fit_q90_box.jpg" width="200" height="112" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-11_hu841c254a52a256ad778bf06c14171496_3991763_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-inicial-11_hu841c254a52a256ad778bf06c14171496_3991763_200x150_fit_q90_box.jpg" width="200" height="110" alt="Configuración inicial" title="Configuración inicial"  class="lozad "></a></p>
<figcaption>Configuración inicial</figcaption>
</figure>
</div>
<p>Varias opciones de privacidad.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/opciones-privacidad_hu5cb2e676510930a98873ac1cf619c223_4346485_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Opciones de privacidad"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/opciones-privacidad_hu5cb2e676510930a98873ac1cf619c223_4346485_200x150_fit_q90_box.jpg" width="200" height="112" alt="Opciones de privacidad" title="Opciones de privacidad"  class="lozad "></a></p>
<figcaption>Opciones de privacidad</figcaption>
</figure>
</div>
<p>La configuración de PlayStation Network.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-playstation-network_hu9121c6e1d010f67746dbb3258f1f350d_4072607_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Configuración de PlayStation Network"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/configuracion-playstation-network_hu9121c6e1d010f67746dbb3258f1f350d_4072607_200x150_fit_q90_box.jpg" width="200" height="111" alt="Configuración de PlayStation Network" title="Configuración de PlayStation Network"  class="lozad "></a></p>
<figcaption>Configuración de PlayStation Network</figcaption>
</figure>
</div>
<p>Al finalizar toda la configuración se muestra la pantalla inicial de la consola.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/logo-inicio_hucce203abbc614f056371ba56199ea168_4124292_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/logo-inicio_hucce203abbc614f056371ba56199ea168_4124292_200x150_fit_q90_box.jpg" width="200" height="109" alt="Pantalla inicial" title="Pantalla inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/pantalla-inicial-1_hu492b089978d16df2affc3b58cfb3765e_3804298_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/pantalla-inicial-1_hu492b089978d16df2affc3b58cfb3765e_3804298_200x150_fit_q90_box.jpg" width="200" height="109" alt="Pantalla inicial" title="Pantalla inicial"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/pantalla-inicial-2_hucaac5ee0968d67779c6c97fecebbf393_5345166_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/pantalla-inicial-2_hucaac5ee0968d67779c6c97fecebbf393_5345166_200x150_fit_q90_box.jpg" width="200" height="111" alt="Pantalla inicial" title="Pantalla inicial"  class="lozad "></a></p>
<figcaption>Pantalla inicial</figcaption>
</figure>
</div>
<p>Uso un monitor de resolución 2560x1440 (2K), la PlayStation está preparada para un resolución 1920x1080 (FullHD) pero tanto en la interfaz de los menús como en los juegos la calidad de imagen es muy buena. Tiene una opción de configuración para elegir ampliar la imagen a 2K o usar el área nativo de FullHD.</p>
<h3 id="limpieza-de-ventilador-y-disipador-desmontaje-y-montaje-como-cargar-del-mando">Limpieza de ventilador y disipador, desmontaje y montaje, como cargar del mando</h3>
<p>En un futuro con el uso como a todo elemento electrónico que utiliza para refrigerarse un ventilador y un disipador se le acumulará polvo, con lo que cada cierto tiempo para que no haga demasiado ruido y disipe de forma más eficiente el calor que genera es recomendable limpiar el polvo que se le acumulará. En el modelo CUH-2216B la plancha de metal que cubre la unidad de discos y el disipador vienen fijados con unos tornillos de plástico a los que se les ha fundido la cabeza, con lo que no se pueden desatornillar. Para limpiar el ventilador un bastoncillo de algodón basta pero para limpiar el disipador completamente hay que desmontar la consola.</p>
<p>Con estos tornillos de plástico hay dos opciones <a href="https://www.youtube.com/watch?v=dXH-c8hkueM">rebajarles la cabeza para que la tapa se pueda quitar</a> como se muestra en el vídeo en el que quedan estropeados, simplemente <a href="https://www.youtube.com/watch?v=9s0GoewPFC0">limpiar el ventilador</a> (<a href="https://www.youtube.com/watch?v=MTAiOTNUmJY">otro vídeo</a>) o sin necesidad de estropear esos tornillos de plástico utilizar un bote aerosol de aire comprimido con una cánula para limpiar el polvo también del disipador combinado con un aspirador a través de la abertura del ventilador se podrá quitar la mayor parte del polvo que acumulen, también está la posibilidad de desmontar la fuente de alimentación para acceder a la parte trasera del disipador, con el aire comprimido y una aspiradora tratar de extraer el polvo que se acumule en la parte delantera, todo con el objetivo de no desmontar la tapa que cubre el ventilador y el disipador para no estropear los tornillos de plástico. En modelos anteriores los tornillos son de metal y se pueden quitar perfectamente, Sony de forma deliberada los ha sustituido por estos de plástico que son peores, seguramente con la intención de que los usuarios no desmonten la PlayStation.</p>
<p>En las páginas de <a href="https://es.ifixit.com">iFixit</a> y <a href="https://www.how-fixit.com">How Fixit</a> hay unas muy buenas guías en las que se explica paso a paso y con imágenes como desmontar una PlayStation 4 Slim y como montarla con posterioridad. En estos artículos y vídeos queda perfectamente ilustrado como desmontarla y montarla.</p>
<ul>
<li><a href="https://www.how-fixit.com/laptop-repair-guides/game_console/ps4-slim-disassembly/">Artículo desmontaje de una PlayStation 4 Slim (How Fixit)</a> (es este se aprecia los tornillos de plástico con la cabeza fundida que fijan la tapa de metal que cubre el ventilador, disipador y la unidad lectora de los modelos más recientes de la consola)</li>
<li><a href="https://es.ifixit.com/Device/PlayStation_4_Slim">Artículo desmontaje de una PlayStation 4 Slim (iFixit)</a></li>
<li><a href="https://www.youtube.com/watch?v=0BYsBdS8lvE">Vídeo como desmontar una PlayStation 4 Slim</a></li>
<li><a href="https://www.youtube.com/watch?v=iU9chZ86cm4">Vídeo como montar una PlayStation 4 Slim</a></li>
<li><a href="https://www.youtube.com/watch?v=lExiC4TAkVU">Otro vídeo de desmontaje de la PlayStation 4 Slim</a></li>
<li><a href="https://es.ifixit.com/Gu%C3%ADa/Como&#43;aplicar&#43;pasta&#43;termica/744">Cómo aplicar pasta térmica correctamente en un procesador</a></li>
<li><a href="https://www.youtube.com/watch?v=JYwHB2P6GmM">Vídeo como aplicar pasta térmica</a></li>
</ul>
<p>Limpiar el ventilador solo requiere quitar la tapa superior de la consola y tratar de limpiar sus aspas con un bastoncillo o aire comprimido aplicándolo con el bote siempre en vertical ya que de otra manera expulsa líquido a baja temperatura con el riesgo de dañar algún componente electrónico si es necesario hay que cambiar la consola de posición pero el bote siempre en vertical, la tapa superior no anula la garantía si se tiene cuidado de dejar señales de manipulación. Sin embargo, para acceder al disipador al menos requiere desmontar la fuente de alimentación y para desmontarla hay que quitar la tapa inferior de la consola la cual requiere quitar un tornillo en la parte posterior de la consola que está protegido por una etiqueta de plástico pegada que lo cubre a modo de precinto de garantía. Si se quiere hacer una mejor limpieza que solo lo que permite acceder desde el ventilador no queda más remedio, como este paso ya anula la garantía solo es recomendable hacerlo una vez haya concluido su periodo estipulado según la legislación que en España es de 2 años desde el momento de la compra. Quitar la fuente de alimentación permite acceder a la parte posterior del disipador, con un aerosol de aire comprimido se puede quitar la mayor parte del polvo que se le acumule en la parte frontal y el ventilador.</p>
<p>Para hacer una limpieza profunda y completa teniendo acceso completo al disipador y ventilador asi como cambiar la pasta térmica del procesador limpiando la anterior con alcohol isopropílico que con el tiempo pierde su eficiencia hay que desmontar la placa base de la consola y soltar las conexiones de cables, quitar la placa base y asegurarse de que los <em>pads</em> térmicos sigan colocados en cada uno de sus componentes electrónicos. Son un buen número de tornillos a quitar, no es simple y solo es recomendable para alguien con experiencia o esté dispuesto a seguir los pasos de las guías anteriores.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/0BYsBdS8lvE" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>Para realizar el montaje y desmontaje correctamente se requieren una serie de herramientas:</p>
<ul>
<li><a href="https://amzn.to/34OEeWs">Destornilladores de precisión</a>, la PS4 utiliza tornillos con cabeza Torx T8 y Phillips PH0.</li>
<li><a href="https://amzn.to/2Ai1n5Q">Pinzas de precisión</a> si el <em>kit</em> de destornilladores de precisión no incluye. Los cables de datos de la PS4 son planos, sus conectores pequeños y es recomendable manipularlos con unas de estas pinzas.</li>
<li><a href="https://amzn.to/34OEkxi">Aire comprimido</a> usando siempre el bote en vertical y en pequeñas ráfagas.</li>
<li><a href="https://amzn.to/2UVuiGd">Pasta térmica</a> no conductiva para no crear un cortocircuito si no se aplica correctamente y en una capa muy fina.</li>
<li><a href="https://amzn.to/2Lvyzx5">Alcohol isopropílico</a>.</li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VR9PGPC&amp;linkId=4a0232e9898e496af9e672fe50d57c81" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07JZ3DTHG&amp;linkId=1aede680c3b8a5b84657f52f73d54600" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01M0GKOEN&amp;linkId=cdc038354d536d752a8c70b8bddca748" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07MZ45X9G&amp;linkId=195df606f7ea4dae5d9df4e1887975c9" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07CYJLG1S&amp;linkId=129773b7c65c13d8101eafd1035d2211" title="Amazon" class="lozad"></iframe>
</div>
<p>Por último, el mando se puede cargar con un cable USB a microUSB, el mismo que proporciona en la consola, desde uno de los puertos de la propia consola, sin embargo esto requiere que la consola esté encendida o en reposo. Cargar el mando desde un puerto de la consola no es la única forma. En algún momento puede interesar cargar el mando aún con la consola completamente apagada, esto se puede hacer con cualquier adaptador de corriente utilizado para cargar un adaptador de corriente utilizando para cargar un teléfono móvil siempre que este produzca como salida 5 voltios y al menos 800 mA (miliamperios), en el texto serigrafiado del adaptador aparece detallada esta información en letras pequeñas que si es preciso para leerlas se puede emplear una foto de un móvil y ampliarla. Los puertos USB 2.0 o inferiores de un ordenador solo entregan 500 mA lo que no son suficiente para los requisitos de carga del mando, en caso de usarse estos la batería del mando podría degradarse, ha de usarse un puerto USB 3.0 o superior que son capaces de proporcionar 900 mA según la especificación del estándar USB.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/adaptador-de-corriente-de-telefono-movil_hub07e238e3f8594cd8f74f793c04872ea_864466_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Adaptador de corriente de teléfono móvil con salida de corriente 5V, 1.55A"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/adaptador-de-corriente-de-telefono-movil_hub07e238e3f8594cd8f74f793c04872ea_864466_200x150_fit_q90_box.jpg" width="142" height="150" alt="Adaptador de corriente de teléfono móvil con salida de corriente 5V, 1.55A" title="Adaptador de corriente de teléfono móvil con salida de corriente 5V, 1.55A"  class="lozad "></a></p>
<figcaption>Adaptador de corriente de teléfono móvil con salida de corriente 5V, 1.55A</figcaption>
</figure>
</div>
<h3 id="tienda-donde-comprar-la-consola">Tienda donde comprar la consola</h3>
<p>Si no se tiene preferencia por en que tienda comprarla hay varias posibilidades. Iba a comprarla en <a href="https://www.elcorteingles.es/">El Corte Inglés</a> por el hecho de ir, pagarla y llevármela para casa pero el día que fui solo tenían modelos de 500 GB y yo quería el de 1 TB de modo que al final la he adquirido por <a href="https://amzn.to/2flFhHA">Amazon</a>, además necesitaba un conmutador HDMI para intercambiar la señal entre el NUC y la consola, también quería una funda para el mando y necesitaba un cable HDMI adicional.</p>
<p>Tanto en Wallapop como <a href="https://www.ebay.es/">Ebay</a> se pueden encontrar consolas de segunda mano a un mejor precio que el de en tienda nuevas si se está dispuesto a no tener garantía del producto y a aceptar la incertidumbre de si funcionará correctamente.</p>
<ul>
<li><a href="https://amzn.to/3uxDYIU">Amazon Sony PS4</a></li>
<li><a href="https://www.elcorteingles.es/videojuegos/ps4/consolas/">El Corte Inglés PS4</a></li>
<li><a href="https://www.pccomponentes.com/videoconsolas-ps4">PC Componentes PS4</a></li>
<li><a href="https://www.mediamarkt.es/es/category/_consolas-ps4-702291.html">Mediamarkt PS4</a></li>
<li><a href="https://www.fnac.es/n66124/Todo-PS4/Consolas-PS4#bl=MMVideojuegos">FNAC PS4</a></li>
<li><a href="https://www.game.es/buscar/consolas-ps4/o=0&amp;cf=New:-6:GIDS">GAME PS4</a></li>
<li><a href="https://www.carrefour.es/consolas-ps4/N-brkb0gZj0pd9s/c">Carrefour PS4</a></li>
<li><a href="https://www.ebay.es/sch/Consolas/139971/i.html?_from=R40&amp;_sop=2&amp;_nkw=playstation%204%201tb&amp;LH_PrefLoc=1&amp;_dcat=139971&amp;Modelo=PlayStation%25204%2520%252D%2520Slim&amp;rt=nc&amp;_trksid=p2045573.m1684">Ebay PS4</a></li>
<li><a href="https://www.cashconverters.es/es/es/comprar/videojuegos-y-consolas/consolas/consola-ps4/ps4-slim-1tb/?srule=price-low-to-high&amp;sz=12&amp;start=0">Cash Converters PS4</a></li>
</ul>
<h3 id="otros-accesorios-switch-hdmi-funda-mando-y-teclado-inalámbrico">Otros accesorios, switch HDMI, funda mando y teclado inalámbrico</h3>
<p>Para utilizar el ordenador y la consola en el mismo monitor sin tener que conectar y desconectar cables he comprado también un <a href="https://amzn.to/2NaQDyL">conmutador HDMI 4K de tres entradas y una salida</a> con soporte para una resolución de hasta 4K@60Hz, hay modelos de conmutadores de hasta 5 entradas. Lo que me ha convencido de este conmutador HDMI es que el sensor infrarrojo del mando lo tiene incorporado y no necesita un elemento externo, posee un botón para realizar la selección de la fuente de entrada sin mando, soporta 60 Hz en resolución 4K cuando otros conmutadores solo soportan 30 Hz, no necesita alimentación aunque si fuera necesario posee un puerto USB para proporcionarle corriente y todos los puertos HDMI tanto de entrada como de salida están en el mismo lado. El conmutador no incluye cable HDMI por lo que es necesario adquirir un <a href="https://amzn.to/2Q7Tt9Q">cable HDMI</a> si no se tiene uno adicional disponible.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/conmutador-hdmi-1_hu2c373a322d49af1bab19d3f1c0e80482_2918042_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Conmutador HDMI"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/conmutador-hdmi-1_hu2c373a322d49af1bab19d3f1c0e80482_2918042_200x150_fit_q90_box.jpg" width="200" height="137" alt="Conmutador HDMI" title="Conmutador HDMI"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/conmutador-hdmi-2_huedf517d4fa43187368620723f406fbe1_2461498_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Conmutador HDMI"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/conmutador-hdmi-2_huedf517d4fa43187368620723f406fbe1_2461498_200x150_fit_q90_box.jpg" width="200" height="138" alt="Conmutador HDMI" title="Conmutador HDMI"  class="lozad "></a></p>
<figcaption>Conmutador HDMI</figcaption>
</figure>
</div>
<p>También el comprado una <a href="https://amzn.to/2ZGumzk">funda del mando de PS4</a> para protegerlo de golpes, y suciedad me he fijado más que nada en el color que sea negro y que las aberturas para los botones sean amplias, además de que trajese <em>grips</em> para los <em>joysticks</em> ya que con el uso se les puede desprender su goma de agarre.</p>
<p>Si en algún momento oigo que el ventilador hace un ruido más alto de lo normal compraré un <a href="https://amzn.to/2AdXzT2">aerosol de aire comprimido con cánula</a> para limpiarla evitando así estropear los tornillos de plástico junto con una aspiradora para extraer la mayor parte del polvo que acumule.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-1_hu366561304427c98b8cbedaa710e86c51_4114272_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Funda mando"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-1_hu366561304427c98b8cbedaa710e86c51_4114272_200x150_fit_q90_box.jpg" width="200" height="111" alt="Funda mando" title="Funda mando"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-2_hub303fd07c88086844beb3fe2743ad4db_3810376_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Funda mando"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-2_hub303fd07c88086844beb3fe2743ad4db_3810376_200x150_fit_q90_box.jpg" width="82" height="150" alt="Funda mando" title="Funda mando"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-3_hu38c5a244158ac6378b57af8e87632edd_3760871_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Funda mando"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-3_hu38c5a244158ac6378b57af8e87632edd_3760871_200x150_fit_q90_box.jpg" width="200" height="125" alt="Funda mando" title="Funda mando"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-4_hudd1f30032bc65b1455b6dd36cbae6ce2_3686853_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Funda mando"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-4_hudd1f30032bc65b1455b6dd36cbae6ce2_3686853_200x150_fit_q90_box.jpg" width="200" height="130" alt="Funda mando" title="Funda mando"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-5_hude2636918d0614e958e766517ae2b6b7_3140910_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Funda mando"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-5_hude2636918d0614e958e766517ae2b6b7_3140910_200x150_fit_q90_box.jpg" width="101" height="150" alt="Funda mando" title="Funda mando"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-6_hue4634995d89e181c80baa9f296eee9c9_3016049_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Funda mando"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-6_hue4634995d89e181c80baa9f296eee9c9_3016049_200x150_fit_q90_box.jpg" width="109" height="150" alt="Funda mando" title="Funda mando"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-7_hue37fef4c46ca6df0f7d0bc5990c9b78f_3385641_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Funda mando"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-7_hue37fef4c46ca6df0f7d0bc5990c9b78f_3385641_200x150_fit_q90_box.jpg" width="76" height="150" alt="Funda mando" title="Funda mando"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-8_hu4b2d62b6e85bebae974ded09a1d61628_4115360_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Funda mando"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/funda-mando-8_hu4b2d62b6e85bebae974ded09a1d61628_4115360_200x150_fit_q90_box.jpg" width="73" height="150" alt="Funda mando" title="Funda mando"  class="lozad "></a></p>
<figcaption>Funda mando</figcaption>
</figure>
</div>
<p>El mando con la funda puesta. Hay que tener algo cuidado de no estirarla demasiado ya que la funda a pesar de ser de goma, resistente y elástica alguna de sus uniones más finas podría romperse en un descuido.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/mando-dualshock-4-4_hu9e3ae65efcdbbfeda423c454bbdb7ecf_3015191_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Mando DualShock 4 V2 con funda"><img src="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/images/mando-dualshock-4-4_hu9e3ae65efcdbbfeda423c454bbdb7ecf_3015191_200x150_fit_q90_box.jpg" width="200" height="130" alt="Mando DualShock 4 V2 con funda" title="Mando DualShock 4 V2 con funda"  class="lozad "></a></p>
<figcaption>Mando DualShock 4 V2 con funda</figcaption>
</figure>
</div>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07KSYS2L4&amp;linkId=c4e617b84dbe20273c022f528f7f5451" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B06XJ5ZR5P&amp;linkId=d6e6248621355a567e929b8e711a47c9" title="Amazon" class="lozad"></iframe>
</div>
<p>Otro accesorio de utilidad es un <a href="https://amzn.to/36SUMMN">teclado pequeño con soporte dual para bluetooth y comunicación inalámbrica 2.4 Ghz</a> que es compatible tanto con el ordenador como una <em>smart tv</em>, teléfono Android o una PlayStation 4 aunque no estoy seguro de si es totalmente compatible con la PlayStation algunos usuarios comentan que si, solo he visto uno que le ha dado problemas. Usar el mando de la PlayStation para escribir testo es muy incómodo y lento, un teclado inalámbrico como este resulta mucho más simple de utilizar, además es retroiluminado para utilizarlo a oscuras sin la luz de la habitación, no va a pilas sino que funciona con una batería recargable.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07RQBRRR7&amp;linkId=ac037d001d51556cbf14f680b30146c2" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="conclusión">Conclusión</h3>
<p>Quizá la calidad de las consolas de esta generación da muestras de agotamiento y está siendo superada por los juegos en PC, teniendo en cuenta que llevo muchos años sin jugar a juegos llegar a estos de la PS4 va a ser un salto importante sobre lo último que he jugado. En vídeos de YouTube los juegos que he visto me parece que tiene una muy buena calidad gráfica aún siendo YouTube una mala plataforma para apreciar la calidad por la compresión que le realiza a los vídeos. La PS5 seguro que es también un salto importante, sobre todo si le añaden trazado de rayos lo que le dotará de más realismo en reflejos y luces.</p>
<p>Aparte de echar de menos <a href="https://picodotdev.github.io/blog-bitix/2019/08/smartcards-en-vez-de-discos-para-una-futura-generacion-de-consolas/">una versión de la consola PlayStation sin discos todo digital</a> como tiene Xbox echo de menos poder usar teclado y ratón en algunos juegos como los de disparos o de estrategia en tiempo real, el ratón como apuntador es mas preciso y con el mayor número de teclas de un teclado más rápidas las acciones. Mucha gente juega en un monitor de ordenador y una mesa de escritorio sería una gran característica y seguro que sería posible técnicamente.</p>
<p>Voy a retomar este entretenimiento que deje hace años en la medida que el tiempo que dispongo me lo permita. Entre leer novelas, el blog y ahora con los juegos tendré otra forma de entretenimiento en algunos ratos que quiera desconectar del trabajo. Los videojuegos no son considerados como aptos a partir de cierta edad pero entre algunos programas de televisión o partidos de fútbol un buen juego es una buena opción.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.playstation.com/es-es/get-help/?smcid=other:es-es:blank:primary%20nav:msg-help:ayuda-y-asistencia-tcnica#!/">Asistencia técnica de PlayStation</a></li>
<li><a href="https://www.youtube.com/watch?v=6a0r94hdxLc">Desempaquetado PS4 Slim (en)</a></li>
<li><a href="https://www.youtube.com/watch?v=0GMTBPdDsfM">Desempaquetado Sony PlayStation 4 Slim y configuración (en)</a></li>
<li><a href="https://www.youtube.com/watch?v=tuJI0LGBfm8">Temperatura de PlayStation (en)</a></li>
<li><a href="https://www.youtube.com/watch?v=VfU_e08QvJs">Sobretemperatura en PlayStation (en)</a></li>
<li><a href="https://www.youtube.com/watch?v=7gW-oetZoYk">Como abrir y limpiar correctamente tu PS4 Slim (en)</a></li>
<li><a href="https://www.youtube.com/watch?v=MMYAQSMjgxo">Como incrementar el almacenamiento de la PS4 Slim con una unidad externa (en)</a></li>
<li><a href="https://www.elotrolado.net/hilo_amperaje-de-los-cargadores_2228907">Amperaje de los cargadores</a></li>
<li><a href="https://en.wikipedia.org/wiki/USB#Power">USB Power</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="juegos"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/</id>
        <title>La aplicación cliente de Steam en GNU/Linux</title>
        <updated>2019-09-06T18:00:00+02:00</updated>
        <published>2019-09-06T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Durante unos años he estado sin jugar a juegos porque al haberme pasado a GNU/Linux creía que no se podía al menos a los juegos comerciales actuales, en GNU/Linux hay algunos juegos que funcionan perfectamente como juegos retro con RetroArch, SuperTux, OpenTTD o Battle for Wesnoth en entre algunos de diversos géneros. Pero la realidad es que con Wine y el cliente de Steam son dos posibilidades para jugar a algunos perfectamente y tener un catálogo que no llega a la altura de Windows pero bastante amplio.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/steam.svg" width="200" height="200" alt="Steam" title="Steam"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>La plataforma de juegos <a href="https://store.steampowered.com/">Steam</a> es una de las más populares. Con su cliente de juegos es posible comprar, descargar e instalar juegos para tanto para Windows, macOS y también para <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>. Steam y <a href="https://www.valvesoftware.com/es/">Valve</a> han posibilitado que se puedan jugar a varios juegos triple A en GNU/Linux, Valve se está esforzando para que muchos juegos sean jugables en la plataforma del pingüino.</p>
<p>Steam ofrece un cliente nativo para GNU/Linux que en Arch Linux se ofrece en los repositorios oficiales. Requiere además habilitar el repositorio <em>multilib</em> para paquetes de 32 bits e instalar el controlador gráfico de la tarjeta gráfica de 32 bits.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -S steam&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-steam.sh</span>
    </div>
</div>
<p>Para habilitar el repositorio <em>multilib</em> en Arch Linux hay que editar el archivo de configuración <em>/etc/pacman.conf</em> y descomentar varias líneas quitando el caracter <em>#</em> que las precede.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">...&#10;<span class="o">[</span>multilib<span class="o">]</span>&#10;<span class="nv">Include</span> <span class="o">=</span> /etc/pacman.d/mirrorlist&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.conf</span>
    </div>
</div>
<p>En el caso de un gráfica Intel hay que instalar el paquete lib32-mesa.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -S lib32-mesa&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-lib32-mesa.sh</span>
    </div>
</div>
<p>Hecho esto se puede iniciar el cliente, en el menú de aplicaciones del sistema aparecen su acceso directo de aplicación, se necesita una cuenta por que lo que hay que registrarse antes desde su plataforma web. Los juegos de la biblioteca aparecen en el cliente para instalar. En este caso tengo el juego <a href="https://store.steampowered.com/app/231430/Company_of_Heroes_2/">Company of Heroes 2</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/cliente-steam_hu386a3aacce6261c68b735c492818c5bc_2210975_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Cliente de Steam en GNU/Linux"><img src="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/cliente-steam_hu386a3aacce6261c68b735c492818c5bc_2210975_300x200_fit_box_3.png" width="300" height="196" alt="Cliente de Steam en GNU/Linux" title="Cliente de Steam en GNU/Linux"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/cliente-steam-juegos_hu862c9b8ce63fe5e2b05d74745d47c023_758202_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Cliente de Steam en GNU/Linux"><img src="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/cliente-steam-juegos_hu862c9b8ce63fe5e2b05d74745d47c023_758202_300x200_fit_box_3.png" width="300" height="196" alt="Cliente de Steam en GNU/Linux" title="Cliente de Steam en GNU/Linux"  class="lozad "></a></p>
<figcaption>Cliente de Steam en GNU/Linux</figcaption>
</figure>
</div>
<p>Instalado el juego se puede iniciar desde el cliente de Steam. Aún con una gráfica integrada Intel de un <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Intel NUC8i5BEK (Bean Canyon)</a> se pueden jugar a muchos juegos bajando algo los detalles y resolución.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/company-of-heroes-2-1_huea5b4f88ea59be99439e3ff4a18a0bc7_1095947_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Company of Heroes 2"><img src="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/company-of-heroes-2-1_huea5b4f88ea59be99439e3ff4a18a0bc7_1095947_300x200_fit_q90_box.jpg" width="300" height="169" alt="Company of Heroes 2" title="Company of Heroes 2"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/company-of-heroes-2-2_huabc35dbfdbacf82b53fa980a1d00c9a3_2173718_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Cliente de Steam en GNU/Linux"><img src="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/company-of-heroes-2-2_huabc35dbfdbacf82b53fa980a1d00c9a3_2173718_300x200_fit_q90_box.jpg" width="300" height="169" alt="Cliente de Steam en GNU/Linux" title="Cliente de Steam en GNU/Linux"  class="lozad "></a></p>
<figcaption>Company of Heroes 2</figcaption>
</figure>
</div>
<p>Los juegos ofrecen diferente nivel de soporte para GNU/Linux, para <a href="https://www.microsoft.com/es-es/windows/">Windows</a>, <a href="https://www.apple.com/macos/">macOS</a> y Steam+Linux, los que deben funcionar sin problema son los de la última categoría. Los de Windows pueden funcionar a través de una capa de emulación desarrollada por Steam, para activarla hay que ir a <em>Steam &gt; Parámetros &gt; Steam Play</em> y activar las opciones <em>Enable Steam Play for Supported title</em> y <em>Activar Steam para todos los demás títulos</em>. Sin embargo, no hay garantía que los juegos con solo soporte de Windows funcionen correctamente, he probado con <a href="https://store.steampowered.com/app/552990/World_of_Warships/">World of Warships</a> y no se iniciaba correctamente mostrando únicamente una pequeña ventana negra.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/steam-play-settings_hu68634886819c7bb8c65fa463fe5e149a_55047_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Steam Play Settings"><img src="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/images/steam-play-settings_hu68634886819c7bb8c65fa463fe5e149a_55047_300x200_fit_box_3.png" width="253" height="200" alt="Steam Play Settings" title="Steam Play Settings"  class="lozad "></a></p>
<figcaption>Steam Play Settings</figcaption>
</figure>
</div>
<p>De vez en cuando Steam ofrece juegos gratuitos que se pueden añadir libremente a la biblioteca y en ocasiones ofrece grandes descuentos. También a través de su propio cliente es posible <a href="https://picodotdev.github.io/blog-bitix/2018/12/como-usar-wine-para-jugar-en-gnu-linux-a-juegos-de-windows/">jugar a los juegos de Blizzard como Diablo 3</a>, aunque en este caso es necesario utilizar <a href="https://www.winehq.org/">Wine</a>.</p>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/</id>
        <title>Ejemplo sencillo de como crear un documento PDF con Java y PDFBox</title>
        <updated>2021-05-11T00:19:30+02:00</updated>
        <published>2019-08-30T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Leer un CSV, escribir un CSV, archivos excel, generar gráficas para visualizar datos junto con generar documentos PDF son tareas comunes de las aplicaciones como forma de exportar los datos de la base de datos de una aplicación. Generar un archivo PDF con PDFBox requiere unas pocas lineas de código para documentos con cierta complejidad quizá sea más adecuado usar la librería JasperReports.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Generar documentos e informes de salida en una una tarea básica de cualquier aplicación y una forma de exportar los datos a otros formatos. Con <a href="https://poi.apache.org/">Apache POI</a> se pueden generar hojas de cálculo excel para su procesamiento con <a href="https://www.libreoffice.org/">LibreOffice</a> o <a href="https://products.office.com/es-es/">Microsoft Office Excel</a>. En ocasiones también es necesario <a href="https://picodotdev.github.io/blog-bitix/2017/10/visualizar-datos-y-generar-graficas-en-java-con-jfreechart/">generar gráficas para visualizar un conjunto grande de datos</a> para ser más fáciles de interpretar, descubrir tendencias, comparar, sacar conclusiones en base a las cuales tomar alguna acción. Los archivos PDF también son muy utilizados para imprimirlos en formato en papel o enviarlos adjuntos en correos electrónicos.</p>
<p>Uno de estos casos podría ser la generación de una factura en base a una plantilla e incluir el el importe y consumo realizado por un cliente y que este pueda obtenerla en formato electrónico o le sea enviada por correo electrónico como un documento adjunto o <a href="https://elblogdepicodev.blogspot.com.es/2011/02/enviar-correos-mediante-java-mail.htmlindex-amp.html">enviar un correo electrónico</a> para indicar que tiene la factura disponible en su área de cliente lista para su descarga. Este es el caso de muchas empresas que ofrecen servicios como compañías eléctricas, de telecomunicaciones, servicios municipales de agua y basura, bancos para su justificantes y comprobantes, comercios, etc&hellip;</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="generar-un-documento-pdf-con-java-y-pdfbox">Generar un documento PDF con Java y PDFBox</h3>
<p>Para generar documentos en PDF en Java está disponible la librería <a href="https://pdfbox.apache.org/">Apache PDFBox</a>. Un ejemplo sencillo de como generar un archivo PDF con algunos estilos de texto, fuentes, un tamaño específico de página y una imagen es el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javapdf</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.pdfbox.pdmodel.PDDocument</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.pdfbox.pdmodel.PDPage</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.pdfbox.pdmodel.PDPageContentStream</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.pdfbox.pdmodel.common.PDRectangle</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.pdfbox.pdmodel.font.PDType1Font</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">PDDocument</span> <span class="n">document</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PDDocument</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PDPage</span> <span class="n">page</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PDPage</span><span class="o">(</span><span class="n">PDRectangle</span><span class="o">.</span><span class="na">A6</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">document</span><span class="o">.</span><span class="na">addPage</span><span class="o">(</span><span class="n">page</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PDPageContentStream</span> <span class="n">contentStream</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PDPageContentStream</span><span class="o">(</span><span class="n">document</span><span class="o">,</span> <span class="n">page</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Text&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentStream</span><span class="o">.</span><span class="na">beginText</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentStream</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">PDType1Font</span><span class="o">.</span><span class="na">TIMES_BOLD</span><span class="o">,</span> <span class="n">32</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentStream</span><span class="o">.</span><span class="na">newLineAtOffset</span><span class="o">(</span> <span class="n">20</span><span class="o">,</span> <span class="n">page</span><span class="o">.</span><span class="na">getMediaBox</span><span class="o">().</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">-</span> <span class="n">52</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentStream</span><span class="o">.</span><span class="na">showText</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentStream</span><span class="o">.</span><span class="na">endText</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Image&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PDImageXObject</span> <span class="n">image</span> <span class="o">=</span> <span class="n">PDImageXObject</span><span class="o">.</span><span class="na">createFromByteArray</span><span class="o">(</span><span class="n">document</span><span class="o">,</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/java.png&#34;</span><span class="o">).</span><span class="na">readAllBytes</span><span class="o">(),</span> <span class="s">&#34;Java Logo&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentStream</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">image</span><span class="o">,</span> <span class="n">20</span><span class="o">,</span> <span class="n">20</span><span class="o">,</span> <span class="n">image</span><span class="o">.</span><span class="na">getWidth</span><span class="o">()</span> <span class="o">/</span> <span class="n">3</span><span class="o">,</span> <span class="n">image</span><span class="o">.</span><span class="na">getHeight</span><span class="o">()</span> <span class="o">/</span> <span class="n">3</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentStream</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">document</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="s">&#34;document.pdf&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Hay que añadir la dependencia de la librería en el archivo de construcción del proyecto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javapdf.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.apache.pdfbox:pdfbox:2.0.16&#39;</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<h4 id="documento-pdf-generado">Documento PDF generado</h4>
<p>El resultado es el siguiente <a href="/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/resources/document.pdf" title="">documento PDF</a> que puedes visualizar sin necesidad de instalar programas adicionales en tu ordenador usando el visor en línea de <a href="https://smallpdf.com/">Smallpdf</a> que permite la <a href="https://smallpdf.com/es/blog?type=tutoriales&amp;tool=insertar-pdf">incrustación de documentos PDF en varios tipos de páginas web</a>.</p>
<p><a href="https://smallpdf.com/es/editar-pdf#open=https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/resources/document.pdf"><img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/open-with-smallpdf-es.svg" width="200" height="40" alt="Abrir con Smallpdf" title="Abrir con Smallpdf"  class="lozad "></a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/images/document_hu045f61ea51f8069add370066a9a061bc_45351_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Documento generado con PDFBox"><img src="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/images/document_hu045f61ea51f8069add370066a9a061bc_45351_600x450_fit_box_3.png" width="391" height="450" alt="Documento generado con PDFBox" title="Documento generado con PDFBox"  class="lozad "></a></p>
<figcaption>Documento generado con PDFBox</figcaption>
</figure>
</div>
<h3 id="alternativas-a-pdfbox">Alternativas a PDFBox</h3>
<p>Una alternativa a PDFBox es <a href="https://itextpdf.com/es">iText</a>, la primera tiene una <a href="https://www.apache.org/licenses/LICENSE-2.0">licencia Apache</a> e iText una <a href="https://www.gnu.org/licenses/agpl-3.0.en.html">licencia AGPL</a> o comercial lo que puede ser determinante para un proyecto. La licencia AGPL obliga a que una aplicación web haga público su código fuente lo que probablemente en usos comerciales no sea lo deseado y usar la versión de la licencia comercial obliga a adquirir el derecho de uso al que obliga la licencia que posee un coste tal vez indeseado o que directamente hace que quede descartada.</p>
<p>PDFBox no posee una forma de escribir párrafos y tener saltos de línea automáticos según el ancho de la página, en el ejemplo el texto se posiciona de forma absoluta en la página estando la coordenada (0,0) en la parte inferior izquierda. Para añadir esta funcionalidad a PDFBox hay que usar el complemento <a href="https://github.com/ralfstuckert/pdfbox-layout">pdfbox-layout</a>.</p>
<p>Pero en vez de crear un documento PDF desde cero desde Java si se trata de una factura es más sencillo partir de un documento PDF a modo de plantilla con el diseño deseado en el que solo haya que incluir la información que varía en la ubicación del documento apropiada. Este sería en caso de una factura o justificante. Y si el documento es un informe con muchos datos o el diseño se desea cambia independientemente de la información que incluye o es complejo en vez de insertar cada campo de texto e imágenes individualmente con código está la opción de utilizar el generador de documentos <a href="https://community.jaspersoft.com/project/jasperreports-library">JasperReports</a>.</p>
<p>En el siguiente <a href="https://www.tutorialspoint.com/pdfbox/index.htm">tutorial de PDFBox</a> se incluyen más ejemplos de tareas básicas al procesar documentos PDF con esta librería. Con PDFBox el documento PDF se genera completamente mediante código, si el PDF requiere cambios hay que modificar el código que para documentos sencillos es aceptable. Para documentos PDF complejos y para separar el estilo, la información que contiene y que el código no requiera modificaciones también se pueden <a href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/">Generar documentos, informes y facturas en formato PDF con JasperReports</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaPdf">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://dzone.com/articles/creating-pdf-documents-with-apache-pdfbox-2">Creating PDF Documents With Apache PDFBox 2</a></li>
<li><a href="https://www.tutorialspoint.com/pdfbox/pdfbox_inserting_image.htm">Inserting Image to a PDF Document</a></li>
<li><a href="https://stackoverflow.com/a/27867740">Is iText Java library free of charge or have any fees to be paid?</a></li>
<li><a href="https://hardmockcafe.blogspot.com/2016/04/pdf-text-layout-made-easy-with-pdfbox_17.html">PDF text layout made easy with PDFBox-Layout</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/</id>
        <title>Utilizar credenciales de conexión a la base de datos generadas por Vault en una aplicación de Spring</title>
        <updated>2019-08-23T09:00:00+02:00</updated>
        <published>2019-08-23T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Spring Cloud Vault facilita la integración con Vault, una de sus usos es utilizarlo para obtener unas credenciales de conexión a la base de datos generadas bajo demanda y con un tiempo de vida limitado en vez de embeberlas en la configuración de la aplicación y con u tiempo de vida indefinido.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault"  class=""></p>
</div>
<p>La herramienta <a href="https://www.vaultproject.io/">Vault</a> de <a href="https://www.hashicorp.com/">HashiCorp</a> permite almacenar secretos, otra de sus funcionalidad es ser capaz de generar credenciales de forma dinámica. Habitualmente una aplicación para conectarse a una base de datos incluye en su configuración las credenciales, usuario y contraseña, para autenticarse y crear las conexiones, estas credenciales tiene un tiempo de vida indefinido y comprometidas proporcionan acceso a la base de datos.</p>
<p>Vault permite centralizar la seguridad, otorgar a cada aplicación los permisos para conectarse a una base de datos a través de la obtención de credenciales (usuario y contraseña), auditar su uso y limitar el tiempo de validez de las credenciales a unas horas en vez de forma indefinida.</p>
<p><a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a> permite a una aplicación <a href="https://spring.io/">Spring</a> simplificar la integración con Vault para obtener unas credenciales generadas dinámicamente.</p>
<p>En el archivo de construcción de la aplicación hay que incluir las dependencias de Spring para la integración con Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="o">...</span>&#10;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-vault-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-vault-config-databases&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;<span class="o">...</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Obtener la credenciales de conexión a la base de datos es transparente para el código de la aplicación, lo único que se necesita es el usuario y contraseña además de la URL de conexión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloudvault</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${spring.datasource.username}&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">username</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${spring.datasource.password}&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">password</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Username: %s%n&#34;</span><span class="o">,</span> <span class="n">username</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Password: %s%n&#34;</span><span class="o">,</span> <span class="n">password</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">&#34;jdbc:postgresql://127.0.0.1:5432/app&#34;</span><span class="o">,</span> <span class="n">username</span><span class="o">,</span> <span class="n">password</span><span class="o">))</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">connection</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Connected to the database!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Failed to make connection!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">SQLException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;SQL State: %s\n%s&#34;</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getSQLState</span><span class="o">(),</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">...&#10;10:37:47.013 [main] INFO  io.github.picodotdev.blogbitix.springcloudvault.Main - Started Main in 1.368 seconds (JVM running for 1.784)&#10;Username: v-approle-app-gRlHQlNyPF8qJ3DCUz9U-1566549466&#10;Passowrd: A1a-MPPFfvMD3OQUC00H&#10;Connected to the database!&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>La parte más relevante está en la configuración necesaria de la aplicación. Hay que añadir como configuración la ubicación del servidor Vault, es necesario configurar un método de autenticación para Vault, para el caso de aplicaciones el recomendado es <em>AppRole</em>. Con <em>AppRole</em> cada aplicación necesita de un <em>role-id</em> y un <em>secret-id</em> que hay que generar previamente. Y el rol del que obtener las credenciales, <em>app</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">spring.application.name</span><span class="p">:</span><span class="w"> </span><span class="l">app</span><span class="w">&#10;</span><span class="w"></span><span class="nt">spring.cloud.vault</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">uri</span><span class="p">:</span><span class="w"> </span><span class="l">http://127.0.0.1:8200</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">APPROLE</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">app-role</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">role-id</span><span class="p">:</span><span class="w"> </span><span class="l">a248529d-882c-ef5f-f7e6-6a9d349afa57</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">secret-id</span><span class="p">:</span><span class="w"> </span><span class="l">13b6c224-dc18-0404-7bc1-7c258c4c5a48</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">database</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">role</span><span class="p">:</span><span class="w"> </span><span class="l">app</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">backend</span><span class="p">:</span><span class="w"> </span><span class="l">database</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">username-property</span><span class="p">:</span><span class="w"> </span><span class="l">spring.datasource.username</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">password-property</span><span class="p">:</span><span class="w"> </span><span class="l">spring.datasource.password</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>bootstrap.yml</span>
    </div>
</div>
<p>Para probarlo hay que iniciar en este caso el servidor <a href="https://www.consul.io/">Consul</a> ya que en el ejemplo se utiliza como el lugar donde se guardan los secretos. También hay que iniciar Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev&#10;<span class="o">==</span>&gt; Starting Consul agent...&#10;<span class="o">==</span>&gt; Consul agent running!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: <span class="s1">&#39;v1.5.0&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID: <span class="s1">&#39;2f523068-b196-e3bb-0b09-dc34e20989d2&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node name: <span class="s1">&#39;archlinux&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Datacenter: <span class="s1">&#39;dc1&#39;</span> <span class="o">(</span>Segment: <span class="s1">&#39;&lt;all&gt;&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span> <span class="o">(</span>Bootstrap: <span class="nb">false</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Client Addr: <span class="o">[</span>127.0.0.1<span class="o">]</span> <span class="o">(</span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  Cluster Addr: 127.0.0.1 <span class="o">(</span>LAN: 8301, WAN: 8302<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev -config vault.hcl&#10;<span class="o">==</span>&gt; Vault server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: consul <span class="o">(</span>HA available<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;&#10;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;and starts unsealed with a single unseal key. The root token is already&#10;authenticated to the CLI, so you can immediately begin using Vault.&#10;&#10;You may need to <span class="nb">set</span> the following environment variable:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;&#10;The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;seal/unseal the Vault or re-authenticate.&#10;&#10;Unseal Key: <span class="nv">jsBAedtA88Lm7uU1pCSYOBK1980Ervf9GSky4usmEdQ</span><span class="o">=</span>&#10;Root Token: s.8wwm4fRuRRVFm1cbBUMgdNtE&#10;&#10;Development mode should NOT be used in production installations!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <pre tabindex="0"><code class="language-hcp" data-lang="hcp">ui = true&#10;&#10;storage &#34;consul&#34; {&#10; address = &#34;127.0.0.1:8500&#34;&#10; path  = &#34;vault&#34;&#10;}</code></pre>
    <div class="highlight-meta">
        <span>vault.hcl</span>
    </div>
</div>
<p>La base de datos PostgreSQL se inicia como un contenedor de <a href="https://www.docker.com/">Docker</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm -it -p <span class="s2">&#34;5432:5432&#34;</span> -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>postgres -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>postgres postgres:alpine&#10;docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAMES&#10;8fedf0ef1342&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">22</span> seconds ago&nbsp;&nbsp;&nbsp;&nbsp;  Up <span class="m">20</span> seconds&nbsp;&nbsp;&nbsp;&nbsp;   0.0.0.0:5432-&gt;5432/tcp   serene_leavitt&#10;&#10;$ docker <span class="nb">exec</span> -it 8fedf0ef1342 bash&#10;bash-5.0# psql -U postgres&#10;psql <span class="o">(</span>11.4<span class="o">)</span>&#10;Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;&#10;<span class="nv">postgres</span><span class="o">=</span><span class="c1"># CREATE DATABASE app;</span>&#10;CREATE DATABASE&#10;<span class="nv">postgres</span><span class="o">=</span><span class="c1">#</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql.sh</span>
    </div>
</div>
<p>Para realizar la configuración de Vault primero hay que iniciar sesión, en el modo desarrollo del ejemplo utilizando el <em>token root</em> que es generado y emitido en la salida al iniciarlo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;$ vault login s.8wwm4fRuRRVFm1cbBUMgdNtE&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-login.sh</span>
    </div>
</div>
<p>Como en el artículo <a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">Generar credenciales de conexión a base de datos bajo demanda con Vault</a> hay que activar el <em>backend</em> de <em>database</em> para generar credenciales de bases de datos, en las que básicamente se especifica la cadena de conexión a la base de datos de PostgreSQL con un usuario y contraseña con permisos suficientes para crear usuarios y la sentencia SQL que los crea. Se habilita y configura el <em>backend database</em> del que obtener las credenciales.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault secrets <span class="nb">enable</span> database&#10;$ vault write database/config/app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">plugin_name</span><span class="o">=</span>postgresql-database-plugin <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">allowed_roles</span><span class="o">=</span><span class="s2">&#34;app&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">connection_url</span><span class="o">=</span><span class="s2">&#34;postgresql://{{username}}:{{password}}@localhost:5432/?sslmode=disable&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">username</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">password</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span>&#10;$ vault write database/roles/app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="nv">db_name</span><span class="o">=</span>app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="nv">creation_statements</span><span class="o">=</span><span class="s2">&#34;CREATE ROLE \&#34;{{name}}\&#34; WITH LOGIN PASSWORD &#39;{{password}}&#39; VALID UNTIL &#39;{{expiration}}&#39;; GRANT SELECT ON ALL TABLES IN SCHEMA public TO \&#34;{{name}}\&#34;;&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="nv">default_ttl</span><span class="o">=</span><span class="s2">&#34;1h&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="nv">max_ttl</span><span class="o">=</span><span class="s2">&#34;24h&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-database.sh</span>
    </div>
</div>
<p>Para que la aplicación de Spring Boot obtenga las credenciales ha de autenticarse en Vault en este caso utilizando el método recomendado para las aplicaciones que es utilizando en mecanismo de autenticación <em>AppRole</em> que básicamente es un usuario y contraseña para las aplicaciones.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault auth <span class="nb">enable</span> approle&#10;$ vault write auth/approle/role/app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">secret_id_ttl</span><span class="o">=</span>10m <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">token_num_uses</span><span class="o">=</span><span class="m">10</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">token_ttl</span><span class="o">=</span>20m <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">token_max_ttl</span><span class="o">=</span>30m <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">secret_id_num_uses</span><span class="o">=</span><span class="m">40</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">policies</span><span class="o">=</span>database-app&#10;$ vault <span class="nb">read</span> auth/approle/role/app/role-id&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;role_id&nbsp;&nbsp;&nbsp;&nbsp;a248529d-882c-ef5f-f7e6-6a9d349afa57&#10;$ vault write -f auth/approle/role/app/secret-id&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   -----&#10;secret_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 13b6c224-dc18-0404-7bc1-7c258c4c5a48&#10;secret_id_accessor&nbsp;&nbsp;&nbsp;&nbsp;fd9a0915-af6e-b0a8-4e6c-dbb6ee587903</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-approle.sh</span>
    </div>
</div>
<p>En Vault los permisos se otorgan con las <em>policy</em>, los secretos se organiza en una estructura jerárquica de directorios y a cada una de los contextos se le otorga los permisos deseados. Spring obtiene las credenciales para la base de datos del contexto <em>database/creds/app</em> por lo que al rol utilizando para obtener las credenciales hay que asociarle un <em>policy</em> con permisos de lectura para este contexto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault policy write database-app database-app.hcl&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-policy.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="k">path</span> <span class="s2">&#34;secret/application&#34;</span> {&#10;<span class="n">  capabilities</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;read&#34;</span><span class="p">]</span>&#10;}&#10;&#10;<span class="k">path</span> <span class="s2">&#34;secret/app&#34;</span> {&#10;<span class="n">  capabilities</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;read&#34;</span><span class="p">]</span>&#10;}&#10;&#10;<span class="k">path</span> <span class="s2">&#34;database/creds/app&#34;</span> {&#10;<span class="n">  capabilities</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;read&#34;</span><span class="p">]</span>&#10;}&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>database-app.hcl</span>
    </div>
</div>
<p>Obtenido un <em>role-id</em> y un <em>secret-id</em> so observa los <em>policies</em> asociados además de otras propiedades.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault write auth/approle/login <span class="nv">role_id</span><span class="o">=</span>a248529d-882c-ef5f-f7e6-6a9d349afa57 <span class="nv">secret_id</span><span class="o">=</span>13b6c224-dc18-0404-7bc1-7c258c4c5a48&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -----&#10;token&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   s.yAKbv8Qz5tfXpc8n7C8oND01&#10;token_accessor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  GPHO70D2NFRHFFdsiNiftmzO&#10;token_duration&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  20m&#10;token_renewable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">true</span>&#10;token_policies&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[</span><span class="s2">&#34;database-app&#34;</span> <span class="s2">&#34;default&#34;</span><span class="o">]</span>&#10;identity_policies&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">[]</span>&#10;policies&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[</span><span class="s2">&#34;database-app&#34;</span> <span class="s2">&#34;default&#34;</span><span class="o">]</span>&#10;token_meta_role_name&nbsp;&nbsp;&nbsp;&nbsp;app</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-role-id.sh</span>
    </div>
</div>
<p>En este caso la aplicación de Spring incluye en su configuración las credenciales del <em>AppRole</em>, también se puede proporcionar como variables de entorno y propiedades del sistema.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudVaultDynamicCredentials">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/spring-cloud-vault">An Intro to Spring Cloud Vault</a></li>
<li><a href="https://cloud.spring.io/spring-cloud-vault/reference/html/#_approle_authentication">Spring Cloud Vault AppRole authentication</a></li>
<li><a href="https://cloud.spring.io/spring-cloud-vault/reference/html/#vault.config.backends.database-backends">Spring Cloud Vault Database backends</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/</id>
        <title>Generar credenciales de conexión a base de datos bajo demanda con Vault</title>
        <updated>2019-08-15T09:00:00+02:00</updated>
        <published>2019-08-15T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Una de las funcionalidades proporcionada por Vault es generar credenciales dinámicas para la conexión a bases de datos. Generar las credenciales de forma dinámica proporciona varios beneficios: no hay unas credenciales que usen las aplicaciones que tengan un tiempo de vida indefinido, las aplicaciones no necesitan guardar en su configuración las credenciales, las credenciales se rotan de forma automática y los permisos para obtenerlas se pueden revocar de forma centralizada con Vault para cuales quiera bases de datos que se utilicen. Soporta las bases de datos más populares entre ellas PostgreSQL.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="206" alt="PostgreSQL" title="PostgreSQL"  class=""></p>
</div>
<p>Las base de datos para proteger los datos realizan autenticación del usuario que se conecta. Normalmente utilizando un usuario y contraseña, una vez autenticado el usuario mediante permisos se realiza la autorización de las operaciones que puede realizar, a que bases de datos se puede conectar, que tablas puede acceder y que operaciones puede realizar.</p>
<p>Este modelo de autenticación tiene algunos inconvenientes. Uno de los inconvenientes es que los usuarios y contraseñas para mayor seguridad han de cambiarse con cierta frecuencia para evitar que si las credenciales quedan comprometidas no puedan utilizarse indefinidamente. Otro problema es que cada aplicación ha de conocer las credenciales de la base de datos, esto hace que haya múltiples posibilidades de que las credenciales queden comprometidas. Por otro lado el uso de las credenciales no queda registrado de forma centralizada que es necesario para saber ante una brecha de seguridad qué datos han sido accedidos y por quien.</p>
<p>La herramienta <a href="https://www.vaultproject.io/">Vault</a> de <a href="https://www.hashicorp.com/">HashiCorp</a> da solución a estos problemas generando credenciales de acceso a las bases de datos de forma dinámica, bajo demanda y con un tiempo de concesión limitado. Las credenciales tiene un tiempo de vida limitado si no se renueva su concesión y la generación de las credenciales queda registrado. La forma que tiene Vault de generar credenciales de forma dinámica en una base de datos relacional como <a href="https://www.postgresql.org/">PostgreSQL</a> es conectarse a la base de datos con un usuario con permisos para generarlas y ejecutar una sentencia SQL que crea las credenciales.</p>
<p>Para permitir a Vault generar credenciales de conexión hay que activar el <em>backend</em> de bases de datos, configurarlo con la sentencia SQL que se utilizará para generar las credenciales y crear el rol de Vault que genera las credenciales cuando se le solicite. En este ejemplo se muestra para la base de datos PostgreSQL pero Vault también soporta otras bases de datos como <a href="https://www.mysql.com/">MySQL</a>. En el ejemplo la base de datos PostgreSQL se ejecuta en un contenedor de <a href="https://www.docker.com/">Docker</a> en el que se asignan el usuario y contraseña del usuario <em>root</em> que utiliza Vault para generar las credenciales de forma dinámica.</p>
<p>Con las siguientes comandos se inicia <a href="https://www.consul.io/">Consul</a> y Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev&#10;<span class="o">==</span>&gt; Starting Consul agent...&#10;<span class="o">==</span>&gt; Consul agent running!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: <span class="s1">&#39;v1.5.0&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID: <span class="s1">&#39;38d4f541-0958-6d7d-d49e-a31a15987286&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node name: <span class="s1">&#39;archlinux&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Datacenter: <span class="s1">&#39;dc1&#39;</span> <span class="o">(</span>Segment: <span class="s1">&#39;&lt;all&gt;&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span> <span class="o">(</span>Bootstrap: <span class="nb">false</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Client Addr: <span class="o">[</span>127.0.0.1<span class="o">]</span> <span class="o">(</span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  Cluster Addr: 127.0.0.1 <span class="o">(</span>LAN: 8301, WAN: 8302<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev -config vault.hcl&#10;<span class="o">==</span>&gt; Vault server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: consul <span class="o">(</span>HA available<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;&#10;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;and starts unsealed with a single unseal key. The root token is already&#10;authenticated to the CLI, so you can immediately begin using Vault.&#10;&#10;You may need to <span class="nb">set</span> the following environment variable:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;&#10;The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;seal/unseal the Vault or re-authenticate.&#10;&#10;Unseal Key: <span class="nv">jeW10eak6TxJzH2qFnwk7bWk7HcpDXd3KQOobi1rZTQ</span><span class="o">=</span>&#10;Root Token: s.0YRcRzojVcPG8LbbzyUd1MEA&#10;&#10;Development mode should NOT be used in production installations!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="n">ui</span> <span class="o">=</span> <span class="kt">true</span>&#10;&#10;<span class="k">storage</span> <span class="s2">&#34;consul&#34;</span> {&#10;<span class="n">  address</span> <span class="o">=</span> <span class="s2">&#34;127.0.0.1:8500&#34;</span>&#10;<span class="n">  path</span>  <span class="o">=</span> <span class="s2">&#34;vault&#34;</span>&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.hcl</span>
    </div>
</div>
<p>La base de datos se inicia en un contenedor de Docker, se crea una base de datos y una tabla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run -it -p <span class="s2">&#34;5432:5432&#34;</span> -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>postgres -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>postgres postgres:alpine&#10;$ docker ps &#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAMES&#10;2792b13c36c1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">3</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">3</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:5432-&gt;5432/tcp   distracted_keldysh&#10;$ docker <span class="nb">exec</span> -it 2792b13c36c1 bash&#10;bash-5.0# psql -U postgres&#10;psql <span class="o">(</span>11.4<span class="o">)</span>&#10;Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;&#10;<span class="nv">postgres</span><span class="o">=</span><span class="c1"># CREATE DATABASE app;</span>&#10;<span class="nv">postgres</span><span class="o">=</span><span class="c1"># \connect app</span>&#10;You are now connected to database <span class="s2">&#34;app&#34;</span> as user <span class="s2">&#34;postgres&#34;</span>.&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># CREATE TABLE product (</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bigint PRIMARY KEY,&#10;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;   varchar<span class="o">(</span>256<span class="o">)</span> NOT NULL&#10;<span class="o">)</span><span class="p">;</span>&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># \dt</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  List of relations&#10; Schema <span class="p">|</span>  Name   <span class="p">|</span> Type  <span class="p">|</span>  Owner   &#10;--------+---------+-------+----------&#10; public <span class="p">|</span> product <span class="p">|</span> table <span class="p">|</span> postgres&#10;<span class="o">(</span><span class="m">1</span> row<span class="o">)</span>&#10;$ docker inspect -f <span class="s1">&#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39;</span> 2792b13c36c1&#10;172.17.0.2</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql.sh</span>
    </div>
</div>
<p>En Vault hay que crear la configuración para conectarse a la base de datos y un rol que contiene la configuración para generar las credenciales y permitir obtenerlas, básicamente es un sentencia SQL con el nombre del usuario y contraseña, los permisos que se le asignan y el tiempo de concesión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span>http://127.0.0.1:8200&#10;$ vault login s.0YRcRzojVcPG8LbbzyUd1MEA&#10;$ vault secrets <span class="nb">enable</span> database</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-database.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault write database/config/app <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">plugin_name</span><span class="o">=</span>postgresql-database-plugin <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">allowed_roles</span><span class="o">=</span><span class="s2">&#34;app&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">connection_url</span><span class="o">=</span><span class="s2">&#34;postgresql://{{username}}:{{password}}@localhost:5432/?sslmode=disable&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">username</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">password</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span>&#10;$ vault write database/roles/app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">db_name</span><span class="o">=</span>app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">creation_statements</span><span class="o">=</span><span class="s2">&#34;CREATE ROLE \&#34;{{name}}\&#34; WITH LOGIN PASSWORD &#39;{{password}}&#39; VALID UNTIL &#39;{{expiration}}&#39;; GRANT SELECT ON ALL TABLES IN SCHEMA public TO \&#34;{{name}}\&#34;;&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">default_ttl</span><span class="o">=</span><span class="s2">&#34;1h&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">max_ttl</span><span class="o">=</span><span class="s2">&#34;24h&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-role.sh</span>
    </div>
</div>
<p>Las credenciales se generan en el momento de leer una propiedad de Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault <span class="nb">read</span> database/roles/app&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;creation_statements&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[</span>CREATE ROLE <span class="s2">&#34;{{name}}&#34;</span> WITH LOGIN PASSWORD <span class="s1">&#39;{{password}}&#39;</span> VALID UNTIL <span class="s1">&#39;{{expiration}}&#39;</span><span class="p">;</span> GRANT SELECT ON ALL TABLES IN SCHEMA public TO <span class="s2">&#34;{{name}}&#34;</span><span class="p">;</span><span class="o">]</span>&#10;db_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  app&#10;default_ttl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  1h&#10;max_ttl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  24h&#10;renew_statements&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">[]</span>&#10;revocation_statements&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[]</span>&#10;rollback_statements&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[]</span>&#10;$ vault <span class="nb">read</span> database/creds/app&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;lease_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   database/creds/app/rFFlNmpNoxezccTVh3WufZOT&#10;lease_duration&nbsp;&nbsp;&nbsp;&nbsp; 1h&#10;lease_renewable&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">true</span>&#10;password&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   A1a-6hRTGNaShFIEGLvp&#10;username&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-credentials.sh</span>
    </div>
</div>
<p>En PostgreSQL la conexión desde la máquina local se permiten sin necesidad de credenciales, para simular realizar la conexión desde otra máquina hay que iniciar otro contenedor. En la conexión se utilizan las credenciales que ha proporcionado Vault. Dado que se realiza una operación de red hay que desactivar el <em>firewall</em> del sistema o permitir la conexión al puerto de la base de datos que en PostgreSQL es el 5432 si fuera necesario. Listando los usuarios de la base de datos con el comando <em>\du</em> se muestra el creado por Vault y si tiempo de validez.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run -it postgres:alpine bash&#10;bash-5.0# <span class="nv">PGPASSWORD</span><span class="o">=</span>A1a-6hRTGNaShFIEGLvp psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app&#10;psql <span class="o">(</span>11.4<span class="o">)</span>&#10;Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;&#10;<span class="nv">app</span><span class="o">=</span>&gt; <span class="se">\d</span>t&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  List of relations&#10; Schema <span class="p">|</span>  Name   <span class="p">|</span> Type  <span class="p">|</span>  Owner   &#10;--------+---------+-------+----------&#10; public <span class="p">|</span> product <span class="p">|</span> table <span class="p">|</span> postgres&#10;<span class="o">(</span><span class="m">1</span> row<span class="o">)</span>&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># \du</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List of roles&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Role name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attributes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> Member of &#10;--------------------------------------------+------------------------------------------------------------+-----------&#10; postgres&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> Superuser, Create role, Create DB, Replication, Bypass RLS <span class="p">|</span> <span class="o">{}</span>&#10; v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 <span class="p">|</span> Password valid <span class="k">until</span> 2019-08-15 09:22:55+00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> <span class="o">{}</span>&#10;<span class="nv">app</span><span class="o">=</span>&gt; quit</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-connect.sh</span>
    </div>
</div>
<p>Si el usuario y contraseña no es correcto no se permite la conexión a la base de datos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-5.0# <span class="nv">PGPASSWORD</span><span class="o">=</span>tampered psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app&#10;psql: FATAL:  password authentication failed <span class="k">for</span> user <span class="s2">&#34;v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370&#34;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-connect-fail.sh</span>
    </div>
</div>
<p>En las aplicaciones Java que utilizan <a href="https://spring.io/">Spring</a> el proyecto <a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a> proporciona las utilidades para simplificar en gran medida la obtención de las credenciales a la base de datos utilizando Vault.</p>
<p>Esto permite que únicamente Vault conozca la cuenta <em>root</em> de la base de datos o una con suficientes permisos para crear credenciales, las aplicaciones no almacenan en su configuración las credenciales para conectarse la base de datos solo las de Vault que le permiten obtener unas credenciales para la base de datos con un tiempo de vida limitado y que pueden revocarse desde Vault en caso de un problema de seguridad para cuales quiera bases de datos que se utilicen.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/">Introducción a la base de datos relacional PostgreSQL</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/</id>
        <title>Iniciar una aplicación de Spring Boot en un puerto aleatorio</title>
        <updated>2019-08-09T18:00:00+02:00</updated>
        <published>2019-08-09T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En una arquitectura basada en microservicios es normal iniciar varias instancias de un mismo servicio, si están en la misma máquina ha de asignarse a cada instancia un puerto diferente. Asignar los puertos manualmente no es recomendable cuando se quieren varias instancias, Spring Boot ofrece la funcionalidad de iniciar la aplicación en un puerto aleatorio.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Mediante configuración se puede especificar el puerto en el que se desea iniciar una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> que ofrece un servicio de red. El puerto por convención suele ser el <em>8080</em> y la propiedad de configuración de Spring Boot para modificarlo es <em>server.port</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8080}</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-1.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew service:run&#10;...&#10;2019-08-09 17:02:40,417  INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port<span class="o">(</span>s<span class="o">)</span>: <span class="m">8080</span> <span class="o">(</span>http<span class="o">)</span> with context path <span class="s1">&#39;&#39;</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>run-1.sh</span>
    </div>
</div>
<p>Cuando se tiene únicamente una aplicación este puerto por defecto es suficiente pero si se desean iniciar varias instancias de una aplicación o microservicio en una misma máquina es necesario asignar a cada una de ellas un puerto diferente para que no haya conflictos a usar el mismo puerto de red. Se puede hacer manualmente aunque con muchas instancias también se puede dejar a Spring Boot elegir un puerto aleatorio.</p>
<p>Para dejar a Spring Boot elegir el puerto de forma aleatoria basta con especificar el puerto con valor <em>0</em> en la propiedad de configuración <em>server.port</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:0}</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-2.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=0&#34;</span>&#10;...&#10;2019-08-09 17:02:40,417  INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port<span class="o">(</span>s<span class="o">)</span>: <span class="m">45871</span> <span class="o">(</span>http<span class="o">)</span> with context path <span class="s1">&#39;&#39;</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>run-2.sh</span>
    </div>
</div>
<p>Usando un <a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">servicio de registro y descubrimiento como Eureka</a> el servicio registra su ubicación y los servicios que quieran acceder a él obtendrán del mismo servicio de registro y descubrimiento su ubicación, de forma que para los clientes es transparente en qué puerto se inicie.</p>
<p>Sin embargo, por algún motivo con Eureka los servicios no se registran en el puerto aleatorio en el que realmente se inician sino que se registran incorrectamente en el puerto <em>0</em>, quizá utilizando <a href="https://www.consul.io/">Consul</a> el servicio de Spring Boot si se inicie en un puerto aleatorio.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://javadeveloperzone.com/spring-boot/spring-boot-random-server-port/">Spring Boot Random Server Port</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/smartcards-en-vez-de-discos-para-una-futura-generacion-de-consolas/</id>
        <title>Smartcards en vez de discos para una futura generación de consolas</title>
        <updated>2019-08-11T03:00:00+02:00</updated>
        <published>2019-08-03T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/smartcards-en-vez-de-discos-para-una-futura-generacion-de-consolas/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Todo indica que el formato físico de los juegos está a punto de desaparecer en una futura generación de consolas no muy lejana como ya ha ocurrido en gran medida con la música o los libros. Pero los juegos digitales crean otros problemas que los juegos físicos no tienen y es el motivo por el que algunos usuarios son contrarios a solo los digitales, ¿sería posible solución a los problemas de los juegos físicos y de los digitales? Aquí teorizo sobre este tema y planteo una solución, las <em>smartcards</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/playstation.svg" width="200" height="155" alt="PlayStation" title="PlayStation"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/xbox.svg" width="200" height="197" alt="Xbox" title="Xbox"  class=""></p>
</div>
<p>Hasta recientemente la forma de distribuir los juegos en las consolas y PC ha sido a través de cartuchos y discos CD, DVD, y Blu-Ray, si embargo con la masificación de internet y con anchos de banda asequibles para las conexiones residenciales de los usuarios de entre 30 Mbps, 600 Mbps y en un futuro aún más parece que es el momento de que los fabricantes y algunos usuarios estén prefiriendo un modelo de distribución basado en la descarga digital por internet. De hecho <a href="https://www.microsoft.com/">Microsoft</a> con la <a href="https://www.xbox.com">Xbox</a> One All-Digital ya ni siquiera posee lector de discos y todos los juegos ha de ser adquiridos a través de su tienda, la <a href="https://www.playstation.com/es-es/">PlayStation</a> de <a href="https://www.sony.es/">Sony</a> también posee su modelo de distribución digital.</p>
<p>El lector de discos junto con el posible sobrecalentamiento es uno los causantes de el mayor número de averías. Tarde o temprano el lector falla al ser algo mecánico, más temprano cuanto más uso se le da. Es uno de los motivos por los que si yo tuviese una consola me platearía adquirir los juegos digitales en vez de físicos estando a un precio similar o incluso un poco mayor, esto no quiere decir que considere que los digitales deberían ser mas baratos porque la distribución de los mismos es más sencilla y barata. En la actualidad de momento no hay interés en mantener una competencia de precios entre la tienda digital y la física, salvo ofertas puntuales aunque los físicos de segunda mano se suelen encontrar a precios menores que en las ediciones digitales. Otro motivo por el prefiero los juegos digitales es porque me ocupan espacio y en mi caso no estoy apegado a tener las cosas tangibles para adorarlas como si fuesen totems de dioses, vamos que no necesito verlas colocadas en una balda cogiendo polvo. Los discos pueden estropearse con rayaduras y necesitan de todas formas descargar actualizaciones con contenido mejorado o adicional.</p>
<p>Sin embargo, algunos usuarios prefieren los discos por el apego sentimental que pueden tenerle al objeto por los buenos momentos de diversión que les ha proporcionado. Otros quizá por coleccionismo. Algunos prefieren poseer algo tangible de lo que compran y en algún caso porque con razón consideran que en el caso de los digitales es la empresa la que realmente posee el juego y no quieren que sea la empresa la que tenga ese poder, si la empresa desaparece todo los bienes digitales que adquirieron ¿que pasaría con ellos? ¿también desaparecerían? Si Microsoft decide cerrar la división de juegos porque no está obteniendo el rendimiento esperado todas las personas podrían perder sus posesiones digitales.</p>
<h1 id="las-smartcards-como-hipotética-solución">Las smartcards como hipotética solución</h1>
<p>De esto que das un paseo andando o estás cansado a punto de dormir y después de haber un par de vídeos anteriormente o hablado con alguien sobre el tema le das una vuelta y se te ocurre una forma de como solucionar un problema, en este caso el de la posesión física y compatibilizarlo con las descargas digitales. He estado viendo dos vídeos en dos canales de YouTube que hablan precisamente de este tema, uno de <a href="https://www.youtube.com/watch?v=7mZzJYH4FcE">tonondor</a> y otro de <a href="https://www.youtube.com/watch?v=-F-MrmOpMas">Vídeo Blog</a> (seguro que hay más de otros usuarios de YouTube), y como solución a los problemas anteriores de fiabilidad del lector de discos y la posesión física frente a la digital se me ha ocurrido que una solución podría ser el reemplazo de los discos por una <em>smartcard</em>.</p>
<p>El concepto de una <em>smartcard</em> es un objeto tangible como una tarjeta de crédito que correspondería a la posesión física de un disco al que reemplazaría, al contrario de los discos no tendría almacenamiento sino que simplemente sería algún tipo de credencial de que su poseedor concede el derecho a usar un juego. Lógicamente esta <em>smartcard</em> debería estar dotada de suficientes medidas de seguridad para que no pueda ser suplantada. El lector de disco con partes mecánicas sería reemplazado por un lector de tarjetas inteligentes por contacto o <em>contacless</em> como ya funciona numerosas tarjetas de crédito y bonos de medios de transporte.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/2019/08/smartcards-en-vez-de-discos-para-una-futura-generacion-de-consolas/images/smartcard-contactless_huae5e9a1b0a8b801392f690f17fa110e2_56001_2560x1440_fit_box_3.png" width="250" height="250" alt="Smartcard contactless" title="Smartcard contactless"  class="lozad "></p>
</figure>
</div>
<p>Quedada resuelta la posesión física de los juegos con la <em>smartcard</em>, queda como descargarlos y en este modelo que planteo la descarga se realizaría a través de internet tal como ocurre en los juegos digitales. Una vez descargado el juego ya no sería necesaria la conexión a internet y solo introducir la <em>smartcard</em> en cada inicio del juego, en cada 3 inicios o cada 3 días para evitar la incomodidad de tener que usar la <em>smartcard</em> en cada inicio.</p>
<p>Resuelta la posesión física y la descarga queda como poseer la imagen de juego como si de un disco físico se tratase y podría ser dando la posibilidad de guardar la imagen instalable de juego en un disco duro externo ya sea en una imagen ISO u otro formato de imagen. Nuevamente tanto la <em>smartcard</em> como la imagen de disco debería estar dotada de suficientes medidas de seguridad para que estos no puedan ser alterados, suplantados o usados de forma ilegítima pero si lo han hecho con los discos blu-ray no veo por que no puedan hacerlo con el sistema de <em>smartcard</em>.</p>
<p>Queda resolver como poder descargar las imágenes de los juegos en una fecha tan posterior del lanzamiento de la consola como 20 años después pero mientras la seguridad esté en la posesión de la <em>smartcard</em> como forma de poder jugar al juego en la consola incluso no tendría por que ser Sony, Microsoft o <a href="https://store.steampowered.com/">Steam</a> las que distribuyan las imágenes de los juegos y podría ser cualquier otra entidad o usuario incluso mediante torrent.</p>
<p>Con las <em>smartcards</em> el mercado de segunda mano del que se nutren algunas tiendas como forma alternativa de negocio a la venta de juegos nuevos precintados podría seguir funcionando exactamente igual cosa que con los digitales es susceptible de desaparecer. Por supuesto, las <em>smartcards</em> serían algo más pequeñas que los discos, posiblemente tan fáciles de crear y con un coste no muy diferente.</p>
<p>Eliminar el lector de discos tiene la ventaja adicional de que seguramente el lector de <em>smartcards</em> sería mucho más pequeño con el consiguiente ahorro en tamaño de la PS4 y también peso.</p>
]]>
        </content>
        
            
                <category term="juegos"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/implementar-tolerancia-a-fallos-con-resilience4j/</id>
        <title>Implementar tolerancia a fallos con Resilience4j</title>
        <updated>2019-08-02T17:00:00+02:00</updated>
        <published>2019-08-02T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/implementar-tolerancia-a-fallos-con-resilience4j/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/resilience4j.png" width="200" height="200" alt="Resilience4j" title="Resilience4j"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p><a href="https://github.com/Netflix/Hystrix">Hystrix</a> ha sido una de las primeras librerías en Java disponibles para implementar varios patrones de tolerancia a fallos en los microservicios. Desde hace un tiempo ha pasado a modo mantenimiento en el que ya no se incluyen nuevas características, una de las librerías recomendadas como sustituta es <a href="https://github.com/resilience4j/resilience4j">Resilience4j</a>. Resilience4j proporciona las características similares con algunas ventajas adicionales.</p>
<p>Los patrones útiles para aumentar la tolerancia a fallos debido a problemas de red o fallo de alguno de los múltiples servicios son:</p>
<ul>
<li><em>Circuit breaker</em>: para dejar de hacer peticiones cuando un servicio invocado está fallando.</li>
<li><em>Retry</em>: realiza reintentos cuando un servicio ha fallado de forma temporal.</li>
<li><em>Bulkhead</em>: limita el número de peticiones concurrentes salientes a un servicio para no sobrecargarlo.</li>
<li><em>Rate limit</em>: limita el número de llamadas que recibe un servicio en un periodo de tiempo.</li>
<li><em>Cache</em>: intenta obtener un valor de la cache y si no está presente de la función de la que lo recupera.</li>
<li><em>Time limiter</em>: limita el tiempo de ejecución de una función para no esperar indifinidamente a una respuesta.</li>
<li>Además de la funcionalidad de métricas.</li>
</ul>
<p>La ventaja de Resilience4j es que todos estos patrones para los microservicios se ejecutan en el mismo hilo que el principal y no en un aparte como en Hystrix. Su uso además no requiere de crear clases específicas para hacer uso de los patrones y pueden emplearse las <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">funciones <em>lambda</em> incorporadas en Java 8</a>.</p>
<p>Este artículo actualiza el ejemplo que usaba <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> y <a href="https://projects.spring.io/spring-cloud/">Spring Cloud</a> que implementé en su momento para la <a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">serie de artículos sobre Spring Cloud</a> añadiendo una implementación del cliente de un microservicio con Resilience4j.</p>
<p>La configuración de Resilience4j se puede proporcionar mediante código Java, con anotaciones y con la <a href="https://resilience4j.readme.io/docs/getting-started-3">integración para Spring Boot</a> con parámetros en el archivo de configuración de la aplicación. La aplicación además de varias cosas de Spring Cloud para otros artículos de la serie consiste para el de este artículo en un servicio cliente y un servicio servidor que para ser tolerantes a fallos hacen uso de los patrones <em>circuit breaker</em> y <em>time limiter</em> para demostrar su uso.</p>
<p>Resilience4j para implementar los patrones lo que hace es decorar la función objetivo que hace la invocación del servicio. Si se quieren aplicar varios patrones hay que encadenar las decoraciones, por ejemplo, si se quiere limitar el número de llamadas salientes con <em>bulkhead</em> y el patrón <em>circuit breaker</em> hay que aplicar una decoración sobre la otra. En este ejemplo se aplica un <em>time limiter</em> y un <em>circuit breaker</em> usando código Java. La variable <em>get</em> es la que realmente contiene la llamada al servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Resilience4jProxyService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracing</span> <span class="n">tracing</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracer</span> <span class="n">tracer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">CircuitBreakerConfig</span> <span class="n">circuitBreakerConfiguration</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TimeLimiterConfig</span> <span class="n">timeLimiterConfiguration</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Resilience4jProxyService</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">circuitBreakerConfiguration</span> <span class="o">=</span> <span class="n">CircuitBreakerConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">failureRateThreshold</span><span class="o">(</span><span class="n">50</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">recordExceptions</span><span class="o">(</span><span class="n">IOException</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">TimeoutException</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">timeLimiterConfiguration</span> <span class="o">=</span> <span class="n">TimeLimiterConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">timeoutDuration</span><span class="o">(</span><span class="n">Duration</span><span class="o">.</span><span class="na">ofMillis</span><span class="o">(</span><span class="n">2500</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">cancelRunningFuture</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;proxy&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">resource</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s%s&#34;</span><span class="o">,</span> <span class="n">uri</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="s">&#34;/service&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Invocation</span><span class="o">.</span><span class="na">Builder</span> <span class="n">builder</span> <span class="o">=</span> <span class="n">ClientBuilder</span><span class="o">.</span><span class="na">newClient</span><span class="o">().</span><span class="na">target</span><span class="o">(</span><span class="n">resource</span><span class="o">).</span><span class="na">request</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CircuitBreaker</span> <span class="n">circuitBreaker</span> <span class="o">=</span> <span class="n">CircuitBreaker</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;resilience4jCircuitBreakerProxyService&#34;</span><span class="o">,</span> <span class="n">circuitBreakerConfiguration</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TimeLimiter</span> <span class="n">timeLimiter</span> <span class="o">=</span> <span class="n">TimeLimiter</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">timeLimiterConfiguration</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Supplier</span><span class="o">&lt;</span><span class="n">CompletableFuture</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">get</span> <span class="o">=</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">get</span><span class="o">().</span><span class="na">readEntity</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getLimiter</span> <span class="o">=</span> <span class="n">TimeLimiter</span><span class="o">.</span><span class="na">decorateFutureSupplier</span><span class="o">(</span><span class="n">timeLimiter</span><span class="o">,</span> <span class="n">get</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getCircuitBreaker</span> <span class="o">=</span> <span class="n">CircuitBreaker</span><span class="o">.</span><span class="na">decorateCallable</span><span class="o">(</span><span class="n">circuitBreaker</span><span class="o">,</span> <span class="n">getLimiter</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">getCircuitBreaker</span><span class="o">::</span><span class="n">call</span><span class="o">).</span><span class="na">recover</span><span class="o">((</span><span class="n">throwable</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">getFallback</span><span class="o">()).</span><span class="na">get</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Resilience4jProxyService.java</span>
    </div>
</div>
<p>Las dependencias que hay que añadir en el proyecto son:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.6.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.client.Main&#39;</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s2">&#34;org.springframework.boot:spring-boot-dependencies:2.1.6.RELEASE&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s2">&#34;org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR1&#34;</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;io.github.resilience4j:resilience4j-spring-boot2:0.17.0&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;io.micrometer:micrometer-registry-prometheus:1.1.5&#39;</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Resilience4j proporciona añadidos de integración con Spring Boot y exportación de métricas para <a href="https://prometheus.io/">Prometheus</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://dzone.com/articles/resilience4j-intro">Achieving Fault Tolerance With Resilience4j</a></li>
<li><a href="https://www.baeldung.com/resilience4j">Guide to Resilience4j</a></li>
<li><a href="https://spring.io/blog/2019/01/23/spring-cloud-greenwich-release-is-now-available">Spring Cloud Greenwich.RELEASE</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/</id>
        <title>Administrar secretos y proteger datos sensibles con Vault</title>
        <updated>2019-07-27T23:00:00+02:00</updated>
        <published>2019-07-27T18:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Herramientas de aprovisionamiento como Chef, Puppet y Ansible solucionan el problema de la seguridad de los secretos de forma similar, utilizando una única clave de cifrado. Los datos cifrados están siempre a un secreto (contraseña, clave, &hellip;) de ser descifrados y generalmente no está bien protegidos dado que en un entorno elástico cada servidor necesita disponer de este secreto para descifrar los datos. Adicionalmente el acceso a los datos cifrados no está registrado de modo que si hay una intrusión no está claro que dato ha sido accedido y por quien. Utilizar variables de entorno para proporcionar secretos tampoco es seguro, y en entornos Docker suele usarse.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>La seguridad es un aspecto muy importante de los sistemas informáticos, no darle la consideración necesaria puede dar lugar a caídas de servicio y robo de datos potencialmente ocasionando importantes pérdidas de dinero, sanciones y pérdida de confianza de los clientes y proveedores de una organización.</p>
<p>La seguridad se mantiene mediante mecanismos de autenticación identifican al solicitante solicitante, de autorización permitiendo realiza únicamente las acciones para las que se tienen permisos y mediante firma y cifrado para impedir la modificación de los datos y el acceso a la información sin las credenciales y autorización requerida.</p>
<p>La infraestructura informática de los sistemas actuales es cada vez más compleja por el número y tipo de las distintas de piezas que emplean como bases de datos, sistemas de mensajes u otros servicios, también por el aspecto efímero en la tendencia actual de microservicios como por la utilización de entornos en la nube con una infraestructura no confiable al estar fuera del control de una organización y estar compartida con otras organizaciones.</p>
<p>No es seguro utilizar archivos sin cifrar aún utilizando los permisos del sistema de archivos dado que una intrusión en el sistema posibilita el acceso al secreto. Cifrarlos los archivos es el mismo caso de herramientas como <a href="https://www.getchef.com/">Chef</a>, <a href="https://puppet.com/">Puppet</a> y <a href="https://www.ansible.com/">Ansible</a>. Utilizar variables de entorno para proporcionar secretos tampoco es seguro ya que aunque los secretos no están en el sistema de archivos se pueden inspeccionar las variables de entorno de un proceso.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ env <span class="p">|</span> grep SECRET&#10;$ docker inspect&#10;$ sudo cat /proc/<span class="nv">$pid</span>/environ</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>commands.sh</span>
    </div>
</div>
<p>Por otra parte las contraseñas y claves han de rotarse regularmente para limitar en el tiempo el acceso ante el filtrado de las credenciales en un sistema o para denegar el acceso a una persona que en algún momento haya tenido credenciales de acceso como un empleado que ya no pertenece a la compañía.</p>
<h3 id="vault">Vault</h3>
<p><a href="https://www.vaultproject.io/">Vault</a> es una herramienta para acceder de forma segura a secretos. Un secreto es cualquier cosa a la que se quiera tener severamente controlado como claves de API, contraseñas y certificados. Vault proporciona una interfaz para cualquier secreto a la vez que mantiene un control de acceso y un <em>log</em> de acceso detallado.</p>
<ul>
<li><a href="https://www.vaultproject.io/docs/what-is-vault/index.html">Introduction to Vault</a></li>
<li><a href="https://www.vaultproject.io/docs/use-cases/index.html">Use Cases</a></li>
</ul>
<p>Las características principales de Vault se engloban en tres aspectos de la seguridad: cifrado, control de acceso y ciclo de vida.</p>
<ul>
<li>Almacenamiento seguro de secretos: se pueden almacenar secretos arbitrarios clave/valor. Los secretos son cifrados previamente a ser almacenados en el almacenamiento persistente de modo que obtener acceso al almacenamiento persistente no es suficiente para acceder a los secretos. Vault puede almacenar los secretos en disco, <a href="https://www.consul.io/">Consul</a> y más.</li>
<li>Secretos dinámicos: puede <a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">generar secretos bajo demanda para bases de datos</a> o algunos sistemas como AWS. Por ejemplo, cuando una aplicación necesita acceso a una base de datos SQL solicita a Vault unas credenciales, Vault genera unas credenciales con los permisos adecuados. Después de crear estos secretos dinámicos también los revoca automáticamente una vez pasado su tiempo de concesión.</li>
<li>Cifrado de datos: puede <a href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/">cifrar y descifrar datos sin almacenarlos</a>. Esto permite definir parámetros de seguridad y los desarrolladores almacenar los datos cifrados en localizaciones como bases de datos sin tener que diseñar sus propios métodos de cifrado.</li>
<li>Concesión y renovación: todos los secretos en Vault tienen un tiempo de concesión asociado. Al finalizar la concesión Vault los revoca automáticamente, los clientes pueden solicitar renovar las concesiones mediante las API disponibles de Vault.</li>
<li>Revocación: integra la funcionalidad de revocación, no solo secretos individuales sino jerarquías de secretos. La revocación asiste en la rotación de las claves así como cerrar el sistema en caso de intrusión.</li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/VYfl-DpZ5wM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/NxL2-XuZ3kc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="conceptos">Conceptos</h3>
<p>Los motores de secretos son uno de los conceptos en el ámbito de Vault. Son componentes que permite almacenar, generar o cifrar datos. Algunos motores de secretos simplemente almacenan y leen datos, otros se conectan a otros servicios y generan credenciales dinámicamente bajo demanda. Otros motores de secretos proporcionan el cifrado como servicio, <em>tokens</em> de un solo uso, certificados y mucho más.</p>
<ul>
<li><a href="https://www.vaultproject.io/api/secret/index.html">Secrets Engines</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/kv/index.html">KV Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/databases/index.html">Databases Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/rabbitmq/index.html">RabbitMQ Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/pki/index.html">PKI Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/ssh/index.html">SSH Secrets Engine</a></li>
</ul>
<p>Otro concepto es la <a href="https://www.vaultproject.io/docs/auth/index.html">autenticación</a>. Permiten realizar la autenticación y son responsables de asignar una identidad y un conjunto de <em>policies</em> a un usuario. Por ejemplo, para los desarrolladores el método de autenticación de GitHub es fácil de usar pero para servidores el método <em>AppRole</em> es el recomendado</p>
<p>Los secretos necesitan <a href="https://www.vaultproject.io/docs/configuration/storage/index.html">almacenamiento</a>. Algunos tipos de almacenamiento son mejores para la alta disponibilidad y otros facilitan la copia de seguridad y la restauración. Puede ser en memoria, sistema de archivos, una herramienta como Consul o varias bases de datos entre ellas bases de datos relacionales.</p>
<p>La <a href="https://www.vaultproject.io/docs/audit/index.html">auditoria</a> permite obtener una trazabilidad de las operaciones que se han realizado, dado que todas las operaciones se realizan mediante una API el <em>log</em> de auditoría es simplemente cada interacción autenticada con Vault, incluidas los errores. Puede ser un archivo o un <em>socket</em>.</p>
<p>Todo en Vault está basado en <em>paths</em>. Las <a href="https://www.vaultproject.io/docs/concepts/policies.html"><em>policies</em></a> permiten o deniegan el acceso a ciertos <em>paths</em>.  Poseen la siguiente sintaxis, donde las <em>capabilities</em> son las operaciones CRUD permitidas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="k">path</span> <span class="s2">&#34;secret/*&#34;</span> {&#10;<span class="n">  capabilities</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;create&#34;, &#34;read&#34;, &#34;update&#34;, &#34;delete&#34;, &#34;list&#34;</span><span class="p">]</span>&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>policy.hcl</span>
    </div>
</div>
<h3 id="instalación-y-un-caso-de-uso">Instalación y un caso de uso</h3>
<p>La <a href="https://www.vaultproject.io/docs/install/index.html">instalación de Vault</a> es muy sencilla ya que es un único binario sin más dependencias. En una distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> estará en los repositorios oficiales. En <a href="https://www.archlinux.org/">Arch Linux</a> se instala con el comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -S vault&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.sh</span>
    </div>
</div>
<p>En el siguiente ejemplo en modo desarrollo de uso de Vault se inicia, se realiza la autenticación con el <em>token</em> <em>root</em> de superusuario y se crea un secreto. Aquí solo se muestra el caso de uso de guardar y recuperar secretos, otros son generar credenciales para conectarse a una base de datos y proporcionar cifrado y descifrado como servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev&#10;<span class="o">==</span>&gt; Vault server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: inmem&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;&#10;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;and starts unsealed with a single unseal key. The root token is already&#10;authenticated to the CLI, so you can immediately begin using Vault.&#10;&#10;You may need to <span class="nb">set</span> the following environment variable:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;&#10;The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;seal/unseal the Vault or re-authenticate.&#10;&#10;Unseal Key: <span class="nv">R6MKrMxcJtTTUuIjeQjwDxnv4sHbKtjmuRn0Fok98zk</span><span class="o">=</span>&#10;Root Token: s.hQoeIivTHHgl1AtsoVz1UF1G&#10;&#10;Development mode should NOT be used in production installations!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;$ vault kv put secret/key <span class="nv">key</span><span class="o">=</span>s3cr3t&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;created_time&nbsp;&nbsp;&nbsp;&nbsp; 2019-07-27T17:30:29.559274833Z&#10;deletion_time&nbsp;&nbsp;&nbsp;&nbsp;n/a&#10;destroyed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="m">1</span>&#10;$ vault kv get secret/key&#10;<span class="o">======</span> <span class="nv">Metadata</span> <span class="o">======</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;created_time&nbsp;&nbsp;&nbsp;&nbsp; 2019-07-27T17:30:29.559274833Z&#10;deletion_time&nbsp;&nbsp;&nbsp;&nbsp;n/a&#10;destroyed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nv">1</span>&#10;&#10;<span class="o">===</span> <span class="nv">Data</span> <span class="o">===</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;key&nbsp;&nbsp;&nbsp;&nbsp;s3cr3t</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>secret.sh</span>
    </div>
</div>
<p>Vault al igual que otras de las herramientas de <a href="https://www.hashicorp.com/">HashiCorp</a> como Consul y <a href="https://www.nomadproject.io/">Nomad</a> posee una interfaz gráfica accesible mediante el navegador que permite realizar las mismas operaciones que a través de la API o desde la linea de comandos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Interfaz gráfica de Vault"><img src="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_300x200_fit_box_3.png" width="300" height="188" alt="Interfaz gráfica de Vault" title="Interfaz gráfica de Vault"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_300x200_fit_box_3.png" width="300" height="188"  class="lozad "></a></p>
<figcaption>Interfaz gráfica de Vault</figcaption>
</figure>
</div>
<p>Vault a igual que otras de las herramientas de HashiCorp tiene una muy buena documentación en formato de <a href="https://learn.hashicorp.com/vault">guía</a> y en formato de <a href="https://www.vaultproject.io/docs/">documentación</a>. En una aplicación Java el proyecto <a href="https://spring.io/">Spring</a> facilita su uso con <a href="https://projects.spring.io/spring-vault/">Spring Vault</a> y <a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/vault">An Intro to Vault</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/obtener-los-primeros-los-ultimos-o-los-caracteres-anteriores-y-posteriores-de-un-archivo-y-el-numero-de-ocurrencias-con-head-tail-y-grep/</id>
        <title>Obtener los primeros, los últimos o los caracteres anteriores y posteriores de un archivo y el número de ocurrencias con head, tail y grep</title>
        <updated>2019-07-25T20:00:00+02:00</updated>
        <published>2019-07-25T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/obtener-los-primeros-los-ultimos-o-los-caracteres-anteriores-y-posteriores-de-un-archivo-y-el-numero-de-ocurrencias-con-head-tail-y-grep/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Algunos archivos de texto tienen un tamaño de cientos de megas, a veces incluso sin ningún salto de línea. Visualizar el contenido de estos archivos en una aplicación con interfaz gráfica no suele ser posible porque la aplicación se queda bloqueada al intentar cargar tan enormes archivos. Incluso tampoco puede ser posible con un editor mucho más ligero como <a href="https://www.vim.org/">vim</a>. Hacer un <em>cat</em> del archivo tampoco es útil.</p>
<p>Sin embargo, sigue siendo necesario ver parte del contenido de estos archivos de texto grande para validar que el contenido de los mismos es el correcto. La opción que se puede utilizar es ver los primeros o últimos caracteres o lineas con los comandos <em>head</em> o <em>tail</em> usándolos de la siguiente forma.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="c1"># Primeros o últimos 100 caracteres de un archivo</span>&#10;$ head -c <span class="m">100</span> archivo.txt&#10;Lorem ipsum dolor sit amet consectetur adipiscing elit pulvinar et praesent, egestas fermentum mauri&#10;&#10;$ tail -c <span class="m">100</span> archivo.txt&#10;ultricies, a dictumst velit dapibus leo pellentesque dictum dui ligula aliquam eu dignissim rhoncus.</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>head-tail-characters.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="c1"># Primeras o últimas 2 lineas de un archivo</span>&#10;$ head -n <span class="m">2</span> archivo.txt&#10;Lorem ipsum dolor sit amet consectetur adipiscing elit pulvinar et praesent, egestas fermentum mauris phasellus non nec rutrum nibh accumsan, placerat natoque interdum dui duis viverra molestie id parturient. Imperdiet commodo viverra arcu ridiculus blandit interdum litora bibendum felis ac purus, eu facilisi habitasse ultrices nisl magnis lobortis phasellus turpis velit vestibulum faucibus, auctor sagittis consequat quis cubilia inceptos donec enim gravida mus. Lacinia felis cras leo porta imperdiet tellus ridiculus convallis praesent ante, dapibus laoreet nibh dictumst penatibus a euismod nisi nulla, luctus lacus porttitor neque magnis sed molestie curae quisque. Hac volutpat curabitur laoreet ultrices est nibh parturient quam libero, faucibus ac metus gravida quis venenatis aliquam placerat cubilia, vel ligula litora dapibus dignissim auctor rhoncus at.&#10;&#10;$ tail -n <span class="m">2</span> archivo.txt&#10;&#10;Bibendum hendrerit sociosqu id libero neque, ad mollis donec consequat sagittis, tempus litora morbi nisi. Augue gravida aliquet rhoncus porta odio dui auctor velit erat lectus magna phasellus fringilla, quam praesent class cursus blandit nulla curabitur nostra feugiat consequat egestas cubilia, tortor magnis senectus volutpat ad urna semper himenaeos nascetur luctus posuere interdum. Nam quisque aliquet convallis taciti maecenas euismod vulputate mauris commodo et eleifend vel duis ultricies, a dictumst velit dapibus leo pellentesque dictum dui ligula aliquam eu dignissim rhoncus.</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>head-tail-lines.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">Lorem ipsum dolor sit amet consectetur adipiscing elit pulvinar et praesent, egestas fermentum mauris phasellus non nec rutrum nibh accumsan, placerat natoque interdum dui duis viverra molestie id parturient. Imperdiet commodo viverra arcu ridiculus blandit interdum litora bibendum felis ac purus, eu facilisi habitasse ultrices nisl magnis lobortis phasellus turpis velit vestibulum faucibus, auctor sagittis consequat quis cubilia inceptos donec enim gravida mus. Lacinia felis cras leo porta imperdiet tellus ridiculus convallis praesent ante, dapibus laoreet nibh dictumst penatibus a euismod nisi nulla, luctus lacus porttitor neque magnis sed molestie curae quisque. Hac volutpat curabitur laoreet ultrices est nibh parturient quam libero, faucibus ac metus gravida quis venenatis aliquam placerat cubilia, vel ligula litora dapibus dignissim auctor rhoncus at.&#10;&#10;Proin sapien viverra nisl posuere dapibus commodo senectus aptent dui nam est tempor primis, dignissim vehicula pharetra et augue hendrerit tincidunt metus mauris curae mus eu. Quam habitasse natoque gravida cras class porttitor fringilla facilisi, phasellus mauris hendrerit et montes enim libero, suspendisse id fermentum lacus molestie purus blandit. Vivamus interdum nisi eleifend suscipit vulputate faucibus suspendisse felis curae, sodales pharetra cubilia vehicula proin velit turpis sapien ad, cursus molestie erat aliquam ridiculus rhoncus duis eu.&#10;&#10;Mollis venenatis felis suscipit mauris fusce at massa sociosqu conubia, hac sociis aptent ut netus vestibulum nostra sed dictumst, nec non eget magna vulputate cum pellentesque arcu. Congue pharetra luctus justo curabitur turpis mi semper nibh laoreet fames, vehicula quam maecenas dui magna scelerisque dictum diam tortor, sociis massa facilisi cum viverra duis erat urna fusce. Urna interdum nisl class fames quam cum suscipit ultrices hendrerit ullamcorper, sagittis nullam aliquam porta tellus aptent fringilla iaculis vitae, vivamus vestibulum conubia elementum semper id himenaeos nunc convallis.&#10;&#10;Bibendum hendrerit sociosqu id libero neque, ad mollis donec consequat sagittis, tempus litora morbi nisi. Augue gravida aliquet rhoncus porta odio dui auctor velit erat lectus magna phasellus fringilla, quam praesent class cursus blandit nulla curabitur nostra feugiat consequat egestas cubilia, tortor magnis senectus volutpat ad urna semper himenaeos nascetur luctus posuere interdum. Nam quisque aliquet convallis taciti maecenas euismod vulputate mauris commodo et eleifend vel duis ultricies, a dictumst velit dapibus leo pellentesque dictum dui ligula aliquam eu dignissim rhoncus.</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>archivo.txt</span>
    </div>
</div>
<p>Como programador no es raro trabajar con archivos de más de 100 MiB en los que el texto no contiene saltos de línea y el contenido es una sola línea como es el caso de un archivo en formato XML utilizado para intercambiar información entre dos aplicaciones. Estos archivos por su tamaño y sin saltos de línea se les atragantan a los editores de texto gráficos como <a href="https://code.visualstudio.com/">Visual Studio Code</a> e incluso a la opción más ligera basada en texto como <em>vim</em>.</p>
<p>En ete caso también es necesaria una forma de comprobar el contenido del archivo o contar el número de ocurrencias de un determinado patrón. La herramienta de línea de comandos <em>grep</em> es una gran ayuda en estos dos casos. Suponiendo un archivo XML que contiene elementos con un <em>tag</em> de precio se desea comprobar que estos elementos tienen un valor válido. Utilizando <em>grep</em> y una expresión regular se obtienen las etiquetas <em>price</em>, una en cada línea. El parámetro <em>-E</em> indica que se utilizan una expresión regular y el parámetro <em>-o</em> indica que cada coincidencia se emita en una línea nueva.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ grep -E -o <span class="s2">&#34;&lt;price&gt;[^&lt;]*&lt;/price&gt;&#34;</span> archivo.xml&#10;&lt;price&gt;1.0&lt;/price&gt;&#10;&lt;price&gt;2.0&lt;/price&gt;&#10;&lt;price&gt;3.0&lt;/price&gt;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>grep-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-XML" data-lang="XML"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>&#10;<span class="nt">&lt;products&gt;&lt;product&gt;&lt;name&gt;</span>A<span class="nt">&lt;/name&gt;&lt;price&gt;</span>1.0<span class="nt">&lt;/price&gt;&lt;/product&gt;&lt;product&gt;&lt;name&gt;</span>B<span class="nt">&lt;/name&gt;&lt;price&gt;</span>2.0<span class="nt">&lt;/price&gt;&lt;/product&gt;&lt;product&gt;&lt;name&gt;</span>C<span class="nt">&lt;/name&gt;&lt;price&gt;</span>3.0<span class="nt">&lt;/price&gt;&lt;/product&gt;&lt;/products&gt;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>archivo.xml</span>
    </div>
</div>
<p>En caso de no ser un archivo estructurado como XML o querer obtener los 15 caracteres anteriores o posteriores de una coincidencia se utiliza un comando <em>grep</em> similar cambiando la expresión regular.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ grep -E -o <span class="s2">&#34;.{0,15}price.{0,15}&#34;</span> archivo.xml&#10;&lt;name&gt;A&lt;/name&gt;&lt;price&gt;1.0&lt;/price&gt;&lt;/p&#10;&lt;name&gt;B&lt;/name&gt;&lt;price&gt;2.0&lt;/price&gt;&lt;/p&#10;&lt;name&gt;C&lt;/name&gt;&lt;price&gt;3.0&lt;/price&gt;&lt;/p</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>grep-2.sh</span>
    </div>
</div>
<p>Para contar el número de coincidencias en el archivo se puede combinar el comando <em>grep</em> utilizando la opción <em>-o</em> para que emita cada coincidencia en cada línea y el comando <em>wc</em> con la opción <em>-l</em> para que cuente el número de líneas de entrada. Utilizando una tubería entre ambos comandos es posible contar el número de coincidencias en un archivo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ grep -E -o <span class="s2">&#34;&lt;product&gt;&#34;</span> archivo.xml <span class="p">|</span> wc -l&#10;<span class="m">3</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>grep-3.sh</span>
    </div>
</div>
<p>En este caso el XML es muy pequeño y un editor de texto es capaz de abrirlo perfectamente pero un archivo de texto a partir unas cuantas decenas de MiB se le atraganta a los editores incluso a los basados en texto y en el caso querer hacer comprobaciones una buena alternativa o la única es recurrir a los comandos <em>head</em>, <em>tail</em>, <em>grep</em> y <em>wc</em>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://stackoverflow.com/questions/8101701/grep-characters-before-and-after-match">Grep characters before and after match?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>