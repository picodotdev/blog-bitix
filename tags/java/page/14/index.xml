<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/java/</id>
    <updated>2022-07-28T19:30:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/</id>
        <title>Obtener la temperatura y humedad con el sensor DHT11, la Raspberry Pi, C y Java</title>
        <updated>2017-04-02T10:15:00+02:00</updated>
        <published>2017-03-31T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El <em>kit</em> de iniciación a la electrónica para la Raspberry Pi tiene un sensor para la temperatura y humedad, el modelo DHT11. Obtener la información requiere restricciones de tiempo, este es un caso de uso justificado para usar lenguaje C y JNI para integrarlo con Java. En el ejemplo el código C llama a un método de una clase Java con dos valores enteros o lanza una excepción en caso de que al realizar la lectura haya habido algún error en la transmisión de los bits.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/raspberrypi.svg" width="200" height="255" alt="Raspberry Pi" title="Raspberry Pi"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Entre los varios sensores incluídos en el <a href="https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/">kit de iniciación para la Raspberry Pi</a> está el sensor de temperatura y humedad con el modelo DHT11. El DHT11 es un sensor muy básico pero suficiente y válido si el objetivo es trastear un poco con hardware.</p>
<p>En la <a href="http://www.micropik.com/PDF/dht11.pdf">especificación del sensor DHT11</a> está descrita su funcionamiento y forma de comunicación. Utiliza 3 cables, uno para la corriente de 3.3V, otro para tierra y finalmente uno de datos que se conecta a cualquier <em>pin</em> <abbr title="General Purpose Input Output">GPIO</abbr> de la Raspberry Pi. Según la especificación el sensor proporciona sus datos en unos 4 ms cuando se le emite un pulso bajo durante unos pocos microsegundos y a continuación uno alto durante otros pocos microsegundos, momento a partir del cual el sensor emite 40 bits de información empezando por un pulso bajo de inicio y a continuación el propio bit con un pulso alto, según sea la duración del pulso alto el bit se considera un 0 si es menor de unos 27μs y un 1 si dura más de ese tiempo hasta unos 80μs momento en el que se emite el siguiente bit de información. Los primeros 8 bits corresponden a la parte entera de la humedad, los siguientes 8 bits a la parte decimal de la humedad, el tercer grupo de 8 bits a la parte entera de la temperatura y 8 bits más para la parte decimal. El último grupo de 8 bits hasta completar los 40 bits son de <em>checksum</em> para detectar errores en la transmisión. El porcentaje de errores en la transmisión significativo en este sensor y quizá haya que realizar varias lecturas del sensor para obtener una correcta.</p>
<p>Dada las restricciones de tiempo que utiliza el sensor en el ejemplo usaré el lenguaje C para obtener los valores de temperatura y humedad y <abbr title="Java Native Interface">JNI</abbr> para acceder a ellos desde Java. Aún usando C se producen errores en la obtención de los valores ya que el método usado por el sensor y transmitir los datos basados en tiempo de microsegundos no es muy fiable. Usando Java la situación sería peor por las restricciones que impone la máquina virtual con sus paradas para la recolección de basura por ejemplo. Así que el ejemplo consistirá en una combinación de C y Java con JNI un poco más avanzado que el <a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/">Ejemplo de JNI, usar código en C desde Java</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/dht11-1_huf15bd8a2768efd9c6ad1887c2eb98f8b_135926_2560x1440_fit_q90_box.jpg" data-gallery="" title="Sensor DHT11"><img src="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/dht11-1_huf15bd8a2768efd9c6ad1887c2eb98f8b_135926_300x200_fit_q90_box.jpg" width="300" height="118" alt="Sensor DHT11" title="Sensor DHT11"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/dht11-2_huc8d787f20ca8a7e91a1094d8f98d55f1_124881_2560x1440_fit_q90_box.jpg" data-gallery="" title="Sensor DHT11"><img src="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/dht11-2_huc8d787f20ca8a7e91a1094d8f98d55f1_124881_300x200_fit_q90_box.jpg" width="300" height="129" alt="Sensor DHT11" title="Sensor DHT11"  class="lozad "></a></p>
<figcaption>Sensor DHT11</figcaption>
</figure>
</div>
<p>Lo primero que deberemos hacer para acceder a la información del sensor desde Java es crear una clase que contenga un método nativo que realizará la lectura de la información en C. Con la utilidad <em>javah</em> obtendremos el archivo de cabecera que implementará el programa en C. Finalmente, siguiendo la especificación se escribe el código C que realice la lectura que en este caso usará la librería <a href="http://wiringpi.com/">wiringPi</a> para la interacción con los <em>pines</em> GPIO de la Raspberry Pi.</p>
<p>El código en C invocará el método <em>setTemperatureHumidity</em> pasando como parámetros los datos de temperatura y humedad leídos del sensor, el método nativo <em>read</em> es utilizado por el código Java que controla el sensor para realizar la lectura en el código C.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaraspberrypi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.file.Files</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.file.Path</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.file.StandardCopyOption</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.LocalDateTime</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Dht11</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">architecture</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;os.arch&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">library</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;/libdht11-%s.so&#34;</span><span class="o">,</span> <span class="n">architecture</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">Dht11</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">library</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Path</span> <span class="n">path</span> <span class="o">=</span> <span class="n">File</span><span class="o">.</span><span class="na">createTempFile</span><span class="o">(</span><span class="s">&#34;libdht11&#34;</span><span class="o">,</span> <span class="s">&#34;so&#34;</span><span class="o">).</span><span class="na">toPath</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Files</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="n">path</span><span class="o">,</span> <span class="n">StandardCopyOption</span><span class="o">.</span><span class="na">REPLACE_EXISTING</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">path</span><span class="o">.</span><span class="na">toAbsolutePath</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">int</span> <span class="n">gpio</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">temperature</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">humidity</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">LocalDateTime</span><span class="o">&gt;</span> <span class="n">date</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Dht11</span><span class="o">(</span><span class="kt">int</span> <span class="n">gpio</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">gpio</span> <span class="o">=</span> <span class="n">gpio</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">temperature</span> <span class="o">=</span> <span class="n">Optional</span><span class="o">.</span><span class="na">empty</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">humidity</span> <span class="o">=</span> <span class="n">Optional</span><span class="o">.</span><span class="na">empty</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="n">Optional</span><span class="o">.</span><span class="na">empty</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">init</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">read</span><span class="o">(</span><span class="kt">int</span> <span class="n">gpio</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">5</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">read</span><span class="o">(</span><span class="n">gpio</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">3000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="nf">getTemperature</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">temperature</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="nf">getHumidity</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">humidity</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">LocalDateTime</span><span class="o">&gt;</span> <span class="nf">getDate</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">date</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTemperatureHumidity</span><span class="o">(</span><span class="kt">int</span> <span class="n">temperature</span><span class="o">,</span> <span class="kt">int</span> <span class="n">humidity</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">temperature</span> <span class="o">=</span> <span class="n">Optional</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">temperature</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">humidity</span> <span class="o">=</span> <span class="n">Optional</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">humidity</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="n">Optional</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">LocalDateTime</span><span class="o">.</span><span class="na">now</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Dht11</span> <span class="n">sensor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Dht11</span><span class="o">(</span><span class="n">2</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sensor</span><span class="o">.</span><span class="na">update</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">sensor</span><span class="o">.</span><span class="na">getTemperature</span><span class="o">().</span><span class="na">isPresent</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getHumidity</span><span class="o">().</span><span class="na">isPresent</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Temperature (C): %f, Humidity: %f%n&#34;</span><span class="o">,</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getTemperature</span><span class="o">().</span><span class="na">get</span><span class="o">(),</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getHumidity</span><span class="o">().</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;No temperature/humidity&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Dht11.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cm">/* DO NOT EDIT THIS FILE - it is machine generated */</span>&#10;</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;jni.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="cm">/* Header for class io_github_picodotdev_blogbitix_javaraspberrypi_Dht11 */</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="cp">#ifndef _Included_io_github_picodotdev_blogbitix_javaraspberrypi_Dht11&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#define _Included_io_github_picodotdev_blogbitix_javaraspberrypi_Dht11&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#ifdef __cplusplus&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="k">extern</span> <span class="s">&#34;C&#34;</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="cp">#endif&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="cm">/*&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Class:&nbsp;&nbsp;&nbsp;&nbsp; io_github_picodotdev_blogbitix_javaraspberrypi_Dht11&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Method:&nbsp;&nbsp;&nbsp;&nbsp;init&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Signature: ()V&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_io_github_picodotdev_blogbitix_javaraspberrypi_Dht11_init</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="cm">/*&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Class:&nbsp;&nbsp;&nbsp;&nbsp; io_github_picodotdev_blogbitix_javaraspberrypi_Dht11&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Method:&nbsp;&nbsp;&nbsp;&nbsp;read&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Signature: (I)V&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_io_github_picodotdev_blogbitix_javaraspberrypi_Dht11_read</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">,</span> <span class="n">jint</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="cp">#ifdef __cplusplus&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="cp">#endif&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#endif&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Dht11.h</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdint.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;wiringPi.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>  &#10;</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&#34;io_github_picodotdev_blogbitix_javaraspberrypi_Dht11.h&#34;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>&#10;</span></span><span class="line"><span class="cl"><span class="cp">#define MAXTIMINGS 85&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="kt">int</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_io_github_picodotdev_blogbitix_javaraspberrypi_Dht11_init</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">obj</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">wiringPiSetup</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_io_github_picodotdev_blogbitix_javaraspberrypi_Dht11_read</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">obj</span><span class="p">,</span> <span class="n">jint</span> <span class="n">gpio</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">uint8_t</span> <span class="n">state</span>	<span class="o">=</span> <span class="n">HIGH</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kt">uint8_t</span> <span class="n">counter</span>	<span class="o">=</span> <span class="mi">0</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kt">uint8_t</span> <span class="n">j</span>		<span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">i</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="n">dht11_dat</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="n">pinMode</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">digitalWrite</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">delay</span><span class="p">(</span><span class="mi">18</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">digitalWrite</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">delayMicroseconds</span><span class="p">(</span><span class="mi">40</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">pinMode</span><span class="p">(</span><span class="n">gpio</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">MAXTIMINGS</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">counter</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">while</span> <span class="p">(</span><span class="n">digitalRead</span><span class="p">(</span><span class="n">gpio</span><span class="p">)</span> <span class="o">==</span> <span class="n">state</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">counter</span><span class="o">++</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">delayMicroseconds</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="p">(</span><span class="n">counter</span> <span class="o">==</span> <span class="mi">255</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">break</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">state</span> <span class="o">=</span> <span class="n">digitalRead</span><span class="p">(</span><span class="n">gpio</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="p">(</span><span class="n">counter</span> <span class="o">==</span> <span class="mi">255</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">break</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="p">((</span><span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">4</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">))</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">dht11_dat</span><span class="p">[</span><span class="n">j</span> <span class="o">/</span> <span class="mi">8</span><span class="p">]</span> <span class="o">&lt;&lt;=</span> <span class="mi">1</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="p">(</span><span class="n">counter</span> <span class="o">&gt;</span> <span class="mi">16</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">dht11_dat</span><span class="p">[</span><span class="n">j</span> <span class="o">/</span> <span class="mi">8</span><span class="p">]</span> <span class="o">|=</span> <span class="mi">1</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">j</span><span class="o">++</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">((</span><span class="n">j</span> <span class="o">&gt;=</span> <span class="mi">40</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">dht11_dat</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">==</span> <span class="p">((</span><span class="n">dht11_dat</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xFF</span><span class="p">)))</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jclass</span> <span class="n">clazz</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetObjectClass</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">obj</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jmethodID</span> <span class="n">method</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">GetMethodID</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">clazz</span><span class="p">,</span> <span class="s">&#34;setTemperatureHumidity&#34;</span><span class="p">,</span> <span class="s">&#34;(II)V&#34;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">CallVoidMethod</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">dht11_dat</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="k">else</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="n">jclass</span> <span class="n">clazz</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">FindClass</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="s">&#34;java/io/IOException&#34;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">(</span><span class="o">*</span><span class="n">env</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">ThrowNew</span><span class="p">(</span><span class="n">env</span><span class="p">,</span> <span class="n">clazz</span><span class="p">,</span> <span class="s">&#34;Failed read&#34;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Dht11.c</span>
    </div>
</div>
<p>El código en C del sensor hay que compilarlo en la Raspberry Pi con el compilador <a href="https://gcc.gnu.org/">gcc</a> obteniendo una librería con código nativo que Java y JNI cargará y enlazará de forma dinámica en el programa Java. Ya que el código C usa la librería wiringPi ha de instalarse previamente junto con el compilador gcc. Obtenida la librería la copiamos mediante FTP o SSH de la Raspberry Pi a nuestro equipo de desarrollo. El código C realiza la lectura usando la librería wiringPi siguiendo la especificación de como se transmiten los datos por el sensor, realizada una lectura correcta usa varias de las funciones de la estructura <a href="http://xdprof.sourceforge.net/doxygen/structJNIEnv__.html">JNIEnv</a> para obtener la referencia a un método de la clase DHT11 e invocarlo con los valores obtenidos del sensor o lanza una excepción si la lectura ha sido errónea.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S wiringpi gcc</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install-packages.sh</span>
    </div>
</div>
<p>El comando para compilar la librería de código nativo a partir del código en C y el archivo de cabecera generado con <em>javah</em> es el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ gcc -I<span class="s2">&#34;/usr/lib/jvm/java-8-openjdk/include&#34;</span> -I<span class="s2">&#34;/usr/lib/jvm/java-8-openjdk/include/linux&#34;</span> -shared -fPIC -L/usr/lib -lwiringPi -o libdht11-arm.so Dht11.c&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>compile.sh</span>
    </div>
</div>
<p>Para facilitar la ejecución la librería la proporcionó ya compilada y ubicada en el directorio <em>src/main/resources</em> de modo que será incluida en el archivo <em>jar</em> generado por <a href="https://gradle.org/">Gradle</a> en el ejemplo y que la clase DHT11 extraerá al directorio temporal del sistema y cargará para su uso.</p>
<p>La clase Java del ejemplo que hace uso del sensor realiza una lectura cada 3 segundos e imprime en la terminal y en el <em>display</em> 1602 el último valor obtenido correctamente de la temperatura y humedad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaraspberrypi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.diozero.I2CLcd</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.diozero.api.I2CConstants</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.ByteOrder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.format.DateTimeFormatter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.concurrent.Executors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.concurrent.ScheduledExecutorService</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.concurrent.TimeUnit</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TemperatureHumidity</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Dht11</span> <span class="n">sensor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Dht11</span><span class="o">(</span><span class="n">2</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ScheduledExecutorService</span> <span class="n">service</span> <span class="o">=</span> <span class="n">Executors</span><span class="o">.</span><span class="na">newSingleThreadScheduledExecutor</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">I2CLcd</span> <span class="n">lcd</span> <span class="o">=</span> <span class="k">new</span> <span class="n">I2CLcd</span><span class="o">(</span><span class="n">I2CConstants</span><span class="o">.</span><span class="na">BUS_0</span><span class="o">,</span> <span class="n">I2CLcd</span><span class="o">.</span><span class="na">DEFAULT_DEVICE_ADDRESS</span><span class="o">,</span> <span class="n">ByteOrder</span><span class="o">.</span><span class="na">LITTLE_ENDIAN</span><span class="o">,</span> <span class="n">16</span><span class="o">,</span> <span class="n">2</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Runnable</span> <span class="n">monitor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sensor</span><span class="o">.</span><span class="na">update</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Temperature: %dºC, Humidity: %d%%, Date: %s%n&#34;</span><span class="o">,</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getTemperature</span><span class="o">().</span><span class="na">get</span><span class="o">(),</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getHumidity</span><span class="o">().</span><span class="na">get</span><span class="o">(),</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getDate</span><span class="o">().</span><span class="na">get</span><span class="o">().</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_DATE_TIME</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">sensor</span><span class="o">.</span><span class="na">getTemperature</span><span class="o">().</span><span class="na">isPresent</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getHumidity</span><span class="o">().</span><span class="na">isPresent</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getDate</span><span class="o">().</span><span class="na">isPresent</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;T: %dC, H: %d%% &#34;</span><span class="o">,</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getTemperature</span><span class="o">().</span><span class="na">get</span><span class="o">(),</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getHumidity</span><span class="o">().</span><span class="na">get</span><span class="o">()));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s&#34;</span><span class="o">,</span> <span class="n">sensor</span><span class="o">.</span><span class="na">getDate</span><span class="o">().</span><span class="na">get</span><span class="o">().</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ofPattern</span><span class="o">(</span><span class="s">&#34;HH:mm:ss&#34;</span><span class="o">))));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;No data&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">service</span><span class="o">.</span><span class="na">scheduleAtFixedRate</span><span class="o">(</span><span class="n">monitor</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">5</span><span class="o">,</span> <span class="n">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">60000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">service</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>TemperatureHumidity.java</span>
    </div>
</div>
<p>Este es el esquema de conexiones que he utilizado para el ejemplo y una foto del cableado real, he usado del <em>pin</em> GPIO número 2 según la nomenclatura de wiringPi para el cable de datos del sensor DHT11 que se corresponde con pin número 13 según la nomenclatura del <em>header</em> de la Raspberry Pi. Para ver el cableado del <em>display</em> 1602 más detalladamente y la activación del bus de comunicación I2C que necesita consulta el artículo <a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/">Controlar un display LCD 1602 para mostrar texto con la Raspberry Pi y Java</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/cableado_hu0d8a80d75f578f66ed41ed680a8be94b_791258_2560x1440_fit_q90_box.jpg" data-gallery="" title="Cableado sensor DHT11 y display 1602"><img src="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/cableado_hu0d8a80d75f578f66ed41ed680a8be94b_791258_300x200_fit_q90_box.jpg" width="263" height="200" alt="Cableado sensor DHT11 y display 1602" title="Cableado sensor DHT11 y display 1602"  class="lozad "></a></p>
<figcaption>Cableado sensor DHT11 y display 1602</figcaption>
</figure>
</div>
<p>Ejecutando el programa del ejemplo y usando el display 1602 (16 columnas y 2 filas) se muestra la temperatura y humedad obtenida del sensor.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/temperature-humidity_hu134d612f6f9e28cd0b81ff333d54b875_1380733_2560x1440_fit_q90_box.jpg" data-gallery="" title="Cableado ejemplo y funcionando"><img src="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/temperature-humidity_hu134d612f6f9e28cd0b81ff333d54b875_1380733_300x200_fit_q90_box.jpg" width="294" height="200" alt="Cableado ejemplo y funcionando" title="Cableado ejemplo y funcionando"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/display_hu1f1e292a1d4cb70e5c9f82a94dd9173b_251674_2560x1440_fit_q90_box.jpg" data-gallery="" title="Cableado ejemplo y funcionando"><img src="https://picodotdev.github.io/blog-bitix/2017/03/obtener-la-temperatura-y-humedad-con-el-sensor-dht11-la-raspberry-pi-c-y-java/images/display_hu1f1e292a1d4cb70e5c9f82a94dd9173b_251674_300x200_fit_q90_box.jpg" width="300" height="162" alt="Cableado ejemplo y funcionando" title="Cableado ejemplo y funcionando"  class="lozad "></a></p>
<figcaption>Cableado ejemplo y funcionando</figcaption>
</figure>
</div>
<p>En el kernel de Linux hay un módulo que proporciona también los valores del sensor, sin embargo, no he conseguido obtener la temperatura y humedad usándolo. Lo he probado con el kernel 4.4 de Arch Linux ARM y en la versión 4.9 veo que hay cambios en este módulo que quizá lo hagan funcionar. Para usar el módulo del kernel hay que añadir un poco de configuración para el inicio de la Raspberry Pi. En los archivos <em>/sys/devices/platform/dht11@0/iio:device0/in_temp_input</em> y <em>/sys/devices/platform/dht11@0/iio:device0/in_temp_input</em> estarán la temperatura y humedad respectivamente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">dtoverlay=dht11,gpiopin=2&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>kernel-module-config.txt</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ cat /sys/bus/iio/devices/iio:device0/in_temp_input&#10;</span></span><span class="line"><span class="cl">$ cat /sys/devices/platform/dht11@0/iio:device0/in_temp_input&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>cat.sh</span>
    </div>
</div>
<p>Para ejecutar el ejemplo con ya todo instalado uso uno de los siguientes dos comandos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew upload&#10;</span></span><span class="line"><span class="cl">$ ssh -t 192.168.1.101 <span class="s1">&#39;cd /home/raspberrypi/scripts/javaraspberrypi &amp;&amp; sudo java -classpath &#34;*&#34; io.github.picodotdev.blogbitix.javaraspberrypi.TemperatureHumidity&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ ./gradlew executeTemperatureHumidity</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>execute.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRaspberryPi">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew executeTemperatureHumidity</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.ibm.com/developerworks/java/tutorials/j-jni/j-jni.html">Java programming with JNI</a></li>
<li><a href="http://hirt.se/blog/?p=493">Accessing 1-wire Protocol Devices from Java</a></li>
<li><a href="http://www.circuitbasics.com/how-to-set-up-the-dht11-humidity-sensor-on-the-raspberry-pi/">How to Set Up the DHT11 Humidity Sensor on the Raspberry Pi</a></li>
<li><a href="http://www.prometec.net/sensores-dht11/">Sensores de temperatura DHT11</a></li>
<li><a href="https://github.com/Hexalyse/RPi-weather-log/blob/master/dht11.c">dht11.c</a></li>
<li><a href="http://www.uugear.com/portfolio/read-dht1122-temperature-humidity-sensor-from-raspberry-pi/">Read DHT11/22 Temperature &amp; Humidity Sensor from Raspberry Pi</a></li>
<li><a href="https://arduino-info.wikispaces.com/DHT11-Humidity-TempSensor">Digital output temperature and humidity sensor DHT11 - DHT22</a></li>
<li><a href="http://playground.arduino.cc/Main/DHT11Lib">A DHT11 Class for Arduino</a></li>
<li><a href="https://github.com/torvalds/linux/blob/master/drivers/iio/humidity/dht11.c">torvalds/linux/blob/master/drivers/iio/humidity/dht11.c</a></li>
<li><a href="http://www.tortosaforum.com/raspberrypi/dht11driver.htm">RaspberryPi DHT11 temperature and humidity sensor driver</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/</id>
        <title>Ejemplo de JNI, usar código en C desde Java</title>
        <updated>2017-03-25T10:05:00+01:00</updated>
        <published>2017-03-25T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Para tareas muy específicas que requieran alto rendimiento, baja latencia, tiempo real o haya restricciones de tiempo el lenguaje Java y la JVM pueden mostrar algunas limitaciones obligando a escribir alguna sección crítica de un programa en un lenguaje nativo como C o C++. Para hacer posible la integración entre Java y C existe en Java la API JNI. En este artículo mostraré como realizar un programa Java que emite el mensaje Hola Mundo desde una biblioteca compartida en C y usando JNI.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Nunca hasta ahora había tenido necesidad de crear un programa que no estuviese completamente escrito en el lenguaje Java. La <a href="https://docs.oracle.com/javase/8/docs/api/overview-summary.html">API de Java</a> ofrece multitud de clases para cualquier funcionalidad que necesitemos desde estructuras de datos hasta algoritmos de búsqueda o criptografía. También porque el rendimiento de un programa en Java es suficiente y similar a un programa equivalente escrito en C o C++ gracias a las optimizaciones que implementa la máquina virtual de Java o <abbr title="Java Virtual Machine">JVM</abbr> aún siendo los programas Java compilados a una representación intermedia de <em>bytecode</em> independiente de la arquitectura de procesador y sistema operativo en archivos de extensión <em>class</em> y posteriormente interpretados y traducidos a la arquitectura de ejecución, lo que le proporciona a Java la conocida frase <em>&ldquo;Write once, run anywhere&rdquo;</em>.</p>
<p>Sin embargo, en casos que se necesita un alto rendimiento para tareas muy específicas o evitar las imposiciones de la máquina virtual como las paradas que realiza para el recolector de basura una solución es escribir esa funcionalidad crítica en lenguaje C, C++ e incluso en <a href="https://golang.org/">Go</a>. El caso de necesidad que me he encontrado es acceder a un sensor de temperatura DHT11 del <a href="https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/">kit de iniciación a la electrónica para la Raspberry Pi</a> para leer de él la temperatura y humedad. La forma que tiene el sensor DHT11 de proporcionar los datos tiene restricciones de tiempo, cuando se le requieren los valores envía 80 bits de datos donde un pulso de 27μs significa un 0 y un pulso de más de ese tiempo hasta 70μs significa un 1. Estas restricciones de tiempo del sensor y el hecho de que es en una modesta en potencia <a href="https://www.raspberrypi.org/">Raspberry Pi</a> 1 donde lo usaré hace que Java no sea capaz de leer correctamente los valores del sensor.</p>
<p>Acceder desde Java a código nativo en C requiere usar <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/jniTOC.html">Java Native Interface o por sus siglas JNI</a>. Lo primero que hay que realizar es crear una clase que declare los métodos que serán implementados de forma nativa declarando estos métodos usando la palabra reservada <em>native</em> y que serán enlazados por la JVM cargando una librería compartida con <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#loadLibrary-java.lang.String-">System.loadLibrary()</a>. Creada la clase Java se ha de generar el archivo de cabecera <em>.h</em> propia del lenguaje C con el programa de utilidad del JDK <em>javah</em>. Con el archivo de cabecera se implementa la función y se crea una librería compartida en <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> usando el <a href="https://gcc.gnu.org/">compilador gcc</a>. Con la librería compartida se puede iniciar el programa Java. Si la biblioteca compartida no se encuentra se lanzará una excepción del tipo <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/UnsatisfiedLinkError.html">UnsatisfiedLinkError</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/images/UnsatisfiedLinkError_huafbea2a660c5da4daa8f678c6e8bc0ac_46763_2560x1440_fit_box_3.png" data-gallery="" title="Excepción UnsatisfiedLinkError cuando no se encuentra la librería de código nativo"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/images/UnsatisfiedLinkError_huafbea2a660c5da4daa8f678c6e8bc0ac_46763_300x200_fit_box_3.png" width="300" height="193" alt="Excepción UnsatisfiedLinkError cuando no se encuentra la librería de código nativo" title="Excepción UnsatisfiedLinkError cuando no se encuentra la librería de código nativo"  class="lozad "></a></p>
<figcaption>Excepción UnsatisfiedLinkError cuando no se encuentra la librería de código nativo</figcaption>
</figure>
</div>
<p>Algunas otras necesidades para hacer uso de JNI son:</p>
<ul>
<li>Acceder a características dependientes de la plataforma necesitadas por la aplicación que no están soportadas en la librería estándar de Java.</li>
<li>Ya hay una librería escrita en otro lenguaje y se quiere hacer accesible a código Java a través de JNI.</li>
<li>Se quiere implementar una pequeña parte de código crítico en un lenguaje de bajo nivel como ensamblador.</li>
</ul>
<p>Desde los métodos de código nativo se puede:</p>
<ul>
<li>Crear, inspeccionar y actualizar objetos Java (incluyendo arrays y strings).</li>
<li>Llamar a métodos Java.</li>
<li>Capturar y lanzar excepciones.</li>
<li>Cargar y obtener información de clases.</li>
<li>Realizar validación de tipos en tiempo de ejecución.</li>
</ul>
<p>Los comandos para generar el archivo de cabecera de C y compilarlo con el código nativo en una librería compartida con gcc son:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ javah -d src/main/c -classpath buil/classes/main io.github.picodotdev.blogbitix.javaraspberrypi.JniHelloWorld&#10;</span></span><span class="line"><span class="cl">$ gcc -I<span class="s2">&#34;/usr/lib/jvm/java-8-openjdk/include&#34;</span> -I<span class="s2">&#34;/usr/lib/jvm/java-8-openjdk/include/linux&#34;</span> -shared -fPIC -L/usr/lib -o src/main/resources/libjnihelloworld-amd64.so src/main/c/JniHelloWorld.c&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;idea&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="mf">1.8</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">targetCompatibility</span> <span class="o">=</span> <span class="mf">1.8</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">javah1</span><span class="o">(</span><span class="nl">type:</span><span class="n">Exec</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">commandLine</span> <span class="s2">&#34;javah&#34;</span><span class="o">,</span> <span class="s2">&#34;-d&#34;</span><span class="o">,</span> <span class="s2">&#34;src/main/c&#34;</span><span class="o">,</span> <span class="s2">&#34;-classpath&#34;</span><span class="o">,</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">output</span><span class="o">.</span><span class="na">classesDir</span><span class="o">,</span> <span class="s2">&#34;io.github.picodotdev.blogbitix.javaraspberrypi.JniHelloWorld&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">javah</span><span class="o">(</span><span class="nl">dependsOn:</span> <span class="o">[</span><span class="s1">&#39;javah1&#39;</span><span class="o">,</span> <span class="s1">&#39;javah2&#39;</span><span class="o">]){</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">gcc1</span><span class="o">(</span><span class="nl">type:</span><span class="n">Exec</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="s1">&#39;javah&#39;</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">commandLine</span> <span class="s2">&#34;gcc&#34;</span><span class="o">,</span> <span class="s2">&#34;-shared&#34;</span><span class="o">,</span> <span class="s2">&#34;-fPIC&#34;</span><span class="o">,</span> <span class="s2">&#34;-I/usr/lib/jvm/java-8-openjdk/include&#34;</span><span class="o">,</span> <span class="s2">&#34;-I/usr/lib/jvm/java-8-openjdk/include/linux&#34;</span><span class="o">,</span> <span class="s2">&#34;-o&#34;</span><span class="o">,</span> <span class="s2">&#34;src/main/resources/libjnihelloworld-amd64.so&#34;</span><span class="o">,</span> <span class="s2">&#34;src/main/c/JniHelloWorld.c&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">gcc</span><span class="o">(</span><span class="nl">dependsOn:</span> <span class="o">[</span><span class="s1">&#39;gcc1&#39;</span><span class="o">]){</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">executeJniHelloWorldLocal</span><span class="o">(</span><span class="nl">type:</span> <span class="n">JavaExec</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="o">[</span><span class="s1">&#39;build&#39;</span><span class="o">,</span> <span class="s1">&#39;gcc&#39;</span><span class="o">])</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">main</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javaraspberrypi.JniHelloWorld&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">classpath</span> <span class="o">=</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">runtimeClasspath</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>La cabecera usa varias definiciones de tipos definidas en los archivos <em>jni.h</em> y el archivo que variará según el sistema operativo <em>jni_md.h</em>. En la <a href="http://xdprof.sourceforge.net/doxygen/structJNIEnv__.html">estructura JNIEnv</a> con múltiples funciones de integración en C y Java, también varias definiciones de los tipos Java para usarlos en C como <em>jobject</em>, <em>jstring</em>, <em>jint</em>, <em>jboolean</em>, <em>jlong</em>, <em>jdouble</em>, <em>jchar</em>, etc.</p>
<p>El programa que emite el mensaje <em>Hello World!</em> desde código nativo en C debe cargar y enlazar la librería de código nativo con el código de la clase Java. Esto se muestra en el bloque de inicialización <em>static</em> de la clase, en este caso usándo el método <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#load-java.lang.String-">System.load()</a>, la librería de código nativo de extensión <em>.so</em> en GNU/Linux como en este caso al construirse el proyecto se incluye en el archivo <em>.jar</em> del artefacto resultante se extráe al directorio temporal y se carga desde esa ubicación temporal. En el programa se llama al método <em>print</em> implementado en código nativo y en el código C se usa la función <em>printf</em> de la librería <em>stdio</em> para emitir el mensaje:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaraspberrypi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.file.Files</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.file.Path</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.file.StandardCopyOption</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JniHelloWorld</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">architecture</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;os.arch&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">library</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;/libjnihelloworld-%s.so&#34;</span><span class="o">,</span> <span class="n">architecture</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">JniHelloWorld</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">library</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Path</span> <span class="n">path</span> <span class="o">=</span> <span class="n">File</span><span class="o">.</span><span class="na">createTempFile</span><span class="o">(</span><span class="s">&#34;libjnihelloworld&#34;</span><span class="o">,</span> <span class="s">&#34;so&#34;</span><span class="o">).</span><span class="na">toPath</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Files</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="n">path</span><span class="o">,</span> <span class="n">StandardCopyOption</span><span class="o">.</span><span class="na">REPLACE_EXISTING</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">path</span><span class="o">.</span><span class="na">toAbsolutePath</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">JniHelloWorld</span><span class="o">().</span><span class="na">print</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JniHelloWorld.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&#34;io_github_picodotdev_blogbitix_javaraspberrypi_JniHelloWorld.h&#34;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>&#10;</span></span><span class="line"><span class="cl"><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="nf">Java_io_github_picodotdev_blogbitix_javaraspberrypi_JniHelloWorld_print</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="n">env</span><span class="p">,</span> <span class="n">jobject</span> <span class="n">obj</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">printf</span><span class="p">(</span><span class="s">&#34;Hello World!</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JniHelloWorld.c</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cm">/* DO NOT EDIT THIS FILE - it is machine generated */</span>&#10;</span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;jni.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="cm">/* Header for class io_github_picodotdev_blogbitix_javaraspberrypi_JniHelloWorld */</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="cp">#ifndef _Included_io_github_picodotdev_blogbitix_javaraspberrypi_JniHelloWorld&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#define _Included_io_github_picodotdev_blogbitix_javaraspberrypi_JniHelloWorld&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#ifdef __cplusplus&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="k">extern</span> <span class="s">&#34;C&#34;</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="cp">#endif&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="cm">/*&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Class:&nbsp;&nbsp;&nbsp;&nbsp; io_github_picodotdev_blogbitix_javaraspberrypi_JniHelloWorld&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Method:&nbsp;&nbsp;&nbsp;&nbsp;print&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * Signature: ()V&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_io_github_picodotdev_blogbitix_javaraspberrypi_JniHelloWorld_print</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="cp">#ifdef __cplusplus&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="cp">#endif&#10;</span></span></span><span class="line"><span class="cl"><span class="cp">#endif&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JniHelloWorld.h</span>
    </div>
</div>
<p>La librería compartida para un sistema <em>amd64</em> la he compilado en mi equipo de escritorio y para la versión <em>arm</em> en la Raspberry Pi e incluido en el directorio <em>src/main/resources</em> de código fuente del ejemplo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew build&#10;</span></span><span class="line"><span class="cl">$ java -classpath build/classes/main:build/resources/main io.github.picodotdev.blogbitix.javaraspberrypi.JniHelloWorld&#10;</span></span><span class="line"><span class="cl">$ ssh -t 192.168.1.101 <span class="s1">&#39;cd /home/raspberrypi/scripts/javaraspberrypi &amp;&amp; java -classpath &#34;*&#34; io.github.picodotdev.blogbitix.javaraspberrypi.JniHelloWorld&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>execute.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/images/JniHelloWorld-amd64_hub2b4c641f5fe198f142e57637f8a6ec4_27206_2560x1440_fit_box_3.png" data-gallery="" title="Mensaje en la terminal emitido desde código nativo (amd64)"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/images/JniHelloWorld-amd64_hub2b4c641f5fe198f142e57637f8a6ec4_27206_300x200_fit_box_3.png" width="300" height="193" alt="Mensaje en la terminal emitido desde código nativo (amd64)" title="Mensaje en la terminal emitido desde código nativo (amd64)"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/images/JniHelloWorld-arm_hu6c56be07a094fe8914ade92188032253_34069_2560x1440_fit_box_3.png" data-gallery="" title="Mensaje en la terminal emitido desde código nativo (ARM)"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/images/JniHelloWorld-arm_hu6c56be07a094fe8914ade92188032253_34069_300x200_fit_box_3.png" width="300" height="193" alt="Mensaje en la terminal emitido desde código nativo (ARM)" title="Mensaje en la terminal emitido desde código nativo (ARM)"  class="lozad "></a></p>
<figcaption>Mensaje en la terminal emitido desde código nativo en un sistema amd64 y ARM</figcaption>
</figure>
</div>
<p>Ente ejemplo usa Java 8 y requiere instalar el compilador gcc para compilar la librería con código nativo. <a href="https://gradle.org/">Gradle</a> ofrece soporte para <a href="https://docs.gradle.org/3.4.1/userguide/native_software.html">compilar código nativo con su plugin</a>, sin embargo, he preferido usar y conocer los comandos javah y gcc sin usar Gradle. En el siguiente artículo mostraré el ejemplo del sensor DHT11 usando JNI y código nativo en C llamando a métodos de un objeto Java desde código C.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRaspberryPi">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew executeJniHelloWorldLocal</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://blog.dogan.io/2015/08/15/java-jni-jnr-go/">GO: Call me maybe, Java!</a></li>
<li><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/jniTOC.html">Java Native Interface Specification</a></li>
<li><a href="http://www3.ntu.edu.sg/home/ehchua/programming/java/JavaNativeInterface.html">Java Programming Tutorial, Java Native Interface (JNI)</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/</id>
        <title>Controlar un display LCD 1602 para mostrar texto con la Raspberry Pi y Java</title>
        <updated>2017-03-19T02:00:00+01:00</updated>
        <published>2017-03-18T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/raspberrypi.svg" width="200" height="255" alt="Raspberry Pi" title="Raspberry Pi"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Uno de los motivos por los que compré el <a href="https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/">kit de iniciación a la electrónica para la Raspberry Pi</a>, además de cacharrear un poco, era en concreto controlar el <em>display</em> LCD de 16 columnas y 2 filas. En el <em>kit</em> el <em>display</em> viene con un adaptador con el bus de comunicación I2C. El <em>display</em> se puede usar sin este bus pero requiere utilizar muchos más <em>pines</em> GPIO de datos de los limitados 17 que ofrece la Raspberry Pi 1 y los 26 de las Raspberry Pi B+, 2  y 3. Controlar el <em>display</em> con I2C requiere únicamente 2 pines, por contra sin usar I2C requiere un número significativamente mayor 4 u 8 pines.</p>
<p>El <em>display</em> 1602 con su adaptador para el bus I2C que viene con el <em>kit</em> ya incorporado en la parte trasera es el siguiente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/display-lcd-1602_hudec7d325162bd5734a4764f0f652bdc1_213977_2560x1440_fit_q90_box.jpg" data-gallery="" title="Display LCD 16 columnas y 2 filas"><img src="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/display-lcd-1602_hudec7d325162bd5734a4764f0f652bdc1_213977_300x200_fit_q90_box.jpg" width="300" height="141" alt="Display LCD 16 columnas y 2 filas" title="Display LCD 16 columnas y 2 filas"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/adaptador-bus-i2c-1602_hu088a2091b37df42dbf508d1cbdc80ce3_242376_2560x1440_fit_q90_box.jpg" data-gallery="" title="Adaptador bus I2C para display 1602"><img src="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/adaptador-bus-i2c-1602_hu088a2091b37df42dbf508d1cbdc80ce3_242376_300x200_fit_q90_box.jpg" width="300" height="134" alt="Adaptador bus I2C para display 1602" title="Adaptador bus I2C para display 1602"  class="lozad "></a></p>
<figcaption>Display LCD 1602 y adaptador bus I2C</figcaption>
</figure>
</div>
<p>El esquema de conexionado para controlar el <em>display</em> requiere usar los <em>pines</em> de la Raspberry Pi <em>SDA</em> y <em>SDL</em> además de un <em>pin</em> para proporcionar un voltaje de 5V y otro <em>pin</em> para la tierra. El <em>pin</em> <em>SDA</em> es el número 2 según la numeración de <em>pines</em> de la Raspberry Pi y el <em>SDL</em> es el 5. El <em>pin</em> <em>SDA</em> es utilizado en el bus I2C para transmitir los datos y el <em>SDL</em> para la señal de reloj o sincronización. Utilizando la placa de extensión wiringPi de 26 <em>pines</em> los <em>pines</em> <em>SDA</em> y <em>SDL</em> se encuentran identificados por su nombre y el de la placa de extensión de 40 <em>pines</em> que viene con el <em>kit</em> de iniciación también, deberemos identificar estos <em>pines</em> y realizar las conexiones adecuadamente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/breadboard-cableado_hu9efc39f5b6a5663511ff278421cfc4fc_554266_2560x1440_fit_q90_box.jpg" data-gallery="" title="Cableado en la breadboard"><img src="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/breadboard-cableado_hu9efc39f5b6a5663511ff278421cfc4fc_554266_300x200_fit_q90_box.jpg" width="164" height="200" alt="Cableado en la breadboard" title="Cableado en la breadboard"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/esquema-cableado_hu78b02982f519ac875b343bc71e481476_96429_2560x1440_fit_box_3.png" data-gallery="" title="Esquema del cableado"><img src="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/esquema-cableado_hu78b02982f519ac875b343bc71e481476_96429_300x200_fit_box_3.png" width="300" height="143" alt="Esquema del cableado" title="Esquema del cableado"  class="lozad "></a></p>
<figcaption>Cableado en la breadboard</figcaption>
</figure>
</div>
<p>Hay que emplear varios cables macho-macho y hembra-hembra para conectar a los <em>pines</em> del adaptador I2C del <em>display</em>  a los <em>pines</em> del voltaje de 5V, tierra, <em>SDA</em> y <em>SDL</em> de la placa de pruebas sin soldadura.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/cables-macho-macho-hembra-hembra_hu5bd502ece26df8c90c0240f7b6e4e0af_344589_2560x1440_fit_q90_box.jpg" data-gallery="" title="Unión cables macho-macho y hembra-hembra"><img src="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/cables-macho-macho-hembra-hembra_hu5bd502ece26df8c90c0240f7b6e4e0af_344589_300x200_fit_q90_box.jpg" width="252" height="200" alt="Unión cables macho-macho y hembra-hembra" title="Unión cables macho-macho y hembra-hembra"  class="lozad "></a></p>
<figcaption>Unión cables macho-hembra</figcaption>
</figure>
</div>
<p>El siguiente paso será activar el bus I2C en la Raspberry Pi que por defecto está desactivado. Esto requiere añadir unos parámetros en la configuración de arranque y cargar unos módulos del kernel que finalmente crearán un dispositivo tal que en <em>/dev/i2c-0</em> o <em>/dev/i2c-0</em>. Si instalamos el paquete <em>i2c-tools</em> podremos detectar el <em>display</em> en el bus I2C, en la captura de pantalla en la dirección 27 que hay que usar al construir la instancia del controlador del <em>display</em>. Estos cambios en la configuración de inicio requieren reiniciar la Raspberry Pi. En un sistema con la distribución <a href="https://archlinuxarm.org/">Arch Linux ARM</a> los cambios son los siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl"># /boot/config.txt&#10;</span></span><span class="line"><span class="cl">device_tree_param=i2c_arm=on&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># sudo vim /boot/cmdline.txt&#10;</span></span><span class="line"><span class="cl">bcm2708.vc_i2c_override=1&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sudo systemctl reboot&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sudo modprobe i2c-bcm2708&#10;</span></span><span class="line"><span class="cl">$ sudo modprobe i2c-dev&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ sudo pacman -S i2c-tools&#10;</span></span><span class="line"><span class="cl">$ sudo i2cdetect -y 0</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>configuration.txt</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/i2cdetect_huf6262b8283cadf398a1aab0f9279ada0_22811_2560x1440_fit_box_3.png" data-gallery="" title="Detección del display 1602 en el bus I2C"><img src="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/i2cdetect_huf6262b8283cadf398a1aab0f9279ada0_22811_300x200_fit_box_3.png" width="300" height="187" alt="Detección del display 1602 en el bus I2C" title="Detección del display 1602 en el bus I2C"  class="lozad "></a></p>
<figcaption>Detección del display 1602 en el bus I2C</figcaption>
</figure>
</div>
<p>Según la <a href="https://www.sparkfun.com/datasheets/LCD/HD44780.pdf">especificación del <em>display</em> 1602</a> este componente soporta varios comandos para controlarlo, algunos son para limpiar el texto, cambiar la dirección de escritura, añadir caracteres personalizados y emitir texto en la línea o posición del <em>display</em> que queramos. No es simple el controlar el <em>display</em> a bajo nivel ya que hay que trabajar en momentos con binario y usar bytes, por ello para el ejemplo usaré la librería <a href="http://rtd.diozero.com/en/latest/">diozero</a> que ya trae una implementación de controlador con funciones de alto nivel <em>I2CLcd</em> que en versiones más recientes de la librería ha sido renombrada a <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html">HD44780Lcd</a> mucho más cómoda que enviar <em>bytes</em> a bajo nivel al bus I2C, el <a href="https://github.com/mattjlewis/diozero/blob/master/diozero-core/src/main/java/com/diozero/HD44780Lcd.java">código fuente de la clase HD44780Lcd</a> está disponible y podemos verlo si hay curiosidad.</p>
<p>En mi caso con la Raspberry Pi 1 he tenido que utilizar la versión 0.9 de la librería diozero porque la 0.8 me generaba un <em>stacktrace</em> de una excepción <em>java.lang.UnsupportedOperationException</em>. Obtener esta versión de la librería como aún era de desarrollo y no estaba publicada en <a href="https://search.maven.org/">Maven Central</a> la he descargado de un <a href="https://drive.google.com/drive/u/0/folders/0B2Kd_bs3CEYaZ3NiRkd4OXhYd3c">google drive que ha creado el autor</a> y usado en <a href="https://gradle.org/">Gradle</a> como una dependencia del sistema de ficheros. Como librería subyacente de diozero para controlar los <em>pines</em> GPIO he usado <a href="http://abyz.co.uk/rpi/pigpio/">pigpio</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Caused by: java.lang.UnsupportedOperationException&#10;</span></span><span class="line"><span class="cl">	at java.util.AbstractList.add(AbstractList.java:148)&#10;</span></span><span class="line"><span class="cl">	at java.util.AbstractList.add(AbstractList.java:108)&#10;</span></span><span class="line"><span class="cl">	at com.diozero.internal.board.raspberrypi.RaspberryPiBoardInfoProvider$PiBRev1BoardInfo.&lt;clinit&gt;(RaspberryPiBoardInfoProvider.java:281)&#10;</span></span><span class="line"><span class="cl">	... 14 more</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>java.lang.UnsupportedOperationException</span>
    </div>
</div>
<p>En el ejemplo mostraré un texto en cada una de las lineas del <em>display</em> y usaré una de las funciones del para mostrar caracteres personalizados con los que es posible crear <em>emojis</em> o caracteres nuevos. El controlador de diozero ya contiene una buena colección de caracteres personalizados que definen el patrón de 5x8 puntos que siguen, los nombres de estos caracteres personalizados están en la clase interna <em>Characters</em> de <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html">HD44780Lcd</a> aunque también podemos definir nuevos. El ejemplo es el siguiente donde se muestra el uso de los métodos <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#setText-int-java.lang.String-">setText</a> y <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#setCharacter-int-int-char-">setCharacter</a>, también el constructor donde hay que indicar la dirección asignada al dispositivo en el bus I2C que siendo la 27 corresponde con el valor definido en una constante. Pero también hay otros métodos como <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#clear--">clear</a>, <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#cursorOff--">cursorOff</a> y <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#cursorOn--">cursorOn</a> para apagar y encender el cursor, <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#displayOff--">displayOff</a>
<a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#displayOn--">displayOn</a> para apgar y encender el <em>display</em> y <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#createChar-int-byte:A-">createChar</a> para crear nuevos caracteres definidos como una <em>array</em> de 8 posiciones donde cada <em>byte</em> indica los pixeles encendidos de cada fila del caracter de 5x8 y con <a href="http://static.javadoc.io/com.diozero/diozero-core/0.9/com/diozero/HD44780Lcd.html#setCharacter-int-int-char-">setCharacter</a> para emitir uno de los 8 posibles que se pueden usar al mismo tiempo. Además de estos también hay otros pocos métodos más relacionados con el cursor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaraspberrypi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.diozero.I2CLcd</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.diozero.api.I2CConstants</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.ByteOrder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.LocalDateTime</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.ZoneId</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.format.DateTimeFormatter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Lcd</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">I2CLcd</span> <span class="n">lcd</span> <span class="o">=</span> <span class="k">new</span> <span class="n">I2CLcd</span><span class="o">(</span><span class="n">I2CConstants</span><span class="o">.</span><span class="na">BUS_0</span><span class="o">,</span> <span class="n">I2CLcd</span><span class="o">.</span><span class="na">DEFAULT_DEVICE_ADDRESS</span><span class="o">,</span> <span class="n">ByteOrder</span><span class="o">.</span><span class="na">LITTLE_ENDIAN</span><span class="o">,</span> <span class="n">16</span><span class="o">,</span> <span class="n">2</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">createChar</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">I2CLcd</span><span class="o">.</span><span class="na">Characters</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;heart&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">createChar</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">I2CLcd</span><span class="o">.</span><span class="na">Characters</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;smilie&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">createChar</span><span class="o">(</span><span class="n">2</span><span class="o">,</span> <span class="n">I2CLcd</span><span class="o">.</span><span class="na">Characters</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;space_invader&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setCharacter</span><span class="o">(</span><span class="n">13</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="n">0</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setCharacter</span><span class="o">(</span><span class="n">14</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="n">1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setCharacter</span><span class="o">(</span><span class="n">15</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="n">2</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span> <span class="n">messager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">5</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="s">&#34; powered by Java&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">3000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lcd</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">LocalDateTime</span><span class="o">.</span><span class="na">now</span><span class="o">(</span><span class="n">ZoneId</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;Europe/Madrid&#34;</span><span class="o">)).</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ofPattern</span><span class="o">(</span><span class="s">&#34;yyyy-MM-dd HH:mm&#34;</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">3000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">){</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">messager</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">messager</span><span class="o">.</span><span class="na">join</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Lcd.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;idea&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="mf">1.8</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">targetCompatibility</span> <span class="o">=</span> <span class="mf">1.8</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="nf">files</span><span class="o">(</span><span class="s1">&#39;misc/libs/diozero-core-0.9-SNAPSHOT.jar&#39;</span><span class="o">,</span> <span class="s1">&#39;misc/libs/diozero-provider-pigpio-0.9-SNAPSHOT.jar&#39;</span><span class="o">,</span> <span class="s1">&#39;misc/libs/pigpioj-java-1.0.1.jar&#39;</span><span class="o">,</span> <span class="s1">&#39;misc/libs/commons-math3-3.6.1.jar&#39;</span><span class="o">,</span> <span class="s1">&#39;misc/libs/tinylog-1.1.jar&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">copyDependencies</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Copy</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">into</span> <span class="s2">&#34;$buildDir/libs&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">from</span> <span class="n">configurations</span><span class="o">.</span><span class="na">runtime</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">jar</span> <span class="o">{</span> <span class="n">dependsOn</span> <span class="n">copyDependencies</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">upload</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Exec</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="o">[</span><span class="s1">&#39;jar&#39;</span><span class="o">])</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">commandLine</span> <span class="s1">&#39;rsync&#39;</span><span class="o">,</span> <span class="s1">&#39;-arPL&#39;</span><span class="o">,</span> <span class="s1">&#39;--delete&#39;</span><span class="o">,</span> <span class="s1">&#39;-e&#39;</span><span class="o">,</span> <span class="s1">&#39;ssh&#39;</span><span class="o">,</span> <span class="s1">&#39;build/libs/&#39;</span><span class="o">,</span> <span class="s1">&#39;raspberrypi@192.168.1.101:/home/raspberrypi/scripts/javaraspberrypi/&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">executeLcd</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Exec</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="s1">&#39;upload&#39;</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">commandLine</span> <span class="s1">&#39;ansible&#39;</span><span class="o">,</span> <span class="s1">&#39;-i&#39;</span><span class="o">,</span> <span class="s1">&#39;hosts&#39;</span><span class="o">,</span> <span class="s1">&#39;raspberrypi&#39;</span><span class="o">,</span> <span class="s1">&#39;--sudo&#39;</span><span class="o">,</span> <span class="s1">&#39;--ask-sudo-pass&#39;</span><span class="o">,</span> <span class="s1">&#39;-m&#39;</span><span class="o">,</span> <span class="s1">&#39;command&#39;</span><span class="o">,</span> <span class="s1">&#39;-a&#39;</span><span class="o">,</span> <span class="s1">&#39;chdir=/home/raspberrypi/scripts/javaraspberrypi java -classpath &#34;*&#34; io.github.picodotdev.blogbitix.javaraspberrypi.Lcd&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">standardInput</span> <span class="n">System</span><span class="o">.</span><span class="na">in</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew upload&#10;</span></span><span class="line"><span class="cl">$ ssh -t 192.168.1.101 <span class="s1">&#39;cd /home/raspberrypi/scripts/javaraspberrypi &amp;&amp; sudo java -classpath &#34;*&#34; io.github.picodotdev.blogbitix.javaraspberrypi.Lcd&#39;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>executeSSH.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew executeLcd&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>executeGradle.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/mensaje-lcd-1602_hu62a298306b4eecc0b9f527b7686a5a47_205348_2560x1440_fit_q90_box.jpg" data-gallery="" title="Mensaje en LCD 1602"><img src="https://picodotdev.github.io/blog-bitix/2017/03/controlar-un-display-lcd-1602-para-mostrar-texto-con-la-raspberry-pi-y-java/images/mensaje-lcd-1602_hu62a298306b4eecc0b9f527b7686a5a47_205348_300x200_fit_q90_box.jpg" width="300" height="140" alt="Mensaje en LCD 1602" title="Mensaje en LCD 1602"  class="lozad "></a></p>
<figcaption>Mensaje en LCD 1602</figcaption>
</figure>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/V6msjQNDPuU" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>Pudiendo mostrar mensajes en <em>display</em> es posible mostrar cualquier información que un programa sea capaz de capturar como temperatura y humedad del correspondiente sensor en el mismo <em>kit</em>, estado de un pulsador, espacio disponible en el disco del sistema, y memoria libre, <em>uptime</em> del sistema, fecha y hora, &hellip; cualquier cosa que se nos ocurra.</p>
<p>El ejemplo parece simple, y el programa Java lo es, pero requiere conocer varias cosas que en internet está dispersas como activar el bus I2C o conocer la librería diozero para controlar el <em>display</em> que simplifica enormemente el código y nos evita comunicarnos a más bajo nivel con el <em>display</em>, realizar las conexiones eléctricas también requiere algo de conocimiento. Averiguar todo esto me costó una buena cantidad de tiempo.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRaspberryPi">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew executeLcd</code></p>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/</id>
        <title>Ejemplo encender y apagar diodo LED con la Raspberry Pi en Java</title>
        <updated>2017-03-12T00:15:00+01:00</updated>
        <published>2017-03-11T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/raspberrypi.svg" width="200" height="255" alt="Raspberry Pi" title="Raspberry Pi"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El primer ejemplo que haré de un programa Java que usa los <em>pines</em> GPIO para realizar algo con el <a href="https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/">kit de inicialización a la electrónica con la Raspberry Pi</a> consiste en un pequeño programa Java que hace parpadear un diodo LED. La librería <a href="http://rtd.diozero.com/en/latest/">Diozero</a> ofrece a los programas Java el acceso a los <em>pines</em> GPIO de la diferentes versiones de la Raspberry Pi desde la 1 (rev 1 y rev 2) pasando por los modelos B+, 2 y 3. Otra librería que se puede usar con el lenguaje de programación Java es <a href="https://pi4j.com/">Pi4J</a> aunque personalmente Diozero me ha gustado más por ser de más alto nivel.</p>
<p>Algunas de las características que ofrece la librería Diozero son:</p>
<ul>
<li>Soporta dispositivos GPIO / I2C / SPI (LEDs, botones, sensores, motores, pantallas, etc).</li>
<li>Soporta todos los modelos de las placas Raspberry Pi, Odroid C2, BeagleBone Black, C.H.I.P y Asus Tinker.</li>
<li>Usa caracterśiticas de Java como <a href="https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html">gestión automática de recursos</a>, <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html">expresiones lambda</a> y <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html">referencias a métodos</a> que simplifican el desarrollo y mejoran la legibilidad.</li>
<li><a href="http://rtd.diozero.com/en/latest/#devices">Lista de deipositivos</a>.</li>
<li>Soporta varios proveedores para el acceso al los dispositivos con <a href="http://rtd.diozero.com/en/latest/#performance">diferentes grados de rendimiento</a>.</li>
</ul>
<p>Una de las primeras cosas a conocer es como se numeran los <em>pines</em> en la Raspberry Pi ya que hay varias nomenclaturas (<em>header</em>, wiringPi y Broadcom) y que nomenclatura utiliza la librería Diozero. También deberemos tener en cuenta el modelo de la Raspberry Pi que poseamos ya que según el modelo hay pequeñas diferencias en algunos <em>pines</em>. Además si usamos una placa de extensión para pruebas sin soldadura como la <a href="http://wiringpi.com/">wiringPi</a> deberemos identificarlos por su nombre. Yo que poseo una de las primeras Raspberry Pi (la 1, rev1) el correspondiente su <a href="https://www.raspberrypi.org/documentation/usage/gpio/">esquema de <em>pines</em> Raspberry Pi 1 (rev. 1)</a> es el del enlace. En ese esquema se define que el <em>pin</em> número 12 según el conteo del <em>header</em> corresponde a GPIO 18 según la nomenclatura Broadcom y la librería Diozero y al GPIO 1 en la librería Pi4J y en la placa de extensión wiringPi.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/raspberrypi1b_hu22add5b66897716681957394465b4bd3_829999_2560x1440_fit_q90_box.jpg" data-gallery="" title="Raspberry Pi 1 B"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/raspberrypi1b_hu22add5b66897716681957394465b4bd3_829999_300x200_fit_q90_box.jpg" width="268" height="200" alt="Raspberry Pi 1 B" title="Raspberry Pi 1 B"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/raspberrypi3b_huf7bddd99ea74c1ddc0c5b8580dd4a8c5_327265_2560x1440_fit_q90_box.jpg" data-gallery="" title="Raspberry Pi 3 B"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/raspberrypi3b_huf7bddd99ea74c1ddc0c5b8580dd4a8c5_327265_300x200_fit_q90_box.jpg" width="287" height="200" alt="Raspberry Pi 3 B" title="Raspberry Pi 3 B"  class="lozad "></a></p>
<figcaption>Placas modelos Raspberry Pi 1 B y 3 B</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/breadboard-cableado_hu4408ad1d84b4f4d48570a363c8652fed_871766_2560x1440_fit_q90_box.jpg" data-gallery="" title="Breadboard y placa extensión GPIO wiringPi de 26 pines"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/breadboard-cableado_hu4408ad1d84b4f4d48570a363c8652fed_871766_300x200_fit_q90_box.jpg" width="267" height="200" alt="Breadboard y placa extensión GPIO wiringPi de 26 pines" title="Breadboard y placa extensión GPIO wiringPi de 26 pines"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/gpio-extension-40-pines-board_hua16e258eafc6d06cef89d52014497ddd_604238_2560x1440_fit_q90_box.jpg" data-gallery="" title="Placa extensión GPIO de 40 pines"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/gpio-extension-40-pines-board_hua16e258eafc6d06cef89d52014497ddd_604238_300x200_fit_q90_box.jpg" width="150" height="200" alt="Placa extensión GPIO de 40 pines" title="Placa extensión GPIO de 40 pines"  class="lozad "></a></p>
<figcaption>Breadboard y placa extesión GPIO wiringPi de 26 _pines_ y 40 pines</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/esquema-cableado_hu198f1be709c561ea99bf0746642b0382_216071_2560x1440_fit_box_3.png" data-gallery="" title="Esquema del cableado"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/esquema-cableado_hu198f1be709c561ea99bf0746642b0382_216071_300x200_fit_box_3.png" width="300" height="129" alt="Esquema del cableado" title="Esquema del cableado"  class="lozad "></a></p>
<figcaption>Esquema del cableado</figcaption>
</figure>
</div>
<p>Como uso la placa de extensión wiringPi para conectar los <em>pines</em> de la Raspberry Pi a otra placa para hacer pruebas sin soldadura también conocidas como <em>breadboard</em>  resultará que en el programa Java al usar Diozero uso la nomenclatura Broadcom para identificar los <em>pines</em> pero al conectar los cables en la placa de pruebas uso la nomenclatura de wiringPi.</p>
<p>Para el ejemplo utilizaré la placa de extensión sin soldadura, una resistencia de 200 ohmios (dadas sus bandas de colores rojo, negro, marrón y dorado) y un diodo LED además de un par de cables macho-macho para realizar las conexiones electrónicas entre el GPIO 18 (según la nomenclatura de la librería Diozero y Broadcom, 12 según la nomenclatura del <em>header</em> y 1 según la de wiringPi) y la resistencia además de entre el diodo y la línea de tierra. Los diodos LED poseen una orientación y hay que conectar la resistencia con el polo positivo del diodo LED, el polo positivo del diodo LED identifica porque es la patita larga y el negativo con tierra es la patita corta. Si realizamos la conexión al revés solo pasará que el diodo no se enciende pero no lo estropeará, la resistencia si es necesaria para no hacer que pase por el diodo una intensidad que lo estropee como se explica en
<a href="http://www.educachip.com/resistencia-led/">¿Qué resistencia ooner a un LED?</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/diodo-resistencia_hub20135d37a090410847a8b3a8f4a3210_619557_2560x1440_fit_q90_box.jpg" data-gallery="" title="Diodo blanco y resistencia de 200 ohmios"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/diodo-resistencia_hub20135d37a090410847a8b3a8f4a3210_619557_300x200_fit_q90_box.jpg" width="182" height="200" alt="Diodo blanco y resistencia de 200 ohmios" title="Diodo blanco y resistencia de 200 ohmios"  class="lozad "></a></p>
<figcaption>Diodo blanco y resistencia de 200 ohmios</figcaption>
</figure>
</div>
<p>Las resistencias poseen cuatro bandas de colores que indican el valor en ohmios de esa resistencia, la tabla de colores es el siguiente:</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/codigo-colores-resistencias_hu5db5ce401ecad0185bbb761fca917610_42780_2560x1440_fit_q90_box.jpg" data-gallery="" title="Código de colores de las resistencias"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-encender-y-apagar-diodo-led-con-la-raspberry-pi-en-java/images/codigo-colores-resistencias_hu5db5ce401ecad0185bbb761fca917610_42780_300x200_fit_q90_box.jpg" width="237" height="200" alt="Código de colores de las resistencias" title="Código de colores de las resistencias"  class="lozad "></a></p>
<figcaption>Código de colores de las resistencias</figcaption>
</figure>
</div>
<p>El programa Java para hacer parpadear el diodo LED con la librería Diozero con el proveedor <a href="http://abyz.co.uk/rpi/pigpio/">pigpio</a>. El ejemplo consiste en activar y apagar el <em>pin</em> sucesivamente en un bucle y usar el método <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#sleep-long-">Thread.sleep</a> para que pase unos segundos entre uno y otro y nos de tiempo a ver el encendido y apagado. El nada complejo programa Java para controlar el diodo y un vídeo de su funcionamiento están a continuación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaraspberrypi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.diozero.LED</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PinBlink</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">LED</span> <span class="n">led</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LED</span><span class="o">(</span><span class="n">18</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">led</span><span class="o">.</span><span class="na">on</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">2000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">led</span><span class="o">.</span><span class="na">off</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">2000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PinBlink.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew upload&#10;</span></span><span class="line"><span class="cl">$ ssh -t 192.168.1.101 <span class="s1">&#39;cd /home/raspberrypi/scripts/javaraspberrypi &amp;&amp; sudo java -classpath &#34;*&#34; io.github.picodotdev.blogbitix.javaraspberrypi.PinBlink&#39;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>executeSSH.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew executePinBlink&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>executeGradle.sh</span>
    </div>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/NX5tBxWuzFA" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>En un artículo anterior comento <a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-hello-world-con-java-en-la-raspberry-pi/">como disponer de un entorno para desarrollar, desplegar las librerías <em>jar</em> en la Raspberry Pi</a> y como ejecutar los ejemplos desde la línea de comandos usando una combinación de herramientas de <a href="https://es.wikipedia.org/wiki/Secure_Shell">SSH</a>, <a href="https://rsync.samba.org/">rsync</a> y <a href="https://www.ansible.com/">Ansible</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRaspberryPi">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew executePinBlink</code></p>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-hello-world-con-java-en-la-raspberry-pi/</id>
        <title>Ejemplo Hello World con Java en la Raspberry Pi</title>
        <updated>2017-03-04T23:00:00+01:00</updated>
        <published>2017-03-04T11:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-hello-world-con-java-en-la-raspberry-pi/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/raspberrypi.svg" width="200" height="255" alt="Raspberry Pi" title="Raspberry Pi"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Este artículo es introductorio a los siguientes que escribiré y publicaré sobre el <a href="https://picodotdev.github.io/blog-bitix/2017/02/desempaquetado-del-kit-de-iniciacion-a-la-electronica-para-la-raspberry-pi/">kit de iniciación a la electrónica para la Raspberry Pi</a>. Antes de empezar a cacharrear con los sensores y dispositivos de entrada y salida, con los <em>pines</em> GPIO y para hacerlo de forma cómoda crearé un entorno de desarrollo y despliegue en la <a href="https://www.raspberrypi.org/">Raspberry Pi</a> usando <a href="https://es.wikipedia.org/wiki/Secure_Shell">SSH</a>, <a href="https://rsync.samba.org/">rsync</a> para copiar los artefactos del equipo de desarrollo a la RPi y <a href="https://www.ansible.com/">Ansible</a> usándolo desde <a href="https://gradle.org/">Gradle</a> para lanzar comandos y ejecutar los ejemplos de forma remota aunque si no se quiere usar Ansible se pueden lanzar los comandos mediante SSH.</p>
<p>En la Raspberry Pi deberemos instalar por supuesto <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> (es posible usar Java 8) junto con SSH y rsync, configurar el servidor SSH en la RPi modificando el archivo <em>/etc/ssh/sshd_config</em>, habilitar el servidor SSH, copiar nuestra <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">clave pública ssh generada previamente</a> al archivo <em>~/.ssh/authorized_keys</em> del usuario e instalar <a href="https://www.python.org/">Python</a> como requerimiento de Ansible. Los programas Java los escribiremos en un equipo más potente que la Raspberry Pi ya sea un portátil o un equipo de sobremesa con un IDE ya sea <a href="https://www.jetbrains.com/idea/">IntelliJ</a>, <a href="https://eclipse.org">eclipse</a> u otro, también deberemos instalar Gradle, Ansible y rsync. En Arch Linux con los siguientes comandos del gestor de paquetes:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S jdk8-openjdk python rsync</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># vim /etc/ssh/sshd\_config</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># systemctl enable sshd.service</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># systemctl start sshd.service</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># vim .ssh/authorized_keys</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-raspberrypi.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAEAQDHK4xOEPe+8/C7+BmSQOjrMJRcjqTCg0HMWIsgOxas0mvjv7feCzW1kB5QPkQDuTSauRDvbAhHakNfa8tE7l2y6QtnuPwQUP6ml79Zzqiwo5Dkjv0ig09U5QPUs6dDbAvYc+EWeSVvIBll+zpxjSM/AtQrPy3YWuDxTcsUdmrZm5M7miQZ+XI18ICc/ehgewOTUAkMdpEJGXXEFiWYK1iazTrT6fo8y3JZmS3mFTQ9QAifkPvk47XbCWktc4VTVZXzPR8dy+cxMb4SMuxCvLA72qUANvsaHCdei9e4dtvWOGL2v2jC7vFQU+gEaZ77ezxrNzGzt2MdPUcoAAfk2T3KFbnE6L5NBZ+8kVTtOIK6rDJsZaFPZN75orqFa5GG9WMRtpQTldvMkCvoIYttGSDW00ojLbKDY0qYLlEYjBC9hOnQsBN8sYD8sVBwjOLkvvNnetzYqtVu1ij3eB59NEKV3MhPwFRLomk+TGSfHKEhhS5cHntvlm/syJ0/KKuTCBA0kOMH8eJ4MQTV3dqy2vhUBo9sBYo728kHv0JwWBD/CJWdNgoG9lfkZbmqJ9ZSJ89vsDHqJi9m59i6rqWnahhtuTdIzya2asDMjCTozRonBNFC6Eo5mX2ydL6OFOaC2mrdIAHYjJGugWmqBCkhfIh6nh1XJjnsysTgGxtjW79d6o/9WEPYeIF8F2EH77oehjVmJNQeuIgvmZSdhW+dlAgan6WjZT7jBNBDwJH4kH31dNDB8LEVijS7E6J//d4aYfMmUzQUgd0PjyabNZJaCmcWGsv22ggGlCKz3D6putzO0nJrsATWoLCt8wG+zidCSQ/PaZ4uEW0Cbkfhb76jGfSRfywCmyhe7OmCgyvuhE8IZbeaYfjYsHYYto0rd6MQmx5m0d6+ylUfYmCxst2uu/BQPVE/tj/hmNeUvDh1O9qslTFk/tdDY2MRbEWBoNrX56YXIksargth2DCvlPltzKeK8cL46md9P6hC6DXxGR9GcqiPnf7puGIu7BLWK8yQCp2dgnqugye9f1uGrnP3w5MB28MWRCPi7lCjACiIva1U5wPmMwD2HEaIIVNAkX5VTO7xp2JtymA4wWnTreSXBMfvQP9yR6Ao9Zx9Hu8NywRHOJfUalyY868/ISag9tR/9qHxRsyfnv5XtDUJ/+sFgYzn+OYsvSW6na/sRVO1seX5I0Gf+d0xF8LZfeB6DMRUwy5BTJbv8KlTGFEh3vG1+jYLGwX65d9f7LGRSlSXHR+NI6MEezT7CV+UD7YM1T2ki9ezkpiZLRvZ+UUh46j/+xM9ed3LVxUbj1tfgDP42tyiHIfDf+SiHtOsZX3Avedy4SbV96K3lCyH2HcJHqpW7+YT pico.dev@gmail.com&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>authorized_keys</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman intellij-idea-community-edition jdk8-openjdk ansible rsync gradle</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.sh</span>
    </div>
</div>
<p>Con la ayuda de unas tareas para la herramienta de construcción Gradle haremos el despliegue y la ejecución de la librería <em>jar</em> del proyecto de los ejemplos y de las dependencias que necesiten. El archivo de construcción de Gradle sería el siguiente en el que la tarea <em>copyDependencies</em> copia las dependencias al directorio <em>build/libs</em>. La tarea <em>upload</em> ejecutan el comando <code>rsync</code> para subir el archivo <em>jar</em> y las dependencias del proyecto a la Raspberry Pi. Finalmente, una tarea como <em>executeHelloWorld</em> ejecutará el comando en la Raspberry Pi para lanzar el programa Java. Con SSH también se puede lanzar el comando de forma remota cambiando la dirección IP de la Raspberry Pi por la que tenga asignada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;idea&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="mf">1.8</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">targetCompatibility</span> <span class="o">=</span> <span class="mf">1.8</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="nf">files</span><span class="o">(</span><span class="s1">&#39;misc/libs/diozero-core-0.9-SNAPSHOT.jar&#39;</span><span class="o">,</span> <span class="s1">&#39;misc/libs/diozero-provider-pigpio-0.9-SNAPSHOT.jar&#39;</span><span class="o">,</span> <span class="s1">&#39;misc/libs/pigpioj-java-1.0.1.jar&#39;</span><span class="o">,</span> <span class="s1">&#39;misc/libs/commons-math3-3.6.1.jar&#39;</span><span class="o">,</span> <span class="s1">&#39;misc/libs/tinylog-1.1.jar&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">copyDependencies</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Copy</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">into</span> <span class="s2">&#34;$buildDir/libs&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">from</span> <span class="n">configurations</span><span class="o">.</span><span class="na">runtime</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">jar</span> <span class="o">{</span> <span class="n">dependsOn</span> <span class="n">copyDependencies</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">upload</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Exec</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="o">[</span><span class="s1">&#39;jar&#39;</span><span class="o">])</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">commandLine</span> <span class="s1">&#39;rsync&#39;</span><span class="o">,</span> <span class="s1">&#39;-arPL&#39;</span><span class="o">,</span> <span class="s1">&#39;--delete&#39;</span><span class="o">,</span> <span class="s1">&#39;-e&#39;</span><span class="o">,</span> <span class="s1">&#39;ssh&#39;</span><span class="o">,</span> <span class="s1">&#39;build/libs/&#39;</span><span class="o">,</span> <span class="s1">&#39;raspberrypi@192.168.1.101:/home/raspberrypi/scripts/javaraspberrypi/&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">executeHelloWorld</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Exec</span><span class="o">,</span> <span class="nl">dependsOn:</span> <span class="s1">&#39;upload&#39;</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">commandLine</span> <span class="s1">&#39;ansible&#39;</span><span class="o">,</span> <span class="s1">&#39;-i&#39;</span><span class="o">,</span> <span class="s1">&#39;hosts&#39;</span><span class="o">,</span> <span class="s1">&#39;raspberrypi&#39;</span><span class="o">,</span> <span class="s1">&#39;-m&#39;</span><span class="o">,</span> <span class="s1">&#39;command&#39;</span><span class="o">,</span> <span class="s1">&#39;-a&#39;</span><span class="o">,</span> <span class="s1">&#39;chdir=/home/raspberrypi/scripts/javaraspberrypi java -classpath &#34;*&#34; io.github.picodotdev.blogbitix.javaraspberrypi.HelloWorld&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew upload&#10;</span></span><span class="line"><span class="cl">$ ssh -t 192.168.1.101 <span class="s1">&#39;cd /home/raspberrypi/scripts/javaraspberrypi &amp;&amp; sudo java -classpath &#34;*&#34; io.github.picodotdev.blogbitix.javaraspberrypi.HelloWorld&#39;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>executeSSH.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew executeHelloWorld&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>executeGradle.sh</span>
    </div>
</div>
<p>El programa de ejemplo es universal gracias a la idea <em>«Write once, run anywhere»</em> posibilitado por la máquina virtual o <abbr title="Java Virtual Machine"><a href="https://es.wikipedia.org/wiki/M%C3%A1quina_virtual_Java">JVM</a></abbr> y el <em>bytecode</em>, está compilado en un sistema con arquitectura x64 (el de mi equipo) y ejecutado en un sistema con arquitectura arm (el de la RPi). No se diferencia en nada al que usaríamos para lo mismo en cualquier otro sistema distinto de la Raspberry Pi.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaraspberrypi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HelloWorld.java</span>
    </div>
</div>
<p>El resultado de este ejemplo es un mensaje en la terminal que es emitido por un programa Java ejecutado en la Raspberry Pi y lanzado de forma remota.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-hello-world-con-java-en-la-raspberry-pi/images/java-raspberrypi-hello-world_hu585c23adafa45cad29f054ba5093037a_44814_2560x1440_fit_box_3.png" data-gallery="" title="Ejemplo Hello World con Java en la Raspberry Pi"><img src="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-hello-world-con-java-en-la-raspberry-pi/images/java-raspberrypi-hello-world_hu585c23adafa45cad29f054ba5093037a_44814_300x200_fit_box_3.png" width="300" height="165" alt="Ejemplo Hello World con Java en la Raspberry Pi" title="Ejemplo Hello World con Java en la Raspberry Pi"  class="lozad "></a></p>
<figcaption>Ejemplo Hello World con Java en la Raspberry Pi</figcaption>
</figure>
</div>
<p>En los siguientes artículos de la serie mostraré ya como usar diferentes elementos de salida como diodos LED, zumbador, <em>display</em> LCD 1602 o de entrada como un pulsador.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRaspberryPi">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew executeHelloWorld</code></p>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/</id>
        <title>Ejemplo de RabbitMQ con Java para enviar y recibir mensajes</title>
        <updated>2017-02-18T10:00:00+01:00</updated>
        <published>2017-02-18T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Entre las ventajas de integrar dos aplicaciones mediante el envío de mensajes están que evita que estén acopladas y la comunicación es asíncrona. Con RabbitMQ también podremos implementar cada uno de ellas con el lenguaje de programación que prefiramos de entre las varias posibilidades para las que ofrece clientes y por esto último podemos preferir usarlo en vez de las especificación JMS propia de Java EE que nos obligaría a usar un servidor de aplicaciones que lo implemente, posiblemente JBoss/Wildfly o Weblogic en vez de Tomcat o Jetty. En el artículo incluyo un ejemplo para el lenguaje Java mostrando el envío y recepción de mensajes junto con la aplicación de administración que nos proporcionará información útil.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/rabbitmq.svg" width="200" height="211" alt="RabbitMQ" title="RabbitMQ"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Las aplicaciones que se integran mediante el envío y recepción de mensajes evitan el acoplamiento y sincronía junto con la posibilidad de implementar cada una de ellas con diferentes lenguajes o plataformas. Entre las especificaciones que componen Java EE está &lt;abbr title=”Java Message Service”&gt;JMS</abbr> pero tanto la aplicación que envía como la que recibe mensajes deben estar programadas en el lenguaje Java, a menos que incluyamos un adaptador que permita a la aplicación no Java interactuar con JMS.</p>
<p><a href="https://www.rabbitmq.com/">RabbitMQ</a> es un software de servidor que actúa como intermediario o <em>broker</em> de mensajería entre dos o más aplicaciones que se comunican o envían notificaciones con mensajes, proporciona una funcionalidad similar a JMS pero con la ventaja que ofrece soporte para los lenguajes más populares incluido <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> y <a href="https://es.wikipedia.org/wiki/M%C3%A1quina_virtual_Java"><abbr title="Java Virtual Machine">JVM</abbr></a>, <a href="https://www.ruby-lang.org/es/">Ruby</a>, <a href="https://www.python.org/">Python</a>, <a href="https://www.microsoft.com/net">.NET</a>, <a href="https://secure.php.net/">PHP</a>, <a href="https://nodejs.org/en/">Node.js</a>, <a href="https://golang.org/">Go</a> y varios más. Usa varios conceptos similares a los presentes en JMS como que el emisor envía los mensajes a una cola y el receptor los lee.</p>
<p>La comunicación con mensajes entre aplicaciones es útil porque ni el emisor ni receptor se conocen directamente ni han de estar funcionando simultáneamente para comunicarse consiguiendo de este modo el desacoplamiento entre las aplicaciones. Además la comunicación puede ser de uno a varios, los mensajes son leídos de las colas con la posibilidad de que cada mensaje sea recibido por un único receptor o por cada uno de ellos.</p>
<p>Realmente en RabbitMQ los mensajes no son enviados directamente por el emisor a las colas sino que se envían a un <em>exchange</em> que finalmente lo enruta y encola en la cola destino. Los <em>exchanges</em> pueden ser directos basando su lógica de encolado según el valor del <em>binding key</em> enviada junto con el mensaje y un <em>routing key</em> asociada con la cola o basados en temas en los que se usa una cadena formada por una lista de palabras separada por puntos, la lógica de enrutado se toma según si el <em>binding key</em> cumple el patrón del <em>routing key</em> que puede contener sustituidores de palabras, siendo un <em>*</em> una palabra exacta y <em>#</em> varias palabras contiguas.</p>
<p>En la <a href="http://www.rabbitmq.com/documentation.html">documentación de RabbitMQ</a> hay 6 tutoriales en diferentes lenguajes para el envío y recepción de mensajes.</p>
<ul>
<li><a href="http://www.rabbitmq.com/tutorials/tutorial-one-java.html">Tutorial 1, Hello World</a></li>
<li><a href="http://www.rabbitmq.com/tutorials/tutorial-two-java.html">Tutorial 2, Work Queues</a></li>
<li><a href="http://www.rabbitmq.com/tutorials/tutorial-three-java.html">Tutorial  3, Publish/Subscribe</a></li>
<li><a href="http://www.rabbitmq.com/tutorials/tutorial-four-java.html">Tutorial 4, Routing</a></li>
<li><a href="http://www.rabbitmq.com/tutorials/tutorial-five-java.html">Tutorial 5, Topics</a></li>
<li><a href="http://www.rabbitmq.com/tutorials/tutorial-six-java.html">Tutorial 6, Remote procedure call (RPC)</a></li>
</ul>
<p>Basándome en estos ejemplos he creado un proyecto uno muy similar al Tutorial 1, ejecutable más fácilmente con <a href="https://www.docker.com/">Docker</a> y <a href="https://gradle.org/">Gradle</a>.</p>
<p>Tanto en el emisor como en el receptor deberemos declarar las colas que van a usar (si una no existe se creará y si existe se usará), a la cola se le asigna un nombre y el receptor define un manejador para recibir los mensajes según se envían.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundorabbitmq</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.rabbitmq.client.Channel</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.rabbitmq.client.Connection</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.rabbitmq.client.ConnectionFactory</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.LocalDateTime</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.format.DateTimeFormatter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Send</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">QUEUE_NAME</span> <span class="o">=</span> <span class="s">&#34;hello&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">argv</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ConnectionFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ConnectionFactory</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">factory</span><span class="o">.</span><span class="na">setHost</span><span class="o">(</span><span class="s">&#34;localhost&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newConnection</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Channel</span> <span class="n">channel</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createChannel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">channel</span><span class="o">.</span><span class="na">queueDeclare</span><span class="o">(</span><span class="n">QUEUE_NAME</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello World at %s&#34;</span><span class="o">,</span> <span class="n">LocalDateTime</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_DATE_TIME</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">channel</span><span class="o">.</span><span class="na">basicPublish</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">,</span> <span class="n">QUEUE_NAME</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">message</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Sent «%s»&#34;</span><span class="o">,</span> <span class="n">message</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">1500</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">channel</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">connection</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Send.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundorabbitmq</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.rabbitmq.client.*</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Receive</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">QUEUE_NAME</span> <span class="o">=</span> <span class="s">&#34;hello&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">argv</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ConnectionFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ConnectionFactory</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">factory</span><span class="o">.</span><span class="na">setHost</span><span class="o">(</span><span class="s">&#34;localhost&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">newConnection</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Channel</span> <span class="n">channel</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createChannel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">channel</span><span class="o">.</span><span class="na">queueDeclare</span><span class="o">(</span><span class="n">QUEUE_NAME</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34; [*] Waiting for messages. To exit press CTRL+C&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Consumer</span> <span class="n">consumer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultConsumer</span><span class="o">(</span><span class="n">channel</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleDelivery</span><span class="o">(</span><span class="n">String</span> <span class="n">consumerTag</span><span class="o">,</span> <span class="n">Envelope</span> <span class="n">envelope</span><span class="o">,</span> <span class="n">AMQP</span><span class="o">.</span><span class="na">BasicProperties</span> <span class="n">properties</span><span class="o">,</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">body</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">body</span><span class="o">,</span> <span class="s">&#34;UTF-8&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Received  «%s»&#34;</span><span class="o">,</span> <span class="n">message</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">channel</span><span class="o">.</span><span class="na">basicConsume</span><span class="o">(</span><span class="n">QUEUE_NAME</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="n">consumer</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">20000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">channel</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">connection</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Receive.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">description</span> <span class="o">=</span> <span class="s1">&#39;HolaMundoRabbitMQ&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;0.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;com.rabbitmq:amqp-client:4.0.2&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">receive</span><span class="o">(</span><span class="nl">type:</span> <span class="n">JavaExec</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">main</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.holamundorabbitmq.Receive&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">classpath</span> <span class="o">=</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">runtimeClasspath</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">send</span><span class="o">(</span><span class="nl">type:</span> <span class="n">JavaExec</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">main</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.holamundorabbitmq.Send&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">classpath</span> <span class="o">=</span> <span class="n">sourceSets</span><span class="o">.</span><span class="na">main</span><span class="o">.</span><span class="na">runtimeClasspath</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Para ejecutar el ejemplo usaré el <a href="https://hub.docker.com/_/rabbitmq/">contenedor de Docker para RabbitMQ</a> iniciándolo con <a href="https://docs.docker.com/compose/">Docker Compose</a> y el siguiente archivo descriptor. Puedes consultar la <a href="https://picodotdev.github.io/blog-bitix/series/docker/">serie de artículos sobre Docker</a> que escribí para conocer cómo usarlo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">rabbitmq</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">rabbitmq:management-alpine</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">data:/var/lib/rabbitmq</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s2">&#34;5672:5672&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s2">&#34;15672:15672&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">RABBITMQ_NODENAME=rabbitmq</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">data</span><span class="p">:</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker-compose up&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-run.sh</span>
    </div>
</div>
<p>Una vez iniciado el contenedor y con el código fuente del ejemplo, iniciamos en cualquier orden la parte receptora de los mensajes y la parte emisora de mensajes con los comandos <code>./gradlew receive</code> y <code>./gradlew send</code> respectivamente, momento en el cual veremos que en la consola salen las notificaciones de recepción y envío.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/images/send_huf8ebe18827887e014241fb82fa202cfd_68838_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación de ejemplo enviando mensajes"><img src="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/images/send_huf8ebe18827887e014241fb82fa202cfd_68838_300x200_fit_box_3.png" width="300" height="165" alt="Aplicación de ejemplo enviando mensajes" title="Aplicación de ejemplo enviando mensajes"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/images/receive_hu74d142a9c5988e8761ef4d64b6fedb89_70279_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación de ejemplo recibiendo mensajes"><img src="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/images/receive_hu74d142a9c5988e8761ef4d64b6fedb89_70279_300x200_fit_box_3.png" width="300" height="165" alt="Aplicación de ejemplo recibiendo mensajes" title="Aplicación de ejemplo recibiendo mensajes"  class="lozad "></a></p>
</figure>
</div>
<p>En la comunicación con RabbitMQ se puede usar <a href="http://www.rabbitmq.com/ssl.html">TLS/SSL</a> así como mecanismos de <a href="http://www.rabbitmq.com/authentication.html">autenticación</a> y <a href="http://www.rabbitmq.com/access-control.html">autorización</a> para mayor seguridad. Usando confirmaciones si el receptor falla en el procesado el mensaje no se pierde ya que no se habrá declarado como <em>acknowledge</em> aún así si RabbitMQ falla los mensajes se perderán a menos que las colas se declaren como persistentes las cuales se guardarán en disco perdurando a una catástrofe.</p>
<p>RabbitMQ posee un <a href="https://www.rabbitmq.com/management.html"><em>plugin</em> para la administración</a> con el que podemos administrar permisos, tener una vista global, ver ratios de mensajes, estadísticas, colas, <em>exchanges</em> y más información, nos da información muy interesante sobre el estado del procesamiento de mensajes. Es accesible mediante el navegador y la URL <em>http://localhost:15672/</em>. En la captura del estado de la cola <em>hello</em> hay 10 mensajes encolados pendientes de entregar a algún receptor.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/images/rabbitmq-management_huec6c3e7834fb461d5accc97854c9ff68_101295_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación web de administración de RabbitMQ"><img src="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/images/rabbitmq-management_huec6c3e7834fb461d5accc97854c9ff68_101295_300x200_fit_box_3.png" width="300" height="164" alt="Aplicación web de administración de RabbitMQ" title="Aplicación web de administración de RabbitMQ"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/images/rabbitmq-queue_hu4e54c3cb2be4db8f762ad98e132b349b_66191_2560x1440_fit_box_3.png" data-gallery="" title="Información de estado de una cola"><img src="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/images/rabbitmq-queue_hu4e54c3cb2be4db8f762ad98e132b349b_66191_300x200_fit_box_3.png" width="274" height="200" alt="Información de estado de una cola" title="Información de estado de una cola"  class="lozad "></a></p>
</figure>
</div>
<p>Para profundizar más en las aplicaciones basadas en mensajes con RabbitMQ dos buenos libros son <a href="https://amzn.to/2lTGMQc">Learning RabbitMQ</a> y <a href="https://amzn.to/2lW9qwF">Matering RabbitMQ</a> cubriendo temas más avanzados como <em>clustering</em>, alta disponibilidad, arquitectura, patrones de diseño, seguridad y rendimiento.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1783984562&amp;linkId=9bb0705e8a34f246d5530b141b0a690e" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1783981520&amp;linkId=e87eebb622314cdf0c2c14fc32940264" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoRabbitMQ">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>docker-compose up, ./gradlew receive, ./gradle send</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.rabbitmq.com/">RabbitMQ</a></li>
<li><a href="http://www.rabbitmq.com/documentation.html">Documentación RabbitMQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/">Introducción y ejemplo sencillo de Java Message Service (JMS)</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/">Publicación y suscripción de eventos con Guava EventBus en una aplicación Java</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/02/como-crear-un-servicio-de-systemd-para-una-aplicacion-con-spring-boot/</id>
        <title>Cómo crear un servicio de systemd para una aplicación con Spring Boot</title>
        <updated>2017-02-11T10:00:00+01:00</updated>
        <published>2017-02-11T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/02/como-crear-un-servicio-de-systemd-para-una-aplicacion-con-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La mayoría de distribuciones Linux ya usan systemd como gestor y supervisor de los servicios del sistema.  Creando un descriptor podremos gestionar un servicio propio con los mismos comandos de systemd que usamos para cualquier otro servicio del sistema.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Habiendo creado una aplicación o microservicio, por ejemplo con <a href="https://projects.spring.io/spring-boot/">Spring Boot</a>, necesitaremos que se inicie con el sistema y una forma de gestionarlo para detenerlo, reiniciarlo y que se reinicie en caso de salida abrupta.</p>
<p><a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a> es el gestor de servicios que han adoptado la mayoría de distribuciones importantes como <a href="https://www.debian.org/">Debian</a>, <a href="https://www.centos.org/">CentOS</a>, <a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux">RHEL</a>, <a href="https://www.opensuse.org/">openSUSE</a>, incluso <a href="https://www.ubuntu.com/">Ubuntu</a> después de abandonar su propio gestor de servicios <a href="https://es.wikipedia.org/wiki/Upstart">Upstart</a>. Podemos usar systemd para que gestione como servicio una aplicación propia. Para ello deberemos crear un archivo <em>unit</em> que describa el servicio y sus dependencias con otros servicios para que se inicie correctamente, él y sus dependencias.</p>
<p>Los servicios se definen en archivos de texto denominados <em>unit</em> que tienen un formato similar a los archivos <em>.desktop</em> que a su vez están inspirados en los archivos <em>.ini</em> de Windows. En la <a href="http://www.freedesktop.org/software/systemd/man/systemd.unit.html">documentación de los archivos <em>unit</em> de systemd</a> se detalla con amplitud los archivos <em>unit</em> de systemd, tienen tres secciones:</p>
<ul>
<li>[Unit]: contiene información genérica independiente del tipo de servicio como descripción, requerimientos, deseos o orden de inicio.</li>
<li>[Service]: define el tipo de servicio, los comandos de preinicio, inicio, postinicio, parada, postparada, condiciones reinicio y más parámetros comentados en la <a href="http://www.freedesktop.org/software/systemd/man/systemd.service.html">documentación de los sevicios de systemd</a>.</li>
<li>[Install]: esta sección es usada al habilitar o deshabilitar un servicio en el sistema con el comando <code>systemctl</code>, pudiendo por ejemplo que se inicie este servicio cuando otro se inicie siendo otra forma de declarar dependencias. De este modo se puede indicar que un servicio tiene otros como dependencia pero también se puede indicar que un servicio se inicie cuando otro lo haga.</li>
</ul>
<p>Usando la aplicación del <a href="https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/">Ejemplo de API REST en Java con JAX-RS y Spring Boot</a>, crearé un archivo <em>unit</em> de systemd para que se inicie con el sistema y se reinicie en caso de fallo. Primeramente deberemos crear los archivos que definen el servicio para systemd y sus dependencias si las tienen. En los siguientes ejemplos <em>spring-boot-jaxrs.service</em> es una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> con una interfaz REST que simplemente devuelve el mensaje indicado por parámetro con la fecha en la dirección <em>http://localhost:8080/message?message=Hola</em>. <em>spring-boot-jaxrs-postgres.service</em> es el mismo servicio pero que tiene una dependencia sobre un contenedor de <a href="https://www.docker.com/">Docker</a> con una base <a href="https://www.postgresql.org/">PostgreSQL</a>, aunque la aplicación Spring Boot no hace uso de la base de datos PostgreSQL sirve para observar que si se inicia el servicio de la aplicación Java también se inicia el servicio de la base de datos si no estuviera ya en ejecución. <em>postgres.service</em> es el servicio de la base de datos PostgreSQL en un contenedor de Docker y que tiene como dependencia el servicio de Docker.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-systemd" data-lang="systemd"><span class="line"><span class="cl"><span class="k">[Unit]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">Description</span><span class="o">=</span><span class="s">Spring Boot application</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">[Service]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">Restart</span><span class="o">=</span><span class="s">always</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">ExecStart</span><span class="o">=</span><span class="s">/usr/bin/java -jar /var/apps/SpringBootJaxrs-0.0.1-SNAPSHOT.jar</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">SuccessExitStatus</span><span class="o">=</span><span class="s">143</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">[Install]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">WantedBy</span><span class="o">=</span><span class="s">multi-user.target</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>spring-boot-jaxrs.service</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-systemd" data-lang="systemd"><span class="line"><span class="cl"><span class="k">[Unit]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">Description</span><span class="o">=</span><span class="s">Spring Boot application</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">Requires</span><span class="o">=</span><span class="s">postgres.service</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">After</span><span class="o">=</span><span class="s">postgres.service</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">[Service]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">Restart</span><span class="o">=</span><span class="s">always</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">ExecStart</span><span class="o">=</span><span class="s">/usr/bin/java -jar /var/apps/SpringBootJaxrs-0.0.1-SNAPSHOT.jar</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">SuccessExitStatus</span><span class="o">=</span><span class="s">143</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">[Install]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">WantedBy</span><span class="o">=</span><span class="s">multi-user.target</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>spring-boot-jaxrs-postgres.service</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-systemd" data-lang="systemd"><span class="line"><span class="cl"><span class="k">[Unit]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">Description</span><span class="o">=</span><span class="s">PostgreSQL container</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">Requires</span><span class="o">=</span><span class="s">docker.service</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">After</span><span class="o">=</span><span class="s">docker.service</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">[Service]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">Restart</span><span class="o">=</span><span class="s">always</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">ExecStart</span><span class="o">=</span><span class="s">/usr/bin/docker start -a postgres</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">ExecStop</span><span class="o">=</span><span class="s">/usr/bin/docker stop -t 5 postgres</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">[Install]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">WantedBy</span><span class="o">=</span><span class="s">multi-user.target</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgres.service</span>
    </div>
</div>
<div class="media">
<script type="text/javascript" src="https://asciinema.org/a/102785.js" id="asciicast-102785" async></script>
<noscript><a href="https://asciinema.org/a/102785" target="_blank"><img src="https://asciinema.org/a/102785.png" width="650" height="450"></a></noscript>
</div>
<p>La instalación de la aplicación y de los servicios de systemd en el sistema se realizan copiando archivos, cambiando algunos permisos y usando los comandos de systemd para gestionar los servicios. Los mensajes de salida que emite el servicio se obtienen con el comando <code>journalctl -u spring-boot-jaxrs.service</code>.</p>
<p>Los archivos <em>unit</em> propios deben ser ubicados en el directorio <em>/etc/systemd/system/</em>, siendo el directorio <em>/usr/lib/systemd/system/</em> donde se ubican los instalados por los paquetes del sistema. Iniciado el servicio con el comando <code>sudo systemctl start spring-boot-jaxrs.service</code>, si queremos habilitarlo con el inicio del sistema usamos el comando <code>sudo systemctl enable spring-boot-jaxrs.service</code>. Para ver el estado del servicio usamos el comando <code>sudo systemctl status spring-boot-jaxrs.service</code>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./gradlew build&#10;</span></span><span class="line"><span class="cl">sudo mkdir /var/apps&#10;</span></span><span class="line"><span class="cl">sudo cp build/libs/SpringBootJaxrs-0.0.1-SNAPSHOT.jar /var/apps&#10;</span></span><span class="line"><span class="cl">sudo cp misc/spring-boot-jaxrs.service /etc/systemd/system&#10;</span></span><span class="line"><span class="cl">sudo cp misc/spring-boot-jaxrs-postgres.service /etc/systemd/system&#10;</span></span><span class="line"><span class="cl">sudo cp misc/postgres.service /etc/systemd/system&#10;</span></span><span class="line"><span class="cl">sudo chmod ugo+x /etc/systemd/system/spring-boot-jaxrs.service&#10;</span></span><span class="line"><span class="cl">sudo chmod ugo+x /etc/systemd/system/spring-boot-jaxrs-postgres.service&#10;</span></span><span class="line"><span class="cl">sudo chmod ugo+x /etc/systemd/system/postgres.service&#10;</span></span><span class="line"><span class="cl">sudo systemctl daemon-reload</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo systemctl start docker.service&#10;</span></span><span class="line"><span class="cl">docker run --name postgres postgres&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">sudo systemctl start spring-boot-jaxrs.service&#10;</span></span><span class="line"><span class="cl">sudo systemctl status spring-boot-jaxrs.service&#10;</span></span><span class="line"><span class="cl">sudo systemctl stop spring-boot-jaxrs.service&#10;</span></span><span class="line"><span class="cl">sudo systemctl start spring-boot-jaxrs-postgres.service&#10;</span></span><span class="line"><span class="cl">sudo systemctl status spring-boot-jaxrs-postgres.service&#10;</span></span><span class="line"><span class="cl">sudo systemctl stop spring-boot-jaxrs-postgres.service</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>manage.sh</span>
    </div>
</div>
<p>En los enlaces de referencia hay documentación más detallada tanto para gestionar los servicios con systemd como también documentación de sus archivos <em>unit</em>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringBootJaxrs">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>sudo systemctl start spring-boot-jaxrs.service</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files">Understanding Systemd Units and Unit Files</a></li>
<li><a href="http://www.freedesktop.org/software/systemd/man/systemd.unit.html">systemd unit</a></li>
<li><a href="http://www.freedesktop.org/software/systemd/man/systemd.service.html">systemd service</a></li>
<li><a href="https://docs.docker.com/engine/admin/host_integration/">Docker host integration</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/1.5.1.RELEASE/reference/htmlsingle/#deployment-install">Installing Spring Boot applications</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Systemd">Systemd (Arch Linux Wiki)</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/</id>
        <title>Registro y descubrimiento de servicios con Spring Cloud y Consul</title>
        <updated>2017-01-28T11:00:00+01:00</updated>
        <published>2017-01-28T11:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Tradicionalmente el conectar un servicio con sus servicios dependientes se ha realizado por configuración, normalmente mediante un nombre de dominio y su puerto. Esta configuración estática es suficiente para unos pocos servicios y que no varían durante su funcionamiento. Con el advenimiento de los microservicios con su estado y número cambiantes en el tiempo han surgido varias herramientas para en vez de usar configuración usar descubrimiento. Una de estas herramientas Consul para la que Spring Cloud proporciona integración.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En una aplicación con una arquitectura de microservicios esta se compone de múltiples partes cambiantes. Los microservicios pueden aparecer, desaparecer, variar en número o cambiar de ubicación, la aplicación debe ser tolerante a esos cambios y seguir proporcionando su servicio. Por tanto, la configuración de red de los servicios no se puede realizar usando direcciones <abbr title="Internet Protocol">IP</abbr> ya que no se conocen las que utilizarán los microservicios y usar nombres de dominio de <abbr title="Domain Name System">DNS</abbr> puede no ser viable ya que los cambios tardan en propagarse. Conocer el nombre de <em>host</em> y puerto reales de los microservicios es proporcionado por la funcionalidad de descubrimiento de servicios o <em>service discovery</em> que proporcionan algunos servicios como <a href="https://github.com/Netflix/eureka">Eureka</a>, <a href="https://www.consul.io/">Consul</a> o <a href="https://zookeeper.apache.org/">Apache Zookeper</a>.</p>
<p>En este artículo explicaré como usar la parte de descubrimiento de servicios de Consul usando una aplicación con <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> y  con <a href="https://projects.spring.io/spring-cloud/">Spring Cloud</a>. Spring Cloud proporciona varias cosas comunes para aplicaciones basadas en microservicios. Si aún no conoces las herramientas en las que se basará el ejemplo puedes consultar los siguientes artículos específicos como introducción:</p>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html">Herramienta de construcción Gradle </a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/">Ejemplo de multiproyecto con Gradle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/aplicacion-java-autocontenida-con-spring-boot/">Aplicación Java autocontenida con Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/">Configuración de una aplicación en diferentes entornos con Spring Cloud Config</a></li>
</ul>
<p>Consul además de descubrimiento de servicios proporciona otras funcionalidades como detección de fallos o caídas para prevenir enviar peticiones a máquinas fuera de servicio y almacenamiento básico clave/valor para configuración dinámica o activación de características. Dispone de una aplicación web en la que podemos ver el estado de los servicios, una <a href="https://www.consul.io/api/index.html">API REST</a> con la que comunicarse con Consul en una aplicación o en cada microservicio y un servidor de nombres <abbr>DNS</abbr>, podemos usar cualquiera de las dos interfaces de consulta, la basada en la <abbr>API</abbr> <abbr>REST</abbr> o la basada en DNS para obtener las direcciones IP con la ubicación de los servicios.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/images/consul_hu5e35c35c046c258a2599a40c947fcc52_11502_2560x1440_fit_box_3.png" width="200" height="199" alt="Consul" title="Consul"  class="lozad "></p>
</figure>
</div>
<p>Instalar Consul es muy sencillo basta con <a href="https://www.consul.io/downloads.html">descargar un binario</a> y descargar la interfaz web si queremos tener el <em>dashboard</em> con la información del servicio. Descargados y descomprimidos Consul se inicia con el siguiente comando. Podemos acceder al panel <em>dashboard</em> con la dirección <em>http://localhost:8500</em> con un navegador web. Inicialmente en el panel de servicios solo se encuentra el propio de Consul cuando aún no se ha registrado ningún servicio, aplicación o microservicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>consul agent -server -client<span class="o">=</span>0.0.0.0 -data-dir /tmp/consul -ui-dir ./webui&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<p>Una aplicación que use Spring Boot y que quiera hacer pública su disponibilidad en Consul basta con que use la anotación <code>@EnableDiscoveryClient</code> en la clase de inicio de la aplicación junto con las dependencias adecuadas. Con la declaración de esta anotación y la dependencia <em>spring-cloud-starter-consul-all</em> Spring se comunicará con Consul a través de la API REST para registrar cuando se inicie la aplicación, su nombre, nombre de máquina y puerto en el que estará disponible.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.CommandLineRunner</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.cloud.client.ServiceInstance</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.cloud.client.discovery.DiscoveryClient</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.cloud.client.discovery.EnableDiscoveryClient</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.AnnotationConfigApplicationContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableDiscoveryClient</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${config.key}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">key</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DiscoveryClient</span> <span class="n">discoveryClient</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">key</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Servicios:&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">discoveryClient</span><span class="o">.</span><span class="na">getServices</span><span class="o">().</span><span class="na">forEach</span><span class="o">(</span><span class="n">service</span> <span class="o">-&gt;</span> <span class="o">{</span>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">ServiceInstance</span><span class="o">&gt;</span> <span class="n">instances</span> <span class="o">=</span> <span class="n">discoveryClient</span><span class="o">.</span><span class="na">getInstances</span><span class="o">(</span><span class="n">service</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">instances</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s (%d): %s:%d %s%n&#34;</span><span class="o">,</span> <span class="n">service</span><span class="o">,</span> <span class="n">instances</span><span class="o">.</span><span class="na">size</span><span class="o">(),</span> <span class="n">instance</span><span class="o">.</span><span class="na">getHost</span><span class="o">(),</span> <span class="n">instance</span><span class="o">.</span><span class="na">getPort</span><span class="o">(),</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8080}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">consul</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">discovery</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">instanceId</span><span class="p">:</span><span class="w"> </span><span class="l">${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">prod</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application.yml</span>
    </div>
</div>
<p>Spring Cloud proporciona además un servicio que podemos usar para conocer los servicios registrados en Consul, con la clase <em>DiscoveryClient</em> podemos conocer los nombres de los servicios, su nombre de máquina y puerto desde una aplicación Java. En el método <em>run</em> de la clase <em>Main</em> se usa en este ejemplo para imprimir en la salida el listado de servicios registrados en Consul. Uno de esos servicios esta aplicación de ejemplo, ya que se registra en Consul cuando se inicia.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/images/consul-services_hu7b6922ae49f41ee0813233022d6adc1c_56113_2560x1440_fit_box_3.png" data-gallery="" title="Servicios registrados en Consul"><img src="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/images/consul-services_hu7b6922ae49f41ee0813233022d6adc1c_56113_300x200_fit_box_3.png" width="300" height="145" alt="Servicios registrados en Consul" title="Servicios registrados en Consul"  class="lozad "></a></p>
<figcaption>Servicios registrados en Consul</figcaption>
</figure>
</div>
<p>Consul para conocer que los servicios siguen en funcionamiento hace una petición <abbr>HTTP</abbr> cada ciertos segundos a una ruta de la aplicación, Spring Boot proporciona una dependencia, <em>spring-boot-starter-actuator</em>, que usada provee del <em>endpoint /health</em> para que Consul monitorice el estado del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;1.4.4.RELEASE&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.client.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span> <span class="s1">&#39;org.springframework:spring-context:4.3.6.RELEASE&#39;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter:1.4.4.RELEASE&#39;</span><span class="o">)</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;ch.qos.logback&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web:1.4.4.RELEASE&#39;</span><span class="o">)</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;ch.qos.logback&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator:1.4.4.RELEASE&#39;</span><span class="o">)</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;ch.qos.logback&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-consul-all:1.1.2.RELEASE&#39;</span><span class="o">)</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;ch.qos.logback&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/images/service-health_hu2c85a088e3fa0b2999e15f12aba27016_73001_2560x1440_fit_box_3.png" data-gallery="" title="Endpoint de estado de servicio"><img src="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/images/service-health_hu2c85a088e3fa0b2999e15f12aba27016_73001_300x200_fit_box_3.png" width="135" height="200" alt="Endpoint de estado de servicio" title="Endpoint de estado de servicio"  class="lozad "></a></p>
<figcaption>Endpoint de estado de servicio</figcaption>
</figure>
</div>
<p>Esta es la salida en la consola listando los servicios disponibles, siendo uno de ellos esta aplicación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Valor de propiedad de configuración (config.key): prod&#10;</span></span><span class="line"><span class="cl">Servicios:&#10;</span></span><span class="line"><span class="cl">consul (1): 192.168.1.2:8300 http://192.168.1.2:8300&#10;</span></span><span class="line"><span class="cl">springcloudclient (1): 192.168.1.2:8080 http://192.168.1.2:8080</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudConsul">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./consul/consul.sh y ./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://projects.spring.io/spring-cloud/">Spring Cloud</a></li>
<li><a href="https://cloud.spring.io/spring-cloud-consul/">Spring Cloud Consul</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/</id>
        <title>Hemeroteca #10</title>
        <updated>2016-12-24T12:00:00+01:00</updated>
        <published>2016-12-24T12:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Echando un vistazo a estos seis últimos meses han sido buenos, en número de artículos que he escrito y publicado como en el aumento de número de páginas vistas mensuales con respecto a inicios de 2016 y en similar proporción los ingresos mensuales por publicidad AdSense. De esta forma el esfuerzo en tiempo que supone escribir los artículos me es recompensado de alguna forma.</strong></p>]]>
        <![CDATA[<p>Otros seis meses acumulados de vida, ya son poco menos de 7 años desde que tengo un blog y 3 desde que empecé a escribir en Blog Bitix. A pesar de la gran cantidad de tiempo que me requiere escribir y publicar artículos, tanto como entre 3 y 10 horas de dedicación por artículo, es una de las cosas que más me alegro de haber empezado en el año 2010. Lo que aprendo con cada artículo de las cosas que me motivan y compartirlo por si a alguien más le resultan interesantes me resulta muy satisfactorio.</p>
<p>En estos seis meses en vez de publicar un solo artículo por semana he estado publicando dos artículos y algunas semanas incluso 3. El número de páginas vistas mensuales han aumentado hasta el punto de multiplicar por cuatro las páginas vistas que tenía a inicios de año siendo ahora unas 26K/mes. Y no son muchas, otros blogs personales tienen muchas más, dos o tres veces más. La mala noticia es que un porcentaje importante de las visitas provienen de unos pocos artículos bien posicionados en Google. En cualquier caso en una proporción similar que han aumentado las páginas vistas han aumentado los ingresos por publicidad de <a href="https://www.google.com/adsense/">Google AdSense</a> que incluyo en el blog, e incluso los últimos meses los ingresos han sido de alrededor de 20 € y 25 €, con lo que podré hacer más <a href="https://picodotdev.github.io/blog-bitix/series/donacion/">donaciones al software libre</a> y más frecuentemente. En definitiva este ha sido un buen año en este aspecto, si el siguiente fuera similar sería estupendo.</p>
<p>A pesar de la gran mejora en número de visitas mensuales durante este año cuesta un horror hacer crecer al blog y escribir y publicar al ritmo que lo he estado haciendo durante estos últimos meses. Hay que tener un poco de intuición y algo de suerte para acertar con artículos que se posicionen bien en los buscadores si lo que queremos es aumentar las visitas.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/images/analytics-2016_hu52b97d14fdb79a9a1e591311aa490e6d_58595_2560x1440_fit_box_3.png" data-gallery="" title="Analytics 2016 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/images/analytics-2016_hu52b97d14fdb79a9a1e591311aa490e6d_58595_300x200_fit_box_3.png" width="300" height="111" alt="Analytics 2016 de Blog Bitix" title="Analytics 2016 de Blog Bitix"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/images/gadsense-2016_hu2446445dc01efb419e83d5bf5a4644fa_34745_2560x1440_fit_box_3.png" data-gallery="" title="AdSense 2016 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/images/gadsense-2016_hu2446445dc01efb419e83d5bf5a4644fa_34745_300x200_fit_box_3.png" width="300" height="89" alt="AdSense 2016 de Blog Bitix" title="AdSense 2016 de Blog Bitix"  class="lozad "></a></p>
<figcaption>Evolución visitas e ingresos de AdSense en 2016</figcaption>
</figure>
</div>
<p>Una de las cosas que me estoy arrepintiendo ahora es no de tener dominio propio, no lo hice porque con <a href="https://pages.github.com/">GitHub Pages</a> me ofrecía el hospedaje gratis y sin complicaciones. Ahora me plantearía hospedar el blog en una máquina de <a href="https://www.linode.com/">Linode</a>, <a href="https://www.digitalocean.com/">Digital Ocean</a> o en la reciente competencia de estos con <a href="https://amazonlightsail.com/">Amazon Lightsail</a>. Mas que por necesidad por practicar con <a href="https://www.ansible.com/">Ansible</a> e implementar en el blog HTTPS/2 o usar <a href="https://letsencrypt.org/">Let&rsquo;s encrypt</a> asi como aprender sobre esos servicios en la nube. La migración es posible pero posiblemente no perfecta.</p>
<p>Durante este periodo de tiempo he realizado algunos cambios a nivel de diseño en el blog como el buscador de contenido con <a href="https://duckduckgo.com/">DuckDuckGo</a>, he quitado del panel lateral los artículos recientes, he creado una nueva página por si alguna organización quisiera contactarme por publicidad e incluido un mensaje para aquellos que tengan un bloqueador de anuncios. Para tratar de monetizar algo más el blog también he estado considerando en inscribirme en páginas como <a href="https://www.publisuites.com/">Publisuites</a> o <a href="https://coobis.com/">Coobis</a> para escribir artículos patrocinados esporádicamente y siempre con artículos escritos por mi, con mi opinión y de la forma más honesta que pueda. Finalmente, me decidí por Publisuites pero aún no he recibido ninguna proposición de artículo patrocinado.</p>
<p>Esta es la recapitulación de <a href="https://picodotdev.github.io/blog-bitix/2016/">artículos que he escrito durante el año 2016</a> y estos seis últimos meses organizados por temática empezando por unos pocos artículos más de la <a href="https://picodotdev.github.io/blog-bitix/series/web/">serie web</a>, algunos sobre <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> con varios artículos sobre juegos y otro sobre varias de las distribuciones más importantes y usadas, otros cuantos sobre programación relacionados con el lenguaje Java, por supuesto y de los que más gratificantes me resultan aunque no sean muy visitados relacionados de alguna forma con <a href="https://tapestry.apache.org/">Apache Tapestry</a> o algunos de opinión como repaso a las motivaciones que me llevaron a elegir a <a href="http://www.pepephone.com/">Pepephone</a> como proveedor de internet y otro de opinión sobre el rápido avance de la tecnología. En total han sido 47 artículos cuando en otros periodos de tiempo solo hubiese publicado unos 26.</p>
<p>He añadido a la serie de artículos sobre desarrollo web varios interesantes que forman parte de lo esencial a conocer.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/como-optimizar-un-sitio-web-con-compresion-gzip-en-nginx-y-apache-httpd/">Cómo optimizar un sitio web con compresión GZIP en Nginx y Apache HTTPD</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-como-balanceador-de-carga/">Configurar Nginx como balanceador de carga</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/">Cómo crear un proxy inverso entre el servidor web Nginx y un servidor de aplicaciones Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/">Las cabeceras de cache del protocolo HTTP</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/">Configurar Nginx para cachear respuestas del servidor de aplicaciones</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/">Cómo y por que redirigir tráfico web del dominio raíz al subdominio www (o viceversa)</a></li>
</ul>
<p>La sección de artículos sobre GNU/Linux destaca la <a href="https://picodotdev.github.io/blog-bitix/series/juegos/">serie sobre juegos</a> en el sistema del pingüino. He empezado a usar por obligación en el trabajo macOS que me ha servido como excusa para escribir un par de artículos sobre el sistema operativo de Apple.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/">Guía básica del intérprete de comandos Bash</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/">Jugar al ajedrez en GNU/Linux con GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/">Cómo crear miniaturas o vistas previas de imágenes con ImageMagick</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/">Jugar al clásico de estrategia de tablero Go en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/">Juegos incluidos en el entorno de escritorio GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/">Jugar a videojuegos clásicos y míticos de arcade con Mame en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/descargar-paquetes-a-actualizar-sin-instalarlos-en-arch-linux/">Descargar paquetes a actualizar sin instalarlos en Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/">22+ buenos juegos en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/">Varios juegos de culto con ScummVM en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/">Cómo configurar una impresora HP en red en Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/localizacion-de-un-comando-y-paquete-propietario-de-un-archivo-en-gnu-linux/">Localización de un comando y paquete propietario de un archivo en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/">Cómo instalar y probar macOS con VirtualBox en Windows o GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/">Elegir una distribución GNU/Linux según el usuario, uso o equipo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">Guardar contraseñas de forma segura con KeePassX</a></li>
</ul>
<p>He escrito otros cuantos artículos de programación en algunos casos relacionados de alguna forma con <a href="https://tapestry.apache.org/">Apache Tapestry</a>, Java y JavaScript.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/">No, un tag JSP o un tag de Grails no es equivalente a un componente de Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/por-que-guardar-las-fechas-en-utc-en-la-base-de-datos/">Por qué guardar las fechas en UTC en la base de datos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/">Ejemplo de API REST en Java con JAX-RS y Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/monitorizar-con-eventos-de-google-analytics-una-pagina-web/">Monitorizar con eventos de Google Analytics una página web</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth2-en-java/">Cliente de un servicio REST autenticado con OAuth en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/generacion-de-codigo-en-tiempo-de-ejecucion-con-byte-buddy/">Generación de código en tiempo de ejecución con Byte Buddy</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/">Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/">Componente select de Apache Tapestry con funcionalidades adicionales usando bootstrap-select</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/">Componente select múltiple en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/">Añadir botones selectores de opciones a select múltiple de bootstrap-select</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/11/historico-de-datos-auditoria-y-diferencias-entre-objetos-con-javers-en-java/">Histórico de datos, auditoría y diferencias entre objetos con Javers en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/11/usar-una-imagen-de-fondo-aleatoria-al-cargar-una-pagina-web/">Usar una imagen de fondo aleatoria al cargar una página web</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/">Introducción al JavaScript de ECMAScript 6</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/">Cómo implementar correctamente y por qué los métodos equals y hashCode de los objetos Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/12/transpiling-de-ecmascript-6-a-5-uglify-y-eslint-con-gulp/">Transpiling de ECMAScript 6 a 5, Uglify y ESLint con Gulp</a></li>
</ul>
<p>En la categoría de artículos de opinion junto con otros de teḿatica variada han sido los siguientes:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/">Eligiendo proveedor de internet, finalmente Pepephone</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/">Sobre los ínfimos impuestos que paga Apple</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/">Artículo #2 de Yo apoyo al software libre</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/">Gestionar los enlaces de una bitácora con Hugo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/">Sobre el rápido avance de la tecnología</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/11/3-formas-sencillas-de-monetizar-un-blog/">3 formas sencillas de monetizar un blog</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/11/mi-primer-mac-yo-usuario-de-gnu-linux/">Mi primer Mac, yo usuario de GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/11/instalar-programas-con-homebrew-en-macos/">Instalar programas con Homebrew en macOS</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/11/desempaquetado-bombillas-led-de-philips/">Desempaquetado bombillas LED de PHILIPS</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/12/la-fabrica-de-blog-bitix/">La fábrica de Blog Bitix</a></li>
</ul>
<p>¡Felices fiestas! ¡A por el 2017!</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/images/christmas-tux-2016_hu581dec6841cb818409efe552acb3f337_509006_2560x1440_fit_q90_box.jpg" data-gallery="" title="¡Felices fiestas y buen 2017!"><img src="https://picodotdev.github.io/blog-bitix/2016/12/hemeroteca-10/images/christmas-tux-2016_hu581dec6841cb818409efe552acb3f337_509006_600x450_fit_q90_box.jpg" width="600" height="338" alt="¡Felices fiestas y buen 2017!" title="¡Felices fiestas y buen 2017!"  class="lozad "></a></p>
<figcaption>¡Felices fiestas y buen 2017! <br>Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/</id>
        <title>Cómo implementar correctamente y por qué los métodos equals y hashCode de los objetos Java</title>
        <updated>2019-11-12T19:30:00+01:00</updated>
        <published>2016-12-07T11:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los métodos <em>equals</em> y <em>hashCode</em> son esenciales en las colecciones de objetos. Para su correcta implementación es necesario conocer unas cuantas propiedades que han de cumplir estos métodos. Pueden parecer sencillos pero no lo son tanto y una mala implementación posiblemente produzca algún tipo de error o comportamiento anómalo indeseado. En el siguiente artículo comento varias formas de implementarlos de forma sencilla y correcta.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En Java los métodos <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-">equals</a> y <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--">hashCode</a> están definidos en la raíz de la jerarquía de clases, esto es en la clase <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html">Object</a>, lo que significa que todas las instancias de objetos los poseen. Estos métodos son especialmente importantes ya que afectan al correcto funcionamiento de las colecciones como <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html">Collection</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html">List</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html">Set</a> y <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html">Map</a>, colecciones, listas, conjuntos y mapas que es difícil que cualquier programa no use alguna implementación de ellas.</p>
<p>El método <em>equals</em> es usado en las colecciones de tipo <em>List</em>, <em>Set</em>, y también <em>Map</em> para determinar si un objeto ya está incluida en la colección, el método <em>hashCode</em> es usado en los <em>Map</em> para encontrar el objeto asociado a la clave. Dado que las colecciones son ampliamente usadas en cualquier programa la correcta implementación implementación de los métodos <em>equals</em> y <em>hashCode</em> es fundamental ya que de lo contrario descubriremos errores poco agradables.</p>
<p>Una de las cosas que tenemos que tener cuenta es que siempre que sobrescribamos el método <em>equals</em> también debemos sobrescribir el método <em>hashCode</em>. Según el <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html">contrato definido en la clase Object</a> deberemos saber que:</p>
<ul>
<li>Durante la ejecución del programa el método <em>hashCode</em> debe retornar el mismo valor siempre que no se modifique la información usada en el método <em>equals</em>.</li>
<li>Si dos objetos son iguales según sus métodos <em>equals</em> entonces el valor devuelto por <em>hashCode</em> en cada uno de los dos objetos debe devolver el mismo valor.</li>
<li>Si dos objetos son distintos según sus métodos <em>equals</em> el valor devuelto no ha de ser necesariamente distinto aunque se recomienda para mejorar el rendimiento de las colecciones <em>Map</em>.</li>
</ul>
<h3 id="cómo-implementar-el-método-_equals_">Cómo implementar el método <em>equals</em></h3>
<p>Según la <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-">especificación del método equals</a> definido en la clase <em>Object</em> debe tener las siguientes propiedades:</p>
<ul>
<li>Es reflexiva: para cualquier referencia no nula de <code>x</code>, <code>x.equals(x)</code> debe retornar <em>true</em>.</li>
<li>Es simétrica: para cualquier referencia no nula de <code>x</code> e <code>y</code>, <code>x.equals(y)</code> debe retornar <em>true</em> si y solo si <code>y.equals(x)</code> retorna <em>true</em>.</li>
<li>Es transitiva: para cualquier referencia no nula de <code>x</code>, <code>y</code> y <code>z</code>, si <code>x.equals(y)</code> retorna <em>true</em> y <code>y.equals(z)</code> retorna <em>true</em> entonces <code>x.equals(z)</code> debe retornar <em>true</em>.</li>
<li>Es consistente: para cualquier referencia no nula de <code>x</code> e <code>y</code>, múltiples invocaciones de <code>x.equals(y)</code> consistentemente debe retornar <em>true</em> o <em>false</em>, si no se ha modificado la información utilizada en la comparación.</li>
<li>Para para cualquier referencia no nula de <code>x</code>, <code>x.equals(null)</code> debe retornar <em>false</em>.</li>
</ul>
<p>La implementación del método <em>equals</em> de la clase <em>Object</em> usa la equivalencia más restrictiva posible, esto es, para cualquier referencia no nula de <em>x</em> e <em>y</em> este método retorna <em>true</em> si y solo si son el mismo objeto (<em>x == y</em> tienen la misma referencia).</p>
<p>Hay dos formas comunes de implementar el método <em>equals</em>, una más restrictiva pero que cumple las propiedades y otra que no cumple completamente las propiedades pero es de utilidad en ciertos casos. Son las siguientes en las que cambia la sentencia que comprueba el tipo de la instancia del objeto con el que se está evaluando la igualdad. En el artículo <a href="https://www.sitepoint.com/implement-javas-equals-method-correctly/">How to Implement Java’s equals Method Correctly</a> están descritas las implicaciones y motivo de existir de ambas variantes además de explicar que garantiza cada sentencia del método <em>equals</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PhoneNumber</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">lineNumber</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">prefix</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">areaCode</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">o</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">getClass</span><span class="o">()</span> <span class="o">!=</span> <span class="n">o</span><span class="o">.</span><span class="na">getClass</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PhoneNumber</span> <span class="n">that</span> <span class="o">=</span> <span class="o">(</span><span class="n">PhoneNumber</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">that</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">lineNumber</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">lineNumber</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">prefix</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">prefix</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">areaCode</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">areaCode</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PhoneNumber-equals-1.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PhoneNumber</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">lineNumber</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">prefix</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">areaCode</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">o</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">PhoneNumber</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PhoneNumber</span> <span class="n">that</span> <span class="o">=</span> <span class="o">(</span><span class="n">PhoneNumber</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">that</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">lineNumber</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">lineNumber</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">prefix</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">prefix</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">areaCode</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">areaCode</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PhoneNumber-equals-2.java</span>
    </div>
</div>
<p>Usando la clase <a href="https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/EqualsBuilder.html">EqualsBuilder</a> de la librería <a href="https://commons.apache.org/proper/commons-lang/">commons-lang</a> la implementación es aparentemente similar pero en el caso de necesitar hacer comparaciones con datos de tipo <em>float</em>, <em>double</em>, <em>arrays</em> u objetos hace la implementación un poco más sencilla. En los <em>float</em> y <em>double</em> para hacer la comparación deberíamos usar los métodos <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html#compare-float-float-">Float.compare</a> y <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html#compare-double-double-">Double.compare</a> y en los objetos deberemos tener en cuenta si la referencia es posible que se a nula para evitar la excepción <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/NullPointerException.html">NullPointerException</a> cosas que la clase <em>EqualsBuilder</em> ya tiene en cuenta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PhoneNumber</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">lineNumber</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">prefix</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">areaCode</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="o">==</span> <span class="k">this</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">PhoneNumber</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PhoneNumber</span> <span class="n">that</span> <span class="o">=</span> <span class="o">(</span><span class="n">PhoneNumber</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">EqualsBuilder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">appendSuper</span><span class="o">(</span><span class="kd">super</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">that</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">lineNumber</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">lineNumber</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">prefix</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">prefix</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">areaCode</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">areaCode</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">isEquals</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PhoneNumber-equals-commons-lang.java</span>
    </div>
</div>
<h3 id="como-implementar-el-método-_hashcode_">Como implementar el método <em>hashCode</em></h3>
<p>La implementación del <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--">método hashCode</a> se debe realizar según los siguientes pasos:</p>
<ul>
<li>Almacenar un valor constante distinto de 0 en una variable int, por ejemplo 17.</li>
<li>Por cada campo usado en el método <em>equals</em> se debe obtener un <em>hash code</em> (int) realizando:
<ul>
<li>Si el campo es un <em>boolean</em> se debe calcular <code>(f ? 1 : 0)</code>.</li>
<li>Si el campo es un <em>byte</em>, <em>char</em>, <em>short</em> o <em>int</em> se debe calcular <code>(int) f</code>.</li>
<li>Si el campo es un <em>long</em> se debe calcular <code>(int) (f ^ (f &gt;&gt;&gt; 32))</code>.</li>
<li>Si el campo es un <em>float</em> se debe calcular <code>Float.floatToIntBits(f)</code>.</li>
<li>Si el campo es un <em>double</em> se debe calcular <code>Double.doubleToLongBits(f)</code> y calcular el <em>hash</em> del <em>long</em> obtenido en el paso para los tipos <em>long</em>.</li>
<li>Si el campo es una referencia a un objeto y el método <em>equals</em> de esta clase compara recursivamente invocando el método <em>equals</em> del campo, invocar su método <em>hashCode</em>. si el valor de campo es nulo se debe retornar una constante que tradicionalmente es 0.</li>
<li>Si el campo es un <em>array</em> se debe tratar individualmente cada elemento aplicando estas reglas a cada elemento. Si cada elemento del array es significativo se puede usar <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#hashCode-java.lang.Object">Arrays.hashCode</a>.</li>
<li>Combinar los <em>hash code</em> obtenidos de la siguiente forma, <code>result = 31 * result + c</code>.</li>
</ul>
</li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PhoneNumber</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">17</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span> <span class="o">=</span> <span class="n">31</span> <span class="o">*</span> <span class="n">result</span> <span class="o">+</span> <span class="n">areaCode</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span> <span class="o">=</span> <span class="n">31</span> <span class="o">*</span> <span class="n">result</span> <span class="o">+</span> <span class="n">prefix</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span> <span class="o">=</span> <span class="n">31</span> <span class="o">*</span> <span class="n">result</span> <span class="o">+</span> <span class="n">lineNumber</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">result</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PhoneNumber-hashcode.java</span>
    </div>
</div>
<p>Implementar este método en cada clase de una aplicación es tedioso, repetitivo y propenso a errores, para hacer más sencilla su implementación existe el método <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Objects.html#hash-java.lang.Object...-">Objects.hash</a> desde la versión 7 de Java. Si usamos una versión anterior a Java 7 disponemos de la clase <a href="https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/HashCodeBuilder.html">HashCodeBuilder</a> en la librería <em>commons-lang</em>. La misma implementación anterior quedaría.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PhoneNumber</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hash</span><span class="o">(</span><span class="n">areaCode</span><span class="o">,</span> <span class="n">prefix</span><span class="o">,</span> <span class="n">lineNumber</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PhoneNumber-hashcode-java.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PhoneNumber</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">HashCodeBuilder</span><span class="o">(</span><span class="n">17</span><span class="o">,</span> <span class="n">31</span><span class="o">).</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">append</span><span class="o">(</span><span class="n">areaCode</span><span class="o">).</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">append</span><span class="o">(</span><span class="n">prefix</span><span class="o">).</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">append</span><span class="o">(</span><span class="n">lineNumber</span><span class="o">).</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">toHashCode</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PhoneNumber-hashcode-commons-lang.java</span>
    </div>
</div>
<p>En el libro <a href="https://amzn.to/2g9N1bi">Effective Java</a> se explican con un poco más detalle estas dos cosas y muchas otras otras sobre Java que son muy interesantes conocer, el libro es una buena y recomendada lectura para todo programador Java que está entre los <a href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/">8+ libros para mejorar como programadores</a> que recomiendo.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321356683&amp;linkId=9145a271e7886cea526d9fcbe9edb707&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/las-colecciones-de-java-estructuras-de-datos-para-guardar-referencias-a-objetos/">Las colecciones de Java, estructuras de datos para guardar referencias a objetos</a></li>
<li><a href="https://www.javaworld.com/article/2074996/hashcode-and-equals-method-in-java-object---a-pragmatic-concept.html">HashCode and Equals method in Java object</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/11/historico-de-datos-auditoria-y-diferencias-entre-objetos-con-javers-en-java/</id>
        <title>Histórico de datos, auditoría y diferencias entre objetos con Javers en Java</title>
        <updated>2016-11-05T11:00:00+01:00</updated>
        <published>2016-11-05T11:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/11/historico-de-datos-auditoria-y-diferencias-entre-objetos-con-javers-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Por seguridad, por auditoría o histórico de datos una aplicación puede requerir no solo guardar los valores actuales de los datos que maneja sino también las versiones anteriores y los cambios en cada valor de los mismos. En Java hay una librería llamada Javers que nos proporciona funcionalidades como comparación, <em>snapshots</em>, persistencia y un lenguaje de consulta para hacer búsquedas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Por necesidades de negocio y requerimientos funcionales puede ser necesario guardar un histórico de ciertos datos de una aplicación en vez de solo la última versión de los datos. Tener solo la última versión de algunos datos puede no ser lo que se necesita. Por ejemplo, supongamos que una aplicación maneja una entidad de dominio producto y esta tiene un campo que es el precio y queremos guardar los cambios que se hacen a esta entidad para conocer el cambio de precio que han sufrido los productos. Otras necesidades pueden ser por auditoría o seguridad para saber que usuario ha hecho que cambios en los datos, para disponer de versiones anteriores de una entidad, comparar dos versiones de la misma entidad o lanzar consultas para obtener información de los cambios que se han producido.</p>
<p>Una librería que en Java nos ofrece toda esta información de auditoría es <a href="https://javers.org/">Javers</a> con la posibilidad de persistirla en diferentes sistemas, en las tradicionales base de datos relacionales o en una base de datos no SQL como <a href="https://www.mongodb.com/">MongoDB</a>. En la documentación encontramos como podemos <a href="http://javers.org/documentation/diff-examples/">comparar dos objetos</a>, <a href="http://javers.org/documentation/repository-examples/">persistir cambios</a> o <a href="http://javers.org/documentation/jql-examples/">lanzar consultas</a>.</p>
<p>Javers diferencia dos tipos de objetos <a href="http://javers.org/documentation/diff-examples/#compare-entities">Entities</a> o <a href="http://javers.org/documentation/diff-examples/#compare-valueobjects">ValueObjects</a>. Los ValueObjects son objetos <em>java bean</em> tradicionales de Java que no tienen identificador asignado y no son persistibles pero se pueden usar para hacer comparaciones entre dos objetos según las propiedades de los <em>java beans</em>. Los objetos <em>java bean</em> Entities tienen una propiedad que representa el identificativo de la entidad y las comparaciones se pueden hacer entre diferentes versiones del mismo.</p>
<p>En el siguiente ejemplo muestro como hacer comparaciones, como hacer cambios y persistirlos, como lanzar una consulta para obtener los cambios que se han producido u obtener <em>snapshots</em> de versiones anteriores y como persistir estos cambios en una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a> en la que utilizaré <a href="https://www.docker.com/">Docker</a>. En la primera sección del ejemplo se comparan dos objetos y obtienen sus diferencias, posteriormente se persisten varios cambios y finalmente se realiza una consulta para obtener los cambios que haya habido en la propiedad <em>price</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span><span class="lnt">87&#10;</span><span class="lnt">88&#10;</span><span class="lnt">89&#10;</span><span class="lnt">90&#10;</span><span class="lnt">91&#10;</span><span class="lnt">92&#10;</span><span class="lnt">93&#10;</span><span class="lnt">94&#10;</span><span class="lnt">95&#10;</span><span class="lnt">96&#10;</span><span class="lnt">97&#10;</span><span class="lnt">98&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundojavers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.common.collections.Sets</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.core.Javers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.core.JaversBuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.core.diff.Change</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.core.diff.Diff</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.repository.jql.QueryBuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.repository.sql.ConnectionProvider</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.repository.sql.DialectName</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.repository.sql.JaversSqlRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.javers.repository.sql.SqlRepositoryBuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.CommandLineRunner</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.sql.Connection</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.sql.DriverManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.sql.SQLException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Properties</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ConnectionProvider</span> <span class="nf">connectionProvider</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">ConnectionProvider</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Connection</span> <span class="nf">getConnection</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">SQLException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;org.postgresql.Driver&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClassNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">props</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="s">&#34;user&#34;</span><span class="o">,</span> <span class="s">&#34;admin&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">props</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="s">&#34;password&#34;</span><span class="o">,</span> <span class="s">&#34;admin&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">&#34;jdbc:postgresql:javers&#34;</span><span class="o">,</span> <span class="n">props</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Javers</span> <span class="nf">javers</span><span class="o">(</span><span class="n">ConnectionProvider</span> <span class="n">connectionProvider</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JaversSqlRepository</span> <span class="n">sqlRepository</span> <span class="o">=</span> <span class="n">SqlRepositoryBuilder</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">sqlRepository</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withConnectionProvider</span><span class="o">(</span><span class="n">connectionProvider</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withDialect</span><span class="o">(</span><span class="n">DialectName</span><span class="o">.</span><span class="na">POSTGRES</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">JaversBuilder</span><span class="o">.</span><span class="na">javers</span><span class="o">().</span><span class="na">registerJaversRepository</span><span class="o">(</span><span class="n">sqlRepository</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Javers</span> <span class="n">javers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Category</span> <span class="n">drink</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Category</span><span class="o">(</span><span class="s">&#34;Drink&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Category</span> <span class="n">sport</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Category</span><span class="o">(</span><span class="s">&#34;Sport&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Category</span> <span class="n">fruit</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Category</span><span class="o">(</span><span class="s">&#34;Fruit&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">aquarius1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Aquarius&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.75&#34;</span><span class="o">),</span> <span class="n">Collections</span><span class="o">.</span><span class="na">singleton</span><span class="o">(</span><span class="n">drink</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">aquarius2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Aquarius&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.90&#34;</span><span class="o">),</span> <span class="n">Collections</span><span class="o">.</span><span class="na">singleton</span><span class="o">(</span><span class="n">sport</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Diff&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Diff...&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Diff</span> <span class="n">diff1</span> <span class="o">=</span> <span class="n">javers</span><span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">aquarius1</span><span class="o">,</span> <span class="n">aquarius2</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">diff1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Commit&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Commit...&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javers</span><span class="o">.</span><span class="na">commit</span><span class="o">(</span><span class="s">&#34;author&#34;</span><span class="o">,</span> <span class="n">aquarius1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">aquarius1</span><span class="o">.</span><span class="na">setPrice</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;2.00&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javers</span><span class="o">.</span><span class="na">commit</span><span class="o">(</span><span class="s">&#34;author&#34;</span><span class="o">,</span> <span class="n">aquarius1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">aquarius1</span><span class="o">.</span><span class="na">setPrice</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.60&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">aquarius1</span><span class="o">.</span><span class="na">setCategories</span><span class="o">(</span><span class="n">Sets</span><span class="o">.</span><span class="na">asSet</span><span class="o">(</span><span class="n">drink</span><span class="o">,</span> <span class="n">sport</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javers</span><span class="o">.</span><span class="na">commit</span><span class="o">(</span><span class="s">&#34;author&#34;</span><span class="o">,</span> <span class="n">aquarius1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// JQL&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Query...&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Change</span><span class="o">&gt;</span> <span class="n">changes</span> <span class="o">=</span> <span class="n">javers</span><span class="o">.</span><span class="na">findChanges</span><span class="o">(</span><span class="n">QueryBuilder</span><span class="o">.</span><span class="na">byInstanceId</span><span class="o">(</span><span class="s">&#34;Aquarius&#34;</span><span class="o">,</span> <span class="n">Product</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">andProperty</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">).</span><span class="na">build</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">changes</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">forEach</span><span class="o">(</span><span class="n">change</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">change</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundojavers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Category</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Id</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Category</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Category.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundojavers</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Id</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Category</span><span class="o">&gt;</span> <span class="n">categories</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">,</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Category</span><span class="o">&gt;</span> <span class="n">categories</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">=</span> <span class="n">price</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">categories</span> <span class="o">=</span> <span class="n">categories</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">getPrice</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">price</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPrice</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">price</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">=</span> <span class="n">price</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Category</span><span class="o">&gt;</span> <span class="nf">getCategories</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">categories</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCategories</span><span class="o">(</span><span class="n">Set</span><span class="o">&lt;</span><span class="n">Category</span><span class="o">&gt;</span> <span class="n">categories</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">categories</span> <span class="o">=</span> <span class="n">categories</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Product.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">[picodotdev@archlinux HolaMundoJavers]$ ./gradlew run&#10;</span></span><span class="line"><span class="cl">:compileJava&#10;</span></span><span class="line"><span class="cl">:processResources UP-TO-DATE&#10;</span></span><span class="line"><span class="cl">:classes&#10;</span></span><span class="line"><span class="cl">:run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  .   ____&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  _&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__ _ _&#10;</span></span><span class="line"><span class="cl"> /\\ / ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \&#10;</span></span><span class="line"><span class="cl">( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \&#10;</span></span><span class="line"><span class="cl"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )&#10;</span></span><span class="line"><span class="cl">  &#39;  |____| .__|_| |_|_| |_\__, | / / / /&#10;</span></span><span class="line"><span class="cl"> =========|_|==============|___/=/_/_/_/&#10;</span></span><span class="line"><span class="cl"> :: Spring Boot ::&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v1.4.1.RELEASE)&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Diff...&#10;</span></span><span class="line"><span class="cl">Diff:&#10;</span></span><span class="line"><span class="cl">1. NewObject{globalId:&#39;io.github.picodotdev.blogbitix.holamundojavers.Category/Sport&#39;}&#10;</span></span><span class="line"><span class="cl">2. ObjectRemoved{globalId:&#39;io.github.picodotdev.blogbitix.holamundojavers.Category/Drink&#39;}&#10;</span></span><span class="line"><span class="cl">3. ValueChange{globalId:&#39;io.github.picodotdev.blogbitix.holamundojavers.Product/Aquarius&#39;, property:&#39;price&#39;, oldVal:&#39;1.75&#39;, newVal:&#39;0.90&#39;}&#10;</span></span><span class="line"><span class="cl">4. SetChange{globalId:&#39;io.github.picodotdev.blogbitix.holamundojavers.Product/Aquarius&#39;, property:&#39;categories&#39;, containerChanges:[removed:&#39;io.github.picodotdev.blogbitix.holamu&#10;</span></span><span class="line"><span class="cl">ndojavers.Category/Drink&#39;, added:&#39;io.github.picodotdev.blogbitix.holamundojavers.Category/Sport&#39;]}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Commit...&#10;</span></span><span class="line"><span class="cl">Query...&#10;</span></span><span class="line"><span class="cl">ValueChange{globalId:&#39;io.github.picodotdev.blogbitix.holamundojavers.Product/Aquarius&#39;, property:&#39;price&#39;, oldVal:&#39;2.00&#39;, newVal:&#39;1.60&#39;}&#10;</span></span><span class="line"><span class="cl">ValueChange{globalId:&#39;io.github.picodotdev.blogbitix.holamundojavers.Product/Aquarius&#39;, property:&#39;price&#39;, oldVal:&#39;1.75&#39;, newVal:&#39;2.00&#39;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">BUILD SUCCESSFUL&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Total time: 4.954 secs</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">postgres</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="m">5432</span><span class="p">:</span><span class="m">5432</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_USER=admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_PASSWORD=admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_DB=javers</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>La información se persistirán en varias tablas en este caso en un base de datos relacional PostgreSQL que Javers creará al iniciarse la aplicación, ejecutada la aplicación encontraremos datos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="line"><span class="cl"><span class="err">$</span><span class="w"> </span><span class="n">docker</span><span class="w"> </span><span class="k">exec</span><span class="w"> </span><span class="o">-</span><span class="n">it</span><span class="w"> </span><span class="mi">25135430</span><span class="n">da0d</span><span class="w"> </span><span class="n">bash</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">root</span><span class="o">@</span><span class="mi">25135430</span><span class="n">da0d</span><span class="p">:</span><span class="o">/#</span><span class="w"> </span><span class="n">psql</span><span class="w"> </span><span class="n">javers</span><span class="w"> </span><span class="k">admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">javers</span><span class="o">=#</span><span class="w"> </span><span class="err">\</span><span class="n">dt</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="n">List</span><span class="w"> </span><span class="k">of</span><span class="w"> </span><span class="n">relations</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="k">Schema</span><span class="w"> </span><span class="o">|</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">Name</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="o">|</span><span class="w"> </span><span class="k">Type</span><span class="w">  </span><span class="o">|</span><span class="w"> </span><span class="k">Owner</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">--------+--------------------+-------+------&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w"> </span><span class="k">public</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">jv_commit</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="o">|</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="k">public</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">jv_commit_property</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="k">public</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">jv_global_id</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;   </span><span class="o">|</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="k">public</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">jv_snapshot</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="o">|</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">(</span><span class="mi">4</span><span class="w"> </span><span class="k">rows</span><span class="p">)</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tables.sql</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoJavers">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/</id>
        <title>Añadir botones selectores de opciones a select múltiple de bootstrap-select</title>
        <updated>2016-10-26T14:30:00+02:00</updated>
        <published>2016-10-25T15:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="250" height="250" alt="Apache Tapestry" title="Apache Tapestry"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La librería <a href="https://silviomoreto.github.io/bootstrap-select/">bootstrap-select</a> nos permite crear elementos <em>select</em> enriquecidos con más funcionalidades que las propias ofrecidas por el navegador para seleccionar una única opción o para seleccionar múltiples opciones. Usando esta librería y añadiendo algunos atributos a las etiquetas HTML <em>select</em>, <em>optgroup</em> y <em>option</em> añadirá varias funcionalidades interesantes como comento en <a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/">Componente select de Apache Tapestry con funcionalidades adicionales usando bootstrap-select</a>.</p>
<p>Una de las opciones que añade es poniendo en la etiqueta <em>select</em> el atributo <em>data-actions-box</em> son dos botones para seleccionar todas las opciones o para deseleccionar todas las opciones.</p>
<p>Este es el aspecto de un elemento de selección con los botones de seleccionar todas las opciones y ninguna que son muy útiles para el usuario evitándose seleccionar una a una cada una de las opciones.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/images/multiselect-todos_huc1aae9ea09a793984ca66ef5b24c9d4d_12332_2560x1440_fit_box_3.png" data-gallery="" title="Multiselect con opciones Todos y Ninguno"><img src="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/images/multiselect-todos_huc1aae9ea09a793984ca66ef5b24c9d4d_12332_300x200_fit_box_3.png" width="300" height="148" alt="Multiselect con opciones Todos y Ninguno" title="Multiselect con opciones Todos y Ninguno"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/images/multiselect_hub697a62ce7fc0de6d6f2d6c23d078055_12857_2560x1440_fit_box_3.png" data-gallery="" title="Opciones seleccionadas de Multiselect"><img src="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/images/multiselect_hub697a62ce7fc0de6d6f2d6c23d078055_12857_300x200_fit_box_3.png" width="300" height="103" alt="Opciones seleccionadas de Multiselect" title="Opciones seleccionadas de Multiselect"  class="lozad "></a></p>
<figcaption>MultiSelect con opciones Todos y Ninguno</figcaption>
</figure>
</div>
<p>A pesar de todas las opciones adicionales que añade <em>bootstrap-select</em> incluidas los botones de seleccionar todas las opciones y ninguna aún quizá queramos personalizar más el comportamiento, por ejemplo, permitir seleccionar con botones adicionales un grupo de opciones relacionadas. Supongamos que tenemos un componente de selección múltiple de países y queremos seleccionar los países de Europa, América o Asia además de las opciones que <em>bootstrap-select</em> de todos y ninguno.</p>
<p>Un atributo que usa <em>bootstrap-select</em> para la opción de filtrado es el atributo <em>data-tokens</em>, si el valor introducido en el filtro coincide con este atributo la opción se muestra y en las que no coincide se oculta. Para no añadir más atributos usaré este atributo para asociar a la opción a los grupos que pertenecen o los <em>tokens</em> que tiene asociados. Dada una serie de <em>tokens</em> para los que queremos botón de filtrado en el atributo <em>data-tokens-selectors</em>.</p>
<p>Este sería un ejemplo de código JavaScript junto con el uso del componente de Tapestry en la aplicación que podríamos emplear para añadir al elemento selector este comportamiento de selección de grupos de opciones que básicamente añade de forma dinámica un pequeño trozo de HTML similar al que el componente utiliza para mostrar los botones de todos y ninguno. Cuando se haga clic en un botón de selección con el evento <em>loaded.bs.select</em> se buscan las opciones que contiene el <em>token</em> asociado al botón y se seleccionan teniendo en cuenta también las opciones que estén deshabilitadas. Además, cuando todas las opciones de un botón selector están seleccionadas queda como pulsado como indicativo, lógica que se realiza en el evento <em>change</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">t:multiselect</span> <span class="na">selected</span><span class="o">=</span><span class="s">&#34;paises&#34;</span> <span class="na">model</span><span class="o">=</span><span class="s">&#34;paisesSelectModel&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;selectpicker show-menu-arrow&#34;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="na">data-size</span><span class="o">=</span><span class="s">&#34;6&#34;</span> <span class="na">data-none-selected-text</span><span class="o">=</span><span class="s">&#34;Nada seleccionado&#34;</span> <span class="na">data-actions-box</span><span class="o">=</span><span class="s">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="na">data-select-all-text</span><span class="o">=</span><span class="s">&#34;Todos&#34;</span> <span class="na">data-deselect-all-text</span><span class="o">=</span><span class="s">&#34;Ninguno&#34;</span> <span class="na">data-selected-text-format</span><span class="o">=</span><span class="s">&#34;count &gt; 2&#34;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="na">data-count-selected-text</span><span class="o">=</span><span class="s">&#34;{0} de {1} seleccionados&#34;</span> <span class="na">data-show-tick</span><span class="o">=</span><span class="s">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="na">data-tokens-selectors</span><span class="o">=</span><span class="s">&#34;europa,america,asia&#34;</span><span class="p">/&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="nx">define</span><span class="p">(</span><span class="s2">&#34;app/multiselect&#34;</span><span class="p">,</span> <span class="p">[</span><span class="s2">&#34;jquery&#34;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">function</span> <span class="nx">Multiselect</span><span class="p">(</span><span class="nx">spec</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="p">.</span><span class="nx">select</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#&#39;</span> <span class="o">+</span> <span class="nx">spec</span><span class="p">.</span><span class="nx">clientId</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">tokensSelectors</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s1">&#39;tokens-selectors&#39;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="p">(</span><span class="nx">tokensSelectors</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">tokensSelectors</span><span class="p">.</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="p">.</span><span class="nx">tokensSelectors</span> <span class="o">=</span> <span class="nx">tokensSelectors</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">that</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;loaded.bs.select&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">buttons</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">that</span><span class="p">.</span><span class="nx">tokensSelectors</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">it</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">buttons</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;&lt;div class=&#34;btn-group btn-group-sm btn-block&#34;&gt;&#39;</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">buttons</span> <span class="o">+=</span> <span class="s1">&#39;&lt;button type=&#34;button&#34; data-select-custom-token=&#34;&#39;</span> <span class="o">+</span> <span class="nx">it</span> <span class="o">+</span> <span class="s1">&#39;&#34; class=&#34;actions-btn-custom bs-select-custom btn btn-default&#34;&gt;&#39;</span> <span class="o">+</span> <span class="nx">it</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">+</span> <span class="nx">it</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&lt;/button&gt;&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">buttons</span> <span class="o">+=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">==</span> <span class="nx">tokensSelectors</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;&lt;/div&gt;&#39;</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;button[data-id=&#34;&#39;</span> <span class="o">+</span> <span class="nx">spec</span><span class="p">.</span><span class="nx">clientId</span> <span class="o">+</span> <span class="s1">&#39;&#34;] + div[role=&#34;combobox&#34;] div.bs-actionsbox&#39;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">buttons</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">	&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">that</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;button[data-id=&#34;&#39;</span> <span class="o">+</span> <span class="nx">spec</span><span class="p">.</span><span class="nx">clientId</span> <span class="o">+</span> <span class="s1">&#39;&#34;] + div[role=&#34;combobox&#34;] div.bs-actionsbox&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="s1">&#39;button.bs-select-custom&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">event</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&#34;data-select-custom-token&#34;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">values</span> <span class="o">=</span> <span class="nx">that</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;[data-tokens~=&#39;</span> <span class="o">+</span> <span class="nx">token</span> <span class="o">+</span> <span class="s1">&#39;]&#39;</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;:not([disabled])&#39;</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}).</span><span class="nx">get</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">values</span> <span class="o">=</span> <span class="nx">values</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">that</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">val</span><span class="p">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">that</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">selectpicker</span><span class="p">(</span><span class="s1">&#39;val&#39;</span><span class="p">,</span> <span class="nx">values</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">that</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">,</span> <span class="nx">clickedIndex</span><span class="p">,</span> <span class="nx">newValue</span><span class="p">,</span> <span class="nx">oldValue</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">that</span><span class="p">.</span><span class="nx">tokensSelectors</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">it</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">values</span> <span class="o">=</span> <span class="nx">that</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;[data-tokens~=&#39;</span> <span class="o">+</span> <span class="nx">it</span> <span class="o">+</span> <span class="s1">&#39;]&#39;</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;:not([disabled])&#39;</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}).</span><span class="nx">get</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">active</span> <span class="o">=</span> <span class="nx">values</span><span class="p">.</span><span class="nx">every</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">that</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">val</span><span class="p">()</span> <span class="o">!==</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="nx">that</span><span class="p">.</span><span class="nx">select</span><span class="p">.</span><span class="nx">val</span><span class="p">().</span><span class="nx">includes</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;button[data-id=&#34;&#39;</span> <span class="o">+</span> <span class="nx">spec</span><span class="p">.</span><span class="nx">clientId</span> <span class="o">+</span> <span class="s1">&#39;&#34;] + div[role=&#34;combobox&#34;] div.bs-actionsbox&#39;</span><span class="p">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;[data-select-custom-token=&#34;&#39;</span> <span class="o">+</span> <span class="nx">it</span> <span class="o">+</span> <span class="s1">&#39;&#34;]&#39;</span><span class="p">).</span><span class="nx">toggleClass</span><span class="p">(</span><span class="s1">&#39;active&#39;</span><span class="p">,</span> <span class="nx">active</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">function</span> <span class="nx">init</span><span class="p">(</span><span class="nx">spec</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="nx">Multiselect</span><span class="p">(</span><span class="nx">spec</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">init</span><span class="o">:</span> <span class="nx">init</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">});</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>multiselect.js</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;bs-actionsbox&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn-group btn-group-sm btn-block&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;actions-btn bs-select-all btn btn-default&#34;</span><span class="p">&gt;</span>Todos<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;actions-btn bs-deselect-all btn btn-default&#34;</span><span class="p">&gt;</span>Ninguno<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn-group btn-group-sm btn-block&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">data-select-custom-token</span><span class="o">=</span><span class="s">&#34;europa&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;actions-btn-custom bs-select-custom btn btn-default&#34;</span><span class="p">&gt;</span>Europa<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">data-select-custom-token</span><span class="o">=</span><span class="s">&#34;america&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;actions-btn-custom bs-select-custom btn btn-default&#34;</span><span class="p">&gt;</span>America<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn-group btn-group-sm btn-block&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">data-select-custom-token</span><span class="o">=</span><span class="s">&#34;asia&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;actions-btn-custom bs-select-custom btn btn-default&#34;</span><span class="p">&gt;</span>Asia<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.html</span>
    </div>
</div>
<p>Y este sería el aspecto de componente en el navegador.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/images/multiselect-europa_hu5297a14999dff36ddae4757ae9b095d6_15189_2560x1440_fit_box_3.png" data-gallery="" title="Multiselect con opciones Europa"><img src="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/images/multiselect-europa_hu5297a14999dff36ddae4757ae9b095d6_15189_300x200_fit_box_3.png" width="300" height="188" alt="Multiselect con opciones Europa" title="Multiselect con opciones Europa"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/images/multiselect-asia_hue08ad63d2befe4ca6d9f6cf51a45bc95_14395_2560x1440_fit_box_3.png" data-gallery="" title="Multiselect con opciones Asia"><img src="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/images/multiselect-asia_hue08ad63d2befe4ca6d9f6cf51a45bc95_14395_300x200_fit_box_3.png" width="300" height="188" alt="Multiselect con opciones Asia" title="Multiselect con opciones Asia"  class="lozad "></a></p>
<figcaption>MultiSelect con opciones Europa, America y Asia</figcaption>
</figure>
</div>
<p>Si usásemos el <a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/">componente de selección múltiple con Apache Tapetstry y bootstrap-select</a> sería el propio componente <em>MultiSelect</em> el que se encargaría de incluir el JavaScript en la página cuando en ella se usase lo que nos evita incluir el JavaScript de forma global en la aplicación y en todas las páginas cuando realmente no se usa.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.components</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SupportsInformalParameters</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MultiSelect</span> <span class="kd">extends</span> <span class="n">AbstractField</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">beginRender</span><span class="o">(</span><span class="n">MarkupWriter</span> <span class="n">writer</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JSONObject</span> <span class="n">spec</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">spec</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;clientId&#34;</span><span class="o">,</span> <span class="n">getClientId</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javaScriptSupport</span><span class="o">.</span><span class="na">require</span><span class="o">(</span><span class="s">&#34;app/multiselect&#34;</span><span class="o">).</span><span class="na">invoke</span><span class="o">(</span><span class="s">&#34;init&#34;</span><span class="o">).</span><span class="na">with</span><span class="o">(</span><span class="n">spec</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">SelectModel</span> <span class="nf">getPaisesSelectModel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">AbstractSelectModel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionGroupModel</span><span class="o">&gt;</span> <span class="nf">getOptionGroups</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">europe</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">america</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">asia</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">europe</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;data-tokens&#34;</span><span class="o">,</span> <span class="s">&#34;europa&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">america</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;data-tokens&#34;</span><span class="o">,</span> <span class="s">&#34;america&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">asia</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;data-tokens&#34;</span><span class="o">,</span> <span class="s">&#34;asia&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">espana</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;España&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;espana&#34;</span><span class="o">,</span> <span class="n">europe</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">francia</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Francia&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;francia&#34;</span><span class="o">,</span> <span class="n">europe</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">alemania</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Alemania&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;alemania&#34;</span><span class="o">,</span> <span class="n">europe</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">eeuu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;EEUU&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;eeuu&#34;</span><span class="o">,</span> <span class="n">america</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">mexico</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Mexico&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;mexico&#34;</span><span class="o">,</span> <span class="n">america</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">argentina</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Argentina&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;argentina&#34;</span><span class="o">,</span> <span class="n">america</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">china</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;China&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;china&#34;</span><span class="o">,</span> <span class="n">asia</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">japon</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Japón&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;japon&#34;</span><span class="o">,</span> <span class="n">asia</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">india</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;India&#34;</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="s">&#34;india&#34;</span><span class="o">,</span> <span class="n">asia</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">europaGroup</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;Europa&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">espana</span><span class="o">,</span> <span class="n">francia</span><span class="o">,</span> <span class="n">alemania</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">americaGroup</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;América&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">eeuu</span><span class="o">,</span> <span class="n">mexico</span><span class="o">,</span> <span class="n">argentina</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">asiaGroup</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;Asia&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">china</span><span class="o">,</span> <span class="n">japon</span><span class="o">,</span> <span class="n">india</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">europaGroup</span><span class="o">,</span> <span class="n">americaGroup</span><span class="o">,</span> <span class="n">asiaGroup</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="nf">getOptions</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MultiSelect.java</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/</id>
        <title>Componente select múltiple en Apache Tapestry</title>
        <updated>2016-10-25T13:45:00+02:00</updated>
        <published>2016-10-25T13:45:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="250" height="250" alt="Apache Tapestry" title="Apache Tapestry"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El <em>framework</em> basado en componentes Apache Tapestry incorpora una amplia <a href="http://tapestry.apache.org/component-reference.html">colección de componentes</a> que nos bastarán en la mayoría de casos que necesitemos. Para los casos en que deseemos un componente con un comportamiento específico podemos construir uno completamente nuevo basado en otros existentes incluyendo los propios nuestros, de una librería o incluidos en Tapestry.</p>
<p>En Tapestry hay múltiples componentes con los que construir formularios para que el usuario pueda introducir datos, ser enviados por el navegador y procesados en el servidor. Hay componentes de formulario desde <em>checkboxes</em>, <em>radios</em>, <em>select</em>, <em>inputs</em>, &hellip; con soporte para <abbr title="HyperText Markup Language">HTML</abbr> 5.</p>
<p>Observando en detalle la lista de componentes ofrecidos nos daremos cuenta de que está un componente <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Select.html">Select</a> pero que solo se puede utilizar para que el usuario seleccione una única opción, sin embargo, en el estándar de HTML los campos de selección pueden utilizarse para seleccionar múltiples opciones. Como se no ofrece un componente <em>select</em> para seleccionar múltiples opciones a la vez si lo necesitamos deberemos implementar uno que nos ofrezca esta funcionalidad. Con el código fuente de Tapestry la tarea es mucho más sencilla y prácticamente es copiar y pegar, el código completo del componente <em>MultiSelect</em> será lo que muestre a continuación.</p>
<p>Todo componente de formulario en este <em>framework</em> hereda de <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/base/AbstractField.html">AbstracField</a> en el que básicamente deberemos proporcionar una implementación del método <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/base/AbstractField.html#processSubmission%28java.lang.String%29">processSubmission()</a> donde procesaremos los datos recibidos en este caso con un método equivalente al tradicional en Java EE [ServletRequest.getParameterValues] (https://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html#getParameterValues-java.lang.String-). La otra parte que deberemos implementar es la generación de etiquetas HTML del componente en el método de ciclo de vida <em>beginRender()</em> que en gran parte nos servirá lo implementado en el código fuente del componente <em>Select</em> de Tapestry pero incluyendo el atributo <em>multiple</em> que requiere HTML para los <em>selects</em> de múltiples opciones.</p>
<p>Esta sería una implementación de un componente <em>select</em> múltiple. La mayor diferencia entre el componente <em>Select</em> y este <em>MultiSelect</em> está en la propiedad <em>value</em> que en el primero es de tipo <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html">Object</a> donde se guardará el dato seleccionado y <em>selected</em> en el segundo que es un <a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html">List</a> de objetos donde se guardarán los datos seleccionados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span><span class="lnt">135&#10;</span><span class="lnt">136&#10;</span><span class="lnt">137&#10;</span><span class="lnt">138&#10;</span><span class="lnt">139&#10;</span><span class="lnt">140&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.components</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.*</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Parameter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.SupportsInformalParameters</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.corelib.base.AbstractField</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.internal.util.SelectModelRenderer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Collection</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SupportsInformalParameters</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MultiSelect</span> <span class="kd">extends</span> <span class="n">AbstractField</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * A ValueEncoder used to convert server-side objects (provided from the&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * &#34;source&#34; parameter) into unique client-side strings (typically IDs) and&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * back. Note: this component does NOT support ValueEncoders configured to&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * be provided automatically by Tapestry.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; */</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Parameter</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ValueEncoder</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">encoder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * Model used to define the values and labels used when rendering.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; */</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Parameter</span><span class="o">(</span><span class="n">required</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span> <span class="n">allowNull</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">SelectModel</span> <span class="n">model</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * The list of selected values from the {@link SelectModel}. This will be updated when the form&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * is submitted. If the value for the parameter is null, a new list will be created, otherwise the existing list&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * will be cleared. If unbound, defaults to a property of the container matching this component&#39;s id.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * &lt;p&gt;&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * Prior to Tapestry 5.4, this allowed null, and a list would be created when the form was submitted. Starting&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * with 5.4, the selected list may not be null, and it need not be a list (it may be, for example, a set).&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; */</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Parameter</span><span class="o">(</span><span class="n">required</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span> <span class="n">autoconnect</span> <span class="o">=</span> <span class="kc">true</span><span class="o">,</span> <span class="n">allowNull</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Collection</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">selected</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * The object that will perform input validation. The validate binding prefix is generally used to provide&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * this object in a declarative fashion.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; *&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * @since 5.2.0&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; */</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Parameter</span><span class="o">(</span><span class="n">defaultPrefix</span> <span class="o">=</span> <span class="n">BindingConstants</span><span class="o">.</span><span class="na">VALIDATE</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">FieldValidator</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">validate</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">final</span> <span class="n">Renderable</span> <span class="n">mainRenderer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Renderable</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">render</span><span class="o">(</span><span class="n">MarkupWriter</span> <span class="n">writer</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SelectModelRenderer</span> <span class="n">visitor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SelectModelRenderer</span><span class="o">(</span><span class="n">writer</span><span class="o">,</span> <span class="n">encoder</span><span class="o">,</span> <span class="kc">false</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="kt">boolean</span> <span class="nf">isOptionSelected</span><span class="o">(</span><span class="n">OptionModel</span> <span class="n">optionModel</span><span class="o">,</span> <span class="n">String</span> <span class="n">clientValue</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">selected</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">optionModel</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">model</span><span class="o">.</span><span class="na">visit</span><span class="o">(</span><span class="n">visitor</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">processSubmission</span><span class="o">(</span><span class="n">String</span> <span class="n">controlName</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span><span class="o">[]</span> <span class="n">values</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameters</span><span class="o">(</span><span class="n">controlName</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">values</span> <span class="o">=</span> <span class="o">(</span><span class="n">values</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">0</span><span class="o">]:</span> <span class="n">values</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Use a couple of local variables to cut down on access via bindings&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Collection</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">selected</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">selected</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">selected</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ValueEncoder</span> <span class="n">encoder</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">encoder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">value</span> <span class="o">:</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Object</span> <span class="n">objectValue</span> <span class="o">=</span> <span class="n">toValue</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">selected</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">objectValue</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">putPropertyNameIntoBeanValidationContext</span><span class="o">(</span><span class="s">&#34;selected&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">fieldValidationSupport</span><span class="o">.</span><span class="na">validate</span><span class="o">(</span><span class="n">selected</span><span class="o">,</span> <span class="n">resources</span><span class="o">,</span> <span class="n">validate</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">selected</span> <span class="o">=</span> <span class="n">selected</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="kd">final</span> <span class="n">ValidationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">validationTracker</span><span class="o">.</span><span class="na">recordError</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">removePropertyNameFromBeanValidationContext</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">beginRender</span><span class="o">(</span><span class="n">MarkupWriter</span> <span class="n">writer</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writer</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">&#34;select&#34;</span><span class="o">,</span> <span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="n">getControlName</span><span class="o">(),</span> <span class="s">&#34;id&#34;</span><span class="o">,</span> <span class="n">getClientId</span><span class="o">(),</span> <span class="s">&#34;multiple&#34;</span><span class="o">,</span> <span class="s">&#34;multiple&#34;</span><span class="o">,</span> <span class="s">&#34;disabled&#34;</span><span class="o">,</span> <span class="n">getDisabledValue</span><span class="o">(),</span> <span class="s">&#34;class&#34;</span><span class="o">,</span> <span class="n">cssClass</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">putPropertyNameIntoBeanValidationContext</span><span class="o">(</span><span class="s">&#34;selected&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">validate</span><span class="o">.</span><span class="na">render</span><span class="o">(</span><span class="n">writer</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">removePropertyNameFromBeanValidationContext</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">resources</span><span class="o">.</span><span class="na">renderInformalParameters</span><span class="o">(</span><span class="n">writer</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">decorateInsideField</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainRenderer</span><span class="o">.</span><span class="na">render</span><span class="o">(</span><span class="n">writer</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">afterRender</span><span class="o">(</span><span class="n">MarkupWriter</span> <span class="n">writer</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writer</span><span class="o">.</span><span class="na">end</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ValueEncoder</span> <span class="nf">defaultEncoder</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">defaultProvider</span><span class="o">.</span><span class="na">defaultValueEncoder</span><span class="o">(</span><span class="s">&#34;selected&#34;</span><span class="o">,</span> <span class="n">resources</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * Computes a default value for the &#34;validate&#34; parameter using&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; * {@link org.apache.tapestry5.services.FieldValidatorDefaultSource}.&#10;</span></span></span><span class="line"><span class="cl"><span class="cm">&nbsp;&nbsp;&nbsp;&nbsp; */</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Binding</span> <span class="nf">defaultValidate</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">defaultProvider</span><span class="o">.</span><span class="na">defaultValidatorBinding</span><span class="o">(</span><span class="s">&#34;selected&#34;</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">resources</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="nf">toClient</span><span class="o">(</span><span class="n">Object</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">encoder</span><span class="o">.</span><span class="na">toClient</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Object</span> <span class="nf">toValue</span><span class="o">(</span><span class="n">String</span> <span class="n">clientValue</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span> <span class="o">((</span><span class="n">Collection</span><span class="o">)</span> <span class="n">encoder</span><span class="o">.</span><span class="na">toValue</span><span class="o">(</span><span class="n">clientValue</span><span class="o">)).</span><span class="na">toArray</span><span class="o">()[</span><span class="n">0</span><span class="o">];</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isRequired</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">validate</span><span class="o">.</span><span class="na">isRequired</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getDisabledValue</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">disabled</span> <span class="o">?</span> <span class="s">&#34;disabled&#34;</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MultiSelect.java</span>
    </div>
</div>
<p>Esta implementación del componente no necesita de una plantilla <em>tml</em> sino que todo el HTML se generará desde el código Java. El componente soporta parámetros informales como indicamos con la anotación <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/annotations/SupportsInformalParameters.html">@SupportsInformalParameters</a> que son parámetros que se añadirán a la etiqueta <em>select</em> incluidos tal cual se indican en su uso que por ejemplo podemos utilizar para variar el número de opciones visibles, personalizar los textos y otras funcionalidades de <a href="https://silviomoreto.github.io/bootstrap-select/">bootstrap-select</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-group&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">t:multiselect</span> <span class="na">selected</span><span class="o">=</span><span class="s">&#34;coloresSelect&#34;</span> <span class="na">model</span><span class="o">=</span><span class="s">&#34;coloresSelectModel&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;selectpicker show-menu-arrow&#34;</span> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="na">size</span><span class="o">=</span><span class="s">&#34;3&#34;</span> <span class="na">data-none-selected-text</span><span class="o">=</span><span class="s">&#34;Nada seleccionado&#34;</span> <span class="na">data-actions-box</span><span class="o">=</span><span class="s">&#34;true&#34;</span> <span class="na">data-select-all-text</span><span class="o">=</span><span class="s">&#34;Todos&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="na">data-deselect-all-text</span><span class="o">=</span><span class="s">&#34;Ninguno&#34;</span> <span class="na">data-selected-text-format</span><span class="o">=</span><span class="s">&#34;count &gt; 2&#34;</span> <span class="na">data-count-selected-text</span><span class="o">=</span><span class="s">&#34;{0} de {1} seleccionados&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="na">data-show-tick</span><span class="o">=</span><span class="s">&#34;true&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.pages</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Index</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">SelectModel</span> <span class="nf">getColoresSelectModel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="k">new</span> <span class="n">AbstractSelectModel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionGroupModel</span><span class="o">&gt;</span> <span class="nf">getOptionGroups</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">			<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="nf">getOptions</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">OptionModel</span> <span class="n">rojo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Rojo&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;rojo&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">OptionModel</span> <span class="n">azul</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Azul&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;azul&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">OptionModel</span> <span class="n">verde</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Verde&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;verde&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">rojo</span><span class="o">,</span> <span class="n">azul</span><span class="o">,</span> <span class="n">verde</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.java</span>
    </div>
</div>
<p>El código HTML generado por el componente es el siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">select</span> <span class="na">data-actions-box</span><span class="o">=</span><span class="s">&#34;true&#34;</span> <span class="na">size</span><span class="o">=</span><span class="s">&#34;3&#34;</span> <span class="na">data-select-all-text</span><span class="o">=</span><span class="s">&#34;Todos&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="na">data-deselect-all-text</span><span class="o">=</span><span class="s">&#34;Ninguno&#34;</span> <span class="na">data-count-selected-text</span><span class="o">=</span><span class="s">&#34;{0} de {1} seleccionados&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="na">data-selected-text-format</span><span class="o">=</span><span class="s">&#34;count &amp;gt; 2&#34;</span> <span class="na">data-show-tick</span><span class="o">=</span><span class="s">&#34;true&#34;</span> <span class="na">data-none-selected-text</span><span class="o">=</span><span class="s">&#34;Nada seleccionado&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="na">class</span><span class="o">=</span><span class="s">&#34;form-control selectpicker show-menu-arrow&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="na">multiple</span><span class="o">=</span><span class="s">&#34;multiple&#34;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;multiselect&#34;</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;multiselect&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">option</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;rojo&#34;</span><span class="p">&gt;</span>Rojo<span class="p">&lt;/</span><span class="nt">option</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">option</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;azul&#34;</span><span class="p">&gt;</span>Azul<span class="p">&lt;/</span><span class="nt">option</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">option</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;verde&#34;</span><span class="p">&gt;</span>Verde<span class="p">&lt;/</span><span class="nt">option</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">select</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.html</span>
    </div>
</div>
<p>Este sería el aspecto del <em>select</em> múltiple con sus botones para seleccionar todas las opciones y deseleccionar todas, además de personalizados los textos y una pequeña flecha en el desplegable hacia el componente <em>select</em>, todo esto configurado principalmente a través de atributos <em>data</em> y clases <abbr title="Cascading Stylesheets">CSS</abbr>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/images/multiselect_hu72bf607765942b5b3d2a9725cb171228_10025_2560x1440_fit_box_3.png" data-gallery="" title="Aspecto del componente select múltiple"><img src="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/images/multiselect_hu72bf607765942b5b3d2a9725cb171228_10025_300x200_fit_box_3.png" width="300" height="119" alt="Aspecto del componente select múltiple" title="Aspecto del componente select múltiple"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/images/multiselect-2_huef2dae54310e3d5c554c1c2e8d611d38_13940_2560x1440_fit_box_3.png" data-gallery="" title="Vista con opciones seleccionadas enviadas al servidor"><img src="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/images/multiselect-2_huef2dae54310e3d5c554c1c2e8d611d38_13940_300x200_fit_box_3.png" width="300" height="109" alt="Vista con opciones seleccionadas enviadas al servidor" title="Vista con opciones seleccionadas enviadas al servidor"  class="lozad "></a></p>
<figcaption>Componente MultiSelect con bootstrap-select</figcaption>
</figure>
</div>
<p>Si queremos seleccionar múltiples opciones usando <em>checkboxes</em> Tapestry ofrece el componente <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Checklist.html">Checklist</a> y usando <em>selects</em> otra opción es el componente <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Palette.html">Palette</a> pero seguramente no sea lo que deseamos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/images/checklist_hu75dc4db3b4dbea2007ec29f49d905629_56952_2560x1440_fit_box_3.png" data-gallery="" title="Componente Checklist de Tapestry"><img src="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/images/checklist_hu75dc4db3b4dbea2007ec29f49d905629_56952_300x200_fit_box_3.png" width="300" height="149" alt="Componente Checklist de Tapestry" title="Componente Checklist de Tapestry"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/images/palette_huea8f72718c98b9e2dd4a8f14ad9bbaea_38513_2560x1440_fit_box_3.png" data-gallery="" title="Componente Palette de Tapestry"><img src="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/images/palette_huea8f72718c98b9e2dd4a8f14ad9bbaea_38513_300x200_fit_box_3.png" width="300" height="157" alt="Componente Palette de Tapestry" title="Componente Palette de Tapestry"  class="lozad "></a></p>
<figcaption>Componentes Checklist y Palette</figcaption>
</figure>
</div>
<p>En un artículo anterior comenté como <a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/">adaptar el componente <em>Select</em> y este <em>MultiSelect</em> para añadirle funcionalidades de la librería bootstrap-select</a> como cuadro de búsqueda, búsqueda por palabras clave, divisores, etc que consiste en añadir a las etiquetas HTML <em>select</em>, <em>optiongrp</em> y <em>option</em> ciertos atributos con sus correspondientes valores con una combinación de parámetros informales y personalización de la clase <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/SelectModel.html">SelectModel</a>. En el siguiente artículo comentaré como <a href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/">añadir botones selectores de opciones</a> además de los que incorpora <em>bootstrap-select</em> de Todos y Ninguno.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Select.html">Select</a></li>
<li><a href="https://silviomoreto.github.io/bootstrap-select/">Bootstrap Select</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/</id>
        <title>Componente select de Apache Tapestry con funcionalidades adicionales usando bootstrap-select</title>
        <updated>2016-10-25T12:30:00+02:00</updated>
        <published>2016-10-15T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="250" height="250" alt="Apache Tapestry" title="Apache Tapestry"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El selector de opciones implementado en los navegadores es muy simple pudiendo seleccionar un elemento de una lista, mostrar los elementos agrupados por categorías o seleccionar múltiples elementos pero mostrándolos en formato de una lista en vez de como un desplegable. <a href="https://silviomoreto.github.io/bootstrap-select/">bootstrap-select</a> es una librería que utiliza los estilos de <a href="https://getbootstrap.com/">Bootstrap</a> y que añade algunas funcionalidades más a los componentes de selección de opciones de los formularios de una página web.</p>
<p>Algunas de estas funcionalidades adicionales está explicadas más detalladamente en los <a href="https://silviomoreto.github.io/bootstrap-select/examples/">ejemplos</a>, que son:</p>
<ul>
<li>Cuadro de búsqueda</li>
<li>Búsqueda por palabras clave</li>
<li>Limitar el número de opciones seleccionables</li>
<li>Texto personalizado de opción no seleccionada</li>
<li>Texto personalizado de opción seleccionada (distinto al texto de la opción)</li>
<li>Texto de opciones seleccionadas personalizado</li>
<li>Estilos personalizados</li>
<li>Marca en la opción seleccionada</li>
<li>Flecha hacia el campo del formulario en el desplegable</li>
<li>Estilos  personalizados en opciones individuales</li>
<li>Anchuras personalizables</li>
<li>Iconos en las opciones</li>
<li>Contenido personalizado en las opciones</li>
<li>Subtextos</li>
<li>Tamaño de menú personalizado</li>
<li>Opciones de selección y deselección</li>
<li>Divisores</li>
<li>Cabecera</li>
<li>Posición desplegable</li>
<li>Deshabilitar <em>select</em>, opción o grupo de opciones</li>
</ul>
<p>Todas estas capacidades de personalización se consiguen bien añadiendo atributos a las etiquetas <abbr title="HyperText Markup Language">HTML</abbr> <em>select</em> o a las etiquetas <em>option</em> y <em>optgroup</em> con lo que usar el componente <em>bootstrap-select</em> consiste básicamente generar el marcado HTML adecuado. Con JavaScript se puede construir el componente donde podemos indicar las mismas <a href="https://silviomoreto.github.io/bootstrap-select/options/">opciones adicionales</a> que con los atributos <em>data-</em>, también tiene <a href="https://silviomoreto.github.io/bootstrap-select/methods/">métodos</a> para manipular su comportamiento de forma programática como por ejemplo recibir eventos cuando cambia la selección.</p>
<p>Usando <a href="https://tapestry.apache.org/">Apache Tapestry</a> con su concepto de parámetros informales añadiremos las atributos necesarios en la etiqueta <em>select</em> y con el modelo de datos proporcionado en <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/SelectModel.html">SelectModel</a>, <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/OptionGroupModel.html">OptionGroupModel</a> y <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/OptionModel.html">OptionModel</a> podremos proporcionar los atributos adicionales para las etiquetas de los <em>option</em> y <em>optgroup</em>. El modelo de datos de una etiqueta <em>select</em> es una lista de opciones y grupos de opciones, cada opción tiene una etiqueta que se le mostrará al usuario, si está habilitada o no, el valor que se enviará al servidor cuando esté seleccionada y un mapa de atributos a añadir en la etiqueta de la opción.</p>
<p>Este sería el código para crear una instancia de <em>SelectModel</em> para un componente <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Select.html">Select</a> de Tapestry para un ficticio selector de país. En el ejemplo en vez de usar un mapa vacío con <em>Collections.EMPTY_MAP</em> se podría sustituir por un mapa con atributos que se añadirían a la opción para usar alguna otra funcionalidad de <em>bootstrap-select</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.pages</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Index</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>  &#10;</span></span><span class="line"><span class="cl">  <span class="nd">@Property</span>&#10;</span></span><span class="line"><span class="cl">  <span class="nd">@Persist</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="n">PersistenceConstants</span><span class="o">.</span><span class="na">FLASH</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">  <span class="kd">private</span> <span class="n">String</span> <span class="n">pais</span><span class="o">;</span>	&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">  <span class="nd">@Environmental</span>&#10;</span></span><span class="line"><span class="cl">  <span class="kd">private</span> <span class="n">JavaScriptSupport</span> <span class="n">javascriptSupport</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">  <span class="kt">void</span> <span class="nf">afterRender</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javascriptSupport</span><span class="o">.</span><span class="na">require</span><span class="o">(</span><span class="s">&#34;app/index&#34;</span><span class="o">).</span><span class="na">invoke</span><span class="o">(</span><span class="s">&#34;init&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="kd">public</span> <span class="n">SelectModel</span> <span class="nf">getPaisesSelectModel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">AbstractSelectModel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionGroupModel</span><span class="o">&gt;</span> <span class="nf">getOptionGroups</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">espana</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;España&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;espana&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">francia</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Francia&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;francia&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">alemania</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Alemania&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;alemania&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">eeuu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;EEUU&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;eeuu&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">mexico</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Mexico&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;mexico&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">argentina</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Argentina&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;argentina&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">china</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;China&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;china&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">japon</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Japón&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;japon&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">india</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;India&#34;</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="s">&#34;india&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">europa</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;Europa&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">espana</span><span class="o">,</span> <span class="n">francia</span><span class="o">,</span> <span class="n">alemania</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">america</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;America&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">eeuu</span><span class="o">,</span> <span class="n">mexico</span><span class="o">,</span> <span class="n">argentina</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">asia</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;Asia&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">china</span><span class="o">,</span> <span class="n">japon</span><span class="o">,</span> <span class="n">india</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">europa</span><span class="o">,</span> <span class="n">america</span><span class="o">,</span> <span class="n">asia</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="nf">getOptions</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-group&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">t:select</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;pais&#34;</span> <span class="na">model</span><span class="o">=</span><span class="s">&#34;paisesSelectModel&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;selectpicker&#34;</span> <span class="na">data-size</span><span class="o">=</span><span class="s">&#34;6&#34;</span> <span class="na">data-none-selected-text</span><span class="o">=</span><span class="s">&#34;Nada seleccionado&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-group&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  ...&#10;</span></span><span class="line"><span class="cl">  País seleccionado: ${pais}&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.misc</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.OptionGroupModel</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.OptionModel</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppOptionGroupModel</span> <span class="kd">implements</span> <span class="n">OptionGroupModel</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">label</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">disabled</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AppOptionGroupModel</span><span class="o">(</span><span class="n">String</span> <span class="n">label</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">disabled</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">label</span> <span class="o">=</span> <span class="n">label</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">disabled</span> <span class="o">=</span> <span class="n">disabled</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">attributes</span> <span class="o">=</span> <span class="n">attributes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">options</span> <span class="o">=</span> <span class="n">options</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getLabel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">label</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isDisabled</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">disabled</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="nf">getAttributes</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">attributes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="nf">getOptions</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">options</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppOptionGroupModel.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.misc</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.OptionModel</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppOptionModel</span> <span class="kd">implements</span> <span class="n">OptionModel</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">label</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">disabled</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Object</span> <span class="n">value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AppOptionModel</span><span class="o">(</span><span class="n">String</span> <span class="n">label</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">disabled</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">label</span> <span class="o">=</span> <span class="n">label</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">disabled</span> <span class="o">=</span> <span class="n">disabled</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">attributes</span> <span class="o">=</span> <span class="n">attributes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getLabel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">label</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isDisabled</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">disabled</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="nf">getAttributes</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">attributes</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Object</span> <span class="nf">getValue</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppOptionModel.java</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/images/select-1_huea54e05f9d5753b922b38d6939c0cdbc_15559_2560x1440_fit_box_3.png" data-gallery="" title="Componente selector con bootstrap-select"><img src="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/images/select-1_huea54e05f9d5753b922b38d6939c0cdbc_15559_300x200_fit_box_3.png" width="300" height="186" alt="Componente selector con bootstrap-select" title="Componente selector con bootstrap-select"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/images/select-2_hu2f5e5c7660717b7773a03dbd729e0045_20170_2560x1440_fit_box_3.png" data-gallery=""><img src="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/images/select-2_hu2f5e5c7660717b7773a03dbd729e0045_20170_300x200_fit_box_3.png" width="300" height="186"  class="lozad "></a></p>
<figcaption>Componente selector con bootstrap-select</figcaption>
</figure>
</div>
<p>Al ser enviado el formulario que contiene el <em>select</em> el valor seleccionado los tendremos en la propiedad que hayamos indicado en el parámetro <em>value</em> del componente <em>Select</em>, este caso en la propiedad <em>pais</em> de la clase <em>Index</em> que representa la página.</p>
<p>En la clase <em>PlugInStack</em> hay que especificar los recursos CSS y de JavaScript necesarios para usar <em>bootstrap-select</em>, además de inicializar los selectores con JavaScript.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PlugInStack</span> <span class="kd">implements</span> <span class="n">JavaScriptStack</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Asset</span><span class="o">&gt;</span> <span class="nf">getJavaScriptLibraries</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Asset</span><span class="o">&gt;</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">assetSource</span><span class="o">.</span><span class="na">getClasspathAsset</span><span class="o">(</span><span class="s">&#34;META-INF/assets/tapestry5/bootstrap/js/dropdown.js&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">UrlAsset</span><span class="o">(</span><span class="s">&#34;https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.11.2/js/bootstrap-select.min.js&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">r</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">StylesheetLink</span><span class="o">&gt;</span> <span class="nf">getStylesheets</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">StylesheetLink</span><span class="o">&gt;</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">StylesheetLink</span><span class="o">(</span><span class="s">&#34;https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.11.2/css/bootstrap-select.min.css&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">StylesheetLink</span><span class="o">(</span><span class="n">assetSource</span><span class="o">.</span><span class="na">getContextAsset</span><span class="o">(</span><span class="s">&#34;css/app.css&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">r</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PlugInStack.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="nx">define</span><span class="p">(</span><span class="s2">&#34;app/index&#34;</span><span class="p">,</span> <span class="p">[</span><span class="s2">&#34;jquery&#34;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="kd">function</span> <span class="nx">init</span><span class="p">(</span><span class="nx">spec</span><span class="p">)</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.selectpicker&#39;</span><span class="p">).</span><span class="nx">selectpicker</span><span class="p">();</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">init</span><span class="o">:</span> <span class="nx">init</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">});</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>index.js</span>
    </div>
</div>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/">Componente select múltiple en Apache Tapestry</a> explico como crear un <em>select</em> múltiple que por defecto no incluye Tapestry pero el estándar HTML soporta y en algún caso nos será necesario y en <a href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/">añadir botones selectores de opciones</a> como incluir selectores adicionales además de Todos y Ninguno.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://silviomoreto.github.io/bootstrap-select/">Bootstrap Select</a></li>
<li><a href="https://silviomoreto.github.io/bootstrap-select/examples/">Bootstrap Select Examples</a></li>
<li><a href="https://silviomoreto.github.io/bootstrap-select/methods/">Bootstrap Select Methods</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/</id>
        <title>Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot</title>
        <updated>2016-10-08T00:30:00+02:00</updated>
        <published>2016-10-07T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>OAuth es un protocolo usado para permitir a una aplicación acceder a los recursos de un usuario sin que este proporcione a la aplicación cliente sus credenciales y manteniendo el control de revocar los permisos concedidos. Es ampliamente usado por los servicios de redes sociales de las empresas más conocidas, también lo podemos usar en nuestras aplicaciones. En el ejemplo usaré Keycloak y una aplicación Java con Spring Boot, Apache Shiro y Apache Tapestry.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/keycloak.png" width="200" height="45" alt="Keycloak" title="Keycloak"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El protocolo <a href="https://oauth.net/">OAuth</a> permite a una aplicación cliente acceder a los recursos de un usuario almacenados en otra aplicación sin que el usuario proporcione a la aplicación cliente sus credenciales, además el usuario tiene la capacidad de revocar en caulquier momento los permisos concedidos a la aplicación cliente. El protocolo OAuth es ampliamente usado por empresas como <a href="https://www.google.es/">Google</a>, <a href="https://www.facebook.com/">Facebook</a>, <a href="https://twitter.com/">Twitter</a> en sus aplicaciones y servicios. También aplicando una arquitectura de microservicios, al dividir una aplicación en varios módulos o simplemente varias aplicaciones independientes pero que son usadas al mismo tiempo por el mismo usuario para evitar que el usuario se autentique en cada aplicación individualmente y que cada aplicación implemente la funcionalidad de autenticación podemos centralizarla usando OAuth a modo de autenticación única o <a href="https://es.wikipedia.org/wiki/Single_Sign-On"><abbr title="Single Sign-On">SSO</abbr></a>. Usando <a href="https://www.keycloak.org/">Keycloak</a> como servidor de OAuth podemos integrarlo en una aplicación Java que use <a href="https://shiro.apache.org/">Apache Shiro</a> para la autorización, <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> para iniciar la aplicación y <a href="https://tapestry.apache.org/">Apache Tapestry</a> como <em>framework</em> web.</p>
<p>En el protocolo OAuth se diferencia las aplicaciones cliente que son capaces de mantener seguras sus credenciales como es el caso de una aplicación web ejecutada en el servidor o las aplicaciones que no son capaces de mantener sus credenciales seguras como es el caso de una aplicación cliente ejecutada en el navegador o en algunos casos nativa en el móvil. Independientemente de la aplicación cliente o de los <a href="https://tools.ietf.org/html/rfc6749#page-8">varios flujos de autenticación</a> el acceso a los recursos del usuario se hace mediante la obtención de un <em>token</em> que es una cadena de caracteres opaca de cierta longitud pero que descifrada contiene información del usuario autenticado también está firmada digitalmente por el servidor de OAuth para evitar alteraciones. El protocolo define varios flujos para obtener un <em>token</em>, obtenido el <em>token</em> con cualquiera de ellos el acceso a los recursos es indiferente del flujo que haya sido empleado.</p>
<p>En una aplicación segura con el <em>grant</em> de tipo <em>authorization code</em> los pasos que se siguen son los siguientes:</p>
<ul>
<li>El servidor redirige al usuario al servidor de OAuth cuando intenta acceder a una URL protegida.</li>
<li>El usuario introduce sus credenciales en una página de inicio de sesión proporcionada por el servidor OAuth, normalmente un usuario y contraseña.</li>
<li>El servidor OAuth envía al navegador una redirección hacia la aplicación proporcionado un código de autorización en la URL que puede intercambiarse por un <em>token</em>.</li>
<li>El navegador con la redirección envía el código de autorización al servidor, el servidor obtiene de la URL, obtiene el código de autorización y lo usa para intercambiarlo por un <em>token</em> del servidor OAuth proporcionado además las credenciales del cliente.</li>
<li>Obtenido el <em>token</em> con los permisos adecuados la aplicación ya puede permitir acceso o acceder a los recursos.</li>
</ul>
<p>Para obtener el <em>token</em> el servidor mantiene seguras sus credenciales como cliente OAuth. Nótese también que con el <em>token</em> el servidor (cliente OAuth) no necesita comunicarse con el servidor OAuth para validar el <em>token</em> ya que está firmado digitalmente, cifrado y tiene concedido un periodo de validez.</p>
<p>Un cliente se considera inseguro si la aplicación cliente no puede mantener seguras sus credenciales, si las credenciales de la aplicación están en el navegador o en una aplicación nativa del móvil se considera que las credenciales podrían obtenerse. En una aplicación web en un servidor las credenciales de la aplicación se mantienen seguras en el servidor.</p>
<p>El siguiente ejemplo muestra como autenticar con Keycloak como proveedor de OAuth una aplicación Java que usa Shiro para la autorización, Spring Boot y el <em>framework</em> web Apache Tapestry. OAuth y Keycloak también puede usarse para <a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">securizar con OAuth un servicio REST con JAX-RS</a> y crear un <a href="https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth2-en-java/">cliente Java para acceder al servicio REST securizado con OAuth</a> empleando el flujo <em>client credentials</em>. Lo mostrado en este artículo solo es una pequeña parte de las opciones y posibilidades que ofrece Keycloak, en las capturas de pantalla mostradas hay muchas pestañas, opciones y campos con funcionalidades adicionales.</p>
<p>Iniciar el servidor OAuth de Keycloak usando <a href="https://www.docker.com/">Docker</a> es muy sencillo con el siguiente comando y archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a>, en el primer acceso se nos solicitará una clave y contraseña de administración:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">keycloak</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">jboss/keycloak</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="m">9080</span><span class="p">:</span><span class="m">8080</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">KEYCLOAK_USER=admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">KEYCLOAK_PASSWORD=admin</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-compose up&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.sh</span>
    </div>
</div>
<p>Para el ejemplo crearé un nuevo <em>realm</em> que contendrá los usuarios y en el que registraremos la aplicación cliente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-realm_hu1d1fec568cafaf0c4a23e9f295b30ecc_70773_2560x1440_fit_box_3.png" data-gallery="" title="Keycloak realm"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-realm_hu1d1fec568cafaf0c4a23e9f295b30ecc_70773_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak realm" title="Keycloak realm"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-client_hud33412f067151d1d2f67a878d1fb164c_79720_2560x1440_fit_box_3.png" data-gallery="" title="Keycloak client"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-client_hud33412f067151d1d2f67a878d1fb164c_79720_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak client" title="Keycloak client"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-client-roles_hud33412f067151d1d2f67a878d1fb164c_77167_2560x1440_fit_box_3.png" data-gallery="" title="Keycloak client roles"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-client-roles_hud33412f067151d1d2f67a878d1fb164c_77167_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak client roles" title="Keycloak client roles"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-roles_huc42e6e2008d8cf33b44a24ca8766c23a_73652_2560x1440_fit_box_3.png" data-gallery="" title="Keycloak roles"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-roles_huc42e6e2008d8cf33b44a24ca8766c23a_73652_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak roles" title="Keycloak roles"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-users_hu5d853bad32b06a2ad31bca8dfab4cf2c_65165_2560x1440_fit_box_3.png" data-gallery="" title="Keycloak users"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-users_hu5d853bad32b06a2ad31bca8dfab4cf2c_65165_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak users" title="Keycloak users"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-users-role-mappings_hu0a5c44eb141b4ccfc2088e9012d1f722_85070_2560x1440_fit_box_3.png" data-gallery="" title="Keycloak users role mappings"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-users-role-mappings_hu0a5c44eb141b4ccfc2088e9012d1f722_85070_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak users role mappings" title="Keycloak users role mappings"  class="lozad "></a></p>
</figure>
</div>
<p>Usando uno de los <a href="https://keycloak.gitbooks.io/securing-client-applications-guide/content/v/2.2/topics/overview/supported-platforms.html">adaptadores proporcionados por Keycloak</a> para la integración en servidores y aplicaciones su uso no es complicado, en este caso usaré el adaptador para Spring Boot. Usándolo básicamente deberemos proporcionar en la configuración las credenciales de la aplicación cliente que hemos registrado previamente en Keycloak. Además indicaremos que URLs de la aplicación requiere autenticación y que roles han de poseer los usuarios autenticados. Al acceder a estas URLs el adaptador de Keycloak redirigirá al servidor para que el usuario se autentique, una vez autenticado se redirigirá a la aplicación de nuevo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8443</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ssl</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-store</span><span class="p">:</span><span class="w"> </span><span class="l">classpath:keystore.jks</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-store-password</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-password</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">management</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8090</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">context-path</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;/management&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">endpoints</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">metrics</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">sensitive</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">shutdown</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">keycloak</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">realm</span><span class="p">:</span><span class="w"> </span><span class="l">keycloak</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">realmKey</span><span class="p">:</span><span class="w"> </span><span class="l">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArx9/6b9koplCBta5vy0/GEYVUYaYSUcHIiTyE2utfSUlfL8Px//0haNgk5FFfeTuSa/Ha2mO+kP5qTBN5Muov+1ytONrkbGOSCkOH9rVRjsZfpdW3Z+wYdZ8tAiEzUcjbCYxPszgT00Pxr/NJ6nLJoPT5s+8osl4c2j0JyR2qYV9e7loeJs2ciJe/ZzHNptz4JrExhzxTJGjo6ZNuBtIfyoK6EFA4VKzj2152FrQSYIafOmTBM/42cyd2kyxx04TogCZYzj7Pe78aT6uxPoGsk8PK1YkAtINROJVqJZsLTsso2kB9R8UkjF1MEYHPrdoXVveeLv/1Ci6uWNbgDMCywIDAQAB</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">auth-server-url</span><span class="p">:</span><span class="w"> </span><span class="l">http://localhost:9080/auth</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ssl-required</span><span class="p">:</span><span class="w"> </span><span class="l">external</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">resource</span><span class="p">:</span><span class="w"> </span><span class="l">web</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">credentials.secret</span><span class="p">:</span><span class="w"> </span><span class="l">6db55aa0-5466-4432-aca7-97c2ab2246ee</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">use-resource-role-mappings</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">securityConstraints[0]</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">securityCollections[0]</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">user</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">authRoles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">user</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">patterns</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/user</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">securityConstraints[1]</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">securityCollections[0]</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">authRoles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">patterns</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/admin</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application.yml</span>
    </div>
</div>
<p>Autenticado el usuario podemos obtener la instancia de <a href="https://www.keycloak.org/docs/javadocs/org/keycloak/representations/AccessToken.html">AccessToken</a> que representa el <em>token</em> de OAuth, para la autorización podemos usar Apache Shiro y para ellos deberemos implementar un Realm de tipo <a href="https://shiro.apache.org/static/1.3.2/apidocs/org/apache/shiro/realm/AuthorizingRealm.html">AuthorizingRealm</a>. Tiene dos métodos que deberemos implementar <a href="https://shiro.apache.org/static/1.3.2/apidocs/org/apache/shiro/realm/AuthenticatingRealm.html#doGetAuthenticationInfo-org.apache.shiro.authc.AuthenticationToken-">doGetAuthenticationInfo</a> y <a href="https://shiro.apache.org/static/1.3.2/apidocs/org/apache/shiro/realm/AuthorizingRealm.html#doGetAuthorizationInfo-org.apache.shiro.subject.PrincipalCollection-">doGetAuthorizationInfo</a>, el primero lo usaremos para autenticar al usuario que en este caso teniendo el <em>AccessToken</em> ya estará autenticado con Keycloak y el segundo método nos permitirá obtener los roles y permisos asociados al usuario que podríamos obtenerlos de una base de datos relacional, en el ejemplo los roles también se obtienen del token. Con un filtro realizaremos el inicio de sesión de forma programática del usuario representado por el <em>AccessToken</em> cuando esté presente en la petición.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.services</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.SecurityUtils</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.HttpServletRequestFilter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.HttpServletRequestHandler</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.keycloak.KeycloakPrincipal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.keycloak.representations.AccessToken</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.tynamo.security.federatedaccounts.oauth.tokens.OauthAccessToken</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">KeycloakFilter</span> <span class="kd">implements</span> <span class="n">HttpServletRequestFilter</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">service</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">HttpServletRequestHandler</span> <span class="n">handler</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AccessToken</span> <span class="n">accessToken</span> <span class="o">=</span> <span class="n">getAccessToken</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">accessToken</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SecurityUtils</span><span class="o">.</span><span class="na">getSubject</span><span class="o">().</span><span class="na">login</span><span class="o">(</span><span class="k">new</span> <span class="n">OauthAccessToken</span><span class="o">(</span><span class="n">accessToken</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">.</span><span class="na">getExpiration</span><span class="o">()));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">handler</span><span class="o">.</span><span class="na">service</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">AccessToken</span> <span class="nf">getAccessToken</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">request</span><span class="o">.</span><span class="na">getUserPrincipal</span><span class="o">()</span> <span class="k">instanceof</span> <span class="n">KeycloakPrincipal</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">KeycloakPrincipal</span> <span class="n">principal</span> <span class="o">=</span> <span class="o">(</span><span class="n">KeycloakPrincipal</span><span class="o">)</span> <span class="n">request</span><span class="o">.</span><span class="na">getUserPrincipal</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">principal</span><span class="o">.</span><span class="na">getKeycloakSecurityContext</span><span class="o">().</span><span class="na">getToken</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>KeycloakFilter.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.services</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.authc.AuthenticationException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.authc.AuthenticationInfo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.authc.AuthenticationToken</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.authc.SimpleAuthenticationInfo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.authz.AuthorizationInfo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.authz.SimpleAuthorizationInfo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.cache.MemoryConstrainedCacheManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.realm.AuthorizingRealm</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.subject.PrincipalCollection</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.keycloak.representations.AccessToken</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.tynamo.security.federatedaccounts.oauth.tokens.OauthAccessToken</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppRealm</span> <span class="kd">extends</span> <span class="n">AuthorizingRealm</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AppRealm</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">super</span><span class="o">(</span><span class="k">new</span> <span class="n">MemoryConstrainedCacheManager</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">setAuthenticationTokenClass</span><span class="o">(</span><span class="n">OauthAccessToken</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="n">AuthenticationInfo</span> <span class="nf">doGetAuthenticationInfo</span><span class="o">(</span><span class="n">AuthenticationToken</span> <span class="n">authenticationToken</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">AuthenticationException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AccessToken</span> <span class="n">accessToken</span> <span class="o">=</span> <span class="o">(</span><span class="n">AccessToken</span><span class="o">)</span> <span class="n">authenticationToken</span><span class="o">.</span><span class="na">getPrincipal</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">SimpleAuthenticationInfo</span><span class="o">(</span><span class="n">accessToken</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="n">AuthorizationInfo</span> <span class="nf">doGetAuthorizationInfo</span><span class="o">(</span><span class="n">PrincipalCollection</span> <span class="n">principalCollection</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AccessToken</span> <span class="n">accessToken</span> <span class="o">=</span> <span class="o">(</span><span class="n">AccessToken</span><span class="o">)</span> <span class="n">principalCollection</span><span class="o">.</span><span class="na">getPrimaryPrincipal</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">SimpleAuthorizationInfo</span><span class="o">(</span><span class="n">accessToken</span><span class="o">.</span><span class="na">getRealmAccess</span><span class="o">().</span><span class="na">getRoles</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppRealm.java</span>
    </div>
</div>
<p>Con Apache Tapestry el filtro se registra en el módulo de la aplicación y con Shiro podemos realizar la autorización necesaria en las páginas u acciones de la aplicación usando anotaciones. En este caso una página pública que no requiere estar autenticado, una página accesible por un usuario autenticado y con rol <em>user</em> y finalmente una página de administración que requiere rol <em>admin</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.pages</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Index</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.pages</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.authz.annotation.RequiresUser</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RequiresUser</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>User.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.pages</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.shiro.authz.annotation.RequiresRoles</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RequiresRoles</span><span class="o">(</span><span class="s">&#34;admin&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Admin</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Admin.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>OAuth, Keycloak, Apache Shiro, Apache Tapestry y Spring Boot<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Open+Sans:400,700&amp;amp;subset=latin,latin-ext&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Cantarell:400,700&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;jumbotron&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/keycloak.png&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/apache-tapestry.png&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:security.guest</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola invitado!&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:security.guest</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:security.user</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola usuario!&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:security.user</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:security.hasRole</span> <span class="na">role</span><span class="o">=</span><span class="s">&#34;admin&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola administrador!&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:security.hasRole</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;user&#34;</span><span class="p">&gt;</span>Página de usuario<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>, <span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;admin&#34;</span><span class="p">&gt;</span>Página de administrador<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Keycloak<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Open+Sans:400,700&amp;amp;subset=latin,latin-ext&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Cantarell:400,700&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;jumbotron&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/keycloak.png&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/apache-tapestry.png&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola usuario!, <span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;index&#34;</span><span class="p">&gt;</span>página de inicio<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>User.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Keycloak<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Open+Sans:400,700&amp;amp;subset=latin,latin-ext&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Cantarell:400,700&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;jumbotron&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/keycloak.png&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/apache-tapestry.png&#34;</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola administrador!, <span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;index&#34;</span><span class="p">&gt;</span>página de inicio<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Admin.tml</span>
    </div>
</div>
<p>Como la página de inicio no requiere autenticación es accesible por cualquier usuario. Al navegar a la página de usuario o administrador se iniciará el proceso de autenticación primeramente redirigiéndonos al servidor Keycloak para que introduzcamos las credenciales.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-index_hu415ca9630e7399f9007d16ba267384ff_60394_2560x1440_fit_box_3.png" data-gallery="" title="Index"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-index_hu415ca9630e7399f9007d16ba267384ff_60394_300x200_fit_box_3.png" width="300" height="185" alt="Index" title="Index"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-keycloak-login_hud91081120a1e60e7ab23e636a0928ce5_81321_2560x1440_fit_box_3.png" data-gallery="" title="Login"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-keycloak-login_hud91081120a1e60e7ab23e636a0928ce5_81321_300x200_fit_box_3.png" width="300" height="185" alt="Login" title="Login"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-user_hu0e1ae465e9f38667a2f2180922ea5f7b_59305_2560x1440_fit_box_3.png" data-gallery="" title="User"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-user_hu0e1ae465e9f38667a2f2180922ea5f7b_59305_300x200_fit_box_3.png" width="300" height="169" alt="User" title="User"  class="lozad "></a></p>
</figure>
</div>
<p>Si intentamos acceder a la página de usuario o administrador sin estar autenticados se nos mostrará la página de error 403 y al acceder a la página de administración con un usuario sin rol <em>admin</em> se nos mostrará la página de error 401.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-error403_huf74fad06d3e886ca07bb6b96686692df_57636_2560x1440_fit_box_3.png" data-gallery="" title="Error 403"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-error403_huf74fad06d3e886ca07bb6b96686692df_57636_300x200_fit_box_3.png" width="300" height="169" alt="Error 403" title="Error 403"  class="lozad "></a></p>
</figure>
</div>
<p>Un buen libro sobre OAuth que he leído es <a href="https://amzn.to/2cUkF9d">Mastering OAuth 2.0</a> que explica detalladamente el protocolo OAuth junto con el resto de formas de obtener un <em>token</em> además del mostrado en este artículo usando las credenciales del cliente.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1784395404&amp;linkId=726dc0d3e4914bc672e6b127da045db2&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<p>Este artículo solo es introductorio a las posibilidades de OAuth y Keycloak, entre otras posibilidades que ofrece Keycloak creo que está permitir registrarse a los usuarios o personalizar los estilos y páginas de autenticación.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Keycloak">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle run</code></p>
</div>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://oauth.net/getting-started/">OAuth Getting Started</a></li>
<li><a href="https://oauth.net/2/">OAuth Documentation</a></li>
<li><a href="https://www.youtube.com/watch?v=z-sUzl9eG6M">Keycloak Basics Tutorial Part 1</a></li>
<li><a href="https://www.youtube.com/watch?v=CXDrGJoCVhc">Keycloak Basics Tutorial Part 2</a></li>
<li><a href="https://www.youtube.com/watch?v=B-qIkB9lsLs">Keycloak Demo Part 1</a></li>
<li><a href="https://www.youtube.com/watch?v=QgWgUg5F_JQ">Keycloak Demo Part 2</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>