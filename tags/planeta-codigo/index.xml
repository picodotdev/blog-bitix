<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2022-05-05T19:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/</id>
        <title>Desempaquetado y análisis de teclado mecánico compacto e inalámbrico KEMOVE DK61</title>
        <updated>2022-05-05T19:00:00+02:00</updated>
        <published>2022-05-05T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El KEMOVE DK61 es un teclado mecánico que mejora en varios aspectos y aúna varias de las mejores cosas que tienen los DIERYA DK61E y DK63 sin incrementar demasiado su precio con lo que si no se quiere ajustar el presupuesto al máximo compensa por las características mejoradas. El KEMOVE DK61 es muy compacto, de formato 60% con con la ventaja de tener un tamaño reducido y el inconveniente de no tener algunas teclas. Similar al DIERYA DK61E pero que incorpora la conexión inalámbrica del DK63 e incrementa su autonomía con una batería de mayor capacidad y conservando la iluminación RGB. En otras características como <em>switches</em> y <em>keycaps</em> está a la altura de un buen teclado de gama alta pero que en este caso el KEMOVE a un precio por debajo de los 100€.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/kemove.jpg" width="200" height="248" alt="KEMOVE" title="KEMOVE"  class=""></p>
</div>
<p>Hay una buena cantidad de teclados mecánicos entre los que elegir en base a las necesidades propias y las características de los teclados entre las que está el formato o número de teclas que tienen y por supuesto su precio entre otras. Aunque hay muchos teclados mecánicos muchos no están destinados de forma específica a los usuarios que los utilizan con disposición de teclas en español, otros cuantos ni siquiera se venden en tiendas españolas y no es tan fácil encontrar <em>keycaps</em> con la disposición española que tenga por ejemplo la letra <em>ñ</em> y la tecla de tilde. Sin embargo, hay algunos disponibles y dada la versatilidad y personalización de los teclados mecánicos se pueden adaptar a las necesidades propias con algunos pasos adicionales.</p>
<p>La marca <a href="https://kmovetech.com/">KEMOVE</a> me envía un nuevo teclado mecánico el <a href="https://www.kemove.com/product/dk61-snowfox-shadow/?wpam_id=17">KEMOVE DK61</a> para realizar su desempaquetado y análisis en este artículo que compararé con los anteriores DIERYA me envió con anterioridad y publique en sus respectivos artículos. KEMOVE es una marca de mayor calidad que se nota en varios aspectos de los teclados pero sin tener un precio significativamente mayor.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="características-técnicas-del-teclado-kemove-dk61">Características técnicas del teclado KEMOVE DK61</h3>
<p>El <a href="https://www.kemove.com/product/dk61-snowfox-shadow/?wpam_id=17">KEMOVE DK61</a> es un teclado mecánico compacto que tiene una combinación de características de los <a href="https://www.dieryatech.com/item/dk61e-wired-mechanical-keyboard">DIERYA DK61E</a> y el <a href="https://www.dieryatech.com/item/dk63-wireless-wired-mechanical-keyboard">DIERYA DK63</a>. La marca KEMOVE se diferencia de la marca DIERYA en la calidad de los teclados y materiales, también sus teclados tiene un precio ligeramente mayor pero sin ser excesivamente mucho más y que salvo que se quiera ajustar el presupuesto la diferencia de precio compensa en las las mejoras proporcionadas. Loas DIERYA aún siendo unos buenos teclados con un precio muy ajustado para lo que ofrecen tenían algunos puntos a mejorar, algunos de ellos han sido resueltos en el KEMOVE DK61.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/01/desempaquetado-y-analisis-de-teclado-mecanico-compacto-dierya-dk61e/">Desempaquetado y análisis de teclado mecánico compacto DIERYA DK61E</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/03/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-dierya-dk63/">Desempaquetado y análisis de teclado mecánico compacto e inalámbrico DIERYA DK63</a></li>
</ul>
<p>En cuanto a formato el KEMOVE DK61 es igual que el DIERYA DK61E, un teclado en formato 60% compacto de 61 teclas que prescinde de las teclas del teclado numérico, las teclas de función, las teclas de flechas y las del bloque superior como insertar, suprimir, inicio, fin, retroceder página, avanzar página, las teclas de función y algunas más.</p>
<p>Tener menos teclas tiene algunas ventajas, principalmente que el teclado ocupa menos espacio en la mesa y el ratón no queda tan lejos que usando un teclado completo con teclado numérico, otra ventaja es que es más fácilmente transportable. La desventaja es que al tener menos teclas algunas han de usarse como una combinación de teclas que si su uso es muy habitual resulta incómodo hasta acostumbrarse.</p>
<p>El KEMOVE DK61 se ofrece en varios tipos de <em>switches</em>, en <a href="https://amzn.to/2flFhHA">Amazon</a> están las versiones con los <em>switches</em> <a href="https://www.gateron.co">Gateron</a> en diferentes colores y tanto lineales, táctiles y sonoros o <em>clicky</em> pero <a href="https://www.kemove.com/product/dk61-snowfox-shadow/?wpam_id=17">en la página de KEMOVE</a> también se encuentra <em>switches</em> de las marcas <a href="https://www.cherrymx.de/en">Cherry MX</a> y <a href="https://www.kailhswitch.com">Kailh</a>. En cualquier caso dado que el teclado es <em>hot swappable</em> estos se pueden intercambiar por otros que sean compatibles, el requerimiento es que sean de tres <em>pines</em>, compatibles con RGB si no se desea perder esta funcionalidad y de tipo <em>cherry mx</em> para reutilizar los mismos <em>keycaps</em>.</p>
<p>El ejemplar que tengo tiene <em>switches</em> Gateron Brown del tipo táctil, la diferencia entre este tipo de táctil y los lineales es muy poca y apenas es perceptible en el uso normal. Los <em>switches</em> lineales suelen ser preferidos por los que usan el teclado como jugadores y los táctiles suelen ser preferidos por aquellos que le dan un uso más a escribir texto, aunque cualquiera de los dos tipos sirven para ambas tareas siendo un preferencia personal que tipo usar. Como los <em>switches</em> son intercambiables si en algún momento se prefieren otros tanto de otro tipo como de otra marca compatible se pueden cambiar. Otra ventaja de que los <em>switches</em> sean intercambiables es que si alguno es defectuoso o se estropea con el uso se puede reemplazar por otro lo que prolonga la vida del teclado y no hay que desecharlo simplemente porque una tecla deja de funcionar correctamente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/gateron-switches_hudbd33c7fe8e728227163c673dc6cc334_129788_2560x1440_fit_q90_box.jpg" data-gallery="" title="Tipos de switches Gateron"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/gateron-switches_hudbd33c7fe8e728227163c673dc6cc334_129788_650x450_fit_q90_box.jpg" width="650" height="367" alt="Tipos de switches Gateron" title="Tipos de switches Gateron"  class="lozad "></a></p>
<figcaption>Tipos de switches Gateron</figcaption>
</figure>
</div>
<p>El teclado tiene iluminación RGB en diferentes colores, efectos e intensidad que más allá del aspecto estético de tener colores resulta útil en caso de bajas condiciones de luz para ver las teclas. Además la iluminación RGB se utiliza para proporcionar algunas indicaciones al pulsar teclas como por ejemplo conocer de forma aproximada la carga de la batería.</p>
<p>El teclado tiene la posibilidad de funcionar tanto con cable como de forma inalámbrica mediante Bluetooth pudiendo configurar hasta tres dispositivos de forma simultánea. La conexión Bluetooth es fácil de configurar poniendo el teclado en modo configuración momento en el que es detectado por el dispositivo en el que se quiere usar y se completa la configuración. Utiliza una batería de 3000 mAh que le da para varias semanas de uso hasta la siguiente carga incluso con un uso diario de varias horas. La conexión es fiable y al tener batería no hace falta usar pilas ni reemplazarlas cada cierto tiempo.</p>
<p>El cable permite al teclado funcionar mediante cable que al ser Bluetooth en algunos casos es necesario como por ejemplo al acceder a la BIOS, el cable también sirve para cargar la batería del teclado. Es USB de tipo C para la conexión al teclado y de tipo A para la conexión al ordenador, destacando que es un cable de calidad como era en los DIERYA siendo mallado y reversible en ambos extremos lo que facilita su conexión en cualquier orientación del cable.</p>
<p>Las características completas del teclado son:</p>
<ul>
<li>Cuerpo del teclado de plástico robusto y buena construcción, regulable en altura en una posición con patas extensibles.</li>
<li>Teclado 60%, 61 teclas.</li>
<li>Sin teclas de desplazamiento.</li>
<li>Disposición ANSI con teclas en inglés.</li>
<li><em>Switches</em> Gateron, Cherry MX o Kailh, intercambiables o <em>hot swapabble</em>.</li>
<li><em>Keycaps</em> PBT de doble disparo para la leyenda principal, <em>pad printing</em> para la serigrafía de función que está serigrafiada en el lateral de las teclas.</li>
<li><em>Switches</em> y <em>keycaps</em> incluídos y premontados.</li>
<li>Iluminación RGB con varios efectos de luz e intensidad.</li>
<li>Cable mallado desmontable USB Tipo C y Tipo A ambos reversibles.</li>
<li>Conexión dual, con cable y/o Bluetooth 5.1 hasta 3 dispositivos, con batería recargable de 3000 mAh.</li>
<li>Indicativo del nivel de carga de batería con una combinación de teclas.</li>
<li>Incluye cubre teclado de plástico para evitar polvo.</li>
</ul>
<p>Para conocer más detalles sobre los teclados mecánicos y en qué se diferencia de los teclados de membrana con una guía de introducción escribí el siguiente artículo comentando sus principales características, así como varios desempaquetados y análisis de teclados mecánicos con la que comparar con otros modelos más en detalle. Escribí una <a href="https://picodotdev.github.io/blog-bitix/2020/12/guia-basica-sobre-teclados-mecanicos-para-ordenador/">introducción a los conceptos básicos de los teclados mecánicos</a> puedes visitar la guía de ese artículo y si quieres compararlo con un tecla de otra marca y tipo para saber cual te conviene según tus necesidades o preferencias escribí un <a href="https://picodotdev.github.io/blog-bitix/2021/11/desempaquetado-de-teclado-mecanico-glorious-gmmk-tkl/">Desempaquetado de teclado mecánico Glorious GMMK TKL</a> junto con otros buenos modelos de teclados a considerar.</p>
<h4 id="diferencias-con-los-teclados-dierya-dk63-y-dk61e">Diferencias con los teclados DIERYA DK63 y DK61E</h4>
<p>Los modelos DIERYA DK63, DK61E y el KEMOVE DK61 son modelos muy parecidos entre ellos, pero examinando los detalles del KEMOVE DK61 se nota que es un teclado con algunas características que aúnan lo mejor de todos. Empezando porque el KEMOVE DK61 es inalámbrico al igual que el DK63 al contrario que el DK61E que solo era cableado, pero tiene una gran batería de 3000 mAh mayor que la del DK63 que era de 1900 mAh.</p>
<p>Tiene patas para regular la altura que ninguno de los DIERYA ofrecía. El switch para activar la conexión inalámbrica está en el lateral del teclado más accesible que en la parte inferior del DK63 y con un <em>switch</em> con un acabado de mejor calidad. La serigrafía de las funciones en vez de en la parte superior de la tecla está en un lateral, esto tiene la ventaja de que al ser de tipo <em>pad printing</em> evita que se desgaste y por otro lado hace la tecla más legible al tener menos símbolos en la parte superior para funciones que se usan menos habitualmente. Aún estando en un lateral la serigrafía es perfectamente legible desde la posición de uso. El <em>backplate</em> es de color blanco que resalta la iluminación RGB y finalmente se incluye un muy útil cubre teclado de plástico para evitar polvo cuando no se usa.</p>
<h4 id="consideraciones-a-tener-en-cuenta">Consideraciones a tener en cuenta</h4>
<p>Al ser un teclado compacto hay que considerar que algunas teclas han de usarse como una combinación, hasta acostumbrarse puede resultar incómodo. También hay que tener en cuenta que es un teclado con disposición ANSI que es diferente de la habitual en España que es ISO, tiene algunas diferencias en los tamaños de algunas teclas como la tecla <em>Return</em>. En caso de querer <em>keycaps</em> con serigrafía de teclado en Español hay que comprarlas aparte, en <a href="https://es.aliexpress.com/item/4000130061265.html">AliExpress hay unos <em>keycaps</em> con disposición en Español</a> que usa mucha gente.</p>
<p>La conexión inalámbrica es Bluetooth con lo que requiere de que el dispositivo donde se tenga Bluetooth y esté la conexión disponible, por esto al acceder a la BIOS del equipo es probable que requiera utilizar la conexión por cable que tampoco es demasiado inconveniente.</p>
<h4 id="dónde-comprar">Dónde comprar</h4>
<p>El <a href="https://www.kemove.com/product/dk61-snowfox-shadow/?wpam_id=17">teclado mecánico KEMOVE DK61 se puede comprar directamente en la página oficial</a> al mejor precio con la ventaja de poder hacer el pago mediante <a href="https://www.paypal.com/">PayPal</a> así como otros accesorios como una funda de transporte para el teclado, <em>keycaps</em> y <em>switches</em>. Si el modelo elegido está <a href="https://amzn.to/3kFXSgK">disponible en la página de Amazon</a> del propio país lo envían directamente de Amazon en vez de China a un precio de unos 90 € y algo más barato en los momentos en tiene aplicado un descuento en el precio.</p>
<p>Aparte de este modelo la marca tiene disponibles otros modelos de teclado compactos como el <a href="https://amzn.to/3fXBlJR">DIERYA DK61E</a>, el <a href="https://amzn.to/3KLHt6d">DIERYA DK63</a> y el <a href="https://amzn.to/3ttgSo6">DIERYA DK61 Pro</a>, ambos DK61 son iguales pero el Pro tiene con conexión inalámbrica también por Bluetooth.</p>
<p>Si después de leer el artículo decides comprar uno de estos teclados y en el momento que vas a hacerlo no tiene algún descuento envíame un correo electrónico que puedes encontrar en la página <a href="https://picodotdev.github.io/blog-bitix/pages/acerca-de/">Acerca de</a> y le pido a la marca un cupón descuento para que puedas aplicarlo en el momento de realizar la compra.</p>
<ul>
<li><a href="https://www.kemove.com/product/dk61-snowfox-shadow/?wpam_id=17">Página del fabricante del teclado KEMOVE DK61</a></li>
<li><a href="https://www.dieryatech.com/item/dk63-wireless-wired-mechanical-keyboard">Página del fabricante del teclado DIERYA DK63</a></li>
<li><a href="https://www.dieryatech.com/item/dk61e-wired-mechanical-keyboard">Página del fabricante del teclado DIERYA DK61E</a></li>
<li><a href="https://www.dieryatech.com/item/dk61-pro-wireless-wired-mechanical-keyboard">Página del fabricante del teclado DIERYA DK61 Pro</a></li>
<li><a href="https://www.kemovebbs.com/usermanuel/DIERYA63-new-version-before-z-is-5-in-sn.pdf">Manual de usuario del teclado DIERYA DK63</a></li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08372Y4KT&amp;linkId=cdd8116f96dca12b3093345c1e65180c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07W5PD6VS&amp;linkId=06ca1e820d80f720658f8c74322b8fce" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B082PDM3FG&amp;linkId=7387f80c99b51e39bf5d5479abb14581" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B091TQYTT3&amp;linkId=82d726468e9ed79d257999b6c437c1c6" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="desempaquetado-del-teclado-mecánico-kemove-dk61">Desempaquetado del teclado mecánico KEMOVE DK61</h3>
<h4 id="la-caja">La caja</h4>
<p>La caja del KEMOVE muestra el logotipo de la marca en la parte delantera y y se compone de una ventana que con el protector de plástico del teclado deja ver una parte del él, tiene una serigrafía con relieve únicamente por motivos estéticos pero que indica que hasta la caja está cuidada.</p>
<p>En la parte trasera se muestran dos ilustraciones y las características básicas del teclado. En uno de los laterales otra forma de logotipo de la marca y las características del ejemplar del teclado incluyendo el modelo, color y <em>switches</em>. La caja está precintada por un plástico que impide que entre suciedad o líquidos durante el transporte y esté en perfectas condiciones hasta el momento de abrirla.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-1_hu5608e2f9348d8054816e9c9e0f1e8e64_256098_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-1_hu5608e2f9348d8054816e9c9e0f1e8e64_256098_200x150_fit_q90_box.jpg" width="200" height="71" alt="Caja del teclado KEMOVE DK61" title="Caja del teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-2_hu27d08692d9ac5cf25c3e27543f580bc4_457260_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-2_hu27d08692d9ac5cf25c3e27543f580bc4_457260_200x150_fit_q90_box.jpg" width="200" height="73" alt="Caja del teclado KEMOVE DK61" title="Caja del teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-3_hu50bd5e6cc7da17ca30ae7dfe6f8c48a3_461363_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-3_hu50bd5e6cc7da17ca30ae7dfe6f8c48a3_461363_200x150_fit_q90_box.jpg" width="200" height="45" alt="Caja del teclado KEMOVE DK61" title="Caja del teclado KEMOVE DK61"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-4_hu02a905135936bc9f619d069fa19dcfc1_277095_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-4_hu02a905135936bc9f619d069fa19dcfc1_277095_200x150_fit_q90_box.jpg" width="200" height="113" alt="Caja del teclado KEMOVE DK61" title="Caja del teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-5_hu49d155ea060edfb3f105d76a6da89b5e_515869_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-5_hu49d155ea060edfb3f105d76a6da89b5e_515869_200x150_fit_q90_box.jpg" width="200" height="73" alt="Caja del teclado KEMOVE DK61" title="Caja del teclado KEMOVE DK61"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-6_hu3b64ab7ed6870f28ad4e76e7a4593b21_432894_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-6_hu3b64ab7ed6870f28ad4e76e7a4593b21_432894_200x150_fit_q90_box.jpg" width="128" height="150" alt="Caja del teclado KEMOVE DK61" title="Caja del teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-7_hu49289066c0061a201eb5fb0fefb5a391_397849_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-caja-7_hu49289066c0061a201eb5fb0fefb5a391_397849_200x150_fit_q90_box.jpg" width="200" height="95" alt="Caja del teclado KEMOVE DK61" title="Caja del teclado KEMOVE DK61"  class="lozad "></a></p>
<figcaption>Caja del teclado KEMOVE DK61</figcaption>
</figure>
</div>
<h4 id="el-contenido-de-la-caja">El contenido de la caja</h4>
<p>El contenido de la caja aparte del propio teclado se compone de su manual de usuario en el que se muestran los diferentes grupos de teclas que se usan en combinación con la tecla de función junto con la descripción de que hacen que es útil como referencia en caso de cambiar los <em>keycaps</em>, el cable para la conexión al ordenador y carga de la batería, una tarjeta de garantía, un extractor de <em>keycaps</em> y un extractor de <em>switches</em> y tres <em>switches</em> adicionales para probar otros tipos de <em>switches</em> o reemplazar alguno, también sirven como reemplazo en caso de que alguno se estropee.</p>
<p>Contenido de la caja:</p>
<ul>
<li>El teclado.</li>
<li>Cable USB.</li>
<li>Un pequeño manual con las combinaciones de teclas.</li>
<li>Cubre teclado de plástico para evitar polvo.</li>
<li>Un extractor de <em>keycaps</em>.</li>
<li>Un extractor de <em>switches</em>.</li>
<li>Una tarjeta con la garantía ofrecida.</li>
<li>3 <em>switches</em> adicionales de otros colores.</li>
</ul>
<p>Un detalle que en mi caso echaba en falta en los DIERYA era que no incluían una tapa protectora para cuando el teclado no se está usando y evitar que se le acumule polvo. El KEMOVE incluye esa tapa de plástico que a mi me resulta muy útil, un detalle a la altura de de los mejores teclados y que no se suele encontrar en teclados en el rango de precios del KEMOVE. Además, este plástico que también forma parte del empaquetado permite en vez de desechar todo el embalaje después de abierto darle un uso durante toda la vida del teclado que será de más de un lustro e incluso una década.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-contenido-1_hucd620991166783628cdb170b9ffe8d0f_669476_2560x1440_fit_q90_box.jpg" data-gallery="" title="Contenido de la caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-contenido-1_hucd620991166783628cdb170b9ffe8d0f_669476_300x200_fit_q90_box.jpg" width="300" height="196" alt="Contenido de la caja del teclado KEMOVE DK61" title="Contenido de la caja del teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-contenido-2_hu08488396fb1122690414f9fd2f93e9f5_385354_2560x1440_fit_q90_box.jpg" data-gallery="" title="Contenido de la caja del teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-contenido-2_hu08488396fb1122690414f9fd2f93e9f5_385354_300x200_fit_q90_box.jpg" width="300" height="111" alt="Contenido de la caja del teclado KEMOVE DK61" title="Contenido de la caja del teclado KEMOVE DK61"  class="lozad "></a></p>
<figcaption>Contenido de la caja del teclado KEMOVE DK61</figcaption>
</figure>
</div>
<h4 id="el-teclado">El teclado</h4>
<p>El cuerpo del teclado es completamente de plástico que da sensación de resistente con un pequeño biselado en la parte delantera. En gran medida tiene el mismo aspecto de los DIERYA y es que el teclado tampoco necesitaba ninguna mejora adicional. Las diferencias están en la parte trasera que incluye el nombre de la marca y las patas que permite regular la altura al menos en una posición cosa de las que carecían los DIERYA. Por otro lado en este KEMOVE tiene dos interruptores que están en el lateral para activar el modo inalámbrico y cambiar el modo de compatibilidad entre <a href="https://www.microsoft.com/es-es/windows/">Windows</a> y <a href="https://www.apple.com/macos/">macOS</a>.</p>
<p>El teclado se ofrece en dos colores el negro donominado <em>shadow</em> y blanco denominado <em>snowfox</em> tanto para el cuerpo del teclado como para los <em>keycaps</em>. La estabilidad en las teclas grandes como la barra espaciadora y las teclas de <em>shift</em> es buena. Que el teclado sea RGB siendo inalámbrico, que el cable sea desmontable y que los <em>switches</em> sean intercambiables es algo que no se suele encontrar en teclados en el rango de precios alrededor de 90 € en los que se ofrece el KEMOVE, estas características se suelen ofrecer en teclados en un rango de precios superior.</p>
<p>En el modo de funcionamiento inalámbrico permite configurar hasta tres dispositivos para cambiar de uno a otro según se desee con la combinación de teclas <em>FN+Z</em>, <em>FN+X</em> y <em>FN+C</em>. Es compatible tanto con Windows, macOS, como con <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> y <a href="https://www.android.com/">Android</a> reconociéndose todas las teclas incluidas las de función multimedia para controlar la reproducción y el volumen de sonido.</p>
<p>Conserva las mismas dimensiones que los DIERYA DK61E y DK 63, siendo para el KEMOVE DK61 de 29 cm de ancho, 10 cm de largo, por unos 3 cm en la parte baja y unos 4,5 en la parte alta de altura incluyendo los <em>keycaps</em>. Con las patas extraídas para regular la altura su altura llega a los 4,5 cm.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-1_hu5503dedec99dd633daa2e4dde243207a_379956_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-1_hu5503dedec99dd633daa2e4dde243207a_379956_200x150_fit_q90_box.jpg" width="200" height="69" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-2_hu41822c3ae30950aec8cf719165cb664f_410813_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-2_hu41822c3ae30950aec8cf719165cb664f_410813_200x150_fit_q90_box.jpg" width="200" height="64" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-3_huc965bc8efba9519c4c2a5b53284cc2bd_715578_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-3_huc965bc8efba9519c4c2a5b53284cc2bd_715578_200x150_fit_q90_box.jpg" width="200" height="71" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-4_huc8f3d0069abd4c7020220a22564ef218_566511_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-4_huc8f3d0069abd4c7020220a22564ef218_566511_200x150_fit_q90_box.jpg" width="200" height="72" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-5_hu6ac81ecdc3589f8c2108ac297bfbfd3d_731317_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-5_hu6ac81ecdc3589f8c2108ac297bfbfd3d_731317_200x150_fit_q90_box.jpg" width="200" height="106" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-6_hu4635fc0d1d7c2a405d594ae3feaaebc0_845901_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-6_hu4635fc0d1d7c2a405d594ae3feaaebc0_845901_200x150_fit_q90_box.jpg" width="200" height="108" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-7_hu3e60df5222327c6f4680f1b907ed7277_628657_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-7_hu3e60df5222327c6f4680f1b907ed7277_628657_200x150_fit_q90_box.jpg" width="200" height="74" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-8_hu79c8623a277a477dad28e6175bb5d962_765387_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-8_hu79c8623a277a477dad28e6175bb5d962_765387_200x150_fit_q90_box.jpg" width="200" height="114" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-9_hu9e660e34137d61e205ab350b64a090c6_863078_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-9_hu9e660e34137d61e205ab350b64a090c6_863078_200x150_fit_q90_box.jpg" width="200" height="109" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-10_hua45a3997b6c9729854e0ce23854b7e8b_463466_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-10_hua45a3997b6c9729854e0ce23854b7e8b_463466_200x150_fit_q90_box.jpg" width="200" height="80" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-11_hu0f4309b72a5be4966a603087c6c530f0_433478_2560x1440_fit_q90_box.jpg" data-gallery="" title="Teclado KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-teclado-11_hu0f4309b72a5be4966a603087c6c530f0_433478_200x150_fit_q90_box.jpg" width="200" height="81" alt="Teclado KEMOVE DK61" title="Teclado KEMOVE DK61"  class="lozad "></a></p>
<figcaption>Teclado KEMOVE DK61</figcaption>
</figure>
</div>
<h4 id="los-_switches_">Los <em>switches</em></h4>
<p>El teclado se ofrece premontado con switches Gateron, Cherry MX y Kailh, los primeros están en Amazon y se envían desde el país de la página si están disponibles, los Kailh se ofrecen en la página de KEMOVE. Por supuesto, se ofrece una amplia gama de colores dentro de los Gateron, que incluyen los tres tipos básicos de lineales, táctiles y sonoros, dentro de estos tipos básicos algunos con mayor resistencia para aquellos que prefieran unas teclas que sean algo más duras.</p>
<p>En cualquier caso dado que el teclado es <em>hot swappable</em> permite cambiar los switches por cualesquiera otros de otra marca que sean compatibles. Los <em>switches</em> han de ser de tres pines y eléctricos, si se desea conservar la iluminación RGB ha de ser compatible también con el RGB.</p>
<p>En la página de Gateron hay una leyenda con la descripción de cada <em>switch</em> según su color tanto de qué tipo son, su fuerza de actuación y recorrido. En general unos rojos para los lineales y los marrones para los táctiles son los más comunes.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-switches-1_huc947ee09c33f5d14863fb1881f5d1399_273420_2560x1440_fit_q90_box.jpg" data-gallery="" title="Swicthes eléctricos Gateron y estabilizador del KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-switches-1_huc947ee09c33f5d14863fb1881f5d1399_273420_300x200_fit_q90_box.jpg" width="124" height="200" alt="Swicthes eléctricos Gateron y estabilizador del KEMOVE DK61" title="Swicthes eléctricos Gateron y estabilizador del KEMOVE DK61"  class="lozad "></a></p>
<figcaption>Swicthes eléctricos Gateron y estabilizador del KEMOVE DK61</figcaption>
</figure>
</div>
<h4 id="los-_keycaps_">Los <em>keycaps</em></h4>
<p>Los keycaps son de plástico PBT considerado generalmente mejor por ofrecer mayor durabilidad que el plástico ABS más barato, el plástico PBT no es de lo más gruesos que hay pero es más que suficiente y no presenta ningún problema en su uso y durabilidad. La serigrafía para las leyendas principales de la tecla es de doble disparo o <em>double shot</em> que evita que con el uso se deteriore como ocurre en otras formas de impresión más baratas pero también de peor calidad. La leyenda de las teclas de función es de <em>pad printing</em> que no ofrece las mismas garantías de durabilidad pero al está en una lateral del <em>keycap</em> que no se suele tocar con los dedos su durabilidad no es afectada, por otro lado, al esta la leyenda de las teclas de función en un lateral hace que las teclas tengan un aspecto limpio y la leyenda principal se vea sin ninguna distracción.</p>
<p>Al ofrecerse un cubre teclado permite minimizar la cantidad de polvo que se acumula entre teclas cuando no se usa, en cualquier caso en caso de que pasado un tiempo las teclas acumulen algo de polvo entre la teclas o en el <em>backplate</em> los <em>keycaps</em> se pueden desmontar de los <em>switches</em> y realizar una limpieza a fondo de tal forma que quede tan limpio como el primer día de uso.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-keycaps_hu7b4367508d5c0500dd169b09a71a4685_533744_2560x1440_fit_q90_box.jpg" data-gallery="" title="Keycaps del KEMOVE DK61"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-keycaps_hu7b4367508d5c0500dd169b09a71a4685_533744_300x200_fit_q90_box.jpg" width="197" height="200" alt="Keycaps del KEMOVE DK61" title="Keycaps del KEMOVE DK61"  class="lozad "></a></p>
<figcaption>Keycaps del KEMOVE DK61</figcaption>
</figure>
</div>
<h3 id="análisis-y-primeras-impresiones-del-teclado-mecánico-kemove-dk61">Análisis y primeras impresiones del teclado mecánico KEMOVE DK61</h3>
<p>Al usarlo no he tenido ningún inconveniente para que el teclado sea reconocido por cualquiera de los sistemas operativos donde lo he probado tanto de forma cableada como de forma inalámbrica, las pulsaciones se registran de forma inmediata, en el modo inalámbrico la latencia es imperceptible y la conexión inalámbrica se muestra estable.</p>
<p>Realizar la conexión inalámbrica se hace en unos pocos segundos activando el teclado en modo configuración y emparejándolo en el dispositivo donde se desea usar. El teclado se pone en modo configuración manteniendo durante unos segundos la combinación de teclas <em>FN+Z</em>, <em>FN+X</em> y <em>FN+C</em>. La conexión inalámbrica es útil para usarla tanto en un ordenador, como en un <em>smartphone</em>, consola o televisión inteligente incluido poder usar la conexión inalámbrica en dispositivos en ubicaciones diferentes como en la oficina y en casa. Tanto en los <em>smartphones</em>, como en las consolas y televisiones inteligentes es muy útil que el teclado sea inalámbrico sin cables, en el caso de la televisión desde el sofá, en un ordenador si se tiene en la habitación desde la cama y en un <em>smartphone</em> sin tener que utilizar la pantalla táctil y con con la misma experiencia de uso que un ordenador por ejemplo al escribir un documento o redactar un correo electrónico.</p>
<p>Al ser de 60% sigue siendo un modelo muy compacto, ligero y fácilmente transportable. Pero los teclados 60% no son para todos los usuarios y algunos prefieren los TKL para no perder algunas teclas. Desconozco si la limitación de de hasta tres dispositivos es una limitación técnica o de costes pero quizá incluso para algunos usuarios poder configurarlos con más dispositivos sería útil dados los varios dispositivos como los mencionados anteriormente donde se puede usar un teclado inalámbrico, se tarda poco en realizar la configuración pero sería innecesario si pudiese utilizarse en hasta 5 o 7 dispositivos. Aún así la mayoría de teclados inalámbricos solo permiten hasta tres dispositivos por lo que no es un defecto respecto a modelos de otras marcas.</p>
<p>Que los <em>switches</em> para cambiar entre el modo inalámbrico y modo de compatibilidad entre Windows y macOS estén en un lateral es más cómodo y de acceso más fácil que si estuviese en la parte inferior como ocurre en el DK63. Que el <em>backplate</em> sea blanco hace destacar la iluminación RGB y que ofrezca una tapa de plástico para cubrir el teclado es un detalle que seguro los usuarios que lo usen lo agradecen para evitar el polvo.</p>
<p>Algunos de estos detalles es algo que echaba en falta en los DIERYA y que en los KEMOVE están resueltos, aunque si no estoy equivocado en la serigrafía de la tecla dónde está el F11 tiene el mismo error de serigrafía que el DK61E estando los caracteres en la posición contraria. Dónde está el <em>-</em> debería estar el <em>_</em>, no es algo muy grave pero al ser algo de diseño es algo que seguro se podría corregir si añadir costes de fabricación.</p>
<h4 id="compatibilidad-con-sistemas-operativos">Compatibilidad con sistemas operativos</h4>
<p>Lo he probado tanto en GNU/Linux, macOS y Android, en todos estos sistemas operativos el teclado es detectado correctamente en el momento que se pone en modo de configuración. Permite cambiar de uno a otro sistema con la combinación de teclas. Si es compatible con esos sistemas operativos es seguro que lo será también con Windows tal y como se indica en su caja de empaquetado. Para Windows se ofrece una <a href="https://www.kemove.com/support/">aplicación de escritorio</a> para configurar la iluminación y macros de teclado, los controladores y manual de usuario. Al tener un botón de compatibilidad para macOS las teclas se adaptarán es modo de funcionamiento específico de macOS.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-bluetooth-macos_hu0bfd28383c94bbdb1c3709ec52b03400_62106_2560x1440_fit_box_3.png" data-gallery="" title="Configuración del teclado con conexión inalámbrica en macOS"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-bluetooth-macos_hu0bfd28383c94bbdb1c3709ec52b03400_62106_200x150_fit_box_3.png" width="200" height="134" alt="Configuración del teclado con conexión inalámbrica en macOS" title="Configuración del teclado con conexión inalámbrica en macOS"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-bluetooth-linux_huad33afbb5e6e2f021da262a5a8a8673b_80166_2560x1440_fit_box_3.png" data-gallery="" title="Configuración del teclado con conexión inalámbrica en GNU/Linux"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-bluetooth-linux_huad33afbb5e6e2f021da262a5a8a8673b_80166_200x150_fit_box_3.png" width="161" height="150" alt="Configuración del teclado con conexión inalámbrica en GNU/Linux" title="Configuración del teclado con conexión inalámbrica en GNU/Linux"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-bluetooth-android_hu79e3b3c667fb86d61c51c691393af64a_115110_2560x1440_fit_box_3.png" data-gallery="" title="Configuración del teclado con conexión inalámbrica en Android"><img src="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/images/kemove-dk61-bluetooth-android_hu79e3b3c667fb86d61c51c691393af64a_115110_200x150_fit_box_3.png" width="77" height="150" alt="Configuración del teclado con conexión inalámbrica en Android" title="Configuración del teclado con conexión inalámbrica en Android"  class="lozad "></a></p>
<figcaption>Configuración del teclado con conexión inalámbrica</figcaption>
</figure>
</div>
<h4 id="análisis-en-vídeo">Análisis en vídeo</h4>
<p>Aquí muestro un vídeo con la parte frontal del teclado visto desde la posición de uso y cerca tanto sin iluminación RBG como con iluminación RGB y en YouTube hay una buena cantidad de vídeos que analizan y hacen el desempaquetado de este modelo de teclado KEMOVE DK61. En los vídeos se explican detalles desde otro punto de vista, información adicional o complementaria a la ofrecida en este artículo.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/arCJ9CGbw2g" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/205_fm_0Jrw" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/IZye3fBW3Qg" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/vm3zs6m3VbU" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/CF5fTKDeTTc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="conclusión">Conclusión</h4>
<p>El teclado KEMOVE mejora en varios aspectos a los teclados DIERYA sin incrementar demasiado su precio. Un precio que sigue siendo muy ajustado y con características que otras marcas ofrecen en un rango de precios más elevado. Encontrar un teclado con teclas PBT de doble disparo, que sea hot <em>swappable</em>, inalámbrico por Bluetooth y cableado, con iluminación RGB en este rango de precios no es tán fácil de encontrar.</p>
<p>Para algunos el mayor inconveniente sea tener unos <em>keycaps</em> en disposición de español si se quieren cambiar que en AliExpress hay varios vendedores que los ofrecen teniendo en cuenta que esto incrementa algo el precio del teclado y teniendo en cuenta que la serigrafía de las teclas de función se pierde. Otro aspecto a tener en cuenta es que carece de teclas de flechas dedicadas y teclas de bloque superior motivo por el cual algunos optan por modelos TKL con las mismas teclas y solo prescindiendo del teclado numérico.</p>
<p>El KEMOVE DK61 en los aspectos más importantes no tiene nada que envidiar a teclados considerados de gama alta y es que el KEMOVE puede considerarse también de gama alta, pero a diferencia de muchos otros tiene un precio asequible que se mantiene ajustado para muchos usuarios. Si se desea un teclado 60% con disposición ANSI e inglés sabiendo que se pueden cambiar los <em>keycaps</em> es una muy buena opción de compra pudiendo hacerlo además en Amazon o en su propia página a través del medio de pago PayPal.</p>
<h3 id="complementos-para-el-teclado">Complementos para el teclado</h3>
<p>Al comprar un teclado mecánico puede interesar comprar a la vez otros complementos para el teclado, como un <a href="https://amzn.to/3Hpch9P">concentrador USB</a> para tener los puertos de conexión cerca especialmente si se suele estar conectando y desconectando dispositivos o el ordenador tiene difícil acceso a los puertos USB estando en la parte trasera del ordenador de torre.</p>
<p>En páginas como <a href="https://es.aliexpress.com/">AliExpreses</a> hay multitud de vendedores que venden conjuntos de <em>keycaps</em> y la marca <a href="https://kmovetech.com/">KEMOVE</a> también varios conjuntos de <em>keycaps</em> y <em>switches</em>. Una de las ventajas de los teclados mecánicos es poder personalizarlos y los <em>keycaps</em> es una forma, pudiendo elegir diferentes <em>layouts</em> o colores para algunas teclas como forma de distinción y hacer del teclado una pieza única.</p>
<p>Otro producto interesante es una alfombrilla de gran tamaño que permite colocar tanto el teclado como el ratón, permite evitar el desgaste de la mesa o ensuciarla. Algunas <a href="https://amzn.to/3Aztewq">alfombrillas incluso con iluminación RGB</a> que aparte de su efecto estético puede resultar también útil en condiciones de baja iluminación.</p>
<p>Finalmente, en caso de querer transportar el teclado es aconsejable comprar una <a href="https://www.kemove.com/product/keyboard-case/?wpam_id=17">funda para protegerlo en el transporte</a> que KEMOVE vende en su página web o en algún momento también está disponible en Amazon y evitar que sufra algún deterioro en el transporte principalmente para proteger los <em>keycaps</em>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B019BW4RT2&amp;linkId=3c197694911d2902b24886d313122a13" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B019BW4RTM&amp;linkId=a80af86538931b0679c7aa4299ee5595" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B087M6Z5TJ&amp;linkId=2b93be70743c91baf5729d42538c54f9" title="Amazon" class="lozad"></iframe>
</div>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VBD4L2F&amp;linkId=e821ce9f7d98acd6ce2fe7bd7ccbe0d6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B09JLNFY8H&amp;linkId=d20042ac2099d41123ab79d2f20c85e2" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B087QTWCTQ&amp;linkId=a1224dfacf13823ba9f5579d50e24f7f" title="Amazon" class="lozad"></iframe>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/</id>
        <title>Cómo usar el comando git bisect para descubrir el primer commit con un error</title>
        <updated>2022-04-28T19:00:00+02:00</updated>
        <published>2022-04-28T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El comando <em>git bisect</em> es muy útil cuando se desea encontrar en que <em>commit</em> se ha introducido un error en un rango de <em>commits</em> ya que permite automatizar la búsqueda sin tener que hacerlo manualmente el desarrollador que simplemente se limita a indicar a Git si el <em>commit</em> a analizar en cada prueba es correcto o incorrecto. Una vez descubierto en que <em>commit</em> se ha introducido el error es cuestión de revisar los cambios de ese <em>commit</em>, analizar sus cambios e identificadas las líneas de código erróneas aplicar la solución.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/git.svg" width="200" height="200" alt="Git" title="Git"  class=""></p>
</div>
<p>Una herramienta de control de versiones para el código fuente de las aplicaciones es esencial, para guardar todos los cambios realizados en el código y permitir compartir código entre los desarrolladores aparte de otras funcionalidades proporcionadas. Una de las herramientas de control de versiones más populares es <a href="https://git-scm.com/">Git</a>, desarrollado por <a href="https://en.wikipedia.org/wiki/Linus_Torvalds">Linus Torvalds</a> también autor original de núcleo <a href="https://www.linux.com/">Linux</a> entre otros colaboradores.</p>
<p>Una situación habitual al realizar cambios en el código fuente de un programa es pasado un tiempo descubrir un error y no conocer en que cambio lo ha producido y en que <em>commit</em>. Si no se tiene una pista de cual es el cambio que ha introducido error una solución es probar cada <em>commit</em> y para ver si esa versión de la aplicación tiene el error o no. Una vez probados varios <em>commit</em> al final se descubre que <em>commit</em> es el que ha introducido el error. Conociendo el <em>commit</em> que introduce el error hay que revisar los cambios de ese <em>commit</em> para conocer y cambiar las líneas de código erróneas.</p>
<h3 id="el-comando-_git-bisect_">El comando <em>git bisect</em></h3>
<p>Una de las funcionalidades que proporciona la herramienta de control de versiones Git es el subcomando <em>bisect</em>. <a href="https://git-scm.com/docs/git-bisect">El comando <em>git bisect</em></a> automatiza encontrar que <em>commit</em> ha introducido un error dado un rango de <em>commits</em> en el que se sospecha está el <em>commit</em> con el error.</p>
<p>El comando <em>git bisect</em> aplica un algoritmo de búsqueda al rango de <em>commits</em>, en función de la indicación que se le proporcione de si el commit tiene o no el error al final del número de comprobaciones que sean necesarias proporciona el primer <em>commit</em> con el error en el rango analizado.</p>
<p>El comando <em>git bisect</em> no se utiliza tan habitualmente como <em>git stash</em> o <em>git commit</em> pero cuando cuando es necesario es muy útil conocer como se usa y usarlo.</p>
<p>El primer paso del comando <em>git bisect</em> es iniciar la bisección y proporcionar el rango de <em>commits</em> a analizar. Una vez proporcionado el rango de <em>commits</em> <em>git</em> cambia el <em>commit</em> del espacio de trabajo según su algoritmo de búsqueda. El siguiente paso suele consistir en arrancar la aplicación y comprobar si el <em>commit</em> tiene o no el error. Una vez conocido si el <em>commit</em> es correcto o tiene el error se le indica a Git con el comando <em>git bisect good</em> o <em>git bisect bad</em> respectivamente. Git a continuación selecciona otro <em>commit</em> teniendo que comprobar de nuevo si el nuevo <em>commit</em> seleccionado es correcto o incorrecto. Después de varias repeticiones de estos pasos se descubre el <em>commit</em> en el que se introdujo el error.</p>
<p>Una vez terminada la bisección o en cualquier momento se puede dar por terminada con el comando <em>git bisect reset</em> y volver a un espacio de trabajo fuera del <em>bisect</em>. El comando <em>git bisect view</em> permite ver el estado de la bisección y los <em>commits</em> analizados.</p>
<p>Estos con los comandos básicos y un ejemplo de uso.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git bisect start&#10;</span></span><span class="line"><span class="cl">$ git bisect good&#10;</span></span><span class="line"><span class="cl">$ git bisect bad&#10;</span></span><span class="line"><span class="cl">$ git bisect reset&#10;</span></span><span class="line"><span class="cl">$ git bisect <span class="o">(</span>visualize<span class="p">|</span>view<span class="o">)</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>git-bisect-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git log --pretty<span class="o">=</span>oneline 63575c4f1824c360dbf60aafaaec17401ea604bd..master&#10;</span></span><span class="line"><span class="cl">022c1b295804bf810743f175358607a0a3bb7307 <span class="o">(</span>HEAD -&gt; master, origin/master<span class="o">)</span> Remove Universal Analytics&#10;</span></span><span class="line"><span class="cl">a07d1af345907016e19778feb064e08d17f36ed9 Add print_step <span class="k">for</span> display_manager step&#10;</span></span><span class="line"><span class="cl">39320076b996e4d582bf535f74d1f0b238b3768a Reorder packages&#10;</span></span><span class="line"><span class="cl">d5233aa726c2626d52de8981bee65dcfbf69ae61 Merge pull request <span class="c1">#209 from shuriken1812/master</span>&#10;</span></span><span class="line"><span class="cl">f7a4790992f859aac6fde86b3b18a72e259545bd Added pipewire-alsa and wireplumber&#10;</span></span><span class="line"><span class="cl">0b0a1ddca33814e254b3bc395af476156559aac4 Allow to choose display manager&#10;</span></span><span class="line"><span class="cl">0aeacbab0fe55b71b272d670c76ab52fa2b206c4 Support LightDM autologin&#10;</span></span><span class="line"><span class="cl">ff01de4f91ff10c6b99b5b6275623ea93ec412ba Update Hugo  ndadd Google Analytics <span class="m">4</span>&#10;</span></span><span class="line"><span class="cl">f3038ae0195dddcd98660ebd81721aa5645a8597 Merge pull request <span class="c1">#194 from MauroSoli/patch-1</span>&#10;</span></span><span class="line"><span class="cl">20c5f7a12bbbc372e77187cae7ccd4a1c64c8a1b Change provision configuration description&#10;</span></span><span class="line"><span class="cl">219f4ab9232b5537364d8b9a0e969520917f3230 add !tpm module</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>git-log.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>picodotdev@archlinux alis <span class="o">(</span>master $<span class="o">=)]</span>$ git bisect start master 63575c4f1824c360dbf60aafaaec17401ea604bd&#10;</span></span><span class="line"><span class="cl">Biseccionando: faltan <span class="m">5</span> revisiones por probar después de esta <span class="o">(</span>aproximadamente <span class="m">3</span> pasos<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span>0aeacbab0fe55b71b272d670c76ab52fa2b206c4<span class="o">]</span> Support LightDM autologin&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span>picodotdev@archlinux alis <span class="o">((</span>0aeacba...<span class="o">)</span> $<span class="p">|</span>BISECTING<span class="o">)]</span>$ git bisect good&#10;</span></span><span class="line"><span class="cl">Biseccionando: faltan <span class="m">2</span> revisiones por probar después de esta <span class="o">(</span>aproximadamente <span class="m">2</span> pasos<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span>d5233aa726c2626d52de8981bee65dcfbf69ae61<span class="o">]</span> Merge pull request <span class="c1">#209 from shuriken1812/master</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span>picodotdev@archlinux alis <span class="o">((</span>d5233aa...<span class="o">)</span> $<span class="p">|</span>BISECTING<span class="o">)]</span>$ git bisect bad&#10;</span></span><span class="line"><span class="cl">Biseccionando: faltan <span class="m">0</span> revisiones por probar después de esta <span class="o">(</span>aproximadamente <span class="m">1</span> paso<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span>f7a4790992f859aac6fde86b3b18a72e259545bd<span class="o">]</span> Added pipewire-alsa and wireplumber&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span>picodotdev@archlinux alis <span class="o">((</span>f7a4790...<span class="o">)</span> $<span class="p">|</span>BISECTING<span class="o">)]</span>$ git bisect bad&#10;</span></span><span class="line"><span class="cl">Biseccionando: faltan <span class="m">0</span> revisiones por probar después de esta <span class="o">(</span>aproximadamente <span class="m">0</span> pasos<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span>0b0a1ddca33814e254b3bc395af476156559aac4<span class="o">]</span> Allow to choose display manager&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span>picodotdev@archlinux alis <span class="o">((</span>0b0a1dd...<span class="o">)</span> $<span class="p">|</span>BISECTING<span class="o">)]</span>$ git bisect bad&#10;</span></span><span class="line"><span class="cl">0b0a1ddca33814e254b3bc395af476156559aac4 is the first bad commit&#10;</span></span><span class="line"><span class="cl">commit 0b0a1ddca33814e254b3bc395af476156559aac4&#10;</span></span><span class="line"><span class="cl">Author: pico.dev &lt;pico.dev@gmail.com&gt;&#10;</span></span><span class="line"><span class="cl">Date:   Sat Apr <span class="m">23</span> 14:48:22 <span class="m">2022</span> +0200&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Allow to choose display manager&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"> alis.conf <span class="p">|</span>   <span class="m">4</span> +-&#10;</span></span><span class="line"><span class="cl"> alis.sh   <span class="p">|</span> <span class="m">148</span> +++++++++++++++++++++++++++++++++++++++++++++-----------------&#10;</span></span><span class="line"><span class="cl"> <span class="m">2</span> files changed, <span class="m">112</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">40</span> deletions<span class="o">(</span>-<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"> <span class="o">[</span>picodotdev@archlinux alis <span class="o">((</span>0b0a1dd...<span class="o">)</span> $<span class="p">|</span>BISECTING<span class="o">)]</span>$ git bisect reset&#10;</span></span><span class="line"><span class="cl"> <span class="o">[</span>picodotdev@archlinux alis <span class="o">(</span>master $<span class="o">=)]</span>$ </span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>git-bisect-example.sh</span>
    </div>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/</id>
        <title>Aplicación con interfaz gráfica para repositorios Git</title>
        <updated>2022-04-19T00:00:00+02:00</updated>
        <published>2022-04-19T00:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Una herramienta con interfaz gráfica hace más fácil algunas tareas que usar la línea de comandos directamente. Este también es el caso al trabajar con repositorios de código fuente con la herramienta de control de versiones Git. Usar la linea de comandos tiene sus propias ventajas como permitir automatizar tareas con <em>scripts</em> o realizar operaciones sin tener que usar la interfaz gráfica. La interfaz gráfica y la linea de comandos no son excluyentes, se pueden usar según convenga en cada ocasión. Al trabajar con múltiples repositorios de Git, para realizar operaciones comunes como <em>commits</em>, analizar el historial y ver las diferencias en un archivo entre dos versiones una herramienta gráfica también facilita la tarea.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>El sistema de control de versiones <a href="https://git-scm.com/">Git</a> posee una línea de comandos con la que se realizan todas las acciones para clonar repositorios, para hacer commits, para ver diferencias, para explorar el historial, para crear ramas y cualquier otra acción. La línea de comandos es muy potente y además es <a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/">automatizable con un <em>script</em></a> pero como cualquier otra línea de comandos no es intuitiva y difícil de aprender y en algún caso lenta al teclear un comando, sus opciones y argumentos.</p>
<p>Es aconsejable conocer los comandos básicos de línea de comandos pero en el uso diario o para algunas acciones las aplicaciones con interfaz gráfica son más rápidas, más fáciles de aprender y sin necesidad de recordar las opciones de cada comando. En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> y <a href="https://www.gnome.org/">GNOME</a> una aplicación cliente de Git es <a href="https://wiki.gnome.org/Apps/Gitg">gitg</a>.</p>
<h3 id="la-aplicación-gitg">La aplicación gitg</h3>
<p><a href="https://wiki.gnome.org/Apps/Gitg">Gitg</a> es una aplicación de escritorio con interfaz gráfica que permite visualizar un repositorio de Git, su historial y el contenido de los diferentes archivos en sus versiones. No tiene todas las opciones disponibles de la línea de comandos pero si muchos incluyendo los más comunes. Usar una herramienta con interfaz gráfica puede mejorar la productividad al trabajar con varios repositorios de control de versiones en Git y permite a los usuarios que estén empezando a usar Git una forma de usarlo más intuitiva.</p>
<p>Está adaptada a la guía de estilos de las aplicaciones de GNOME, es una aplicación de software libre, está disponible tanto para GNU/Linux, <a href="https://www.apple.com/macos/">macOS</a> como <a href="https://www.microsoft.com/es-es/windows/">Windows</a> y en GNU/Linux se puede instalar como paquete de la distribución o como <a href="https://picodotdev.github.io/blog-bitix/2018/11/flatpak-distribucion-e-instalacion-de-programas-de-escritorio-en-las-distribuciones-gnu-linux/">una aplicación en formato Flatpak</a> independiente de la distribución <a href="https://flathub.org/apps/details/org.gnome.gitg">disponible en Flathub con su paquete de gitg</a>.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gitg.svg" width="200" height="150" alt="gitg" title="gitg"  class="lozad "></p>
</figure>
</div>
<p>Las operaciones que permite son:</p>
<ul>
<li>Ver el historial.</li>
<li>Ver el contenido de archivos.</li>
<li>Gestionar el área de <em>staging</em> para componer el <em>commit</em>.</li>
<li>Añadir y clonar un repositorio.</li>
<li>Actualizar la información del usuario.</li>
<li>Cambiar varias opciones de preferencias.</li>
</ul>
<p>En esta capturas se muestran los <em>commits</em>, historial y <em>merges</em> en una linea de tiempo gráfica, además de poder ver las ramas locales, las ramas remotas, los orígenes de las ramas así como los archivos modificados en cada <em>commit</em> y las diferencias y cambios realizados en cada archivo.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/images/gitg-1_hufc6c7212bf1f460f3fa6607e19248b9a_29524_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación gitg"><img src="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/images/gitg-1_hufc6c7212bf1f460f3fa6607e19248b9a_29524_300x200_fit_box_3.png" width="238" height="200" alt="Aplicación gitg" title="Aplicación gitg"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/images/gitg-2_hu2a9b977282670e3858193850017f09b7_19224_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación gitg"><img src="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/images/gitg-2_hu2a9b977282670e3858193850017f09b7_19224_300x200_fit_box_3.png" width="238" height="200" alt="Aplicación gitg" title="Aplicación gitg"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/images/gitg-3_hu5b15d53ed39308162b8db2645ba363df_242593_2560x1440_fit_box_3.png" data-gallery="" title="Aplicación gitg"><img src="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/images/gitg-3_hu5b15d53ed39308162b8db2645ba363df_242593_650x400_fit_box_3.png" width="419" height="400" alt="Aplicación gitg" title="Aplicación gitg"  class="lozad "></a></p>
<figcaption>Aplicación gitg</figcaption>
</figure>
</div>
<p>Otras aplicaciones cliente de Git que tiene características similares son <a href="https://github.com/desktop/desktop">Github Desktop</a> y <a href="https://www.syntevo.com/smartgit/">SmartGit</a> esta última tiene una licencia propietaria y no es gratuita, ambas tienen su versión de Flatpak en el repositorio de <a href="https://flathub.org/">Flathub</a>.</p>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/04/por-que-y-ejemplo-de-como-desarrollar-un-plugin-de-gradle/</id>
        <title>Por qué y ejemplo de cómo desarrollar un plugin de Gradle</title>
        <updated>2022-04-07T19:00:00+01:00</updated>
        <published>2022-04-07T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/04/por-que-y-ejemplo-de-como-desarrollar-un-plugin-de-gradle/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Generalmente cuando se necesita una funcionalidad en Gradle esta suele estar proporcionada por los propios desarrolladores de Gradle, por los propios mantenedores de otras herramientas para integrarlas en Gradle o en último caso por alguien que antes ha tenido la misma necesidad ha publicado un <em>plugin</em>. Si aún así no hay un <em>plugin</em> que ofrezca la funcionalidad que se desea, Gradle ofrece la posibilidad de que cualquiera desarrolle sus propios <em>plugins</em> y los use para sus necesidades específicas o en caso de ser útil para otras personas compartirlo en un repositorio público como cualquier otro.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gradle.svg" width="200" height="165" alt="Gradle" title="Gradle"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p><a href="https://gradle.org/">Gradle</a> es una herramienta de construcción y gestión del ciclo de vida de un proyecto principalmente usando en proyectos Java. Realiza importantes tareas como la descarga y gestión de las dependencias y resolución de conflictos entre las diferentes versiones que necesite una aplicación, tareas importantes que ni <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/">el sistema de módulos de Java</a> proporciona. Permite ejecutar de forma sencilla la aplicación o las pruebas unitarias de código entre otras muchas tareas que pueden ser automatizadas como pruebas estáticas de código y generación de artefactos además de ser suficientemente flexible para adaptarse a las necesidades que haya en un proyecto.</p>
<p>Por todas estas importantes tareas que realiza Gradle es una herramienta imprescindible en cualquier cualquier proyecto Java. Su alternativa más usada es <a href="https://maven.apache.org/">Maven</a> que tiene un modelo declarativo y basado en XML con unos archivos más verbosos. Ambas herramientas se consideran ya maduras generalmente equivalentes para la mayoría de funcionalidades más comunes. Dado que los archivos de configuración de Gradle son menos verbosos, más legibles y fáciles de editar que el XML es la herramienta elegida como herramienta de construcción para muchos proyectos.</p>
<p>Cuando la funcionalidad ofrecida por Gradle no es suficiente, no existe un <em>plugin</em> de un tercero o no está adaptado a las necesidades de un proyecto u organización al igual que otros han desarrollado sus propios <em>plugins</em> cualquiera puede desarrolalr <em>plugins</em> con la interfaz que ofrece Gradle para su desarrollo y extender su funcionalidad.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="por-qué-desarrollar-un-_plugin_-propio-de-gradle">Por qué desarrollar un <em>plugin</em> propio de Gradle</h3>
<p>Es seguro que en una empresa a lo largo del tiempo esta desarrolle varios proyectos, siendo varios una cantidad de unas pocas decenas a cientos dependiendo del tamaño de la organización. Con múltiples proyectos por motivos de mantenimiento el copiar y pegar código entre proyectos no es una opción viable con lo que también seguro que surge la necesidad de reutilizar código propio de la organización entre los diferentes proyectos tal y como se reutiliza código de otras librerías como <a href="https://spring.io/">Spring</a>, <a href="https://hibernate.org/">Hibernate</a> y otra multitud de librerías desarrolladas por terceros. La forma de reutilizar código en Java es a través de librerías que se publican en un repositorio de Maven igual que cualquier otra librería de terceros.</p>
<p>También es seguro que con múltiples proyectos surge la necesidad de reutilizar código entre múltiples proyectos incluso en la herramienta de construcción. La forma que ofrece Grade de reutilizar código es a través de <em>plugins</em>. En el caso de la herramienta de construcción un <em>plugin</em> permite aplicar a todos los proyectos de forma sencilla, homogénea, mantenible y sin copiar y pegar elementos comunes considerados un estándar en la organización como comprobaciones estáticas de código con <a href="https://pmd.github.io/">PMD</a>, <a href="https://checkstyle.sourceforge.net/">Checkstyle</a> y <a href="https://spotbugs.github.io/">SpotBugs</a> entre otras muchas cosas propias de una organización. Muchos terceros publican <em>plugins</em> que cualquiera puede aplicar a un proyecto si este <em>plugin</em> ofrece la funcionalidad que necesita y si no existe ninguno también es posible desarrollar uno propio ajustado a las necesidades propias.</p>
<p>Gradle ofrece un sistema muy flexible y extensible para desarrollar, publicar y reutilizar <em>plugins</em>. En su documentación hay varias páginas que explican cómo desarrollar un <em>plugin</em>, y otros muchos artículos incluido el presente.</p>
<ul>
<li><a href="https://docs.gradle.org/current/userguide/custom_plugins.html">Developing Custom Gradle Plugins</a></li>
<li><a href="https://www.baeldung.com/gradle-create-plugin">Writing Custom Gradle Plugins</a></li>
<li><a href="https://dzone.com/articles/gradle-plugin">Developing a Custom Gradle Plugin</a></li>
</ul>
<p>Por ejemplo, hace tiempo hice un ejemplo en el que generaba un archivo al hacer la construcción y generación del artefacto que incluía información del artefacto como la versión, fecha de construcción, <em>hash</em> del <em>commit</em> y número de <em>build</em> de modo que en tiempo de ejecución el código tenga información para mostrar esa versión en las trazas y conocer la versión exacta del código desplegado en un entorno. Otro caso puede ser que se desee una funcionalidad similar al <em>plugin</em> de <a href="https://maven.apache.org/maven-release/maven-release-plugin/">Maven Release</a> que permite automatizar la generación de versiones de los proyectos para la que en Gradle la opción equivalente con <a href="https://github.com/researchgate/gradle-release">gradle-release</a> su última versión es del 2017.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/">Incluir información de la versión en el artefacto distribuible con Gradle</a></li>
</ul>
<h3 id="conceptos-de-gradle">Conceptos de Gradle</h3>
<p>Gradle define varios conceptos propios para la configuración y ejecución. La configuración permite cambiar el comportamiento o adaptarlo a las necesidades propias. La configuración se definen en lo que Gradle denomina extensiones que son simplemente objetos de datos en los que Gradle permite al usuario introducir datos y que en el archivo de construcción se manifiestan como bloques de configuración con propiedades, las tareas al ejecutarse obtienen las extensiones y los datos configurados en ellas, en función de los datos las tareas varían su comportamiento.</p>
<p>Los <em>plugins</em> a través de la API que ofrece Gradle pueden realizar cualquier acción que permita la API como por ejemplo aplicar nuevos <em>plugins</em> al proyecto, definir objetos de extensiones, definir nuevas tareas o cambiar el comportamiento de tareas existentes. Con estas funcionalidades a disposición de cualquiera es posible crear un <em>plugin</em> de Gradle en el que encapsular cualquier funcionalidad relativa al ciclo de vida del proyecto, aplicarla y utilizarla en cualesquiera proyectos.</p>
<p>Una vez creado el <em>plugin</em> este se publica y comparte en un repositorio de Maven del que los proyectos que lo quieran usar simplemente han de incluir la URL del repositorio y la referencia al <em>plugin</em>.</p>
<h3 id="ejemplo-de-_plugin_-para-gradle">Ejemplo de <em>plugin</em> para Gradle</h3>
<p>Lo que hace este ejemplo es mediante código aplicar cambios a través de la clase <em>Project</em> que representa al proyecto de Gradle. A través de esta clase se añaden nuevos <em>plugins</em>, se configuran las extensiones y las tareas para aplicar la funcionalidad deseada en el <em>plugin</em>.</p>
<p>El ejemplo añade los <em>plugins</em> y configura sus extensiones para realizar comprobaciones estáticas de código a través de las herramientas PMD, Checkstyle, SpotBugs y sus <em>plugins</em> para Gradle. Además, la funcionalidad del <em>plugin</em> es generar un archivo con información de la versión del artefacto incluyendo su versión, fecha de construcción, <em>hash</em> del <em>commit</em> y número de <em>build</em> para conocer esta información del artefacto.</p>
<p>Incluir información variable en el artefacto que es diferente en función de la fecha de ejecución hace que la generación no sea reproducible, esto es, no genere exactamente el mismo binario dado que su contenido es diferente con cada <em>build</em> aunque el código no haya cambiado y solo lo haya hecho un archivo de configuración y únicamente ligeramente su contenido. Que la generación de los artefactos sean reproducibles tiene el beneficio de que el artefacto generado sea auditable por motivos de seguridad y es posible que esté libre de modificaciones diferentes del código empleado para la construcción.</p>
<h4 id="crear-un-_plugin_-de-gradle">Crear un <em>plugin</em> de Gradle</h4>
<p>Hay varias formas de desarrollar un <em>plugin</em> de Gradle, se puede desarrollar dentro de un proyecto existente o como un proyecto independiente, Gradle ofrece un comando para disponer de la estructura básica de un proyecto para el <em>plugin</em> rápidamente y de forma sencilla al igual que se realiza para disponer de una aplicación normal. En el archivo de construcción del <em>plugin</em> que genera Gradle incluye un <em>plugin</em> propio de Gradle necesario para desarrollar <em>plugins</em> de Gradle, <em>java-gradle-plugin</em>.</p>
<p>Los <em>plugins</em> de Gradle se crean proporcionando una implementación de la interfaz <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/Plugin.html">Plugin</a>, esta clase ofrece el método <em>apply</em> que Gradle invoca para que el <em>plugin</em> modifique el proyecto a través de la instancia de <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html">Project</a> que lo representa y se proporciona como argumento del método. La clase <em>Project</em> ofrece métodos para añadir nuevos <em>plugins</em> al proyecto, obtener los objetos que contienen los datos de las extensiones, permite añadir o modificar tareas existentes y crear dependencias entre las tareas. En el siguiente código se observan estas modificaciones en el proyecto en el <em>plugin</em> del ejemplo.</p>
<p>Dado que el <em>plugin</em> de ejemplo configura otros <em>plugins</em> existentes necesita de las clases de los <em>plugins</em> y de sus extensiones de modo que han de incluirse como una dependencia del <em>plugin</em> desarrollado en el archivo de construcción del <em>plugin</em>. El <em>plugin</em> también puede proporcionar sus propias clases de extensiones.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javagradleplugin</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.github.spotbugs.snom.SpotBugsExtension</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.github.spotbugs.snom.SpotBugsPlugin</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tools.ant.filters.ReplaceTokens</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.Plugin</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.Project</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.file.DuplicatesStrategy</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.java.archives.Manifest</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.plugins.JavaApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.plugins.quality.CheckstyleExtension</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.plugins.quality.CheckstylePlugin</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.plugins.quality.PmdExtension</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.plugins.quality.PmdPlugin</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.tasks.Copy</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.tasks.bundling.Jar</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavaGradlePlugin</span> <span class="kd">implements</span> <span class="n">Plugin</span><span class="o">&lt;</span><span class="n">Project</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">SPOTBUGS_EXCLUDE_RESOURCE</span> <span class="o">=</span> <span class="s">&#34;/spotbugs/spotbugs-exclude.xml&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">CHECKSTYLE_CONFIG_RESOURCE</span> <span class="o">=</span> <span class="s">&#34;/checkstyle/checkstyle.xml&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">CHECKSTYLE_SUPPRESSIONS_RESOURCE</span> <span class="o">=</span> <span class="s">&#34;/checkstyle/suppressions.xml&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">apply</span><span class="o">(</span><span class="n">Project</span> <span class="n">project</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">project</span><span class="o">.</span><span class="na">getPluginManager</span><span class="o">().</span><span class="na">apply</span><span class="o">(</span><span class="n">PmdPlugin</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">project</span><span class="o">.</span><span class="na">getPluginManager</span><span class="o">().</span><span class="na">apply</span><span class="o">(</span><span class="n">CheckstylePlugin</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">project</span><span class="o">.</span><span class="na">getPluginManager</span><span class="o">().</span><span class="na">apply</span><span class="o">(</span><span class="n">SpotBugsPlugin</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JavaGradlePluginExtension</span> <span class="n">javaGradlePluginExtension</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">create</span><span class="o">(</span><span class="s">&#34;version&#34;</span><span class="o">,</span> <span class="n">JavaGradlePluginExtension</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javaGradlePluginExtension</span><span class="o">.</span><span class="na">getVersionEnabled</span><span class="o">().</span><span class="na">convention</span><span class="o">(</span><span class="n">Boolean</span><span class="o">.</span><span class="na">FALSE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PmdExtension</span> <span class="n">pmdExtension</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">getByType</span><span class="o">(</span><span class="n">PmdExtension</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">pmdExtension</span><span class="o">.</span><span class="na">setToolVersion</span><span class="o">(</span><span class="s">&#34;6.44.0&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">pmdExtension</span><span class="o">.</span><span class="na">setConsoleOutput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">pmdExtension</span><span class="o">.</span><span class="na">setIgnoreFailures</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">pmdExtension</span><span class="o">.</span><span class="na">setRuleSets</span><span class="o">(</span><span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;category/java/bestpractices.xml&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CheckstyleExtension</span> <span class="n">checkstyleExtension</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">getByType</span><span class="o">(</span><span class="n">CheckstyleExtension</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">checkstyleExtension</span><span class="o">.</span><span class="na">setConfigFile</span><span class="o">(</span><span class="n">getFileFromResource</span><span class="o">(</span><span class="n">project</span><span class="o">,</span> <span class="n">CHECKSTYLE_CONFIG_RESOURCE</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">checkstyleExtension</span><span class="o">.</span><span class="na">setConfigProperties</span><span class="o">(</span><span class="n">Map</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;suppressionFile&#34;</span><span class="o">,</span> <span class="n">getFileFromResource</span><span class="o">(</span><span class="n">project</span><span class="o">,</span> <span class="n">CHECKSTYLE_SUPPRESSIONS_RESOURCE</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">checkstyleExtension</span><span class="o">.</span><span class="na">setMaxWarnings</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">checkstyleExtension</span><span class="o">.</span><span class="na">setMaxErrors</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpotBugsExtension</span> <span class="n">spotBugsExtension</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">getByType</span><span class="o">(</span><span class="n">SpotBugsExtension</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">spotBugsExtension</span><span class="o">.</span><span class="na">getToolVersion</span><span class="o">().</span><span class="na">convention</span><span class="o">(</span><span class="s">&#34;4.2.2&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">spotBugsExtension</span><span class="o">.</span><span class="na">getShowProgress</span><span class="o">().</span><span class="na">convention</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">spotBugsExtension</span><span class="o">.</span><span class="na">getIgnoreFailures</span><span class="o">().</span><span class="na">convention</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">spotBugsExtension</span><span class="o">.</span><span class="na">getExcludeFilter</span><span class="o">().</span><span class="na">convention</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">getFileFromResource</span><span class="o">(</span><span class="n">project</span><span class="o">,</span> <span class="n">SPOTBUGS_EXCLUDE_RESOURCE</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">project</span><span class="o">.</span><span class="na">getTasks</span><span class="o">().</span><span class="na">named</span><span class="o">(</span><span class="s">&#34;processResources&#34;</span><span class="o">,</span> <span class="n">Copy</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">configure</span><span class="o">(</span><span class="n">copy</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">copy</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="s">&#34;src/main/resources&#34;</span><span class="o">,</span> <span class="o">(</span><span class="n">itCopySpec</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">itCopySpec</span><span class="o">.</span><span class="na">setDuplicatesStrategy</span><span class="o">(</span><span class="n">DuplicatesStrategy</span><span class="o">.</span><span class="na">INCLUDE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">itCopySpec</span><span class="o">.</span><span class="na">from</span><span class="o">(</span><span class="s">&#34;src/main/resources&#34;</span><span class="o">,</span> <span class="o">(</span><span class="n">itFrom</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">itFrom</span><span class="o">.</span><span class="na">include</span><span class="o">(</span><span class="s">&#34;banner.txt&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">itFrom</span><span class="o">.</span><span class="na">exclude</span><span class="o">(</span><span class="s">&#34;version.properties&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">tokens</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokens</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;gradle.app.name&#34;</span><span class="o">,</span> <span class="n">project</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokens</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;gradle.version.version&#34;</span><span class="o">,</span> <span class="n">getPluginVersion</span><span class="o">(</span><span class="n">project</span><span class="o">).</span><span class="na">get</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokens</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;gradle.version.build&#34;</span><span class="o">,</span> <span class="n">getPluginVersion</span><span class="o">(</span><span class="n">project</span><span class="o">).</span><span class="na">get</span><span class="o">().</span><span class="na">getBuild</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokens</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;gradle.version.hash&#34;</span><span class="o">,</span> <span class="n">getPluginVersion</span><span class="o">(</span><span class="n">project</span><span class="o">).</span><span class="na">get</span><span class="o">().</span><span class="na">getHash</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokens</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;gradle.version.timestamp&#34;</span><span class="o">,</span> <span class="n">getPluginVersion</span><span class="o">(</span><span class="n">project</span><span class="o">).</span><span class="na">get</span><span class="o">().</span><span class="na">getTimestamp</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokens</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;gradle.version.string&#34;</span><span class="o">,</span> <span class="n">getPluginVersion</span><span class="o">(</span><span class="n">project</span><span class="o">).</span><span class="na">get</span><span class="o">().</span><span class="na">getString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokens</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;gradle.version.formatted-string&#34;</span><span class="o">,</span> <span class="n">getPluginVersion</span><span class="o">(</span><span class="n">project</span><span class="o">).</span><span class="na">get</span><span class="o">().</span><span class="na">getFormattedString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">itCopySpec</span><span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">Map</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;beginToken&#34;</span><span class="o">,</span> <span class="s">&#34;${&#34;</span><span class="o">,</span> <span class="s">&#34;endToken&#34;</span><span class="o">,</span> <span class="s">&#34;}&#34;</span><span class="o">,</span> <span class="s">&#34;tokens&#34;</span><span class="o">,</span> <span class="n">tokens</span><span class="o">),</span> <span class="n">ReplaceTokens</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">project</span><span class="o">.</span><span class="na">getTasks</span><span class="o">().</span><span class="na">named</span><span class="o">(</span><span class="s">&#34;jar&#34;</span><span class="o">,</span> <span class="n">Jar</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">configure</span><span class="o">(</span><span class="n">jar</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jar</span><span class="o">.</span><span class="na">manifest</span><span class="o">((</span><span class="n">Manifest</span> <span class="n">manifest</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">attributes</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;Class-Path&#34;</span><span class="o">,</span> <span class="n">project</span><span class="o">.</span><span class="na">getConfigurations</span><span class="o">().</span><span class="na">getByName</span><span class="o">(</span><span class="s">&#34;runtimeClasspath&#34;</span><span class="o">).</span><span class="na">getFiles</span><span class="o">().</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">it</span> <span class="o">-&gt;</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;files/%s&#34;</span><span class="o">,</span> <span class="n">it</span><span class="o">.</span><span class="na">getName</span><span class="o">())).</span><span class="na">collect</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34; &#34;</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">getByType</span><span class="o">(</span><span class="n">JavaApplication</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">getMainClass</span><span class="o">().</span><span class="na">isPresent</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">attributes</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;Main-Class&#34;</span><span class="o">,</span> <span class="n">project</span><span class="o">.</span><span class="na">getExtensions</span><span class="o">().</span><span class="na">getByType</span><span class="o">(</span><span class="n">JavaApplication</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">getMainClass</span><span class="o">().</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">attributes</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;App-Name&#34;</span><span class="o">,</span> <span class="n">project</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">getPluginVersion</span><span class="o">(</span><span class="n">project</span><span class="o">).</span><span class="na">isPresent</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">attributes</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;App-Version&#34;</span><span class="o">,</span> <span class="n">getPluginVersion</span><span class="o">(</span><span class="n">project</span><span class="o">).</span><span class="na">get</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">manifest</span><span class="o">.</span><span class="na">attributes</span><span class="o">(</span><span class="n">attributes</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">File</span> <span class="nf">getFileFromResource</span><span class="o">(</span><span class="n">Project</span> <span class="n">project</span><span class="o">,</span> <span class="n">String</span> <span class="n">resource</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">project</span><span class="o">.</span><span class="na">getResources</span><span class="o">().</span><span class="na">getText</span><span class="o">().</span><span class="na">fromUri</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="n">resource</span><span class="o">)).</span><span class="na">asFile</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">Version</span><span class="o">&gt;</span> <span class="nf">getPluginVersion</span><span class="o">(</span><span class="n">Project</span> <span class="n">project</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">project</span><span class="o">.</span><span class="na">getVersion</span><span class="o">()</span> <span class="k">instanceof</span> <span class="n">Version</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Optional</span><span class="o">.</span><span class="na">of</span><span class="o">((</span><span class="n">Version</span><span class="o">)</span> <span class="n">project</span><span class="o">.</span><span class="na">getVersion</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Optional</span><span class="o">.</span><span class="na">empty</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JavaGradlePlugin.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javagradleplugin</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.gradle.api.provider.Property</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">JavaGradlePluginExtension</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="n">Property</span><span class="o">&lt;</span><span class="n">Boolean</span><span class="o">&gt;</span> <span class="nf">getCheckstyleEnabled</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">Property</span><span class="o">&lt;</span><span class="n">Boolean</span><span class="o">&gt;</span> <span class="nf">getVersionEnabled</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JavaGradleExtension.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javagradleplugin</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.nio.charset.Charset</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.ZoneId</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.ZonedDateTime</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.time.format.DateTimeFormatter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.concurrent.TimeUnit</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Version</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">version</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">build</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">hash</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">timestamp</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Version</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="n">Collections</span><span class="o">.</span><span class="na">emptyMap</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Version</span><span class="o">(</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">properties</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">version</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">&#34;version&#34;</span><span class="o">,</span> <span class="s">&#34;0.0.0&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">build</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">&#34;build&#34;</span><span class="o">,</span> <span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="s">&#34;BUILD_NUMBER&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">hash</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">&#34;hash&#34;</span><span class="o">,</span> <span class="n">getGitHash</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">timestamp</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="s">&#34;timestamp&#34;</span><span class="o">,</span> <span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ofPattern</span><span class="o">(</span><span class="s">&#34;yyyy-MM-dd-HH-mm-ssX&#34;</span><span class="o">).</span><span class="na">format</span><span class="o">(</span><span class="n">ZonedDateTime</span><span class="o">.</span><span class="na">now</span><span class="o">(</span><span class="n">ZoneId</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;UTC&#34;</span><span class="o">))));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">build</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">build</span> <span class="o">=</span> <span class="s">&#34;0&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">hash</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">hash</span> <span class="o">=</span> <span class="s">&#34;0000000&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getVersion</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">version</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getVersionMajor</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">version</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&#34;.&#34;</span><span class="o">)[</span><span class="n">0</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getVersionMinor</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">version</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&#34;.&#34;</span><span class="o">)[</span><span class="n">1</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getVersionPatch</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">n</span> <span class="o">=</span> <span class="n">version</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&#34;.&#34;</span><span class="o">)[</span><span class="n">2</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getBuild</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">build</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getHash</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">hash</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getTimestamp</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">timestamp</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getString</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">strings</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;v%s&#34;</span><span class="o">,</span> <span class="n">version</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;b%s&#34;</span><span class="o">,</span> <span class="n">build</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;h%s&#34;</span><span class="o">,</span> <span class="n">hash</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;d%s&#34;</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">strings</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;-&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getFormattedString</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34; (%s)&#34;</span><span class="o">,</span> <span class="n">getString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">version</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getGitHash</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Process</span> <span class="n">process</span> <span class="o">=</span> <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="s">&#34;git log -n 1 --format=%h&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">process</span><span class="o">.</span><span class="na">waitFor</span><span class="o">(</span><span class="n">5000</span><span class="o">,</span> <span class="n">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">process</span><span class="o">.</span><span class="na">exitValue</span><span class="o">()</span> <span class="o">!=</span> <span class="n">0</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">String</span><span class="o">(</span><span class="n">process</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">().</span><span class="na">readAllBytes</span><span class="o">(),</span> <span class="n">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;UTF-8&#34;</span><span class="o">)).</span><span class="na">trim</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Version.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java-gradle-plugin&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;maven-publish&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">project</span><span class="o">.</span><span class="na">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javagradleplugin&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">project</span><span class="o">.</span><span class="na">version</span> <span class="o">=</span> <span class="s2">&#34;1.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">java</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="n">JavaVersion</span><span class="o">.</span><span class="na">VERSION_11</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">targetCompatibility</span> <span class="o">=</span> <span class="n">JavaVersion</span><span class="o">.</span><span class="na">VERSION_11</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gradlePluginPortal</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.github.spotbugs.snom:spotbugs-gradle-plugin:5.0.6&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.puppycrawl.tools:checkstyle:10.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;net.sourceforge.pmd:pmd:6.44.0&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">gradlePlugin</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javaGradlePlugin</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javagradleplugin&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementationClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javagradleplugin.JavaGradlePlugin&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Los <em>plugins</em> de Gradle se publican en un repositorio de Maven como cualquier librería o aplicación, Gradle compila el <em>plugin</em> y lo publica. Para desarrollar es posible publicar el <em>plugin</em> en el repositorio de Maven local.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew publishToMavenLocal&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-publishtomavenlocal.sh</span>
    </div>
</div>
<p>También es posible realizar teses unitarios y funcionales sobre el <em>plugin</em>, al utilizar la tarea de creación del proyecto del <em>plugin</em> Gradle crea unos ejemplos en los basarse para crear más.</p>
<h4 id="aplicar-el-_plugin_-de-gradle-a-un-proyecto">Aplicar el <em>plugin</em> de Gradle a un proyecto</h4>
<p>Una vez el <em>plugin</em> está en el repositorio de Maven usar el <em>plugin</em> y aplicarlo a un proyecto es exactamente igual que cualquier otro <em>plugin</em> de Gradle, basta incluirlo en la sección <em>plugins</em> con su identificador y su versión. Una vez aplicado el <em>plugin</em> como este añade otros <em>plugins</em> al ejecutar la tareas <em>tasks</em> que muestra las tareas existentes en el proyecto se observa que aunque los <em>plugins</em> de PMD, Checkstyle, SpotBugs han incluido sus tareas en el proyecto aunque no se hayan aplicado de forma explícita sino de forma transitiva a través del <em>plugin</em> propio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew tasks&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-tasks.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&gt; Task :tasks&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">------------------------------------------------------------&#10;</span></span><span class="line"><span class="cl">Tasks runnable from root project &#39;java-application&#39;&#10;</span></span><span class="line"><span class="cl">------------------------------------------------------------&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Application tasks&#10;</span></span><span class="line"><span class="cl">-----------------&#10;</span></span><span class="line"><span class="cl">run - Runs this project as a JVM application&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Build tasks&#10;</span></span><span class="line"><span class="cl">-----------&#10;</span></span><span class="line"><span class="cl">assemble - Assembles the outputs of this project.&#10;</span></span><span class="line"><span class="cl">build - Assembles and tests this project.&#10;</span></span><span class="line"><span class="cl">buildDependents - Assembles and tests this project and all projects that depend on it.&#10;</span></span><span class="line"><span class="cl">buildNeeded - Assembles and tests this project and all projects it depends on.&#10;</span></span><span class="line"><span class="cl">classes - Assembles main classes.&#10;</span></span><span class="line"><span class="cl">clean - Deletes the build directory.&#10;</span></span><span class="line"><span class="cl">jar - Assembles a jar archive containing the main classes.&#10;</span></span><span class="line"><span class="cl">testClasses - Assembles test classes.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Build Setup tasks&#10;</span></span><span class="line"><span class="cl">-----------------&#10;</span></span><span class="line"><span class="cl">init - Initializes a new Gradle build.&#10;</span></span><span class="line"><span class="cl">wrapper - Generates Gradle wrapper files.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Distribution tasks&#10;</span></span><span class="line"><span class="cl">------------------&#10;</span></span><span class="line"><span class="cl">assembleDist - Assembles the main distributions&#10;</span></span><span class="line"><span class="cl">distTar - Bundles the project as a distribution.&#10;</span></span><span class="line"><span class="cl">distZip - Bundles the project as a distribution.&#10;</span></span><span class="line"><span class="cl">installDist - Installs the project as a distribution as-is.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Documentation tasks&#10;</span></span><span class="line"><span class="cl">-------------------&#10;</span></span><span class="line"><span class="cl">javadoc - Generates Javadoc API documentation for the main source code.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Help tasks&#10;</span></span><span class="line"><span class="cl">----------&#10;</span></span><span class="line"><span class="cl">buildEnvironment - Displays all buildscript dependencies declared in root project &#39;java-application&#39;.&#10;</span></span><span class="line"><span class="cl">dependencies - Displays all dependencies declared in root project &#39;java-application&#39;.&#10;</span></span><span class="line"><span class="cl">dependencyInsight - Displays the insight into a specific dependency in root project &#39;java-application&#39;.&#10;</span></span><span class="line"><span class="cl">help - Displays a help message.&#10;</span></span><span class="line"><span class="cl">javaToolchains - Displays the detected java toolchains.&#10;</span></span><span class="line"><span class="cl">outgoingVariants - Displays the outgoing variants of root project &#39;java-application&#39;.&#10;</span></span><span class="line"><span class="cl">projects - Displays the sub-projects of root project &#39;java-application&#39;.&#10;</span></span><span class="line"><span class="cl">properties - Displays the properties of root project &#39;java-application&#39;.&#10;</span></span><span class="line"><span class="cl">tasks - Displays the tasks runnable from root project &#39;java-application&#39; (some of the displayed tasks may belong to subprojects).&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Verification tasks&#10;</span></span><span class="line"><span class="cl">------------------&#10;</span></span><span class="line"><span class="cl">check - Runs all checks.&#10;</span></span><span class="line"><span class="cl">spotbugsMain - Run SpotBugs analysis for the source set &#39;main&#39;&#10;</span></span><span class="line"><span class="cl">spotbugsTest - Run SpotBugs analysis for the source set &#39;test&#39;&#10;</span></span><span class="line"><span class="cl">test - Runs the test suite.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">To see all tasks and more detail, run gradlew tasks --all&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">To see more detail about a task, run gradlew help --task &lt;task&gt;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">BUILD SUCCESSFUL in 628ms&#10;</span></span><span class="line"><span class="cl">1 actionable task: 1 executed</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-tasks.out</span>
    </div>
</div>
<p>Ejecutando la <em>build</em> la tarea se genera el archivo como un recurso que se procesa al que se le realizan varias sustituciones con los valores que permite en tiempo de ejecución conocer información de la versión de la librería o aplicación, este archivo se incluye en el jar de la librería o aplicación y es posible acceder a él como un recurso más.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">app.version.name=app&#10;</span></span><span class="line"><span class="cl">app.version.version=1.0.0&#10;</span></span><span class="line"><span class="cl">app.version.build=0&#10;</span></span><span class="line"><span class="cl">app.version.hash=5f9b859&#10;</span></span><span class="line"><span class="cl">app.version.timestamp=2022-04-07-17-41-30Z&#10;</span></span><span class="line"><span class="cl">app.version.string=v1.0.0-b0-h5f9b859-d2022-04-07-17-41-30Z&#10;</span></span><span class="line"><span class="cl">app.version.formatted-string= (v1.0.0-b0-h5f9b859-d2022-04-07-17-41-30Z)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>version.properties</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaapplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Properties</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">inputStream</span> <span class="o">=</span> <span class="n">App</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/version.properties&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Properties</span> <span class="n">properties</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">properties</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">inputStream</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">properties</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;app.version.formatted-string&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>App.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&gt; Task :app:run&#10;</span></span><span class="line"><span class="cl">(v1.0.0-b0-h5f9b859-d2022-04-07-17-41-30Z)&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">BUILD SUCCESSFUL in 614ms&#10;</span></span><span class="line"><span class="cl">3 actionable tasks: 1 executed, 2 up-to-date</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.out</span>
    </div>
</div>
<p>Al ejecutar la tarea de <em>build</em> dado que se han incluido los <em>plugins</em> PMD, CheckStyle y Spotbugs sus tareas de validación se ejecutan y detectan los errores en los archivos del código fuente según las reglas de validación configuradas. En el código de ejemplo Checkstyle indica que hay el código no está formateado de forma apropiada siguiendo las convenciones establecidas para el proyecto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew build&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-build.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&gt; Task :app:checkstyleMain FAILED&#10;</span></span><span class="line"><span class="cl">[ant:checkstyle] [WARN] /home/picodotdev/Documentos/Software/personal/blog-ejemplos/GradlePlugin/JavaApplication/app/src/main/java/io/github/picodotdev/blogbitix/javaapplication/App.java:8:5: method def modifier en el nivel de sangrado 4 no está al nivel correcto, 2 [Indentation]&#10;</span></span><span class="line"><span class="cl">[ant:checkstyle] [WARN] /home/picodotdev/Documentos/Software/personal/blog-ejemplos/GradlePlugin/JavaApplication/app/src/main/java/io/github/picodotdev/blogbitix/javaapplication/App.java:9:9: method def el descendiente en el nivel de sangrado 8 no está al nivel correcto, 4 [Indentation]&#10;</span></span><span class="line"><span class="cl">[ant:checkstyle] [WARN] /home/picodotdev/Documentos/Software/personal/blog-ejemplos/GradlePlugin/JavaApplication/app/src/main/java/io/github/picodotdev/blogbitix/javaapplication/App.java:11:9: method def el descendiente en el nivel de sangrado 8 no está al nivel correcto, 4 [Indentation]&#10;</span></span><span class="line"><span class="cl">[ant:checkstyle] [WARN] /home/picodotdev/Documentos/Software/personal/blog-ejemplos/GradlePlugin/JavaApplication/app/src/main/java/io/github/picodotdev/blogbitix/javaapplication/App.java:12:9: method def el descendiente en el nivel de sangrado 8 no está al nivel correcto, 4 [Indentation]&#10;</span></span><span class="line"><span class="cl">[ant:checkstyle] [WARN] /home/picodotdev/Documentos/Software/personal/blog-ejemplos/GradlePlugin/JavaApplication/app/src/main/java/io/github/picodotdev/blogbitix/javaapplication/App.java:14:9: method def el descendiente en el nivel de sangrado 8 no está al nivel correcto, 4 [Indentation]&#10;</span></span><span class="line"><span class="cl">[ant:checkstyle] [WARN] /home/picodotdev/Documentos/Software/personal/blog-ejemplos/GradlePlugin/JavaApplication/app/src/main/java/io/github/picodotdev/blogbitix/javaapplication/App.java:16:5: method def rcurly en el nivel de sangrado 4 no está al nivel correcto, 2 [Indentation]&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">FAILURE: Build failed with an exception.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">* What went wrong:&#10;</span></span><span class="line"><span class="cl">Execution failed for task &#39;:app:checkstyleMain&#39;.&#10;</span></span><span class="line"><span class="cl">&gt; Checkstyle rule violations were found. See the report at: file:///home/picodotdev/Documentos/Software/personal/blog-ejemplos/GradlePlugin/JavaApplication/app/build/reports/checkstyle/main.html&#10;</span></span><span class="line"><span class="cl">  Checkstyle files with violations: 1&#10;</span></span><span class="line"><span class="cl">  Checkstyle violations by severity: [warning:6]&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">* Try:&#10;</span></span><span class="line"><span class="cl">&gt; Run with --stacktrace option to get the stack trace.&#10;</span></span><span class="line"><span class="cl">&gt; Run with --info or --debug option to get more log output.&#10;</span></span><span class="line"><span class="cl">&gt; Run with --scan to get full insights.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">* Get more help at https://help.gradle.org&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">BUILD FAILED in 1s&#10;</span></span><span class="line"><span class="cl">7 actionable tasks: 5 executed, 2 up-to-date</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-build.out</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GradlePlugin">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew build</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/03/novedades-de-java-18/</id>
        <title>Novedades de Java 18</title>
        <updated>2022-03-31T20:00:00+01:00</updated>
        <published>2022-03-31T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/03/novedades-de-java-18/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las novedades de Java 18 no añaden nada en el lenguaje pero sí incorpora algunas relevantes en la plataforma como el uso de UTF-8 por defecto, una utilidad de línea de comandos para disponer de un servidor web simple, poder añadir fragmentos de código en los comentarios de la documentación Javadoc así como el marcado para su eliminación en futuras versiones de la finalización de objetos. También publican otras novedades en incubación, nuevas versiones en vistas previa de otras características se publicarán de forma definitiva en siguientes versiones y otros numerosos cambios menores.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Las mejoras incrementales se siguen añadiendo en cada nueva versión lanzada cada seis meses. En marzo de 2022 ha sido publicada la versión de Java 18 como siguiente versión después de Java 17 que es una versión con soporte extendido o LTS. Seguramente no muchos van a poder utilizar esta nueva versión por restricciones en los proyectos que seguirán usando versiones ya consideradas bastante antiguas incluyendo Java 8 y más en los casos que utilizan versiones anteriores. Por otro lado, otra parte de usuarios quizá esperen a la siguiente versión LTS para actualizar las aplicaciones en el caso de que ya estén utilizando Java 17.</p>
<p>La lista de características de Java 18 no es muy amplia pero hay algunas destacadas.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="introducción">Introducción</h3>
<p>Con el paso de los meses muchas librerías y entornos de desarrollo irán publicando nuevas versiones compatibles con Java 18 y añadiendo soporte. Cuatro de las características más destacada son la utilización de la codificación de caracteres UTF-8 por defecto, la inclusión de un pequeño servidor web, soporte para añadir fragmentos de código en la documentación Javadoc y finalmente marcar para ser eliminada en una siguiente versión la finalización de objetos. Otras mejoras son nuevas vistas previas de características que están disponibles para obtener comentarios pero que en una siguiente versión podrían cambiar.</p>
<ul>
<li><a href="https://openjdk.java.net/projects/jdk/18/">Características de Java 18</a></li>
<li><a href="https://jdk.java.net/18/release-notes">Notas de publicación de Java 18</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/18/">Documentación de Java 18</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/18/docs/api/index.html">Documentación Javadoc de Java 18</a></li>
<li><a href="https://blogs.oracle.com/javamagazine/post/java-jdk-18-generally-available">JavaMagazine: Java 18 is here: 9 JEPs with core library improvements and updates</a></li>
</ul>
<p>Las mejoras incluidas en esta versión son:</p>
<ul>
<li>400: <a href="https://openjdk.java.net/jeps/400">UTF-8 by Default</a></li>
<li>408: <a href="https://openjdk.java.net/jeps/408">Simple Web Server</a></li>
<li>413: <a href="https://openjdk.java.net/jeps/413">Code Snippets in Java API Documentation</a></li>
<li>416: <a href="https://openjdk.java.net/jeps/416">Reimplement Core Reflection with Method Handles</a></li>
<li>417: <a href="https://openjdk.java.net/jeps/417">Vector API (Third Incubator)</a></li>
<li>418: <a href="https://openjdk.java.net/jeps/418">Internet-Address Resolution SPI</a></li>
<li>419: <a href="https://openjdk.java.net/jeps/419">Foreign Function &amp; Memory API (Second Incubator)</a></li>
<li>420: <a href="https://openjdk.java.net/jeps/420">Pattern Matching for switch (Second Preview)</a></li>
<li>421: <a href="https://openjdk.java.net/jeps/421">Deprecate Finalization for Removal</a></li>
</ul>
<p>En los siguientes vídeos hace una explicación de estas nuevas características.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/Nu225G7pMHw" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/5GfE1-vEl1A" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>Con el nuevo calendario de publicaciones se observa claramente que los desarrolladores pueden predecir de forma más mucho fiable cuando se publicará una nueva versión. Se observa que el tiempo entre versiones se ha reducido considerablemente respecto a lo que tardaron las versiones Java 6 y 7 y se observa la incorporación de novedades de forma constante.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/03/novedades-de-java-18/images/java-releases_hu5c2d03569c43c17cbc0d1487d1032ffa_144383_2560x1440_fit_q90_box.jpg" data-gallery="" title="Publicaciones de Java"><img src="https://picodotdev.github.io/blog-bitix/2022/03/novedades-de-java-18/images/java-releases_hu5c2d03569c43c17cbc0d1487d1032ffa_144383_650x450_fit_q90_box.jpg" width="650" height="309" alt="Publicaciones de Java" title="Publicaciones de Java"  class="lozad "></a></p>
<figcaption>Publicaciones de Java</figcaption>
</figure>
</div>
<h3 id="nuevas-características">Nuevas características</h3>
<h4 id="codificación-de-caracteres-utf-8-por-defecto">Codificación de caracteres UTF-8 por defecto</h4>
<p>Las operaciones que hacían entrada y salida como en el caso del sistema de archivos se utilizaban por defecto si no se indicaba uno explícitamente la codificación del sistema operativo. Dado que cada sistema operativo es capaz de definir su codificación de caracteres esto creaba algunas inconsistencias cuando las aplicaciones se ejecutan en diferentes sistemas operativos. Ahora en caso de que no se indique una codificación de caracteres se utiliza UTF-8 ofreciendo una mejor consistencia entre las diferentes plataformas.</p>
<h4 id="servidor-web-simple">Servidor web simple</h4>
<p>Se añade una utilidad de línea de comandos y una API para iniciar un sencillo servidor web para archivos estáticos. La finalidad es que no haya que recurrir a utilidades externas al JDK y sirva para hacer pruebas. No es su intención reemplazar servidores web más completos como <a href="https://httpd.apache.org/">Apache</a> o <a href="https://nginx.org/">Nginx</a> ni ofrece funcionalidades dinámicas como un contenedor de <em>servlets</em> como <a href="https://tomcat.apache.org/">Tomcat</a>.</p>
<p>Dado que es un servidor web simple tiene algunas limitaciones, como que solo soporta el protocolo HTTP/1.1, no soporta el protocolo seguro HTTPS, solo soporta operaciones idempotentes de los verbos HEAD y GET devolviendo el resto de versos un código de error 501 <em>Not Implemented</em> o 405 <em>Not Allowed Response</em>. Algunos MIME types son configurados de forma automática como los archivos con extensión <em>html</em> que son servidos con la cabecera de contenido <em>text/html</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">$</span> <span class="n">jwebserver</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>jwebserver.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Binding</span> <span class="n">to</span> <span class="n">loopback</span> <span class="n">by</span> <span class="k">default</span><span class="o">.</span> <span class="n">For</span> <span class="n">all</span> <span class="n">interfaces</span> <span class="n">use</span> <span class="s">&#34;-b 0.0.0.0&#34;</span> <span class="n">or</span> <span class="s">&#34;-b ::&#34;</span><span class="o">.</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Serving</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">picodotdev</span> <span class="n">and</span> <span class="n">subdirectories</span> <span class="n">on</span> <span class="n">127</span><span class="o">.</span><span class="na">0</span><span class="o">.</span><span class="na">0</span><span class="o">.</span><span class="na">1</span> <span class="n">port</span> <span class="n">8000</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">URL</span> <span class="n">http</span><span class="o">:</span><span class="c1">//127.0.0.1:8000/&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>jwebserver.out</span>
    </div>
</div>
<p>Además de la línea de comandos se ofrece una API para iniciar el servidor web mediante código.</p>
<ul>
<li><a href="https://inside.java/2021/12/06/working-with-the-simple-web-server/">Working with the Simple Web Server</a></li>
</ul>
<h4 id="fragmentos-de-código-en-comentarios-javadoc">Fragmentos de código en comentarios Javadoc</h4>
<p>Algunos de los comentarios de Javadoc incluyen ejemplos de código. Hasta ahora los fragmentos de código insertaban con el <em>taglet</em> <em>@code</em> que tenía varias deficiencias como no ofrecer resaltado de sintaxis, no poder incluir fragmentos de código de archivos existentes con lo que puede quedar obsoleto y no poder hacer pruebas unitarias sobre este código con lo que podría no funcionar.</p>
<p>Se añade el <em>taglet</em> <em>@snippet</em> que permite incluir fragmentos o <em>snippets</em> de código en los comentarios de Javadoc, con resaltado de sintaxis y soporte para acceder a los <em>taglets</em> para procesar el código de la anotación. La anotación permite incluir en los comentarios de Javadoc regiones de archivos externos y aplicar transformaciones en el contenido a incorporar en el Javadoc. Pudiendo añadir fragmentos de código de archivos externos y pudiendo realizar transformaciones no hace falta copiar código y pegar código en los comentarios Javadoc sino que los fragmentos de código se extraen directamente de los archivos de código fuente.</p>
<p>Además se ofrece una API para acceder a esos fragmentos de código pudiendo hacer pruebas unitarias del código incluido en el Javadoc, esto no es solo para los desarrolladores del JDK sino también para cualquier programador que añada fragmentos de su código Java en la documentación Javadoc.</p>
<p>Los fragmentos de código no están limitados a archivos de código Java sino que también es posible incluir otros formatos utilizados comúnmente en aplicaciones Java como archivos <em>properties</em>,  <em>html</em> u otros. En esta guía se detalla como usar los fragmentos de código con ejemplos de código.</p>
<ul>
<li><a href="https://docs.oracle.com/en/java/javase/18/code-snippet/index.html">Programmer&rsquo;s Guide to Snippets</a></li>
</ul>
<h4 id="reimplementación-de-la-reflexión-con-manejadores-de-métodos">Reimplementación de la reflexión con manejadores de métodos</h4>
<p>Se reimplementan varias funcionalidades relacionadas con la reflexión utilizando los manejadores de eventos con la intención de facilitar el mantenimiento del JDK. Los <em>MethodHandlers</em> ofrecen una alternativa a la reflexión con mejor rendimiento a la vez que es más legible. Es un cambio interno más para los desarrolladores del JDK que para los usuarios.</p>
<ul>
<li><a href="https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/lang/invoke/MethodHandles.html">MethodHandles</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/lang/invoke/MethodHandle.html">MethodHandle</a></li>
</ul>
<h4 id="proveedor-para-resolver-direcciones-ip">Proveedor para resolver direcciones IP</h4>
<p>Hasta ahora el JDK utilizaba el mecanismo del sistema operativo para resolver direcciones IP. Este es compartido por todas las aplicaciones y la operación de resolución es bloqueante que es un problema para la incorporación de los <em>threads</em> ligeros del <a href="http://openjdk.java.net/projects/loom/">project Loom</a>. Se ha añadido un mecanismo extensible para proporcionar otras formas de resolución y soportar nuevos protocolos como DNS sobre QUIC, TLS y HTTPS. Ahora las aplicaciones tiene más control sobre el mecanismo de resolución y es útil en el contexto de pruebas automatizadas.</p>
<h3 id="nuevas-características-en-vista-previa">Nuevas características en vista previa</h3>
<p>Como ya es habitual en el JDK se van incluyendo algunas características en modo vista previa que pueden ser utilizadas pero que en una siguiente versión y el código que las usen deberá ser modificado. Se ofrecen para que los usuarios puedan experimentar con ellas y los desarrolladores obtengan comentarios y si es necesario hacer cambios en siguientes versiones.</p>
<h4 id="vector-api">Vector API</h4>
<p>Se proporciona una nueva versión de la Vector API que permite aprovechar las instrucciones SIMD de los procesadores con una API de Java común  para todas las arquitecturas de procesadores. Se aprovechan las características disponibles de los procesadores y en aquellos que no tengan alguna se ofrece un modo de funcionamiento degradado.</p>
<p>En esta nueva versión se soportan las instrucciones <em>Scalar Vector Extension</em> (SVE) de la plataforma <a href="https://www.arm.com/">ARM</a>. También se mejora el rendimiento de las operaciones que aceptan enmascaramiento en las arquitecturas hardware que soportan enmascaramiento.</p>
<h4 id="_foreign-function--memory-api_"><em>Foreign Function &amp; Memory API</em></h4>
<p>Esta API permite acceder a memoria de procesos externos y utilizar librerías programadas en otros lenguajes como una alternativa más fácil de usar, de mayor rendimiento, más general para diferentes arquitecturas y más simple que la anterior alternativa con JNI. En esta nueva versión se mejora la API para soportar y facilitar operaciones con diferentes tipos y accesos a memoria.</p>
<h3 id="_pattern-matching_-para-las-sentencias-_switch_"><em>Pattern Matching</em> para las sentencias <em>switch</em></h3>
<p>El <em>parttern matching</em> en las sentencias <em>switch</em> permite al compilador comprobar de la expresión del <em>switch</em> contra los casos de la expresión del <em>switch</em>. En esta nueva revisión de esta característica el compilador lanza un error en caso de que un patrón domine al siguiente, sea más general siempre se cumpla antes que uno menos general. Ahora también el compilador es más preciso al comprobar la completitud de todos casos del <em>switch</em> en las clases <em>sealed</em>.</p>
<h3 id="otros-cambios">Otros cambios</h3>
<h4 id="finalización-de-objetos-marcado-para-ser-eliminado">Finalización de objetos marcado para ser eliminado</h4>
<p>Java es un lenguaje que ha ofrecido recolección de basura desde las primeras versiones. Los programadores nunca han tenido que liberar la memoria de los objetos de forma explícita sino que de esta tarea se encarga la máquina virtual de Java. Pero también Java desde las primeras versiones ha ofrecido un mecanismo para la finalización de objetos que el tiempo ha demostrado que tiene varios fallos de diseño que no lo hacen útil y se desaconseja su utilización.</p>
<p>Algunos fallos de su diseño son que tiene una latencia impredecible y arbitraria sin garantía de que la finalización del objeto se realice. Las acciones de finalización no tienen ninguna restricción pudiendo revivir una referencia de objeto. Siempre está activo para cada instancia de una clase se use o no, ni se puede cancelar. Tampoco hay un orden predefinido en un entorno multihilo de modo que la ejecución de la finalización se puede ejecutar en cualquier orden.</p>
<p>Por los defectos anteriores la eliminación de la finalización de objetos en Java ha sido algo pendiente de realizar, en esta versión de Java aunque no se elimina se marca para la eliminación en versiones futuras de Java de modo que los que lo usen tengan tiempo de actualizar sus librerías y aplicaciones.</p>
<p>Esto solo impactará a algunos usuarios que realicen tareas avanzadas en las que necesiten la finalización de objetos, no es algo que en circunstancias normales se use. La alternativa a la finalización de objetos es usar la sentencia <em>try-with-resources</em> y en los objetos que tengan un ámbito mayor de vida utilizar la clase <a href="https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/lang/ref/Cleaner.html">Cleaner</a> que permite asociar acciones de finalización a una referencia de objeto cuando esta se convierte en una <a href="https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/lang/ref/PhantomReference.html">referencia <em>phantom</em></a>.</p>
<h4 id="otros-cambios-1">Otros cambios</h4>
<p>Los anteriores son los cambios más destacados de Java 18 pero otro buen número de cambios menores e internos en el JDK. En las notas de publicación se incluye una lista detallada de todos.</p>
<p>Estos son artículos que también hacen resúmenes de las novedades de Java 18.</p>
<ul>
<li><a href="https://blogs.oracle.com/java/post/the-arrival-of-java-18">The Arrival of Java 18</a></li>
<li><a href="https://www.oracle.com/news/announcement/oracle-releases-java-18-2022-03-22/">Oracle Announces Java 18</a></li>
<li><a href="https://www.infoworld.com/article/3630510/jdk-18-the-new-features-in-java-18.html">JDK 18: The new features in Java 18</a></li>
<li><a href="https://blog.jetbrains.com/idea/2022/03/java-18-features-support/">Java 18 Features Support (IntelliJ)</a></li>
<li><a href="https://seanjmullan.org/blog/2022/03/23/jdk18">JDK 18 Security Enhancements</a></li>
<li><a href="https://inside.java/2022/03/22/podcast-023/">Episode 23 “Java 18 is Here!”</a></li>
<li><a href="https://www.itprotoday.com/programming-languages/java-18-brings-new-features-accelerate-software-development">Java 18 Brings New Features to Accelerate Software Development</a></li>
</ul>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/03/detectar-errores-y-comprobar-la-sintaxis-de-los-scripts-de-bash/</id>
        <title>Detectar errores y comprobar la sintaxis de los scripts de Bash</title>
        <updated>2022-03-24T22:00:00+01:00</updated>
        <published>2022-03-24T22:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/03/detectar-errores-y-comprobar-la-sintaxis-de-los-scripts-de-bash/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El lenguaje de <em>scripting</em> Bash permite crear sencillos y no tan sencillos <em>scripts</em> para automatizar tareas del sistema o funciones. Dado que un <em>script</em> de Bash se interpreta no se compila un error no se detecta hasta llegar a la línea con el error que puede ser en la mitad del <em>script</em> dejando la tarea sin finalizar correctamente. Para evitar errores antes de la ejecución del <em>script</em> Bash ofrece varias opciones.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>A pesar de los lenguajes interpretados como <a href="https://www.python.org/">Python</a> o <a href="https://www.groovy-lang.org/">Groovy</a>, los <em>scripts</em> de <a href="https://es.wikipedia.org/wiki/Bash">Bash</a> siguen siendo muy útiles e incluso más adecuados como herramienta en algunas tareas. Python y Groovy son lenguajes de programación de propósito general capaces de realizar tareas muy complejas al mismo tiempo que su código sigue siendo mantenible y legible. Ambos lenguajes son interpretados por lo que no requieren realizar un paso previo de compilación que hacen fácil tener un <em>script</em> sencillo en poco tiempo pero que suponen un problema al realizar modificaciones por introducir errores de compilación que no se manifiestan hasta llegar a la línea de código errónea.</p>
<p>Bash es un intérprete de comandos que permite ejecutar <em>scripts</em>, Bash está orientado al propósito de ejecutar comandos del sistema, obtener sus códigos de retorno, la salida de los comandos, y permitir ciertas expresiones que aunque no llegan a la capacidad de los lenguajes de propósito general permite realizar bucles, condicionales, crear funciones con argumentos y tener variables.</p>
<p>Un <em>script</em> de Bash grande es un problema ya que al ser interpretado también ocurre que hasta no se ejecuta la línea del <em>script</em> se manifieste el error. Si la tarea se queda a medias y no termina correctamente sobretodo cuando hay acciones que realizan modificaciones dejan el sistema en un estado inconsistente que no permiten reejecutar el <em>script</em> una vez corregido su error.</p>
<p>Bash ofrece varias opciones para capturar algunos de los errores en la ejecución de los <em>scripts</em>. Algunas de estas opciones las he utilizado en el <a href="https://github.com/picodotdev/alis/"><em>script</em> de instalación de Arch Linux</a> que está basado en Bash. El <em>script</em> tiene un tamaño de unas 3K+ líneas de código es fácil introducir un error, ya que no tengo tiempo para probar y menos justo el caso en el que se produce el error por la cantidad de opciones posibles que permite de configuración.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="opciones-para-detectar-errores">Opciones para detectar errores</h3>
<p>Bash permite establecer varias opciones de ejecución. La opción <em>-e</em> permite detener el <em>script</em> en cuanto un comando se ejecuta y devuelve un código de error distinto de cero que como convención indica que el comando se ejecutó con algún error, un valor distinto de cero significa un código de error o código de estado que tiene un significado que indica el motivo. Otra opción, con <em>-u</em> permite detener el <em>script</em> cuando una variable de entorno intenta evaluar su valor y la variable aún no está definida, continuar sin el valor adecuado supone probablemente que el <em>script</em> realiza acciones incorrectas.</p>
<p>Por defecto al ejecutar un <em>script</em> este solo genera como resultado la salida de los comandos que ejecuta, para depurar los <em>scripts</em> o ver que comandó están ejecutando la opción <em>-x trace</em> emite el comando ejecutado que permite ver el valor de los argumentos del comando y ver qué valores han tomado los argumentos de las variables de ese comando.</p>
<h3 id="opciones-de-bash-para-comprobar-un-_script_">Opciones de Bash para comprobar un <em>script</em></h3>
<p>Otra forma de probar un <em>script</em> es ejecutar las líneas del <em>script</em> pero sin ejecutar los comandos de esas líneas. La opción <em>-n</em> permite ejecutar un <em>script</em> sin ejecutar los comandos. Esto tiene la parte buena de que los comandos no se ejecutan con las posibles acciones de modificación. Para algunos <em>scripts</em> esto es una forma de probarlos con ciertas garantías de que funciona, para los complejos no es suficiente.</p>
<p>Dado que la opción <em>-n</em> no ejecuta los comandos tampoco se obtienen los valores correctos de modo que la línea de ejecución seguramente no sea la misma en el caso de haber sentencias condicionales, bucles o llamadas a funciones. En realidad, lo ideal para probar un <em>script</em> es establecer la opción <em>-n</em> solo para aquellos comandos que realizan acciones de modificación, los comandos que realizan acciones para obtener datos al no realizar modificaciones y ser inocuos se pueden ejecutar sin nin problema. De este modo, desactivando la ejecución únicamente de los comandos de modificación es posible probar una mayor parte del <em>script</em>.</p>
<p>La opción se puede activar en la ejecución del <em>script</em> dentro del <em>script</em> cambiando el valor de la opción para desactivar la ejecución de los comandos con <em>set -n</em> o volver a activar la ejecución de los comandos <em>set +n</em>. En este ejemplo el comando que emite el se ejecuta y su salida en la consola pero el comando <em>ls</em> no se ejecuta, ni siquiera sale en las trazas que genera <em>-x xtrace</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">set</span> -eu&#10;</span></span><span class="line"><span class="cl"><span class="nb">set</span> -x xtrace&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">pwd</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">set</span> -n&#10;</span></span><span class="line"><span class="cl">ls&#10;</span></span><span class="line"><span class="cl"><span class="nb">set</span> +n</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>test.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">+ pwd&#10;</span></span><span class="line"><span class="cl">/home/picodotdev/Descargas/Backup&#10;</span></span><span class="line"><span class="cl">+ set -n</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>test.out</span>
    </div>
</div>
<h3 id="programa-para-validar-la-sintaxis-de-un-_script_-de-bash">Programa para validar la sintaxis de un <em>script</em> de Bash</h3>
<p>Las opciones anteriores permiten validar los <em>scripts</em> de Bash en buena parte pero tienen limitaciones y dependiendo del código del <em>script</em> quizá no generen ningún error un <em>script</em> que en realidad tiene errores. Para una validación más completa la utilidad <a href="https://www.shellcheck.net/">shellcheck</a> realiza una validación que es capaz de detectar una mayor cantidad de errores, de forma más precisa y más sencilla. <em>shellcheck</em> realiza comprobaciones adicionales que se basan en entender la sintaxis de Bash y comprobar que el <em>script</em> tiene una sintaxis válida acorde a la definición del lenguaje.</p>
<p>Incluso en la web de <em>shellcheck</em> es posible realizar la validación sin necesidad de instalar el comando en el sistema local. Aún con el mejor esfuerzo que hace <em>shellcheck</em> por detectar errores algunos errores se deben a argumentos, opciones de comandos que son erróneas o argumentos con valores inválidos, <em>shellcheck</em> comprueba que la sintaxis del <em>script</em> sea válido pero sigue habiendo casos que en tiempo de ejecución se manifiestan como errores que en tiempo de validación no es posible detectar.</p>
<p>Para usarlo como comando en el sistema local se usa el siguiente comando para lo que es necesario instalar el correspondiente paquete de la distribución usada, en <a href="https://www.archlinux.org/">Arch Linux</a> el paquete es <a href="https://archlinux.org/packages/community/x86_64/shellcheck/">shellcheck</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ shellcheck alis.sh&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>shellcheck.sh</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html">Bash The Set Builtin</a></li>
<li><a href="https://www.baeldung.com/linux/validate-bash-script">Check the Syntax of a Bash</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/03/cambiar-el-comportamiento-de-la-aplicacion-con-configuracion-anotaciones-y-condicionales-en-spring-boot/</id>
        <title>Cambiar el comportamiento de la aplicación con configuración, anotaciones y condicionales en Spring Boot</title>
        <updated>2022-03-10T20:00:00+01:00</updated>
        <published>2022-03-10T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/03/cambiar-el-comportamiento-de-la-aplicacion-con-configuracion-anotaciones-y-condicionales-en-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Aparte de un sistema de configuración muy flexible para proporcionar configuración de diferentes fuentes, Spring permite cambiar el comportamiento de la aplicación en base a los valores resueltos de las propiedades de configuración. Mediante configuración y sin realizar cambios en el código fuente el contenedor de inversión de dependencias determina las instancias y sus dependencias que crea.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p>Programar sobre interfaces permite crear varias implementaciones diferentes y cambiar de una a otra sin cambiar ninguna de las clases que usan la interfaz. Una implementación puede ser para persistir o recuperar datos de una base de datos relacional como <a href="https://www.postgresql.org/">PostgreSQL</a> o usando la misma interfaz guardar y recuperar los datos en una base de datos NoSQL como <a href="https://www.mongodb.com/">MongoDB</a>, otro ejemplo es una interfaz de almacenamiento para guardar el contenido de un archivo en el sistema de archivos local o cambiando la implementación guardar los archivos en un sistema de almacenamiento en al nube.</p>
<p>Aunque los diferentes entornos de la aplicación en que se ejecuta son conocidos sigue siendo útil programar sobre interfaces, quizá en el entorno de producción se usa un almacenamiento en la nube pero en tiempo de desarrollo no es posible y es más fácil usar una implementación para guardar el contenido en el sistema de archivos local utilizando la misma interfaz que representa el sistema de almacenamiento. Con una interfaz la implementación queda encapsulada y cada sistema de almacenamiento tendrá la suya. También es útil para empezar a desarrollar con una implementación sencilla en memoria o en el sistema de archivos local y una vez en el despliegue en un entorno de pruebas o producción crear nuevas implementaciones de las interfaces adecuados para esos entornos.</p>
<p>Con varias implementaciones de las interfaces es necesario seleccionar de alguna forma que implementación en concreto a usar de entre las disponibles. En el entorno local se usará la implementación en memoria o el sistema de archivos local cuando en el entorno de producción se usará el almacenamiento en el sistema de almacenamiento de objetos del proveedor de la nube, en <a href="https://aws.amazon.com/es/s3/">Amazon es S3</a> y en <a href="https://cloud.google.com/storage/">Google Cloud es Storage</a>. La selección de la implementación a usar es recomendable realizarla en base a configuración en tiempo de ejecución con la intención de evitar de que solo cambie la configuración y no el código de modo que el mismo artefacto ejecutable sea el mismo en todos los entornos.</p>
<p>El <em>framework</em> <a href="https://spring.io/">Spring</a> proporciona un mecanismo muy flexible para proporcionar y sobrescribir la configuración de la aplicación con varias fuentes de propiedades y una prioridad entre ellas del que coger el valor en caso de que en alguna esté presente la propiedad, ya sea en un archivo dentro del artefacto ejecutable, en un archivo externo, mediante propiedades del sistema o variables de entorno entre otras formas.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/12/configuracion-de-una-aplicacion-con-spring-boot-y-configuracion-centralizada-con-spring-cloud-config/">Configuración de una aplicación con Spring Boot y configuración centralizada con Spring Cloud Config</a></li>
</ul>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="anotaciones-y-condicionales-para-crear-_beans_">Anotaciones y condicionales para crear <em>beans</em></h3>
<p>Una de las funcionalidades proporcionadas por Spring es el contenedor de <em>beans</em> que realiza la construcción de las instancias mediante la inyección de dependencias. Mediante la inyección de dependencias la aplicación ya no es responsable de realizar la creación de la instancias sino que esta tarea es delegada al contenedor de <em>beans</em> que es capaz de elegir las implementaciones según diferentes condiciones y valores. A través del los perfiles de inicio de la aplicación, valores de configuración, de anotaciones y mediante un lenguaje de expresiones el contenedor de <em>beans</em> crea las instancias de las implementaciones de las interfaces deseadas según la configuración proporcionada a la aplicación en tiempo de ejecución.</p>
<p>En Spring los <em>beans</em> se definen con las siguientes anotaciones:</p>
<ul>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Bean.html">@Bean</a>: se aplica sobre un método e indica que el método devuelve una instancia del tipo de retorno para que el contenedor la proporcione como dependencia a otra instancia que tenga como dependencia la del tipo devuelto.</li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Component.html">@Component</a>: permite definir una clase para que el contenedor cree una instancias de la clase y procese sus anotaciones cuando necesite proporcionar una instancia de la clase  como dependencia.</li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Controller.html">@Controller</a>, <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Service.html">@Service</a>, <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Repository.html">@Repository</a>: estas anotaciones son especializaciones más semánticas de la anotación <em>Component</em>. Tienen el mismo comportamiento que la anotación <em>Component</em>.</li>
</ul>
<p>En los sitios en los que se pueden aplicar las anotaciones anteriores es posible aplicar las siguientes anotaciones para que las instancias de esos <em>beans</em> se añadan al contenedor de forma condicional. Además de las anotaciones condicionales más importantes indicadas en esta lista en el paquete <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/boot/autoconfigure/condition/package-summary.html">org.springframework.boot.autoconfigure.condition</a> hay unas cuantas más.</p>
<ul>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Profile.html">@Profile</a>: en caso de que el perfil indicado coincida con alguno de los perfiles de la aplicación el <em>bean</em> se añade al contenedor.</li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.html">@ConditionalOnProperty</a>: crea la instancia de forma condicional en base a una propiedad de configuración.</li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/condition/ConditionalOnBean.html">@ConditionalOnBean</a>: crea la instancia de forma condicional en base a la existencia de una instancia de una interfaz.</li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/condition/ConditionalOnClass.html">@ConditionalOnClass</a>: crea la instancia de forma condicional en base a la existencia de una clase.</li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.html">@ConditionalOnMissingBean</a>: crea la instancia de forma condicional cuando no existe de una instancia de una interfaz.</li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/condition/ConditionalOnExpression.html">@ConditionalOnExpression</a>: mediante un <a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#expressions">lenguaje de expresiones</a> es posible crear condiciones complejas con las que decidir si una instancia de un <em>bean</em> se crea o no.</li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/condition/ConditionalOnResource.html">@ConditionalOnResource</a>: crea una instancia de forma condicional cuando existe un recurso en el <em>classpath</em>.</li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Primary.html">@Primary</a>: en caso de que a través de varias anotaciones sea posible construir una instancia con la misma interfaz este método permite eliminar la ambigüedad seleccionado la instancia donde se aplica esta anotación. Solo es posible aplicar la anotación <em>Primary</em> sobre la misma interfaz.</li>
</ul>
<p>Además de las anteriores anotaciones proporcionadas por Spring es posible crear anotaciones condicionales propias implementando una clase de la interfaz <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Condition.html">Condition</a> y usando la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Conditional.html">Conditional</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Conditional</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.conditional.OnLinuxCondition</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.conditional.OperatingSystem</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Beans</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Conditional</span><span class="o">(</span><span class="n">OnLinuxCondition</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OperatingSystem</span> <span class="nf">linuxSystemBean</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">OperatingSystem</span><span class="o">(</span><span class="s">&#34;Linux&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ConditionalOnMissingBean</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="n">OperatingSystem</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OperatingSystem</span> <span class="nf">windowsSystemBean</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">OperatingSystem</span><span class="o">(</span><span class="s">&#34;Other&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Beans.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.conditional</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Condition</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.ConditionContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.core.type.AnnotatedTypeMetadata</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OnLinuxCondition</span> <span class="kd">implements</span> <span class="n">Condition</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">matches</span><span class="o">(</span><span class="n">ConditionContext</span> <span class="n">context</span><span class="o">,</span> <span class="n">AnnotatedTypeMetadata</span> <span class="n">metadata</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;os.name&#34;</span><span class="o">).</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;Linux&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>OnLinuxCondition.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.conditional</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OperatingSystem</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">OperatingSystem</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">name</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>OperatingSystem.java</span>
    </div>
</div>
<h3 id="ejemplo-de-_beans_-condicionales-de-con-spring-boot">Ejemplo de <em>beans</em> condicionales de con Spring Boot</h3>
<p>En este pequeño ejemplo de aplicación se definen dos implementaciones de una interfaz. En base al valor de una propiedad de configuración proporcionada por configuración y con la posibilidad de cambiar su valor en tiempo de ejecución con una variable de entorno se selecciona la implementación deseada utilizando las anotaciones condicionales.</p>
<p>La interfaz del ejemplo simplemente tiene un método que devuelve un mensaje según el idioma que le corresponde.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Message</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="nf">get</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Message.java</span>
    </div>
</div>
<p>Creando varias implementaciones de la interfaz de ejemplo cada implementación devuelve el mensaje en un idioma diferente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.condition.ConditionalOnProperty</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ConditionalOnProperty</span><span class="o">(</span><span class="n">prefix</span> <span class="o">=</span> <span class="s">&#34;app.message&#34;</span><span class="o">,</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#34;implementation&#34;</span><span class="o">,</span> <span class="n">havingValue</span> <span class="o">=</span> <span class="s">&#34;spanish&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpanishMessage</span> <span class="kd">implements</span> <span class="n">Message</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;¡Hola mundo!&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>SpanishMessage.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.condition.ConditionalOnProperty</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ConditionalOnProperty</span><span class="o">(</span><span class="n">prefix</span> <span class="o">=</span> <span class="s">&#34;app.message&#34;</span><span class="o">,</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#34;implementation&#34;</span><span class="o">,</span> <span class="n">havingValue</span> <span class="o">=</span> <span class="s">&#34;english&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">EnglishMessage</span> <span class="kd">implements</span> <span class="n">Message</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>EnglishMessage.java</span>
    </div>
</div>
<p>Cambiando el valor de la propiedad Spring decide que implementación usar e inyectar en las dependencias. De esta forma el comportamiento de la aplicación cambia no cambiando el código sino cambiando la configuración de la aplicación y sin tener que implementar la lógica condicional mediante código propio sino usando las facilidades proporcionadas por Spring.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.CommandLineRunner</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.conditional.OperatingSystem</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigconditional.service.Message</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Message</span> <span class="n">message</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">OperatingSystem</span> <span class="n">os</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Operating system: &#34;</span> <span class="o">+</span> <span class="n">os</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Message: &#34;</span> <span class="o">+</span> <span class="n">message</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;local&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">message</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">implementation</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;spanish&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application.yml</span>
    </div>
</div>
<p>En función del valor de la propiedad <em>app.message.implementation</em> proporcionado en la configuración y los argumentos del programa la implementación seleccionado por spring cambia y a su vez el comportamiento del programar sin necesidad de cambiar código.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Operating system: Linux&#10;</span></span><span class="line"><span class="cl">Message: ¡Hola mundo!&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run --args<span class="o">=</span><span class="s2">&#34;--app.message.implementation=spanish&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run-spanish.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Operating system: Linux&#10;</span></span><span class="line"><span class="cl">Message: ¡Hola mundo!&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run-spanish.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run --args<span class="o">=</span><span class="s2">&#34;--app.message.implementation=english&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run-english.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Operating system: Linux&#10;</span></span><span class="line"><span class="cl">Message: Hello World!&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run-english.out</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringBootConfigConditional">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://reflectoring.io/spring-boot-conditionals/">Conditional Beans with Spring Boot</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/02/que-son-los-archivos-dotfiles-y-como-gestionarlos-con-chezmoi/</id>
        <title>Qué son los archivos dotfiles y cómo gestionarlos con chezmoi</title>
        <updated>2022-02-17T20:00:00+01:00</updated>
        <published>2022-02-17T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/02/que-son-los-archivos-dotfiles-y-como-gestionarlos-con-chezmoi/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los archivos <em>dotfiles</em> son utilizados para guardar información de configuración de las aplicaciones que se almacenan en el directorio del usuario. Se denominan <em>dotfiles</em> porque son archivos que empiezan por un punto o están en una carpeta que empieza por un punto, además en GNU/Linux los archivos que empiezan por un punto son archivos ocultos que por defecto los exploradores de archivos no muestran. Para no perder la configuración de estos archivos adaptada por el usuario a sus preferencias al migrar a otro sistema o compartir la configuración entre varios sistemas hay varios programas con la funcionalidad específica de gestionar los archivos <em>dotfiles</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>A lo largo de los meses y años de uso de un equipo los usuarios vamos configurando el sistema con las aplicaciones necesarias y configurando esas aplicaciones a las preferencias de cada usuario. El problema es que cuando hay que mudarse a otro sistema porque se cambia a un equipo más nuevo y potente o porque deja de funcionar por un motivo de software o por una mala actualización que requiere reinstalar el sistema. Para estos casos y como medida de seguridad es recomendable <a href="https://picodotdev.github.io/blog-bitix/2016/05/como-realizar-copias-de-seguridad-en-windows-con-freefilesync/">hacer copias de seguridad de los datos</a> con lo que migrarlos a otro equipo es menos complicada. Sin embargo, hacer copias de las configuraciones de los programas no es tán habitual con lo que si no se hace al instalar un nuevo sistema requiere configurarlo tal como se tenía anteriormente lo que requiere una buena cantidad de tiempo que hay que volver a dedicar en una nueva instalación.</p>
<p>En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> buena parte de los archivos de configuración de los programas se guardan en los archivos <em>dotfiles</em>.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="qué-son-los-archivos-_dotfiles_">Qué son los archivos <em>dotfiles</em></h3>
<p>Los archivos <em>dotfiles</em> son archivos dedicados a guardar la configuración de los programas. Se guardan en la carpeta personal del usuario (<em>/home/${usuario}</em>) y se denominan <em>dotfiles</em> porque su nombre empieza por un punto, en GNU/Linux los archivos que empiezan por punto son especiales ya que son archivos que los exploradores de archivos ocultan por defecto.</p>
<ul>
<li><a href="https://wiki.archlinux.org/title/Dotfiles">Arch Linux Wiki Dotfiles</a></li>
</ul>
<p>En GNU/Linux uno de los principales archivos <em>dotfiles</em> es el archivo de configuración de inicio del intérprete de línea de comandos, que en el caso de <a href="https://es.wikipedia.org/wiki/Bash">Bash</a> su archivo <em>dotfile</em> es <em>~/.bashrc</em> y en el caso de <a href="https://zsh.sourceforge.net/">zsh</a> es <em>~/.zshrc</em>. Al igual que estos dos archivos <em>dotfiles</em> en la carpeta personal del usuario se guardan multitud de otros como la configuración para realizar conexiones SSH cuyos <em>dotfiles</em> de configuración del usuario se guardan en el directorio <em>~/.ssh</em>. Los propios entornos de escritorio guardan otra buena cantidad de archivos <em>dotfiles</em> con las configuraciones integradas en el entorno de escritorio.</p>
<p>Este es el contenido de mi archivo <em>~/.bashrc</em> en el que he configurado los colores de los elementos del símbolo del sistema en la línea de comandos, cierta configuración para que el símbolo del sistema cambien cuando el directorio de trabajo es una carpeta de código fuente del sistema de control de versiones de <a href="https://git-scm.com/">Git</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ~/.bashrc</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># If not running interactively, don&#39;t do anything</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[[</span> <span class="nv">$-</span> !<span class="o">=</span> *i* <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="k">return</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">alias</span> <span class="nv">ls</span><span class="o">=</span><span class="s1">&#39;ls --color=auto&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">PS1</span><span class="o">=</span><span class="s1">&#39;[\u@\h \W]\$ &#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">complete</span> -cf sudo&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWDIRTYSTATE</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWSTASHSTATE</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWUNTRACKEDFILES</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWUPSTREAM</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWCOLORHINTS</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">source</span> ~/.git-prompt.sh&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">PS1</span><span class="o">=</span><span class="s1">&#39;[\[\033[01;34m\]\u\[\033[00m\]@\[\033[01;35m\]\h\[\033[00m\] \W]\$ &#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">PROMPT_COMMAND</span><span class="o">=</span><span class="s1">&#39;__git_ps1 &#34;[\[\033[01;34m\]\u\[\033[00m\]@\[\033[01;35m\]\h\[\033[00m\] \W&#34; &#34;]\$ &#34;&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">EDITOR</span><span class="o">=</span>vim&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">SDKMAN_DIR</span><span class="o">=</span><span class="s2">&#34;/home/picodotdev/.sdkman&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[[</span> -s <span class="s2">&#34;/home/picodotdev/.sdkman/bin/sdkman-init.sh&#34;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">source</span> <span class="s2">&#34;/home/picodotdev/.sdkman/bin/sdkman-init.sh&#34;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>.bashrc</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/02/que-son-los-archivos-dotfiles-y-como-gestionarlos-con-chezmoi/images/bash-prompt_hu31ebed19cd91ad4dd48952be674278bf_18802_2560x1440_fit_box_3.png" data-gallery="" title="Terminal personalizada"><img src="https://picodotdev.github.io/blog-bitix/2022/02/que-son-los-archivos-dotfiles-y-como-gestionarlos-con-chezmoi/images/bash-prompt_hu31ebed19cd91ad4dd48952be674278bf_18802_650x450_fit_box_3.png" width="610" height="450" alt="Terminal personalizada" title="Terminal personalizada"  class="lozad "></a></p>
<figcaption>Terminal con los colores del símbolo del sistema personalizados e información del repositorio de Git</figcaption>
</figure>
</div>
<h3 id="cómo-gestionar-los-archivos-_dotfiles_">Cómo gestionar los archivos <em>dotfiles</em></h3>
<p>Una forma de migrar los archivos <em>dotfiles</em> de un sistema a otro es haciendo una copia de estos y restaurándolos en el otro sistema. Sin embargo, los problemas son que las copias de seguridad no permiten mantener un registro de los cambios que se realizan a cada uno de estos archivos, no es tan fácil mantener sincronizadas todas las copias de los archivos entre varios equipos que pueden ser de diferentes sistemas operativos como GNU/Linux, <a href="https://www.apple.com/macos/">macOS</a> o <a href="https://www.microsoft.com/es-es/windows/">Windows</a> y algunos archivos de configuración tienen requerimientos de seguridad que hay que mantener depositados en un almacén seguro como son las claves privadas SSH de conexión o algunas credenciales. Además de programas como <a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">el programa KeePassXC para guadar contraseñas y secretos de forma segura</a> también soportan funcionalidades de cifrado y descifrado para algunos datos.</p>
<p>Para dar solución a los problemas de la gestión de los archivos <em>dotfiles</em> hay varios programas específicos para la tarea, en GNU/Linux es <a href="https://github.com/twpayne/chezmoi">chezmoi</a> que también está disponible para otros sistemas operativos como macOS e incluso Windows. También es posible utilizarlo en máquinas virtuales.</p>
<h3 id="el-programa-chezmoi-y-guía-de-uso-para-gestionar-archivos-_dotfiles_">El programa chezmoi y guía de uso para gestionar archivos <em>dotfiles</em></h3>
<p>chezmoi es uno de los programas dedicados a la tarea de gestionar los archivos de configuración <em>dotfiles</em>, hay otros varios pero chezmoi en su <a href="https://www.chezmoi.io/comparison-table/">lista de características que soporta chezmoi comparándolo con las alternativas</a> lo hacen más potente, además al estar basado en Go generalmente los programas en este lenguaje se componen de un único binario hace que sean muy fácilmente de instalar y fiable al carecer de dependencias externas.</p>
<p>Muchas de estas herramientas para gestionar archivos <em>dotfiles</em> se basan en un repositorio de Git en el que mantienen el control de versiones de los archivos y de cada uno de los cambios que se realizan en ellos. Entre las funcionalidades que ofrecen además de mantener el control de versiones están facilitar las tareas de uso básico como subir cambios al repositorio de Git para aplicar a otros sistemas o a un nuevo sistema y aplicar cambios al sistema local provenientes de otros sistemas, soportan variables y plantillas con las que generar el contenido de los archivos de forma dinámica y obtener datos de programas de base de datos que guardan secretos como KeePassXC entre muchos otros gestores de contraseñas.</p>
<h4 id="inicialización-del-repositorio">Inicialización del repositorio</h4>
<p>En la distribución <a href="https://www.archlinux.org/">Arch Linux</a> el programa chezmoi se instala instalando su paquete con el gestor de paquetes. En otras distribuciones basadas en <a href="https://www.debian.org/">Debian</a> o <a href="https://fedoraproject.org/">Fedora</a> basta con buscar el nombre del paquete equivalente en esas distribuciones e instalarlo con su gestor de paquetes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S chezmoi&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-install-chezmoi.sh</span>
    </div>
</div>
<p>El siguiente paso es crear el repositorio de Git en local con los siguientes comandos,  añadir el origen del repositorio remoto que hay que crear previamente en este caso usando un repositorio de <a href="https://github.com/">GitHub</a> y subir el contenido inicial.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi <span class="nb">cd</span>&#10;</span></span><span class="line"><span class="cl">$ git remote add origin https://github.com/picodotdev/dotfiles.git&#10;</span></span><span class="line"><span class="cl">$ git push -u origin main&#10;</span></span><span class="line"><span class="cl">$ exit</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-create-repository.sh</span>
    </div>
</div>
<h4 id="compartir-archivos-_dotfiles_-entre-máquinas">Compartir archivos <em>dotfiles</em> entre máquinas</h4>
<p>Para inicializar el repositorio de Git de los archivos <em>dotfiles</em> a partir del contenido de uno existente se utiliza este comando. Aunque los archivos se puede compartir entre máquinas incluso de diferentes sistemas operativos la intención es que todos esos archivos de <em>dotfiles</em> de un usuario compartan la mayor similitud posible, aunque a veces por las diferencias de las máquinas no es completamente posible. Para ayudar a compartir lo más posible están las variables y plantillas, en caso de necesidad es posible administrar un <em>dotfile</em> completamente diferente según el sistema operativo añadiendo condiciones en las plantillas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi init https://github.com/picodotdev/dotfiles.git&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-init.sh</span>
    </div>
</div>
<h4 id="ver-cambios-sin-aplicarlos">Ver cambios sin aplicarlos</h4>
<p>El siguiente comando aplica los cambios a los archivos <em>dotfiles</em> locales a partir del contenido del repositorio de archivos <em>dotfiles</em> de chezmoi. Con las opciones <em>-v</em> se muestra información más detallada de los cambios que se aplican, y con <em>-n</em> permite ver que cambios se aplicarían en caso de realizar la acción sin la opción, sus opciones en formato largo son <em>-verbose</em> y <em>&ndash;dry-run</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi --verbose --dry-run update&#10;</span></span><span class="line"><span class="cl">$ chezmoi update&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-update.sh</span>
    </div>
</div>
<p>El comando <em>update</em> actualiza el repositorio Git local con los cambios del repositorio origen y aplica los cambios a los archivos <em>dotfiles</em>. Otros comandos útiles son <em>diff</em> para ver las diferencias entre el repositorio de Git y los archivos locales, el comando <em>apply</em> aplica los cambios sobre los archivos <em>dotfiles</em>. Es importante tener en cuenta que los cambios en los <em>dotfiles</em> locales se sobrescriben y se pierden en caso de tener diferencias con su versión en el repositorio de Git de chezmoi.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi diff&#10;</span></span><span class="line"><span class="cl">$ chezmoi apply&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-diff-apply.sh</span>
    </div>
</div>
<h4 id="realizar-cambios-en-los-archivos-_dotfiles_">Realizar cambios en los archivos <em>dotfiles</em></h4>
<p>Al empezar a usar chezmoi y a medida que se desean guardar las configuraciones de los archivos <em>dotfiles</em> hay que añadir los archivos y sus cambios al repositorio de Git de los archivos <em>dotfiles</em>. El comando que permite añadir un archivo al repositorio es <em>add</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi add .bashrc&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-add.sh</span>
    </div>
</div>
<p>chezmoi permite editar el contenido de un archivo y añadirlo al repositorio automáticamente con el comando <em>edit</em>. Si un archivo <em>dotfile</em> se modifica con un programa externo hay que utilizar el comando <em>add</em> para añadirlo al repositorio después de que la aplicación haya hecho el cambio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi edit .bashrc&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-edit.sh</span>
    </div>
</div>
<p>Editar un archivo con un programa externo</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vim .bashrc&#10;</span></span><span class="line"><span class="cl">$ chezmoi add .bashrc&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-edit-external.sh</span>
    </div>
</div>
<ul>
<li><a href="https://www.chezmoi.io/user-guide/daily-operations/">Daily operations</a></li>
<li><a href="https://www.chezmoi.io/user-guide/frequently-asked-questions/usage/#how-do-i-edit-my-dotfiles-with-chezmoi">How do I edit my dotfiles with chezmoi?</a></li>
</ul>
<p>El editar un <em>dotfile</em> se puede configurar para que chezmoi lo añada al repositorio y lo suba al origen. El propio archivo de configuración de chezmoi ubicado en <em>~/.config/chezmoi/chezmoi.yaml</em> es un <em>dotfile</em> que se puede añadir al repositorio de <em>dotfiles</em>. El archivo de configuración soporta varios formatos entre ellos <em>toml</em> y <em>yaml</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">git</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">autoCommit</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">autoPush</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi.yaml</span>
    </div>
</div>
<h4 id="subir-al-repositorio-cambios-en-los-archivos-_dotfiles_">Subir al repositorio cambios en los archivos <em>dotfiles</em></h4>
<p>Después de realizar cambios en los archivos <em>dotfiles</em> estos quedan en el repositorio de Git local en el directorio de trabajo, para subir los archivos al repositorio de Git origen es necesario hacer el <em>commit</em> y el <em>push</em> en el repositorio. chezmoi proporciona varios comandos de utilidad para trabajar con el repositorio de Git en el que se guardan los <em>dotfiles</em>.</p>
<p>Con el comando <em>cd</em> se entra en un modo de edición del repositorio de Git, usándolo el directorio actual de trabajo se cambia a la carpeta del repositorio de Git. Para salir de este modo hay que usar el comando <em>exit</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chemoi <span class="nb">cd</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-cd.sh</span>
    </div>
</div>
<p>Con la carpeta de trabajo del símbolo del sistema en el repositorio de Git es posible utilizar los comandos como en cualquier otro repositorio de Git.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git status&#10;</span></span><span class="line"><span class="cl">$ git add .&#10;</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;Initial commit&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>git-commit.sh</span>
    </div>
</div>
<p>Si no se quiere entrar en el modo de edición del repositorio de Git se ofrece un comando para actuar contra el repositorio de Git de los <em>dotfiles</em> aunque el directorio de trabajo actual sea otro, anteponiendo chezmoi a lo que es el comando de git que se aplica sobre el repositorio de Git de los <em>dotfiles</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi git status&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-git.sh</span>
    </div>
</div>
<h4 id="variables-y-plantillas">Variables y plantillas</h4>
<p>Algunos datos de los archivos <em>dotfiles</em> para compartirlos entre máquinas o para externalizarlos de los archivos permite guardarlos de forma externa. chezmoi soporta plantillas, una plantilla se procesa junto varias las variables y genera el contenido del archivo final del <em>dotfile</em>. Las plantillas no solo soportan variables sino también expresiones con condiciones.</p>
<ul>
<li><a href="https://www.chezmoi.io/user-guide/templating/#more-complicated-logic">More complicated logic</a></li>
</ul>
<p>En el caso de querer considerar a un archivo como una plantilla hay que usar el siguiente comando al añadir lo para que sea administrado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi add --template ~/.bashrc&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-add-template.sh</span>
    </div>
</div>
<p>Las variables se definen en el archivo de configuración de chezmoi.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">data</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">linux</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">picodotdev</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">macos</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">worker</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-2.yaml</span>
    </div>
</div>
<p>Además de variables propias en el archivo de configuración, chezmoi añade las suyas entre las que se pueden utilizar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi data&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-data.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s">&#34;chezmoi&#34;</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;arch&#34;</span><span class="o">:</span> <span class="s">&#34;amd64&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;args&#34;</span><span class="o">:</span> <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;chezmoi&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;data&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">],</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;cacheDir&#34;</span><span class="o">:</span> <span class="s">&#34;/home/picodotdev/.cache/chezmoi&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;configFile&#34;</span><span class="o">:</span> <span class="s">&#34;/home/picodotdev/.config/chezmoi/chezmoi.yaml&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;executable&#34;</span><span class="o">:</span> <span class="s">&#34;/usr/bin/chezmoi&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;fqdnHostname&#34;</span><span class="o">:</span> <span class="s">&#34;archlinux&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;group&#34;</span><span class="o">:</span> <span class="s">&#34;picodotdev&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;homeDir&#34;</span><span class="o">:</span> <span class="s">&#34;/home/picodotdev&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;hostname&#34;</span><span class="o">:</span> <span class="s">&#34;archlinux&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;kernel&#34;</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;osrelease&#34;</span><span class="o">:</span> <span class="s">&#34;5.16.5-arch1-1&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;ostype&#34;</span><span class="o">:</span> <span class="s">&#34;Linux&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;version&#34;</span><span class="o">:</span> <span class="s">&#34;#1 SMP PREEMPT Tue, 01 Feb 2022 21:42:50 +0000&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;os&#34;</span><span class="o">:</span> <span class="s">&#34;linux&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;osRelease&#34;</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;ansiColor&#34;</span><span class="o">:</span> <span class="s">&#34;38;2;23;147;209&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;bugReportURL&#34;</span><span class="o">:</span> <span class="s">&#34;https://bugs.archlinux.org/&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;buildID&#34;</span><span class="o">:</span> <span class="s">&#34;rolling&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;documentationURL&#34;</span><span class="o">:</span> <span class="s">&#34;https://wiki.archlinux.org/&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;homeURL&#34;</span><span class="o">:</span> <span class="s">&#34;https://archlinux.org/&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;id&#34;</span><span class="o">:</span> <span class="s">&#34;arch&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;logo&#34;</span><span class="o">:</span> <span class="s">&#34;archlinux-logo&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;name&#34;</span><span class="o">:</span> <span class="s">&#34;Arch Linux&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;prettyName&#34;</span><span class="o">:</span> <span class="s">&#34;Arch Linux&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;supportURL&#34;</span><span class="o">:</span> <span class="s">&#34;https://bbs.archlinux.org/&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;sourceDir&#34;</span><span class="o">:</span> <span class="s">&#34;/home/picodotdev/.local/share/chezmoi&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;username&#34;</span><span class="o">:</span> <span class="s">&#34;picodotdev&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;version&#34;</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;builtBy&#34;</span><span class="o">:</span> <span class="s">&#34;&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;commit&#34;</span><span class="o">:</span> <span class="s">&#34;&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;date&#34;</span><span class="o">:</span> <span class="s">&#34;2022-02-02T13:17:34Z&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">&#34;version&#34;</span><span class="o">:</span> <span class="s">&#34;2.11.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;workingTree&#34;</span><span class="o">:</span> <span class="s">&#34;/home/picodotdev/.local/share/chezmoi&#34;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-data.json</span>
    </div>
</div>
<p>En los archivos de plantilla las variables se referencian con la siguiente expresión entre llaves.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">{{ .chezmoi.username }} {{ .chezmoi.os }}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-template.file</span>
    </div>
</div>
<p>El comando <em>execute-template</em> permite evaluar una plantilla con el contenido de las variables, esto permite comprobar el funcionamiento de las plantillas y comprobar que generan el contenido deseado al evaluarse, a partir de una plantilla proporcionada como argumento del programa o desde el contenido de un archivo de plantilla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chezmoi execute-template <span class="s2">&#34;{{ .chezmoi.username }} {{ .chezmoi.os }}&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ chezmoi execute-template &lt; dot_zshrc.tmpl&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-execute-template.sh</span>
    </div>
</div>
<h4 id="gestionar-secretos">Gestionar secretos</h4>
<p>Algunas variables por su contenido sensible por motivos de seguridad hay que protegerlos y no deben ser compartidos, esto es importante tenerlo en cuenta ya que el contenido que se usa al repositorio de los <em>dotfiles</em> cualquier usuario que tenga acceso a él puede ver su contenido, esto incluye credenciales e incluso claves SSH. Estos secretos se han de almacenar de forma diferente y no el repositorio de Git de los <em>dotfiles</em> sobre todo si el repositorio de Git es público como puede ser el caso de si se utiliza un hospedaje como GitHub.</p>
<p>La forma que utiliza chezmoi para guardar estos secretos es utilizar un programa de base de datos cifrada para guardar credenciales como los gestores de contraseñas. Uno de ellos es KeePassXC pero chezmoi soporta muchos entre los que están los más populares. chezmoi es capaz de recuperar usuarios, contraseñas e incluso valores de atributos del apunte guardado en la base de datos cifrada.</p>
<ul>
<li><a href="https://www.chezmoi.io/user-guide/password-managers/">Password manager integration</a></li>
</ul>
<p>La siguiente variable de configuración indica donde se guarda la base de datos de secretos en este caso de KeePassXC.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">keepassxc</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">database</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/home/user/Credentials.kdbx&#34;</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-3.yaml</span>
    </div>
</div>
<p>Y en las plantillas se utiliza la siguiente expresión para recuperar credenciales del apunte indicado y valores de atributos que puede ser cualquier contenido como una clave SSH privada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">username = {{ (keepassxc &#34;example.com&#34;).UserName }}&#10;</span></span><span class="line"><span class="cl">password = {{ (keepassxc &#34;example.com&#34;).Password }}&#10;</span></span><span class="line"><span class="cl">{{ keepassxcAttribute &#34;SSH Key&#34; &#34;private-key&#34; }}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chezmoi-template-2.file</span>
    </div>
</div>
<h4 id="otras-características">Otras características</h4>
<p>Los <em>dotfiles</em> de algunos programas son más complejos de los de este ejemplo y hay varios programas que los utilizan, ¿no sería maravilloso poder utilizar los archivos de otros usuarios que comparten en sus repositorios de <em>dotfiles</em>? lo es y es posible utilizar estos archivos <em>dotfiles</em> de otros usuarios, no solo para utilizarlos sino como ejemplo de cómo se configura alguna propiedad del <em>dotfile</em> sobre todo si la documentación oficial del <em>dotfile</em> no es amplia o no es lo suficientemente clara. En la wiki de Arch Linux hay una <a href="https://wiki.archlinux.org/title/Dotfiles#User_repositories">colección de repositorios de usuarios con ejemplos de <em>dotfiles</em></a> con ejemplos para intérpretes de línea de comandos, gestores de ventanas y entornos de escritorio, editores, terminal, multiplexores de terminal entre varios otros programas.</p>
<ul>
<li><a href="https://www.chezmoi.io/user-guide/include-dotfiles-from-elsewhere/">Include dotfiles from elsewhere</a></li>
</ul>
<p>chezmoi también soporta cifrado con la utilidad de cifrado <a href="https://www.gnupg.org/index.html">gpg</a> y <a href="https://github.com/FiloSottile/age">age</a>, si se quiere guardar algún <em>dotfile</em> sensible en el repositorio de Git sin exponer su contenido pero sin utilizar un gestor de contraseñas.</p>
<ul>
<li><a href="https://www.chezmoi.io/user-guide/encryption/">Encryption</a></li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.chezmoi.io/user-guide/frequently-asked-questions/general/#i-like-chezmoi-how-do-i-say-thanks">I like chezmoi. How do I say thanks?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/02/validar-las-propiedades-de-configuracion-de-spring-boot-al-iniciar-la-aplicacion/</id>
        <title>Validar las propiedades de configuración de Spring Boot al iniciar la aplicación</title>
        <updated>2022-02-03T18:00:00+01:00</updated>
        <published>2022-02-03T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/02/validar-las-propiedades-de-configuracion-de-spring-boot-al-iniciar-la-aplicacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Spring permite realizar validaciones sobre las propiedades de configuración antes de iniciar la aplicación, esto permite evitar errores en tiempo de ejecución más difíciles de depurar ya que la excepción que se origine quizá sea difícil de asociar a que el valor una variable de configuración es incorrecta, por ejemplo, que una variable de configuración no tiene valor y si fuese una contraseña de base de datos originar un fallo de conexión a la base de datos o que un servicio REST devolviese un error 403 por no proporcionar la credencial. Con las mismas anotaciones de validación sobre las propiedades de configuración del paquete <em>javax.validation</em> que se utilizan para validar <em>beans</em> de Java se pueden utilizar para validar los valores de configuración de Spring.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p>Al recibir datos los programas tienen varias opciones. Una es ser estricto, validar los datos y en caso de que no sean válidos emitir un mensaje y devolver un error impidiendo continuar. Otra opción es ser flexible para validar los datos y en caso de que sean incorrectos tomar valores por defecto para al menos realizar la tarea aunque sea en un modo degradado. La opción final es no validar los datos y dar por supuesto que son correctos.</p>
<p>No validar los datos tiene varios problemas que se pueden manifestar en la aplicación de diferentes formas, fallando en el procesado de los datos quizá habiendo realizado parte de la tarea, ocasionando algún fallo de seguridad o generando resultados incorrectos o inconsistencias en otros datos. Cualquiera de estas formas de errores son manifestaciones que pueden tener como causa unos datos no válidos de entrada, errores cuya causa raíz pueden no ser fácilmente identificable al intentar depurar el programa y que suelen requerir muchas horas de investigación. Por ello validar los datos es una buena práctica al crear aplicaciones, sobre todo validar datos que provienen de fuentes no confiables como información introducida por el usuario o programas externos.</p>
<p>La configuración de una aplicación es otra forma de datos que un programa utiliza, en este caso para variar su comportamiento en tiempo de ejecución sin necesidad de recompilar la aplicación o generar un nuevo artefacto binario para su ejecución. Sobre las variables de configuración también es posible realizar validaciones y en caso de que las variables de configuración sean incorrectas fallar de forma temprana en vez de fallar más tarde cuando se realiza una acción.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="cómo-validar-propiedades-de-configuración">Cómo validar propiedades de configuración</h3>
<p>La configuración de una aplicación son simplemente variables a la que se les da un nombre y a través del cual se recupera un valor. El programa no tiene hardcodeado en el código el valor e incluyéndose en un archivo de configuración permite cambiarlo sin cambiar el código.</p>
<p>Por ejemplo, si un programa necesita conectarse a una base de datos seguramente necesite unas credenciales compuestas por el <em>host</em> del servidor de base de datos, un usuario y una contraseña de conexión. Estos datos de configuración para el programa son requeridos ya que quizá sin poder conectarse a la base de datos va a fallar. Otros datos quizá deban ser numéricos, no vacíos, deban tener un valor mínimo o máximo o deban cumplir una expresión regular.</p>
<p>El <em>framework</em> Spring proporciona varias funcionalidades útiles para las aplicaciones relacionadas con la configuración desde <a href="https://picodotdev.github.io/blog-bitix/2021/12/configuracion-de-una-aplicacion-con-spring-boot-y-configuracion-centralizada-con-spring-cloud-config/">un mecanismo muy flexible de proporcionar los valores de las propiedades de diferentes fuentes hasta un servidor de configuración centralizada</a>. Otra de sus funcionalidades es precisamente validar las propiedades de configuración a través de anotaciones.</p>
<p>Aunque no sean validaciones complejas son útiles ya que normalmente las variables las crean los desarrolladores pero al desplegar la aplicación o tener que cambiar algún valor puede que lo realicen personas con el rol de sistemas que quizá no conozcan tan en detalle las variables de configuración existentes y sus reglas de validación. Al añadir las validaciones si alguna falla se obtiene un mensaje de error bastante descriptivo de cual es el problema de configuración.</p>
<h3 id="ejemplo-de-código">Ejemplo de código</h3>
<p>Una forma de recuperar los valores de configuración en una aplicación de Spring es trasladando los valores de los archivos de configuración a clases Java que contengan sus valores y sean fácilmente usables desde el lenguaje Java. Es en estas clases Java donde se colocan las anotaciones  de validación.</p>
<p>Las anotaciones que se pueden utilizar son <a href="https://javaee.github.io/javaee-spec/javadocs/javax/validation/constraints/package-summary.html">las anotaciones del paquete javax.validation</a>, realmente son las mismas anotaciones para realizar validaciones sobre cualquier otro tipo de objeto Java, en este caso simplemente son clases con propiedades de configuración.</p>
<p>Este es un ejemplo de archivo de configuración de una aplicación en la que hay una serie de propiedades. Dependiendo del entorno y de los valores proporcionados en tiempo de ejecución a través de este archivo de configuración, propiedades del sistema o variables de entorno las propiedades tendrán unos valores u otros y algunos valores como las contraseñas por motivos de seguridad es preferible no incluirlos en los archivos de configuración del código fuente para no compartirlas en el sistema de control de versiones.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;local&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">numeric</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">regexp</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;A0000&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">password:</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-2.yaml</span>
    </div>
</div>
<p>Dado que algunas propiedades es necesario proporcionarle en tiempo de ejecución la aplicación como medida de precaución valida que los valores de las propiedades son válidas. Esta es una clase que tiene el objetivo de cargar y proporcionar acceso a los valores de configuración.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootconfigvalidated</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.validation.constraints.Max</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.validation.constraints.Min</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.validation.constraints.NotBlank</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.validation.constraints.Pattern</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.context.properties.ConfigurationProperties</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.validation.annotation.Validated</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Configuration</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ConfigurationProperties</span><span class="o">(</span><span class="n">prefix</span> <span class="o">=</span> <span class="s">&#34;app&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Validated</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppConfiguration</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Min</span><span class="o">(</span><span class="n">3</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Max</span><span class="o">(</span><span class="n">10</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">numeric</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Pattern</span><span class="o">(</span><span class="n">regexp</span> <span class="o">=</span> <span class="s">&#34;[A-Z]\\d{3,}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">regexp</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@NotBlank</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">password</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Integer</span> <span class="nf">getNumeric</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">numeric</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNumeric</span><span class="o">(</span><span class="n">Integer</span> <span class="n">numeric</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">numeric</span> <span class="o">=</span> <span class="n">numeric</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getRegexp</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">regexp</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRegexp</span><span class="o">(</span><span class="n">String</span> <span class="n">regexp</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">regexp</span> <span class="o">=</span> <span class="n">regexp</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getPassword</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">password</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPassword</span><span class="o">(</span><span class="n">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppConfiguration.java</span>
    </div>
</div>
<p>La clase al estar anotada con la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Configuration.html">@Configuration</a> de Spring la identifica como una clase de configuración y con el atributo <em>prefix</em> Spring carga los valores de las variables de configuración cuyos nombres coinciden con los nombres de las propiedades. La clase incluye también la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/validation/annotation/Validated.html">@Validated</a> que indica que debe ser validada con las anotaciones de validación que incluya. Finalmente, las propiedades que necesitan validaciones se anotan con la anotación correspondiente para hacer la propiedad requerida u otro tipo de validación sobre su valor.</p>
<p>Realizando validaciones sobre los valores de las propiedades de configuración si la aplicación se inicia y una o varias propiedades no cumplen una validación, la aplicación en vez de continuar finaliza inmediatamente con un mensaje de error que indica que una propiedad no cumple las validaciones.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;local&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">numeric</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">regexp</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;0000&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">password:</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-1.yaml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">***************************&#10;</span></span><span class="line"><span class="cl">APPLICATION FAILED TO START&#10;</span></span><span class="line"><span class="cl">***************************&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Description:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under &#39;app&#39; to io.github.picodotdev.blogbitix.springbootconfigvalidated.AppConfiguration$$EnhancerBySpringCGLIB$$ae0ed48d failed:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Property: app.regexp&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Value: 0000&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Origin: class path resource [application.yml] - 7:11&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Reason: debe coincidir con &#34;[A-Z]\d{3,}&#34;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Property: app.password&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Value: &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Origin: class path resource [application.yml] - 8:12&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Reason: no debe estar vacío&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Property: app.numeric&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Value: 0&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Origin: class path resource [application.yml] - 6:12&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Reason: debe ser mayor que o igual a 3&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Action:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Update your application&#39;s configuration</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-1</span>
    </div>
</div>
<p>Cambiando el comando de inicio para proporcionar el valor requerido y que las otras propiedades sean válidas la aplicación se inicia correctamente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;local&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">numeric</span><span class="p">:</span><span class="w"> </span><span class="m">5</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">regexp</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;A0000&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">password:</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-2.yaml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nv">APP_PASSWORD</span><span class="o">=</span><span class="s2">&#34;java&#34;</span> ./gradlew run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run-2.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&gt; Task :app:run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  .   ____&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  _&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__ _ _&#10;</span></span><span class="line"><span class="cl"> /\\ / ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \&#10;</span></span><span class="line"><span class="cl">( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \&#10;</span></span><span class="line"><span class="cl"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )&#10;</span></span><span class="line"><span class="cl">  &#39;  |____| .__|_| |_|_| |_\__, | / / / /&#10;</span></span><span class="line"><span class="cl"> =========|_|==============|___/=/_/_/_/&#10;</span></span><span class="line"><span class="cl"> :: Spring Boot ::&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(v2.6.2)&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">2022-02-03 19:11:28.623  INFO 11424 --- [&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   main] i.g.p.b.springbootconfigvalidated.Main   : Starting Main using Java 17.0.1 on archlinux with PID 11424 (/home/picodotdev/Documentos/Software/personal/blog-ejemplos/SpringBootConfigValidated/app/build/classes/java/main started by picodotdev in /home/picodotdev/Documentos/Software/personal/blog-ejemplos/SpringBootConfigValidated/app)&#10;</span></span><span class="line"><span class="cl">2022-02-03 19:11:28.626  INFO 11424 --- [&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   main] i.g.p.b.springbootconfigvalidated.Main   : No active profile set, falling back to default profiles: local&#10;</span></span><span class="line"><span class="cl">2022-02-03 19:11:29.164  INFO 11424 --- [&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   main] i.g.p.b.springbootconfigvalidated.Main   : Started Main in 0.887 seconds (JVM running for 1.141)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-2</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringBootConfigValidated">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/01/las-clases-para-logging-del-paquete-jul-incluidas-en-la-api-de-java/</id>
        <title>Las clases para logging del paquete JUL incluidas en la API de Java</title>
        <updated>2022-01-20T22:00:00+01:00</updated>
        <published>2022-01-20T22:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/01/las-clases-para-logging-del-paquete-jul-incluidas-en-la-api-de-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Entre las clases de la API de Java hay clases para la tarea de trazas o <em>logging</em> disponibles desde la versión 1.4 del JDK que para muchos casos son suficientes. Una de las librerías más popular para <em>logging</em> en Java como Log4j proporcionan funcionalidades más avanzadas que las del paquete <em>java.util.logging</em> y la seguridad de que en caso de necesitar algo relativo a <em>logging</em> será raro que Log4j no lo soporte de alguna forma. Sin embargo, las clases del paquete JUL de Java son suficiente y no es imprescindible una librería external ni incluir su dependencia en el proyecto.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Las trazas o <em>logs</em>  en una aplicación forman parte de la parte del área de trazabilidad, observabilidad, monitorización e incluso en el área de seguridad, una de las <a href="https://picodotdev.github.io/blog-bitix/2020/09/funcionalidades-que-necesitan-las-aplicaciones-basadas-en-microservicios-y-herramientas-que-las-proporcionan/">funcionalidades que necesitan las aplicaciones</a>, más imprescindible aún en los microservicios. Las trazas son mensajes con información que emite la aplicación para su análisis, estas se pueden emitir a un destino que puede ser simplemente la salida estándar de la consola, un archivo y en los sistemas más avanzados un sistema ELK para <a href="https://picodotdev.github.io/blog-bitix/2020/09/centralizar-y-consultar-las-trazas-de-las-aplicaciones-con-elasticsearch-logstash-y-kibana/">centralizar las trazas en un único sistema compuesto por múltiples aplicaciones</a>. Una buena práctica es emitir las trazas en la salida estándar de la aplicación y que sea un proceso externo el que determina como y donde se guardan las trazas de la aplicación,  lo que proporciona la flexibilidad de cambiar donde se guardan las trazas sin requerir cambios en la aplicación.</p>
<p>Las trazas permiten ver qué ha ocurrido hace tiempo y conocer qué ocurre en la aplicación en tiempo real. Las trazas incluyen las excepciones que se generan en la aplicación y errores, identificados los errores que se están produciendo las mismas trazas dan pistas de las condiciones en las que se producen, identificar el problema, reproducirlo y con todo ello hacer los cambios en el código necesarios para corregir los errores. Sin las trazas es mucho más difícil conocer qué errores se están produciendo en la aplicación y en qué condiciones se producen para reproducirlo. Hay que tener en cuenta que muchas veces la mayor parte del tiempo que se emplea para corregir un error es en identificar las causas y reproducirlo, la parte de corregirlo haciendo cambios en el código generalmente es una pequeña parte de todo el tiempo empleado. La facilidad y rapidez para corregir un error en gran medida depende de que la aplicación emita una colección de buenas trazas.</p>
<p>En Java la librería <a href="https://logging.apache.org/log4j/2.x/">Log4j</a> es la más utilizada para la funcionalidad de trazas, es una librería muy completa que tiene todas las funcionalidades relativas a trazas que requiera una aplicación en el momento actual o en el futuro. Otra librería muy popular en Java es <a href="https://www.slf4j.org/">SLF4</a> que permite independizar a la aplicación de la implementación de la traza pudiendo cambiar de una u otra según se desee.</p>
<p>Otra alternativa es usar las clases que se incluyen en él la propia API de Java para <em>logging</em> en el paquete <a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/package-summary.html">java.util.logging</a>. No son tan avanzadas como las de Log4j pero son suficientes para muchos casos de uso. Dado a un <a href="https://picodotdev.github.io/blog-bitix/2022/01/analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java/">grave fallo de seguridad en Log4j</a> qué ha afectado a muchas empresas, y raíz de esta situación quizá alguna persona considere utilizar o revisar las clases de <em>logging</em> de Java como alternativa a incluir una dependencia para algo que con lo que ofrece la API quizá sea suficiente para una aplicación.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="las-clases-de-_logging_-de-java">Las clases de <em>logging</em> de Java</h3>
<p>Al ofrecer Java en su API clases para realizar tareas de <em>logging</em> significa que cualquier aplicación las pueda utilizar sin ninguna dependencia adicional a partir de la versión 1.4 en la que fueron incluidas. A las clases y sistema de <em>logging</em> de Java se le denomina JUL por las primeras letras de los paquetes en las que están, <em>java.util.logging</em>.</p>
<p>Las clases principales de JUL son equivalentes a las que se encuentran en otras librerías ya que en definitiva en cualquier librería representan los mismos conceptos del área de dominio de <em>logging</em>.</p>
<ul>
<li><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/Logger.html">Logger</a>: es la clase de entidad principal que usan las aplicaciones para emitir trazas. Se crea una instancia de <em>logger</em> diferente por cada componente específico del sistema o aplicación.</li>
<li><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/LogRecord.html">LogRecord</a>: es una clase que contiene los datos a ser pasados entre el <em>framework</em> de logging y los <em>log handlers</em>.</li>
<li><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/Handler.html">Handler</a>: envía los objetos <em>LogRecord</em> a una variedad de destinos incluyendo memoria, flujos de salida, la consola, archivos y <em>sockets</em>. Existe una variedad de subclases de <em>Handler</em> con una implementación  para cada destino. Adicionalmente los <em>Handlers</em> pueden ser desarrollados por tercera partes e integrados sobre el núcleo de la plataforma.</li>
<li><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/Level.html">Level</a>: define un conjunto estándar de niveles de <em>log</em> que se usan para controlar la salida y gravedad del mensaje. Los programas pueden ser configurados para emitir trazas para algunos niveles mientras se ignoran las trazas de otros.</li>
<li><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/Filter.html">Filter</a>: proporciona un control fino sobre lo que es emitido, más allá del control proporcionado por los niveles de <em>log</em>. La API de <em>logging</em> soporta un mecanismo de propósito general que permite al código de la aplicación asociar filtros arbitrarios para controlar la salida de las trazas..</li>
<li><a href="https://docs.oracle.com/en/java/javase/17/docs/api/java/util/logging/Formatter.html">Formatter</a>: proporciona soporte para especificar cómo son formateados los objetos <em>LogRecord</em>. El paquete de JUL incluye dos formateadores, SimpleFormatter y XMLFormatter, para formatear los registros de log en texto plano o XML respectivamente. Al igual que con los <em>Handlers</em>, terceras partes pueden desarrollar <em>Formatters</em> adicionales.</li>
</ul>
<h3 id="motivos-para-usar-jul">Motivos para usar JUL</h3>
<p>Log4j es una de las mejores sino la mejor librería para trazas en Java, las ventajas son flexibilidad en caso de necesitar funcionalidades más en el futuro siendo raro que se necesite algo en materia de <em>logging</em> que no soporte Log4j de alguna forma. Logj4 permite guardar archivos, rotar los archivos por fecha o volumen de datos guardando cierto número de copias de seguridad, información de contexto entre más funcionalidades avanzadas, cosas adicionales que no tiene JUL. JUL por el contrario es una solución que no requiere incluir una dependencia adicional el proyecto y una solución más sencilla que puede ser más que suficiente para una aplicación o un pequeño <em>script</em>.</p>
<p>Depende del contexto del proyecto en sí es más conveniente usar solo JUL u optar por Log4j, no hay una misma respuesta para todos proyectos y a veces no hay ningún motivo claro para decidirse entre una u otra, siendo ambas más que suficientes. En el entorno de <a href="https://cloud.google.com/functions/">Google Cloud Functions</a> por ejemplo solo entiende correctamente las trazas emitidas con JUL en el caso de una función con implementación Java. Es utilizar JUL directamente o utilizar Log4j sin que los niveles de las trazas se identifiquen bien en en los paneles de monitorización de Google Cloud Functions o en caso de que Log4j lo tuviese usar un adaptador para Log4j que redirija las trazas sobre JUL. Con la petición <a href="https://issues.apache.org/jira/browse/LOG4J2-3282">LOG4J2-3282</a> en Log4j a partir de la versión 2.17.2 precisamente proporciona un adaptador que envía las trazas a la consola utilizando JUL.</p>
<p>Incluir una dependencia en una aplicación debe estar justificado, no conviene añadir dependencias que de las que solo se usan una sola clase. Incluir una dependencia añade tamaño a la aplicación teniendo en cuenta que no solo se incluye esa dependencia sino además las transitivas, incluir dependencias de forma indiscriminada en un proyecto hace que pueda ocurrir un conflicto entre las diferentes versiones de dos. También en el caso de que una dependencia está justificada conviene optar por una que tenga pocas dependencias de forma transitiva por los mismos motivos.</p>
<h3 id="ejemplo-usando-las-clases-de-java-para-trazas">Ejemplo usando las clases de Java para trazas</h3>
<p>Este ejemplo muestra un uso básico de las clases de JUL que emite varias trazas usando diferente nivel para cada mensaje, en la salida de la consola se muestra cada uno de los mensajes con el formato por defecto que además del nivel y el mensaje incluye la fecha y hora como metadato adicional en la que ha ido emitido. Como suele ser una convención la instancia de <em>Logger</em> se inicializa como una variable estática privada a partir del nombre de la clase que queda disponible para ser usada en cualquier parte del código de la clase. En este caso la instancia no está en una variable estática para el caso de indicar un argumento hacer la configuración previa.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.logging.Level</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.logging.Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.logging.LogManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">args</span><span class="o">).</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34;--config&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">configuration</span> <span class="o">=</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/jul.properties&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LogManager</span><span class="o">.</span><span class="na">getLogManager</span><span class="o">().</span><span class="na">readConfiguration</span><span class="o">(</span><span class="n">configuration</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="n">Level</span><span class="o">.</span><span class="na">FINE</span><span class="o">,</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="n">Level</span><span class="o">.</span><span class="na">INFO</span><span class="o">,</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="n">Level</span><span class="o">.</span><span class="na">WARNING</span><span class="o">,</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="n">Level</span><span class="o">.</span><span class="na">SEVERE</span><span class="o">,</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Exception</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>main-run-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">ene 20, 2022 11:56:28 P. M. io.github.picodotdev.blogbitix.javalogging.Main main&#10;</span></span><span class="line"><span class="cl">INFORMACIÓN: Hello World!&#10;</span></span><span class="line"><span class="cl">ene 20, 2022 11:56:28 P. M. io.github.picodotdev.blogbitix.javalogging.Main main&#10;</span></span><span class="line"><span class="cl">ADVERTENCIA: Hello World!&#10;</span></span><span class="line"><span class="cl">ene 20, 2022 11:56:28 P. M. io.github.picodotdev.blogbitix.javalogging.Main main&#10;</span></span><span class="line"><span class="cl">GRAVE: Hello World!&#10;</span></span><span class="line"><span class="cl">java.lang.Exception&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at io.github.picodotdev.blogbitix.javalogging.Main.main(Main.java:21)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-run-1.out</span>
    </div>
</div>
<p>El formato del mensaje se puede cambiar estableciendo una propiedad de sistema en el comando de ejecución que inicia la máquina virtual. En el javadoc de la clase <em>SimpleFormatter</em> está detallada la explicación del <a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/SimpleFormatter.html#format%28java.util.logging.LogRecord%29">formato y símbolos de la expresión para dar formato al mensaje</a>. Cambiando el formato el resultado en la salida del programa cambia.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run -Djava.util.logging.SimpleFormatter.format<span class="o">=</span><span class="s2">&#34;%1\$tF %1\$tT.%1\$tL %4\$-12.12s %2\$60.60s %5\$s%6\$s%n&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>main-run-2.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">2022-01-20 23:56:51.271 INFORMACIÓN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  io.github.picodotdev.blogbitix.javalogging.Main main Hello World!&#10;</span></span><span class="line"><span class="cl">2022-01-20 23:56:51.334 ADVERTENCIA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  io.github.picodotdev.blogbitix.javalogging.Main main Hello World!&#10;</span></span><span class="line"><span class="cl">2022-01-20 23:56:51.334 GRAVE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;io.github.picodotdev.blogbitix.javalogging.Main main Hello World!&#10;</span></span><span class="line"><span class="cl">java.lang.Exception&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at io.github.picodotdev.blogbitix.javalogging.Main.main(Main.java:21)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-run-2.out</span>
    </div>
</div>
<h4 id="configuración-de-jul">Configuración de JUL</h4>
<p>Una forma de configurar JUL es a través de un archivo de propiedades, utilizar un archivo de configuración en vez código tiene la ventaja que no es necesario cambiar código en la aplicación para cambiar el comportamiento de JUL y si el archivo de configuración es obtenido de forma externa a la aplicación no es necesario compilar ni generar un nuevo artefacto ejecutable para cambiar la configuración.</p>
<p>El archivo de configuración permite cambiar los <em>handlers</em> a los que se envía las trazas, especificar el nivel de <em>log</em> mínimo aceptado por cada <em>logger</em> y finalmente configurar un <em>Formatter</em> para cambiar el formato por defecto de los mensajes a uno personalizado.</p>
<p>En este ejemplo de archivo de configuración se cambia el nivel de trazas de los <em>logger</em> que están en la jerarquía de nombres <em>io.github.picodotdev.blogbitix.javalogging</em> en base al nombre del paquete haciendo que solo acepten las trazas de nivel <em>fine</em> o superior, por defecto en el solo se aceptan las de nivel <em>information</em>. En el archivo de configuración es también posible indicar el formato de los mensajes. Con la configuración personalizada la salida del mismo programa es diferente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">.level=INFO&#10;</span></span><span class="line"><span class="cl">io.github.picodotdev.blogbitix.jul.level=FINE&#10;</span></span><span class="line"><span class="cl">io.github.picodotdev.blogbitix.jul.handlers=java.util.logging.ConsoleHandler&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">java.util.logging.ConsoleHandler.level=FINE&#10;</span></span><span class="line"><span class="cl">java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">java.util.logging.SimpleFormatter.format=%1$tF %1$tT.%1$tL %4$-12.12s %3$60s %5$s%6$s%n</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>jul.properties</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run --args<span class="o">=</span><span class="s2">&#34;--config&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>main-run-3.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">2022-01-20 23:57:22.385 DETALLADO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; io.github.picodotdev.blogbitix.javalogging.Main Hello World!&#10;</span></span><span class="line"><span class="cl">2022-01-20 23:57:22.401 INFORMACIÓN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   io.github.picodotdev.blogbitix.javalogging.Main Hello World!&#10;</span></span><span class="line"><span class="cl">2022-01-20 23:57:22.402 ADVERTENCIA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   io.github.picodotdev.blogbitix.javalogging.Main Hello World!&#10;</span></span><span class="line"><span class="cl">2022-01-20 23:57:22.402 GRAVE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; io.github.picodotdev.blogbitix.javalogging.Main Hello World!&#10;</span></span><span class="line"><span class="cl">java.lang.Exception&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at io.github.picodotdev.blogbitix.javalogging.Main.main(Main.java:21)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-run-3.out</span>
    </div>
</div>
<h4 id="soportar-jul-y-log4j-como-implementación">Soportar JUL y Log4j como implementación</h4>
<p>A veces por flexibilidad interesa poder cambiar de implementación de <em>framework</em> de <em>logging</em>, añadir esta flexibilidad implica añadir un intermediario entre la aplicación y la implementación, en Java la librería SLF4J es precisamente este intermediario y permite cambiar de implementación a través de configuración sin necesidad de más cambios en el código de la aplicación cuya dependencia directa está en el intermediario y no en la implementación.</p>
<p>Sin embargo, por el mismo motivo de evitar incluir dependencias en un proyecto para casos sencillos es posible desarrollar un intermediario sencillo que haga la función de SLF4J. Esta implementación sencilla incluye algunos conceptos comunes de <em>logging</em> como la entidad <em>Logger</em> y <em>Level</em>. La clase <em>Logger</em> en este caso además para emitir las trazas se usa como factoría para obtener las instancias de <em>Logger</em>, para poder cambiar de implementación hace uso de un <em>LogSupplier</em> que simplemente es una función que recibe como parámetro una clase y devuelve una instancia de <em>Logger</em>. Configurando un <em>LogSupplier</em> u otro se cambia de implementación de <em>framework</em> de <em>logging</em>.</p>
<p>Estas son las funciones <em>lambdas</em> que implementan la interfaz <em>LogSuplier</em>, una implementación sirve para obtener instancias de <em>Logger</em> de JUL y otra implementación obtiene instancias de <em>Logger</em> de Log4j.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Logger</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">trace</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">trace</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">info</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">info</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">warn</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">warn</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">error</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">error</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">error</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">error</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Logger.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LogManager</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">LoggerSupplier</span> <span class="n">supplier</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">LoggerSupplier</span> <span class="n">supplier</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LogManager</span><span class="o">.</span><span class="na">supplier</span> <span class="o">=</span> <span class="n">supplier</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">Logger</span> <span class="nf">getLogger</span><span class="o">(</span><span class="n">Class</span> <span class="n">clazz</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">supplier</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">LoggerSupplier</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Logger</span> <span class="nf">get</span><span class="o">(</span><span class="n">Class</span> <span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LogManager.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.logging.Level</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.logging.Handler</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JulLogger</span> <span class="kd">implements</span> <span class="n">Logger</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Handler</span> <span class="n">handler</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">final</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">logging</span><span class="o">.</span><span class="na">Logger</span> <span class="n">logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="nf">JulLogger</span><span class="o">(</span><span class="n">Class</span> <span class="n">clazz</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">logger</span> <span class="o">=</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">logging</span><span class="o">.</span><span class="na">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">clazz</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">handler</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">logger</span><span class="o">.</span><span class="na">addHandler</span><span class="o">(</span><span class="n">handler</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setLoggingHandler</span><span class="o">(</span><span class="n">Handler</span> <span class="n">handler</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JulLogger</span><span class="o">.</span><span class="na">handler</span> <span class="o">=</span> <span class="n">handler</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">Logger</span> <span class="nf">getLogger</span><span class="o">(</span><span class="n">Class</span> <span class="n">clazz</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">JulLogger</span><span class="o">(</span><span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">trace</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">trace</span><span class="o">(</span><span class="n">message</span><span class="o">,</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[</span><span class="n">0</span><span class="o">]);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">trace</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="n">Level</span><span class="o">.</span><span class="na">FINE</span><span class="o">,</span> <span class="n">adapt</span><span class="o">(</span><span class="n">message</span><span class="o">),</span> <span class="n">params</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">adapt</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">m</span> <span class="o">=</span> <span class="n">message</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">while</span> <span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34;{}&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">m</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">&#34;\\{\\}&#34;</span><span class="o">,</span> <span class="s">&#34;{&#34;</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">&#34;}&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">i</span> <span class="o">+=</span> <span class="n">1</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">m</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JulLogger.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Log4j2Logger</span> <span class="kd">implements</span> <span class="n">Logger</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">final</span> <span class="n">org</span><span class="o">.</span><span class="na">apache</span><span class="o">.</span><span class="na">logging</span><span class="o">.</span><span class="na">log4j</span><span class="o">.</span><span class="na">Logger</span> <span class="n">logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="nf">Log4j2Logger</span><span class="o">(</span><span class="n">Class</span> <span class="n">clazz</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">Logger</span> <span class="nf">getLogger</span><span class="o">(</span><span class="n">Class</span> <span class="n">clazz</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">Log4j2Logger</span><span class="o">(</span><span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">trace</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">trace</span><span class="o">(</span><span class="n">message</span><span class="o">,</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[</span><span class="n">0</span><span class="o">]);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">trace</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span> <span class="n">Object</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">trace</span><span class="o">(</span><span class="n">adapt</span><span class="o">(</span><span class="n">message</span><span class="o">),</span> <span class="n">params</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">adapt</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">message</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Log4j2Logger.java</span>
    </div>
</div>
<p>Al iniciar la aplicación según una variable de entorno, propiedad del sistema o argumento del programa se configura el <em>LogSupplier</em> para usar la implementación deseada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging.Log4j2Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging.LoggerSupplier</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging.LogManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.javalogging.JulLogger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">LoggerSupplier</span> <span class="n">supplier</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="n">log</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;log4j&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">supplier</span> <span class="o">=</span> <span class="o">(</span><span class="n">clazz</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">Log4j2Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">log</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;jul-gcp&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">logging</span><span class="o">.</span><span class="na">LogManager</span><span class="o">.</span><span class="na">getLogManager</span><span class="o">().</span><span class="na">readConfiguration</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/jul-gcp.properties&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JulLogger</span><span class="o">.</span><span class="na">setLoggingHandler</span><span class="o">(</span><span class="k">new</span> <span class="n">LoggingHandler</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">supplier</span> <span class="o">=</span> <span class="o">(</span><span class="n">clazz</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">JulLogger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">log</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;jul&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">logging</span><span class="o">.</span><span class="na">LogManager</span><span class="o">.</span><span class="na">getLogManager</span><span class="o">().</span><span class="na">readConfiguration</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/jul.properties&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">supplier</span> <span class="o">=</span> <span class="o">(</span><span class="n">clazz</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">JulLogger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">logging</span><span class="o">.</span><span class="na">LogManager</span><span class="o">.</span><span class="na">getLogManager</span><span class="o">().</span><span class="na">readConfiguration</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/jul.properties&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">supplier</span> <span class="o">=</span> <span class="o">(</span><span class="n">clazz</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">JulLogger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">clazz</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">LogManager</span><span class="o">.</span><span class="na">configure</span><span class="o">(</span><span class="n">supplier</span><span class="o">);</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LogSupplier.java</span>
    </div>
</div>
<p>Con la petición de LOG4J2-3282 deja de ser necesario usar JUL directamente y se puede utilizar a través de Log4j pero este es un ejemplo de una implementación sencilla en vez de tener que recurrir al SLF4J para la tarea de tener la flexibilidad de cambiar de implementación entre JUL o Log4j.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/01/articulo-9-de-yo-apoyo-al-software-libre/</id>
        <title>Artículo #9 de Yo apoyo al software libre</title>
        <updated>2022-01-13T23:00:00+01:00</updated>
        <published>2022-01-13T23:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/01/articulo-9-de-yo-apoyo-al-software-libre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Con los ingresos por publicidad de AdSense, afiliado de Amazon y artículos patrocinados desde hace unos años hago una donación a los programas que utilizo habitualmente o me resultan interesantes. El gestor de contraseñas KeePassXC es uno de los programas que utilizo y me es muy útil para guardar de forma segura las credenciales de inicio de sesión en varios servicios.</strong></p>]]>
        <![CDATA[<p>Mucho del software libre además de libre que proporciona a los usuarios varios derechos sobre el programa generalmente es gratuito. Y mucho del software libre es desarrollado sin el objetivo principal de monetizarlo en el tiempo de ocio de sus desarrolladores. Al contrario del software comercial que suelen tener una licencia privativa que entre otras cosas no permite acceso al código fuente para estudiarlo, modificarlo no compartir los cambios con otros usuarios también el software comercial suele tener el objetivo de monetizarlo, requieren pagar una licencia anual y habitualmente cuenta con el soporte de una empresa.</p>
<p>Los desarrolladores de software libre recurren a un modelo de donaciones en el que instan a los usuarios a realizar una pequeña donación según lo que consideren. En algunos casos estas donaciones sirven para cubrir los gastos que tienen como la compra del dominio o el hospedaje para la página web del proyecto.</p>
<p>El problema de los desarrolladores surge cuando hay empresas que se basan y lucran con el trabajo de los desarrolladores de software libre y código abierto sin proporcionar ayuda económica a los desarrolladores ni devuelven nada a cambio, los desarrolladores pueden llegar a cansarse de trabajar gratuitamente.</p>
<p>Desde hace un tiempo y con una pequeña parte de los ingresos del blog tengo la costumbre de hacer una donación al menos cada año a alguno de los programas que uso y que me resultan muy útiles, la donación que hago es sin lugar a dudas mucho menor que si usase una alternativa equivalente comercial pero al menos espero contribuir un poco a que estos programas sigan teniendo nuevas versiones con nuevas características y corrigiendo errores.</p>
<h3 id="keepassxc">KeePassXC</h3>
<p><a href="https://keepassxc.org/">KeePassXC</a> es una aplicación que proporciona la funcionalidad de generar y almacenar las credenciales de inicio de sesión de cualquier servicio en una base de datos cifrada protegida por una contraseña o archivo de clave maestro. Esta aplicación de gestor de contraseñas permite mantener varias buenas prácticas de seguridad como generar contraseñas fuertes del número de caracteres que se desee utilizando una combinación de letras, números y símbolos, utilizar una contraseña única para cada servicio, soporta generar códigos del segundo factor de autenticación que hace mucho más difícil ser víctima de un ataque de <em>phishing</em> y permite asociar a cada apunte notas y archivos adjuntos que también se guardan cifrados entre otras funcionalidades.</p>
<p>En vez de utilizar una única contraseña para todos los servicios o guardar las contraseñas en un archivo de texto sin cifrar es recomendable utilizar una aplicación de gestor de contraseñas como KeePassXC. Es una aplicación de software libre y dispone de versiones para <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>, <a href="https://www.microsoft.com/es-es/windows/">Windows</a> y <a href="https://www.apple.com/macos/">macOS</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">Guardar contraseñas de forma segura con KeePassXC</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/">Manual básico sobre ataques informáticos, peligros, tipos, cómo detectarlos, cómo evitarlos y medidas de prevención</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/">Qué es, por qué y cómo activar un segundo factor de autenticación en Google, Amazon, PayPal y otros servicios</a></li>
</ul>
<p>Ya colaboro realizando la traducción de la aplicación al español, ya he escrito un artículo sobre esa aplicación para describirla con las ventajas de seguridad que proporciona y es el gestor de contraseñas que utilizo para guardar las credenciales, generar contraseñas y generar los códigos de segundo factor de autenticación de varias cuentas.</p>
<p>Como es una aplicación muy útil para mi y uso de forma habitual hago una pequeña donación que no es muy grande pero seguro que los desarrolladores lo agradecen y espero que sirva como motivación para que sigan manteniendo este programa que se suma a las donaciones que he realizado con anterioridad a otros programas que utilizo o proyectos que me resultan interesantes.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/keepassxc.svg" width="300" height="200" alt="KeePassXC" title="KeePassXC"  class="lozad "></p>
</figure>
</div>
<h3 id="comprobante-de-la-donación">Comprobante de la donación</h3>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/01/articulo-9-de-yo-apoyo-al-software-libre/images/donacion-keepassxc_hu6ffb71ed032fd03b92dd518bf7384ec0_116758_2560x1440_fit_box_3.png" data-gallery="" title="Donación KeePassXC"><img src="https://picodotdev.github.io/blog-bitix/2022/01/articulo-9-de-yo-apoyo-al-software-libre/images/donacion-keepassxc_hu6ffb71ed032fd03b92dd518bf7384ec0_116758_650x450_fit_box_3.png" width="258" height="450" alt="Donación KeePassXC" title="Donación KeePassXC"  class="lozad "></a></p>
<figcaption>Donación KeePassXC</figcaption>
</figure>
</div>
<table class="table">
    <thead>
        <tr class="thead-dark">
            <th colspan="4">Donaciones que he realizado hasta la última fecha</th>
        </tr>
        <tr class="thead-light">
            <th>#</th>
            <th>Fecha</th>
            <th>Proyecto</th>
            <th>Donación</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>2015/12</td>
            <td>Free Software Foundation Europe (FSFE)</td>
            <td>40 €</td>
        </tr>
        <tr>
            <td>2</td>
            <td>2016/09</td>
            <td>Wikipedia, Mozilla/Firefox</td>
            <td>10 €, 10 €</td>
        </tr>
        <tr>
            <td>3</td>
            <td>2017/01</td>
            <td>elementaryOS, Libre Office, Arch Linux ARM</td>
            <td>10 €, 10 €, 10 €</td>
        </tr>
        <tr>
            <td>4</td>
            <td>2017/05</td>
            <td>GNOME, VideoLAN (VLC), Arch Linux</td>
            <td>15,31 €, 10 €, 0,31 €</td>
        </tr>
        <tr>
            <td>5</td>
            <td>2018/01</td>
            <td>LineageOS, Replicant</td>
            <td>15 €, 15 €</td>
        </tr>
        <tr>
            <td>6</td>
            <td>2018/12</td>
            <td>Wine</td>
            <td>$20</td>
        </tr>
        <tr>
            <td>7</td>
            <td>2019/12</td>
            <td>Calibre</td>
            <td>$10</td>
        </tr>
        <tr>
            <td>8</td>
            <td>2020/12</td>
            <td>Phoronix, Mozilla/Firefox, GnuPG</td>
            <td>$12, 10 €, 10 €</td>
        </tr>
        <tr>
            <td>9</td>
            <td>2022/01</td>
            <td>KeePassXC</td>
            <td>15 €</td>
        </tr>
        <tr>
            <td colspan="3">Total</td>
            <td>180 €, $42</td>
        </tr>
    </tbody>
</table>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://staltz.com/software-below-the-poverty-line.html">Software below the poverty line</a></li>
<li><a href="https://github.com/chrisdutz/blog/blob/main/plc4x/free-trial-expired.adoc">Your free trial version of &ldquo;open-source&rdquo; has expired, please update to a commercial plan</a></li>
<li><a href="https://github.com/chrisdutz/blog/blob/main/plc4x/success-stories.adoc">Success stories</a></li>
<li><a href="https://www.xataka.com/aplicaciones/piropos-aplausos-no-suficientes-otro-desarrollador-open-source-se-harta-trabajar-amor-al-arte-destapa-realidad-injusta">&ldquo;Los piropos y los aplausos no son suficientes&rdquo;: otro desarrollador Open Source se harta de trabajar por amor al arte y destapa una realidad injusta</a></li>
<li><a href="https://www.genbeta.com/desarrollo/programadores-open-source-estan-hartos-quieren-que-empresas-que-se-benefician-su-trabajo-gratuito-empiecen-a-pagar">Los programadores open source están hartos: quieren que las empresas que se benefician de su trabajo gratuito empiecen a pagar</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/01/analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java/</id>
        <title>Analizar y detectar fallos de seguridad en las dependencias de Java</title>
        <updated>2022-01-06T11:00:00+01:00</updated>
        <published>2022-01-06T11:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/01/analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Dada la complejidad de muchas aplicaciones de software hace que estas usen gran cantidad de dependencias, muchas de proyectos de software libre o código abierto. Es muy probable que con el paso del tiempo en alguna de las dependencias de las aplicaciones se descubra un error de seguridad importante y requiera una actualización lo más pronto posible. No es posible estar completamente a salvo de estar afectado por un fallo de seguridad en el software por mucho que se intente, por este motivo la mejor estrategia es detectar proactivamente y temprana los errores de seguridad y actualizar las dependencias a nuevas versiones con el fallo corregido. Varias organizaciones identifican, definen, describen y catalogan los fallos de seguridad de forma pública en una base de datos y hay herramientas automatizadas que con las bases de datos de fallos de seguridad permiten analizar las dependencias de un proyecto. Un ejemplo ha sido el caso de la librería Log4j 2 que por su gravedad y y popularidad muchas organizaciones han estado afectadas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una vez desarrollada una aplicación esta entra en un modo de mantenimiento en el que se añaden nuevas funcionalidades a las existentes y se corrigen errores. La mayor parte de la vida de una aplicación es empleada en su mantenimiento con generalmente pequeños cambios incrementales. Algunas aplicaciones son empleadas durante periodos de tiempo muy largos, de lustros o décadas, que quizá ya se consideren como heredadas y en las que ya únicamente se hacen cambios en caso de errores graves.</p>
<p>Aunque en una aplicación heredada ya no se hagan mejoras, ni se actualicen versiones mayores de librerías otro de los motivos por los que una aplicación requiere mantenimiento es por fallos de seguridad. Con el paso del tiempo es muy posible que en una aplicación que tenga dependencias de versiones antiguas de librerías se descubran fallos de seguridad. Si es posible y dependiendo de la gravedad del fallo de seguridad descubierto y la forma de explotarlo es conveniente actualizar a la última versión de la librería o al menos a la última versión compatible con el fallo de seguridad corregido. En una aplicación heredada quizá no sea posible actualizar a la última versión ya que posiblemente por un lado requiere cambios importantes en el código y tiempo para hacerlos y por otro lado se trate de evitar hacer cambios para no introducir errores en el código que está funcionando.</p>
<p>Una de las formas de analizar el código fuente de una aplicación es analizar sus dependencias para conocer si en alguna de ellas se descubre alguna vulnerabilidad. Hay herramientas automatizadas que realizan las dependencias y generan un informe con las vulnerabilidades que tienen. En este caso el análisis estático de código se hace sobre las dependencias sobre el código fuente al igual que las comprobaciones que también se pueden hacer sobre el código para comprobar que cumple las convenciones, algunas restricciones y algunos fallos detectables sobre el código fuente que se pueden hacer con <a href="https://pmd.github.io/">PMD</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/02/analisis-estatico-de-codigo-con-pmd-y-un-ejemplo/">Análisis estático de código con PMD y un ejemplo</a></li>
</ul>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="base-de-datos-de-fallos-de-seguridad">Base de datos de fallos de seguridad</h3>
<p>Los fallos de seguridad descubiertos se identifican, definen y catalogan con un nombre y se añaden a una <a href="https://www.cve.org/">base de datos pública de vulnerabilidades de seguridad</a>. Al definir los fallos de seguridad se les asigna un nivel orientativo de gravedad, dos propiedades importantes que sirven para asignar la gravedad son como es la forma de explotar el fallo de seguridad, si requiere acceso físico al sistema o es posible explotarlo de forma remota, y que permite el fallo de seguridad, como ejecución de código remoto o obtención de información confidencial.</p>
<p>Aunque algunos fallos de seguridad permiten la ejecución remota de código no se consideran tan importantes si requieren acceso físico al sistema. Los más graves son aquellos que concurren ambas circunstancias, permiten explotar los fallos de seguridad de forma remota y permite realizar acciones graves como ejecución de código remoto, escalar privilegios u obtener información confidencial.</p>
<p>Por otro lado, la organización <a href="https://owasp.org/">OWASP</a> tiene documentados fallos de seguridad comunes en las aplicaciones y que conviene evitar, por ejemplo, el error de <em>sql injection</em> o <em>cross site scripting</em> que no por ser ya muy conocidos y no complicados de evitar dejan de ser graves si la aplicación no se implementa adecuadamente.</p>
<h3 id="el-problema-de-seguridad-de-log4j-2">El problema de seguridad de Log4j 2</h3>
<p>Un caso de error grave de seguridad denominado identificado con el nivel máximo en la escala de gravedad es el de la librería <a href="https://logging.apache.org/log4j/2.x/">Log4j 2</a> en las versiones menores a 2.3.2 (para Java 6), 2.12.4 (para Java 7) y 2.17.1 (para Java 8 y posteriores) que es posible explotarlo de forma remota y permite ejecución remota de código denominado <em>Log4Shell</em>. Log4j 2 es una librería de Java muy utilizada en los proyectos por ser una funcionalidad fundamental para cualquier aplicación que sirve para emitir trazas o <em>logging</em>.</p>
<ul>
<li><a href="https://www.lunasec.io/docs/blog/log4j-zero-day/">Log4Shell: RCE 0-day exploit found in log4j 2, a popular Java logging package</a></li>
</ul>
<p>Dada la gravedad del error descubierto y el amplio uso de la librería en los proyectos Java muchas organizaciones se han visto afectadas por el error de seguridad. La corrección del error requiere actualizar la versión de la dependencia de Log4j a una que no sea vulnerable al error. El problema es que muchas aplicaciones heredadas actualizar a la última versión no es posible e incluso actualizar a una versión compatible no vulnerable supone gran esfuerzo que requiere actualizar la dependencia en el código fuente, generar el nuevo artefacto, validarlo y hacer su despliegue en el entorno de producción.</p>
<p>Mientras se realiza la corrección conviene observar los registros de trazas, el uso de la CPU, red, memoria, almacenamiento y registros de <em>log</em> ante cualquier comportamiento anómalo para ver si la aplicación está siendo objeto de ataque.</p>
<p>Aún siendo Log4j una librería mantenida por tres personas de forma voluntaria su licencia de código abierto y alta calidad que muchas veces es mayor incluso que las opciones equivalentes comerciales es utilizada por muchas empresas incluso con facturaciones mil millonarias debido a que no necesitan pagar licencias de software para usarla. Sin embargo, no todas las empresas mil millonarias que usan un software que es vital para su negocio apoyan económicamente a esos proyectos de software que usan. Aún así, esos tres voluntarios pocas horas después de hacerse público el error con la ayuda de los interesados han publicado varias versiones de la librería con el fallo original y posteriores descubiertos corregidos.</p>
<p>Esta misma historia ya se repitió en el 2014 con <a href="https://www.openssl.org/">OpenSSL</a> con el denominado <a href="https://en.wikipedia.org/wiki/Heartbleed">Heartbleed</a> y se volverá a repetir con otro ejemplo en el futuro. Proyectos en los que no solo se fundamenta ya una empresa sino en los que se fundamenta internet cuyos desarrolladores trabajan de forma voluntaria sin apoyo económico.</p>
<ul>
<li><a href="https://arstechnica.com/information-technology/2014/04/tech-giants-chastened-by-heartbleed-finally-agree-to-fund-openssl/">Tech giants, chastened by Heartbleed, finally agree to fund OpenSSL</a></li>
<li><a href="https://veridicalsystems.com/blog/of-money-responsibility-and-pride/">Of Money, Responsibility, and Pride</a></li>
</ul>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/2022/01/analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java/images/log4shell_hu2e0ccf3c77b1c1f3f2f8efc9cb83304b_24996_2560x1440_fit_box_3.png" width="650" height="292" alt="Logotipo de Log4Shell" title="Logotipo de Log4Shell"  class="lozad "></p>
<figcaption>Logotipo de Log4Shell <br>Fuente: https://www.lunasec.io/</figcaption>
</figure>
</div>
<h3 id="analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java-con-gradle-y-maven">Analizar y detectar fallos de seguridad en las dependencias de Java con Gradle y Maven</h3>
<p>Dado que se volverá a repetir un fallo de seguridad como Log4 2 o <em>Heartbleed</em> y dado que es imposible estar seguro de que una dependencia no se vea afectada en algún momento por un fallo grave de seguridad conviene estar suscrito a los boletines de seguridad y analizar las dependencias, automatizar el análisis de las dependencias es la mejor opción para que la mayor parte del trabajo lo hagan las computadoras en vez de personas y detectar los fallos de seguridad en cuanto sean publicados.</p>
<p>La misma organización OWASP proporciona una herramienta automatizada para comprobar la seguridad de las dependencias de un proyecto. La herramienta se usa como un complemento en las herramientas de construcción <a href="https://gradle.org/">Gradle</a> o <a href="https://maven.apache.org/">Maven</a> y al ejecutar las tareas que añaden analizan las dependencias y versiones del proyecto y las compara con las bases de datos de errores conocidos. El resultado es un informe con una lista de las vulnerabilidades de cada librería del proyecto si es que tienen alguna. El <em>plugin</em> de OWASP también detecta los fallos de seguridad en las dependencias de forma transitiva a las que se declaren en el archivo de construcción de forma explícita.</p>
<p>En el siguiente ejemplo de proyecto con Gradle se incluye como dependencia una versión de Log4j 2 vulnerable, con el <em>plugin</em> de OWASP para detectar vulnerabilidades y la tarea <em>dependencyCheckAnalyze</em> se identifican los CVE a los que es vulnerable cada una de las dependencias en este caso la de Log4j 2. En cada uno de los CVE y en las referencias asociadas se detalla el fallo de seguridad.</p>
<p>Estos son los CVE que detecta para la versión 2.14.1.</p>
<ul>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2021-44228">CVE-2021-44228</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2021-44832">CVE-2021-44832</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2021-45046">CVE-2021-45046</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2021-45105">CVE-2021-45105</a></li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s2">&#34;org.owasp.dependencycheck&#34;</span> <span class="n">version</span> <span class="s2">&#34;6.5.2.1&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s2">&#34;org.apache.logging.log4j:log4j-core:2.14.1&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//implementation(&#34;org.apache.logging.log4j:log4j-core:2.17.1&#34;)&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.dependencycheck.App&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build-1.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew dependencyCheckAnalyze&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-dependencycheck.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&gt; Task :app:dependencyCheckAnalyze&#10;</span></span><span class="line"><span class="cl">Verifying dependencies for project app&#10;</span></span><span class="line"><span class="cl">Checking for updates and analyzing dependencies for vulnerabilities&#10;</span></span><span class="line"><span class="cl">Generating report for project app&#10;</span></span><span class="line"><span class="cl">Found 4 vulnerabilities in project app&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">One or more dependencies were identified with known vulnerabilities in app:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">log4j-core-2.14.1.jar (pkg:maven/org.apache.logging.log4j/log4j-core@2.14.1, cpe:2.3:a:apache:log4j:2.14.1:*:*:*:*:*:*:*) : CVE-2021-44228, CVE-2021-44832, CVE-2021-45046, CVE-2021-45105&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">See the dependency-check report for more details.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">BUILD SUCCESSFUL in 2m 47s&#10;</span></span><span class="line"><span class="cl">1 actionable task: 1 executed</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-dependencycheck-1.out</span>
    </div>
</div>
<p>Detectado el fallo de seguridad basta con cambiar la versión de Log4j 2 a la última no vulnerable y el error desaparece del informe.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s2">&#34;org.owasp.dependencycheck&#34;</span> <span class="n">version</span> <span class="s2">&#34;6.5.2.1&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//implementation(&#34;org.apache.logging.log4j:log4j-core:2.14.1&#34;)&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s2">&#34;org.apache.logging.log4j:log4j-core:2.17.1&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.dependencycheck.App&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build-2.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&gt; Task :app:dependencyCheckAnalyze&#10;</span></span><span class="line"><span class="cl">Verifying dependencies for project app&#10;</span></span><span class="line"><span class="cl">Checking for updates and analyzing dependencies for vulnerabilities&#10;</span></span><span class="line"><span class="cl">Generating report for project app&#10;</span></span><span class="line"><span class="cl">Found 0 vulnerabilities in project app</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-dependencycheck-2.out</span>
    </div>
</div>
<p>En un proyecto con Maven el análisis se realiza con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">$</span> <span class="n">mvn</span> <span class="n">org</span><span class="o">.</span><span class="na">owasp</span><span class="o">:</span><span class="n">dependency</span><span class="o">-</span><span class="n">check</span><span class="o">-</span><span class="n">maven</span><span class="o">:</span><span class="n">6</span><span class="o">.</span><span class="na">5</span><span class="o">.</span><span class="na">2</span><span class="o">.</span><span class="na">1</span><span class="o">:</span><span class="n">check</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mvn.sh</span>
    </div>
</div>
<h4 id="analizar-repositorios-de-git">Analizar repositorios de Git</h4>
<p>En una organización con gran cantidad de repositorios de Git un error como este supone analizar cada uno de los proyectos, para automatizar la tarea el siguiente <em>script</em> clona los repositorios a analizar, detecta si es un repositorio Gradle o Maven y ejecuta la tarea de análisis de las dependencias.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">initscript</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">classpath</span> <span class="s1">&#39;org.owasp:dependency-check-gradle:6.5.2.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">allprojects</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="n">org</span><span class="o">.</span><span class="na">owasp</span><span class="o">.</span><span class="na">dependencycheck</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">DependencyCheckPlugin</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>init.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;settings</span> <span class="na">xmlns=</span><span class="s">&#34;http://maven.apache.org/SETTINGS/1.0.0&#34;</span> <span class="na">xmlns:xsi=</span><span class="s">&#34;http://www.w3.org/2001/XMLSchema-instance&#34;</span> <span class="na">xsi:schemaLocation=</span><span class="s">&#34;http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd&#34;</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/settings&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>settings.xml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">#!/usr/bin/env bash</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># Checks Maven and Gradle dependencies vulnerabilities using OWASP plugins.</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># https://owasp.org/www-project-dependency-check/</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">WORKDIR</span><span class="o">=</span><span class="s2">&#34;repositories&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">USER</span><span class="o">=</span>picodotdev&#10;</span></span><span class="line"><span class="cl"><span class="nv">REPOSITORIES</span><span class="o">=()</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">REGEXP</span><span class="o">=</span><span class="s2">&#34;log4j-core&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">function</span> main<span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;mkdir -p <span class="nv">$WORKDIR</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">cd</span> <span class="nv">$WORKDIR</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> I in <span class="si">${</span><span class="p">!REPOSITORIES[@]</span><span class="si">}</span><span class="p">;</span> <span class="k">do</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">REPOSITORY</span><span class="o">=</span><span class="si">${</span><span class="nv">REPOSITORIES</span><span class="p">[</span><span class="si">${</span><span class="nv">I</span><span class="si">}</span><span class="p">]</span><span class="si">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="s2">&#34;Checking </span><span class="nv">$REPOSITORY</span><span class="s2"> (https://github.com/</span><span class="nv">$USER</span><span class="s2">/</span><span class="nv">$REPOSITORY</span><span class="s2">)&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;</span><span class="nv">$REPOSITORY</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git clone <span class="s2">&#34;git@github.com:</span><span class="nv">$USER</span><span class="s2">/</span><span class="nv">$REPOSITORY</span><span class="s2">.git&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">else</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">(</span><span class="nb">cd</span> <span class="nv">$REPOSITORY</span> <span class="o">&amp;&amp;</span> git pull origin<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">fi</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">[</span> -f <span class="s2">&#34;</span><span class="nv">$REPOSITORY</span><span class="s2">/pom.xml&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;checkMaven <span class="nv">$REPOSITORY</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">elif</span> <span class="o">[</span> -f <span class="s2">&#34;</span><span class="nv">$REPOSITORY</span><span class="s2">/build.gradle&#34;</span> -o -f <span class="s2">&#34;</span><span class="nv">$REPOSITORY</span><span class="s2">/settings.gradle&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;checkGradle <span class="nv">$REPOSITORY</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">else</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="s2">&#34;Not checkeable project </span><span class="nv">$REPOSITORY</span><span class="s2"> (not detected as Maven or Gradle project)&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">fi</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">done</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">function</span> checkMaven<span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">REPOSITORY</span><span class="o">=</span><span class="nv">$1</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">(</span><span class="nb">cd</span> <span class="nv">$REPOSITORY</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&#34;Checking </span><span class="nv">$REPOSITORY</span><span class="s2"> dependencies...&#34;</span> <span class="o">&amp;&amp;</span> mvn --settings ../../settings.xml org.owasp:dependency-check-maven:6.5.2.1:check<span class="o">)</span><span class="p">;</span> <span class="nv">EXIT_CODE</span><span class="o">=</span><span class="nv">$?</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">#(cd $REPOSITORY &amp;&amp; echo &#34;Checking $REPOSITORY dependencies...&#34; &amp;&amp; mvn --settings ../../settings.xml org.owasp:dependency-check-maven:6.5.2.1:check) | grep -E &#34;$REGEXP&#34; | sort | uniq; EXIT_CODE=${PIPESTATUS[0]}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$EXIT_CODE</span><span class="s2">&#34;</span> !<span class="o">=</span> <span class="s2">&#34;0&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="s2">&#34;Check not completed with success (</span><span class="nv">$EXIT_CODE</span><span class="s2">)&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">fi</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">function</span> checkGradle<span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">REPOSITORY</span><span class="o">=</span><span class="nv">$1</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">(</span><span class="nb">cd</span> <span class="nv">$REPOSITORY</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&#34;Checking </span><span class="nv">$REPOSITORY</span><span class="s2"> dependencies...&#34;</span> <span class="o">&amp;&amp;</span> gradle --init-script ../../init.gradle dependencyCheckAnalyze<span class="o">)</span><span class="p">;</span> <span class="nv">EXIT_CODE</span><span class="o">=</span><span class="nv">$?</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">#(cd $REPOSITORY &amp;&amp; echo &#34;Checking $REPOSITORY dependencies...&#34; &amp;&amp; gradle --init-script ../../init.gradle dependencyCheckAnalyze) | grep -E &#34;$REGEXP&#34; | sort | uniq; EXIT_CODE=${PIPESTATUS[0]}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$EXIT_CODE</span><span class="s2">&#34;</span> !<span class="o">=</span> <span class="s2">&#34;0&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="s2">&#34;Check not completed with success (</span><span class="nv">$EXIT_CODE</span><span class="s2">)&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">fi</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">main&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>owasp-vulnerabilities-check.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DependencyCheck">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew dependencyCheckAnalyze</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/index.html">Dependency Check Gradle Usage</a></li>
<li><a href="https://owasp.org/www-project-dependency-check/">OWASP Dependency-Check</a></li>
<li><a href="https://nullbeans.com/how-to-identify-vulnerable-dependencies-in-a-maven-project/">How to identify vulnerable dependencies in a Maven project</a></li>
<li><a href="https://www.infoworld.com/article/3644492/how-to-detect-the-log4j-vulnerability-in-your-applications.html">How to detect the Log4j vulnerability in your applications</a></li>
<li><a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/enabling-and-disabling-dependabot-version-updates#enabling-dependabot-version-updates">Enabling Dependabot version updates</a></li>
<li><a href="https://plugins.jenkins.io/dependency-check-jenkins-plugin/">Jenkins Plugin OWASP Dependency-Check</a></li>
<li><a href="https://anchore.com/opensource/">Anchore</a></li>
<li><a href="https://github.com/anchore/syft">Syft</a></li>
<li><a href="https://github.com/anchore/grype">Grype</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/12/hemeroteca-20/</id>
        <title>Hemeroteca #20</title>
        <updated>2021-12-30T10:00:00+01:00</updated>
        <published>2021-12-30T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/12/hemeroteca-20/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El número de visitas aunque crece muy ligeramente ya no lo hace al ritmo de los primeros años y los ingresos se mantienen en cifras similares a los de los años anteriores, aunque suficientes para alguna necesidad, juego de consola o donación a algún proyecto de software libre que uso. Este 2021 han sido 73 artículos nuevos escribiendo al menos un artículo a la semana, mi intención es que siga siendo parecido durante el 2022.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Los blogs quizá han perdido relevancia con la aparición <a href="https://www.youtube.com/">YouTube</a>, <a href="https://www.twitch.tv/">Twitch</a> y las redes sociales como nueva forma de compartir contenido, los vídeos tiene sus ventajas pero también algunas desventajas, una de sus ventajas es que es un contenido más fácil de consumir, leer requiere algo más de esfuerzo y comprender el contenido escrito requiere más atención. La desventaja es que en muchos vídeos los <em>youtubers</em> para decir una única idea la repiten varias veces de diferentes formas resultando en un vídeo de un cuarto de hora cuando en un blog la misma idea se lee en un par de minutos.</p>
<p>A día de hoy no me veo como <em>youtuber</em> porque para escribir un <em>tweet</em> algunos necesito editarlos 3 veces para que no quede ninguna falta de ortografía, y el texto de los artículos también los edito por lo mismo o por retocarlos, con un vídeo no podría hacer eso y hay algunos <em>youtubers</em> que hablan sin cortes durante 30 minutos y el trabajo de edición posterior que les hacen a los vídeos es significativo. También por privacidad ya que un canal de <em>youtuber</em> requiere dar imagen, hay algunos canales que solo ponen la voz pero son la minoría.</p>
<p>No se que tiene YouTube para generar a las personas el escribir comentarios pero se escriben muchos más que en cualquier artículo de cualquier blog. Alguna vez he comentado que recibo pocos comentarios pero la realidad es que también escribo pocos, tampoco es algo que sea a lo que más importancia le dé para seguir motivado al escribir artículos.</p>
<p>Aquí hay una <a href="https://proyectotictac.com/blogs-linux/">recopilación bastante exhaustiva de todos los blogs de habla hispana sobre software libre y GNU/Linux</a> junto a otros medios que utilizan los creadores de contenido tanto en de España como de América. El mío no está a pesar de ser uno de ya con 10 años lleve más tiempo que algunos de esos. No interacciono mucho con la comunidad y como digo en mi blog hablo de GNU/Linux pero es un blog solo de GNU/Linux, hablo de Java pero no es un blog solo de Java y desde que tengo una PlayStation 4 estoy hablando de los juegos que voy jugando, no tengo un tema único con lo que no puedo ponerle una solo etiqueta.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="retrospectiva-2021">Retrospectiva 2021</h3>
<p>Durante este 2021 he ido escribiendo cada semana el artículo que he publicado cuando años anteriores el tema del artículo que escribía lo tenía apuntado en una lista de ideas para que no se me olvidase y escrito desde hace varias semanas. Este es uno de los motivos por los que durante este año he estado escribiendo la mayoría de las semanas un solo artículo cuando en el 2020 muchas de las semanas escribí dos a la semana.</p>
<p>En el 2022 espero seguir escribiendo un artículo a la semana mientras tenga ideas y no eche de menos el tiempo para hacer otras cosas.</p>
<h4 id="evolución-visitas">Evolución visitas</h4>
<p>Hay canales de YouTube que en un par de meses tienen 200 suscriptores, en 6 meses 1000 suscriptores y con únicamente 7 vídeos publicados de 1 hora con de 1K a 10K visualizaciones por vídeo. En mi blog no creo que tenga tantas personas suscritas al <em>feed</em> y en <em>twitter</em> solo tengo 400 seguidores. El truco para conseguir crecer en un <em>blog</em> o cualquier sitio de contenido no depende únicamente de crear buen contenido, con eso solo crecer requiere mucho tiempo, sino conseguir además que el contenido sea compartido por cuentas con muchos seguidores que permite llegar a mucha más gente. La importancia que tienen los suscriptores, al menos la que le doy yo es más por ya que una vez que uno dedica tiempo a escribir contenido este sea leído, ver que es leído por muchas personas y que crece o llega a una cifra respetable es una forma de motivación para seguir creando contenido.</p>
<p>Hace unos meses puse en un <em>tweet</em> a un <em>youtuber</em> sobre GNU/Linux que estaba iniciando su canal, aún tenía pocos meses, se me ocurrió relacionarlo con otro creador de contenido mucho más conocido y con una trayectoria de más de una década compartiendo ya que justo hace unos días anunció que iba dejar de hacerlo tan habitualmente y cambiaría de temas, se me ocurrió relacionarlos al que lleva mucho tiempo y lo deja y el que empieza y ayudar al nuevo ya que esperaba que fuera compartido, era un contraste que es la ley de vida para los creadores de contenido unos lo dejan otros empiezan, con todos los seguidores que tenía el <em>youtuber</em> conocido al retuitear el mensaje fue difundido a gran cantidad de personas interesadas en el tema, en Twitter consiguió unas decenas de seguidores y en YouTube casi una centena de suscriptores partiendo de unos 200. El mayor mérito lo de la difusión la tuvo el creador de contenido conocido por su gran cantidad de seguidores.</p>
<p>Me sorprende que hay varios <em>youtubers</em> de los que tengo constancia que en realidad no son informáticos pero lo usan a nivel doméstico  además comparten contenido en sus canales con éxito seguidos por muchas personas, dos buenos ejemplos son <em>yoyo</em> en su canal de <a href="https://www.youtube.com/c/SalmorejoGeek">Salmorejo Geek</a> con 16K suscriptores que se dedica a la agricultura y otro <em>Karla</em> en su canal del <a href="https://www.youtube.com/channel/UCgHXvTpaNOBCIDqCNhOxPkg">Karla&rsquo;s Project</a> con 57K suscriptores.</p>
<p>Aunque levemente ascendente las páginas vistas se mantienen entre 45K y 65K dependiendo del mes, estas ya no crecen en la misma progresión que en en los primeros tres años del blog.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/hemeroteca-20/images/google-analytics_hu30260bf80f12822742f09585c35d01ea_41995_2560x1440_fit_box_3.png" data-gallery="" title="Evolución visitas 2021"><img src="https://picodotdev.github.io/blog-bitix/2021/12/hemeroteca-20/images/google-analytics_hu30260bf80f12822742f09585c35d01ea_41995_650x450_fit_box_3.png" width="650" height="220" alt="Evolución visitas 2021" title="Evolución visitas 2021"  class="lozad "></a></p>
<figcaption>Evolución visitas 2021</figcaption>
</figure>
</div>
<h4 id="evolución-ingresos">Evolución ingresos</h4>
<p>Al poco tiempo de crear el blog le puse publicidad AdSense, al principio por curiosidad de saber cuántos ingresos pueden obtenerse, posteriormente ya que creaba contenido una forma de monetizarlo que aunque no compensa el tiempo dedicado es una pequeña forma de motivación y suficiente para costear comprar de un teclado mecánico, quizá renovar el lector de libros electrónicos Kindle y algún juego de consola para el que no tengo tanto tiempo para jugar como podría si no se lo dedicase al blog.</p>
<p>No he tenido muchas ofertas de artículos patrocinados, sí contactos pero que se materialicen no tantos, varios preguntan pero en cuanto se les indica la cantidad a pagar ya no responden más ni siquiera para decir que no les interesa. Algunos han sido incluso intentos de <em>phishing</em>. No he recibido tantos artículos patrocinados que son los que me recargan mi saldo en <a href="https://www.paypal.com/">PayPal</a>, pero el final de año ha acabado con uno para el proveedor de infraestructura <em>cloud</em> de <a href="https://clouding.io/">Clouding</a>. Ya había escrito uno para Clouding y en esta ocasión han querido publicar otro, un artículo enteramente escrito por mi y con total libertad editorial en tema y contenido.</p>
<p>Unos 400 € por ingresos de AdSense, 50 € por afiliado de Amazon y 150 € por patrocinios. No está mal pero que nadie piense que compensa el tiempo dedicado al blog.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/hemeroteca-20/images/google-adsense_hu108670da4a294999a04d30e59f7739c9_37771_2560x1440_fit_box_3.png" data-gallery="" title="Evolución ingresos AdSense y Amazon Afiliados 2021"><img src="https://picodotdev.github.io/blog-bitix/2021/12/hemeroteca-20/images/google-adsense_hu108670da4a294999a04d30e59f7739c9_37771_650x450_fit_box_3.png" width="650" height="271" alt="Evolución ingresos AdSense y Amazon Afiliados 2021" title="Evolución ingresos AdSense y Amazon Afiliados 2021"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/hemeroteca-20/images/amazon-afiliados_hue861547ba963e13f624a430dedd615af_66550_2560x1440_fit_box_3.png" data-gallery="" title="Evolución ingresos AdSense y Amazon Afiliados 2021"><img src="https://picodotdev.github.io/blog-bitix/2021/12/hemeroteca-20/images/amazon-afiliados_hue861547ba963e13f624a430dedd615af_66550_650x450_fit_box_3.png" width="650" height="316" alt="Evolución ingresos AdSense y Amazon Afiliados 2021" title="Evolución ingresos AdSense y Amazon Afiliados 2021"  class="lozad "></a></p>
<figcaption>Evolución ingresos AdSense y Amazon Afiliados 2021</figcaption>
</figure>
</div>
<h4 id="sobre-blog-bitix">Sobre Blog Bitix</h4>
<p>Desde que divido los artículos en secciones me facilita escribirlos con mejor estructura además de facilitar la lectura, quedan artículos más largos pero también me lleva más tiempo escribirlos. Este 2021 casi todas las semanas he ido escribiendo sobre temas planificados la semana anterior o durante esa misma semana. Estos son los motivos por los que durante este año he escrito muchas semanas un solo artículo.</p>
<p>Al nivel que le dedico al blog es casi un segundo trabajo, un artículo puede parecer poco pero es que casi con la rutina que tengo ahora es casi dedicarlo de lunes a jueves a escribirlo, hacer el ejemplo si lo tiene y publicarlo. Lunes hacer ejemplo, martes hacer tabla de contenidos y escribir primeros apartados, miércoles terminar el resto de apartados y jueves publicarlo. Así que llega el viernes y casi no me apetece ni jugar a la <em>play</em> solo escuchar música medio dormido. La semana pasa rápido y una nueva semana con la misma rutina empieza. Un artículo puede parecer poco para el que ve solo el artículo publicado un día y lo lee en quince minutos pero detrás en lo que no se ve el tiempo de dedicación a ese artículo ha sido varios días anteriores.</p>
<p>Cuando un blog tiene muchos artículos parte del trabajo también se emplea en retocar y actualizar los antiguos como sustituir <a href="https://github.com/aristocratos/bpytop">bpytop</a> por <a href="https://github.com/aristocratos/btop">btop</a>, al menos si no se quiere que los artículos queden desfasados y sigan teniendo cierta vigencia. También tengo una lista para los artículos que me gustaría actualizar, pero también por falta de tiempo no puedo hacerlo todo, al menos si quiero hacer otras cosas que no sea únicamente el blog.</p>
<p>Otro apartado que requiere tiempo es mejorar la propia infraestructura del blog. Un cambio que he hecho es utilizar <a href="https://github.com/features/actions">GitHub Actions</a> para publicar el contenido del blog, me evita tener que crearlo en local con lo que ahorro casi 2 GiB de espacio y bytes escritos en el SSD local. Otro cambio ha sido la gestión de los enlaces de Amazon, con el paso del tiempo muchos se van rompiendo, el cambio me permite saber que enlaces tengo en los artículos dándoles una etiqueta, por ejemplo, enlaces de afiliado de teclado mecánico y poder insertar los mismos enlaces en varios artículos de forma que no tenga que ir a cada artículo cambiándolos, sigue siendo un trabajo manual pero menos que antes. Aún no he tenido necesidad de migrar el blog de Github Pages a otro hospedaje, hasta que no me echen posiblemente no me vaya y entonces tendré que pensar que <em>hosting</em> elijo, una opción es Clouding.</p>
<h4 id="continuando-mejorando-alis-y-futuras-ideas">Continuando mejorando alis y futuras ideas</h4>
<p>Aunque <a href="https://www.archlinux.org/">Arch Linux</a> en el medio de instalación incluye un <em>script</em> para facilitar la instalación aún así hay una buena cantidad de usuarios que siguen usando alis que deduzco porque sigue siendo marcado como favorito y con <em>forks</em>. Y es que de los <em>scripts</em> de instalación de Arch Linux que he visto sigo prefiriendo los conceptos en los que se basa alis, automatizado, desatendido, simple y configurable. Otros <em>scripts</em> no cumplen alguno o varios de estos principios que tengo para alis, aunque alis sea simplemente un <em>script</em> en bash no he visto ninguna implementación mejor en todos los aspectos.</p>
<p>Ya tengo varias pequeñas ideas para mejorar alis. Más que para el <em>script</em> para seguir promocionándolo. Una de estas mejoras es escribir más contenido para atraer visitas como mejorar su sitio web, una guía de usuario, una descripción más detallada, que opinan los usuarios, opciones alternativas y algo de documentación sobre la configuración. Completar algo más los principios en los que se basa el <em>script</em> y que espera el <em>script</em> de los usuarios que lo usen, alis principalmente no es un <em>script</em> para que un usuario sin ningún conocimiento sea capaz de instalar Arch Linux sino para facilitarlo a quien está dispuesto a aprender o ya conoce Arch Linux, el <em>script</em> espera que si no se ajusta a tus necesidades lo modifiques y envíes un <em>pull request</em> si esa funcionalidad es útil para otros usuarios o que el usuario pida ayuda como último recurso en caso de no resolver el problema por sí mismo con los recursos existentes de la excelente Wiki de Arch y sus foros. En Arch Linux no es recomendable usar una configuración que no sabes como funciona, al menos lo básico, el riesgo de hacerlo es que pierdas los datos en caso de que surja un error o en una actualización y no sepas como repararlo. Para usar GNU/Linux como primer contacto sin complicaciones son mejores distribuciones <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://fedoraproject.org/">Fedora</a>, <a href="https://www.opensuse.org/">openSuse</a>, <a href="https://www.debian.org/">Debian</a> o <a href="https://elementary.io/es/">elementaryOS</a>.</p>
<p>Ya le he añadido Google Analytics para ver cuantas visitas tiene el <a href="https://picodotdev.github.io/alis/">sitio web de alis</a>, de momento son unas 30 visitas diarias, una vez le añada alguna página más de contenido y mejore algo en SEO supongo que recibirá alguna más. Con estos pocos datos veo si realmente tiene algún impacto los cambios que haga, esto es útil para tomar alguna decisión conociendo datos en vez de solo intuición.</p>
<p>Otra idea que ya he implementado es utilizar el espacio de discusiones o foro que ofrece <a href="https://docs.github.com/en/discussions">GitHub Discussions</a> para tratar de crear algo de comunidad sobre el <em>script</em> que seguro me permite obtener información sobre cómo mejorarlo y como una forma de darlo a conocer. La primera pregunta que he hecho ha sido <a href="https://github.com/picodotdev/alis/discussions/150">Why do you use alis?</a>.</p>
<p>Otra idea es tratar de monetizarlo. Con publicidad AdSense seguro que no da para mucho, mucho menos que el blog pero aunque sea poco al menos es una forma de mantenerme motivado para seguir mejorándolo y evitar abandonarlo, al escribir algo más de contenido posiblemente tenga alguna visita más. No se si volveré a incluir la opción de donación, y es que PayPal en las cuentas personales al hacer la donación muestra el nombre real del usuario cosa que por privacidad es un problema para mi, no se si volveré a añadir esta opción. Y no se si solicitar el programa de <em>sponsors</em> de Github.</p>
<p>Pero bueno que tampoco sea muy famoso no está mal porque no quiero que al usarlo muchos usuarios suponga una gran cantidad de solicitudes de <em>features</em>, <em>issues</em> y <em>bugs</em> que crezcan a un ritmo que no pueda asumir o que me requiera mucho tiempo.</p>
<p>He recibido varios <em>pull request</em> que aunque no he incorporado tal cual me han servido como base para hacer los cambios. Durante este año, he hecho el mismo cambio que en el blog para generar el sitio web usando GitHub Actions. He añadido soporte para <a href="https://pipewire.org/">PipeWire</a>, mejorado el soporte para <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd-homed</a> y la posibilidad de configurar la disposición de sobvolúmnes con el sistema de archivos <em>btrfs</em>.</p>
<h3 id="otras-contribuciones">Otras contribuciones</h3>
<p>Sigo realizando las traducciones de <a href="https://www.videolan.org/vlc/">VLC</a>, <a href="https://keepassxc.org/">KeePassXC</a> y <a href="https://www.virtualbox.org/">VirtualBox</a>. La de VLC la estoy dejando algo aparcada, me gustaría que hubiese alguien que pudiese contribuir a traducir VLC sobre todo aquellas partes que yo no uso como la versión para iOS y Android.</p>
<h3 id="artículos-publicados">Artículos publicados</h3>
<p>Si en el 2020 publiqué unos 90 artículos, este he publicado algunos menos por tiempo y porque no he tenido tantas ideas para escribir artículos. Este 2021 han sido 73 artículos nuevos y algunos pocos más que he actualizado. Los temas son los mismos de siempre, estos artículos son los del segundo semestre.</p>
<p>Urte berri on!, Buen año nuevo!</p>
<h4 id="artículos-sobre-java-y-programación">Artículos sobre Java y programación</h4>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/07/como-documentar-una-api-rest-con-swagger-implementada-con-spring-boot/">Cómo documentar una API REST con Swagger implementada con Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/07/los-niveles-de-madurez-rest-ejemplo-con-hateoas-y-documentacion-con-swagger-de-un-servicio-con-spring-boot/">Los niveles de madurez REST, ejemplo con HATEOAS y documentación con Swagger de un servicio con Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/07/formas-de-generar-un-numero-aleatorio-en-un-rango-con-java/">Formas de generar un número aleatorio en un rango con Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/07/servidor-mock-para-imitar-peticiones-y-respuestas-de-servicios-http-con-wiremock/">Servidor mock para imitar peticiones y respuestas de servicios HTTP con WireMock</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/08/integracion-de-servicios-y-sistemas-con-apache-camel/">Integración de servicios y sistemas con Apache Camel</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/08/introduccion-y-ejemplo-de-contract-testing-con-pact/">Introducción y ejemplo de contract testing con Pact</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/08/el-patron-de-estrangulacion-para-reemplazar-aplicaciones-heredadas/">El patrón de estrangulación para reemplazar aplicaciones heredadas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/08/the-three-ways-y-the-five-ideals-de-los-libros-the-devops-handbook-the-phoenix-project-y-the-unicorn-project/">The three ways y The five ideals de los libros The DevOps Handbook, The Phoenix Project y The Unicorn Project</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/09/novedades-y-nuevas-caracteristicas-de-java-17/">Novedades y nuevas características de Java 17</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/09/escapar-simbolos-especiales-en-una-expresion-regular-en-java/">Escapar símbolos especiales en una expresión regular en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/10/sincronizacion-de-hora-automatica-con-el-protocolo-ntp-en-gnu-linux/">Sincronización de hora automática con el protocolo NTP en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/10/razones-para-cambiar-a-gnu-linux-en-vez-de-usar-windows-y-macos/">Razones para cambiar a GNU/Linux en vez usar Windows y macOS</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/01/validar-documentos-json-con-json-schema/">Validar documentos JSON con JSON Schema</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/12/buenas-practicas-de-programacion-sencillas-en-el-codigo-fuente/">Buenas prácticas de programación sencillas en el código fuente</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/12/configuracion-de-una-aplicacion-con-spring-boot-y-configuracion-centralizada-con-spring-cloud-config/">Configuración de una aplicación con Spring Boot y configuración centralizada con Spring Cloud Config</a></li>
</ul>
<h4 id="artículos-sobre-gnulinux-y-software-libre">Artículos sobre GNU/Linux y software libre</h4>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/09/los-diagramas-uml-para-documentar-y-una-aplicacion-para-crearlos/">Los diagramas UML para documentar y una aplicación para crearlos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/09/aplicaciones-adicionales-disenadas-para-el-entorno-de-escritorio-gnome/">Aplicaciones adicionales diseñadas para el entorno de escritorio GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/09/el-proxy-inverso-traefik-caracteristicas-y-funcionalidades-que-ofrece/">El proxy inverso Traefik, características y funcionalidades que ofrece</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/09/planificar-procesos-periodicos-y-scripts-con-nomad/">Planificar procesos periódicos y scripts con Nomad</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/09/contenedores-en-macos-con-lima-y-minikube/">Contenedores en macOS con Lima y minikube</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/">Manual básico sobre ataques informáticos, peligros, tipos, cómo detectarlos, cómo evitarlos y medidas de prevención</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/">Medidas de seguridad a implementar para prevenir y minimizar daños en ataques informáticos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/11/por-que-proteger-tu-privacidad-y-que-informacion-tuya-se-puede-encontrar-con-una-busqueda-en-internet/">Por qué proteger tu privacidad y qué información tuya se puede encontrar con una búsqueda en internet</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/11/ejemplo-de-un-potencial-ataque-informatico-de-phishing-el-caso-de-el-gatico-biever/">Ejemplo de un potencial ataque informático de phishing, El caso de El Gatico Biever</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/">Aprovisionar un servidor en la infraestructura cloud de Clouding con Ubuntu y Nginx usando Ansible y protocolo seguro HTTPS con Let&rsquo;s Encrypt</a></li>
</ul>
<h4 id="artículos-sobre-javascript-y-web">Artículos sobre JavaScript y web</h4>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/09/anadir-un-mapa-cartografico-con-javascript-leaflet-y-openstreetmap-a-una-pagina-web/">Añadir un mapa cartográfico con JavaScript, Leaflet y OpenStreetMap a una página web</a></li>
</ul>
<h4 id="artículos-sobre-juegos">Artículos sobre juegos</h4>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/07/analisis-guia-y-consejos-del-juego-roguelike-darkest-dungeon/">Análisis, guía y consejos del juego roguelike Darkest Dungeon</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/07/prueba-y-opinion-sobre-jugar-mediante-streaming/">Prueba y opinión sobre jugar mediante streaming</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/10/analisis-del-maravilloso-juego-horrible-the-last-of-us/">Análisis del maravilloso juego horrible The Last of Us</a></li>
</ul>
<h4 id="otros-temas">Otros temas</h4>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/11/desempaquetado-de-teclado-mecanico-glorious-gmmk-tkl/">Desempaquetado de teclado mecánico Glorious GMMK TKL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/12/como-limpiar-a-fondo-un-teclado-de-ordenador/">Cómo limpiar a fondo un teclado de ordenador</a></li>
</ul>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/</id>
        <title>Aprovisionar un servidor en la infraestructura cloud de Clouding con Ubuntu y Nginx usando Ansible y protocolo seguro HTTPS con Let&#39;s Encrypt</title>
        <updated>2021-12-23T09:00:00+01:00</updated>
        <published>2021-12-23T09:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La computación <em>cloud</em> permite crear un servidor con unos pocos <em>clics</em>, en unos pocos minutos, con la posibilidad de ajustar a las necesidades su capacidad en unidades de cómputo, memoria y almacenamiento y facturado solo por los recursos consumidos por unidad de tiempo y con la flexibilidad de ampliar o reducir la capacidad del servidor <em>cloud</em> en cualquier momento. Si con la computación <em>cloud</em> ya es muy sencillo y rápido disponer de un servidor la mayor dificultad está en aprovisionarlo para que ofrezca el servicio que se desea, para facilitar el aprovisionamiento hay herramientas como Ansible diseñadas con este objetivo y tratar la infraestructura como código. En este artículo muestro como crear y aprovisionar un servidor <em>cloud</em> en la infraestructura <em>cloud</em> de Clouding para un servidor web con Ubuntu y Nginx aprovisionado con Ansible y configurado con el protocolo seguro HTTPS con certificados generados por Let&rsquo;s Encrypt.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/clouding.svg" width="300" height="222" alt="Clouding.io" title="Clouding.io"  class=""></p>
</div>
<p>Para ofrecer un servicio a través de internet es indispensable un servidor que por motivos de fiabilidad entre otros es recomendable contratar a un proveedor de infraestructura. La tendencia es usar servidores <em>cloud</em> con las ventajas de solicitud de creación de los servidores mediante autoservicio con unos pocos clics, de forma rápida en unos pocos minutos y la posibilidad de ampliarlo, o reducirlo, en potencia cómputo, memoria del sistema o almacenamiento, además de una facturación por uso.</p>
<p>La parte de tener un servidor accesible en internet para proporcionar un servicio ya se consigue en unos pocos clics, no hace falta presupuestarlo, ni comprar hardware y pagar su precio de forma completa por adelantado, ni recibirlo y montarlo, ni alojarlo en infraestructura propia. La parte más difícil de un servidor es aprovisionarlo y configurarlo para el propósito que se desee y para facilitar esta tarea hay herramientas de software específicas.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="infraestructura-_cloud_-de-clouding">Infraestructura <em>cloud</em> de Clouding</h3>
<p>Uno de los proveedores de infraestructura <em>cloud</em> más reconocidos con sede en España es <a href="https://clouding.io/">Clouding</a>, con un servicio de grado empresarial que ofrece un servicio de IaaS con oficinas y centro de datos en Barcelona. Como proveedor de computación <em>cloud</em> ofrece las varias importantes ventajas de este modelo de alojar servicios entre los que están disponer de un servidor en unos pocos clics y en pocos minutos, gran flexibilidad en la selección para configuración del servidor en capacidad de cómputo, memoria y almacenamiento permitiendo ajustar el precio a las necesidad del servicio, flexibilidad para cambiar ya sea ampliar o reducir la configuración del servidor y facturación según uso por unidad de tiempo en horas.</p>
<p>Una de las ventajas determinante y diferenciadora de Clouding sobre otros proveedores es que al tener sede en España ofrece soporte de asistencia en caso de necesidad por personas en España. No es habitual requerir de esta asistencia pero en caso de necesitarla por el impacto que tiene si el servicio es de gran importancia para una empresa o persona si de este depende su facturación, clientes o sus proveedores. La asistencia es una característica determinante para la toma de una decisión al elegir un proveedor para en caso de necesidad restaurar el servicio.</p>
<p>Al crear una cuenta en Clouding ofrecen un cupón de 5 € para probar su servicio gratis, este saldo permite crear una instancia de servidor <em>cloud</em> con un tiempo de funcionamiento ininterrumpido de unos 45 días en la configuración más básica.</p>
<h4 id="selección-de-capacidad-de-los-servidores">Selección de capacidad de los servidores</h4>
<p>Clouding permite seleccionar los recursos de cómputo para los servidores según las necesidades partiendo de la opción más básica de 1/2 unidades de cómputo, 2 GiB por core y 5 GiB de almacenamiento con la opción de elegir Linux o Windows como sistema operativo y dentro de Linux con varias distribuciones y versiones como <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://www.centos.org/">Centos</a> o <a href="https://www.debian.org/">Debian</a>. Esta opción más básica que ya es apta para algunos servicios parte de los 3 € al mes, la opción más capaz llega a las 48 unidades de cómputo o <em>cores</em>, 192 GiB de memoria y casi 2 TiB de almacenamiento suficiente incluso para las necesidades empresariales más exigentes con un precio de 550 € al mes. Y entre la opción más básica y la más capaz la posibilidad de elegir individualmente cada uno de los tres parámetros principales de configuración como unidades de cómputo, memoria y almacenamiento gracias a la computación <em>cloud</em> y una ventaja de los servidores virtuales privados de la generación anterior que no tenían una configuración tan flexible.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-seleccion-recursos_hu4d653a847292bbd73fcf30ba726290c0_129423_2560x1440_fit_box_3.png" data-gallery="" title="Selección de los recursos de cómputo y coste"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-seleccion-recursos_hu4d653a847292bbd73fcf30ba726290c0_129423_650x450_fit_box_3.png" width="455" height="450" alt="Selección de los recursos de cómputo y coste" title="Selección de los recursos de cómputo y coste"  class="lozad "></a></p>
<figcaption>Selección de los recursos de cómputo y coste</figcaption>
</figure>
</div>
<h4 id="infraestructura">Infraestructura</h4>
<p>Clouding ofrece una infraestructura de alta disponibilidad, con servicios de copias de seguridad para preservar datos y restauración, toma de instantáneas como medida de seguridad y recuperación, archivado de servidores para ahorrar costes, redimensionado de servidores gracias a la computación <em>cloud</em> y configuración de red privada para mayor seguridad. En el panel de administración de los servidores también se ofrecen detalles para la monitorización y observabilidad con los que comprobar el buen estado de funcionamiento del servidor.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-1_hu47cae0a478570364adf19f84fbfbe4d4_94578_2560x1440_fit_box_3.png" data-gallery="" title="Características de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-1_hu47cae0a478570364adf19f84fbfbe4d4_94578_200x150_fit_box_3.png" width="200" height="115" alt="Características de Clouding" title="Características de Clouding"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-2_hud8f3f8d7341ef400d32f1a50a52163e9_95722_2560x1440_fit_box_3.png" data-gallery="" title="Características de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-2_hud8f3f8d7341ef400d32f1a50a52163e9_95722_200x150_fit_box_3.png" width="200" height="114" alt="Características de Clouding" title="Características de Clouding"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-3_hu5696f2a73e44764296c3694618fa04a5_92878_2560x1440_fit_box_3.png" data-gallery="" title="Características de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-3_hu5696f2a73e44764296c3694618fa04a5_92878_200x150_fit_box_3.png" width="200" height="114" alt="Características de Clouding" title="Características de Clouding"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-4_hu141d7784ad9fac9f3ec5f057f7862247_99197_2560x1440_fit_box_3.png" data-gallery="" title="Características de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-4_hu141d7784ad9fac9f3ec5f057f7862247_99197_200x150_fit_box_3.png" width="200" height="115" alt="Características de Clouding" title="Características de Clouding"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-5_hu36c7e1637319c262e9aab10087164207_92561_2560x1440_fit_box_3.png" data-gallery="" title="Características de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-5_hu36c7e1637319c262e9aab10087164207_92561_200x150_fit_box_3.png" width="200" height="118" alt="Características de Clouding" title="Características de Clouding"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-6_hua7694af4fd912997d20e00b13a1244ee_90902_2560x1440_fit_box_3.png" data-gallery="" title="Características de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-caracteristicas-6_hua7694af4fd912997d20e00b13a1244ee_90902_200x150_fit_box_3.png" width="200" height="117" alt="Características de Clouding" title="Características de Clouding"  class="lozad "></a></p>
<figcaption>Características de Clouding</figcaption>
</figure>
</div>
<p>Para garantizar un buen servicio utilizan una infraestructura moderna y de alto rendimiento, redundante y tolerante a fallos compuesta por hardware, software, red, imágenes y centros de datos. Almacenamiento con discos SSD NVMe de alta velocidad, RAM con corrección de errores ECC, consola de emergencia y monitorización, red de alto rendimiento baja velocidad con protecciones frente ataques DDOS y con dirección IP pública, imágenes para servidores basados en Linux o Windows, paneles de control y aplicaciones preinstaladas, finalmente sus centros de datos ubicados en España son redundantes y con energia 100% renovable.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-1_hua0b71a493c7e0f9a963194c3eecb131d_129895_2560x1440_fit_box_3.png" data-gallery="" title="Infraestructura de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-1_hua0b71a493c7e0f9a963194c3eecb131d_129895_200x150_fit_box_3.png" width="161" height="150" alt="Infraestructura de Clouding" title="Infraestructura de Clouding"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-2_hu26a10119971413dd8558a72c1e104fed_135238_2560x1440_fit_box_3.png" data-gallery="" title="Infraestructura de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-2_hu26a10119971413dd8558a72c1e104fed_135238_200x150_fit_box_3.png" width="160" height="150" alt="Infraestructura de Clouding" title="Infraestructura de Clouding"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-3_huee52e53912c36303bac457dd7e3703da_127867_2560x1440_fit_box_3.png" data-gallery="" title="Infraestructura de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-3_huee52e53912c36303bac457dd7e3703da_127867_200x150_fit_box_3.png" width="158" height="150" alt="Infraestructura de Clouding" title="Infraestructura de Clouding"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-4_hu5cd5cc7fdf3eed52fa514d1d014559e6_123773_2560x1440_fit_box_3.png" data-gallery="" title="Infraestructura de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-4_hu5cd5cc7fdf3eed52fa514d1d014559e6_123773_200x150_fit_box_3.png" width="159" height="150" alt="Infraestructura de Clouding" title="Infraestructura de Clouding"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-5_hu407ad9e63341590400f3617a98a4b99b_124760_2560x1440_fit_box_3.png" data-gallery="" title="Infraestructura de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-infraestructura-5_hu407ad9e63341590400f3617a98a4b99b_124760_200x150_fit_box_3.png" width="158" height="150" alt="Infraestructura de Clouding" title="Infraestructura de Clouding"  class="lozad "></a></p>
<figcaption>Infraestructura de Clouding</figcaption>
</figure>
</div>
<p>Son muchas las empresas que confían en Clouding como proveedor de servicios para sus necesidades tecnológicas. Dado el tamaño de estas empresas es garantía de que el servicio de Clouding está a la altura para tenerlos como clientes.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-clientes_hub824dfca607c3f0a0eb0c96ed75b2a20_126653_2560x1440_fit_box_3.png" data-gallery="" title="Clientes de Clouding"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-clientes_hub824dfca607c3f0a0eb0c96ed75b2a20_126653_650x450_fit_box_3.png" width="565" height="450" alt="Clientes de Clouding" title="Clientes de Clouding"  class="lozad "></a></p>
<figcaption>Clientes de Clouding</figcaption>
</figure>
</div>
<h3 id="crear-un-servidor-_cloud_-en-clouding">Crear un servidor <em>cloud</em> en Clouding</h3>
<p>Empezar a usar Clouding es sencillo y rápido, necesitando únicamente crear una cuenta en el servicio  y añadir algo de saldo a través de las formas de pago que se ofrecen como pago con tarjeta, domiciliación bancaria o cuenta de PayPal. Dispone de notificaciones de saldo bajo y autorecarga para evitar supervisar el saldo y que un servicio no deje de funcionar por motivos de facturación. Informes con el detalle del coste usado en un periodo de tiempo y en el apartado <em>Cuenta</em> la posibilidad de configurar la muy útil y recomendable medida de seguridad del segundo factor de autenticación.</p>
<p>El primer paso para crear un servidor es crear una llave SSH con la que posteriormente acceder al servidor por línea de comandos, la llave SSH se puede descargar para configurarla en el cliente SSH local. Una vez creada ya es posible crear el servidor donde entre otras se seleccionan las características del mismo como sistema operativo y versión, cantidad de unidades de cómputo, cantidad de memoria y cantidad de almacenamiento, teniendo en cuenta que los tres últimos se pueden ampliar o reducir con posterioridad.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-1_hua561d8342f9b46dce0c0e9133ef8075c_170482_2560x1440_fit_box_3.png" data-gallery="" title="Selección de características para crear instancia de servidor cloud"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-1_hua561d8342f9b46dce0c0e9133ef8075c_170482_200x150_fit_box_3.png" width="119" height="150" alt="Selección de características para crear instancia de servidor cloud" title="Selección de características para crear instancia de servidor cloud"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-2_hu941525b0db5987e2f262e70b5ab5c917_154701_2560x1440_fit_box_3.png" data-gallery="" title="Selección de características para crear instancia de servidor cloud"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-2_hu941525b0db5987e2f262e70b5ab5c917_154701_200x150_fit_box_3.png" width="118" height="150" alt="Selección de características para crear instancia de servidor cloud" title="Selección de características para crear instancia de servidor cloud"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-3_hu93179698186a114afd16ef60faa89621_140919_2560x1440_fit_box_3.png" data-gallery="" title="Selección de características para crear instancia de servidor cloud"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-3_hu93179698186a114afd16ef60faa89621_140919_200x150_fit_box_3.png" width="125" height="150" alt="Selección de características para crear instancia de servidor cloud" title="Selección de características para crear instancia de servidor cloud"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-4_hua657294460cb24b4eebe76d47ee7126e_160451_2560x1440_fit_box_3.png" data-gallery="" title="Selección de características para crear instancia de servidor cloud"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-4_hua657294460cb24b4eebe76d47ee7126e_160451_200x150_fit_box_3.png" width="118" height="150" alt="Selección de características para crear instancia de servidor cloud" title="Selección de características para crear instancia de servidor cloud"  class="lozad "></a></p>
<figcaption>Selección de características para crear instancia de servidor cloud</figcaption>
</figure>
</div>
<p>Después de confirmar las características e iniciar la creación del servidor se inicializa y está disponible al cabo de unos pocos segundos o pocos minutos proporcionado entre sus detalles la dirección IP pública que le ha sido asignada y necesaria para la conexión y la configuración DNS del nombre de dominio en el proveedor externo de registro de dominio o en el panel de DNS de Clouding si se configura como servidor administrativo autorizado para el dominio.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-progress_huf394ef53ac0d5466b93dc08cbb222b86_158067_2560x1440_fit_box_3.png" data-gallery="" title="Progreso de creación de servidor cloud"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-create-progress_huf394ef53ac0d5466b93dc08cbb222b86_158067_650x450_fit_box_3.png" width="481" height="450" alt="Progreso de creación de servidor cloud" title="Progreso de creación de servidor cloud"  class="lozad "></a></p>
<figcaption>Progreso de creación de la servidor cloud, estadísticas y claves SSH</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-statistics_hu62124b798adbefe67da958e87b238c75_87389_2560x1440_fit_box_3.png" data-gallery="" title="Estadisticas de estado para monitorización y observabilidad"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-statistics_hu62124b798adbefe67da958e87b238c75_87389_200x150_fit_box_3.png" width="138" height="150" alt="Estadisticas de estado para monitorización y observabilidad" title="Estadisticas de estado para monitorización y observabilidad"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-ssh_huc67478dd79fcbddd14ce23081be225ab_33572_2560x1440_fit_box_3.png" data-gallery="" title="Claves SSH para los servidores"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/clouding-virtual-machine-ssh_huc67478dd79fcbddd14ce23081be225ab_33572_200x150_fit_box_3.png" width="200" height="70" alt="Claves SSH para los servidores" title="Claves SSH para los servidores"  class="lozad "></a></p>
<figcaption>Progreso de creación de la servidor cloud, estadísticas y claves SSH</figcaption>
</figure>
</div>
<h3 id="conexión-desde-línea-de-comandos-con-ssh">Conexión desde línea de comandos con SSH</h3>
<p>Para la conexión al servidor por línea de comandos se utiliza el protocolo seguro SSH, para ello en GNU/Linux como cliente se usa <a href="https://www.openssh.com/">OpenSSH</a> y en <a href="https://www.microsoft.com/es-es/windows/">Windows</a> una posibilidad es <a href="https://www.putty.org/">PuTTY</a>. La clave privada es una clave privada RSA en formato <em>pem</em> que para usar con OpenSSH si se desea usar una propia primero hay que convertirla a formato <em>ssh-rsa</em> con el siguiente comando y aprovisionar la clave pública en forma <em>ssh-rsa</em> en el servidor. Para usar la llave hay que configurar el archivo <em>.ssh/config</em> con la dirección IP pública del servidor. Como Clouding ya se encarga de tanto generar la llave privada como de aprovisionarla en el servidor la conversión y aprovisionamiento no es imprescindible.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chmod <span class="m">0600</span> clouding.pem&#10;</span></span><span class="line"><span class="cl">$ ssh-keygen -y -f clouding.pem &gt; clouding.pub&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-key-conversion.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Host 27.0.174.19&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;IdentityFile ~/.ssh/clouding.pem&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-config</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ssh ubuntu@27.0.174.19&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/ssh-login_hu9256d5d03a49b0b022b488c15c432b64_102434_2560x1440_fit_box_3.png" data-gallery="" title="Conexión SSH a instancia de servidor cloud"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/ssh-login_hu9256d5d03a49b0b022b488c15c432b64_102434_650x450_fit_box_3.png" width="632" height="450" alt="Conexión SSH a instancia de servidor cloud" title="Conexión SSH a instancia de servidor cloud"  class="lozad "></a></p>
<figcaption>Conexión SSH a instancia de servidor cloud</figcaption>
</figure>
</div>
<h3 id="cómo-aprovisionar-un-servidor-_cloud_">Cómo aprovisionar un servidor <em>cloud</em></h3>
<p>Una vez la conexión al servidor por línea de comandos funciona ya es posible configurar el servidor, no se diferencia en ningún aspecto a configurar un servidor por linea de comandos según el sistema operativo elegido. El aprovisionamiento del servidor y configuración consiste básicamente en la instalación de paquetes, configuración de servicios editando archivos de configuración y reinicio de servicios para que la configuración modificada tome efecto. Los paquetes a instalar dependen del propósito o propósitos del servicio para el servidor puede ser un servidor web con <a href="https://nginx.org/">Nginx</a> o <a href="https://httpd.apache.org/">Apache HTTPD</a>, un servidor de base de datos con <a href="https://www.postgresql.org/">PostgreSQL</a> o <a href="https://www.mysql.com/">MySQL</a>, un servidor de documentos personales  con <a href="https://nextcloud.com/">Nextcloud</a> o servidor de archivos entre otras muchas otras funcionalidades.</p>
<p>Aunque es posible configurar un servidor introduciendo los comandos uno a uno es tedioso además de una tarea repetitiva en caso de tener que aplicarlos en varios servidores, no queda automatizado ni los comandos están bajo un sistema de control de versiones en el que queden descritos los comandos de configuración. Hay herramientas de software con el objetivo de aprovisionar servidores que permiten realizar el aprovisionamiento de un servidor de forma automatizada con la ventaja de ser más rápido, reproducible y la posibilidad de utilizar un sistema de control de versiones para los <em>scripts</em> de aprovisionamiento con sus propias ventajas como historial de cambios y colaboración entre personas en su edición. Una herramienta de aprovisionamiento muy conocida es <a href="https://www.ansible.com/">Ansible</a>, en esencia esta herramienta ejecuta los comandos en el servidor, permite hacerlo de forma remota con únicamente una conexión SSH sin necesidad de instalar software de servidor y la posibilidad de aplicar los cambios a un grupo completo de servidores. La herramienta de aprovisionamiento y configuración Ansible entre dentro del grupo de herramientas para tratar a la <a href="https://es.wikipedia.org/wiki/Infraestructura_como_c%C3%B3digo">infraestructura como código</a>.</p>
<p>En un primer momento para desarrollar los <em>scripts</em> de aprovisionamiento es posible crear una máquina virtual en local y tratarla como si de un servidor se tratase. <a href="https://www.vagrantup.com/">Vagrant</a> permite crear máquinas virtuales de forma automatizada con una de sus posibilidades crear máquinas virtuales en <a href="https://www.virtualbox.org/">VirtualBox</a>. Una vez que el script de aprovisionamiento funciona ya es posible lanzarlo contra el servidor <em>cloud</em>.</p>
<h3 id="ejemplo-de-aprovisionamiento-de-un-servidor-_cloud_-de-clouding-con-ansible">Ejemplo de aprovisionamiento de un servidor <em>cloud</em> de Clouding con Ansible</h3>
<p>En este ejemplo muestro como aprovisionar un servidor <em>cloud</em> de Clouding de forma automatizada con la herramienta Ansible. El servidor <em>cloud</em> creado en el paso anterior tiene el sistema operativo Ubuntu en la versión LTS 20.04, la funcionalidad del servidor es la de un servidor web con Nginx instalado como paquete de software de Ubuntu por más sencillez para el ejemplo que instalarlo con <a href="https://www.docker.com/">Docker</a>, para que el servidor utilice el protocolo HTTPS es necesario un certificado que con el servicio de <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a> permite obtenerlo de forma rápida y automatizada.</p>
<p>Let&rsquo;s Encrypt ofrece la herramienta <a href="https://certbot.eff.org/">certbot</a> y siguiendo sus <a href="https://certbot.eff.org/instructions?ws=nginx&amp;os=ubuntufocal">instrucciones para Ubuntu</a> permite obtener el certificado que posteriormente hay que usar en la configuración de Nginx al configurar el protocolo HTTPS y para que los navegadores clientes validen correctamente el dominio del servidor. Por motivos de seguridad usar el protocolo HTTPS es un requerimiento indispensable sin embargo es necesario un certificado que identifique el dominio usado en el servidor que en algunos proveedores tiene un coste significativo de unos 100 € o más y se tarda unos días en obtenerlo. Let&rsquo;s Encrypt permite obtener un certificado para el dominio en unos pocos segundos de forma automatizada y completamente gratuito ni ningún coste.</p>
<p>Además, de la configuración básica mostrada en este artículo es posible configurar otras opciones en Nginx para variar su comportamiento, de las que he escrito en <a href="https://picodotdev.github.io/blog-bitix/tags/web/">otros artículos con la etiqueta web</a>.</p>
<h4 id="organización-de-roles-en-ansible">Organización de roles en Ansible</h4>
<p>Ansible define unas convenciones para los nombres de archivos  necesarios, estructura de directorios y formato para los archivos. El archivo <em>hosts</em> define el inventario de máquinas a las que Ansible puede conectarse y las credenciales de conexión además de poder definir variables asociadas a las máquinas y definir grupos de máquinas según un rol como servidor web o servidor de base de datos si hay varias instancias con ese rol, tiene un formato INI.</p>
<p>Otra de las convenciones de Ansible y una forma de organizar las tareas de configuración son lo que se denomina como roles que contienen además de las tareas a aplicar a las máquinas que utilicen ese rol de Ansible, los archivos de configuración, plantillas y disparadores o <em>handlers</em> a ejecutar como reacción a la ejecución de alguna tarea. Finalmente, están los <em>playbooks</em> que son las recetas a ejecutar que indican que roles se aplican a una instancia o grupo de instancias del inventario. Dentro de un rol los archivos se organizan en varias carpetas.</p>
<ul>
<li><em>tasks</em>: contiene la definición de las tareas que se realizan al aplicar el rol. Permiten asociales etiquetas para filtrar su ejecución, añadirles condiciones de ejecución realizar la acción sobre una lista de elementos. Ansible posee una amplia colección de tareas para cualquier acción desde ejecución de comandos como instalación y actualización de paquetes hasta funcionalidades para trabajar con Docker. Las tareas se definen en archivos en formato YAML con la ventaja a diferencia de <em>scripts</em> de Bash ser independientes de la distribución.</li>
<li><em>handlers</em>: contiene la definición de tareas que se ejecutan como consecuencia de la ejecución de otras tareas en puntos concretos de las tareas normales del rol.</li>
<li><em>files</em>: son archivos estáticos que permiten aprovisionarlos en las instancias de las máquinas, pueden ser cualquier tipo de archivo como archivos de configuración de un servicio o recursos estáticos para el caso de un servidor web.</li>
<li><em>templates</em>: son archivos que al procesarse junto variables en tiempo de ejecución producen como resultado un archivo estático. Aunque el resultado final es un archivo estático este se genera dinámicamente.</li>
</ul>
<p>Para empezar a aprender está la documentación oficial con <a href="https://docs.ansible.com/ansible/latest/user_guide/index.html">la guía de usuario de Ansible</a> junto con los conceptos de <a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html">introducción a los <em>playbooks</em></a>, <a href="https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#intro-inventory">el inventario</a>, <a href="https://docs.ansible.com/ansible/latest/user_guide/basic_concepts.html#tasks">tareas</a>, <a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html">roles</a> y <a href="https://docs.ansible.com/ansible/2.7/modules/list_of_all_modules.html">los módulos</a> además de otros capítulos de su amplia <a href="https://docs.ansible.com/ansible/latest/user_guide/index.html#traditional-table-of-contents">tabla de contenidos</a>.</p>
<p>Tengo que decir que no soy un experto en Ansible y es muy posible que parte de la configuración de Ansible mostrada en este artículo sea posible mejorarla para hacerla más reutilizable los roles y sus tareas o estructurarlos algo mejor. Esta es la estructura completa de archivos y directorios del ejemplo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">$ tree .&#10;</span></span><span class="line"><span class="cl">.&#10;</span></span><span class="line"><span class="cl">├── ansible-clouding-content-update.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-clouding-ping.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-clouding-system-init.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-clouding-system-install.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-clouding-system-update.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-env.conf&#10;</span></span><span class="line"><span class="cl">├── ansible-env-default.conf&#10;</span></span><span class="line"><span class="cl">├── ansible-mkdpasswd.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-raspberrypi-ping.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-raspberrypi-system-init.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-raspberrypi-system-install.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-raspberrypi-system-update.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-raspberrypi-update-content.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-vagrant-content-update.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-vagrant-ping.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-vagrant-system-init.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-vagrant-system-install.sh&#10;</span></span><span class="line"><span class="cl">├── ansible-vagrant-system-update.sh&#10;</span></span><span class="line"><span class="cl">├── hosts&#10;</span></span><span class="line"><span class="cl">├── roles&#10;</span></span><span class="line"><span class="cl">│   ├── picodotdev.certbot&#10;</span></span><span class="line"><span class="cl">│   │   └── tasks&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; ├── configure.yml&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; └── main.yml&#10;</span></span><span class="line"><span class="cl">│   ├── picodotdev.goaccess&#10;</span></span><span class="line"><span class="cl">│   │   └── tasks&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; └── main.yml&#10;</span></span><span class="line"><span class="cl">│   ├── picodotdev.nginx&#10;</span></span><span class="line"><span class="cl">│   │   ├── handlers&#10;</span></span><span class="line"><span class="cl">│   │   │   └── main.yml&#10;</span></span><span class="line"><span class="cl">│   │   ├── tasks&#10;</span></span><span class="line"><span class="cl">│   │   │   ├── main.yml&#10;</span></span><span class="line"><span class="cl">│   │   │   └── restart.yml&#10;</span></span><span class="line"><span class="cl">│   │   └── templates&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; └── https-domain-template.conf&#10;</span></span><span class="line"><span class="cl">│   ├── picodotdev.site&#10;</span></span><span class="line"><span class="cl">│   │   ├── files&#10;</span></span><span class="line"><span class="cl">│   │   │   └── index.html&#10;</span></span><span class="line"><span class="cl">│   │   └── tasks&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; ├── main.yml&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; └── nginx-content.yml&#10;</span></span><span class="line"><span class="cl">│   ├── picodotdev.system&#10;</span></span><span class="line"><span class="cl">│   │   └── tasks&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; ├── install.yml&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; ├── main.yml&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; ├── ssh.yml&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; ├── update.yml&#10;</span></span><span class="line"><span class="cl">│   │  &nbsp;&nbsp;&nbsp;&nbsp; └── users.yml&#10;</span></span><span class="line"><span class="cl">│   └── picodotdev.ufw&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; └── tasks&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; └── main.yml&#10;</span></span><span class="line"><span class="cl">├── site-content-update.yml&#10;</span></span><span class="line"><span class="cl">├── site-system-init.yml&#10;</span></span><span class="line"><span class="cl">├── site-system-install.yml&#10;</span></span><span class="line"><span class="cl">└── site-system-update.yml&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">16 directories, 39 files</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible-role-structure.txt</span>
    </div>
</div>
<p>El contenido del archivo <em>host</em> para el servidor <em>cloud</em> de Clouding es el siguiente, que incluye la dirección IP pública proporcionada al crearlo y visible en los detalles del servidor y la llave privada que Ansible utiliza en su conexión por SSH al servidor y a través de las cuales ejecuta los comandos de forma remota. En el ejemplo se incluyen los datos para la conexión para pruebas en un entorno con <a href="https://www.vagrantup.com/">Vagrant</a> en una máquina virtual local y una <a href="https://www.raspberrypi.org/">Raspberry Pi</a>, además de la instancia en la infraestructura de Clouding.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">[vagrant]&#10;</span></span><span class="line"><span class="cl">192.168.56.10&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[raspberrypi]&#10;</span></span><span class="line"><span class="cl">192.168.1.101&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[clouding]&#10;</span></span><span class="line"><span class="cl">27.0.174.19&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[vagrant:vars]&#10;</span></span><span class="line"><span class="cl">ansible_user=ubuntu&#10;</span></span><span class="line"><span class="cl">ansible_ssh_private_key_file=~/.ssh/pico.dev@gmail.com&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[raspberrypi:vars]&#10;</span></span><span class="line"><span class="cl">ansible_user=pi&#10;</span></span><span class="line"><span class="cl">ansible_ssh_private_key_file=~/.ssh/pico.dev@gmail.com&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[clouding:vars]&#10;</span></span><span class="line"><span class="cl">ansible_user=ubuntu&#10;</span></span><span class="line"><span class="cl">ansible_ssh_private_key_file=~/.ssh/clouding.pem</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hosts</span>
    </div>
</div>
<p>Los roles de Ansible permiten agrupar las tareas por funcionalidad a aplicar a un servidor, unos roles quizá sean comunes para cualquier servidor como como el rol de <em>picodotdev.system</em> que realiza unas configuraciones básica en el sistema como instalar paquetes comunes, crear usuarios y configuración SSH y actualizan los paquetes, Otros roles son los siguientes.</p>
<ul>
<li><em>picodotdev.system</em>: configuración común del servidor independiente de su servicio.</li>
<li><em>picodotdev.ufw</em>: tareas para configurar el cortafuegos UFW para limitar puertos abiertos.</li>
<li><em>picodotdev.nginx</em>: tareas para configurar una máquina con la función de servidor web Nginx.</li>
<li><em>picodotdev.site</em>: tareas para configurar un sitio web en el servidor de Nginx.</li>
<li><em>picodotdev.certbot</em>: tareas para utilizar certbot y generar los certificados de Let&rsquo;s Encrypt para configurar en Nginx.</li>
<li><em>picodotdev.goaccess</em>: <a href="https://goaccess.io/">GoAccess</a> es una herramienta para analizar los logs de Nginx.</li>
</ul>
<p>El primer paso es comprobar que Ansible puede establecer correctamente la conexión con el servidor para ello hay un módulo que hace la función. Si el comando funciona Ansible es capaz de lanzar el resto de tareas administrativas definidas en los roles a esa instancia del inventario.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>ansible -i hosts -m ping clouding&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/ansible-clouding-ping.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">27.0.174.19 | SUCCESS =&gt; {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#34;ansible_facts&#34;: {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;discovered_interpreter_python&#34;: &#34;/usr/bin/python3&#34;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;},&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#34;changed&#34;: false,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#34;ping&#34;: &#34;pong&#34;&#10;</span></span><span class="line"><span class="cl">}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible-ping.out</span>
    </div>
</div>
<p>Estos son los archivos del rol <em>picodotdev.system</em> y <em>picodotdev.ufw</em> de Ansible.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Create users</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">users.yml</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">apply</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-init</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-init</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Configure SSH</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">ssh.yml</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">apply</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-init</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-init</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Update system</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">update.yml</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">apply</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-update</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-update</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install system</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">install.yml</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">apply</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.system/tasks/main.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install packages</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">package</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">python3</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.system/tasks/install.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Set authorized keys</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">authorized_key</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">user</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ lookup(&#39;file&#39;, item) }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;{{ lookup(&#39;env&#39;, &#39;SSH_KEY_PUB&#39;) }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Disable SSH password authentication</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">lineinfile</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/etc/ssh/sshd_config</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">regexp</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;^#PasswordAuthentication yes&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">line</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;PasswordAuthentication no&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.system/tasks/ssh.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Update system</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">apt</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">upgrade</span><span class="p">:</span><span class="w"> </span><span class="l">full</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">update_cache</span><span class="p">:</span><span class="w"> </span><span class="kc">yes</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-update</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.system/tasks/update.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Create users</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">user</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">groups</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;sudo&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">ubuntu</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w"> </span><span class="l">system-install</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.system/tasks/users.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install packages</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">package</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">ufw</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w"> </span><span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Configure ufw</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ufw</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">rule</span><span class="p">:</span><span class="w"> </span><span class="l">allow</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">proto</span><span class="p">:</span><span class="w"> </span><span class="l">tcp</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ ports }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w"> </span><span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Enable ufw</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ufw</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">enabled</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">deny</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w"> </span><span class="l">system-install</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.ufw/tasks/main.yml</span>
    </div>
</div>
<h4 id="comandos-de-ejecución">Comandos de ejecución</h4>
<p>Para configurar el servidor en el ejemplo la aplicación de los roles están divididas en cuatro <em>playbooks</em> con sus cuatro archivos bash para su ejecución.</p>
<ul>
<li><em>system-init</em>: aplica las tareas del rol <em>picodotdev.system</em>.</li>
<li><em>system-install</em>: aplica las tareas del rol <em>picodotdev.site</em>.</li>
<li><em>system-update</em>: aplica las tareas del rol <em>picodotdev.site</em> etiquetadas con <em>system-update</em> que permite filtrar las tareas del rol a ejecutar omitiendo el resto que no tienen esa etiqueta.</li>
<li><em>content-update</em>: aplica las tareas del rol <em>picodotdev.site</em> etiquetadas con <em>content-update</em>.</li>
</ul>
<p>Estos son la definición de los <em>playbooks</em> y los comandos de ejecución en los que se especifican las etiquetas de las tareas a ejecutar del <em>playbook</em> y roles.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">source</span> ansible-env.conf&#10;</span></span><span class="line"><span class="cl">ansible-playbook -i hosts -l clouding --tags system-init --extra-vars <span class="s2">&#34;ansible_user=root ansible_ssh_private_key_file=~/.ssh/clouding.pem&#34;</span> site-system-init.yml&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/ansible-clouding-system-init.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">source</span> ansible-env.conf&#10;</span></span><span class="line"><span class="cl">ansible-playbook -i hosts -l clouding --tags system-install site-system-install.yml&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/ansible-clouding-system-install.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">source</span> ansible-env.conf&#10;</span></span><span class="line"><span class="cl">ansible-playbook -i hosts -l clouding --tags system-update site-system-update.yml&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/ansible-clouding-system-update.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span><span class="nb">source</span> ansible-env.conf&#10;</span></span><span class="line"><span class="cl">ansible-playbook -i hosts -l clouding --tags content-update site-content-update.yml&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/ansible-clouding-content-update.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">all</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">roles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">picodotdev.system</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/site-system-init.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">all</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">roles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">picodotdev.site</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/site-system-install.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">all</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">roles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">picodotdev.site</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/site-system-update.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">all</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">roles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">picodotdev.site</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/site-content-update.yml</span>
    </div>
</div>
<p>Además en el archivo <em>ansible-env.conf</em> se definen algunos datos como variables de entorno que probablemente podrían definirse también como alternativa en el archivo <em>hosts</em> como variables del inventario.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">UBUNTU_PASSWORD</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$6$G7g9dNWz$H4FDdICBYP9oo0ILOAQEQnTbqXXuUFd0iuEbC4PQr3TenRHUaiDqcbu01fPQPk4tPuIbG1LFIk0JPhpey29Xo</span><span class="s2">/&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">SSH_KEY_PUB</span><span class="o">=</span><span class="s2">&#34;~/Documentos/clouding.pub&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">DOMAIN_DEFAULT</span><span class="o">=</span><span class="s2">&#34;default&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">DOMAIN_SITE</span><span class="o">=</span><span class="s2">&#34;www.27.0.174.19.sslip.io&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/ansible-env.conf</span>
    </div>
</div>
<h4 id="certificado-de-seguridad-con-lets-encrypt-en-servidor-web-nginx">Certificado de seguridad con Let&rsquo;s Encrypt en servidor web Nginx</h4>
<p>Para generar el certificado para el servidor web con Let&rsquo;s Encrypt está la herramienta <em>certbot</em> disponible para Nginx y usando Ubuntu a través del paquete en formato de aplicación <a href="https://snapcraft.io/">snap</a>. El rol <em>picodotdev.certbot</em> contiene las tareas para realizar la configuración de Nginx una vez este está al menos configurado e iniciado para funcionar con el protocolo HTTP.</p>
<p>Para validar un dominio y comprobar que el propietario del sitio web es el dueño del dominio Let&rsquo;s Encrypt con la ayuda de certbot genera unos archivos en la raíz de documentos del sitio en la ubicación <em>/.well-known/acme-challenge/</em>, el proceso de validación de Let&rsquo;s Encrypt accede al sitio web usando el dominio con el protocolo HTTP y si encuentra los archivos que espera valida el dominio y genera los certificados que certbot instala en el directorio <em>/etc/letsencrypt/live/{{ domain }}/fullchain.pem</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install packages</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">package</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">snapd</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install snap base packages</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">community.general.snap</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">core</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">hello-world</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install snap packages</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">community.general.snap</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">certbot</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">classic</span><span class="p">:</span><span class="w"> </span><span class="kc">yes</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.certbot/tasks/main.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Configure certbot</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">shell</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;ln -sf /snap/bin/certbot /usr/bin/certbot&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;certbot certonly --webroot --non-interactive -m &#34;pico.dev@gmail.com&#34; --agree-tos -w /var/www/{{ domain }} -d {{ domain }}&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;certbot renew --dry-run</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-cerbot</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.certbot/tasks/configure.yml</span>
    </div>
</div>
<p>Estos son unos ejemplos de certificados generados por Let&rsquo;s Encrypt y certbot. Los certificados tienen un tiempo de validez de unos pocos meses con lo que cada cierto tiempo hay que renovarlos de lo que se encarga certbot de forma automática.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ubuntu@nginx:~$ sudo ls -lh /etc/letsencrypt/live/www.27.0.174.19.sslip.io/&#10;</span></span><span class="line"><span class="cl">total 4.0K&#10;</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root  <span class="m">48</span> Dec <span class="m">21</span> 13:50 cert.pem -&gt; ../../archive/www.27.0.174.19.sslip.io/cert1.pem&#10;</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root  <span class="m">49</span> Dec <span class="m">21</span> 13:50 chain.pem -&gt; ../../archive/www.27.0.174.19.sslip.io/chain1.pem&#10;</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root  <span class="m">53</span> Dec <span class="m">21</span> 13:50 fullchain.pem -&gt; ../../archive/www.27.0.174.19.sslip.io/fullchain1.pem&#10;</span></span><span class="line"><span class="cl">lrwxrwxrwx <span class="m">1</span> root root  <span class="m">51</span> Dec <span class="m">21</span> 13:50 privkey.pem -&gt; ../../archive/www.27.0.174.19.sslip.io/privkey1.pem&#10;</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root <span class="m">692</span> Dec <span class="m">21</span> 13:50 README&#10;</span></span><span class="line"><span class="cl">ubuntu@nginx:~$ sudo ls -lh /etc/letsencrypt/archive/www.27.0.174.19.sslip.io/&#10;</span></span><span class="line"><span class="cl">total 20K&#10;</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root 1.9K Dec <span class="m">21</span> 13:50 cert1.pem&#10;</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root 3.7K Dec <span class="m">21</span> 13:50 chain1.pem&#10;</span></span><span class="line"><span class="cl">-rw-r--r-- <span class="m">1</span> root root 5.5K Dec <span class="m">21</span> 13:50 fullchain1.pem&#10;</span></span><span class="line"><span class="cl">-rw------- <span class="m">1</span> root root 1.7K Dec <span class="m">21</span> 13:50 privkey1.pem&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>certbot-certificates.sh</span>
    </div>
</div>
<h4 id="configuración-del-servidor-web-nginx">Configuración del servidor web Nginx</h4>
<p>Antes de generar los certificados de Let&rsquo;s Encrypt es necesario configurar el servidor web Nginx e iniciar el servicio, la configuración incluye modificar los archivos de configuración de Nginx para crear en este caso un servidor web virtual y su contenido. Un servidor web virtual permite devolver un contenido u otro en función del nombre del dominio por el que se acceda al servidor. Las tareas también crean varios directorios y archivos como por ejemplo de directorio raíz que el servidor web utiliza para obtener los recursos estáticos que devuelve.</p>
<p>Configurado Nginx con el protocolo HTTP y el servidor web virtual ya es posible iniciar la validación y generación de certificados de Let&rsquo;s Encrypt y certbot. Las tareas de Ansible del rol <em>picodotdev.nginx</em> usan las tareas del rol <em>picodotdev.certbot</em>.</p>
<p>Entre los archivos del rol de Nginx está un archivo que es la plantilla de configuración del servidor para Nginx que procesándolo junto ciertas variables permite generar el contenido final, el contenido generado se guarda en el directorio <em>/etc/nginx/sites-available/{{ item }}</em> y posteriormente se crea un enlace simbólico a este archivo en el directorio <em>/etc/nginx/sites-enabled/{{ item }}</em> del que Nginx lee la configuración de los servidores web virtuales.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span><span class="lnt">87&#10;</span><span class="lnt">88&#10;</span><span class="lnt">89&#10;</span><span class="lnt">90&#10;</span><span class="lnt">91&#10;</span><span class="lnt">92&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install packages</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">package</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Create directories</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">file</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">directory</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/etc/nginx/conf.d</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/etc/nginx/sites-available</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/etc/nginx/sites-enabled</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;/var/www/{{ domain }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Copy nginx configuration (http) ({{ domain }})&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">template</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">src</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ template }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">dest</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/etc/nginx/sites-available/{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">owner</span><span class="p">:</span><span class="w"> </span><span class="l">root</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">group</span><span class="p">:</span><span class="w"> </span><span class="l">root</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0644&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vars</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;nginx-virtual-server.conf&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">default_server</span><span class="p">:</span><span class="w"> </span><span class="l">default_server</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">domain</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">apex</span><span class="p">:</span><span class="w"> </span><span class="l">apex</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ssl</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;{{ domain }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Enable nginx configuration (http) ({{ domain }})&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">file</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">src</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/etc/nginx/sites-available/{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/etc/nginx/sites-enabled/{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">link</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">owner</span><span class="p">:</span><span class="w"> </span><span class="l">root</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">group</span><span class="p">:</span><span class="w"> </span><span class="l">root</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0644&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;{{ domain }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Restart nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">restart.yml</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">apply</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">tags</span><span class="p">:</span><span class="w"> </span><span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Configure certbot ({{ domain }})&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">roles/picodotdev.certbot/tasks/configure.yml</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">apply</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-cerbot</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;&#39;clouding&#39; in group_names and ssl&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-cerbot</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Copy nginx configuration (https) ({{ domain }})&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">template</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">src</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ template }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">dest</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ item }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">owner</span><span class="p">:</span><span class="w"> </span><span class="l">root</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">group</span><span class="p">:</span><span class="w"> </span><span class="l">root</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0644&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vars</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;nginx-virtual-server.conf&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">default_server</span><span class="p">:</span><span class="w"> </span><span class="l">default_server</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">domain</span><span class="p">:</span><span class="w"> </span><span class="l">domain</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">apex</span><span class="p">:</span><span class="w"> </span><span class="l">apex</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ssl</span><span class="p">:</span><span class="w"> </span><span class="l">ssl</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;/etc/nginx/sites-available/{{ domain }}&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">notify</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">Restart nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;&#39;clouding&#39; in group_names and ssl&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">system-install</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.nginx/tasks/main.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Restart nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">systemd</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">restarted</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">become</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.nginx/tasks/restart.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Restart nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">include_tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">file</span><span class="p">:</span><span class="w"> </span><span class="l">restart.yml</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.nginx/handlers/main.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">{% if default_server %}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;{% set _default_server = &#34; default_server&#34; %}&#10;</span></span><span class="line"><span class="cl">{% else %}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;{% set _default_server = &#34;&#34; %}&#10;</span></span><span class="line"><span class="cl">{% endif %}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">log_format nginx_vcombined_{{ domain | replace(&#39;.&#39;, &#39;_&#39;) }} &#39;$host:$server_port &#39; &#39;$remote_addr - $remote_user [$time_local] &#39; &#39;&#34;$request&#34; $status $body_bytes_sent &#39; &#39;&#34;$http_referer&#34; &#34;$http_user_agent&#34;&#39;;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">server {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;listen 80{{ _default_server }};&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;listen [::]:80{{ _default_server }};&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;server_name {{ domain }};&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;location ~ /.well-known/acme-challenge/ {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root   /var/www/{{ domain }};&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index  index.html index.htm;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_header Cache-Control &#34;no-store&#34;;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;location / {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 301 https://$host$request_uri;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">{% if ssl %}&#10;</span></span><span class="line"><span class="cl">server {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;listen 443 http2{{ _default_server }} ssl;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;listen [::]:443 http2{{ _default_server }} ssl;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;server_name {{ domain }};&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;gzip on;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;ssl_certificate&nbsp;&nbsp;&nbsp;&nbsp;  /etc/letsencrypt/live/{{ domain }}/fullchain.pem;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;ssl_certificate_key  /etc/letsencrypt/live/{{ domain }}/privkey.pem;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;ssl_protocols TLSv1.2 TLSv1.3;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;access_log /var/log/nginx/access.log nginx_vcombined_{{ domain | replace(&#39;.&#39;, &#39;_&#39;) }};&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;error_log /var/log/nginx/error.log;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;{% if apex %}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 301 https://www.$host$request_uri;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;{% else %}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location /404.html {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root   /var/www/{{ domain }};&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index  index.html index.htm;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires 10m;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_header Cache-Control &#34;public&#34;;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location ~ /\. {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deny all;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_log off;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_not_found off;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 404;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location / {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root   /var/www/{{ domain }};&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index  index.html index.htm;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#rewrite ^/(.*)index-amp.html$ http://{{ domain }}/$1 permanent;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires 1d;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add_header Cache-Control &#34;public&#34;;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;error_page 404 /404.html;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;{% endif %}&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span><span class="line"><span class="cl">{% endif %}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.nginx/templates/nginx-virtual-server.conf</span>
    </div>
</div>
<p>En este ejemplo el contenido del servidor web es simplemente un archivo <em>html</em> con un mensaje de bienvenida inicial que permite comprobar que el servidor funciona correctamente. Este se copia al servidor con Ansible, otra forma de aprovisionamiento del contenido del servidor web virtual podría haber sido utilizar la herramienta <em>rsync</em> para sincronizar una carpeta remota en la raíz de documentos del servidor web y otra opción podría ser hacer un clonado de un repositorio de Git que es por ejemple como funciona <a href="https://pages.github.com/">GitHub Pages</a> que es simplemente un rama en un repositorio donde se añade el contenido del sitio web.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Welcome to Clouding.io!<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">body</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">width</span><span class="p">:</span> <span class="mi">35</span><span class="kt">em</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">margin</span><span class="p">:</span> <span class="mi">0</span> <span class="kc">auto</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">font-family</span><span class="p">:</span> <span class="n">Tahoma</span><span class="p">,</span> <span class="n">Verdana</span><span class="p">,</span> <span class="n">Arial</span><span class="p">,</span> <span class="kc">sans-serif</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>Welcome to Clouding.io!<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">  For online documentation and support please refer to&#10;</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://nginx.org/&#34;</span><span class="p">&gt;</span>nginx.org<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>.<span class="p">&lt;</span><span class="nt">br</span><span class="p">/&gt;</span>&#10;</span></span><span class="line"><span class="cl">  Commercial support is available at <span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://nginx.com/&#34;</span><span class="p">&gt;</span>nginx.com<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>.&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">em</span><span class="p">&gt;</span>Thank you for using nginx.<span class="p">&lt;/</span><span class="nt">em</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible/picodotdev.site/files/index.html</span>
    </div>
</div>
<h4 id="servidor-web-público">Servidor web público</h4>
<p>Para configurar el servidor he utilizado como nombre de dominio uno proporcionado por <a href="https://sslip.io/">sslip</a> de forma que sea posible configurar el servidor web virtual en Nginx. Con el servidor configurado con los pasos anteriores el y accediendo con el navegador web a la dirección del servidor se obtiene la página con el mensaje de bienvenida, utiliza el protocolo seguro HTTPS con el certificado de Let&rsquo;s Encrypt y que el navegador <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> reconocer como autoridad de certificación válida y sin mostrar ningún error en la barra de direcciones.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/site_hu791aef7c99fd642083828c2df983240b_55711_2560x1440_fit_box_3.png" data-gallery="" title="Sitio web"><img src="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/images/site_hu791aef7c99fd642083828c2df983240b_55711_650x450_fit_box_3.png" width="650" height="382" alt="Sitio web" title="Sitio web"  class="lozad "></a></p>
<figcaption>Sitio web</figcaption>
</figure>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/CloudingSiteInfrastructure">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="patrocinado"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/12/configuracion-de-una-aplicacion-con-spring-boot-y-configuracion-centralizada-con-spring-cloud-config/</id>
        <title>Configuración de una aplicación con Spring Boot y configuración centralizada con Spring Cloud Config</title>
        <updated>2021-12-16T19:00:00+01:00</updated>
        <published>2021-12-16T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/12/configuracion-de-una-aplicacion-con-spring-boot-y-configuracion-centralizada-con-spring-cloud-config/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La configuración de una aplicación es indispensable para su funcionamiento, permite no hardcoredar ciertos valores en el código fuente al mismo tiempo que externalizarlos en archivos de más fácil edición. Externalizar la configuración de la aplicación permite utilizar el mismo artefacto binario en todos los entornos, los valores que cambian en cada entorno es posible proporcionarlos de diferentes formas y formatos desde archivos en el <em>classpath</em> hasta variables de entorno o un servidor de configuración. Spring Boot permite obtener los valores de diferentes fuentes e implementa un mecanismo de prioridad para determinar el valor a usar.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La configuración de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> proporciona un mecanismo muy flexible para la configuración de diferentes fuentes. Cada fuente tiene un orden de preferencia para establecer los valores de las propiedades, además se integra con el servidor de configuración centralizada de <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a>.</p>
<p>La configuración permite cambiar el comportamiento de la aplicación sin cambiar el código ni generar un nuevo artefacto. No hardcodear los valores en el código y extraer la configuración permite utilizar el mismo artefacto en cualquier entorno, ya sea desarrollo, pruebas o producción. Utilizar el mismo artefacto para todos los entornos tiene la ventaja de no introducir un error en la construcción del artefacto como cabría la posibilidad generando un artefacto binario para cada uno de los entornos, usar el mismo artefacto es necesario para que las pruebas realizadas sobre el artefacto en el entorno de desarrollo o pruebas se consideren válidas para producción.</p>
<p>Aunque en algunos sitios se recomienda que la configuración de la aplicación esté separada de artefacto de despliegue, en realidad más que la configuración esté separada es necesario poder tener un mecanismo de orden de preferencia de los valores de configuración. La aplicación puede tener unos valores de configuración por defecto pero es necesario poder sobreescribirlos debido a que algunos no se desean incluir en el código fuente o en el propio artefacto, también es necesario para cambiar los valores por defecto incluidos en el artefacto si se desea corregir un error sin necesidad de generar un nuevo artefacto.</p>
<p>Por otro lado es aconsejable tener bajo el control de versiones los archivos de configuración como cualquier otro archivo de código fuente de la aplicación, para con el historial del control de versiones ver los cambios que se han hecho o volver a versiones anteriores.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="necesidades-según-el-rol">Necesidades según el rol</h3>
<p>Las diferentes personas cada una con su rol desea tener la capacidad de configurar la aplicación. A los desarrolladores nos interesa para poder externalizar ciertas variables del código de la aplicación para tener la capacidad de cambiar los valores sin modificar el código. Esto es más fácil que encontrar donde están los valores hardcodeados y modificar las diferentes coincidencias, y evitando tener que recompilar.</p>
<p>Aunque los archivos de configuración no son código ejecutable forman parte del código de la aplicación si la configuración se incluye dentro del artefacto, también por comodidad el desarrollador desea cambiarlos al mismo tiempo que el código para mantener la consistencia entre el código y la configuración, ya que todas la variables de configuración que requiere el código deben tener un valor sino se produce un error en tiempo de ejecución.</p>
<p>Las personas con el rol de sistemas o SRE y por las tareas de mantenimiento de sistemas y operaciones también requieren tener la capacidad de cambiar las propiedades ajustando los valores a los adecuados según el entorno de ejecución sin modificar el artefacto, quizá no sobrescribir los valores de todas las propiedades pero si las relevantes desde el punto de vista de sistemas.</p>
<p>Es necesario para ajustar los valores por defecto o hacer una corrección que no requiera generar un nuevo artefacto sino simplemente ajustar un valor de configuración. Por rapidez y porque hacer una corrección generando un nuevo artefacto requiere pasar todo el proceso de pruebas para asegurar que el nuevo artefacto no incluye algún cambio adicional no deseado.</p>
<p>También por motivos de seguridad es necesario externalizar los valores de algunas variables como contraseñas, claves y certificados, de modo que aunque alguien tenga acceso al artefacto no tenga acceso a las credenciales de los servicios que usa.</p>
<p>Los valores adicionales se proporcionan habitualmente como variables de entorno o con archivos externalizados del artefacto que se buscan en el sistema de archivos, de esta forma la configuración incluida en el artefacto por los desarrolladores es sobrescrita por la configuración por la proporcionada por las personas con el rol de sistemas.</p>
<p>La solución para estas diferentes necesidades de los diferentes roles es obtener los valores de las variables de configuración de varias fuentes junto un de orden de preferencia para determinar que valor se toma en caso de que esté definido en varias fuentes.</p>
<p>En las configuraciones más avanzadas es necesario un mecanismo para que las aplicaciones obtengan la configuración de un servidor donde esté centralizada. Al igual que un servicio de registro y descubrimiento es esencial para los microservicios un servicio de obtención de configuración de donde obtengan su configuración es también útil. Dado el gran número de microservicios de los que puede estar compuesto un sistema, su carácter efímero, los varios entornos de ejecución (desarrollo, pruebas, producción, &hellip;) mantener centralizada la configuración en un único sitio hace las cosas mucho más sencillas cuando hay que cambiar el valor de alguna propiedad. En vez de las alternativas con un archivo de configuración, aún externalizado del artefacto, en el sistema de archivos del entorno de ejecución o a través de variables de entorno que deben ser aprovisionadas.</p>
<h3 id="configuración-en-una-aplicación-de-spring-boot">Configuración en una aplicación de Spring Boot</h3>
<p>Spring Boot integra la funcionalidad de obtener la configuración de varias fuente y define un orden de preferencias en caso de conflicto. Spring Cloud Config Server es un servicio que proporciona un mecanismo adicional para centralizar la configuración de las aplicaciones.</p>
<p>En una aplicación monolítica, un monolito modular o en un entorno donde no hay muchas aplicaciones el mecanismo de configuración proporcionado Spring Boot es suficiente. Sin embargo, en un entorno de microservicios o donde hay muchas aplicaciones tener una configuración centralizada proporciona varios beneficios. Los beneficios de un servidor de configuración es centralizar en un única fuente lo que facilita su ubicación, modificación y despliegue en las aplicaciones.</p>
<h4 id="orden-de-preferencia-de-las-propiedades">Orden de preferencia de las propiedades</h4>
<p>Spring Boot soporta varias fuentes de las que obtener la configuración desde archivos de configuración en el <em>classpath</em>, archivos externalizados en el sistemas de archivos, argumentos del programa, propiedades del sistema de la máquina virtual, variables de entorno e incluso otros mecanismos extensibles personalizados.</p>
<p>Cada una de estas fuentes tienen un orden de búsqueda y prioridad donde las fuentes posteriores sobrescriben los valores de las anteriores o se añaden nuevas variables.</p>
<p>En la documentación de Spring Boot están detalladas estas fuentes y prioridad entre ellas. Por ejemplo, la configuración establecida en los archivos de configuración es sobrescrita por la configuración proporcionada como variables de entorno.</p>
<ul>
<li><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config">Spring Boot, Externalized Configuration</a></li>
</ul>
<p>Con Spring Cloud Config las propiedades del servidor de configuración se cargan con posterioridad de los archivos de datos de configuración incluidos en el <em>classpath</em> dentro del artefacto o de los archivos externalizados en el sistema de archivos. Sin embargo, la configuración establecida como variables de entorno siguen teniendo más preferencia.</p>
<h4 id="archivos-de-datos-de-configuración">Archivos de datos de configuración</h4>
<p>Los archivos de configuración entre ellos también tienen un orden de búsqueda en varios directorios y prioridad, iguamente detallado en la documentación de Spring Boot. Teniendo más preferencia los archivos externalizados y dentro de estos los más específicos para un entorno de ejecución.</p>
<p>Las ubicaciones en las que Spring Boot archivos de configuración también tiene una preferencia además de ser a su vez configurable.</p>
<ul>
<li><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.files">Spring Boot, External Application Properties</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.files.importing">Spring Boot, Importing Additional Data</a></li>
</ul>
<p>Los archivos de configuración se pueden definir en el formato <em>properties</em> y <em>yaml</em>. La ventaja del formato <em>yaml</em> es que permite agrupar las propiedades de forma jerárquica que es más legible que el formato <em>properties</em> habitualmente utilizado en las aplicaciones Java por defecto. La desventaja de <em>yaml</em> es que es un formato en el que una mala tabulación genera algún tipo de error o mal funcionamiento.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">app.properties.classpath=classpath&#10;</span></span><span class="line"><span class="cl">app.properties.external=&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-format.properties</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">properties</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">classpath</span><span class="p">:</span><span class="w"> </span><span class="l">classpath</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">external</span><span class="p">:</span><span class="w"> &#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-format.yml</span>
    </div>
</div>
<h4 id="propiedades-que-afectan-a-la-configuración">Propiedades que afectan a la configuración</h4>
<p>En el sistema de configuración de Spring hay ciertas variables que afectan y permiten adaptar la configuración por defecto a las preferencias o necesidades de la aplicación.</p>
<p>Algunas de estas propiedades son el nombre del servicio, los perfiles activos o las ubicaciones de búsqueda de archivos de configuración.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">application</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">service</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">active</span><span class="p">:</span><span class="w"> </span><span class="l">production</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">additional-location</span><span class="p">:</span><span class="w"> </span><span class="l">optional:classpath:/custom-config/,optional:file:./custom-config/</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>spring-boot-config-properties.yml</span>
    </div>
</div>
<p>Estas otras propiedades se utilizan cuando la aplicación de Spring Boot obtiene la configuración adicionalmente de un servidor de configuración de Spring Cloud Config.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">import</span><span class="p">:</span><span class="w"> </span><span class="l">optional:configserver:http://localhost:8090</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">service</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">profile</span><span class="p">:</span><span class="w"> </span><span class="l">production</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="m">2.0</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>spring-boot-cloud-config-properties.yml</span>
    </div>
</div>
<p>En las rutas de búsqueda con el prefijo <em>optional:</em> en caso de no encontrarse la fuente el inicio de la aplicación en vez de fallar con una excepción se ignora y se continúa a riesgo de utilizar los valores de las fuentes anteriores e ignorando lo que tuviese esa fuente opcional.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">location</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">optional</span><span class="p">:</span><span class="w"> </span><span class="l">./config</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">import</span><span class="p">:</span><span class="w"> </span><span class="l">optional:configserver:http://localhost:8090</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>spring-boot-optional.yml</span>
    </div>
</div>
<h3 id="el-servidor-de-configuración-centralizada-spring-cloud-config-server">El servidor de configuración centralizada Spring Cloud Config Server</h3>
<p>Un servidor de configuración permite cambiar o proporcionar una forma adicional de la que la aplicación obtiene propiedades y valores de configuración. La aplicación al iniciar realiza una petición al servidor de configuración y obtiene las propiedades adicionales de configuración. En el caso de Spring Cloud Config Server ofrece una interfaz REST que usa las aplicaciones para realizar la petición.</p>
<p>Por otro lado, la forma de configurar la aplicación cambia, en vez de proporcionar la configuración a la aplicación a cada una de las instancias de su servicio en variables de entorno o en archivos estáticos es cada instancia de la aplicación la que obtiene la configuración de un servidor. Es muy interesante para las personas con el rol de operaciones o SRE y para la arquitectura del sistema.</p>
<p>Otra de sus utilidades es una forma de que ciertos servicios obtengan la configuración cuando sus entornos y sistemas de archivos son efímeros como es el caso de las <a href="https://cloud.google.com/functions/">funciones de Google Cloud</a> o <a href="https://aws.amazon.com/es/lambda/">lambdas de AWS</a>.</p>
<p>Dado que este servicio de configuración es esencial para que los microservicios puedan obtener su configuración sin el cual no pueden proporcionar su funcionalidad hay que configurarlo de tal manera que sea  tolerante a fallos. Una de las medidas para hacerlo tolerante a fallos es iniciar varias instancias de servidores de configuración, estas instancias se autorregistran en el servicio de descubrimiento para que  los microservicios puedan descubrirlos y obtener su configuración al iniciarse.</p>
<h4 id="fuentes-de-configuración">Fuentes de configuración</h4>
<p>El servidor de configuración centralizada Spring Cloud Config soporta varios sistemas diferentes en los que almacenar las propiedades de configuración o <em>backends</em> para recuperarlos cuando una instancia del servicio la solicite.</p>
<p>Una opción es utilizar un repositorio de <a href="https://git-scm.com/">Git</a> con las ventajas asociadas del control de versiones como historial para mantener un registro de los cambios o volver a una versión anterior. Otros son un sistema de archivos, en una base de datos relacional con JDBC, <a href="https://redis.io/">Redis</a>, <a href="https://www.vaultproject.io/">Vault</a> y algunos otros específicos más.</p>
<ul>
<li><a href="https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#_environment_repository">Spring Cloud Config Server, Environment Repository</a></li>
</ul>
<h4 id="propiedades-que-afectan-a-la-configuración-de-spring-cloud-config-server">Propiedades que afectan a la configuración de Spring Cloud Config Server</h4>
<p>El servidor de configuración de Spring Cloud Config también tiene variables de configuración, varias según el sistema de almacenamiento o <em>backend</em> donde se persisten las propiedades de configuración de los servicios. Otras propiedades son para proporcionar las credenciales de autenticación de los <em>backends</em>.</p>
<ul>
<li><a href="https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#_quick_start">Spring Cloud Config, Quick Start</a></li>
<li><a href="https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#_git_backend">Spring Cloud Config Server, Git Backend</a></li>
<li><a href="https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#_file_system_backend">Spring Cloud Config Server, File System Backend</a></li>
</ul>
<p>En el caso de Git la propiedad <em>label</em> del servicio en Git puede ser la huella o <em>hash</em> del <em>commit</em>, una rama o una etiqueta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">git</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">uri</span><span class="p">:</span><span class="w"> </span><span class="l">https://github.com/picodotdev/configuration-repository</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>spring-cloud-config-server-git-properties.yml</span>
    </div>
</div>
<p>En el caso del sistema de archivos como <em>backend</em> esta propiedad permite configurar las rutas en las que buscar los archivos de configuración y la disposición de los archivos de configuración en la estructura de directorios. En este caso la propiedad <em>label</em> es la versión de la aplicación.</p>
<p>Las propiedades <em>application</em>, <em>profile</em>  y <em>label</em> permiten identificar la configuración de un servicio, para un entorno y  de una versión específica.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">active</span><span class="p">:</span><span class="w"> </span><span class="l">native</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">native</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">searchLocations</span><span class="p">:</span><span class="w"> </span><span class="l">file:./misc/config/,file:./misc/config/{application}/,file:./misc/config/{application}/{profile}/,file:./misc/config/{application}/{profile}/{label}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>spring-cloud-config-server-filesystem-properties.yml</span>
    </div>
</div>
<h3 id="ejemplo-de-configuración-en-aplicación-de-spring-boot">Ejemplo de configuración en aplicación de Spring Boot</h3>
<p>Esta aplicación de Spring Boot tiene varias propiedades de configuración. Para mostrar el mecanismo de preferencia en la resolución de los valores cada una de las propiedades se obtiene de una fuente distinta. En esta lista de menor preferencia a mayor preferencia, desde un archivo de configuración en el <em>classpath</em>, archivo externalizado, servidor de configuración, argumento de programa y variable de entorno.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloudconfig.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.CommandLineRunner</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${app.properties.classpath}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">classpath</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${app.properties.external}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">external</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${app.properties.argument}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">argument</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${app.properties.environment}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">environment</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${app.properties.cloud}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">cloud</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Application classpath property: &#34;</span> <span class="o">+</span> <span class="n">classpath</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Application external property: &#34;</span> <span class="o">+</span> <span class="n">external</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Application argument property: &#34;</span> <span class="o">+</span> <span class="n">argument</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Application environment property: &#34;</span> <span class="o">+</span> <span class="n">environment</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Application cloud property: &#34;</span> <span class="o">+</span> <span class="n">cloud</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-client.java</span>
    </div>
</div>
<p>Este es el archivo de configuración que se incluye en el <em>classpath</em> y como parte del artefacto, no está externalizado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">application</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">service</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">active</span><span class="p">:</span><span class="w"> </span><span class="l">production</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">import</span><span class="p">:</span><span class="w"> </span><span class="l">optional:configserver:http://localhost:8090</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">failFast</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">label</span><span class="p">:</span><span class="w"> </span><span class="m">2.0</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">properties</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">classpath</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;classpath&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">external</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">argument</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">cloud</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-classpath.yml</span>
    </div>
</div>
<p>Este archivo de configuración externo al artefacto proporciona el valor de una propiedad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">properties</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">external</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;external&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-external.yml</span>
    </div>
</div>
<p>Sin ninguna configuración adicional y con el servidor de configuración no iniciado estos son lo valores que toman las propiedades en la aplicación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew service:run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Application classpath property: classpath&#10;</span></span><span class="line"><span class="cl">Application external property: external&#10;</span></span><span class="line"><span class="cl">Application argument property: &#10;</span></span><span class="line"><span class="cl">Application environment property: &#10;</span></span><span class="line"><span class="cl">Application cloud property:</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-1</span>
    </div>
</div>
<p>Añadiendo al iniciar el programa un argumento o variable de entorno para configurar el valor de una propiedad la aplicación toma el valor proporcionado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--app.properties.argument=argument&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-2.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Application classpath property: classpath&#10;</span></span><span class="line"><span class="cl">Application external property: external&#10;</span></span><span class="line"><span class="cl">Application argument property: argument&#10;</span></span><span class="line"><span class="cl">Application environment property: &#10;</span></span><span class="line"><span class="cl">Application cloud property:</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-2</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nv">APP_PROPERTIES_ENVIRONMENT</span><span class="o">=</span><span class="s2">&#34;enviroment&#34;</span> ./gradlew service:run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-3.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Application classpath property: classpath&#10;</span></span><span class="line"><span class="cl">Application external property: external&#10;</span></span><span class="line"><span class="cl">Application argument property: &#10;</span></span><span class="line"><span class="cl">Application environment property: enviroment&#10;</span></span><span class="line"><span class="cl">Application cloud property:</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-3</span>
    </div>
</div>
<p>Con el servidor de configuración iniciado la aplicación en este caso adicionalmente toma el valor de la configuración para la aplicación del servidor. En casos casos anteriores la aplicación en el inicio no falla porque la fuente del servidor de Spring Cloud Config Server se considera opcional.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew configserver:run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-4.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Application classpath property: classpath&#10;</span></span><span class="line"><span class="cl">Application external property: external&#10;</span></span><span class="line"><span class="cl">Application argument property: &#10;</span></span><span class="line"><span class="cl">Application environment property: &#10;</span></span><span class="line"><span class="cl">Application cloud property: cloud-default</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-4</span>
    </div>
</div>
<p>Cambiando la propiedad <em>label</em> o como variable de entorno a través de los argumentos en el inicio del servicio es posible cambiar la versión que el servidor de configuración devuelve para el servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nv">SPRING_CLOUD_CONFIG_LABEL</span><span class="o">=</span><span class="s2">&#34;1.0&#34;</span> ./gradlew service:run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-5.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Application classpath property: classpath&#10;</span></span><span class="line"><span class="cl">Application external property: external&#10;</span></span><span class="line"><span class="cl">Application argument property: &#10;</span></span><span class="line"><span class="cl">Application environment property: &#10;</span></span><span class="line"><span class="cl">Application cloud property: cloud-1.0</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-5</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nv">SPRING_CLOUD_CONFIG_LABEL</span><span class="o">=</span><span class="s2">&#34;2.0&#34;</span> ./gradlew service:run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-6.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Application classpath property: classpath&#10;</span></span><span class="line"><span class="cl">Application external property: external&#10;</span></span><span class="line"><span class="cl">Application argument property: &#10;</span></span><span class="line"><span class="cl">Application environment property: &#10;</span></span><span class="line"><span class="cl">Application cloud property: cloud-2.0</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-6</span>
    </div>
</div>
<p>Las dependencias en el archivo de construcción con <a href="https://gradle.org/">Gradle</a> son las siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.6.1&#39;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:2021.0.0&#39;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.9&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.13.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="n">JavaVersion</span><span class="o">.</span><span class="na">VERSION_17</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">targetCompatibility</span> <span class="o">=</span> <span class="n">JavaVersion</span><span class="o">.</span><span class="na">VERSION_17</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloudconfig.service.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build-client.gradle</span>
    </div>
</div>
<h3 id="ejemplo-de-configuración-centralizada-con-spring-cloud-config-server">Ejemplo de configuración centralizada con Spring Cloud Config Server</h3>
<p>El servidor de configuración de Spring Cloud Config es posible implementarlo como una aplicación de Spring Boot. La aplicación de Spring Boot simplemente requiere utilizar la anotación <em>@EnableConfigServer</em> y configurar el almacenamiento del <em>backend</em> para las propiedades de configuración, en el ejemplo utilizando el sistema de archivos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloudconfig.configserver</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.cloud.config.server.EnableConfigServer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableConfigServer</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-server.java</span>
    </div>
</div>
<p>Los archivos de configuración para los microservicios en este ejemplo están en el directorio <em>misc/config</em> donde siguiendo algunas convenciones para asignar el nombre a los archivos se pueden personalizar las configuraciones de los microservicios según el entorno y perfil con el que se active. Spring Cloud Config denomina un <em>backend</em> como el sistema de almacenamiento de los datos de configuración en este caso se utiliza el sistema de archivos, sin embargo, hay otras disponibles como un repositorio de git el cual ofrece varias ventajas propias de un repositorio de código como historial, ramas de trabajo y hacer cambios con un <em>commit</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8090}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">active</span><span class="p">:</span><span class="w"> </span><span class="l">native</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">application</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">configserver</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">native</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">searchLocations</span><span class="p">:</span><span class="w"> </span><span class="l">file:./misc/config/,file:./misc/config/{application}/,file:./misc/config/{application}/{profile}/,file:./misc/config/{application}/{profile}/{label}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-server.yml</span>
    </div>
</div>
<p>Con los siguientes archivos de configuración en el servidor para el servicio, en función de la versión de la aplicación solicitada las propiedades devueltas cambian. Estos comandos solicitan al servidor la configuración de la aplicación a través de una petición de red con la interfaz REST, lo datos se devuelven en formato JSON.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">properties</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">cloud</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;cloud-1.0&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-1.0.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">properties</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">cloud</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;cloud-2.0&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-2.0.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">properties</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">cloud</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;cloud-default&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-default.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -v <span class="s2">&#34;http://localhost:8090/service/production/1.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-spring-cloud-config-server-1.0.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;name&#34;</span>: <span class="s2">&#34;service&#34;</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;profiles&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;production&#34;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">]</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;label&#34;</span>: <span class="s2">&#34;1.0&#34;</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;version&#34;</span>: null,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;state&#34;</span>: null,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;propertySources&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;name&#34;</span>: <span class="s2">&#34;file:misc/config/service/production/1.0/application.yml&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;source&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;app.properties.cloud&#34;</span>: <span class="s2">&#34;cloud-1.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;name&#34;</span>: <span class="s2">&#34;file:misc/config/service/application.yml&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;source&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;app.properties.cloud&#34;</span>: <span class="s2">&#34;cloud-default&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-spring-cloud-config-server-1.0.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -v <span class="s2">&#34;http://localhost:8090/service/production/2.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-spring-cloud-config-server-2.0.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;name&#34;</span>: <span class="s2">&#34;service&#34;</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;profiles&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;production&#34;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">]</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;label&#34;</span>: <span class="s2">&#34;2.0&#34;</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;version&#34;</span>: null,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;state&#34;</span>: null,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;propertySources&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;name&#34;</span>: <span class="s2">&#34;file:misc/config/service/production/2.0/application.yml&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;source&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;app.properties.cloud&#34;</span>: <span class="s2">&#34;cloud-2.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;name&#34;</span>: <span class="s2">&#34;file:misc/config/service/application.yml&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;source&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;app.properties.cloud&#34;</span>: <span class="s2">&#34;cloud-default&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-spring-cloud-config-server-2.0.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -v <span class="s2">&#34;http://localhost:8090/service/production/&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-spring-cloud-config-server-default.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;name&#34;</span>: <span class="s2">&#34;service&#34;</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;profiles&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;production&#34;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">]</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;label&#34;</span>: null,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;version&#34;</span>: null,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;state&#34;</span>: null,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;propertySources&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;name&#34;</span>: <span class="s2">&#34;file:misc/config/service/application.yml&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;source&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;app.properties.cloud&#34;</span>: <span class="s2">&#34;cloud-default&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-spring-cloud-config-server-default.out</span>
    </div>
</div>
<p>Dado que el servicio de configuración se convierte en crítico para el inicio de las aplicaciones es recomendable tener varias instancias del mismo para proporcionar tolerancia a fallos. Y en una arquitectura de microservicios quizá utilizando registro y descubrimiento de servicios.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul</a></li>
</ul>
<p>Otra necesidad es cifrar algunas propiedades, para ello el servidor de configuración también proporciona dos <em>endpoints</em> uno para hacer el cifrado y otro para hacer el descifrado.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/">Almacenar cifrados los valores de configuración sensibles en Spring Cloud Config</a></li>
</ul>
<p>Incluso es posible recargar la configuración de una aplicación de Spring Boot sin reiniciarla.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/recargar-la-configuracion-sin-reiniciar-una-aplicacion-spring-boot-con-spring-cloud-config/">Recargar sin reiniciar la configuración de una aplicación Spring Boot con Spring Cloud Config</a></li>
</ul>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudConfig">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew service:run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>