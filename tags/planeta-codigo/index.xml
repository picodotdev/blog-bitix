<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2022-10-21T20:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/</id>
        <title>Las funcionalidades de un service mesh en una arquitectura de microservicios</title>
        <updated>2022-10-21T20:00:00+02:00</updated>
        <published>2022-10-21T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los monolitos son la opción más sencilla y mejor en la mayoría de casos, los microservicios solo son recomendables cuando los problemas que resuelven compensan los problemas asociados que generan, entre ellos una mayor complejidad en la infraestructura y de comunicación entre servicios que utilizan un medio con fallos, la red de comunicaciones entre diferentes computadoras. Esta mayor complejidad, mayor número de servicios y mayor probabilidad de que alguna falle requiere utilizar herramientas para en el sistema tener seguridad, observabilidad, resiliencia y control de tráfico. Estas son funcionalidades que como una capa de red para los servicios proporciona un <em>service mesh</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="278" alt="HashiCorp Consul" title="HashiCorp Consul"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>Los sistemas basados en microservicios tienen sus ventajas como utilizar servicios independientes que pueden ser desarrollados y desplegados de forma independiente incluso por distintos equipos de desarrolladores al menos mientras solo se cambien sus detalles de implementación y mientras sus interfaces de comunicación no cambien. Otras ventajas son una mejor escalabilidad y mejor tolerancia a errores.</p>
<p>Un monolito es más que suficiente en muchos casos y los microservicios solo son necesarios en sistemas grandes y complejos formados por varios equipos de desarrollo, escalabilidad y tolerancia a fallos. Cuando tiene sentido utilizar un sistema basado en los microservicios se resuelve algunos problemas de los monolitos pero surgen otros propios de los microservicios tan o más complicados que los de los monolitos.</p>
<p>Uno de los mayores problemas de los microservicios es que el sistema es más complejo, formado por un conjunto mayor de piezas individuales que han de colaborar para proporcionar la funcionalidad global, han de tener en cuenta problemas que en las aplicaciones monolíticas no tienen, los microservicios son independientes pero se relacionan entre ellos a través de la red un medio de comunicación que es poco fiable comparado con la llamada a una función dentro de la misma computadora en un monolito.</p>
<p>Para tener bajo control las complicaciones de los microservicios son necesarias herramientas que hagan del sistema más fácil de mantener y desarrollar. Una de las herramientas específicamente desarrollada para los microservicios es <a href="https://www.consul.io/">Consul</a> de <a href="https://www.hashicorp.com/">HashiCorp</a> que proporciona varias funcionalidades como descubrimiento de servicios y un almacén compartido de información. Otra de las funcionalidades que implementa y provee Consul es el concepto de <em>service mesh</em> que proporciona seguridad, observabilidad, resiliencia y control de tráfico.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="qué-es-un-_service-mesh_">Qué es un <em>service mesh</em></h3>
<p><a href="https://developer.hashicorp.com/consul/docs/concepts/service-mesh">La definición de Consul de un <em>service mesh</em></a> es una capa de red dedicada que proporciona seguridad en la comunicación de servicio a servicio dentro y a través de la infraestructura, incluyendo el sistemas propios y entornos en la nube. Un <em>service mesh</em> es utilizado habitualmente en arquitecturas basadas en microservicios pero son útiles en cualquier escenario en que hay una comunicación por red compleja.</p>
<p>Los microservicios se comunican entre ellos formado una red distribuida, un <em>service mesh</em> es el nombre que se le da a este tipo de comunicación. En el aspecto de las herramientas de infraestructura para facilitar y dar solución a varios de los problemas de la comunicación por red un <em>service mesh</em> trata todos estos problemas y aporta soluciones.</p>
<p>En gran medida la solución a los problemas de los microservicios en un <em>service mesh</em> es implementada estableciendo un intermediario <em>proxy</em> en la comunicación entre los servicios siendo en este intermediario denominado <em>sidecar proxy</em> el que implementa la solución. Se denomina <em>sidecar proxy</em> ya que al mismo tiempo que se despliega el servicio se despliega el intermediario adicionalmente para la comunicación entre los diferentes servicios que usa y los servicios en vez de comunicarse entre ellos directamente se comunican con el <em>sidecar proxy</em>.</p>
<p>El <em>service mesh</em> a través de los <em>proxy sidecar</em> permiten delegar en la infraestructura y no en las aplicaciones varios aspectos que son necesarios resolver en un sistema basado en microservicios y todo ello de forma trasnparente y sin tener que hacer modificaciones en los microservicios más a llá de configuración de puertos.</p>
<h4 id="seguridad">Seguridad</h4>
<p>La computación en la nube de los proveedores de infraestructura como <a href="https://aws.amazon.com/es/">Amazon AWS</a>, <a href="https://cloud.google.com/">Google Cloud</a> y <a href="https://azure.microsoft.com/es-es/">Microsoft Azure</a> no dejan de ser entornos compartidos de computación donde todos aun con las medidas de seguridad y lógicas utilizan los mismos medios de red y computación. Por eso se considera que la computación en la nube utiliza un medio no confiable en el que el descubrimiento de un fallo de seguridad tan importante como <a href="https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/">el fallo de seguridad Meltdown y Spectre de los procesadores</a> aún con las medidas de mitigación implementadas es un grave problema.</p>
<p>Para proporcionar mayor seguridad en las comunicaciones de los microservicios en un medio no confiable Consul ofrece una forma de comunicación cifrada, con autenticación mutua entre ambos servicios y la gestión de la autorización en un plano lógico a nivel de servicio con el mecanismo de intenciones y no de más bajo nivel de direcciones IP, puertos y reglas de <em>firewall</em>.</p>
<p>La seguridad entre los servicios en Consul es implementada mediante el componente denominado <em>sidecar proxy</em> que hace de intermediario o <em>proxy</em> entre los dos servicios. Consul administra el <em>sidecar proxy</em> y este proporciona las funcionalidades comentadas de cifrado, autenticación mutua y autorización. Toda comunicación se realiza de forma cifrada y con autenticación mutua ningún servicio ajeno al <em>service mesh</em> puede comunicarse con sus servicios, para que un servicio externo al <em>service mesh</em> pueda comunicarse con un servicio del <em>service mesh</em> el tráfico entra por un <em>ingress gateway</em> que es un servicio dedicado a esta función.</p>
<p>Una gran característica es que todas estas funcionalidades son proporcionadas sin que los servicios sean conscientes de que realmente la comunicación la están realizando a través de los <em>sidecar proxy</em>.</p>
<p>En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> la seguridad a nivel de red en la misma máquina en la comunicación entre el servicio y el <em>sidecar proxy</em> se protege con <em>namespaces</em> de red que proporciona Linux.</p>
<h4 id="observabilidad">Observabilidad</h4>
<p>Dado el gran número de elementos de una arquitectura de microservicios es imprescindible tener visibilidad del estado y comportamiento de cada uno de ellos. Se necesitan métricas que permitan conocer el estado normal de los servicios y en caso de obtener unas métricas diferentes saber que está ocurriendo en el sistema en su conjunto y en cada pieza individual.</p>
<p>Varias medidas de observabilidad es posible implementarlas en los propios microservicios como parte de su implementación de código, sin embargo, añadir código a cada uno de los microservicios requiere hacerlo individualmente, los hace más complicados y dependientes del lenguaje de implementación para cada uno de ellos para una funcionalidad de infraestructura que no está relacionada con la lógica de negocio que proporcionan los microservicios.</p>
<p>Por ello en la medida de lo posible es mejor delegar la observabilidad a la infraestructura que además permite aplicar la observabilidad de forma homogénea y con las mismas herramientas para todos los microservicios. Algunas métricas de observabilidad son el número de peticiones que está recibiendo un servicio por unidad de tiempo, la tasa de errores o la latencia de red en diferente percentiles.</p>
<p>Dado que todo el tráfico entre los microservicios fluye a través de los <em>sidecar</em> que hacen de <em>proxy</em> Consul es capaz de proporcionar estas métricas de forma independiente a los microservicios. Consul exporta el formato de <a href="https://prometheus.io/">Prometheus</a> las métricas, proporciona una visualización básica de las mismas y con <a href="https://grafana.com/">Grafana</a> es posible obtener visualizaciones de los datos más detalladas y complejas.</p>
<p>Para obtener el flujo completo desde que entra en el <em>service mesh</em> y fluye entre las diferentes llamadas entre los microservicios <a href="https://www.jaegertracing.io/">Jaeger</a> con <a href="https://zipkin.io/">Zipkin</a> o <a href="https://opentelemetry.io/">OpenTelemetry</a> permite obtener una foto de todos los pasos y saltos que ha tenido una petición entre los diferentes servicios.</p>
<h4 id="resiliencia">Resiliencia</h4>
<p>Dado el número de servicios y el número de instancias de cada uno de ellos y la no completa fiabilidad de un medio de red que puede fallar es necesario que los microservicios sean resilientes ante la aparición de estos fallos.</p>
<p>La resiliencia se puede implementar de forma activa donde Consul comprueba que cada servicio mediante un <em>health check</em> esté funcionando ya sea realizando una petición HTTP o TCP al servicio que si responde correctamente se considera que el servicio tiene un buen estado de funcionamiento.</p>
<p>Los <em>health check</em> no son infalibles y los microservicios para aumentar su resiliencia pueden implementar otras medidas adicionales como reintentos o <em>retries</em> realizando peticiones con la esperanza de que sean problemas temporales y en un siguiente intento funcione. Otra medida son los <em>timeout</em> para poner límites a los tiempos de espera de modo que si un microservicio tarda en responder no ocasiones fallos en otros microservicios y el sistema caiga en cascada. Estas son medidas pasivas que implementan cada microservicio.</p>
<p>Consul implementa medidas de resiliencia tanto activas como pasivas, y en caso de que una instancia de un servicio falle redirigir el tráfico a otras instancias con buen estado de salud, este enrutamiento se realiza mediante el control de tráfico.</p>
<h4 id="control-de-tráfico">Control de tráfico</h4>
<p>Al ser los microservicios independientes estos se despliegan de forma independiente mientras los cambios sean solo de implementación. Al desplegar una nueva versión de un microservicio es muy útil tener la capacidad del enrutamiento de las peticiones entre los microservicios para usar diferentes estrategias de despliegue como <em>rollout</em>, <em>canary</em>, <em>blue/green</em> y cambiar el enrutamiento.</p>
<p>Consul proporciona tres conceptos para controlar el enrutamiento entre los servicios los <em>resolvers</em> que identifican las instancias de los servicios en grupos, <em>splitters</em> que permite establecer la cantidad de tráfico que es enviada a los grupos de servicios y finalmente los <em>routers</em> que permiten mediante reglas de la petición o de la instancia del servicio a que servicio se le envía el tráfico.</p>
<h3 id="ejemplo-práctico-del-_service-mesh_-de-consul">Ejemplo práctico del <em>service mesh</em> de Consul</h3>
<p>En el libro Consul: Up &amp; Running se explica más detalladamente los puntos anteriores junto con un ejemplo con los necesarias configuraciones para Consul de cada uno de ellos utilizando <a href="https://kubernetes.io/">Kubernetes</a> y máquinas virtuales.</p>
<p>En el libro se usa simplemente Consul, en este artículo muestro la misma configuración y práctica de los conceptos comentados pero usando <a href="https://www.nomadproject.io/">Nomad</a> el orquestador de procesos de HashiCorp equivalente a Kubernetes pero más simple de usar aunque no tan nombrado como Kuberntes. Lo ejecuto dentro de una máquina virtual de <a href="https://www.virtualbox.org/">VirtualBox</a> aprovisionada y creada con <a href="https://www.vagrantup.com/">Vagrant</a> otro producto de HashiCorp.</p>
<p>El ejemplo consiste en dos procesos uno <em>frontend</em> que muestra la información de una guía de aves y un servicio de <em>backend</em> que devuelve los datos de las aves. Los procesos están empaquetados en sus imágenes de <a href="https://www.docker.com/">Docker</a>. Ambas aplicaciones se comunican mediante una API REST y permiten probar en la práctica todos los conceptos comentados.</p>
<h4 id="creación-de-la-máquina-virtual">Creación de la máquina virtual</h4>
<p>Docker es un software desarrollado para GNU/Linux que en otros sistemas no funciona de forma nativa y requiere adaptaciones y virtualización, para poder ejecutar el ejemplo en cualquier sistema operativo y no instalar nada en la máquina local más allá de VirtualBox y Vagrant se utiliza una máquina virtual que permiten crear estas dos herramientas de forma fácil.</p>
<p>El siguiente es el archivo de configuración para Vagrant de la máquina virtual que aprovisiona una distribución Ubuntu con las herramientas utilizadas en el ejemplo entre ellas Consul, Nomad, <a href="https://www.envoyproxy.io/">Envoy</a> y Docker. También se configura la cantidad de memoria asignada a la máquina virtual y la dirección IP que se le asigna.</p>
<p>Al iniciar la máquina virtual se aprovisiona, con Vagrant simplemente consiste en ejecutar el siguiente comando. Una vez iniciada se puede hacer SSH para iniciar una sesión de terminal dentro de la máquina virtual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vagrant up&#10;</span></span><span class="line"><span class="cl">$ vagrant ssh&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-ruby" data-lang="ruby"><span class="line"><span class="cl"><span class="c1"># -*- mode: ruby -*-</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># vi: set ft=ruby :</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&#34;2&#34;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="s2">&#34;ubuntu&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">instance</span><span class="o">|</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&#34;ubuntu/jammy64&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="s2">&#34;private_network&#34;</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&#34;192.168.56.10&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&#34;.&#34;</span><span class="p">,</span> <span class="s2">&#34;/home/vagrant/ConsulServiceMesh/&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">vb</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;Ubuntu 22.04 (Vagrant)&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">vb</span><span class="o">.</span><span class="n">memory</span> <span class="o">=</span> <span class="s2">&#34;4096&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="s2">&#34;shell&#34;</span><span class="p">,</span> <span class="ss">inline</span><span class="p">:</span> <span class="vg">$consul_role_script</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">end</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">end</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="vg">$consul_role_script</span> <span class="o">=</span> <span class="s">&lt;&lt;-SCRIPT&#10;</span></span></span><span class="line"><span class="cl"><span class="s"></span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="s2">&#34;Updating...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">upgrade</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="s2">&#34;Installing Consul...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">wget</span> <span class="o">-</span><span class="n">O</span><span class="o">-</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">apt</span><span class="o">.</span><span class="n">releases</span><span class="o">.</span><span class="n">hashicorp</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">gpg</span> <span class="o">|</span> <span class="n">gpg</span> <span class="o">--</span><span class="n">dearmor</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">tee</span> <span class="sr">/usr/s</span><span class="n">hare</span><span class="o">/</span><span class="n">keyrings</span><span class="o">/</span><span class="n">hashicorp</span><span class="o">-</span><span class="n">archive</span><span class="o">-</span><span class="n">keyring</span><span class="o">.</span><span class="n">gpg</span> <span class="o">&gt;</span> <span class="sr">/dev/nu</span><span class="n">ll</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="s2">&#34;deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main&#34;</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">tee</span> <span class="sr">/etc/</span><span class="n">apt</span><span class="o">/</span><span class="n">sources</span><span class="o">.</span><span class="n">list</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">hashicorp</span><span class="o">.</span><span class="n">list</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span> <span class="o">&amp;&amp;</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">consul</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="s2">&#34;Installing Nomad...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">wget</span> <span class="o">-</span><span class="n">O</span><span class="o">-</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">apt</span><span class="o">.</span><span class="n">releases</span><span class="o">.</span><span class="n">hashicorp</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">gpg</span> <span class="o">|</span> <span class="n">gpg</span> <span class="o">--</span><span class="n">dearmor</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">tee</span> <span class="sr">/usr/s</span><span class="n">hare</span><span class="o">/</span><span class="n">keyrings</span><span class="o">/</span><span class="n">hashicorp</span><span class="o">-</span><span class="n">archive</span><span class="o">-</span><span class="n">keyring</span><span class="o">.</span><span class="n">gpg</span>  <span class="o">&gt;</span> <span class="sr">/dev/nu</span><span class="n">ll</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="s2">&#34;deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main&#34;</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">tee</span> <span class="sr">/etc/</span><span class="n">apt</span><span class="o">/</span><span class="n">sources</span><span class="o">.</span><span class="n">list</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">hashicorp</span><span class="o">.</span><span class="n">list</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span> <span class="o">&amp;&amp;</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">nomad</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="s2">&#34;Installing Envoy...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">func</span><span class="o">-</span><span class="n">e</span><span class="o">.</span><span class="n">io</span><span class="o">/</span><span class="n">install</span><span class="o">.</span><span class="n">sh</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">bash</span> <span class="o">-</span><span class="n">s</span> <span class="o">--</span> <span class="o">-</span><span class="n">b</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span> <span class="o">&amp;&amp;</span> <span class="n">func</span><span class="o">-</span><span class="n">e</span> <span class="n">use</span> <span class="mi">1</span><span class="o">.</span><span class="mi">23</span><span class="o">.</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">sudo</span> <span class="n">cp</span> <span class="o">~</span><span class="sr">/.func-e/</span><span class="n">versions</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">23</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">envoy</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="s2">&#34;Installing cni plugins...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="o">-</span><span class="n">o</span> <span class="n">cni</span><span class="o">-</span><span class="n">plugins</span><span class="o">.</span><span class="n">tgz</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">containernetworking</span><span class="o">/</span><span class="n">plugins</span><span class="o">/</span><span class="n">releases</span><span class="o">/</span><span class="n">download</span><span class="o">/</span><span class="n">v1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">cni</span><span class="o">-</span><span class="n">plugins</span><span class="o">-</span><span class="n">linux</span><span class="o">-</span><span class="n">amd64</span><span class="o">-</span><span class="n">v1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="n">tgz</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">mkdir</span> <span class="o">-</span><span class="nb">p</span> <span class="sr">/opt/</span><span class="n">cni</span><span class="o">/</span><span class="n">bin</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">tar</span> <span class="o">-</span><span class="n">C</span> <span class="sr">/opt/</span><span class="n">cni</span><span class="o">/</span><span class="n">bin</span> <span class="o">-</span><span class="n">xzf</span> <span class="n">cni</span><span class="o">-</span><span class="n">plugins</span><span class="o">.</span><span class="n">tgz</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">tee</span> <span class="sr">/proc/s</span><span class="n">ys</span><span class="o">/</span><span class="n">net</span><span class="o">/</span><span class="n">bridge</span><span class="o">/</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">arptables</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">tee</span> <span class="sr">/proc/s</span><span class="n">ys</span><span class="o">/</span><span class="n">net</span><span class="o">/</span><span class="n">bridge</span><span class="o">/</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">ip6tables</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="mi">1</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">tee</span> <span class="sr">/proc/s</span><span class="n">ys</span><span class="o">/</span><span class="n">net</span><span class="o">/</span><span class="n">bridge</span><span class="o">/</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">iptables</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">cat</span> <span class="o">&lt;&lt;</span> <span class="no">EOF</span> <span class="o">&gt;</span> <span class="sr">/etc/s</span><span class="n">ysctl</span><span class="o">.</span><span class="n">d</span><span class="o">/</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">net</span><span class="o">.</span><span class="n">bridge</span><span class="o">.</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">arptables</span> <span class="o">=</span> <span class="mi">1</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">net</span><span class="o">.</span><span class="n">bridge</span><span class="o">.</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">ip6tables</span> <span class="o">=</span> <span class="mi">1</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">net</span><span class="o">.</span><span class="n">bridge</span><span class="o">.</span><span class="n">bridge</span><span class="o">-</span><span class="n">nf</span><span class="o">-</span><span class="n">call</span><span class="o">-</span><span class="n">iptables</span> <span class="o">=</span> <span class="mi">1</span>&#10;</span></span><span class="line"><span class="cl">  <span class="no">EOF</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="s2">&#34;Installing Docker...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">curl</span> <span class="o">-</span><span class="n">fsSL</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">download</span><span class="o">.</span><span class="n">docker</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">ubuntu</span><span class="o">/</span><span class="n">gpg</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">gpg</span> <span class="o">--</span><span class="n">dearmor</span> <span class="o">-</span><span class="n">o</span> <span class="sr">/usr/s</span><span class="n">hare</span><span class="o">/</span><span class="n">keyrings</span><span class="o">/</span><span class="n">docker</span><span class="o">.</span><span class="n">gpg</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">echo</span> <span class="p">\</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  $(lsb_release -cs) stable&#34;</span> <span class="o">|</span> <span class="n">sudo</span> <span class="n">tee</span> <span class="sr">/etc/</span><span class="n">apt</span><span class="o">/</span><span class="n">sources</span><span class="o">.</span><span class="n">list</span><span class="o">.</span><span class="n">d</span><span class="o">/</span><span class="n">docker</span><span class="o">.</span><span class="n">list</span> <span class="o">&gt;</span> <span class="sr">/dev/nu</span><span class="n">ll</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span> <span class="o">&amp;&amp;</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span><span class="o">-</span><span class="n">cli</span> <span class="n">containerd</span><span class="o">.</span><span class="n">io</span> <span class="n">docker</span><span class="o">-</span><span class="n">compose</span><span class="o">-</span><span class="n">plugin</span> <span class="o">&amp;&amp;</span> <span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">enable</span> <span class="n">docker</span><span class="o">.</span><span class="n">service</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">sudo</span> <span class="n">usermod</span> <span class="o">-</span><span class="n">aG</span> <span class="n">docker</span> <span class="n">vagrant</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="no">SCRIPT</span>&#10;</span></span><span class="line"><span class="cl">  <span class="k">end</span>&#10;</span></span><span class="line"><span class="cl">  </span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Vagrantfile</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/virtualbox_hu7a2a034edbf495f255b69302d89bf1d6_176833_2560x1440_fit_box_3.png" data-gallery="" title="VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/virtualbox_hu7a2a034edbf495f255b69302d89bf1d6_176833_650x450_fit_box_3.png" width="582" height="450" alt="VirtualBox" title="VirtualBox"  class="lozad "></a></p>
<figcaption>VirtualBox</figcaption>
</figure>
</div>
<h4 id="inicio-de-consul-y-nomad-y-microservicios-del-ejemplo">Inicio de Consul y Nomad y microservicios del ejemplo</h4>
<p>Una de las ventajas de Consul y Nomad es que son muy simples de usar ya que sus programas son simplemente un único binario. Consul y Nomad se inician con los siguientes comandos en modo desarrollo con sus archivos de configuración.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ consul agent -dev -config-dir<span class="o">=</span>consul.d/&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo nomad agent -dev-connect -config<span class="o">=</span>nomad.d/&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="n">server</span> <span class="o">=</span> <span class="kt">true</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">bootstrap_expect</span> <span class="o">=</span> <span class="m">1</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">bind_addr</span> <span class="o">=</span> <span class="s2">&#34;127.0.0.1&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">client_addr</span> <span class="o">=</span> <span class="s2">&#34;0.0.0.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">ports</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;grpc</span> <span class="o">=</span> <span class="m">8502</span>&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">connect</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;enabled</span> <span class="o">=</span> <span class="kt">true</span>&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">ui_config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;enabled</span> <span class="o">=</span> <span class="kt">true</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;metrics_provider</span> <span class="o">=</span> <span class="s2">&#34;prometheus&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">metrics_proxy</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base_url</span> <span class="o">=</span> <span class="s2">&#34;http://localhost:9090&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.d/consul.hcl</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="k">plugin</span> <span class="s2">&#34;docker&#34;</span> {&#10;</span></span><span class="line"><span class="cl">  <span class="k">config</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">volumes</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  enabled</span> <span class="o">=</span> <span class="kt">true</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="k">volumes</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;enabled</span> <span class="o">=</span> <span class="kt">true</span>&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad.d/nomad.hcl</span>
    </div>
</div>
<p>Consul requiere la definición del servicio <em>ingress gateway</em> que permite que entre tráfico al <em>service mesh</em>, en esta configuración a través del puerto 8080, el tráfico entrante es redirigido al servicio <em>frontend</em>. Esta configuración se proporciona como un <a href="https://developer.hashicorp.com/consul/docs/connect/config-entries">Config Entry</a> de Consul y se proporciona a Consul con un comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ consul config write consul.d/config-entries/proxy-defaults.hcl&#10;</span></span><span class="line"><span class="cl">$ consul config write consul.d/config-entries/ingress-gateway.hcl&#10;</span></span><span class="line"><span class="cl">$ consul connect envoy -gateway<span class="o">=</span>ingress -service ingress-gateway -admin-bind 127.0.0.1:19002 -address 127.0.0.1:20000</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul-ingress-gateway.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="n">Kind</span> <span class="o">=</span> <span class="s2">&#34;ingress-gateway&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Name</span> <span class="o">=</span> <span class="s2">&#34;ingress-gateway&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">Listeners</span> <span class="o">=</span> <span class="p">[</span>{&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;Port</span> <span class="o">=</span> <span class="m">8080</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;Protocol</span> <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;Services</span> <span class="o">=</span> <span class="p">[</span>{&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name</span> <span class="o">=</span> <span class="s2">&#34;frontend&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hosts</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;localhost&#34;, &#34;192.168.56.10&#34;</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}<span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">}<span class="p">]</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.d/config-entries/ingress-gateway.hcl</span>
    </div>
</div>
<p>La configuración de los <em>sidecar proxy</em> que crear Consul en este ejemplo es necesario para exportar métricas de Prometheus y enviar la trazabilidad a Jaeger usando Zipkin.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="n">Kind</span> <span class="o">=</span> <span class="s2">&#34;proxy-defaults&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Name</span> <span class="o">=</span> <span class="s2">&#34;global&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">Config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;protocol</span> <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;envoy_tracing_json</span> <span class="o">=</span> <span class="err">&lt;&lt;</span><span class="k">EOF</span>&#10;</span></span><span class="line"><span class="cl">{&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;http&#34;</span><span class="err">:</span>{&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;name&#34;:&#34;envoy.tracers.zipkin&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;typedConfig&#34;</span><span class="err">:</span>{&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;@type&#34;:&#34;type.googleapis.com/envoy.config.trace.v3.ZipkinConfig&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;collector_cluster&#34;:&#34;jaeger_collector&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;collector_endpoint_version&#34;:&#34;HTTP_JSON&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;collector_endpoint&#34;:&#34;/api/v2/spans&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;shared_span_context&#34;</span><span class="err">:</span><span class="kt">false</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span><span class="line"><span class="cl"><span class="k">EOF</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp; envoy_extra_static_clusters_json</span> <span class="o">=</span> <span class="err">&lt;&lt;</span><span class="k">EOF</span>&#10;</span></span><span class="line"><span class="cl">{&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;connect_timeout&#34;:&#34;3.000s&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;dns_lookup_family&#34;:&#34;V4_ONLY&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;lb_policy&#34;:&#34;ROUND_ROBIN&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;load_assignment&#34;</span><span class="err">:</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cluster_name&#34;:&#34;jaeger_collector&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;endpoints&#34;</span><span class="err">:</span><span class="p">[</span>{&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;lb_endpoints&#34;</span> <span class="err">:</span><span class="p">[</span>{&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s2">&#34;endpoint&#34;</span><span class="err">:</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;address&#34;</span><span class="err">:</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;socket_address&#34;</span><span class="err">:</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;address&#34;:&#34;localhost&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;port_value&#34;</span><span class="err">:</span><span class="m">9411</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;protocol&#34;:&#34;TCP&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}<span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;name&#34;:&#34;jaeger_collector&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;type&#34;:&#34;STRICT_DNS&#34;</span>&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span><span class="line"><span class="cl"><span class="k">EOF</span>&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.d/config-entries/proxy-defaults.hcl</span>
    </div>
</div>
<p>Tanto Consul como Nomad ofrecen una interfaz web para consultar el estado de los servicios y realizar tareas de forma más intuitiva que utilizando la línea de comandos. La interfaz de Consul se inicia en el puerto 8500 y la de Nomad en el puerto 4646 la dirección IP es la de la máquina virtual.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul_hu38ca79e125ea90732c98801666d94a1c_114012_2560x1440_fit_box_3.png" data-gallery="" title="Consul"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul_hu38ca79e125ea90732c98801666d94a1c_114012_300x200_fit_box_3.png" width="246" height="200" alt="Consul" title="Consul"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/nomad_hu9bbb57e399b7a2dffb0f8e1e395e2194_140021_2560x1440_fit_box_3.png" data-gallery="" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/nomad_hu9bbb57e399b7a2dffb0f8e1e395e2194_140021_300x200_fit_box_3.png" width="246" height="200" alt="Nomad" title="Nomad"  class="lozad "></a></p>
<figcaption>Consul y Nomad</figcaption>
</figure>
</div>
<h4 id="inicio-de-prometheus-y-jaeger">Inicio de Prometheus y Jaeger</h4>
<p>Prometheus es una base de datos temporal que permite guardar los datos de métricas y monitorización que generan las aplicaciones, los <em>sidecar proxy</em> generan métricas que Prometheus recolecta y Consul permite mostrar algunos datos básicos de métricas como número de peticiones, tasa de fallos de las peticiones y percentiles de latencia.</p>
<p>Jaeger es una herramienta de trazabilidad que permite correlacionar todas las peticiones que se realizan entre los servicios, de esta forma es posible relacionar la petición del servicio <em>frontend</em> con la petición del servicio <em>backend</em> y mostrar ambas al mismo tiempo como si estuvieran relacionadas, esta relación se establece mediante un <em>traceId</em> que identifica al conjunto de las peticiones individuales.</p>
<p>En el ejemplo Prometheus y Jaeger se inician como contenedores de Docker con los siguientes comandos. También se podrían haber iniciado como servicios de Nomad. La configuración de Prometheus es necesaria para recolectar las métricas de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm -p 9090:9090 --name prometheus --network host -v <span class="k">$(</span><span class="nb">pwd</span><span class="k">)</span>/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>prometheus.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">global</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">scrape_interval</span><span class="p">:</span><span class="w"> </span><span class="l">10s</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">scrape_configs</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">job_name</span><span class="p">:</span><span class="w"> </span><span class="l">consul</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">metrics_path</span><span class="p">:</span><span class="w"> </span><span class="l">/metrics</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">consul_sd_configs</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">server</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;localhost:8500&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">relabel_configs</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">source_labels</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">__meta_consul_tagged_address_lan</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">__meta_consul_service_metadata_prometheus_port</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">regex</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;(.*);(.*)&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">replacement</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${1}:${2}&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">target_label</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;__address__&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">action</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;replace&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>prometheus.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm --name jaeger <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="nv">COLLECTOR_ZIPKIN_HOST_PORT</span><span class="o">=</span>:9411 <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -e <span class="nv">COLLECTOR_OTLP_ENABLED</span><span class="o">=</span><span class="nb">true</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;6831:6831/udp&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;6832:6832/udp&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;5778:5778&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;16686:16686&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;4317:4317&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;4318:4318&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;14250:14250&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;14268:14268&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;14269:14269&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  -p <span class="s2">&#34;9411:9411&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>  jaegertracing/all-in-one:1.38</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>jaeger.sh</span>
    </div>
</div>
<p>Jaeger ofrece una interfaz web en el puerto 16686 para visualizar la trazabilidad de una petición y buscar una traza en concreto a través de su <em>traceId</em> y otros filtros.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/jaeger_hu33e6a5ea76c78b45612ee7e8a8666ca6_100673_2560x1440_fit_box_3.png" data-gallery="" title="Jaeger"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/jaeger_hu33e6a5ea76c78b45612ee7e8a8666ca6_100673_650x450_fit_box_3.png" width="553" height="450" alt="Jaeger" title="Jaeger"  class="lozad "></a></p>
<figcaption>Jaeger</figcaption>
</figure>
</div>
<h4 id="inicio-de-los-servicios-_frontend_-y-_backend_">Inicio de los servicios <em>frontend</em> y <em>backend</em></h4>
<p>La aplicación de ejemplo que muestra información de aves está compuesta de dos microservicios el <em>frontend</em> que muestra la información mediante una interfaz web y el servicio de <em>backend</em> que proporciona la información al <em>frontend</em>.</p>
<p>En el libro Consul: Up &amp; Running los servicios se inician utilizando únicamente Consul que es en lo que se centra el libro, pero en este ejemplo inicio estos servicios utilizando el orquestador Nomad, Nomad permite definir la misma configuración incluyendo la configuración para los <em>sidecar proxy</em> y se integra con Consul.</p>
<p>La definición del job de Nomad que engloba ambos servicios es la siguiente. Con esta definición declarativa Nomad se encarga de iniciarlos según la descripción indicada, del servicio de <em>backend</em> se inician dos instancias una la de la versión <em>v1</em> y otra de la <em>v2</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ nomad run birds.nomad&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-birds.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span><span class="lnt">135&#10;</span><span class="lnt">136&#10;</span><span class="lnt">137&#10;</span><span class="lnt">138&#10;</span><span class="lnt">139&#10;</span><span class="lnt">140&#10;</span><span class="lnt">141&#10;</span><span class="lnt">142&#10;</span><span class="lnt">143&#10;</span><span class="lnt">144&#10;</span><span class="lnt">145&#10;</span><span class="lnt">146&#10;</span><span class="lnt">147&#10;</span><span class="lnt">148&#10;</span><span class="lnt">149&#10;</span><span class="lnt">150&#10;</span><span class="lnt">151&#10;</span><span class="lnt">152&#10;</span><span class="lnt">153&#10;</span><span class="lnt">154&#10;</span><span class="lnt">155&#10;</span><span class="lnt">156&#10;</span><span class="lnt">157&#10;</span><span class="lnt">158&#10;</span><span class="lnt">159&#10;</span><span class="lnt">160&#10;</span><span class="lnt">161&#10;</span><span class="lnt">162&#10;</span><span class="lnt">163&#10;</span><span class="lnt">164&#10;</span><span class="lnt">165&#10;</span><span class="lnt">166&#10;</span><span class="lnt">167&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="k">job</span> <span class="s2">&#34;app-birds&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">  datacenters</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;dc1&#34;</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="k">group</span> <span class="s2">&#34;frontend&#34;</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">network</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  mode</span> <span class="o">=</span> <span class="s2">&#34;bridge&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">port</span> <span class="s2">&#34;http&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static</span> <span class="o">=</span> <span class="m">21000</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">21000</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">port</span> <span class="s2">&#34;envoy_metrics&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static</span> <span class="o">=</span> <span class="m">20200</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to</span> <span class="o">=</span> <span class="m">20200</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">service</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  name</span> <span class="o">=</span> <span class="s2">&#34;frontend&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  port</span> <span class="o">=</span> <span class="m">6060</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">meta</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prometheus_port</span> <span class="o">=</span> <span class="s2">&#34;20200&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">connect</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">sidecar_service</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port</span> <span class="o">=</span> <span class="m">21000</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">proxy</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">upstreams</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  destination_name</span> <span class="o">=</span> <span class="s2">&#34;backend&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  local_bind_port</span> <span class="o">=</span> <span class="m">6001</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  envoy_prometheus_bind_addr</span> <span class="o">=</span> <span class="s2">&#34;0.0.0.0:20200&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">task</span> <span class="s2">&#34;frontend&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">env</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BIND_ADDR</span><span class="o">=</span><span class="s2">&#34;0.0.0.0:6060&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BACKEND_URL</span><span class="o">=</span><span class="s2">&#34;http://localhost:6001&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TRACING_URL</span><span class="o">=</span><span class="s2">&#34;http://192.168.56.10:9411&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">resources</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cpu</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">350</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory</span> <span class="o">=</span> <span class="m">1024</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image</span> <span class="o">=</span> <span class="s2">&#34;ghcr.io/consul-up/birdwatcher-frontend:1.0.0&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory_hard_limit</span> <span class="o">=</span> <span class="s2">&#34;1024&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="k">group</span> <span class="s2">&#34;backend&#34;</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">network</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  mode</span> <span class="o">=</span> <span class="s2">&#34;bridge&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">port</span> <span class="s2">&#34;envoy_metrics&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static</span> <span class="o">=</span> <span class="m">20201</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to</span> <span class="o">=</span> <span class="m">20201</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">service</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  name</span> <span class="o">=</span> <span class="s2">&#34;backend&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  port</span> <span class="o">=</span> <span class="m">7000</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">meta</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prometheus_port</span> <span class="o">=</span> <span class="s2">&#34;20201&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;version</span> <span class="o">=</span> <span class="s2">&#34;v1&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">connect</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">sidecar_service</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port</span> <span class="o">=</span> <span class="m">22000</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">proxy</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  envoy_prometheus_bind_addr</span> <span class="o">=</span> <span class="s2">&#34;0.0.0.0:20201&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">task</span> <span class="s2">&#34;backend&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">env</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BIND_ADDR</span><span class="o">=</span><span class="s2">&#34;0.0.0.0:7000&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TRACING_URL</span><span class="o">=</span><span class="s2">&#34;http://192.168.56.10:9411&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">resources</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cpu</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">350</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory</span> <span class="o">=</span> <span class="m">1024</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image</span> <span class="o">=</span> <span class="s2">&#34;ghcr.io/consul-up/birdwatcher-backend:1.0.0&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory_hard_limit</span> <span class="o">=</span> <span class="s2">&#34;1024&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">  &#10;</span></span><span class="line"><span class="cl">  <span class="k">group</span> <span class="s2">&#34;backend-v2&#34;</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">network</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  mode</span> <span class="o">=</span> <span class="s2">&#34;bridge&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">port</span> <span class="s2">&#34;envoy_metrics&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static</span> <span class="o">=</span> <span class="m">20202</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to</span> <span class="o">=</span> <span class="m">20202</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">service</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  name</span> <span class="o">=</span> <span class="s2">&#34;backend&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  port</span> <span class="o">=</span> <span class="m">7001</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">meta</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prometheus_port</span> <span class="o">=</span> <span class="s2">&#34;20202&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;version</span> <span class="o">=</span> <span class="s2">&#34;v2&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">connect</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">sidecar_service</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port</span> <span class="o">=</span> <span class="m">22001</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">proxy</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  envoy_prometheus_bind_addr</span> <span class="o">=</span> <span class="s2">&#34;0.0.0.0:20202&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">task</span> <span class="s2">&#34;backend&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">env</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BIND_ADDR</span><span class="o">=</span><span class="s2">&#34;0.0.0.0:7001&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TRACING_URL</span><span class="o">=</span><span class="s2">&#34;http://192.168.56.10:9411&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VERSION</span><span class="o">=</span><span class="s2">&#34;v2&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">resources</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cpu</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">350</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory</span> <span class="o">=</span> <span class="m">1024</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image</span> <span class="o">=</span> <span class="s2">&#34;ghcr.io/consul-up/birdwatcher-backend:1.0.0&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory_hard_limit</span> <span class="o">=</span> <span class="s2">&#34;1024&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>birds.nomad</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/birds-v1-1_hu7f6d488877be14f859eccdaea4f48797_553771_2560x1440_fit_box_3.png" data-gallery="" title="Frontend con datos de la versión v1 del backend"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/birds-v1-1_hu7f6d488877be14f859eccdaea4f48797_553771_650x450_fit_box_3.png" width="553" height="450" alt="Frontend con datos de la versión v1 del backend" title="Frontend con datos de la versión v1 del backend"  class="lozad "></a></p>
<figcaption>Frontend con datos de la versión v1 del backend</figcaption>
</figure>
</div>
<h4 id="demostraciones-de-las-funcionalidades-del-_service-mesh_">Demostraciones de las funcionalidades del <em>service mesh</em></h4>
<p>A la aplicación se accede a través del servicio de <em>ingress-gateway</em> en el puerto 8080 de la máquina virtual. El servicio de <em>ingress-gateway</em> simplemente redirige el tráfico a la aplicación de <em>frontend</em>. Esta es la topología de comunicación para el servicio de <em>frontend</em> proporcionada por Consul, recibe peticiones del <em>ingress-gateway</em> y a su vez realiza peticiones al servicio de <em>backend</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul-topology-1_hu285775030b5ed09f425118c0971ef68e_151608_2560x1440_fit_box_3.png" data-gallery="" title="Toppología de un servicio y métricas en Consul"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul-topology-1_hu285775030b5ed09f425118c0971ef68e_151608_650x450_fit_box_3.png" width="554" height="450" alt="Toppología de un servicio y métricas en Consul" title="Toppología de un servicio y métricas en Consul"  class="lozad "></a></p>
<figcaption>Toppología de un servicio y métricas en Consul</figcaption>
</figure>
</div>
<p>Al arrancar Consul en modo desarrollo el comportamiento por defecto es permitir la comunicación entre los servicios, en una configuración en grado de producción por el contrario por defecto no se permite.</p>
<p>Creando una intención es posible denegar el tráfico entre el servicio de <em>frontend</em> al de <em>backend</em>. Las intenciones sirven para permitir o denegar el tráfico en un plano de servicio y no de direcciones IP y cortafuegos lo que lo hace mucho más sencillo de administrar, además de que cualquier cambio es posible hacerlo desde la interfaz web y se aplica de forma instantánea.</p>
<p>El tráfico entre los servicios a través de los <em>sidecar proxy</em> realizan la comunicación cifrada y utilizando autenticación mutua.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul-intentions_hu9f977235bd6c24c164cf620de1a0ce87_76378_2560x1440_fit_box_3.png" data-gallery="" title="Intenciones en Consul"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul-intentions_hu9f977235bd6c24c164cf620de1a0ce87_76378_650x450_fit_box_3.png" width="553" height="450" alt="Intenciones en Consul" title="Intenciones en Consul"  class="lozad "></a></p>
<figcaption>Intenciones en Consul</figcaption>
</figure>
</div>
<p>Consul exporta métricas en formato Prometheus que el servidor de Prometheus recolecta de forma periódica, esta información puede ser visualizada con una herramienta como Grafana. También el propio Consul permite obtener una métricas básicas del servicio como el número de peticiones que se están realizando, tasa de errores y latencia agrupadas por percentiles. Esta información es muy valiosa ya que permite monitorizar el estado del servicio.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul-topology-2_hu285775030b5ed09f425118c0971ef68e_151608_2560x1440_fit_box_3.png" data-gallery="" title="Métricas de Prometheus en Consul"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul-topology-2_hu285775030b5ed09f425118c0971ef68e_151608_650x450_fit_box_3.png" width="554" height="450" alt="Métricas de Prometheus en Consul" title="Métricas de Prometheus en Consul"  class="lozad "></a></p>
<figcaption>Métricas de Prometheus en Consul</figcaption>
</figure>
</div>
<p>Consul y los <em>sidecar proxy</em> de Envoy ofrecen soporte para trazabilidad con Zipkin junto con cierto soporte de los propios servicios la trazabilidad es enviada a un servidor como Jaeger que permite visualizar y relacionar las llamadas entre los diferentes servicios. Desde que entra por el <em>ingress-gateway</em> hasta que llega al <em>backend</em> pasando por el servicio de <em>frontend</em> asi como el tiempo empleado en cada uno de ellos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/jaeger_hu33e6a5ea76c78b45612ee7e8a8666ca6_100673_2560x1440_fit_box_3.png" data-gallery="" title="Trazabilidad en Jarger"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/jaeger_hu33e6a5ea76c78b45612ee7e8a8666ca6_100673_650x450_fit_box_3.png" width="553" height="450" alt="Trazabilidad en Jarger" title="Trazabilidad en Jarger"  class="lozad "></a></p>
<figcaption>Trazabilidad en Jarger</figcaption>
</figure>
</div>
<p>Consul conoce y monitoriza el estado de todos los servicios, a los servicios que presenten un mal funcionamiento no se les envía tráfico para evitar errores y tener resiliencia aún con fallos parciales. Consul realiza peticiones de estado de salud de forma activa de forma periódica generalmente cada pocos segundos, para comprobar el estado de cada servicio. En la consola de administración muestra el estado de cada uno de ellos que también es una valiosa información de observabilidad.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul_hu38ca79e125ea90732c98801666d94a1c_114012_2560x1440_fit_box_3.png" data-gallery="" title="Salud de los servicios en Consul"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/consul_hu38ca79e125ea90732c98801666d94a1c_114012_650x450_fit_box_3.png" width="554" height="450" alt="Salud de los servicios en Consul" title="Salud de los servicios en Consul"  class="lozad "></a></p>
<figcaption>Salud de los servicios en Consul</figcaption>
</figure>
</div>
<p>Como son los <em>sidecar proxy</em> los que hacen las peticiones de red entre servicios estos tienen capacidad de realizar reintentos y <em>timeouts</em>. Con los reintentos se mitigan los errores temporales y con los <em>timeouts</em> se evita que un servicio que esté tardando en responder afecte a otros servicios.</p>
<p>El control de tráfico es utilizado para diferentes funciones una de ellas para el despliegue de una nueva versión de forma controlada utilizando diferentes estrategias de despliegue. El servicio de <em>backend</em> tiene dos versiones la <em>v1</em> que da información de aves y la <em>v2</em> que da información de aves pero solo de la familia de canarios.</p>
<p>Con el control de tráfico es posible distribuir el número de peticiones que va a cada servicio en función de un peso o porcentaje. En una repartición al 50 la mitad de las peticiones van a la <em>v1</em> y la otra mitad a la <em>v2</em>, en el <em>frontend</em> se muestra la información del ave y la versión del servicio que la ha proporcionado. Cada vez que se cambia un archivo de configuración y se quiere aplicar hay que escribir la configuración en Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ consul config write consul.d/config-entries/backend-service-resolver.hcl&#10;</span></span><span class="line"><span class="cl">$ consul config write consul.d/config-entries/backend-service-splitter.hcl&#10;</span></span><span class="line"><span class="cl">$ consul config write consul.d/config-entries/backend-service-router.hcl</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul-traffic-control.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="n">Kind</span> <span class="o">=</span> <span class="s2">&#34;service-resolver&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Name</span> <span class="o">=</span> <span class="s2">&#34;backend&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Subsets</span> <span class="o">=</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">  v1</span> <span class="o">=</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;Filter</span> <span class="o">=</span><span class="n"> &#34;Service.Meta.version</span> <span class="o">==</span> <span class="k">v1</span><span class="err">&#34;</span>&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl"><span class="n">  v2</span> <span class="o">=</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;Filter</span> <span class="o">=</span><span class="n"> &#34;Service.Meta.version</span> <span class="o">==</span> <span class="k">v2</span><span class="err">&#34;</span>&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.d/config-entries/backend-service-resolver.hcl</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="n">Kind</span> <span class="o">=</span> <span class="s2">&#34;service-router&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Name</span> <span class="o">=</span> <span class="s2">&#34;backend&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">Routes</span> <span class="o">=</span> <span class="p">[</span>{&#10;</span></span><span class="line"><span class="cl"><span class="n">  Match</span> <span class="o">=</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;HTTP</span> <span class="o">=</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  QueryParam</span> <span class="o">=</span> <span class="p">[</span>{&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name</span> <span class="o">=</span> <span class="s2">&#34;canary&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exact</span> <span class="o">=</span> <span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }<span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">  Destination</span> <span class="o">=</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;ServiceSubset</span> <span class="o">=</span> <span class="s2">&#34;v2&#34;</span>&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">}<span class="p">]</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.d/config-entries/backend-service-router.hcl</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="n">Kind</span> <span class="o">=</span> <span class="s2">&#34;service-splitter&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">Name</span> <span class="o">=</span> <span class="s2">&#34;backend&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">Splits</span> <span class="o">=</span> <span class="p">[</span>{&#10;</span></span><span class="line"><span class="cl"><span class="n">  Weight</span> <span class="o">=</span> <span class="m">75</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">  ServiceSubset</span> <span class="o">=</span> <span class="s2">&#34;v1&#34;</span>&#10;</span></span><span class="line"><span class="cl">}<span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">{&#10;</span></span><span class="line"><span class="cl"><span class="n">  Weight</span> <span class="o">=</span> <span class="m">25</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">  ServiceSubset</span> <span class="o">=</span> <span class="s2">&#34;v2&#34;</span>&#10;</span></span><span class="line"><span class="cl">}<span class="p">]</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.d/config-entries/backend-service-splitter.hcl</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/birds-v1-2_hu7f6d488877be14f859eccdaea4f48797_553771_2560x1440_fit_box_3.png" data-gallery="" title="Frontend con datos de la versión v1 del backend"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/birds-v1-2_hu7f6d488877be14f859eccdaea4f48797_553771_300x200_fit_box_3.png" width="246" height="200" alt="Frontend con datos de la versión v1 del backend" title="Frontend con datos de la versión v1 del backend"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/birds-v2_huc7de3cba34bed59e33cf30928c44081b_548732_2560x1440_fit_box_3.png" data-gallery="" title="Frontend con datos de la versión v2 del backend"><img src="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/images/birds-v2_huc7de3cba34bed59e33cf30928c44081b_548732_300x200_fit_box_3.png" width="246" height="200" alt="Frontend con datos de la versión v2 del backend" title="Frontend con datos de la versión v2 del backend"  class="lozad "></a></p>
<figcaption>Frontend con datos de la versión v1 y v2 del backend</figcaption>
</figure>
</div>
<h3 id="libros-sobre-consul">Libros sobre Consul</h3>
<p>Este artículo es prácticamente un resumen del libro <a href="https://amzn.to/3F0SmjY">Consul: Up &amp; Running</a> que muestra y explica todo esto de forma más detallada y extensa además de mostrarlo usando Kubernetes. Está bien explicado y su ejemplo es muy fácil de seguir y probar además de muy didáctico para experimentar con los conceptos y funcionalidades comentadas de Consul. Otros libros sobre Consul y <em>service mesh</em> son <a href="https://amzn.to/3seULzU">Simplifying Service Management with Consul</a> y <a href="https://amzn.to/3DiIiS6">Mastering Service Mesh</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1098106148&amp;linkId=e909576440e5503d3c2fd4009a91dc61" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1800202628&amp;linkId=0d74c8c655bfda8294f77b83a43ea5eb" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1789615798&amp;linkId=bfdecdefc368de25311d26426c4f7bdd" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/ConsulServiceMesh">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/10/formas-de-monetizar-una-pagina-web-o-blog-y-altenativas-a-adsense/</id>
        <title>Formas de monetizar una página web o blog y altenativas a AdSense</title>
        <updated>2022-10-13T18:00:00+02:00</updated>
        <published>2022-10-13T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/10/formas-de-monetizar-una-pagina-web-o-blog-y-altenativas-a-adsense/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Si tenemos un blog o una página web probablemente requiera algún gasto como el dominio o el <em>hosting</em>. Pasado un tiempo si los artículos del blog son interesantes empezaremos a tener visitas que podemos monetizar para costear los gastos y seguramente algo más. En este artículo comento varias formas sencillas de monetizar una página web o blog que algunas no requieren mucho trabajo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Lo que más cuesta de tener una página web o blog es el tiempo que requiere escribir los artículos, editarlos, hacer un ejemplo de código si es el caso de un blog técnico como este y obtener las imágenes a incluir. Teniendo en cuenta todas las tareas que requiere cada artículo supone fácilmente un trabajo de entre 3 y 10 horas según mi experiencia. A pesar de todo solo es nuestro tiempo y muchos si seguimos escribiendo en un blog lo hacemos de buen gusto y nuestra propia motivación. Con las vistas que tengo en mi blog, otros blogs con mayor número de visitas los ingresos serán notablemente mayores, suficientes para costear los gastos del blog y algunos pequeños caprichos.</p>
<p>Sin embargo, otra parte es que quizá el <em>hosting</em> y tener un dominio para el blog nos cueste algo de dinero, el dominio alrededor de 12 € al año y el <em>hosting</em> 5 €, 10 € o algo más al mes con lo que al año serían unos 130 € aproximadamente. Que no es una cantidad elevada pero hay que añadirlo al tiempo de dedicación que requieren los artículos y que es un coste recurrente en caso de que el blog o página web se abandone por falta de tiempo de seguir escribiendo en él.</p>
<p>Teniendo en cuenta el esfuerzo que requiere a los creadores de contenido mantener un blog o página web o en el caso de los <em>youtubers</em> sus canales, en mi caso al menos no tengo ningún dilema por aprovechar a monetizar el contenido de varias de las formas que comento en el artículo. Lo que sí trato es que las diferentes formas de monetización no sean excesivamente molestas para el usuario al acceder al contenido ni sea el usuario el que pague por el contenido.</p>
<p>Con una cifra de páginas visitas respetable a partir de 25K al mes que se llega en más o menos tiempo dependiendo del buscador Google y la capacidad de fidelizar a los usuarios, hay varias formas de monetizar un blog o página web para sufragar los gastos que ocasionen, aunque aún monetizando probablemente no compensen el tiempo de dedicación al blog, simplemente permite un pequeño ingreso como compensación.</p>
<p>El tiempo de dedicación que requiere crear contenido en las diferentes formas y los gastos que genera el servicio si los tiene son dos motivos por los que se puede abandonar al cabo de unos meses o pocos años. Para minimizar el problema de los costes o conseguir otra motivación hay varias formas de obtener ingresos de forma sencilla.</p>
<p>De forma anual publico con detalle y de forma transparente las estadísticas de mi blog tanto en visitas como en ingresos por publicidad en los <a href="https://picodotdev.github.io/blog-bitix/series/hemeroteca/">artículos de hemeroteca</a> de final de año.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="formas-de-monetizar-una-página-o-blog">Formas de monetizar una página o blog</h3>
<p>En gran medida los ingresos por publicidad dependen del número de usuarios y páginas vistas del sitio web, si se quiere aumentar los ingresos una de las formas es tratar de aumentar las visitas del sitio web, con mejor contenido que resulte de interés para los usuarios, mejor SEO para que las páginas posicionan mejor en la lista de resultados de las páginas que atraigan mayor tráfico desde los buscadores y fidelizar a los usuarios para que vuelan en el caso de un blog proporcionando un <em>feed</em> de modo que los usuarios tengan una notificación de que hay un nuevo artículo.</p>
<p>Otro aspecto que afecta a las visitas e ingresos depende de la temática del sitio web o blog y la ubicación de los usuarios que acceden al sitio web, no es lo mismo un sitio web de contenido muy popular o un sitio web de nicho como uno tecnológico y de programación. Tampoco es lo mismo un público de habla inglés que uno en español, o por región no es lo mismo usuarios de Estados Unidos que de España y latinoamérica.</p>
<h4 id="publicidad-con-google-adsense">Publicidad con Google AdSense</h4>
<p>En mi caso un blog de temática tecnología y programación en español actualmente con unas 40K páginas vistas al mes tengo unos ingresos de 20 €/mes con <a href="https://www.google.com/adsense/">AdSense</a> (los primeros varios años no llegaba a 10 €/mes). No considero que sean muchas páginas vistas para un blog con ya casi 10 años publicando al menos un artículo a la semana nuevo y único. AdSense paga cuando se acumulan 70 € de ingresos y el pago se realiza mediante transferencia bancaria en el mes que se supera dicha cantidad de saldo acumulado.</p>
<p>Una de las ventajas de AdSense es que no requiere muchos esfuerzo para integrarlo y una vez hecho ningún mantenimiento, simplemente insertar un <em>script</em> para mostrar la publicidad y decidir las ubicaciones donde insertar la publicidad, a medida que aumentan las visitas los ingresos mensuales aumentan proporcionalmente con algunas variaciones mensuales o estacionales como periodos de vacaciones que hay menos tráfico.</p>
<p>Llegar a tener una cifra respetable de visitas no es fácil, cuesta mucho tiempo de dedicación a la página web o blog y sobre todo constancia y dedicación para escribir artículos al ritmo de al menos uno a la semana durante meses e incluso algún año. Este blog tiene ya más de una década, más de medio millar de artículos escritos (multiplicarlo por las horas de dedicación por artículo) y aún solo tengo esas 40K páginas vistas a fecha del 2022.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/google-adsense.svg" width="200" height="150" alt="Google AdSense" title="Google AdSense"  class="lozad "></p>
<figcaption>Google AdSense</figcaption>
</figure>
</div>
<h4 id="publicidad-con-videootv-alternativa-o-complemento-a-adsense">Publicidad con Videoo.tv, alternativa o complemento a AdSense</h4>
<p>La publicidad de AdSense suele ser un banner con una imagen estática o con algunas transiciones que se colocan en sitios específicos de la página o insertado entre diferentes secciones del contenido. La red publicitaria de <a href="https://videoo.tv/es?referente=379#sctf">Videoo.tv</a> consiste en un carrusel formado por las propias páginas del sitio web que en ocasiones muestran un vídeo en la parte inferior derecha del navegador de publicidad, salvo que el usuario no lo active sin sonido. La publicidad de Videoo.tv no es demasiado intrusiva ni molesta ya que el usuario la puede ignorar o cerrar la ventana publicitaria si no le interesa.</p>
<p>Al igual que la publicidad de AdSense los ingresos se generan por visualizaciones con lo que están relacionadas con del número de visitas, a más visitas lo normal es que haya más ingresos. Añadir la publicidad de Videoo.tv también es muy sencillo basta con insertar un script para mostrar la publicidad y elegir una ubicación para mostrar el carrusel, una vez hecho tampoco requiere mantenimiento adicional.</p>
<p>Desde que añadí Videoo.tv estoy muy satisfecho con su rendimiento de ingresos siendo mayor que AdSense llegando a los 30 €/mes que se suman a los propios de AdSense, al mostrar ambas publicidades quizá haya una pequeña competencia entre ambas pero no creo que sea mucha. Videoo.tv ofrece la posibilidad de pago mediante <a href="https://www.paypal.com/">PayPal</a> o mediante transferencia bancaria. Como ventaja es que pagan cuando se superan 10 € de saldo acumulado que con unos pocos miles de visitas se supera fácilmente, la desventaja es que lo generado un mes lo pagan cuatro meses después que no es demasiado inconveniente pasados esos cuatro meses iniciales cuando ya se empieza a cobrar todos los meses.</p>
<p>La gente de Videoo.tv se puso en contacto conmigo y me ofreció la posibilidad de añadir su publicidad, si te interesa añadir su publicidad ponte en contacto con ellos para decirles que estás interesado, y si esta información te ha resultado interesante y solicitar unirte a su publicidad te dejo mi <a href="https://videoo.tv/es?referente=379#sctf">enlace de afiliado de Video.tv</a>.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/videoo.png" width="200" height="150" alt="Videoo.tv" title="Videoo.tv"  class="lozad "></p>
<figcaption>Videoo.tv</figcaption>
</figure>
</div>
<h4 id="enlaces-de-afiliado-amazon-y-otras-páginas-de-comercio-electrónico">Enlaces de afiliado, Amazon y otras páginas de comercio electrónico</h4>
<p>Otra forma de ingresos es la publicidad de afiliado que se monetiza en vez de por visualización cuando los usuarios realizan una compra a través del enlace de afiliado, enlaces que hay que seleccionar en función de contenido del articulo para promocionar productos relacionados, los enlaces pueden ser de texto o en el caso de Amazon unos <em>widgets</em> que muestran una foto del producto y su precio.</p>
<p>na de las páginas más populares de comercio electrónico es <a href="https://www.amazon.es">Amazon</a> en la que es posible encontrar casi cualquier producto pero todas las páginas de comercio electrónico ofrecen una forma de afiliación incluyendo las páginas de <a href="https://www.elcorteingles.es/">El Corte Inglés</a>, <a href="https://www.mediamarkt.es/">MediaMarkt</a>, <a href="https://www.pccomponentes.com/">PC Componentes</a> y <a href="https://www.fnac.es/">FNAC</a> también con un amplio catálogo de productos tecnológicos.</p>
<p>Los ingresos por enlaces de afiliado tienen menos conversión y son menos estables que la publicidad por visualización pero dependiendo del importe de los productos vendidos a través de afiliación los ingresos pueden llegar a ser superiores en meses y épocas concretas como el <em>black friday</em> y las navidades. Cuando alguien hace una compra a través del enlace se obtiene una pequeña comisión, pueden ser libros, películas, aparatos electrónicos, ropa, viajes, hoteles, &hellip; cualquier artículo de una de las mayores y populares tiendas de comercio electrónico.</p>
<p>En mi caso los ingresos por los enlaces de <a href="https://afiliados.amazon.es">afiliado de Amazon</a> no superan en mucho los 70 € al año. Cualquier artículo cuyo contenido tenga productos relacionados es candidato a incluir enlaces de afiliado.</p>
<p>AdSense y los enlaces de afiliado de Amazon son dos formas sencillas y pasivas de monetizar un blog que dependen del número de páginas vistas, a mayor número de páginas vistas los ingresos serán mayores en proporción similar. Para aumentar las vistas en un blog no hay secretos y son escribir cuanto más contenido mejor y contenido de calidad que les interese a los lectores para atraer visitas de los buscadores, suscriptores de las herramientas de sindicación y de las redes sociales en las que se compartan los artículos.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/amazon.svg" width="200" height="150" alt="Amazon" title="Amazon"  class="lozad "></p>
<figcaption>Amazon</figcaption>
</figure>
</div>
<h4 id="artículos-patrocinados">Artículos patrocinados</h4>
<p>Es sorprendente pero no son pocas las personas que se ponen en contacto interesadas en insertar algún tipo de publicidad en un sitio web existente bien posicionado y con visitas. Simplemente hay que tener un poco de cuidado ya que algunos en cuanto se les menciona que la colaboración tiene un coste pierden el interés, pero más aún hay que tener cuidado con algunos estafadores que al realizar el pago de por medio intentan hacer algún ataque de <em>phishing</em> para hacerse con las credenciales bancarias o de PayPal.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/11/ejemplo-de-un-potencial-ataque-informatico-de-phishing-el-caso-de-el-gatico-biever/">Ejemplo de un potencial ataque informático de phishing, El caso de El Gatico Biever</a></li>
</ul>
<h4 id="inserción-de-enlaces-y-artículos-patrocinados">Inserción de enlaces y artículos patrocinados</h4>
<p>Otra forma de monetizar son la de aceptar artículos patrocinados por los que se suele pagar un precio de entre 50 € y 150 € aproximadamente por artículo con al menos unas 500 y 800 palabras de contenido, dependiendo de las visitas de nuestro blog, posicionamiento en los buscadores y de lo que valoremos nuestro tiempo para redactar y publicar el artículo. En algunos casos es el propio interesado en ofrecer el contenido del artículo con lo que simplemente requiere publicarlo.</p>
<p>Dos de las plataformas que ponen en contacto anunciantes y editores para recibir propuestas de artículos patrocinados son <a href="https://www.publisuites.com/aff/b6b76b095907d91e588d1c714c4a39ad9735c8cf/">Publisuites</a> y <a href="https://coobis.com/">Coobis</a>. Es recomendable que el artículo lo escribamos nosotros para que los buscadores no lo detecten como contenido duplicado y nos penalicen a nivel de <abbr title="Search Engine Optimization">SEO</abbr>. En cualquier caso cuando recibimos una propuesta no tenemos la obligación de escribir el artículo si su temática no corresponde con la línea editorial de nuestro blog o por cualquier otro motivo si por ejemplo en ese momento no tenemos tiempo, aunque sí deberemos dar una respuesta en un plazo de unos días aunque sea negativa.</p>
<p>La forma de pago recomendable para estos casos es a través de PayPal o transferencia bancaria ya que va a ser puntual y seguramente de alguien desconocido del que solo se tiene su cuenta de correo electrónico, ni los pagos superarán una cantidad elevada.</p>
<p>Por otra parte tampoco conviene abusar de la publicidad o artículos patrocinados, no ha de ser excesiva con muchos <em>banners</em> de publicidad, tampoco molestar con ventanas emergentes ni que impidan leer correctamente el contenido de la página y los artículos patrocinados deberían ser de interés para el lector según la temática del blog y para ser honestos con un aviso de que el artículo está patrocinado aunque la opinión sea propia y sincera.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/02/servidores-cloud-vps-de-cloudingio-para-hospedar-blogs-y-paginas-web/">Servidores Cloud VPS de Clouding.io para hospedar blogs y páginas web</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/">Aprovisionar un servidor en la infraestructura cloud de Clouding con Ubuntu y Nginx usando Ansible y protocolo seguro HTTPS con Let&rsquo;s Encrypt</a></li>
</ul>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/clouding.svg" width="200" height="150" alt="Clouding.io" title="Clouding.io"  class="lozad "></p>
<figcaption>Marcas patrocinadoras de artículos</figcaption>
</figure>
</div>
<h4 id="análisis-de-productos">Análisis de productos</h4>
<p>Dependiendo de la temática del sitio web o blog al cabo del tiempo quizá haya una marca comercial interesada en publicar un artículo acerca de uno de sus productos. La colaboración en estos casos consiste en redactar un artículo analizando uno de sus productos para los que la marca envía sin coste el producto a analizar de modo que se puede probar y emitir una opinión y hacer un análisis propio y honesto.</p>
<p>Una vez escrito el artículo uno se puede quedar en propiedad el artículo para uso personal o para venderlo a través de alguna página de venta de segunda mano y esta es la forma de pago. Dado que una marca suele tener varios artículos es muy posible que la colaboración consista en varios artículos de cada uno de sus productos por separado. Con esta forma de monetización ya he escrito varios artículos acerca de teclados mecánicos, micrófono e interfaz de audio de las marcas <a href="https://kmovetech.com/">KEMOVE</a> y <a href="https://www.maono.com">MAONO</a> que son los siguientes.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/01/desempaquetado-y-analisis-de-teclado-mecanico-compacto-dierya-dk61e/">Desempaquetado y análisis de teclado mecánico compacto DIERYA DK61E</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/03/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-dierya-dk63/">Desempaquetado y análisis de teclado mecánico compacto e inalámbrico DIERYA DK63</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/">Desempaquetado y análisis de teclado mecánico compacto e inalámbrico KEMOVE DK61</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-de-la-funda-de-teclado-tamano-60-kemove/">Desempaquetado de la funda de teclado 60% KEMOVE</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/07/desempaquetado-y-analisis-del-microfono-maono-hd300t/">Desempaquetado y análisis del micrófono MAONO HD300T</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/08/desempaquetado-y-analisis-de-la-interfaz-de-audio-maonocaster-e2/">Desempaquetado y análisis de la interfaz de audio Maonocaster E2</a></li>
</ul>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/kemove.jpg" width="200" height="150" alt="KEMOVE" title="KEMOVE"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/maono.png" width="200" height="150" alt="MAONO" title="MAONO"  class="lozad "></p>
<figcaption>Marcas patrocinadoras de análisis de productos</figcaption>
</figure>
</div>
<h4 id="servicios-asociados-al-contenido">Servicios asociados al contenido</h4>
<p>Algunos usuarios quizá no monetizan un sitio web o blog directamente con publicidad o con patrocinios pero lo hacen de forma indirecta a través de cursos de formación o libros relacionados con el contenido, en los que ya un usuario paga por ese curso o libro u otra forma de servicio.</p>
<h4 id="donaciones">Donaciones</h4>
<p>Otra forma de ingresos son donaciones aportadas por los usuarios del sitio web. En mi caso por la temática del blog no considero esta forma de ingresos y prefiero varias de las anteriores. En el caso de el <a href="https://github.com/picodotdev/alis/">script para instalar Arch Linux</a> la donación si es una forma de ingresos que consideraría sobre todo para aquellos usuarios que lo usan para su computadora de trabajo pero PayPal al hacer el pago requiere mostrar el nombre real y <a href="https://github.com/sponsors">GitHub Sponsors</a> requiere rellenar unos formularios. En cualquier caso no considero que sea muy elevada y estimo que sería muy irregular.</p>
<h3 id="forma-de-cobro">Forma de cobro</h3>
<p>En el caso de un intercambio monetario salvo AdSense y los enlaces de afiliado de Amazon en vez de la transferencia bancaria la forma más recomendable para la forma de pago es PayPal, no conviene dar el número de cuenta bancaria a nadie que se haya puesto en contacto mediante correo electrónico ni sea de una empresa reconocida.</p>
<p>Aunque PayPal aplica una gran comisión que llega al 4% del importe recibido es más seguro que dar el número de cuenta para recibir el dinero mediante transferencia bancaria sobre todo para los artículos patrocinados que son personas completamente desconocidas y puntuales.</p>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/</id>
        <title>Cómo descargar vídeos, música o audio de YouTube y otras webs</title>
        <updated>2022-10-05T21:00:00+02:00</updated>
        <published>2022-10-05T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En caso de buscar un vídeo o música es probable que esté subido en YouTube, en el caso de las canciones muchas incluyen el vídeo original que acompaña la canción y de artistas de varias décadas anteriores al inicio de YouTube. Además de contenido antiguo hay muchas personas dedicadas a crear contenido nuevo ya sea como <em>videoblogs</em> o <em>podcasts</em>. Con todo el contenido disponible en YouTube descargar un vídeo o solo audio de un vídeo es algo deseado pero que no permite YouTube directamente pero hay aplicaciones que permiten descargar el contenido de YouTube.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/youtube.svg" width="400" height="89" alt="YouTube" title="YouTube"  class=""></p>
</div>
<p>El servicio de vídeo <a href="https://www.youtube.com/">YouTube</a> se ha convertido en la plataforma mayoritaria para compartir contenido en formato de vídeo. Prácticamente cualquier contenido de vídeo se puede encontrar en YouTube, incluso vídeos antiguos anteriores a la existencia de YouTube como una buena colección de música.</p>
<p>Algo que no facilita YouTube es descargar su contenido para consumirlo fuera de línea lo que impide a algunos usuarios consumir su contenido según sus necesidades en vez de las que solo permite YouTube.</p>
<p>Algunos usuarios desean guardar sus canciones favoritas y escucharlas fuera de línea como por ejemplo en un <em>smartphone</em> sin necesidad de conexión a internet en cualquier lugar que se disponga del <em>smartphone</em>. También para evitar buena cantidad de publicidad que inserta YouTube que son los ingresos que percibe el servicio y los creadores de contenido pero que dada la cantidad de publicidad resulta molesta para los usuarios.</p>
<p>Hay algunas aplicaciones que permiten descargar los vídeos de páginas como YouTube, aplicaciones tanto con interfaz gráfica como de línea de comandos.</p>
<p>Una vez descargado el vídeo o el audio quizá dependiendo del dispositivo donde se pretenda reproducir quizá haya que cambiar el formato de del archivo o se desee extraer únicamente el audio.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/cambiar-el-formato-de-archivos-de-video-o-peliculas-en-gnu-linux/">Cambiar el formato de archivos de vídeo o películas en GNU/Linux</a></li>
</ul>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="aplicaciones-para-descargar-vídeos-de-youtube">Aplicaciones para descargar vídeos de YouTube</h3>
<p>Una aplicación con interfaz gráfica en principio es muy intuitiva de usar y no requiere tanto conocimiento inicial para usarla, por el otro lado una aplicación con interfaz de línea de comandos aunque requiere conocer las opciones del comando para realizar la tarea deseada una vez conocido es más rápido conseguir lo que se desea que con una aplicación de interfaz gráfica, para conocer el comando exacto y las opciones se suelen proporcionar ejemplos de uso.</p>
<p>Los gestores de descargas son simplemente una de las categorías de programas que un usuario puede considerar de utilidad. Para cada tarea o necesidad de un usuario es casi seguro que exista un programa específico.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/listado-de-programas-esenciales-segun-categoria-para-gnu-linux/">Listado de programas esenciales según categoría para GNU/Linux</a></li>
<li><a href="https://wiki.archlinux.org/title/List_of_applications#Download_managers">Download managers</a></li>
</ul>
<h4 id="con-interfaz-gráfica">Con interfaz gráfica</h4>
<p>Un gestor de descargas, permite gestionar las descargas de cualquier fuente lo único necesario es el enlace del contenido a descargar. Algunos gestores de descargas entre las fuentes de descarga que permite está YouTube y es posible descargar un vídeo como únicamente el audio o la música.</p>
<p>Una aplicación específica para descargar vídeos y audio de YouTube eligiendo el formato deseado y en diferentes calidades que ofrece YouTube es <a href="https://clipgrab.de/es">ClipGrab</a>, un gestor de descargas que soporta descargar vídeos de YouTube o el audio de los vídeos es <a href="https://beta.jdownloader.org/">JDownloader</a>. ClipGrab solo permite descargar de YouTube y JDownloader permite descargar vídeos de otras muchas páginas. Las dos aplicaciones tienen versiones para los sistemas operativos <a href="https://www.microsoft.com/es-es/windows/">Windows</a>, <a href="https://www.apple.com/macos/">macOS</a> así como <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/clipgrab_huf9459247fc44dbb45c99219b58e1c9c4_261222_2560x1440_fit_box_3.png" data-gallery="" title="ClipGrab"><img src="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/clipgrab_huf9459247fc44dbb45c99219b58e1c9c4_261222_300x250_fit_box_3.png" width="300" height="219" alt="ClipGrab" title="ClipGrab"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/jdownloader_hu20b3ba12ba1cfce073fb8e953e94b513_73059_2560x1440_fit_box_3.png" data-gallery="" title="JDownloader"><img src="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/jdownloader_hu20b3ba12ba1cfce073fb8e953e94b513_73059_300x250_fit_box_3.png" width="300" height="218" alt="JDownloader" title="JDownloader"  class="lozad "></a></p>
<figcaption>ClipGrab y JDownloader</figcaption>
</figure>
</div>
<p>Este es un vídeo descargado de YouTube con un corto de animación de los varios que ha creado la fundación <a href="https://www.blender.org/">Blender</a> que desarrolla el programa de animación 3D y reproducido con aun aplicación reproductor instalado en la computadora.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/spring_hu034d4698824260e9b33e342b2f0c52ae_1754294_2560x1440_fit_box_3.png" data-gallery="" title="Spring"><img src="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/spring_hu034d4698824260e9b33e342b2f0c52ae_1754294_300x250_fit_box_3.png" width="300" height="165" alt="Spring" title="Spring"  class="lozad "></a></p>
<figcaption>Spring</figcaption>
</figure>
</div>
<h4 id="de-línea-de-comandos">De línea de comandos</h4>
<p>La línea de comandos es más rápida conociendo el comando y hace fácil la descarga. La opción más conocida es <a href="https://github.com/ytdl-org/youtube-dl/">youtube-dl</a> y un <em>fork</em> de esta es <a href="https://github.com/yt-dlp/yt-dlp">yt-dlp</a> que incorpora algunas características adicionales.</p>
<p>Dado que ambos programas están relacionados las opciones del comando son las mismas. Para descargar un vídeo y solo el audio se utiliza el siguiente comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ youtube-dl -f <span class="s1">&#39;bestvideo,bestaudio&#39;</span> -o <span class="s1">&#39;%(title)s.f%(format_id)s.%(ext)s&#39;</span> <span class="o">[</span>URL<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">$ youtube-dl -f <span class="s1">&#39;bestvideo&#39;</span> -o <span class="s1">&#39;%(title)s.f%(format_id)s.%(ext)s&#39;</span> <span class="s2">&#34;https://www.youtube.com/watch?v=NJe4rEyfQ3g&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ youtube-dl -f <span class="s1">&#39;bestaudio&#39;</span> -o <span class="s1">&#39;%(title)s.f%(format_id)s.%(ext)s&#39;</span> <span class="s2">&#34;https://www.youtube.com/watch?v=NJe4rEyfQ3g&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>youtube-dl.sh</span>
    </div>
</div>
<p>El comando youtube-dl permite otras muchas opciones como la descarga de una imagen y otras opciones de selección para la calidad del vídeo tanto en resolución como en tamaño de archivo descargado así como variables para nombrar el archivo descargado, más opciones para casos de uso avanzados que las aplicaciones más sencillas pero más fáciles de usar con interfaz gráfica.</p>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/09/novedades-de-java-19/</id>
        <title>Novedades de Java 19</title>
        <updated>2022-09-28T20:00:00+02:00</updated>
        <published>2022-09-28T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/09/novedades-de-java-19/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las versiones de Java más confiables por su soporte extendido son las LTS, las no LTS dan la oportunidad de probar e ir adaptándose a las novedades que se publicarán de forma definitiva en las LTS. Por ello las empresas seguramente prefieran ir cambiando de versiones de LTS a LTS, los usuarios y desarrolladores a nivel individual o las empresas que alguna novedad supone un cambio importante opten por usar una no LTS. La versión de Java 19 es una no LTS pero incorpora una novedad muy importante aún en vista previa, los <em>virtual threads</em> que permitirán a las aplicaciones pasar de usar miles a millones de <em>threads</em> y usar programación estructurada más sencilla en vez de programación asíncrona o concurrente para resolver problemas de concurrencia.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una nueva versión de Java que llega ya al número 19, no es una versión LTS con lo que carece de soporte extendido pero que junto con Java 18 incorpora varias novedades desde la última versión LTS alguna muy destacada y esperada que va a suponer un cambio de paradigma en la programación concurrente.</p>
<p>Las novedades no son muy numerosas ya que en el periodo de seis meses da tiempo a ir incorporando algunas que ya se publican aunque sea en modo de vista previa y aunque pueden cambiar cuando lleguen a la versión final permite a aquellos aventurados experimentar y adaptarse a ellas en futuras versiones e incluso utilizarlas si así lo desean en su versión de vista previa.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="introducción">Introducción</h3>
<p>En esta nueva versión de Java las novedades sin contar las incorporadas en vista previa son muy pocas la única es el <em>port</em> a la arquitectura de procesadores RISC-V que aunque es una prometedora arquitectura de procesadores con la interesante propiedad de no tener costes de licencias por implementarla que probablemente vaya ganando cuota de mercado a día de hoy es muy minoritaria, tanto en el escritorio como en los servidores.</p>
<p>Sin embargo, en las características en vista previa hay una muy destacada y relevante que son los <em>threads</em> virtuales que supone un cambio de paradigma en la programación concurrente que proporciona las ventajas de la programación estructurada sin la complejidad de la programación asíncrona o concurrente.</p>
<p>Como complemento a los <em>threads</em> virtuales hay otra ayuda con la concurrencia estructurada, dado que los <em>threads</em> virtuales van a permitir crear varios órdenes de magnitud de <em>threads</em> de lo que era posible hasta ahora, de pasar a únicamente utilizar miles de <em>threads</em> a poder utilizar millones de <em>threads</em>.</p>
<p>Otras novedades en vista previa son actualizaciones a características en vistas previas anteriores como los <em>Record Patterns</em>, <em>Foreign Function &amp; Memory API</em> para integración de código nativo, el <em>Vector API</em> para aprovechar las instrucciones vectoriales de los procesadores, <em>Pattern Matching for switch</em> y <em>Structured Concurrency</em> que está relacionado con los <em>threads virtuales</em> y lo complementa.</p>
<ul>
<li><a href="https://openjdk.java.net/projects/jdk/19/">Características de Java 19</a></li>
<li><a href="https://jdk.java.net/19/release-notes">Notas de publicación de Java 19</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/19/">Documentación de Java 19</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/19/docs/api/index.html">Documentación Javadoc de Java 19</a></li>
</ul>
<p>Las mejoras incluidas en esta versión son:</p>
<ul>
<li>405: <a href="https://openjdk.org/jeps/405">Record Patterns (Preview)</a></li>
<li>422: <a href="https://openjdk.org/jeps/422">Linux/RISC-V Port</a></li>
<li>424: <a href="https://openjdk.org/jeps/424">Foreign Function &amp; Memory API (Preview)</a></li>
<li>425: <a href="https://openjdk.org/jeps/425">Virtual Threads (Preview)</a></li>
<li>426: <a href="https://openjdk.org/jeps/426">Vector API (Fourth Incubator)</a></li>
<li>427: <a href="https://openjdk.org/jeps/427">Pattern Matching for switch (Third Preview)</a></li>
<li>428: <a href="https://openjdk.org/jeps/428">Structured Concurrency (Incubator)</a></li>
</ul>
<p>Artículos relacionados:</p>
<ul>
<li><a href="https://inside.java/2022/09/20/sip066/">JDK 19 Release - Sip of Java</a></li>
<li><a href="https://inside.java/2022/09/20/the-arrival-of-java-19/">The Arrival of Java 19!</a></li>
<li><a href="https://inside.java/2022/09/20/podcast-026/">Episode 26 &ldquo;Java 19 is Here!&rdquo;</a></li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/vvXmO2ZMGsk" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="nuevas-características">Nuevas características</h3>
<h4 id="linuxrisc-v-port">Linux/RISC-V Port</h4>
<p>RISC-V es una es una arquitectura con un conjunto de instrucciones de código abierto, además de un diseño eficiente y moderno no requiere pagar licencias que lo hace interesante para muchas empresas y fabricantes al contrario de otras arquitecturas como ARM que requiere pagar licencias. RISC-V ya es soportado por varias herramientas de desarrollo importantes y hay una disponibilidad de hardware que va en aumento. Por estos motivos, una versión que permite usar Java en procesadores RISC-V es valiosa.</p>
<p>El <em>port</em> de Java para RISC-V incluye el intérprete el compilador JIT para el cliente y servidor y una implementación para todos los recolectores de basura soportados incluyendo ZGC y Shenandoah.</p>
<h3 id="nuevas-características-en-vista-previa">Nuevas características en vista previa</h3>
<h4 id="_record-patterns_"><em>Record Patterns</em></h4>
<p>El <em>patern matching</em> permite eliminar algunos <em>cast</em> explícitos, esto ya ha sido aplicado en expresiones como condiciones. Ahora el <em>pattern matching</em> se aplica a los <em>records</em> que permite una forma de desestructurar este tipo de clases para obtener los elementos de <em>record</em> en variables disponibles en el ámbito de uso de la expresión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">record</span> <span class="nf">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">static</span> <span class="kt">void</span> <span class="nf">printSum</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">Point</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">x</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">y</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pattern-matching.java</span>
    </div>
</div>
<p>Al escribir la expresión de <em>pattern matching</em> para un <em>record</em> permite al mismo tiempo desestructurar los elementos y extraerlos a variables. La expresión resultante para desestructurar los elementos es muy verbosa pero hace más simple el acceso posterior a las variables de <em>record</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">printSum</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="nf">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>record-patterns.java</span>
    </div>
</div>
<h4 id="_foreign-function--memory-api_"><em>Foreign Function &amp; Memory API</em></h4>
<p>Esta característica facilita el uso del código nativo de forma eficiente y más sencilla que anteriormente con JNI, en esta nueva vista previa es un refinamiento de las versione anteriores incorporando los comentarios y sugerencias desde la última vista previa.</p>
<p>Para muchos desarrolladores esta característica es irrelevante o solo se benefician de forma indirecta pero para otros que trabajan con software embebido o que desarrollan librerías Java que hacen uso de código nativo implementado en otros lenguajes supone una gran mejora.</p>
<h4 id="_virtual-threads_"><em>Virtual Threads</em></h4>
<p>Un sistema operativo como Linux solo es capaz de ofrecer a las aplicaciones una cantidad limitada de <em>threads</em> ya que su consumo de recursos es elevado en el sistema y el cambio de contexto de unos a otros penaliza el rendimiento.</p>
<p>Para solventar esta limitación Java implementa dentro del JVM los <em>threads</em> virtuales que son más ligeros en recursos que los <em>threads</em> del sistema operativo y el cambio de contexto de uno a otro no supone tanta penalización en el rendimiento. Los <em>threads</em> virtuales permiten a las aplicaciones poder usar un mayor cantidad de hilos pasando de unos miles a varios millones sin ningún problema. Para las aplicaciones que usan gran cantidad de hilos como las de servidor de un hilo por petición permite escalar a un número significativamente mayor de peticiones y un mejor rendimiento.</p>
<p>Adicionalmente, una de las mejoras cosas es que el uso de los <em>threads</em> virtuales no requiere una nueva API ya que la implementación la realiza usando la misma clase <a href="https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/lang/Thread.html">Thread</a> que ha existido siempre en Java desde las versión 1.0 de Java.</p>
<p>La solución habitual a la escasez de <em>threads</em> y la limitación del sistema operativo para aprovechar el hardware ha sido la programación asíncrona, está sin embargo es más difícil de desarrollar, entender y depurar. Otra opción de algunos lenguajes han sido las <em>coroutines</em> como en <a href="https://kotlinlang.org/">Kotlin</a> y otros lenguajes.</p>
<p>Los <em>threads</em> virtuales y la concurrencia estructurada promete la simplicidad de la programación estructurada con la ventaja de proporcionar un rendimiento similar que la programación asíncrona.</p>
<ul>
<li><a href="https://cr.openjdk.java.net/~rpressler/loom/Loom-Proposal.html">Project Loom: Fibers and Continuations for the Java Virtual Machine</a></li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/6dpHdo-UnCg" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/I9hQvJO39uM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="_structured-concurrency_"><em>Structured Concurrency</em></h4>
<p>Los <em>threads</em> virtuales permiten dedicar un <em>thread</em> a cada tarea con lo que se prevé que las aplicaciones aprovechen poder utilizar una mayor número de <em>threads</em>, pero gestionarlos sigue siendo un problema ya que los hilos siguen siendo independientes y su depuración complicada.</p>
<p>Si los <em>threads</em> virtuales permiten utilizar <em>threads</em> en abundancia la concurrencia estructurada asegura que los <em>threads</em> estén relacionados correctamente y de forma robusta además de mostrar los <em>threads</em> en herramientas de depuración de forma que sean entendidos por los desarrolladores.</p>
<p>La clase <a href="https://docs.oracle.com/en/java/javase/19/docs/api//jdk.incubator.concurrent/jdk/incubator/concurrent/StructuredTaskScope.html">StructuredTaskScope</a> permite estructurar una tarea ejecutada en varios hilos, tanto en los casos en que una tarea se divide en varias operaciones como en los casos de que por cada petición entrante se emplea un hilo como en un servidor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Response</span> <span class="nf">handle</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">ExecutionException</span><span class="o">,</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">var</span> <span class="n">scope</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StructuredTaskScope</span><span class="o">.</span><span class="na">ShutdownOnFailure</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Future</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">user</span> <span class="o">=</span> <span class="n">scope</span><span class="o">.</span><span class="na">fork</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">findUser</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Future</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">order</span> <span class="o">=</span> <span class="n">scope</span><span class="o">.</span><span class="na">fork</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">fetchOrder</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">scope</span><span class="o">.</span><span class="na">join</span><span class="o">();</span> <span class="c1">// Join both forks&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">scope</span><span class="o">.</span><span class="na">throwIfFailed</span><span class="o">();</span> <span class="c1">// ... and propagate errors&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Here, both forks have succeeded, so compose their results&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">Response</span><span class="o">(</span><span class="n">user</span><span class="o">.</span><span class="na">resultNow</span><span class="o">(),</span> <span class="n">order</span><span class="o">.</span><span class="na">resultNow</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>structured-concurrency-1.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">serve</span><span class="o">(</span><span class="n">ServerSocket</span> <span class="n">serverSocket</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">var</span> <span class="n">scope</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StructuredTaskScope</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">&gt;())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">var</span> <span class="n">socket</span> <span class="o">=</span> <span class="n">serverSocket</span><span class="o">.</span><span class="na">accept</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">scope</span><span class="o">.</span><span class="na">fork</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">handle</span><span class="o">(</span><span class="n">socket</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// If there&#39;s been an error or we&#39;re interrupted, we stop accepting&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">scope</span><span class="o">.</span><span class="na">shutdown</span><span class="o">();</span>  <span class="c1">// Close all active connections&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">scope</span><span class="o">.</span><span class="na">join</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>structured-concurrency-2.java</span>
    </div>
</div>
<h4 id="_pattern-matching-for-switch_"><em>Pattern Matching for switch</em></h4>
<p>El <em>pattern matching</em> en las expresiones <em>switch</em> han sido mejorados en esta nueva vista previa.</p>
<ul>
<li>Las <em>guard patterns</em> son reemplazados con cláusulas <em>when</em> en los bloques <em>switch</em>.</li>
<li>La semántica del <em>switch</em> en los casos en que es <em>null</em> la expresión se ajusta a la semántica existente que ha existido en los <em>switch</em> lanzando un <em>NullPointerException</em>.</li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">static</span> <span class="kt">void</span> <span class="nf">testTriangle</span><span class="o">(</span><span class="n">Shape</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">switch</span> <span class="o">(</span><span class="n">s</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="kc">null</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="k">break</span><span class="o">;</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="n">Triangle</span> <span class="n">t</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">when</span> <span class="n">t</span><span class="o">.</span><span class="na">calculateArea</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">100</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Large triangle&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;A shape, possibly a small triangle&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pattern-matching-switch.java</span>
    </div>
</div>
<p>Por otro lado todo, ahora en los casos de un <em>switch</em> es posible usar el label <em>null</em> para seleccionar la rama cuando la expresión del <em>switch</em> toma un valor nulo, el comportamiento anterior era que si la expresión <em>switch</em> era <em>null</em> producía un <em>NullPointerException</em> lo que requería utilizar un <em>guard clause</em> antes del <em>switch</em> para evitar el NPE.</p>
<p>Desde Java 16 los bloques switch permiten dos estilos de grupos uno mediante etiquetas con <em>:</em> y otro de una única consecuencia con <em>-&gt;</em> donde la continuación en cascada no es posible. En el primer caso los múltiples labels se escriben <code>case l1: case l2:</code> cuando en el estilo del segundo se escriben <code>case l1, l2 -&gt;</code>.</p>
<p>Soportar la etiqueta <em>null</em> permite ahora escribir un switch de la siguiente forma.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">Object</span> <span class="n">o</span> <span class="o">=</span> <span class="o">...;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">switch</span> <span class="o">(</span><span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="kc">null</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="n">String</span> <span class="n">s</span><span class="o">:</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;String, including null&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>switch-null-label.java</span>
    </div>
</div>
<h3 id="otras-novedades">Otras novedades</h3>
<h4 id="interpolación-de-cadenas-_string-templates_">Interpolación de cadenas (<em>String Templates</em>)</h4>
<p>En un futuro es posible que Java incorpore al lenguaje la interpolación de cadenas con la <a href="https://openjdk.org/jeps/430">JEP 430: String Templates</a>. Facilitará la construcción de cadenas con una mezcla de cadenas y valores de variables que produzcan la cadena resultante deseada. La construcción de cadenas es algo muy utilizado en todos los programas con lo que la interpolación de cadenas será una mejora en la la construcción de cadenas que hace el código más legible.</p>
<p>Un problema de la interpolación de cadenas es que en ciertas cadenas hay posibilidad de crear un problema de seguridad y por ello es peligrosa, una forma de este problema es el <em>SQL injection</em>. La interpolación de cadenas que se incorporará en Java solucionará al mismo tiempo que la legibilidad del código los problemas que pueden ocurrir con el <em>SQL injection</em> creando una clase <em>TemplateString</em> para las cadenas con interpolación y unos <em>policies</em> específicos para cada lenguaje como SQL o JSON según el formato resultante que garantizará una cadena resultante bien formada y evitará el problema de <em>injection</em>.</p>
<p>Estos son algunos ejemplos que se están evaluando para implementar la interpolación de cadenas. El <em>STR</em> sería el <em>policy</em> que determina como convertir el <a href="https://cr.openjdk.java.net/~jlaskey/templates/docs/api/java.base/java/lang/template/TemplatedString.html">TemplateString</a> en un <em>String</em>. Además será posible implementar nuevos <em>policies</em> haciendo una implementación de la interfaz funcional <a href="https://cr.openjdk.java.net/~jlaskey/templates/docs/api/java.base/java/lang/template/TemplateProcessor.html">TemplateProcessor</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Joan&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">TemplatedString</span> <span class="n">ts</span> <span class="o">=</span> <span class="s">&#34;My name is \{name}&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Joan&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">String</span> <span class="n">info</span> <span class="o">=</span> <span class="n">STR</span><span class="o">.</span><span class="s">&#34;My name is \{name}&#34;</span><span class="o">;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>string-interpolation.java</span>
    </div>
</div>
<p>Personalmente prefiero la sintaxis <code>${&hellip;}</code> en vez de <code>\{&hellip;}</code> ya que la primera es la opción utilizada en otros lenguajes y no me gusta mucho ese <em>syntactic sugar</em> (o <em>rat poison</em>) para usar los <em>TemplateProcessor</em> que me parece nada coherente con el lenguaje. Utilizar el <em>$</em> en vez de <em>\</em> es una alternativa que han evaluado pero que de momento han descartado para evitar conflictos con código heredado. También han evaluado otro tipo de alternativas, en cualquier caso hasta la versión final y que esta sea incorporada en el lenguaje si lo es es muy posible que haya cambios.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/HiHgAh7wWPc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/09/como-refrescar-el-access-token-de-un-cliente-oauth-cuando-caduca/</id>
        <title>Cómo refrescar el access token de un cliente OAuth cuando caduca</title>
        <updated>2022-09-15T21:00:00+02:00</updated>
        <published>2022-09-15T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/09/como-refrescar-el-access-token-de-un-cliente-oauth-cuando-caduca/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Dado que el protocolo HTTP es un protocolo sin estado los <em>access token</em> se envían en cada petición que se hace al <em>endpoint</em> de un recurso ofrecido por una aplicación mediante una interfaz REST. Para limitar el periodo de que un <em>access tokens</em> sea utilizable en caso de ser filtrado estos se crean con un tiempo de vida corto, los clientes para seguir realizando peticiones han de solicitar al servidor de autorización un nuevo <em>access token</em>. La librería OkHttp permite realizar la renovación de forma transparente para el cliente y en el código donde se usa.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/oauth.svg" width="200" height="200" alt="OAuth" title="OAuth"  class=""></p>
</div>
<p>En <a href="https://oauth.net/">el protocolo OAuth</a> la autorización se concede o no en base a un <em>token</em> que para el cliente es simplemente una cadena de letras sin ningún sentido.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/09/introduccion-al-protocolo-oauth-2-para-delegar-la-autorizacion/">Introducción al protocolo OAuth 2 para delegar la autorización</a></li>
</ul>
<p>Dado que los <em>access token</em> tienen un tiempo de expiración relativamente corto el protocolo OAuth requiere que sean renovados cuando caducan para que los clientes sigan pudiendo realizar peticiones.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="los-access-token-y-refresh-token-de-protocolo-oauth">Los access token y refresh token de protocolo OAuth</h3>
<p>El acceso a un servicio depende de tener un <em>token</em> a través de alguna de las formas que proporciona el protocolo OAuth, la principal y recomendada el que denomina <em>authorization code grant</em> que permite mantener privado tanto el secreto del cliente como el <em>access token</em> del agente del usuario.</p>
<p>Dado que los <em>access token</em> se envían en cada petición que realiza el cliente al servidor hay numerosas oportunidades que los <em>access tokens</em> sean capturados, para minimizar el problema de seguridad se generan <em>access tokens</em> con un tiempo de vida corto, de unos pocos minutos o unas pocas horas. Sin embargo, los clientes han de tener una forma de obtener un nuevo <em>access token</em> cuando este expira para seguir haciendo invocaciones en el servidor, al mismo tiempo que se genera un <em>access token</em> al cliente se le proporciona un <em>refresh token</em> que le permite obtener un nuevo <em>access token</em> cuando por ejemplo caduca.</p>
<p>Cuando un <em>access token</em> ya no es válido el servidor de recurso devuelve un código de estado que el cliente puede capturar para saber si el <em>access token</em> ha caducado y hay que obtener uno nuevo.</p>
<p>El obtener un <em>access token</em> implica hacer una petición al servidor de autorización proporcionando entre otros datos el <em>refresh token</em>. Para que el cliente no sea consciente de la renovación del <em>access token</em> y que estos pueden caducar en cualquier momento algunas librerías como <a href="https://square.github.io/okhttp/">OkHttp</a> permiten a los clientes implementar el obtener un nuevo <em>access token</em> de forma transparente en las peticiones que se hagan.</p>
<h3 id="_authenticator_-de-okhttp"><em>Authenticator</em> de OkHttp</h3>
<p>La clase <a href="https://square.github.io/okhttp/3.x/okhttp/okhttp3/Authenticator.html">Authenticator</a> permite realizar la autenticación antes de hacer la petición al servidor o cuando el servidor devuelva un determinado código de estado. Con una implementación de esta clase el código no necesita ser consciente de la autenticación que se necesita realizar en las peticiones al servidor.</p>
<p>Esta interfaz incluye un único método que hay que implementar, en el caso de que el método sea invocado y el código de respuesta de la petición haya sido un 401 y la petición incluya una cabecera de autorización quiere decir que las credenciales proporcionadas no son válidas en el caso de usar OAuth que el <em>access token</em> proporcionado no es válido, un caso es que el <em>access token</em> haya caducado, caso en el que hay que realizar la renovación del <em>access token</em>.</p>
<h3 id="implementar-un-autenticator-para-okhttp">Implementar un autenticator para OkHttp</h3>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth-en-java/">Cliente de un servicio REST autenticado con OAuth en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</a></li>
</ul>
<h4 id="cliente-de-servicio-oauth">Cliente de servicio OAuth</h4>
<p>Esta es la implementación de una interfaz <em>Autheticator</em> que permite renovar el <em>access token</em> cuando este caduca.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrsoauth.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.Authenticator</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.Request</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.Response</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.Route</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.jetbrains.annotations.NotNull</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.jetbrains.annotations.Nullable</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultAuthenticator</span> <span class="kd">implements</span> <span class="n">Authenticator</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">AccessTokenRepository</span> <span class="n">accessTokenRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">DefaultAuthenticator</span><span class="o">(</span><span class="n">AccessTokenRepository</span> <span class="n">accessTokenRepository</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">accessTokenRepository</span> <span class="o">=</span> <span class="n">accessTokenRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Nullable</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Request</span> <span class="nf">authenticate</span><span class="o">(</span><span class="nd">@Nullable</span> <span class="n">Route</span> <span class="n">route</span><span class="o">,</span> <span class="nd">@NotNull</span> <span class="n">Response</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!</span><span class="n">tryAuthenticate</span><span class="o">(</span><span class="n">response</span><span class="o">))</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">synchronized</span> <span class="o">(</span><span class="k">this</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">accessTokenRepository</span><span class="o">.</span><span class="na">getAccessToken</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accessTokenRepository</span><span class="o">.</span><span class="na">requestAccessToken</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accessTokenRepository</span><span class="o">.</span><span class="na">refreshAccessToken</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">request</span><span class="o">().</span><span class="na">newBuilder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">&#34;Authorization&#34;</span><span class="o">,</span> <span class="s">&#34;Bearer &#34;</span> <span class="o">+</span> <span class="n">accessTokenRepository</span><span class="o">.</span><span class="na">getAccessToken</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">tryAuthenticate</span><span class="o">(</span><span class="n">Response</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">request</span><span class="o">().</span><span class="na">header</span><span class="o">(</span><span class="s">&#34;Authorization&#34;</span><span class="o">)</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">response</span><span class="o">.</span><span class="na">priorResponse</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>client/DefaultAuthenticator.java</span>
    </div>
</div>
<p>Esta otra clase de utilidad se encarga de almacenar el <em>access token</em> y <em>refresh token</em> y de realizar las peticiones para obtener el <em>access token</em> tanto la primera vez como cuando se solicita utilizando el <em>refresh token</em>. Utiliza el método <em>client credentials</em> para obtener un <em>access token</em> al mismo tiempo junto a un <em>refresh token</em> a partir de las credenciales del cliente y para hacer la renovación del <em>access token</em> se utiliza un <em>refresh_token</em> además de las credenciales del cliente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrsoauth.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.json.Json</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.json.JsonObject</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.FormBody</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.OkHttpClient</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.Request</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.RequestBody</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.Response</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AccessTokenRepository</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">tokenEndpoint</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">OkHttpClient</span> <span class="n">client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">clientId</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">clientSecret</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">accessToken</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">refreshToken</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AccessTokenRepository</span><span class="o">(</span><span class="n">String</span> <span class="n">tokenEndpoint</span><span class="o">,</span> <span class="n">OkHttpClient</span> <span class="n">client</span><span class="o">,</span> <span class="n">String</span> <span class="n">clientId</span><span class="o">,</span> <span class="n">String</span> <span class="n">clientSecret</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">tokenEndpoint</span> <span class="o">=</span> <span class="n">tokenEndpoint</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">client</span> <span class="o">=</span> <span class="n">client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">clientId</span> <span class="o">=</span> <span class="n">clientId</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">clientSecret</span> <span class="o">=</span> <span class="n">clientSecret</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getAccessToken</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">accessToken</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">requestAccessToken</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Requesting access token&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">RequestBody</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormBody</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;grant_type&#34;</span><span class="o">,</span> <span class="s">&#34;client_credentials&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;client_id&#34;</span><span class="o">,</span> <span class="n">clientId</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;client_secret&#34;</span><span class="o">,</span> <span class="n">clientSecret</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Request</span> <span class="n">tokenRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">().</span><span class="na">url</span><span class="o">(</span><span class="n">tokenEndpoint</span><span class="o">).</span><span class="na">post</span><span class="o">(</span><span class="n">data</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Response</span> <span class="n">tokenResponse</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">tokenRequest</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">tokenResponse</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonObject</span> <span class="n">tokenObject</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createReader</span><span class="o">(</span><span class="n">tokenResponse</span><span class="o">.</span><span class="na">body</span><span class="o">().</span><span class="na">charStream</span><span class="o">()).</span><span class="na">readObject</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accessToken</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&#34;access_token&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">refreshToken</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&#34;refresh_token&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Integer</span> <span class="n">expiresIn</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&#34;expires_in&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Integer</span> <span class="n">refreshExpires</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&#34;refresh_expires_in&#34;</span><span class="o">,</span> <span class="o">-</span><span class="n">1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Access token: %s%n&#34;</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Expires in: %d%n&#34;</span><span class="o">,</span> <span class="n">expiresIn</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Refresh expires in: %d%n&#34;</span><span class="o">,</span> <span class="n">refreshExpires</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Refresh token: %s%n&#34;</span><span class="o">,</span> <span class="n">refreshToken</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">refreshAccessToken</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Refreshing access token&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">RequestBody</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FormBody</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;grant_type&#34;</span><span class="o">,</span> <span class="s">&#34;refresh_token&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;client_id&#34;</span><span class="o">,</span> <span class="n">clientId</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;client_secret&#34;</span><span class="o">,</span> <span class="n">clientSecret</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;refresh_token&#34;</span><span class="o">,</span> <span class="n">refreshToken</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Request</span> <span class="n">tokenRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">().</span><span class="na">url</span><span class="o">(</span><span class="n">tokenEndpoint</span><span class="o">).</span><span class="na">post</span><span class="o">(</span><span class="n">data</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Response</span> <span class="n">tokenResponse</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">tokenRequest</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">tokenResponse</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonObject</span> <span class="n">tokenObject</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createReader</span><span class="o">(</span><span class="n">tokenResponse</span><span class="o">.</span><span class="na">body</span><span class="o">().</span><span class="na">charStream</span><span class="o">()).</span><span class="na">readObject</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accessToken</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&#34;access_token&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">refreshToken</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&#34;refresh_token&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Integer</span> <span class="n">expiresIn</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&#34;expires_in&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Integer</span> <span class="n">refreshExpires</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&#34;refresh_expires_in&#34;</span><span class="o">,</span> <span class="o">-</span><span class="n">1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Access token: %s%n&#34;</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Expires in: %d%n&#34;</span><span class="o">,</span> <span class="n">expiresIn</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Refresh expires in: %d%n&#34;</span><span class="o">,</span> <span class="n">refreshExpires</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Refresh token: %s%n&#34;</span><span class="o">,</span> <span class="n">refreshToken</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>client/AccessTokenRepository.java</span>
    </div>
</div>
<p>En el ejemplo el siguiente cliente que utiliza el método <em>client credentials</em> para obtener un <em>access token</em> hace peticiones cada unos pocos segundos al servidor del recurso. La renovación de <em>access token</em> se realiza de forma transparente y aunque el <em>access token</em> haya caducado y una petición falle con un código de estado 401 se invoca la renovación de <em>access token</em> y la petición con el <em>access token</em> renovado se reintenta. La interfaz <em>Authenticator</em> se usa al construir la instancia de OkHttp que utiliza el cliente del recurso.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrsoauth.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.json.Json</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.json.JsonObject</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.HttpUrl</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.OkHttpClient</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.Request</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">okhttp3.Response</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OkHttpClient</span> <span class="n">baseClient</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//curl -i http://localhost:9080/realms/my-realm/.well-known/openid-configuration&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Getting configuration...&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Request</span> <span class="n">configurationRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">().</span><span class="na">url</span><span class="o">(</span><span class="s">&#34;http://localhost:9080/realms/my-realm/.well-known/openid-configuration&#34;</span><span class="o">).</span><span class="na">get</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Response</span> <span class="n">configurationResponse</span> <span class="o">=</span> <span class="n">baseClient</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">configurationRequest</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonObject</span> <span class="n">configurationObject</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createReader</span><span class="o">(</span><span class="n">configurationResponse</span><span class="o">.</span><span class="na">body</span><span class="o">().</span><span class="na">charStream</span><span class="o">()).</span><span class="na">readObject</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">tokenEndpoint</span> <span class="o">=</span> <span class="n">configurationObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&#34;token_endpoint&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AccessTokenRepository</span> <span class="n">accessTokenRepository</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AccessTokenRepository</span><span class="o">(</span><span class="n">tokenEndpoint</span><span class="o">,</span> <span class="n">baseClient</span><span class="o">,</span> <span class="s">&#34;spring-boot-client&#34;</span><span class="o">,</span> <span class="s">&#34;Bg1r6mOYsFraDw7u8VCgmGl4JtK8vShX&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">baseClient</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">authenticator</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultAuthenticator</span><span class="o">(</span><span class="n">accessTokenRepository</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Getting an access token...&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accessTokenRepository</span><span class="o">.</span><span class="na">requestAccessToken</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//curl -ik -H &#34;Authorization: Bearer aaaaa.bbbbb.ccccc&#34; http://localhost:9080/message?string=Hola&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Calling OAuth secured service...&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Request</span> <span class="n">serviceRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="n">HttpUrl</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">&#34;http://localhost:8080/message&#34;</span><span class="o">).</span><span class="na">newBuilder</span><span class="o">().</span><span class="na">addQueryParameter</span><span class="o">(</span><span class="s">&#34;string&#34;</span><span class="o">,</span> <span class="s">&#34;Hola&#34;</span><span class="o">).</span><span class="na">build</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">&#34;Authorization&#34;</span><span class="o">,</span> <span class="s">&#34;Bearer &#34;</span> <span class="o">+</span> <span class="n">accessTokenRepository</span><span class="o">.</span><span class="na">getAccessToken</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">get</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Response</span> <span class="n">serviceResponse</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">serviceRequest</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">serviceResponse</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonObject</span> <span class="n">serviceObject</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createReader</span><span class="o">(</span><span class="n">serviceResponse</span><span class="o">.</span><span class="na">body</span><span class="o">().</span><span class="na">charStream</span><span class="o">()).</span><span class="na">readObject</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Result: %s%n&#34;</span><span class="o">,</span> <span class="n">serviceObject</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">5000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>client/Main.java</span>
    </div>
</div>
<p>El programa del cliente OAuth realiza peticiones al servidor del recurso utilizando el <em>access token</em> cuando este caduca la clase <em>Authenticator</em> es invocada y solicita al <em>AccessTokenRepository</em> un nuevo <em>access token</em> para ello utiliza el <em>refresh token</em>. Para el código que realiza la petición la caducidad del <em>access token</em> y la renovación ocurre sin su conocimiento.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Calling OAuth secured service...&#10;</span></span><span class="line"><span class="cl">Result: {&#34;message&#34;:&#34;Hola&#34;,&#34;date&#34;:&#34;2022-09-16T16:17:16.759+00:00&#34;}&#10;</span></span><span class="line"><span class="cl">Calling OAuth secured service...&#10;</span></span><span class="line"><span class="cl">Result: {&#34;message&#34;:&#34;Hola&#34;,&#34;date&#34;:&#34;2022-09-16T16:17:21.770+00:00&#34;}&#10;</span></span><span class="line"><span class="cl">Calling OAuth secured service...&#10;</span></span><span class="line"><span class="cl">Result: {&#34;message&#34;:&#34;Hola&#34;,&#34;date&#34;:&#34;2022-09-16T16:17:26.781+00:00&#34;}&#10;</span></span><span class="line"><span class="cl">Calling OAuth secured service...&#10;</span></span><span class="line"><span class="cl">Refreshing access token&#10;</span></span><span class="line"><span class="cl">Access token: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJQY1ZFRTN0TEl2bGhhVDFpVE16aWV2ZVN5SnJTMXlZTERNY3YzMTUwd0FrIn0.eyJleHAiOjE2NjMzNDUxMTEsImlhdCI6MTY2MzM0NTA1MSwianRpIjoiZjkyNTEwNWUtYjczYy00NDgxLWFkMTYtYzk3YzlkZWEwOTk0IiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo5MDgwL3JlYWxtcy9teS1yZWFsbSIsImF1ZCI6InNwcmluZy1ib290LWNsaWVudCIsInN1YiI6IjYzOTI1NWJlLTU0NGUtNGQ2Zi1iNDhjLWE2NjQ1YmY2OGYyYyIsInR5cCI6IkJlYXJlciIsImF6cCI6InNwcmluZy1ib290LWNsaWVudCIsInNlc3Npb25fc3RhdGUiOiJkZjEyMWQ0My0xMGUzLTQ0MzUtOWM2OC0wN2U1NjIyODg3YmUiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm1lc3NhZ2UtcXVlcnkiXX0sInJlc291cmNlX2FjY2VzcyI6eyJzcHJpbmctYm9vdC1jbGllbnQiOnsicm9sZXMiOlsibWVzc2FnZS1xdWVyeS0yIl19fSwic2NvcGUiOiJlbWFpbCBwcm9maWxlIiwic2lkIjoiZGYxMjFkNDMtMTBlMy00NDM1LTljNjgtMDdlNTYyMjg4N2JlIiwiY2xpZW50SWQiOiJzcHJpbmctYm9vdC1jbGllbnQiLCJjbGllbnRIb3N0IjoiMTcyLjIzLjAuMSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXNwcmluZy1ib290LWNsaWVudCIsImNsaWVudEFkZHJlc3MiOiIxNzIuMjMuMC4xIn0.lE1YZDa1SCZdN7EUFGlHSs6L0wfoShoGq6WBlSm0we-sKW8wiCH0Kv4YBI9o9iioFFLPWmY7IW82nF-2Sp7PeVcqkEkRN5BSJ7J1ulIZN1F_L8t8A71yJPT_tG3q2oGLPeh0ooiVX7epW9jbePcEmOWYLYD9JM_xRNYLyThhHvS_R_LUNreW_rb0o_TjhAe3G55TvGccZV4XI2wYTbTU4a34rcU0vjdl5VP_cIogymTTgvr7OWkYxoU1nNkR1KZWCoYCdA95bQw4ut0j1cAupPesPUSA4hDCDvkicazn7cPWKel8qJ7qfR5R66V79nsvN0yIvG9XbjsjdzzZ-felvw&#10;</span></span><span class="line"><span class="cl">Expires in: 60&#10;</span></span><span class="line"><span class="cl">Refresh expires in: 1800&#10;</span></span><span class="line"><span class="cl">Refresh token: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJiNzk4MGU2NC02ZjdhLTQxNTctYmFmNi1lN2FmYmM0OThmNzEifQ.eyJleHAiOjE2NjMzNDY4NTEsImlhdCI6MTY2MzM0NTA1MSwianRpIjoiY2QyYzU5M2QtMGUwMS00MzEwLWEyMzYtODZkNmViYWJhMzJmIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo5MDgwL3JlYWxtcy9teS1yZWFsbSIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTA4MC9yZWFsbXMvbXktcmVhbG0iLCJzdWIiOiI2MzkyNTViZS01NDRlLTRkNmYtYjQ4Yy1hNjY0NWJmNjhmMmMiLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoic3ByaW5nLWJvb3QtY2xpZW50Iiwic2Vzc2lvbl9zdGF0ZSI6ImRmMTIxZDQzLTEwZTMtNDQzNS05YzY4LTA3ZTU2MjI4ODdiZSIsInNjb3BlIjoiZW1haWwgcHJvZmlsZSIsInNpZCI6ImRmMTIxZDQzLTEwZTMtNDQzNS05YzY4LTA3ZTU2MjI4ODdiZSJ9.c-EYHLyT_0UQ7_1xl45C-ws8rTHxURxzm97src8AMAE&#10;</span></span><span class="line"><span class="cl">Result: {&#34;message&#34;:&#34;Hola&#34;,&#34;date&#34;:&#34;2022-09-16T16:17:31.799+00:00&#34;}&#10;</span></span><span class="line"><span class="cl">Calling OAuth secured service...&#10;</span></span><span class="line"><span class="cl">Result: {&#34;message&#34;:&#34;Hola&#34;,&#34;date&#34;:&#34;2022-09-16T16:17:36.808+00:00&#34;}&#10;</span></span><span class="line"><span class="cl">Calling OAuth secured service...&#10;</span></span><span class="line"><span class="cl">Result: {&#34;message&#34;:&#34;Hola&#34;,&#34;date&#34;:&#34;2022-09-16T16:17:41.818+00:00&#34;}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>client/System.out</span>
    </div>
</div>
<h4 id="servidor-de-recurso">Servidor de recurso</h4>
<p>El servidor de recursos implementado como una aplicación del <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> comprueba el <em>access token</em> como parte de su autorización, en caso de que el <em>access token</em> sea inválido porque haya caducado o sea incorrecto se devuelve un código de estado 401. <a href="https://spring.io/projects/spring-security">Spring Security</a> proporciona las utilidades para validar el <em>access token</em> enviado en cada petición y configura Spring para todas las peticiones al servidor requieran un <em>access token</em> simplemente añadiendo la anotación <em>@EnableWebSecurity</em> y un poco de configuración en la aplicación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrsoauth.server</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.GetMapping</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestParam</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RestController</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/message&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MessageResource</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">MessageService</span> <span class="n">messageService</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GetMapping</span><span class="o">(</span><span class="n">produces</span> <span class="o">=</span> <span class="s">&#34;application/json&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Message</span> <span class="nf">message</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&#34;string&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">messageService</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">string</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>server/MessageResource.java</span>
    </div>
</div>
<p>Definiendo el <em>bean</em> del tipo JwtDecoder peremite personalizar las validaciones que se realizan sobre el <em>access token</em> por defecto Spring solo valida el <em>issuer</em> y en este ejemplo se muestra como validar otro campo o <em>claim</em> del documento JSON del <em>token</em> en formato JWT en este caso el de audiencia, si el <em>claim</em> <em>iss</em> indica quien ha emitido el <em>aceess token</em>  el <em>claim</em> <em>aud</em> indica quien es el destinatario del <em>access token</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrsoauth.server</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableWebSecurity</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">MessageService</span> <span class="nf">messageService</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="k">new</span> <span class="n">DefaultMessageService</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">JwtDecoder</span> <span class="nf">jwtDecoder</span><span class="o">(</span><span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${spring.security.oauth2.resourceserver.jwt.issuer-uri}&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">issuerUri</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">NimbusJwtDecoder</span> <span class="n">jwtDecoder</span> <span class="o">=</span> <span class="o">(</span><span class="n">NimbusJwtDecoder</span><span class="o">)</span> <span class="n">JwtDecoders</span><span class="o">.</span><span class="na">fromIssuerLocation</span><span class="o">(</span><span class="n">issuerUri</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">OAuth2TokenValidator</span><span class="o">&lt;</span><span class="n">Jwt</span><span class="o">&gt;</span> <span class="n">issuerValidator</span> <span class="o">=</span> <span class="n">JwtValidators</span><span class="o">.</span><span class="na">createDefaultWithIssuer</span><span class="o">(</span><span class="n">issuerUri</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">OAuth2TokenValidator</span><span class="o">&lt;</span><span class="n">Jwt</span><span class="o">&gt;</span> <span class="n">audienceValidator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JwtClaimValidator</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;(</span><span class="n">AUD</span><span class="o">,</span> <span class="n">aud</span> <span class="o">-&gt;</span> <span class="n">aud</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34;spring-boot-client&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">OAuth2TokenValidator</span><span class="o">&lt;</span><span class="n">Jwt</span><span class="o">&gt;</span> <span class="n">validator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DelegatingOAuth2TokenValidator</span><span class="o">&lt;&gt;(</span><span class="n">issuerValidator</span><span class="o">,</span> <span class="n">audienceValidator</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">jwtDecoder</span><span class="o">.</span><span class="na">setJwtValidator</span><span class="o">(</span><span class="n">validator</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">jwtDecoder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>server/Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8080</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">security</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">oauth2</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">resourceserver</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">jwt</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">issuer-uri</span><span class="p">:</span><span class="w"> </span><span class="l">http://localhost:9080/realms/my-realm</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>server/application.yml</span>
    </div>
</div>
<h4 id="servidor-de-autorización">Servidor de autorización</h4>
<p>Como servidor de autorización se utiliza <a href="https://www.keycloak.org/">Keycloak</a> creando un <em>realm</em> y un cliente que hay que crear en el <em>realm</em> que al hacerlo se obtienen sus credenciales, en este caso el servidor de Keycloak se inicia como <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">un contenedor de Docker</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3.7&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">keycloak</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">quay.io/keycloak/keycloak</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">KEYCLOAK_ADMIN=admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">KEYCLOAK_ADMIN_PASSWORD=admin</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s2">&#34;9080:8080&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">start-dev</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker/docker-compose.yml</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/09/como-refrescar-el-access-token-de-un-cliente-oauth-cuando-caduca/images/keycloak-clients_huf173f051969c7b522bafdbc6c824e948_121420_2560x1440_fit_box_3.png" data-gallery="" title="Clientes en Keycloak"><img src="https://picodotdev.github.io/blog-bitix/2022/09/como-refrescar-el-access-token-de-un-cliente-oauth-cuando-caduca/images/keycloak-clients_huf173f051969c7b522bafdbc6c824e948_121420_650x450_fit_box_3.png" width="650" height="373" alt="Clientes en Keycloak" title="Clientes en Keycloak"  class="lozad "></a></p>
<figcaption>Clientes en Keycloak</figcaption>
</figure>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringBootOauthClientServer">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew client:run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://medium.com/@sumon.v0.0/okhttp-how-to-refresh-access-token-efficiently-6dece4d271c0">OkHttp: How to Refresh Access Token Efficiently</a></li>
<li><a href="https://stackoverflow.com/questions/22450036/refreshing-oauth-token-using-retrofit-without-modifying-all-calls">Refreshing OAuth token using Retrofit without modifying all calls</a></li>
<li><a href="https://square.github.io/okhttp/4.x/okhttp/okhttp3/-authenticator/">OkHttp Authenticator</a></li>
<li><a href="https://stengale.medium.com/problem-solved-2-access-token-refresh-with-okhttp-authenticator-5ccb798ede70">Problem Solved 2: Access Token refresh with Okhttp Authenticator</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/09/introduccion-al-protocolo-oauth-2-para-delegar-la-autorizacion/</id>
        <title>Introducción al protocolo OAuth 2 para delegar la autorización</title>
        <updated>2022-09-08T11:00:00+02:00</updated>
        <published>2022-09-08T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/09/introduccion-al-protocolo-oauth-2-para-delegar-la-autorizacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El protocolo OAuth es un protocolo en el ámbito de la seguridad que permite que el dueño de los recursos conceda permisos a un cliente sin necesidad de compartir las credenciales, el servidor de recursos unicamente necesita un <em>token</em> que certifique el cliente tiene permisos para acceder a los recursos, el <em>token</em> es emitido por el servidor de autorización en el que el usuario se autentica y en el que servidor de recursos confía en los <em>tokens</em> de autorización que emite. Gracias a la flexibilidad del protocolo OAuth y estar basado en la ubicuidad del protocolo HTTP este es el mecanismo de autorización adoptado predominantemente en la web por los diferentes servicios que ofrecen sus APIs mediante REST sin limitarse a este tipo de APIs. OAuth se compone de varias especificaciones que permiten delegar la autorización, OpenID Connect construido sobre OAuth proporciona otro aspecto de la seguridad, la autenticación.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/oauth.svg" width="200" height="200" alt="OAuth" title="OAuth"  class=""></p>
</div>
<p>La web se compone de una multitud de páginas desarrolladas y bajo el control de múltiples organizaciones no relacionadas. Los usuarios almacenan sus datos y recursos en un servicio, en una web interconectada compuesta de múltiples servicios surge la necesidad de que un servicio pueda acceder de forma segura a los recursos de un usuario en otro servicio.</p>
<p>Este es el caso de una aplicación de un tercero que por ejemplo desea acceder a los documentos,  fotos o datos de un usuario alojada en otro servicio pero sin tener que compartir las credenciales del servicio donde están alojadas las fotos.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="el-protocolo-oauth">El protocolo OAuth</h3>
<p>El protocolo OAuth permite al usuario delegar la autorización a un cliente para el acceso a sus recursos proporcionado por un servidor de recursos, permite delegar la autorización de forma segura y sin que el usuario comparta sus credenciales de acceso en el servicio donde están los recursos al mismo tiempo que mantiene la posibilidad de revocar el acceso u otorgarlo de forma temporal.</p>
<p>Esta definición se compone de cuatro elementos:</p>
<ul>
<li>El usuario: que es propietario de los recursos almacenados en el servidor de recursos.</li>
<li>El servidor de recursos: que contiene los recursos del usuario.</li>
<li>El cliente: la aplicación a la que el usuario quiere otorgar acceso a los recursos del servidor.</li>
<li>El servidor de autorización: es el que proporciona el <em>token</em> (entre otras cosas) a modo de credencial al cliente y que el servidor de recurso utiliza para verificar el acceso al recurso o no. El servidor de recurso confía en el servidor de autorización.</li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/09/introduccion-al-protocolo-oauth-2-para-delegar-la-autorizacion/images/oauth-components_hu3c2c677b1ec95532986d9daafc565f04_69661_2560x1440_fit_box_3.png" data-gallery="" title="Componentes de OAuth 2.0"><img src="https://picodotdev.github.io/blog-bitix/2022/09/introduccion-al-protocolo-oauth-2-para-delegar-la-autorizacion/images/oauth-components_hu3c2c677b1ec95532986d9daafc565f04_69661_650x450_fit_box_3.png" width="545" height="450" alt="Componentes de OAuth 2.0" title="Componentes de OAuth 2.0"  class="lozad "></a></p>
<figcaption>Componentes de OAuth 2.0 <br>Fuente: Libro OAuth 2 in Action</figcaption>
</figure>
</div>
<p>El protocolo OAuth define varios flujos de autorización que un cliente puede emplear para obtener un <em>token</em> pero deja otros aspectos sin definir como cuál es el formato o contenido del <em>token</em>, tampoco define como el servidor de autorización debe realizar la autenticación del usuario. Esta no definición de algunos aspectos del protocolo le permite ser flexible y adaptarse a diferentes contextos.</p>
<p>El protocolo OAuth en esencia consiste básicamente en una forma que emplea el cliente para obtener un <em>token</em> y que este envía en sus peticiones para el acceso al recurso en el servidor de recursos.</p>
<p>Es el mecanismo de autorización más empleado para proteger servicios que utilizan una API con interfaz REST. En las peticiones REST que el cliente realiza al servidor de recurso envía el <em>access token</em> en una cabecera que el servidor de recurso válida ya sea por sí mismo o validando el <em>access token</em> haciendo una petición al servidor de autorización.</p>
<p>El servidor de autorización junto al <em>access token</em> emite el <em>refresh token</em>, los <em>tokens</em> tienen un tiempo de expiración relativamente corto u que por motivos de seguridad en caso de que sean filtrados han de ser renovados para reducir el tiempo en el que un atacante pueda hacer uso de ellos. Cuando to <em>access token</em> expira el cliente puede obtener un nuevo <em>access token</em> solicitándoselo al servidor de autorización y haciendo uso del <em>refresh token</em>. Dado que los <em>refresh token</em> solo se usan en las peticiones para obtener un nuevo <em>access token</em> hay menos posibilidades de que sean filtrados al contrario que los <em>access token</em> que son enviados en cada petición.</p>
<ul>
<li><a href="https://oauth.net/2/">OAuth 2.0</a></li>
<li><a href="https://oauth.net/specs/">Especificaciones de OAuth 2.0</a></li>
</ul>
<h3 id="flujos-de-autorización">Flujos de autorización</h3>
<p>El protocolo OAuth define varios flujos o <em>grant types</em> que un cliente puede seguir para la obtención del <em>access token</em> que le permite acceder los recursos. Para el servidor de recursos la forma que el cliente emplee para obtener el <em>token</em> y para el cliente el contenido o formato del <em>token</em> si tiene alguno no tiene relevancia.</p>
<p>El flujo por defecto, más completo, seguro y recomendado es el flujo de <em>authorization code</em>. Los otros flujos son variaciones adaptadas a algunas limitaciones de otros contextos o casos de uso.</p>
<ul>
<li><a href="https://oauth.net/2/grant-types/">OAuth Grant Types</a></li>
</ul>
<h4 id="_authorization-code-grant_"><em>Authorization code grant</em></h4>
<p>El flujo de <em>authorization code</em> es el más completo y por ello más recomendado de usar siempre que se pueda. De forma simplificada en cuanto a la información que se utiliza en las peticiones los pasos de este flujo son los siguientes:</p>
<ol>
<li>El cliente solicita al usuario autorización para el acceso a un recurso, para ello construye una URL entre cuya información está el identificativo del cliente que redirige al usuario al servidor de autorización para la obtención de un <em>token</em>.</li>
<li>El servidor de autorización autentica al usuario si es necesario, informa y permite al usuario de cambiar los permisos que desea otorgar al cliente. Una vez el usuario otorga el acceso el servidor genera un <em>authorization code</em> que el cliente utiliza para intercambiar por el <em>token</em>. El servidor de autorización envía al agente del usuario una redirección a un <em>endpoint</em> del cliente con el <em>authorization code</em>.</li>
<li>El cliente recibe el <em>callback</em> del servidor de autorización con el <em>authorization code</em> que junto con las credenciales del cliente utiliza para intercambiarlos por el <em>token</em> con una nueva petición al servidor de autorización.</li>
<li>El servidor de autorización recibe la petición del cliente con sus credenciales y el <em>authorization code</em>, si son correctos el servidor de autorización genera un <em>token</em> o <em>access token</em> que el cliente utiliza para obtener acceso al recurso del usuario.</li>
<li>Una vez el cliente tiene el <em>token</em> o <em>access token</em> realiza una petición al servidor de recurso para obtener acceso al recurso.</li>
<li>El servidor de recurso valida el <em>access token</em> y en función de la autorización otorgada en el <em>token</em> concede o no acceso al recurso.</li>
</ol>
<p>En estos pasos desde el 1 al 4 hay una comunicación a través del agente o navegador del usuario entre el cliente y el servidor de autorización, en el contexto de OAuth a este canal de comunicación se le denomina <em>front channel</em> y como es a través del navegador del usuario es público. En estos pasos el <em>authorization code</em> se envía a través del agente del usuario.</p>
<p>Los pasos 4 y 5 componen lo que en el contexto de OAuth se les denomina <em>back channel</em> y se realiza de forma privada y directa entre el cliente y el servidor de autorización. En estos pasos las credenciales del cliente se mantienen privadas.</p>
<p>Otro aspecto importante es que el usuario en caso de tener que autenticarse únicamente proporciona las credenciales al servidor de autenticación, el cliente no tiene acceso a las credenciales del usuario que únicamente recibe un <em>authorization code</em> y <em>access token</em>, el agente del usuario no tiene acceso al <em>access token</em>.</p>
<ul>
<li><a href="https://www.rfc-editor.org/rfc/rfc6749#section-4.1">The OAuth 2.0 Authorization Framework, Authorization Code Grant</a></li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">+----------+&#10;</span></span><span class="line"><span class="cl">| Resource |&#10;</span></span><span class="line"><span class="cl">|   Owner  |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">+----------+&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; ^&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; |&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;(B)&#10;</span></span><span class="line"><span class="cl">+----|-----+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Client Identifier&nbsp;&nbsp;&nbsp;&nbsp;  +---------------+&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -+----(A)-- &amp; Redirection URI ----&gt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|  User-   |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Authorization |&#10;</span></span><span class="line"><span class="cl">|  Agent  -+----(B)-- User authenticates ---&gt;|&nbsp;&nbsp;&nbsp;&nbsp; Server&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -+----(C)-- Authorization Code ---&lt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">+-|----|---+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +---------------+&#10;</span></span><span class="line"><span class="cl">  |&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ^&nbsp;&nbsp;&nbsp;&nbsp;  v&#10;</span></span><span class="line"><span class="cl"> (A)  (C)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">  |&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">  ^&nbsp;&nbsp;&nbsp;&nbsp;v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">+---------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&gt;---(D)-- Authorization Code ---------&#39;&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">|  Client |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &amp; Redirection URI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&lt;---(E)----- Access Token -------------------&#39;&#10;</span></span><span class="line"><span class="cl">+---------+&nbsp;&nbsp;&nbsp;&nbsp;   (w/ Optional Refresh Token)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>authorization-code-grant.txt</span>
    </div>
</div>
<h4 id="_client-credentials-grant_"><em>Client credentials grant</em></h4>
<p>El flujo <em>client credentials</em> se usa cuando el cliente accede a los recursos en su propia representación sin la intervención de un usuario.</p>
<p>Para obtener el <em>token</em> el cliente proporciona sus credenciales al servidor de autorización que obtiene como respuesta directamente el <em>access token</em>.</p>
<ul>
<li><a href="https://www.rfc-editor.org/rfc/rfc6749#section-4.4">The OAuth 2.0 Authorization Framework, Client Credentials Grant</a></li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">+---------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  +---------------+&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&gt;--(A)- Client Authentication ---&gt;| Authorization |&#10;</span></span><span class="line"><span class="cl">| Client  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp; Server&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&lt;--(B)---- Access Token ---------&lt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">+---------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  +---------------+</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>client-credentials-grant.txt</span>
    </div>
</div>
<h4 id="_device-grant_"><em>Device grant</em></h4>
<p>Este flujo se utiliza en caso de que el dispositivo no tenga posibilidad de utilizar un agente de usuario. En vez de ello el dispositivo simplemente presenta un código que el usuario utilizando otro dispositivo se autentica con sus credenciales y junto al código realiza la autorización. El dispositivo comprueba periódicamente si el usuario ha realizado la autorización al servidor de autorización que en caso de ser correcta le devuelve el <em>access token</em>.</p>
<ul>
<li><a href="https://www.rfc-editor.org/rfc/rfc8628">OAuth 2.0 Device Authorization Grant</a></li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">+----------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+----------------+&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&gt;---(A)-- Client Identifier ---&gt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&lt;---(B)-- Device Code,&nbsp;&nbsp;&nbsp;&nbsp;  ---&lt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  User Code,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|  Device  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &amp; Verification URI&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|  Client  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |  [polling]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&gt;---(E)-- Device Code&nbsp;&nbsp;&nbsp;&nbsp;   ---&gt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &amp; Client Identifier   |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|  Authorization |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&lt;---(F)-- Access Token&nbsp;&nbsp;&nbsp;&nbsp;  ---&lt;|&nbsp;&nbsp;&nbsp;&nbsp; Server&nbsp;&nbsp;&nbsp;&nbsp; |&#10;</span></span><span class="line"><span class="cl">+----------+   (&amp; Optional Refresh Token)   |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; (C) User Code &amp; Verification URI&nbsp;&nbsp;&nbsp;&nbsp;   |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">+----------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">| End User |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;&nbsp;&nbsp;&nbsp;|&lt;---(D)-- End user reviews  ---&gt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|  Browser |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  authorization request |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">+----------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+----------------+</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>device-grant.txt</span>
    </div>
</div>
<h4 id="_implicit-grant_"><em>Implicit grant</em></h4>
<p>El uso del flujo <em>implicit</em> está desaconsejado y se recomienda utilizar el flujo <em>authorization code</em> en caso de ser posible. En este flujo se utiliza cuando el cliente se ubica en el propio agente del usuario. En la redirección del <em>front channel</em> el servidor responde con una redirección que incluyen el fragmento de la URL el <em>access token</em>.</p>
<p>Dado que el agente del usuario tiene acceso al <em>access token</em> se considera menos seguro.</p>
<ul>
<li><a href="https://www.rfc-editor.org/rfc/rfc6749#section-4.2">The OAuth 2.0 Authorization Framework, Implicit Grant</a></li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">+----------+&#10;</span></span><span class="line"><span class="cl">| Resource |&#10;</span></span><span class="line"><span class="cl">|  Owner   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">+----------+&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; ^&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; |&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;(B)&#10;</span></span><span class="line"><span class="cl">+----|-----+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Client Identifier&nbsp;&nbsp;&nbsp;&nbsp; +---------------+&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -+----(A)-- &amp; Redirection URI ---&gt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|  User-   |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Authorization |&#10;</span></span><span class="line"><span class="cl">|  Agent  -|----(B)-- User authenticates --&gt;|&nbsp;&nbsp;&nbsp;&nbsp; Server&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&lt;---(C)--- Redirection URI ----&lt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  with Access Token&nbsp;&nbsp;&nbsp;&nbsp; +---------------+&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;in Fragment&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+---------------+&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |----(D)--- Redirection URI ----&gt;|   Web-Hosted  |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  without Fragment&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp; Client&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;Resource   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp; (F)  |&lt;---(E)------- Script ---------&lt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+---------------+&#10;</span></span><span class="line"><span class="cl">+-|--------+&#10;</span></span><span class="line"><span class="cl">  |&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl"> (A)  (G) Access Token&#10;</span></span><span class="line"><span class="cl">  |&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">  ^&nbsp;&nbsp;&nbsp;&nbsp;v&#10;</span></span><span class="line"><span class="cl">+---------+&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&#10;</span></span><span class="line"><span class="cl">|  Client |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&#10;</span></span><span class="line"><span class="cl">+---------+</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>implicit-grant.txt</span>
    </div>
</div>
<h4 id="_resource-owner-password-credentials-grant_"><em>Resource owner password credentials grant</em></h4>
<p>Antes de OAuth para que un servicio pudiera acceder a los recursos de otro servicio una posibilidad era que el usuario compartiera las credenciales del servicio del recurso con el cliente. Compartir las credenciales del usuario entre servicios es una de las cosas que trata de evitar OAuth ya que cualquier cliente inseguro compromete las credenciales del usuario.</p>
<p>En el flujo <em>resource owner password</em> el cliente solicita las credenciales al usuario, una vez las obtiene las utiliza para obtener un <em>access token</em> en el servidor de autorización. Para su funcionamiento el cliente tiene acceso a las credenciales del usuario por eso también está desaconsejado su uso pero al menos una vez el cliente obtiene el <em>access token</em> no tiene que enviar las credenciales del usuario en cada petición al servidor de recursos lo que reduce las posibilidades de que las credenciales sean filtradas.</p>
<ul>
<li><a href="https://www.rfc-editor.org/rfc/rfc6749#section-4.3">The OAuth 2.0 Authorization Framework, Resource Owner Password Credentials Grant</a></li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">+----------+&#10;</span></span><span class="line"><span class="cl">| Resource |&#10;</span></span><span class="line"><span class="cl">|  Owner   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&#10;</span></span><span class="line"><span class="cl">+----------+&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; v&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;Resource Owner&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;(A) Password Credentials&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; |&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; v&#10;</span></span><span class="line"><span class="cl">+---------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  +---------------+&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&gt;--(B)---- Resource Owner -------&gt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Password Credentials&nbsp;&nbsp;&nbsp;&nbsp; | Authorization |&#10;</span></span><span class="line"><span class="cl">| Client  |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |&nbsp;&nbsp;&nbsp;&nbsp; Server&nbsp;&nbsp;&nbsp;&nbsp;|&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&lt;--(C)---- Access Token ---------&lt;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;(w/ Optional Refresh Token)   |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |&#10;</span></span><span class="line"><span class="cl">+---------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  +---------------+&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>resource-owner-password-credentials-grant.txt</span>
    </div>
</div>
<h3 id="casos-de-uso">Casos de uso</h3>
<p>De forma preferente los clientes han de utilizar el flujo <em>authorization code</em> por ser el más seguro de los flujos que define OAuth 2. La flexibilidad de OAuth le permite ser usado en múltiples dispositivos y protocolos.</p>
<h4 id="web">Web</h4>
<p>En los servicios y aplicaciones web las arquitecturas de las aplicaciones se componen de una parte cliente que se ejecuta en el navegador del usuario y una parte servidor. En esta arquitectura la parte que hace de servidor para el cliente del navegador web a su vez hace de cliente para el servidor del recurso.</p>
<p>En este caso dado el flujo de autorización OAuth que se utiliza es el de <em>authorization code</em>.</p>
<h4 id="servicio-_backend_">Servicio <em>backend</em></h4>
<p>Algunos clientes no dependen de ningún usuario, esto es el caso de servicios que únicamente tienen una parte de <em>backend</em> En este caso dado el flujo de autorización OAuth que se utiliza es el de <em>client credentials</em>.</p>
<h4 id="aplicación-nativa">Aplicación nativa</h4>
<p>Los clientes actuales incluyen dispositivos con capacidades de cómputo como los teléfonos inteligentes y tabletas que se ejecutan como aplicaciones nativas de estos dispositivos sin utilizar un navegador.</p>
<p>Este tipo de dispositivos pueden utilizar también el flujo de autenticación <em>authorization code</em>, sin embargo, como se ejecutan en un dispositivo del usuario no pueden mantener la confidencialidad de las credenciales de modo que han de utilizar mecanismos adicionales para obtener unas credenciales únicas del cliente.</p>
<p>El protocolo OAuth en algunas especificaciones relacionadas del protocolo permite el registro de forma dinámica de los clientes que en esencia proporciona unas credenciales únicas para cada instalación de la aplicación de forma que si las credenciales de un cliente son filtradas el problema no afecte al resto de clientes, solo exclusivamente a las credenciales del cliente afectado que puedan ser revocadas sin afectar al resto de clientes.</p>
<h4 id="dispositivo">Dispositivo</h4>
<p>Los televisores inteligentes también tienen capacidades para acceder a servicios de terceros pero son unos dispositivos especiales por su limitación de métodos de entrada y de entorno de ejecución que limitan el poder utilizar el flujo de <em>authorization code</em>. Para cubrir las necesidades de estos dispositivos está el flujo <em>device</em>.</p>
<h3 id="especificaciones">Especificaciones</h3>
<p>El protocolo OAuth está definido en una colección de especificaciones que son bastante cortas, componen la teoría del protocolo y bastante clarificadoras en varios puntos.</p>
<p>Algunas de las especificaciones definen el protocolo y otras elementos relacionados con OAuth como el registro de clientes de forma dinámica que se utiliza para el caso concreto o las especificaciones que permiten implementar un protocolo de autenticación sobre el protocolo de autorización OAuth como lo es <a href="https://openid.net/connect/">OpenID Connect</a>, OpenID Connect a su vez define otro conjunto de especificaciones.</p>
<h4 id="openid-connect">OpenID Connect</h4>
<p>La autorización permite aceptar o rechazar una petición en base a algunos criterios de la petición, también en función del usuario o cliente que realiza la acción o los permisos concedidos.</p>
<p>La autenticación es utilizada para identificar que un usuario es quien dice ser, para identificar a un usuario normalmente se utiliza algo que conoce como una contraseña y más reciente con algo que posee como un segundo factor de autenticación que proporciona un código o un dispositivo hardware físico que identifica al usuario.</p>
<p>OAuth es un protocolo para delegar la autorización pero normalmente se utiliza en combinación con un protocolo para realizar la autenticación, en el ámbito de OAuth el protocolo estándar para la autenticación es OpenID Connect.</p>
<p>OpenID Connect define más claramente algunos puntos que OAuth no entra en su definición. Un punto que define es el formato, contenido y qué información contienen los <em>tokens</em>, para los clientes el <em>token</em> sigue siguiendo un valor opaco pero con esta definición los servidores de recursos pueden utilizar el contenido del <em>token</em> para tomar algunas decisiones de autorización sin necesidad de realizar una petición al proveedor de identidad.</p>
<p>Otro aspecto que modifica OpenID Connect es la introducción de algunos elementos para adecuarlos al ámbito de la autenticación, el cliente se denomina <em>reliying party</em> o RP, el servidor de autorización hacer también las funciones de servidor de recursos y se denomina <em>identity provider</em> o IdP, OpenID connect además emite al mismo tiempo que el <em>access token</em> un nuevo _oken_que identifica al usuario, el <em>identity token</em> y la sesión de este.</p>
<ul>
<li><a href="https://openid.net/connect/">OpenID Connect</a></li>
<li><a href="https://openid.net/developers/specs/">OpenID Connect Specifications</a></li>
</ul>
<h4 id="_discovery_"><em>Discovery</em></h4>
<p>Hay múltiples proveedores que proporcionan identidad, el estándar de OpenID Connect define un archivo que los proveedores hacen accesible en una URL y que los clientes pueden utilizar para utilizarlo independientemente de del proveedor mientras cumpla con el estándar, este archivo forma parte.</p>
<p>Muchos de los grandes actores de internet como <a href="https://www.google.es/">Google</a>, <a href="https://www.microsoft.com/">Microsoft</a>, <a href="https://www.apple.com/">Apple</a>, <a href="https://www.facebook.com/">Facebook</a> o <a href="https://github.com/">GitHub</a> entre muchos otros permiten a los usuarios que tienen una cuenta en esos servicios iniciar sesión en otros servicios y páginas web sin tener que crear una cuenta nueva en el servicio que se quiere iniciar sesión, esto para los usuarios tiene la ventaja de no necesitar recordar o generar múltiples contraseñas ni crear una cuenta en cada servicio.</p>
<p>En el caso de Google por ejemplo hace público su definición de OpenID Connect en la siguiente ubicación y forma parte del descubrimiento de OpenID Connect.</p>
<ul>
<li><a href="https://accounts.google.com/.well-known/openid-configuration">Gogle OpenID Connect Configuration</a></li>
</ul>
<h4 id="jose-y-jwt">JOSE y JWT</h4>
<p>En OpenID Connect tanto el <em>identity token</em> como el <em>access token</em> son en realidad un JSON codificado en base64, el cliente no necesita conocer ni analizar su contenido pero el servidor de recursos puede analizarlo para tomar alguna decisión de autorización. El servidor de recurso tiene dos posibilidades, analizar el contenido de <em>token</em> lo que requiere conocer qué formato contiene o hacer una petición al <em>identity provider</em> para que este le devuelva su contenido, ambas tienen alguna ventaja pero si es suficiente para evitar una llamada adicional y latencia en las llamadas se evita hacer peticiones al <em>identity provider</em>.</p>
<p>El formato de los <em>tokens</em> según lo define OpenID Connect normalmente es un texto en formato JSON codificado en base64 que aparentemente parece algo aleatorio. Se compone de tres partes separadas por un punto, una cabecera en la que se especifica el algoritmo de firma empleado y formato, un cuerpo que contiene varios campos o <em>claims</em> definidos en el estándar y una firma digital que el servidor de recursos utiliza para validar que ha sido emitido por el servidor de autorización y garantizar que su contenido no ha sido modificado.</p>
<p>El formato de los <em>tokens</em> se engloban en una serie de colección de siglas relacionadas para cada una de las partes los definen:</p>
<ul>
<li>JSON Object Signing and Encryption (JOSE)</li>
<li>JSON Web Token (JWT, RFC 7519): son dos documentos JSON en base64 separados por un punto.</li>
<li>JSON Web Signature (JWS, RFC 7515): añade una forma digital a los <em>token</em>, siendo el tercer documento de un <em>token</em>.</li>
<li>JSON Web Encryption (JWE, RFC 7516): permite el cifrado del cuerpo de los tokens para que su contenido aunque firmado no sea analizable sin la correspondiente clave de descifrado.</li>
<li>JSON Web Algorithms (JWA, RFC 7518): define los algoritmos de cifrado que deben usar JWS y JWE.</li>
<li>JSON Web Key (JWK, RFC 7517): define el formato para representar una clave criptográfica en formato JSON.</li>
</ul>
<p>Otra término mencionado es <em>proof key for code exchange</em> o PKCE que evita algunos problemas de seguridad al enviar servidor de autorización un dato que solo conoce el cliente de modo que solo el cliente legítimo pueda intercambiar el <em>autorization code</em> por el <em>access token</em>, útil principalmente para las aplicaciones nativas que no pueden garantizar el secreto de sus credenciales.</p>
<h3 id="implementar-oauth-y-openid-connect">Implementar OAuth y OpenID Connect</h3>
<p>Dado que los protocolos OAuth y OpenID Connect se basan en el protocolo HTTP cualquier herramienta que utilice este protocolo es capaz de utilizar OAuth incluso de forma transparente sin que el servicio protegido sea consciente de ello con un <em>proxy</em> y un servidor en el que delegar la autenticación y autorización.</p>
<p>Tanto el servidor web <a href="https://httpd.apache.org/">Apache HTTPD</a> como <a href="https://nginx.org/">Nginx</a> ofrecen <em>plugins</em> para el uso de OAuth y OpenID Connect, cualquier lenguaje de programación capaz de realizar peticiones HTTP y trabajar con JSON como son la mayoría de lenguajes de propósito general poseen librerías de modo que su uso sea fácil empezar a usarlos simplemente incluyendo una dependencia.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/11/autenticacion-con-openid-oauth-en-cualquier-web-con-nginx-y-de-forma-nativa-con-spring-boot/">Autenticación con OpenID/OAuth en cualquier web con Nginx y de forma nativa con Spring Boot</a></li>
</ul>
<h3 id="servidor-openid-connect">Servidor OpenID Connect</h3>
<p><a href="https://www.keycloak.org/">Keycloak</a> es un servidor implementado en el lenguaje Java desarrollado por <a href="https://www.redhat.com/es">RedHat</a> y publicado con una licencia de código abierto que proporciona la funcionalidad de servidor de autorización y OpenID Connect para cualquier aplicación incluso aquellas no implementadas en Java. Keycloak se caracteriza por implementar las especificaciones con los diferentes flujos de autorización del protocolo OAuth y OpenID Connect.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/">Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot</a></li>
</ul>
<h3 id="cliente-de-oauth-con-spring">Cliente de OAuth con Spring</h3>
<p>En Java el framework <a href="https://spring.io/">Spring</a> que proporciona dependencias para prácticamente cualquier funcionalidad común que un desarrollador necesite también proporciona soporte para OAuth y OpenID Connect añadiendo unas pocas líneas de configuración e integrándose con el framework de seguridad <a href="https://spring.io/projects/spring-security">Spring Security</a>.</p>
<p>Dado que los <em>access tokens</em> tienen un tiempo de expiración relativamente corto estos han de ser renovados utilizando el <em>refresh token</em>, la librería <a href="https://square.github.io/okhttp/">OkHttp</a> proporciona soporte para realizar la renovación de forma transparente a través de la clase <a href="https://square.github.io/okhttp/4.x/okhttp/okhttp3/-authenticator/">Authenticator</a> explicada en <a href="https://square.github.io/okhttp/3.x/okhttp/okhttp3/Authenticator.html">su Javadoc</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth-en-java/">Cliente de un servicio REST autenticado con OAuth en Java</a></li>
</ul>
<h3 id="servidor-de-recurso">Servidor de recurso</h3>
<p>Al igual que Spring proporciona soporte para la utilización de OpenID Connect el framework de seguridad Spring Security ofrece soporte para la integración de autorización con OAuth de modo que un <em>endpoint</em> de una API REST o funcionalidad de un servicio pueda implementar la lógica para permitir o denegar una petición.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</a></li>
</ul>
<h2 id="libros-sobre-oauth">Libros sobre OAuth</h2>
<p>Las especificaciones de OAuth y OpenID Connect son cortas y explican el protocolo en detalle con descripciones fáciles de entender, incluso a veces es mejor leer las especificaciones directamente que cualquier otro material.</p>
<p>Aún así, los libros explican de otra forma más guiada y paso a paso el funcionamiento del protocolo, dos libros que he leído y me han parecido una buena introducción al protoclo ha sido por un lado <a href="https://amzn.to/3D444JO">OAuth 2 in Action</a> que explica la teoría de OAuth con varios ejemplos de código y aplicaciones con el que probar el protocolo, por otro lado el libro <a href="https://amzn.to/3RGHriy">Keycloak - Identity and Access Management for Modern Applications</a> que explica el uso y repasa la teoría de OAuth de la implementación del protocolo OpenID Connect y OAuth en el servidor Keycloak.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/">Servidor OAuth, gateway y servicio REST utilizando tokens JWT con Spring</a></li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=161729327X&amp;linkId=38b33d0ec3ca9855c0a981d1e2154b63" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1800562497&amp;linkId=eb189e8a81b21d362b31f7b08f4b9f4e" title="Amazon" class="lozad"></iframe>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/08/ejemplo-de-patron-builder-para-las-clases-record-de-java/</id>
        <title>Ejemplo de patrón Builder para las clases Record de Java</title>
        <updated>2022-08-12T18:30:00+02:00</updated>
        <published>2022-08-12T18:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/08/ejemplo-de-patron-builder-para-las-clases-record-de-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Java se ha caracterizado por ser un lenguaje verboso y necesitar declarar todo de forma explícita, esto tiene la ventaja de que el código es muy explícito sin apenas convenciones que es necesario conocer para saber cómo se comporta el código. Por el contrario esta verbosidad requiere declarar gran cantidad de código que se hace repetitivo en muchas clases. Los <em>Records</em> de Java 16 permite declarar clases de datos en muy pocas líneas de código, esto lo consiguen introduciendo algunas convenciones que son de uso común en el lenguaje. Un aspecto que no resuelven los <em>Records</em> es el crear clases Builder que son una necesidad asociada para esas clases de datos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Java desde la versión 8 ha incorporado muchas novedades y con el ciclo de desarrollo de una nueva versión cada seis meses las novedades han sido numerosas y cada poco tiempo. Una de las novedades disponibles en la versión de Java 16 ha sido una especialización de clase, las clases <em>Record</em>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/03/novedades-de-java-16/">Novedades de Java 16</a></li>
</ul>
<p>Aún con todas las novedades que se han incorporando sigue habiendo algunas necesidades que al no estar cubiertas por el propio lenguaje o una clase del JDK, una de ellas relacionada con las clases <em>Record</em> es utilizar <a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-del-patron-de-diseno-builder/">el patrón de diseño Builder</a>.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="las-clases-_record_-de-java">Las clases <em>Record</em> de Java</h3>
<p>Las clases <em>Record</em> incorporadas en Java son muy útiles ya que simplifican enormemente el código de esas clases que prácticamente son contenedores de datos. Las clases <em>Record</em> evitan tener que declarar explícitamente los métodos <em>getter</em>  para cada una de las propiedades así como <a href="https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/">los métodos <em>hashCode</em> y <em>equals</em>, métodos que hay implementar correctamente</a>, también evitan declarar el método <em>toString</em> muy útiles para el correcto funcionamiento cuando las clases se añaden en colecciones.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Point</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">x</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">y</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">   <span class="n">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">   <span class="kt">int</span> <span class="nf">x</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">x</span><span class="o">;</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">   <span class="kt">int</span> <span class="nf">y</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">y</span><span class="o">;</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">   <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">Point</span><span class="o">))</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Point</span> <span class="n">other</span> <span class="o">=</span> <span class="o">(</span><span class="n">Point</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">other</span><span class="o">.</span><span class="na">x</span> <span class="o">==</span> <span class="n">x</span> <span class="o">&amp;&amp;</span> <span class="n">other</span><span class="o">.</span><span class="na">y</span> <span class="o">==</span> <span class="n">y</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">   <span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hash</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">   <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Point[x=%d, y=%d]&#34;</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>records-2.java</span>
    </div>
</div>
<p>La definición de una clase <em>Record</em> lo único que requieren prácticamente es declarar las propiedades y sus tipos, con esta definición la clase implícitamente implementa los métodos <em>getter</em>, <em>hashCode</em>, <em>equals</em> y <em>toString</em>, esta clase <em>Record</em> es equivalente a la anterior pero en muchas menos líneas de código.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">record</span> <span class="nf">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>records-1.java</span>
    </div>
</div>
<h3 id="alternativas-a-_records_-en-versiones-anteriores-de-java">Alternativas a <em>Records</em> en versiones anteriores de Java</h3>
<p>Usar una de las últimas versiones de Java no es posible en el caso de una aplicación con mucho código existente que usa una versión anterior, a veces no tanto por pasar una nueva versión en el código ya que Java se caracteriza por mantener la compatibilidad hacia atrás sino por alguna dependencia antigua que no es compatible con una versión de Java más reciente o por el entorno de ejecución de la aplicación que ejecutarla sobre una versión más moderna de Java requiere actualizar versiones de librerías que requieren cambios en el código.</p>
<p>Dos librerías como alternativa a los <em>Records</em> utilizables en versiones anteriores de Java 16 son <a href="https://immutables.github.io/">Immutables</a> y <a href="https://projectlombok.org/">Lombok</a>. Ambas proporcionan soporte para evitar mucho del código de las clases Java que se suelen utilizar como contenedores de datos, además proporcionan soporte para crear <em>Builders</em> a partir de ellas.</p>
<p>Aunque Immutables y Lombok son librerías que proporcionan una funcionalidad similar su implementación entre ellas es muy diferente, la implementación de Immutables se realiza generando código con un procesador de anotaciones y Lombok manipula el <em>bytecode</em> de las clases. La aproximación de Immutables es más limpia y potencialmente menos problemática que Lombok pero Lombok es una librería muy popular y sigue utilizándose.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/formas-de-reducir-el-codigo-de-las-clases-pojo-de-java/">Formas de reducir el código de las clases POJO de Java</a></li>
</ul>
<h3 id="librería-para-utilizar-el-patrón-builder-sobre-clases-_record_">Librería para utilizar el patrón Builder sobre clases <em>Record</em></h3>
<p>No habiendo ninguna restricción para utilizar una versión de Java a partir de la 16 no es necesaria una alternativa a los <em>Records</em> ni requiere dependencias adicionales. Aunque los <em>Records</em> dan solución a una necesidad de crear clases de datos que suelen tener todas las aplicaciones no cubren todas las necesidades como es el caso de crear instancias con una clase <em>Builder</em>.</p>
<p>Hay una librería <a href="https://github.com/Randgalt/record-builder">RecordBuilder</a> para disponer de la funcionalidad del patrón <em>Builder</em> para las clases <em>Record</em>. Con leer <a href="https://github.com/Randgalt/record-builder/blob/master/README.md">el archivo README.md del repositorio Git</a> es más que suficiente para conocerlo todo sobre como usarlo.</p>
<h3 id="ejemplo-de-patrón-_builder_-con-clase-_record_">Ejemplo de patrón <em>Builder</em> con clase <em>Record</em></h3>
<p>El uso de la librería <em>RecordBuilder</em> para generar clases que implementan el patrón <em>Builder</em> es muy sencillo una vez están definidas las clases <em>Record</em>, basta con anotarlas con la anotación <em>RecordBuilder</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.bloblogbitix.javarecordbuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Collection</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.soabase.recordbuilder.core.RecordBuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RecordBuilder</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">record</span> <span class="nf">Book</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">,</span> <span class="n">Collection</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">authors</span><span class="o">,</span> <span class="n">String</span> <span class="n">isbn</span><span class="o">,</span> <span class="kt">int</span> <span class="n">year</span><span class="o">,</span> <span class="kt">int</span> <span class="n">pages</span><span class="o">)</span> <span class="o">{}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Book.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.bloblogbitix.javarecordbuilder</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">authors</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;Pedro Igor Silva&#34;</span><span class="o">,</span> <span class="s">&#34;Stian Thorgersen&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Book</span> <span class="n">book</span> <span class="o">=</span> <span class="n">BookBuilder</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">title</span><span class="o">(</span><span class="s">&#34;Keycloak - Identity and Access Management for Modern Applications &#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">authors</span><span class="o">(</span><span class="n">authors</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">isbn</span><span class="o">(</span><span class="s">&#34;978-1800562493&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">year</span><span class="o">(</span><span class="n">2021</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">pages</span><span class="o">(</span><span class="n">362</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">book</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Book[title=Keycloak - Identity and Access Management for Modern Applications , authors=[Pedro Igor Silva, Stian Thorgersen], isbn=978-1800562493, year=2021, pages=362]&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Como ocurre con cualquier otra librería hay que incluirla como dependencia del proyecto en este caso con la herramienta de construcción <a href="https://gradle.org/">Gradle</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">annotationProcessor</span> <span class="s1">&#39;io.soabase.record-builder:record-builder-processor:34&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compileOnly</span> <span class="s1">&#39;io.soabase.record-builder:record-builder-core:34&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.bloblogbitix.javarecordbuilder.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRecordBuilder">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/07/opciones-de-arquitectura-para-emitir-trazas-en-una-aplicacion-java/</id>
        <title>Opciones de arquitectura para emitir trazas en una aplicación Java</title>
        <updated>2022-07-28T19:30:00+02:00</updated>
        <published>2022-07-28T19:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/07/opciones-de-arquitectura-para-emitir-trazas-en-una-aplicacion-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Incluso para emitir trazas que en principio es algo sencillo y que se da por hecho surgen varias opciones de arquitectura o diseño. Dos de esas decisiones son acoplarse o no a la librería de <em>logging</em> que se use e inyectar de forma estática o por el constructor la instancia de la clase con la que se emiten trazas. Estas decisiones conviene recogerlas en un documento de <em>Architecture Decision Record</em> por si en un futuro hay que revisar las decisiones tomadas con anterioridad o para que una persona en un futuro tenga el contexto y un registro de las decisiones que se han tomado, el contexto, opciones evaluadas, argumentos y decisiones tomadas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una de las cosas más esenciales de una aplicación es generar trazas para tener observabilidad de que está realizando la aplicación y un registro que permita consultar qué ha pasado en cualquier momento que sea necesario, que lo será. Las trazas no son solo por observabilidad a veces también por cumplimiento de requerimientos de seguridad y auditoría.</p>
<p>Por tanto, usar una librería de <em>logging</em> es una de las dependencias básicas, en Java las librerías de logging más utilizadas son <a href="https://logging.apache.org/log4j/2.x/">log4j 2</a>, <a href="https://www.slf4j.org/">SLF4J</a> y las propias <a href="https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/package-summary.html">clases del JDK para logging</a> del paquete conocido como JUL.</p>
<p>Además de la librería en concreto que usada hay otras decisiones de arquitectura que tomar al aplicar en una aplicación. Independientemente de la opción que se use de todas estas opciones, argumentos y decisiones lo ideal es registrar en un documento que se suele denominar <em>Architecture Decision Record</em> de modo que en un futuro u otra persona pueda tener el contexto de qué y por qué se tomaron en su momento algunas decisiones.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/09/funcionalidades-que-necesitan-las-aplicaciones-basadas-en-microservicios-y-herramientas-que-las-proporcionan/">Funcionalidades que necesitan las aplicaciones basadas en microservicios y herramientas que las proporcionan</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/01/las-clases-para-logging-del-paquete-jul-incluidas-en-la-api-de-java/">Las clases para logging del paquete JUL incluidas en la API de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/01/documentacion-para-registrar-las-decisiones-de-arquitectura-en-software-e-infraestructura/">Documentación para registrar las decisiones de arquitectura en software e infraestructura</a></li>
</ul>
<p>En un <a href="https://martinfowler.com/articles/domain-oriented-observability.html">artículo publicado en el sitio web de Martin Fowller sobre la observabilidad en el dominio</a> hablan sobre cómo diseñar las clases para añadir esta funcionalidad al código. En este artículo comento sobre la trazabilidad de una aplicación pero lo mismo es aplicable a las métricas como se comenta en el sitio web de Fowller.</p>
<p>Después de leer el artículo de Fowller y este artículo, ¿qué opción usas? ¿alguna otra opción o variante? ¿qué opinas?</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="opciones">Opciones</h3>
<p>Estas cuatro opciones tratan dos asuntos diferentes. Las dos primeras tratan de si crear una abstracción o usar la librería de <em>logging</em> directamente sin ninguna abstracción.</p>
<p>La tercera y la cuarta tratan otro aspecto que es como inyectar el <em>logger</em> en las clases que emitan trazas, en realidad no son excluyentes y como comento se puede optar por una u otra forma de inyectar el <em>logger</em> según la clase.</p>
<h4 id="acoplarse-a-la-librería-que-emite-los-_logs_">Acoplarse a la librería que emite los <em>logs</em></h4>
<p>En esta opción las clases de la librería de <em>logging</em> se consideran como parte de la plataforma y el código se acopla a ellas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">Service</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Service</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Service</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Message&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Service-1.java</span>
    </div>
</div>
<h4 id="abstracción-sobre-la-librería-que-emite-los-_logs_">Abstracción sobre la librería que emite los <em>logs</em></h4>
<p>Para no acoplarse a una librería en concreto de <em>logging</em> se crea una abstracción que independice de la librería de modo que si esta cambia no haga falta el código sino simplemente la implementación de la abstracción.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.platform.logging.Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.platform.logging.LogManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">Service</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Service</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Service</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Message&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Service-2.java</span>
    </div>
</div>
<h4 id="inyección-estática-del-_logger_">Inyección estática del <em>logger</em></h4>
<p>La forma habitual que ponen de ejemplo las librerías de <em>logging</em> para inyectar la instancia de la clase de <em>logger</em> se realizan mediante una factoría e inicialización estática.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.platform.logging.Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.platform.logging.LogManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">Service</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Service</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Service</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Message&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Service-3.java</span>
    </div>
</div>
<h4 id="inyección-por-constructor-del-_logger_">Inyección por constructor del <em>logger</em></h4>
<p>En vez de inyectar de forma estática el <em>logger</em>, la instancia se inyecta en el constructor como cualquier otro colaborador de la clase.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.platform.logging.Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="n">Service</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Logger</span> <span class="n">logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Service</span><span class="o">(</span><span class="n">Logger</span> <span class="n">logger</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">logger</span> <span class="o">=</span> <span class="n">logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">method</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Message&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Service-4.java</span>
    </div>
</div>
<h3 id="argumentos">Argumentos</h3>
<p>Evitar el acoplamiento es algo deseable dado que permite flexibilidad y realizar cambios afectando a una una pequeña parte del código. Con una abstracción es posible cambiar de una implementación a otra y los cambios solo afectan a la abstracción y no al resto del código.</p>
<p>El inconveniente de la abstracción es que requiere crearla y mantenerla y que posiblemente esa abstracción ofrece un subconjunto pequeño de toda la funcionalidad que ofrece la librería de <em>logging</em> que se use. Aún así el subconjunto de la funcionalidad es aquel que realmente se usa.</p>
<p>Incluso aunque el JDK incluye clases de <em>logging</em> y el acoplamiento sea con las clases del JDK por flexibilidad se puede desear crea la abstracción por la posibilidad de cambiar la librería de <em>logging</em> a otra.</p>
<p>La librería SL4J precisamente es una fachada o abstracción sobre otras librerías de <em>logging</em> que permite cambiar de una implementación de librería a <em>logging</em> a otra sin necesidad de cambios en el código de modo que en vez de crear una abstracción propia la abstracción a la que acoplarse puede ser esta.</p>
<p>Otro aspecto a considerar es cómo inyectar la dependencia del logger, esto es independiente de si usa o no una abstracción propia o de otra librería como la de SLF4J.</p>
<p>La inyección estática es simple pero no permite o dificulta hacer pruebas unitarias sobre el logger que es un aspecto de la observabilidad que tal vez se desea probar, por ejemplo por motivos de seguridad se desea que el código emita trazas de inicios de sesión o acciones relevantes que permite tener un log en caso de querer auditar con posterioridad. A veces el único efecto observable de un flujo de código es que se emite una traza.</p>
<p>La inyección como una dependencia del <em>logger</em> como cualquier otro colaborador permite realizar teses unitarios de forma más fácil. La dependencia se añade simplemente en el constructor de la clase. Para las clases que son construidas con el contenedor de dependencias es simple y no requiere más que añadir de forma explícita el colaborador en el constructor, crear una variable y realizar la asignación en la implementación del constructor, estos algo más complejo que la inyección estática pero aporta otras ventajas.</p>
<p>Para las clases que no son construidas con el contenedor de dependencias tener que pasar de forma explícita el <em>logger</em> es una molestia, posiblemente hace el código más complicado además de ser un aspecto de la aplicación no relacionado con la lógica de negocio.</p>
<p>Estas opciones no son excluyentes, en aquellas clases que son creadas por el contenedor dejar al contenedor inyectar la dependencia del <em>logger</em> y el aquellos puntos de la aplicación como clases de dominio no construidas por el contenedor o en clases con métodos estáticos utilizar una inyección estática, sabiendo que en la inyección estática las pruebas unitarias con más complicadas.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.javacodegeeks.com/2019/03/logging-without-static-logger.html">Logging Without a Static Logger</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/</id>
        <title>Interfaz web para JMX con Hawtio</title>
        <updated>2022-07-14T00:00:00+02:00</updated>
        <published>2022-07-14T00:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Una cosa es la funcionalidad que proporciona una aplicación y otra las tareas de administración y mantenimiento relacionas con la aplicación. Estas tareas de administración y mantenimiento no son tareas destinadas a los usuarios sino destinadas a los administradores de la aplicación. Estas tareas pueden ser manuales y ejecutadas a conveniencia siendo muy útil poder ejecutarlas sin necesidad de realizar cambios en el código ni un despliegue de la aplicación. La tecnología JMX de Java define una arquitectura para administrar y monitorizar aplicaciones que se puede utilizar para estas tareas administrativas, Hawtio es una interfaz que permite el acceso y ejecución a JMX mediante un navegador y proporciona una librería para integrase con Spring Boot.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Las computadoras y las aplicaciones realizan sus funciones de forma rápida y determinista ofreciendo su servicio a sus usuarios. El software generalmente se diseña para el caso en el que todo funcione correctamente pero también ha de estar preparado para los casos en los que se produzca un error ya sea simplemente emitiendo una traza o autocorrigiendo el problema con un reintento.</p>
<p>Especialmente con el advenimiento de los microservicios que se basan en la comunicación por red las aplicaciones han de estar preparadas para los errores. Si un proceso en una computadora es muy fiable salvo por fallo del hardware las redes son mucho menos fiables más cuando hay comunicación entre varios servicios dado que la conectividad de red se puede perder o un servicio puede fallar repentinamente por un fallo de software o por un fallo de hardware.</p>
<p>Para reparar los efectos de estos errores o simplemente para ejecutar de forma explícita ciertos procesos administrativos independientemente de si es a raíz de un error o no. Las aplicaciones puden incorporar estas adicionalmente estas funcionalidades administrativas y proporcionar una forma de invocarlas, de forma sencilla, rápida y evitando en la medida posible errores manuales.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="la-funcionalidad-principal-y-las-tareas-administrativas">La funcionalidad principal y las tareas administrativas</h3>
<p>Seguramente la funcionalidad principal que proporciona una aplicación no requiera ninguna acción, mantenimiento ni acciones manuales. La aplicación mientras esté en funcionamiento proporcionará su servicio ya sea una aplicación web que sirva contenido para un navegador web o una API basada en REST que proporcione datos y reciba peticiones de otras aplicaciones.</p>
<p>Otras funcionalidades relacionadas con la aplicación se desean ejecutar por ejemplo para corregir algún error puntual en la aplicación, para obtener algún dato o simplemente para realizar una acción que se desea iniciar de forma manual. Las tareas administrativas pueden ser parte una parte de la funcionalidad que es necesario ejecutar a conveniencia en momentos determinados.</p>
<p>Hay que poder acceder a ellas de alguna forma, idealmente mejor sin desplegar una nueva versión por los riesgos de un despliegue sobre todo si los procesos y aseguramiento de calidad no permiten hacer despliegues con confianza o los despliegues requieren demasiado tiempo o suponen una interrupción del servicio. Que esté la funcionalidad disponible e invocarla en el momento que se necesite hace más sencilla la necesidad.</p>
<h3 id="la-tecnología-jmx-de-java">La tecnología JMX de Java</h3>
<p>La tecnología <a href="https://www.oracle.com/technical-resources/articles/javase/jmx.html">JMX</a> es un estándar de Java que define una arquitectura para administrar y monitorizar aplicaciones y servicios Java. Desde el punto de vista del desarrollador JMX requiere programar unas clases de Java siguiendo las convenciones del estándar denominadas MBean. Las instancias de estas clases son registradas y administradas por el contenedor de JMX donde quedan disponibles para uso.</p>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/">Interfaz de monitorización e instrumentalización con JMX en aplicaciones Java</a> comentaba cómo crear una clase MBean con unos métodos para realizar acciones y otro método para devolver datos. El ejemplo incluía la forma de usar JMX en una aplicación Java y en una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> con el soporte que ofrece el <em>framework</em> para la utilización de <a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#actuator.jmx">JMX en Spring Boot</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springboothawtio</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">HelloMBean</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">sayHello</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="nf">getName</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HelloMBean.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springboothawtio</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.jmx.export.annotation.ManagedResource</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.jmx.export.annotation.ManagedOperation</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.jmx.export.annotation.ManagedAttribute</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@ManagedResource</span><span class="o">(</span><span class="n">objectName</span> <span class="o">=</span> <span class="s">&#34;io.github.picodotdev.blogbitix:type=Hello&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hello</span> <span class="kd">implements</span> <span class="n">HelloMBean</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ManagedOperation</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">sayHello</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;hello, world&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ManagedOperation</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ManagedAttribute</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Reginald&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Hello.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springboothawtio</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.EnableMBeanExport</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableMBeanExport</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nl">spring:</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">jmx</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">enabled</span><span class="o">:</span> <span class="kc">true</span>&#10;</span></span><span class="line"><span class="cl"><span class="nl">&#10;</span></span></span><span class="line"><span class="cl"><span class="nl">management:</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">server</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">port</span><span class="o">:</span> <span class="n">8081</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">endpoints</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">web</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">exposure</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">include</span><span class="o">:</span> <span class="s">&#34;hawtio,jolokia&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nl">&#10;</span></span></span><span class="line"><span class="cl"><span class="nl">hawtio:</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">authenticationEnabled</span><span class="o">:</span> <span class="kc">false</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.7.1&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;io.hawt:hawtio-bom:2.15.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;io.hawt:hawtio-springboot&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springboothawtio.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">tasks</span><span class="o">.</span><span class="na">named</span><span class="o">(</span><span class="s1">&#39;test&#39;</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">useJUnitPlatform</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<h3 id="la-interfaz-hawtio">La interfaz Hawtio</h3>
<p>La tecnología de JMX es una buena opción como punto de entrada en la implementación de esas tareas administrativas. Sin embargo, es necesario una forma de poder invocarlas.</p>
<p>El proyecto <a href="https://hawt.io/">Hawtio</a> proporciona una interfaz web en la que poder ver, obtener datos e invocar las operaciones ofrecidas por los MBeans registrados en el contenedor de JMX, los propios de la aplicación y muchos otros que proporciona Java y en el caso de utilizarlo Spring Boot.</p>
<p>Hawtio utiliza el proyecto <a href="https://jolokia.org/">Jolokia</a> que expone mediante una interfaz REST los MBeans del contenedor JMX, Hawtio utiliza la interfaz REST de Jolokia para invocar las operaciones. Spring Boot proporciona soporte para la implementación de JMX y Hawtio proporciona una dependencia para su integración con Spring Boot que añade en la interfaz de administración un <em>endpoint</em> para acceder a la consola de Hawtio.</p>
<p>Las operaciones administrativas seguramente sean funcionalidades que realicen tareas que no deban ser accesibles para los usuarios y han de estar protegidos. Hawtio permite la integración con Keycloak para la autenticación y permite solicitar credenciales para el acceso a la consola web.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/hawtio-console_huab49737b236e0ceb342763f3af53efc8_92906_2560x1440_fit_box_3.png" data-gallery="" title="Consola de Hawtio como un actuator en aplicación de Spring Boot"><img src="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/hawtio-console_huab49737b236e0ceb342763f3af53efc8_92906_650x450_fit_box_3.png" width="650" height="364" alt="Consola de Hawtio como un actuator en aplicación de Spring Boot" title="Consola de Hawtio como un actuator en aplicación de Spring Boot"  class="lozad "></a></p>
<figcaption>Consola de Hawtio como un actuator en aplicación de Spring Boot</figcaption>
</figure>
</div>
<h3 id="añadir-seguridad-a-la-interfaz-de-hawtio-con-hashicorp-boundary">Añadir seguridad a la interfaz de Hawtio con Hashicorp Boundary</h3>
<p>Por motivos de seguridad es deseable que la consola web de Hawtio no esté accesible mediante una conexión directa. <a href="https://www.boundaryproject.io/">Bondary</a> es uno de los productos de <a href="https://www.hashicorp.com/">Hashicorp</a> que proporciona la funcionalidad de un bastión y un <em>proxy</em> de conexión a servicios internos, es más seguro que una VPN ya que a diferencia de una VPN únicamente otorga acceso a los sistemas necesarios y no a toda una red interna completa.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/">Acceso simple y seguro a sistemas remotos con Boundary</a></li>
</ul>
<p>El uso de Boundary requiere una conexión a una base de datos, en el modo de desarrollo inicia una instancia de <a href="https://www.postgresql.org/">PostgreSQL</a> mediante <a href="https://www.docker.com/">Docker</a>. Una vez iniciado hay que autenticarse para obtener un <em>token</em> que otorga las credenciales de autorización de conexión a los diferentes sistemas o <em>targets</em> como los denomina Boundary.</p>
<p>Por defecto Boundary en el modo desarrollo crea una definición del <em>host</em> local y un <em>target</em> al puerto <em>22</em> de la máquina local. Dado que Hawtio seguramente esté en otros puertos, en el ejemplo en el puerto 8081 es necesario crear un <em>target</em> y añadir el <em>host</em> para la máquina local que permita la conexión a ese puerto.</p>
<p>Con Boundary iniciado y el <em>target</em> definido hay que establecer el túnel con la conexión a la máquina destino, esto crea un túnel abriendo un puerto en la máquina local que tiene como destino el <em>target</em> que se ha utilizado para la conexión, en este ejemplo a la propia máquina local al puerto <em>8081</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-console_hua3b1cafcc8796ee645c1aab45a3cb181_73517_2560x1440_fit_box_3.png" data-gallery="" title="Consola de Boundary"><img src="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-console_hua3b1cafcc8796ee645c1aab45a3cb181_73517_200x150_fit_box_3.png" width="200" height="112" alt="Consola de Boundary" title="Consola de Boundary"  class="lozad "></a></p>
<figcaption>Consola de Boundary</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-target-1_hu63362bb9c631c9095169f69b761c1192_114047_2560x1440_fit_box_3.png" data-gallery="" title="Creación de un target en Boundary"><img src="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-target-1_hu63362bb9c631c9095169f69b761c1192_114047_200x150_fit_box_3.png" width="136" height="150" alt="Creación de un target en Boundary" title="Creación de un target en Boundary"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-target-2_hu9f746e9fd5c572d5f381dc2440b2d1db_80836_2560x1440_fit_box_3.png" data-gallery="" title="Creación de un target en Boundary"><img src="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-target-2_hu9f746e9fd5c572d5f381dc2440b2d1db_80836_200x150_fit_box_3.png" width="136" height="150" alt="Creación de un target en Boundary" title="Creación de un target en Boundary"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-target-3_huc29e81c93891486d6c47d0dbcbe91f94_88702_2560x1440_fit_box_3.png" data-gallery="" title="Creación de un target en Boundary"><img src="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-target-3_huc29e81c93891486d6c47d0dbcbe91f94_88702_200x150_fit_box_3.png" width="136" height="150" alt="Creación de un target en Boundary" title="Creación de un target en Boundary"  class="lozad "></a></p>
<figcaption>Creación de un target en Boundary</figcaption>
</figure>
</div>
<p>Antes de establecer el túnel de la conexión hay que autenticarse en Boudary lo que otorga un <em>token</em> para establecer la conexión, en el siguiente comando el <em>token</em> se guarda en una variable de entorno que comando de Buildary utiliza para la autorización al solicitar la conexión, en la conexión se indica el <em>target</em> y Boundary proporciona el puerto del túnel y el identificativo de la sesión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ boundary authenticate password -auth-method-id<span class="o">=</span>ampw_1234567890 -login-name<span class="o">=</span>admin -password<span class="o">=</span>password&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">Authentication information:&#10;</span></span><span class="line"><span class="cl">  Account ID:&nbsp;&nbsp;&nbsp;&nbsp;  acctpw_1234567890&#10;</span></span><span class="line"><span class="cl">  Auth Method ID:  ampw_1234567890&#10;</span></span><span class="line"><span class="cl">  Expiration Time: Thu, <span class="m">21</span> Jul <span class="m">2022</span> 19:03:46 CEST&#10;</span></span><span class="line"><span class="cl">  User ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u_1234567890&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">at_Gf2PG4GGcQ_s17U6Fz5B2DGh7EBdAuAGaifTLUCV1LSMRHZXL7vme1L6RpcroPW39DSEjAMtJcvEhN6otiod3RSMRKRX7RGUndqACd2jx2i2gHBMr7Rdih8yFF&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">export</span> <span class="nv">BOUNDARY_TOKEN</span><span class="o">=</span><span class="s2">&#34;at_Gf2PG4GGcQ_s17U6Fz5B2DGh7EBdAuAGaifTLUCV1LSMRHZXL7vme1L6RpcroPW39DSEjAMtJcvEhN6otiod3RSMRKRX7RGUndqACd2jx2i2gHBMr7Rdih8yFF&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ boundary connect -target-id ttcp_99NRL1z7Fw&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Proxy listening information:&#10;</span></span><span class="line"><span class="cl">  Address:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 127.0.0.1&#10;</span></span><span class="line"><span class="cl">  Connection Limit:&nbsp;&nbsp;&nbsp;&nbsp;-1&#10;</span></span><span class="line"><span class="cl">  Expiration:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Fri, <span class="m">15</span> Jul <span class="m">2022</span> 03:08:05 CEST&#10;</span></span><span class="line"><span class="cl">  Port:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">43923</span>&#10;</span></span><span class="line"><span class="cl">  Protocol:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcp&#10;</span></span><span class="line"><span class="cl">  Session ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  s_jL5oGhBjb2</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>boundary-connect.sh</span>
    </div>
</div>
<p>Esto proporciona un puerto en la máquina local abierto contra Boundary y este contra la máquina y el puerto destino. En este ejemplo está todo en la máquina local pero a efectos prácticos ahora es posible utilizar el puerto proporcionado por Boundary para hacer la conexión a la consola de Hawtio, en vez del puerto <em>8081</em> la conexión a través de Boundary se realiza mediante el puerto <em>43923</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-hawtio_hu2fcddd69412a17c72d44de86c1be3b3d_93247_2560x1440_fit_box_3.png" data-gallery="" title="Conexión a Hawtio a través de Boundary"><img src="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-hawtio_hu2fcddd69412a17c72d44de86c1be3b3d_93247_650x450_fit_box_3.png" width="650" height="364" alt="Conexión a Hawtio a través de Boundary" title="Conexión a Hawtio a través de Boundary"  class="lozad "></a></p>
<figcaption>Conexión a Hawtio a través de Boundary</figcaption>
</figure>
</div>
<p>Además, con Boundary es posible monitorizar las conexiones y sesiones establecidas lo que proporciona medidas adicionales de seguridad y auditoría.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-sessions_hu02b45c589b8b257698a797c7d9b5f7a0_80117_2560x1440_fit_box_3.png" data-gallery="" title="Sesiones establecidas y activas establecidas a través de Boudary"><img src="https://picodotdev.github.io/blog-bitix/2022/07/interfaz-web-para-jmx-con-hawtio/images/boundary-sessions_hu02b45c589b8b257698a797c7d9b5f7a0_80117_650x450_fit_box_3.png" width="650" height="377" alt="Sesiones establecidas y activas establecidas a través de Boudary" title="Sesiones establecidas y activas establecidas a través de Boudary"  class="lozad "></a></p>
<figcaption>Sesiones establecidas y activas establecidas a través de Boudary</figcaption>
</figure>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringBootHawtio">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/07/generar-releases-de-un-proyecto-java-con-gradle/</id>
        <title>Generar releases de un proyecto Java con Gradle</title>
        <updated>2022-07-08T16:00:00+02:00</updated>
        <published>2022-07-08T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/07/generar-releases-de-un-proyecto-java-con-gradle/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Utilizar las etiquetas de las herramientas de control de versiones permite conservar ciertos hitos o <em>commits</em> importantes para consultarlos en el futuro. Generar una versión de un proyecto suele implicar generar una etiqueta en la herramienta de control de versiones. Dado que la generación de nuevas versiones es parte del ciclo de vida de un proyecto hay <em>plugins</em> tanto para Maven como para Gradle que ofrecen como funcionalidad automatizar esta proceso.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La generación de <em>releases</em> es una tarea habitual en un proyecto, la <em>release</em> es una forma de identificar de forma exacta la versión que se utiliza para desplegar en un entorno o en producción o es la versión que utilizan otros proyectos para utilizarla como una dependencia.</p>
<p>Hay varias nomenclaturas para denominar a las versiones. En Java hay varios <em>plugins</em> para las herramientas de construcción <a href="https://maven.apache.org/">Maven</a> o <a href="https://gradle.org/">Gradle</a> para los proyectos Java que permite generar <em>releases</em>.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="las-_releases_-de-un-proyecto-o-artefacto">Las <em>releases</em> de un proyecto o artefacto</h3>
<p>En el ciclo de vida de un proyecto o repositorio hay ciertos hitos importantes como cómo son los momentos en los que se desea generar una nueva versión a partir de un <em>commit</em> ya sea para ser desplegada en un servidor o ser usada por otros proyectos como una dependencia.</p>
<p>Las <em>releases</em> son los <em>commits</em> a los que se les asigna una versión y a partir de los cuales se generan los artefactos del repositorio o proyecto. Una forma de recordar esos hitos en el repositorio de control de versiones como <a href="https://git-scm.com/">Git</a> es creando un <em>tag</em>. Un <em>tag</em> es simplemente asignar una etiqueta con un nombre más semántico y fácilmente identificable que el <em>hash</em> del <em>commit</em>.</p>
<p>Una forma habitual para los nombres de las versiones o <em>releases</em> es utilizar una nomenclatura compuesta de tres números separados por un punto, por ejemplo 1.2.6, un número mayor en esta versiones implica una versión más reciente y seguramente con más funcionalidades y mejorada. Cada uno de estos números se denominan <em>major.minor.patch</em> donde por norma general el <em>major</em> se incrementa en cada versión destacada o incompatible respecto a las versiones anteriores, <em>minor</em> se incrementa cuando hay cambios importantes con alguna funcionalidad destacada añadida pero que siguen siendo compatibles con versiones anteriores y <em>patch</em> se incrementa cuando los cambios de la nueva versión son menores como corrección de errores o fallos de seguridad pero sin nuevas funcionalidades.</p>
<p>Dado que la construcción y ciclo de vida del proyecto se gestiona generalmente con una herramienta de construcción la generación de <em>releases</em> se automatiza con Maven o Gradle en el caso de proyectos Java.</p>
<h3 id="_plugin_-de-_release_-para-gradle"><em>Plugin</em> de <em>release</em> para Gradle</h3>
<p>Gradle no dispone de un <em>plugin</em> oficial para generar <em>releases</em> de un proyectos y hay que recurrir a <em>plugins</em> desarrollados por un tercero. En Gradle hay dos <em>plugins</em> destacables que permiten automatizar la generación de <em>releases</em> en un proyecto. El segundo no ha generado una nueva versión desde hace cinco años con lo que parece más recomendable el primero por estar mejor mantenido actualmente</p>
<ul>
<li><a href="https://axion-release-plugin.readthedocs.io/en/latest/">axion-release-plugin</a></li>
<li><a href="https://github.com/researchgate/gradle-release">gradle-release</a></li>
</ul>
<p>El <a href="https://axion-release-plugin.readthedocs.io/en/latest/"><em>plugin</em> de Axion</a> para generar <em>releases</em> la forma que utiliza para generar una <em>release</em> es creando un <em>tag</em> en el repositorio de código fuente siguiendo la nomenclatura <em>major.minor.patch</em> según las etiquetas ya creadas e incrementando el número de uno de estos tres elementos.</p>
<p>Que la release consista simplemente en crear una etiqueta tiene la ventaja de que no es necesario crear <em>commits</em> adicionales en el repositorio de código fuente lo que potencialmente invalida la versión probada en un proceso de aseguramiento de calidad.</p>
<h3 id="_plugin_-de-_release_-para-maven"><em>Plugin</em> de <em>release</em> para Maven</h3>
<p>El <a href="https://github.com/researchgate/gradle-release"><em>plugin</em> de <em>release</em> de Maven</a> es ofrecido de forma oficial por los desarrolladores de esta herramienta de construcción.</p>
<p>Su forma de funcionamiento también incrementa las versiones siguiendo la nomenclatura <em>major.minor.patch</em> pero dado que en Maven la versión del proyecto se especifica en los archivos descriptores de construcción <em>pom.xml</em> implica que el proceso de <em>release</em> crea <em>commits</em> en el repositorio de código fuente.</p>
<h3 id="ejemplo-usando-el-_plugin_-de-_release_-para-gradle">Ejemplo usando el <em>plugin</em> de <em>release</em> para Gradle</h3>
<p>Usar el <em>plugin</em> de Axion en Gradle requiere añadir el <em>plugin</em> en la lista de <em>plugins</em> del proyecto. El <em>plugin</em> ofrece una sección en la que personalizar algunas opciones de configuración según las preferencias que se deseen en la sección <em>scmVersion</em>. Para diferenciar las etiquetas de <em>releases</em> del resto de etiquetas se puede establecer en prefijo, en el ejemplo con la letra <em>v</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java-gradle-plugin&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;maven-publish&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;pl.allegro.tech.build.axion-release&#39;</span> <span class="n">version</span> <span class="s1">&#39;1.13.14&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">scmVersion</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tag</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">prefix</span> <span class="o">=</span> <span class="s1">&#39;v&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">project</span><span class="o">.</span><span class="na">with</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.build.gradle.plugin&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">version</span> <span class="o">=</span> <span class="n">scmVersion</span><span class="o">.</span><span class="na">version</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gradlePluginPortal</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;net.sourceforge.pmd:pmd:6.44.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.puppycrawl.tools:checkstyle:10.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.github.spotbugs.snom:spotbugs-gradle-plugin:5.0.6&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.owasp.dependencycheck:org.owasp.dependencycheck.gradle.plugin:7.1.0.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.owasp.dependencycheck:org.owasp.dependencycheck.gradle.plugin:7.1.0.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;pl.allegro.tech.build:axion-release-plugin:1.13.14&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">testImplementation</span> <span class="s1">&#39;org.junit.jupiter:junit-jupiter:5.8.1&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">publishing</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">maven</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;ArtifactsRespotiry&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">url</span> <span class="o">=</span> <span class="n">uri</span><span class="o">(</span><span class="s2">&#34;https://maven.pkg.github.com/picodotdev/github-packages&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">credentials</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">username</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">findProperty</span><span class="o">(</span><span class="s2">&#34;gpr.user&#34;</span><span class="o">)</span> <span class="o">?:</span> <span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="s2">&#34;USERNAME&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">password</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">findProperty</span><span class="o">(</span><span class="s2">&#34;gpr.key&#34;</span><span class="o">)</span> <span class="o">?:</span> <span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="s2">&#34;TOKEN&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">gradlePlugin</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javaGradlePlugin</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.build.gradle.plugin&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementationClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.build.gradle.plugin.JavaGradlePluginPlugin&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">tasks</span><span class="o">.</span><span class="na">named</span><span class="o">(</span><span class="s1">&#39;test&#39;</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">useJUnitPlatform</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>El comando principal para generar una nueva versión es tan simple como utilizar una tarea ofrecida por el <em>plugin</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew release&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-release.sh</span>
    </div>
</div>
<p>En la versión actual del proyecto se obtiene con otra tarea añadida por el proyecto. En esencia busca entre los <em>tags</em> en el repositorio y según el <em>commit</em> actual devuelve la versión actual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew currentVersion&#10;</span></span><span class="line"><span class="cl">Project version: 0.1.1&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-currentversion.sh</span>
    </div>
</div>
<p>Dado que las releases son simplemente etiquetas en el repositorio de código fuente estas pueden verse con el comando de Git para listar las etiquetas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git tag&#10;</span></span><span class="line"><span class="cl">v0.1.0&#10;</span></span><span class="line"><span class="cl">v0.1.1</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>git-tag.sh</span>
    </div>
</div>
<p>El comportamiento por defecto de la tarea <em>release</em> es incrementar el componente menos significativo es incrementado que estando la versión compuesta de tres elementos significa que se incrementa el número de <em>patch</em>, el <em>plugin</em> ofrece también la posibilidad de especificar el número de versión que se desea o incrementar otro elemento.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew markNextVersion -Prelease.version<span class="o">=</span>2.0.0&#10;</span></span><span class="line"><span class="cl">$ ./gradlew markNextVersion -Prelease.incrementer<span class="o">=</span>incrementMajor&#10;</span></span><span class="line"><span class="cl">$ ./gradlew markNextVersion -Prelease.incrementer<span class="o">=</span>incrementMinor&#10;</span></span><span class="line"><span class="cl">$ ./gradlew markNextVersion -Prelease.incrementer<span class="o">=</span>incrementPatch</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-marknextversion.sh</span>
    </div>
</div>
<p>En caso de utilizar GitHub al generar la versión y etiqueta y subirla al repositorio lo añade en la sección de <em>releases</em> en la página de GitHub del proyecto.</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/06/hemeroteca-21/</id>
        <title>Hemeroteca #21</title>
        <updated>2022-06-30T23:00:00+02:00</updated>
        <published>2022-06-30T23:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/06/hemeroteca-21/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En el resumen de este semestre en Blog Bitix está el haber colaborado con una marca de teclados mecánicos con varios artículos promocionados la primera de este tipo en el blog. He añadido la plataforma publicitaria que hasta el momento va a suponer los ingresos del blog. En cuanto a alis un nuevo diseño para su página web y unos pocos cambios con mejoras en el script. Por la parte de artículos del blog he estado publicado habitualmente un único artículo en vez de dos como en otras épocas pasadas, unos 25 artículos únicos y originales más y van ya más de 600.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Hay algunos medios que hacen cosas horribles como hablar de algo y no poner ni siquiera un enlace a la página de lo que se habla, quizá por falta de tiempo, no tener que mantener esos enlaces en el futuro o quizá pensando que así no sales de su web. En mis artículos siempre trato de incluir un enlace en la primera referencia de algo.</p>
<p>Otros seis meses de vida para Blog Bitix y otra buena cantidad de artículos publicados y algunas pocas novedades en el blog.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="blog">Blog</h3>
<p>Durante estos seis últimos meses he publicado menos artículos ya que no estoy teniendo tanto tiempo para escribir en el blog, pensar en ideas y hacer pruebas para los ejemplos. Trato de que sea al menos uno por semana habitualmente cuando hace algo más de tiempo eran casi dos por semana. Un artículo por semana sigue siendo un ritmo de publicación bastante alto y que durante la semana me ocupa varios días. Los artículos ahora los estoy publicado el jueves para tratar de tener el fin de semana libre de tareas relacionadas con el blog para tratar de descansar.</p>
<p>En las novedades del blog es que la marca de teclados <a href="https://www.dieryatech.com/">DIERYA</a> y <a href="https://kmovetech.com/">KEMOVE</a> me han enviado varios ejemplares de teclado mecánico de su catálogo que me los quedo en propiedad a cambio de publicar un artículo sobre ellos e incluir enlaces a sus web. En total han sido cuatro teclados cualquiera de ellos muy decentes, desde la gama de entrada hasta un teclado valorado en 150€, en realidad dos de estos los más caros porque se debieron confundir y me enviaron dos unidades del ARES. Además de los teclados me enviaron una funda de teclado de la que publiqué su respectivo artículo.</p>
<p>Como ya tengo el <a href="https://www.gloriousgaming.com/">Glorious</a> que es TKL y los de DIERYA y KEMOVE son 60% y no cubren mis necesidades me voy a quedar solo con el KEMOVE DK61 que es inalámbrico y algo de uso le daré para controlar la reproducción al ver una película. El resto de teclados que están completamente nuevos salvo por tener la caja abierta los pondré a la venta en <a href="https://es.wallapop.com/">Wallapop</a> porque no les voy a dar uso, ya he vendido uno así que me faltan por vender otros tres.</p>
<p>De todos estos artículos he publicado sus respectivos análisis y desempaquetados. Seguramente la marca me contactó gracias a los artículos que había publicado con anterioridad sobre teclados mecánicos. Si esto es lo que una marca le ofrece a mi cutre blog que no le ofrecerán algunas marcas a blogs, medios y canales de <a href="https://www.youtube.com/">YouTube</a> con varios cientos de miles de suscriptores y seguidores.</p>
<p>En cuanto a tareas de mejora del propio blog he migrado a <a href="https://www.google.es/intl/es/analytics/">Google Analytics</a> 4 desde Google Universal y aún ando aprendiendo el cómo medir el tráfico. Con ver las visitas de una página y evolución de visitas durante un tiempo me basta pero de momento me aclaraba más y mejor con la versión anterior de Analytics.</p>
<p>En mi blog incluyo publicidad algo que otros creadores de contenido ya sean <em>bloggers</em> o <em>youtubers</em> no consideran en sus <em>blogs</em> o canales de YouTube ya que no es su interés ni objetivo monetizar su medio. Yo si añado publicidad de AdSense y enlaces de afiliado y no me siento mal por ello ni siento que estoy perjudicando o engañando a nadie. Como ya he dicho los ingresos no compensan pero al cabo del año me permiten comprar algún juego de la <a href="https://www.playstation.com/es-es/">PlayStation</a>, juegos a los no juego tanto al menos si quiero quiero seguir escribiendo en el blog.</p>
<p>Como novedad desde hace unas semanas he incluido otra plataforma de publicidad, es <a href="http://videoo.tv/">Videoo.tv</a> que ofrece otra forma de anuncios complementarios a los ofrecidos por AdSense, al igual que AdSense no es muy intrusiva ni molesta. En el poco tiempo que la tengo me está generando más ingresos que AdSense, he estado dejando de ganar dinero. Ha sido alrededor de duplicar ingresos de AdSense que si normalmente los de AdSense estaban entre 20 y 30€ ahora pasarán a estar entre 40 y 50€ de forma regular, lo que es una mejora muy significativa. Aún pendiente de que me hagan el primer ingreso, espero que al finalizar este mes me emitan la primera factura.</p>
<p>Me contactaron los de Videoo e insertar su red publicitaria es apenas un <em>script</em> poco más que lo necesario para AdSense. La publicidad de Videoo que he insertado son vídeos que dependiendo del artículo he colocado a lado de la tabla de contenidos, si ese área está visible se muestra ahí el vídeo de publicidad y si no está visible el anuncio se muestra de forma flotante en la parte inferior derecha. Son anuncios en formato vídeo pero sin audio con lo que no son demasiado molestos.</p>
<p>Además, cuando no se muestra un vídeo de publicidad el área del anuncio hace las funciones de carrusel de artículos lo que permite mostrar en todos los artículos artículos ya publicados que quizá le interesen al lector de contenido relacionado.</p>
<h3 id="alis">alis</h3>
<p>Hace ya un tiempo que no hago ninguna modificación importante al <a href="https://github.com/picodotdev/alis/">script para instalar Arch Linux</a>. Al sitio web le he actualizado los estilos y le he añadido un par de páginas de contenido a su sitio web.</p>
<p>En cuanto a cambios ahora permite establecer puntos de montaje completamente configurables, autodetecta si el dispositivo de instalación es <em>sda</em> o <em>vda</em> según los dispositivos disponibles con lo que en máquinas virtuales es una opción menos de configuración a establecer, al sitio web también le he cambiado de Universal Analytics a Google Analytics 4, para terminar en la lista de cambios ahora permite descargar una versión en concreto del <em>script</em> en vez de siempre la última para aquellos usuarios que quieran una versión que sepan funciona.</p>
<ul>
<li><a href="https://github.com/picodotdev/alis/discussions/205">Support fully configurable custom partition scheme and mountpoints</a></li>
<li><a href="https://github.com/picodotdev/alis/discussions/206">User guide page added to site</a></li>
<li><a href="https://github.com/picodotdev/alis/discussions/207">Support to download a specific alis version</a></li>
</ul>
<p>Mantener el <em>script</em> requiere tiempo de vez en cuando y en este caso al contrario del blog si me parece bien aceptar donaciones si a algún usuario el script le parece útil. Aún no he completado todos los pasos que requiere <a href="https://github.com/sponsors">GitHub Sponsors</a> para aceptar donaciones.</p>
<p>Es difícil competir con <a href="https://github.com/archlinux/archinstall">arch-install</a>, simplemente porque esta es la versión promocionada por <a href="https://www.archlinux.org/">Arch Linux</a>. Muchos usuarios ni conocerán alis y otros que aunque la conozcan preferirán la opción recomendada por Arch Linux. Y aún así este tweet de <a href="https://www.archlinux.org/">Arcolinux</a> tuvo 200 favoritos.</p>
<blockquote>
<p>It takes 2 minutes and 39 seconds to have a clean install of Arch Linux and Xfce4 with Btrfs - AA - https://arcolinuxiso.com/aa</p>
<p><a href="https://twitter.com/arcolinux/status/1480258604162813952">Tweet</a></p>
</blockquote>
<h3 id="artículos-publicados">Artículos publicados</h3>
<p>Blog Bitix es un blog temático principalmente sobre programación Java y software libre aunque también es un blog personal e incluyo otro tipo de artículos como los análisis de los juegos de la PlayStation que voy jugando y desempaquetados de los productos que compro para uso personal.</p>
<p>Esta es la lista de los artículos publicados este primer semestre.</p>
<h4 id="java">Java</h4>
<p>A diferencia de muchos años anteriores que escribía sobre Java ahora parte de estos artículos los puedo aplicar en el trabajo y varios de estos y seguramente varios otros que escribiré están basados en necesidades y problemas que me encuentro en el ámbito laboral. Si a mi me han sido útiles quizá las personas que los lean les resulten de interés y por eso los comparto.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/01/analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java/">Analizar y detectar fallos de seguridad en las dependencias de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/01/las-clases-para-logging-del-paquete-jul-incluidas-en-la-api-de-java/">Las clases para logging del paquete JUL incluidas en la API de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/02/validar-las-propiedades-de-configuracion-de-spring-boot-al-iniciar-la-aplicacion/">Validar las propiedades de configuración de Spring Boot al iniciar la aplicación</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/03/cambiar-el-comportamiento-de-la-aplicacion-con-configuracion-anotaciones-y-condicionales-en-spring-boot/">Cambiar el comportamiento de la aplicación con configuración, anotaciones y condicionales en Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/03/novedades-de-java-18/">Novedades de Java 18</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/04/por-que-y-ejemplo-de-como-desarrollar-un-plugin-de-gradle/">Por qué y ejemplo de cómo desarrollar un plugin de Gradle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/06/publicar-y-utilizar-una-dependencia-de-java-en-un-repositorio-de-git-con-github-packages/">Publicar y utilizar una dependencia de Java en un repositorio de Git con GitHub Packages</a></li>
</ul>
<h4 id="gnulinux">GNU/Linux</h4>
<p>Aún sigo usando Arch Linux y van ya casi una misma década con la misma distribución, me funciona realmente bien, no me ha dado ningún problema grave solo unos problemas menores que con la siguiente actualización del paquete problemático se solucionan.</p>
<p>Apenas personalizo el escritorio pero con <a href="https://starship.rs/">Starship</a> si es algo que cambiado en la terminal ya que ofrece más y mejor información que el <em>prompt</em> por defecto de <a href="https://es.wikipedia.org/wiki/Bash">Bash</a>. <a href="https://github.com/twpayne/chezmoi">Chezmoi</a> es algo que daré uso para subir los <em>dotfiles</em> a un repositorio de <a href="https://github.com/">GitHub</a> si en algún momento reinstalo el sistema o cambio de distribución.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/02/que-son-y-como-gestionar-archivos-dotfiles-con-chezmoi/">Qué son los archivos dotfiles y cómo gestionarlos con chezmoi</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/03/detectar-errores-y-comprobar-la-sintaxis-de-los-scripts-de-bash/">Detectar errores y comprobar la sintaxis de los scripts de Bash</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/">Aplicación con interfaz gráfica para repositorios Git</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/">Cómo usar el comando git bisect para descubrir el primer commit con un error</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/">Los intérpretes de comandos, instalar y cambiar a otro</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/">Personalizar el símbolo del sistema de la línea de comandos con Starship</a></li>
</ul>
<h4 id="juegos">Juegos</h4>
<p>Durante estos seis meses completé los juegos de la saga Uncharted, los cuatro principales de Nathan. Al menos la historia principal ya luego conseguir el trofeo de platino requiere mucho tiempo y en muchos juegos no es que aporte mucho más y tengo otros muchos buenos juegos pendientes en la biblioteca y por comprar, me conformo con conseguir la mayor parte de los coleccionables aunque tampoco suelo conseguirlos todos. Ahora estoy ya a punto de completar otro gran juego de la consola de <a href="https://www.sony.es/">Sony</a> como es <a href="https://www.imdb.com/title/tt5838588/">God of War</a> del que publicaré su respectivo análisis y guía. El GoW es un juegazo, por favor no me hagáis elegir entre este y <a href="https://www.imdb.com/title/tt2140553/">The Last of Us</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/02/analisis-de-los-juegos-de-aventuras-uncharted-the-nathan-drake-collection/">Análisis de los juegos de aventuras Uncharted The Nathan Drake Collection</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/05/analisis-del-juego-de-aventuras-uncharted-4/">Análisis del juego de aventuras Uncharted 4</a></li>
</ul>
<h4 id="desempaquetados-y-análisis-de-tecnología-y-productos">Desempaquetados y análisis de tecnología y productos</h4>
<p>Gracias a la colaboración con la marca de teclados mecánicos KEMOVE que publicado varios artículos de sus modelos, salvo que me contacten de nuevo ya no publicaré más por ahora. También en la lista de artículos de desempaquetado está el <em>smartphone</em> de <a href="https://www.samsung.com/es/smartphones/galaxy-s21-5g/galaxy-s21-fe-5g/">Samsung Galaxy S21 FE</a> con el que renové mi anterior y más antiguo <a href="https://es.wikipedia.org/wiki/Samsung_Galaxy_S6">Samsung Galaxy S6</a>.</p>
<p>Nada que ver con la tecnología renové los mecanismos eléctricos de mi casa, una pequeña chapuza casera con la que quedado contento con el resultado final teniendo en cuenta que no sabía nada de electricidad y algunos problemas relacionados resueltos.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/01/desempaquetado-y-analisis-de-teclado-mecanico-compacto-dierya-dk61e/">Desempaquetado y análisis de teclado mecánico compacto DIERYA DK61E</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/03/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-dierya-dk63/">Desempaquetado y análisis de teclado mecánico compacto e inalámbrico DIERYA DK63</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/04/mecanismos-electricos-interruptores-enchufes-y-desempaquetado-schneider-new-unica/">Mecanismos eléctricos, interruptores, enchufes y desempaquetado Schneider New Unica</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-de-teclado-mecanico-compacto-e-inalambrico-kemove-dk61/">Desempaquetado y análisis de teclado mecánico compacto e inalámbrico KEMOVE DK61</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-y-analisis-del-smartphone-samsung-galaxy-s21-fe/">Desempaquetado y análisis del smartphone Samsung Galaxy S21 FE</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/05/desempaquetado-de-la-funda-de-teclado-tamano-60-kemove/">Desempaquetado de la funda de teclado tamaño 60% KEMOVE</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/06/desempaquetado-y-analisis-del-teclado-mecanico-compacto-e-inalambrico-kemove-ares/">Desempaquetado y análisis del teclado mecánico compacto e inalámbrico KEMOVE ARES</a></li>
</ul>
<h4 id="otros">Otros</h4>
<p>Con los ingresos de publicidad suelo hacer una donación a algún proyecto de software libre que uso, no es muy grande y solo es una pequeña parte de los ingresos del blog aún así espero que contribuya a que esos proyectos sigan mejorando y publicando nuevas versiones, esta vez fue a principio de año.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/01/articulo-9-de-yo-apoyo-al-software-libre/">Artículo #9 de Yo apoyo al software libre</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/05/por-que-es-importante-escoger-un-buen-servicio-de-hosting-para-tu-negocio-en-linea/">¿Por qué es importante escoger un buen servicio de hosting para tu negocio en línea?</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/">Herramientas de productividad para gestionar tareas y notas</a></li>
</ul>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/</id>
        <title>Personalizar el símbolo del sistema de la línea de comandos con Starship</title>
        <updated>2022-06-26T04:00:00+02:00</updated>
        <published>2022-06-26T04:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El símbolo del sistema o <em>prompt</em> en la línea de comandos de la terminal precede a la introducción del comando a ejecutar. Los intérpretes de comandos o <em>shells</em> ofrecen un símbolo del sistema por defecto que muestran cierta información y con el formato que sus desarrolladores han elegido. Además de que cada intérprete de comandos tenga uno propio estos son bastante limitados en cuanto a personalización además de utilizar una configuración poco intuitiva. Starship es un personalizador del símbolo del sistema independiente del intérprete de comandos, que ofrece una gran cantidad de módulos para personalizar el símbolo del sistema según el directorio de trabajo actual y cuya configuración es muy intuitiva y está bien documentada.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="bash.svg" title="bash.svg"  class=""></p>
</div>
<p>Para los usuarios avanzados la línea de comandos sigue siendo la forma más rápida de hacer ciertas tareas y a veces es la única forma de hacerlo ya que no se dispone de la aplicación equivalente. La línea de comandos no solo no ha desaparecido con las interfaces gráficas sino que se sigue usando mucho. Con algunas aplicaciones gráficas la línea de comandos no es necesaria y hay muchas aplicaciones gráficas para multitud de necesidades pero para algunas cosas especializadas no las hay y la mejor opción es un programa de línea de comandos.</p>
<p>Dada la utilidad de la línea de comandos esta se usa y se seguirá usando. En la línea de comandos un elemento destacado es el símbolo del sistema o <em>prompt</em> que muestra una información básica como el nombre de usuario, directorio y cierta información de estado. Hay varias utilidades para personalizar el símbolo del sistema según las preferencias del usuario.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="formas-de-personalizar-el-símbolo-del-sistema-de-la-línea-de-comandos">Formas de personalizar el símbolo del sistema de la línea de comandos</h3>
<p>La información y formato del símbolo del sistema por defecto depende del intérprete de comandos usado, <a href="https://es.wikipedia.org/wiki/Bash">bash</a> tiene un formato diferente de <a href="https://zsh.sourceforge.net/">zsh</a>. Sin utilidades adicionales tanto bash como zsh permiten personalizar el símbolo del sistema cambiando la información que muestra, el formato y los colores.</p>
<p>En bash el cambiar el formato del símbolo del sistema consiste en cambiar el valor de la variable de entorno <em>PS1</em> en el archivo <em>~/.bashrc</em> del usuario. El formato es un tanto críptico tanto para símbolos que permiten incluir los datos como el formato para los colores. Leyendo el contenido de una variable <em>PS1</em> no es fácil saber como es el aspecto final del símbolo del sistema. zsh también se puede personalizar y dispone de herramientas específicas para la personalización como <a href="https://ohmyz.sh/">Oh my zsh</a>.</p>
<p>Por otro lado, <a href="https://git-scm.com/">Git</a> por ejemplo ofrece una utilidad con la que personalizar el símbolo del sistema para mostrar cierta información según información del sistema, el directorio actual de trabajo contiene un repositorio Git u otro tipo de contenido.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/">Personalizar el prompt del sistema del intérprete de comandos Bash</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/04/prompt-de-la-terminal-personalizado-en-carpetas-de-git-con-el-interprete-bash/">Prompt de la terminal personalizado en carpetas de git con el intérprete Bash</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/">Los intérpretes de comandos, instalar y cambiar a otro</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/">Guía básica del intérprete de comandos Bash</a></li>
</ul>
<p>Aún así las personalizaciones que ofrecen tanto bash como zsh son propias de cada uno de esos intérpretes, diferentes entre sí y limitadas en cuanto a elementos de personalización. En la siguiente configuración el <em>prompt</em> está personalizado con la variable <em>PS1</em> modificando los colores para el nombre del usuario y <em>host</em> además del <em>git prompt</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ~/.bashrc</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># If not running interactively, don&#39;t do anything</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[[</span> <span class="nv">$-</span> !<span class="o">=</span> *i* <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="k">return</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">alias</span> <span class="nv">ls</span><span class="o">=</span><span class="s1">&#39;ls --color=auto&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">PS1</span><span class="o">=</span><span class="s1">&#39;[\u@\h \W]\$ &#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">complete</span> -cf sudo&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWDIRTYSTATE</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWSTASHSTATE</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWUNTRACKEDFILES</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWUPSTREAM</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">GIT_PS1_SHOWCOLORHINTS</span><span class="o">=</span><span class="s2">&#34;true&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">source</span> ~/.git-prompt.sh&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">PS1</span><span class="o">=</span><span class="s1">&#39;[\[\033[01;34m\]\u\[\033[00m\]@\[\033[01;35m\]\h\[\033[00m\] \W]\$ &#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">PROMPT_COMMAND</span><span class="o">=</span><span class="s1">&#39;__git_ps1 &#34;[\[\033[01;34m\]\u\[\033[00m\]@\[\033[01;35m\]\h\[\033[00m\] \W&#34; &#34;]\$ &#34;&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">EDITOR</span><span class="o">=</span>vim&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">SDKMAN_DIR</span><span class="o">=</span><span class="s2">&#34;/home/picodotdev/.sdkman&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[[</span> -s <span class="s2">&#34;/home/picodotdev/.sdkman/bin/sdkman-init.sh&#34;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">source</span> <span class="s2">&#34;/home/picodotdev/.sdkman/bin/sdkman-init.sh&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>.bashrc-1</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/bash-prompt-1_hub9aa1f81796a12160d430303811ef951_15311_2560x1440_fit_box_3.png" data-gallery="" title="Símbolo del sistema de bash"><img src="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/bash-prompt-1_hub9aa1f81796a12160d430303811ef951_15311_650x450_fit_box_3.png" width="614" height="450" alt="Símbolo del sistema de bash" title="Símbolo del sistema de bash"  class="lozad "></a></p>
<figcaption>Símbolo del sistema de bash</figcaption>
</figure>
</div>
<h3 id="el-configurador-del-símbolo-del-sistema-starship">El configurador del símbolo del sistema Starship</h3>
<p><a href="https://starship.rs/">Starship</a> es una utilidad para configurar el símbolo del sistema fácil de instalar, sencillo de configurar, muchas opciones y elementos de configuración, moderno, tiene numerosos módulos que soportan múltiples tecnologías de las cuales mostrar información y compatible tanto con bash como zsh entre muchos otros intérpretes de comandos.</p>
<p>Está escrito en el lenguaje de programación <a href="https://www.rust-lang.org/">Rust</a> que se caracteriza por ofrecer un alto rendimiento y ser eficiente, aunque la diferencia para el usuario no va a ser apreciable para el usuario.</p>
<p>Starship permite aplicar misma configuración y tener el mismo símbolo del sistema independientemente del intérprete de comandos que es útil por ejemplo si se usa equipos diferentes, uno con <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> en las que generalmente utilizan por defecto el intérprete de comandos bash y otro con <a href="https://www.apple.com/macos/">macOS</a> en el que el intérprete de comandos por defecto es zsh.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/starship_hu08a1c7f5139027bf84c059a744666286_63046_2560x1440_fit_box_3.png" width="300" height="80" alt="Starship" title="Starship"  class="lozad "></p>
</figure>
</div>
<p>En <a href="https://www.archlinux.org/">Arch Linux</a> se instala con el comando del gestor de paquetes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S starship&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-install-starship.sh</span>
    </div>
</div>
<h3 id="configuración-de-starship">Configuración de Starship</h3>
<p>Además de ofrecer un alto grado de personalización la configuración de Starship es muy sencilla con la ayuda de su <a href="https://starship.rs/config/">documentación para cada módulo de configuración</a>. Dado que tiene una buena cantidad de opciones lo más rápido es partir de una configuración ya creada y adaptarla ligeramente a las necesidades o preferencias personales.</p>
<p>En la sección de <a href="https://starship.rs/presets/">Presets</a> hay varios ejemplos de configuración. Para el caso de este ejemplo parto de la configuración <a href="https://starship.rs/presets/pastel-powerline.html">Pastel Powerline</a>. La configuración de Starship consiste en un archivo de texto en formato <em>toml</em>, cada uno de los ejemplos de preconfiguraciones se puede descargar su archivo.</p>
<p>Editar el archivo es bastante intuitivo tanto por el nombre de las variables como por su contenido, consiste en un conjunto de variables cuyos valores modifican un aspecto de la línea de comandos. La configuración consiste en cambiar los valores de las variables cuya descripción está documentada en la sección de configuración. El archivo de configuración es un archivo <em>dotfile</em> en la carpeta del directorio del usuario <em>~/.config/starship.toml</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ~/.bashrc</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># If not running interactively, don&#39;t do anything</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[[</span> <span class="nv">$-</span> !<span class="o">=</span> *i* <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="k">return</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">alias</span> <span class="nv">ls</span><span class="o">=</span><span class="s1">&#39;ls --color=auto&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">PS1</span><span class="o">=</span><span class="s1">&#39;[\u@\h \W]\$ &#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1">#</span>&#10;</span></span><span class="line"><span class="cl"><span class="nb">complete</span> -cf sudo&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">PS1</span><span class="o">=</span><span class="s1">&#39;[\[\033[01;34m\]\u\[\033[00m\]@\[\033[01;35m\]\h\[\033[00m\] \W]\$ &#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">EDITOR</span><span class="o">=</span>vim&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">SDKMAN_DIR</span><span class="o">=</span><span class="s2">&#34;/home/picodotdev/.sdkman&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">[[</span> -s <span class="s2">&#34;/home/picodotdev/.sdkman/bin/sdkman-init.sh&#34;</span> <span class="o">]]</span> <span class="o">&amp;&amp;</span> <span class="nb">source</span> <span class="s2">&#34;/home/picodotdev/.sdkman/bin/sdkman-init.sh&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">eval</span> <span class="s2">&#34;</span><span class="k">$(</span>starship init bash<span class="k">)</span><span class="s2">&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>.bashrc-2</span>
    </div>
</div>
<p>Este es un archivo de configuración de ejemplo en el que algunos símbolos no se muestran correctamente por faltar la fuente que los incluye. La variable <em>format</em> determina el formato e información del símbolo del sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="nx">format</span> <span class="p">=</span> <span class="s2">&#34;&#34;&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">[ ](bg:#000000)\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">$username\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">$hostname\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">[ ](bg:#000000 fg:#000000)\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">[](bg:#DA627D fg:#000000)\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">$directory\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">[](fg:#DA627D bg:#FCA17D)\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">$git_branch\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">$git_status\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">[](fg:#FCA17D bg:#86BBD8)\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">$java\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">[](fg:#86BBD8 bg:#06969A)\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">$docker_context\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">[](fg:#06969A bg:#000000)\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">[ ](fg:white bg:#000000)\&#10;</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nx">add_newline</span> <span class="p">=</span> <span class="kc">false</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">username</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">show_always</span> <span class="p">=</span> <span class="kc">true</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">style_user</span> <span class="p">=</span> <span class="s2">&#34;blue bold&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">style_root</span> <span class="p">=</span> <span class="s2">&#34;red bold&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">format</span> <span class="p">=</span> <span class="s1">&#39;[$user]($style)&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">hostname</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">ssh_only</span> <span class="p">=</span> <span class="kc">false</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">style</span><span class="p">=</span><span class="s2">&#34;purple bold&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">format</span> <span class="p">=</span> <span class="s1">&#39;[@](bg:#000000 fg:white)[$hostname]($style)&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">directory</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">style</span> <span class="p">=</span> <span class="s2">&#34;bg:#DA627D fg:white&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">format</span> <span class="p">=</span> <span class="s2">&#34;[ $path ]($style)&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">truncation_length</span> <span class="p">=</span> <span class="mi">1</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">truncation_symbol</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">directory</span><span class="p">.</span><span class="nx">substitutions</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="s2">&#34;Documentos&#34;</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="s2">&#34;Descargas&#34;</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="s2">&#34;Música&#34;</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="s2">&#34;Imágenes&#34;</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">docker_context</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">symbol</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">style</span> <span class="p">=</span> <span class="s2">&#34;bg:#06969A fg:white&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">format</span> <span class="p">=</span> <span class="s1">&#39;[[ $symbol $context ](bg:#06969A)]($style) $path&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">git_branch</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">symbol</span> <span class="p">=</span> <span class="s2">&#34;&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">style</span> <span class="p">=</span> <span class="s2">&#34;bg:#FCA17D fg:white&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">format</span> <span class="p">=</span> <span class="s1">&#39;[[ $symbol $branch ](bg:#FCA17D)]($style)&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">git_status</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">style</span> <span class="p">=</span> <span class="s2">&#34;bg:#FCA17D fg:white bold&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">format</span> <span class="p">=</span> <span class="s1">&#39;[[($all_status$ahead_behind )](bg:#FCA17D)]($style)&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">java</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">symbol</span> <span class="p">=</span> <span class="s2">&#34;J&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">style</span> <span class="p">=</span> <span class="s2">&#34;bg:#86BBD8 fg:white bold&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nx">format</span> <span class="p">=</span> <span class="s1">&#39;[ $symbol ]($style)&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>starship.toml</span>
    </div>
</div>
<p>Utilizando colores el símbolo del sistema casi tiene un aspecto gráfico y al estar cada información separada por diferentes colores hace que sea fácilmente identificable.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/starship-1_hu6bfdba881ddb1d0d6e7ab73029e91741_18565_2560x1440_fit_box_3.png" data-gallery="" title="Símbolo del sistema personalizado con Starship"><img src="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/starship-1_hu6bfdba881ddb1d0d6e7ab73029e91741_18565_650x450_fit_box_3.png" width="614" height="450" alt="Símbolo del sistema personalizado con Starship" title="Símbolo del sistema personalizado con Starship"  class="lozad "></a></p>
</figure>
</div>
<p>Las siguientes capturas muestran información en el símbolo del sistema de una carpeta que es un repositorio de Git que incluye información del estado del espacio de trabajo y en otra además en que la carpeta es un proyecto en el lenguaje Java.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/starship-2_hu73bbcc25a35801511f708f70fc58899a_23759_2560x1440_fit_box_3.png" data-gallery="" title="Símbolo del sistema personalizado con Starship"><img src="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/starship-2_hu73bbcc25a35801511f708f70fc58899a_23759_300x200_fit_box_3.png" width="273" height="200" alt="Símbolo del sistema personalizado con Starship" title="Símbolo del sistema personalizado con Starship"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/starship-3_hu827b43744287322c43f0015d1dffad37_23854_2560x1440_fit_box_3.png" data-gallery="" title="Símbolo del sistema personalizado con Starship"><img src="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/images/starship-3_hu827b43744287322c43f0015d1dffad37_23854_300x200_fit_box_3.png" width="273" height="200" alt="Símbolo del sistema personalizado con Starship" title="Símbolo del sistema personalizado con Starship"  class="lozad "></a></p>
<figcaption>Símbolo del sistema personalizado con Starship</figcaption>
</figure>
</div>
<p>La variable principal <em>format</em> incluye el contenido y estilos del símbolo del sistema, por ejemplo el nombre del usuario y el directorio actual, hasta aquí es lo mismo que ofrecen bash y zsh por defecto, pero además permite mostrar información de estado según el contenido de del directorio de trabajo actual como Git, múltiples lenguajes de programación y tecnologías.</p>
<p>Si el directorio de trabajo actual es un repositorio de Git se muestra la rama y el estado de cambios, si es una carpeta de un proyecto muestra de que tipo de proyecto es por ejemplo un proyecto de Java y la versión actual de Java soportando muchos otros tipos de proyectos y tecnologías, también puede mostrar información de <a href="https://www.docker.com/">Docker</a>.</p>
<p>Otra información que puede mostrar es la hora actual que permite registrar a qué hora se ha ejecutado un determinado comando en caso de revisar la sesión de línea de comandos.</p>
<p>Una vez configurado Starship con <a href="https://github.com/twpayne/chezmoi">Chezmoi</a> es posible guardar este <em>dotfile</em> en un repositorio de Git en caso de querer aplicarlo en una nueva instalación o en otro equipo y mantener sincronizado el contenido entre varios equipos.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/02/que-son-y-como-gestionar-archivos-dotfiles-con-chezmoi/">Qué son los archivos dotfiles y cómo gestionarlos con chezmoi</a></li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/SKtauGe0d3I" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://kruschecompany.com/zsh-vs-bash-unix-shell/">https://kruschecompany.com/zsh-vs-bash-unix-shell/</a></li>
<li><a href="https://linuxhint.com/differences_between_bash_zsh/">https://linuxhint.com/differences_between_bash_zsh/</a></li>
<li><a href="https://www.youtube.com/watch?v=SKtauGe0d3I">https://www.youtube.com/watch?v=SKtauGe0d3I</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/</id>
        <title>Los intérpretes de comandos, instalar y cambiar a otro</title>
        <updated>2022-06-23T21:00:00+02:00</updated>
        <published>2022-06-23T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La terminal es una herramienta muy utilizada por usuarios avanzados aún habiendo sistemas operativos en los que prácticamente todo se puede realizar desde un programa con interfaz gráfica. La linea de comandos es menos amigable ya que no ofrece apenas ayuda que guíe al usuario pero cuando un usuario conoce como realizar una tarea desde la línea de comandos es mucho más rápido que usar un programa con interfaz gráfica además de otras ventajas. El intérprete de comandos es la pieza que proporciona un entorno dese el que se introducen los comandos y con el que interacciona el usuario desde la terminal con una interfaz basada en texto.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bash.svg" width="300" height="126" alt="bash" title="bash"  class=""></p>
</div>
<p>El sistema operativo es una pieza fundamental de software que hace usable el hardware y proporciona una abstracción y servicios más lógicos para los programas sin que estos se tengan que preocupar de detalles de bajo nivel relativos al hardware ni específicos de cada dispositivo hardware.</p>
<p>Una de las piezas fundamentales de un sistema operativo y la más conocida es el núcleo o <em>kernel</em>, dos núcleos con licencia de software libre son <a href="https://www.linux.com/">Linux</a> y <a href="https://www.freebsd.org/es/">FreeBSD</a> pero hay muchos otros menos conocidos como <a href="https://www.minix3.org/">Minix</a>, <a href="https://www.gnome.org/">Genode</a> o <a href="https://www.haiku-os.org/">Haiku</a> y distribuciones derivadas de estos. Sistemas operativos con núcleo privativos son el de <a href="https://www.microsoft.com/es-es/windows/">Windows</a> de los sistemas de escritorio de <a href="https://www.microsoft.com/">Microsoft</a> y comerciales son el de <a href="https://www.apple.com/macos/">macOS</a> de los ordenadores de <a href="https://www.apple.com/">Apple</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-la-distribucion-ubuntu-de-gnu-linux-paso-a-paso-desde-cero/">Descargar e instalar la distribución Ubuntu de GNU/Linux paso a paso desde cero</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/">Guía de instalación y uso básico de FreeBSD</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/02/licencias-de-software-libre-y-diferencias-con-software-privativo-y-de-codigo-abierto/">Licencias de software libre y diferencias con software privativo y de código abierto</a></li>
</ul>
<p>Sin embargo, el núcleo sólo es una parte de lo que se considera un sistema operativo ya que aunque tiene muchas funcionalidades un usuario no interacciona directamente con el sistema operativo sino que lo hace a través de una colección de herramientas y programas de línea de comandos, entre ellas se encuentra en un intérprete de comandos. Generalmente en las distribuciones Linux la colección de herramientas son las proporcionadas por <a href="https://www.gnu.org/">el proyecto GNU</a> que es un proyecto distinto al núcleo de Linux, y por eso muchas veces nos referimos a Linux por el término GNU/Linux cuando se desea dar crédito a ambos proyectos.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="qué-hace-un-intérprete-de-comandos">Qué hace un intérprete de comandos</h3>
<p>Un intérprete de comandos es una interfaz basada en texto que permite introducir los comandos a ejecutar compuestos por el nombre del programa, opciones de invocación y sus argumentos. El intérprete de comandos también permite establecer variables de entorno para almacenar valores e incluirlos en el comando así como redirigir la salida a archivos y crear tuberías para redirigir la salida de un programa a la entrada de otros que permiten realizar una funcionalidad compleja a partir de comandos más simples.</p>
<p>Los sistemas operativos actuales tienen una interfaz gráfica pero todos proporcionan una terminal virtual en la que interactuar con el sistema operativo mediante comandos y texto, se ejecutan desde una terminal virtual, cada entorno de escritorio también proporciona su propia entre su colección de aplicaciones gráficas integradas. En <a href="https://www.gnome.org/">GNOME</a> es <a href="https://help.gnome.org/users/gnome-terminal/stable/">Terminal</a> y <a href="https://apps.gnome.org/es/app/org.gnome.Console/">Console</a> y en <a href="https://www.kde.org/">KDE</a> es <a href="https://konsole.kde.org/">Konsole</a>.</p>
<p>Aún con las interfaces gráficas las terminales y la línea de comandos siguen siendo muy utilizadas por su posibilidad de automatización y conociendo el comando es más sencillo que utilizar una herramienta gráfica. Además, para la administración de servidores siguen siendo la interfaz de administración principal incluso antes que las interfaces gráficas.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/gnome-terminal_huaca422df68cfe9fbd3622448370807d0_17492_2560x1440_fit_box_3.png" data-gallery="" title="Emulador de terminal de GNOME Terminal"><img src="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/gnome-terminal_huaca422df68cfe9fbd3622448370807d0_17492_650x450_fit_box_3.png" width="615" height="450" alt="Emulador de terminal de GNOME Terminal" title="Emulador de terminal de GNOME Terminal"  class="lozad "></a></p>
<figcaption>Emulador de terminal de GNOME Terminal</figcaption>
</figure>
</div>
<h3 id="funcionalidades-del-intérprete-de-comandos">Funcionalidades del intérprete de comandos</h3>
<p>Las funcionalidades de introducir comandos y ejecutarlos, variables de entorno, redirecciones y tuberías son funcionalidades básicas que los intérpretes de comandos actuales poseen. Algunas funcionalidades no están presentes en todos los intérprete de comandos y otras en función del inteŕprete funciona de forma ligeramente diferente o con algún añadido adicional.</p>
<p>Una funcionalidad que cambia en función del intérprete es qué ocurre cuando se pulsa la tecla tabulador. Al pulsar esta tecla los intérpretes suelen proporcionar autocompletado para el nombre del directorio o nombre de comando pero algunos son capaces de hacerlo incluso de forma recursiva en múltiples directorios o aplicando correcciones de fallos de tipografía aplicando la corrección cuando se introduce una letra mal.</p>
<p>Otra variación en función del intérprete es el tipo de expansión comodín o <em>wildcard expansion</em> que se soporta. Las expansiones comodín son una versión simplificada de las expresiones regulares que permiten encontrar múltiples coincidencias, estos es muy utilizado por ejemplo para seleccionar múltiples archivos o cierto tipo de archivos como todos los archivos de música o vídeo con <em>*.mp3</em> o <em>*.mp4</em> respectivamente, estas expresiones con un comodín del caracter asterisco seleccionan todos los archivos con cualquier nombre y de extensión <em>mp3</em> o <em>mp4</em>.</p>
<p>Otra funcionalidad es la posibilidad de personalizar el aspecto del símbolo del sistema o <em>prompt</em> para que muestre la información que se desee en texto y con los colores deseados. Los símbolos del sistema por defecto incluyen el directorio de trabajo actual, el nombre de usuario y el nombre del sistema en el que se está trabajando.</p>
<h3 id="intérpretes-de-comandos">Intérpretes de comandos</h3>
<p>Dado que el intérprete de comandos es simplemente un programa más hay varios disponibles con ligeras variaciones sobre las funcionalidades básicas pero suficientes para que algunos desarrolladores según sus ideales hayan creado varios.</p>
<p>En las distribuciones GNU/Linux generalmente el intérprete de comandos preinstalado por defecto es <a href="https://es.wikipedia.org/wiki/Bash">bash</a> y otro popular es <a href="https://zsh.sourceforge.net/">zsh</a> que se ha convertido en el por defecto en el sistema operativo macOS en sustitución de bash. Otros intérprete de comandos menos conocidos son <a href="https://fishshell.com/">fish</a> y <a href="https://wiki.archlinux.org/index.php/Dash">dash</a> pero no son los únicos.</p>
<p>Las funcionalidades principales de todo intérprete de comandos las soportan todos, casi la mayor diferencia entre ellos aparte de su popularidad es su nivel de personalización y en menor medida algunas mejoras y rendimiento pero que estas dos últimas no suelen ser determinantes para cambiar de uno a otro.</p>
<ul>
<li><a href="https://wiki.archlinux.org/title/Command-line_shell">Command-line shell</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/">Guía básica del intérprete de comandos Bash</a></li>
<li><a href="https://apple.stackexchange.com/questions/361870/what-are-the-practical-differences-between-bash-and-zsh">What are the practical differences between Bash and Zsh?</a></li>
<li><a href="https://hands-on.cloud/which-terminal-is-better-bash-vs-zsh/#h-features-comparison">Which terminal is better: Bash vs Zsh</a></li>
<li><a href="https://wiki.archlinux.org/title/Bash">Bash Arc Linux Wiki</a></li>
<li><a href="https://wiki.archlinux.org/title/Zsh">Zsh Arc Linux Wiki</a></li>
<li><a href="https://www.gnu.org/software/bash/manual/bash.html">Bash Manual</a></li>
<li><a href="https://zsh.sourceforge.io/Doc/Release/zsh_toc.html">Zsh Manual</a></li>
</ul>
<h3 id="como-cambiar-el-intérprete-de-comandos-del-usuario">Como cambiar el intérprete de comandos del usuario</h3>
<p>Independientemente del intérprete de comandos que preinstale la distribución GNU/Linux este se puede cambiar instalando el paquete de otro intérprete y ejecutándolo como un comando más. También es posible cambiar el intérprete por defecto al abrir una terminal.</p>
<p>Este comando permiten instalar el intérprete de comandos zsh.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S zsh&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-install-zsh.sh</span>
    </div>
</div>
<p>Los siguientes permiten listar los intérpretes de comandos instalados en el sistema y cambiar el por defecto del usuario a otro.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chsh -l&#10;</span></span><span class="line"><span class="cl">$ chsh -s <span class="o">[</span>path-to-shell<span class="o">]</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chsh.sh</span>
    </div>
</div>
<p>El aspecto por defecto de los <em>prompts</em> de bash y zsh son los siguientes.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/bash_hud1ce7affd186b95d0d02b737e662d43b_16005_2560x1440_fit_box_3.png" data-gallery="" title="Intérprete de comandos bash"><img src="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/bash_hud1ce7affd186b95d0d02b737e662d43b_16005_300x200_fit_box_3.png" width="273" height="200" alt="Intérprete de comandos bash" title="Intérprete de comandos bash"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/zsh_hud7b5a1c1d64d347f44201dacd637097b_17129_2560x1440_fit_box_3.png" data-gallery="" title="Intérprete de comandos zsh"><img src="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/zsh_hud7b5a1c1d64d347f44201dacd637097b_17129_300x200_fit_box_3.png" width="273" height="200" alt="Intérprete de comandos zsh" title="Intérprete de comandos zsh"  class="lozad "></a></p>
<figcaption>Intérprete de comandos bash y zsh</figcaption>
</figure>
</div>
<h3 id="configurar-el-_prompt_-del-símbolo-del-sistema">Configurar el <em>prompt</em> del símbolo del sistema</h3>
<p>Uno de los motivos de cambiar de un intérprete de comandos por otro es cambiar el aspecto del símbolo del sistema. bash con la variable de entorno <em>PS1</em> permite personalizar en cierta medida <em>prompt</em> y si se usa el sistema de control de versiones Git este ofrece una utilidad para que el símbolo del sistema indique el estado de cambios cuando el directorio de trabajo actual es un repositorio de Git. Sin embargo, estas personalizaciones son limitadas y específicas de cada <em>shell</em>.</p>
<p>En mi caso este es el aspecto que utilizo con bash, en el que he cambiado los colores y usado la utilidad para mostrar información del repositorio Git. La segunda image es la potente personalización e independiente del <em>shell</em> ofrecida por <a href="https://starship.rs/">Starship</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/04/personalizar-el-prompt-del-sistema-del-interprete-de-comandos-bash/">Personalizar el prompt del sistema del intérprete de comandos Bash</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/04/prompt-de-la-terminal-personalizado-en-carpetas-de-git-con-el-interprete-bash/">Prompt de la terminal personalizado en carpetas de git con el intérprete Bash</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/">Personalizar el símbolo del sistema de la línea de comandos con Starship</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/bash-custom_hu45818392a957f07fad0e4fd34f7b01f7_15742_2560x1440_fit_box_3.png" data-gallery="" title="Terminal de bash personalizada"><img src="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/bash-custom_hu45818392a957f07fad0e4fd34f7b01f7_15742_300x200_fit_box_3.png" width="272" height="200" alt="Terminal de bash personalizada" title="Terminal de bash personalizada"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/starship_hu8f9add5d06d60afa99989e628b6a2ea9_27834_2560x1440_fit_box_3.png" data-gallery="" title="Terminal personalizada con Starship"><img src="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/images/starship_hu8f9add5d06d60afa99989e628b6a2ea9_27834_300x200_fit_box_3.png" width="272" height="200" alt="Terminal personalizada con Starship" title="Terminal personalizada con Starship"  class="lozad "></a></p>
<figcaption>Terminal de bash personalizada</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/06/publicar-y-utilizar-una-dependencia-de-java-en-un-repositorio-de-git-con-github-packages/</id>
        <title>Publicar y utilizar una dependencia de Java en un repositorio de Git con GitHub Packages</title>
        <updated>2022-06-09T19:00:00+02:00</updated>
        <published>2022-06-09T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/06/publicar-y-utilizar-una-dependencia-de-java-en-un-repositorio-de-git-con-github-packages/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El software ofrecido como servicio tiene la ventaja principal de que delega en el proveedor del servicio su administración. El delegar la administración del servicio está motivada por tener ciertas garantías de que el software tiene mayor disponibilidad y fiabilidad. A cambio de esa administración el proveedor del software como servicio establece un precio por su SaaS que llega a compensar tener que administrar el servicio uno mismo que también tiene unos costes en servidor, personal, fiabilidad y también tiempo de dedicación. Una de las funcionalidades que requiere una infraestructura en una organización para desarrollar sus aplicaciones es un repositorio de artefactos o paquetes, GitHub Packages el servicio de repositorio de artefactos compatibles con los artefactos producidos por los principales lenguajes de programación para compartir bibliotecas de código entre ellos Java y JavaScript y tecnologías de contenedores como imágenes Docker.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/github.svg" width="200" height="195" alt="GitHub" title="GitHub"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La forma de compartir y reutilizar código en Java es a través de librerías java que se incluyen como dependencias en los proyectos que las quieran usar. Las dependencias pueden tener a su vez dependencias que han de incluirse de forma transitiva, ni Java ni el JDK ofrece soporte para gestionar las dependencias en un proyecto más allá de <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/">los módulos del incorporados en Java 9</a> pero que no cubren la resolución de dependencias ni el versionado.</p>
<p>Para gestionar las dependencias en un proyecto Java se ha de utilizar <a href="https://picodotdev.github.io/blog-bitix/2017/07/iniciar-rapido-un-proyecto-de-java-con-gradle-o-de-spring-con-spring-initializr/">la herramienta de construcción como Gradle</a> o <a href="https://maven.apache.org/">Maven</a>. Estas herramientas se encargan de descargar las versiones correctas y las dependencias transitivas declaradas en el proyecto y sus dependencias. Las dependencias se guardan en repositorios de Maven que además de los propios archivos Java de las librerías almacenan metadatos en los que se incluyen qué dependencias tiene cada una de esas librerías.</p>
<p>Los repositorios de dependencias se almacenan en un servidor que se encarga de permitir acceder y agregar nuevos artefactos. <a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/">El software de servidor Nexus como repositorio de artefactos</a>  tiene una versión <em>open source</em> que se puede descargar e instalar para ofrecer el servicio.</p>
<p>Aunque Nexus permite disponer de un software de servidor para guardar artefactos de un repositorio Maven es un servidor que tiene los inconvenientes de un servidor administrado por uno mismo. Administrar el servidor que no debería fallar pero ocasionalmente requiere dedicación para aplicar actualizaciones de seguridad, actualizaciones a nuevas versiones o cuando deja de funcionar. Un servidor administrado por uno mismo requiere dedicarle tiempo del que a veces no se dispone. Para no tener que dedicar tiempo a mantener un servidor la opción de los software como servicio o los servicios gestionados son interesantes. Los software como servicio suelen tener un coste pero puede compensar teniendo en cuenta el coste de dedicarle a administrar uno mismo el servicio, el coste de la infraestructura en la que alojarlo, además se tiene más garantías de que el software administrado tenga mayor disponibilidad y fiabilidad.</p>
<p>Una alternativa a Nexus es el servicio <a href="https://github.com/features/packages">GitHub Packages</a> que permite almacenar artefactos para distintos repositorios entre ellos artefactos de Maven, imágenes de <a href="https://www.docker.com/">Docker</a> y paquetes de <a href="https://www.npmjs.com/">npm</a>.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="el-servicio-de-github-packages">El servicio de Github Packages</h3>
<p>GitHub Packages es un servicio de GitHub que permite almacenar artefactos de distintos tipos y paquetes de las principales plataformas de programación como librerías <em>jar</em> de Java, paquetes npm de JavaScript e imágenes de contenedores de Docker. Un repositorio de GitHub Packages se almacena en un repositorio de git de GitHub.</p>
<p>Los artefactos de Java se pueden publicar como en cualquier otro repositorio de Maven teniendo las credenciales de autenticación y los repositorios se pueden utilizar para descargar de ellos las dependencias al incluirlas en el archivo de construcción del proyecto.</p>
<p>Tiene unos límites de uso bastante reducidos en sus <a href="https://github.com/features/packages#pricing">planes de precios de GitHub Packages</a> que están divididos en espacio de almacenamiento usado y datos transferidos, sin embargo no dependen del número de usuarios.</p>
<p><a href="https://github.com/features/packages">Github Packages</a> permite hacer las funcionalidades de repositorio de artefactos pero no soporta todos los tipos de artefactos de todos los lenguajes. <a href="https://cloud.google.com/artifact-registry/">Google Artifact Registry</a> también ofrece un servicio para almacenar los artefactos resultado de compilación y <a href="https://www.amazon.es">Amazon</a> con <a href="https://aws.amazon.com/es/codeartifact/">AWS CodeArtifact</a> también tiene su servicio administrado de artefactos.</p>
<ul>
<li><a href="https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry">Working with the Apache Maven registry</a></li>
<li><a href="https://docs.github.com/en/packages/learn-github-packages/about-permissions-for-github-packages#about-scopes-and-permissions-for-package-registries">About scopes and permissions for package registries</a></li>
<li><a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token">Creating a personal access token</a></li>
</ul>
<h3 id="crear-y-publicar-una-librería-de-maven-en-github-packages">Crear y publicar una librería de Maven en GitHub Packages</h3>
<h4 id="crear-la-librería">Crear la librería</h4>
<p>El siguiente proyecto es un proyecto de <a href="https://gradle.org/">Gradle</a> que contiene una clase de utilidad que se desea distribuir como una librería para compartirla y que se pueda utilizar en cualesquiera otros proyectos de Gradle o Maven que la necesiten. El código Java de la clase no tiene nada especial y en este caso simplemente contiene una utilidad para ofuscar una cadena de texto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.githubpackages.utils</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Properties</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Utils</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">mask</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">mask</span><span class="o">(</span><span class="n">string</span><span class="o">,</span> <span class="n">2</span><span class="o">,</span> <span class="n">6</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">mask</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">,</span> <span class="kt">int</span> <span class="n">chars</span><span class="o">,</span> <span class="kt">int</span> <span class="n">max</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">substring</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">chars</span><span class="o">,</span> <span class="n">string</span><span class="o">.</span><span class="na">length</span><span class="o">()));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">mask</span> <span class="o">=</span> <span class="n">repeat</span><span class="o">(</span><span class="s">&#34;*&#34;</span><span class="o">,</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">max</span> <span class="o">-</span> <span class="n">chars</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">substring</span> <span class="o">+</span> <span class="n">mask</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="kd">public</span> <span class="kd">static</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="nf">properties</span><span class="o">(</span><span class="n">String</span> <span class="n">resource</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Properties</span> <span class="n">properties</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">properties</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">Utils</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">resource</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">properties</span><span class="o">.</span><span class="na">entrySet</span><span class="o">().</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toMap</span><span class="o">(</span><span class="n">it</span> <span class="o">-&gt;</span> <span class="n">it</span><span class="o">.</span><span class="na">getKey</span><span class="o">().</span><span class="na">toString</span><span class="o">(),</span> <span class="n">it</span> <span class="o">-&gt;</span> <span class="n">it</span><span class="o">.</span><span class="na">getValue</span><span class="o">().</span><span class="na">toString</span><span class="o">()));</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">repeat</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">,</span> <span class="kt">int</span> <span class="n">count</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">string</span><span class="o">.</span><span class="na">repeat</span><span class="o">(</span><span class="n">count</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>utils/Utils.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;maven-publish&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">project</span><span class="o">.</span><span class="na">with</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.githubpackages&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.1&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">publishing</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">maven</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;GitHubPackages&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">url</span> <span class="o">=</span> <span class="n">uri</span><span class="o">(</span><span class="s2">&#34;https://maven.pkg.github.com/picodotdev/github-packages&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">credentials</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">username</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">findProperty</span><span class="o">(</span><span class="s2">&#34;gpr.user&#34;</span><span class="o">)</span> <span class="o">?:</span> <span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="s2">&#34;USERNAME&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">password</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">findProperty</span><span class="o">(</span><span class="s2">&#34;gpr.key&#34;</span><span class="o">)</span> <span class="o">?:</span> <span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="s2">&#34;TOKEN&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">publications</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gpr</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">from</span><span class="o">(</span><span class="n">components</span><span class="o">.</span><span class="na">java</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>utils/build.gradle</span>
    </div>
</div>
<h4 id="crear-el-repositorio-de-maven-en-github">Crear el repositorio de Maven en GitHub</h4>
<p>Cada repositorio de git permite generar artefactos o paquetes para que puedan ser descargados. Para agrupar todos los artefactos se puede crear un repositorio específico de git y publicar en él todos los artefactos de modo que en los proyecto únicamente sea necesario incluir la configuración de un único repositorio.</p>
<h4 id="publicar-la-librería-en-el-repositorio">Publicar la librería en el repositorio</h4>
<p>Para publicar artefactos en el repositorio de Maven se requieren unas credenciales para limitar publicar únicamente artefactos a aquellas personas o procesos que tengan permisos. Una de las formas de publicar paquetes es utilizar un <em>Personal Access Token</em> o PAT al que se asocian unos permisos y se generan desde la sección <em>Settings</em> de la cuenta dentro de <a href="https://github.com/settings/apps">Developer settings</a> y <em>Personal access tokens</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/publicar-y-utilizar-una-dependencia-de-java-en-un-repositorio-de-git-con-github-packages/images/github-pat_hua60e7fa638e2388a781d09b8110ebda1_95319_2560x1440_fit_box_3.png" data-gallery="" title="GitHub Personal Access Token"><img src="https://picodotdev.github.io/blog-bitix/2022/06/publicar-y-utilizar-una-dependencia-de-java-en-un-repositorio-de-git-con-github-packages/images/github-pat_hua60e7fa638e2388a781d09b8110ebda1_95319_650x450_fit_box_3.png" width="596" height="450" alt="GitHub Personal Access Token" title="GitHub Personal Access Token"  class="lozad "></a></p>
<figcaption>GitHub Personal Access Token</figcaption>
</figure>
</div>
<p>Con el PAT y cambiando la configuración de la definición del proyecto de la herramienta de construcción el artefacto de cada uno de los módulos se publica en el repositorio de Git con el comando <em>publish</em> proporcionado por el plugin <a href="https://docs.gradle.org/current/userguide/publishing_maven.html">maven-publish</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>&#10;</span></span><span class="line"><span class="cl">./gradlew publish</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-publish.sh</span>
    </div>
</div>
<p>Para no guardar el PAT en el repositorio de código fuente en el archivo de construcción Gradle permite externalizar las propiedades en el archivo de configuración de Gradle en un archivo <em>dotfile</em> ubicado en <em>~/.gradle/gradle.properties</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">gpr.user=picodotdev&#10;</span></span><span class="line"><span class="cl">gpr.key=ghp_Oj*****&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>.gradle/gradle.properties</span>
    </div>
</div>
<p>Una vez publicado el artefacto desde la administración del repositorio es posible descargar cada uno de los elementos del artefacto incluso eliminarlos asi como ver las diferentes versiones publicadas del mismo artefacto. En la siguiente imagen se muestra el artefacto anterior publicado en el repositorio con GitHub Packages.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/publicar-y-utilizar-una-dependencia-de-java-en-un-repositorio-de-git-con-github-packages/images/github-packages-artifact_hu97b93db2bef39782052a9530fbd4c21e_190216_2560x1440_fit_box_3.png" data-gallery="" title="Artefacto de Maven publicado un repositorio con GitHub Packages"><img src="https://picodotdev.github.io/blog-bitix/2022/06/publicar-y-utilizar-una-dependencia-de-java-en-un-repositorio-de-git-con-github-packages/images/github-packages-artifact_hu97b93db2bef39782052a9530fbd4c21e_190216_650x450_fit_box_3.png" width="342" height="450" alt="Artefacto de Maven publicado un repositorio con GitHub Packages" title="Artefacto de Maven publicado un repositorio con GitHub Packages"  class="lozad "></a></p>
<figcaption>Artefacto de Maven publicado un repositorio con GitHub Packages</figcaption>
</figure>
</div>
<h4 id="usar-la-librería-del-repositorio-de-maven">Usar la librería del repositorio de Maven</h4>
<p>Una vez publicado el artefacto en el repositorio de Maven para usarlo hay que declarar de forma explícita la ubicación del repositorio de Maven de GitHub Packages y las credenciales para acceder al repositorio.</p>
<p>Con esta definición Gradle se encarga de descargar la dependencia y hacer que esté disponible en tiempo de compilación y ejecución como cualquier otra dependencia descargada del repositorio por defecto <a href="https://search.maven.org/">Maven Central</a> donde generalmente se publican las dependencias.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.githubpackages.app</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.githubpackages.utils.Utils</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Utils</span><span class="o">.</span><span class="na">mask</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>app/Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">project</span><span class="o">.</span><span class="na">with</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.githubpackages&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">maven</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">url</span> <span class="o">=</span> <span class="n">uri</span><span class="o">(</span><span class="s2">&#34;https://maven.pkg.github.com/picodotdev/github-packages&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">credentials</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">username</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">findProperty</span><span class="o">(</span><span class="s2">&#34;gpr.user&#34;</span><span class="o">)</span> <span class="o">?:</span> <span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="s2">&#34;USERNAME&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">password</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">findProperty</span><span class="o">(</span><span class="s2">&#34;gpr.key&#34;</span><span class="o">)</span> <span class="o">?:</span> <span class="n">System</span><span class="o">.</span><span class="na">getenv</span><span class="o">(</span><span class="s2">&#34;TOKEN&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.githubpackages:utils:1.1&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.githubpackages.app.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>app/build.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew app:run&#10;</span></span><span class="line"><span class="cl">He****&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-app-run.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaGithubPackages">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew app:run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/</id>
        <title>Herramientas de productividad para gestionar tareas y notas</title>
        <updated>2022-06-02T19:00:00+02:00</updated>
        <published>2022-06-02T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Para uso personal, el blog y las tareas en el trabajo he estado usando Google Docs y posteriormente Evernote. En mi flujo de trabajo estas herramientas no eran todo lo que necesitaba para la gestión de las tareas en los tres usos que les daba. De modo que he estado buscando alguna herramienta alternativa mejor adaptada a mis necesidades, dos de estas herramientas son Notion que es la que finalmente estoy usando de momento y ClickUp que es una muy buena alternativa a Notion en algunos aspectos mejor.</strong></p>]]>
        <![CDATA[<p>Las computadoras ya son parte fundamental en muchos puestos de trabajo o tareas personales. Hay muchas aplicaciones esenciales que muchas personas usan diariamente desde el sistema operativo y sus aplicaciones integradas, aplicaciones ofimáticas para la edición de documentos o herramientas de comunicación de correo electrónico o de mensajes.</p>
<p>Los clientes de correo electrónico no sólo permiten leer el correo electrónico sino que además añaden la función de agenda que permite anotar en el calendario reuniones, citas y su duración para reservar su tiempo. Además permiten establecer recordatorios de preaviso para los eventos anotados.</p>
<p>Otras herramientas permiten comunicarse de forma mucho más inmediata que con el correo electrónico con herramientas de mensajería instantánea de forma individual o con grupos de personas en canales públicos que otras personas puedan ver o en canales privados que nadie más pueda ver si no están en el grupo. Al igual que con el correo electrónico permiten compartir archivos e imágenes.</p>
<p>Los editores de documentos ahora tienen funciones para que varias personas colaboren en la edición de un documento al mismo tiempo.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/las-aplicaciones-integradas-del-entorno-de-escritorio-gnome/">Las aplicaciones integradas del entorno de escritorio GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/listado-de-programas-esenciales-segun-categoria-para-gnu-linux/">Listado de programas esenciales según categoría para GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-la-distribucion-ubuntu-de-gnu-linux-paso-a-paso-desde-cero/">Descargar e instalar la distribución Ubuntu de GNU/Linux paso a paso desde cero</a></li>
</ul>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="herramientas-de-productividad-y-organización">Herramientas de productividad y organización</h3>
<p>Usar las aplicaciones adecuadas que faciliten la tarea o a organizarse suponen una mejora en la productividad tanto en la facilidad para realizar la tarea como en el tiempo empleado para completarla. A esta categoría pertenecen las aplicaciones de productividad.</p>
<p>Una función habitual en la categoría de productividad es tener una agenda en la que anotar información sobre cada una de las tareas que se está realizando. Anotar esta información permite que nada de lo anotado se pierda y tenerlo presente o recordarlo cuando es necesario.</p>
<p>Estas aplicaciones pueden ser utilizadas para uso personal pero también para grupos de personas con diferentes departamentos como ingeniería, producto, marketing diseño, recursos humanos, operaciones, … por diferentes organizaciones desde <em>startups</em> a empresas grandes.</p>
<p>A continuación incluyo tres aplicaciones que se utilizan para tener un registro de las tareas los aspectos más relevantes de cada una de ellas. Al final, incluyo una pequeña lista de aplicaciones alternativas a las presentadas.</p>
<h4 id="getting-things-gnome">Getting Things GNOME!</h4>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gtg.svg" width="200" height="200" alt="Getting Things GNOME!" title="Getting Things GNOME!"  class=""></p>
</div>
<p>La aplicación <a href="https://flathub.org/apps/details/org.gnome.GTG">Getting Things GNOME!</a> es una aplicación de escritorio que ofrece la funcionalidad para gestionar listas de tareas, esto permite registrarlas, priorizarlas y tener el registro para centrarse en cada momento en las más prioritarias y más importantes. Esto permite aumentar la productividad y que el cambio de contexto de tarea sea más fácil.</p>
<p>Está diseñada para el entorno de escritorio <a href="https://www.gnome.org/">GNOME</a> siguiendo sus normas de estilos y disponible para el sistema operativo <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> como una aplicación de <a href="https://flatpak.org/">Flatpak</a>.</p>
<p>GTG! destaca por ser una aplicación simple y fácil de usar que permite añadir etiquetas a las tareas, establecer colores a las etiquetas para destacar las tareas visualmente, asignar fechas de inicio a las etiquetas para ordenarlas según prioridad, añadir notas a las tareas con un editor de textos básico y crear subtareas.</p>
<p>Que esté unicamente disponible para GNU/Linux y no disponga de una versión web que permite compartir las tareas entre varios dispositivos son ventajas que tienen otras opciones.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/images/gtg_hudd55416b0f8a3896ab51731569a5d1e6_52881_2560x1440_fit_box_3.png" data-gallery="" title="Getting Things GNOME!"><img src="https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/images/gtg_hudd55416b0f8a3896ab51731569a5d1e6_52881_650x450_fit_box_3.png" width="650" height="428" alt="Getting Things GNOME!" title="Getting Things GNOME!"  class="lozad "></a></p>
<figcaption>Getting Things GNOME!</figcaption>
</figure>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/0u1hQxsIB1M" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="notion">Notion</h4>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/notion.svg" width="200" height="200" alt="Notion" title="Notion"  class=""></p>
</div>
<p><a href="https://www.notion.so/product">Notion</a> ha ganado en popularidad por incorporar varias novedades en la edición de las páginas que hace que sea mucho más versátil que un simple editor de documentos y le hacen una herramienta polivalente que sirve para múltiples propósitos.</p>
<p>Como editor de páginas o documentos incorpora las funcionalidades habituales de cualquier editor de documentos cómo establecer estilos y una amplia variedad de tipos de párrafos incluyendo listas de tareas y adjuntar tanto imágenes, archivos y otros tipos de contenidos como vídeos de <a href="https://www.youtube.com/">YouTube</a>.</p>
<p>Dos de las características destacadas de Notion son la incorporación de bases de datos que permiten recoger información en una tabla con varias columnas o campos e insertar varios registros en esa tabla. Posteriormente la información de la tabla se puede visualizar en diferentes vistas como en formato de tabla, en formato de panel Kanban, línea de tiempo, calendario o galería entre otras pudiendo personalizar los campos que se muestran en cada una y pudiendo establecer filtros para mostrar la información que se desee de la tabla.</p>
<p>Otra de sus características destacadas es su capacidad de que el contenido de un bloque se pueda visualizar desde varias páginas y si se edita se actualice en todas las páginas en la que está incluido. Esto permite que la información mantenga una única fuente de la verdad, sea coherente y esté siempre actualizada en todos los documentos. Esto es muy útil si se emplea Notion como una base de conocimiento.</p>
<p>Finalmente, ofrece una amplia variedad de plantillas de páginas preconstruidas con ciertos elementos y contenido ajustadas según el propósito de la página.</p>
<p>Notion es una aplicación de pago pero dispone de una opción de uso personal sin limitaciones importantes entre sus <a href="https://www.notion.so/pricing">planes de precios</a>. Tiene cliente web y de escritorio para múltiples sistemas operativos incluidos dispositivos móviles además de permitir la colaboración entre varias personas o entre todos los miembros de una organización.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/FXIrojSK3Jo" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/BZnR2Ml17sc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/O8qdvSxDYNY" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="clickup">ClickUp</h4>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/clickup.svg" width="300" height="63" alt="ClickUp" title="ClickUp"  class=""></p>
</div>
<p><a href="https://clickup.com/">ClickUp</a> es una herramienta alternativa a Notion más centrada y preparada en la gestión de tareas, la colaboración en grupo, con características similares en la edición de documentos, algunas adicionales y en algunos aspectos mejor incluso que Notion.</p>
<p>Tiene un plan gratuito para uso personal no demasiado restrictivo y dispone de aplicaciones para dispositivos móviles. Los siguientes vídeos son una introducción a las funcionalidades que ofrece ClickUp.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/f_exDBcGYnM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/ThdUapoLWwo" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/9nCngjFyWMQ" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/SYktbpKcVp0" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="otras">Otras</h4>
<p>Tanto Notion como ClickUp son herramientas de una nueva generación que añaden nuevas características a los más simples editores de textos. Estas nuevas características les hacen muy flexibles y les permiten integrar en una única herramienta varías específicas según el propósito con el ahorro de costes y simplificación y número de de herramientas diferentes usadas.</p>
<p>Otras opciones alternativas para la gestión de tareas y edición de documentos o notas son:</p>
<ul>
<li><a href="https://todoist.com/es">Todoist</a></li>
<li><a href="https://evernote.com/intl/es/">Evernote</a></li>
<li><a href="https://obsidian.md/">Obsidian</a></li>
<li><a href="https://www.microsoft.com/es-es/microsoft-365/onenote/digital-note-taking-app">OneNote</a></li>
<li><a href="https://www.google.es/intl/es/docs/about/">Google Docs</a></li>
<li><a href="https://support.google.com/tasks/answer/7675772?hl=es">Google Tasks</a></li>
</ul>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>