<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre el lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2023-03-23T20:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/03/calendario-de-arch-linux-cubo-de-comandos-y-tux-en-papel/</id>
        <title>Calendario de Arch Linux, cubo de comandos y Tux en papel</title>
        <updated>2023-03-23T20:00:00+02:00</updated>
        <published>2023-03-23T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/03/calendario-de-arch-linux-cubo-de-comandos-y-tux-en-papel/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>En este artículo rescato, actualizo y comparto de nuevo unos elementos de papiroflexia que ofrecen información y son decorativos. Unos calendarios con la temática de Arch Linux uno de pared, de mesa y otro con forma de cubo de doce caras, un cubo con comandos de Arch Linux y el Tux en papel. Son relativamente simples de montar con un poco de tiempo y además de ofrecer información decoran.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/03/calendario-de-arch-linux-cubo-de-comandos-y-tux-en-papel/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/03/cifrar-y-descifrar-datos-usando-algoritmos-de-clave-asimetrica-con-java/</id>
        <title>Cifrar y descifrar datos usando algoritmos de clave asimétrica con Java</title>
        <updated>2023-03-16T20:30:00+02:00</updated>
        <published>2023-03-16T20:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/03/cifrar-y-descifrar-datos-usando-algoritmos-de-clave-asimetrica-con-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El lenguaje de programación Java ofrece clases e implementa varios algoritmos relacionados con la criptografía y seguridad. Con unas pocas líneas de código es posible listar los algoritmos soportados, generar claves, cifrar datos y descifrar datos. Soporta tanto criptografía de clave simétrica donde se usa la misma clave tanto para cifrar como para descifrar y como en este artículo se muestra criptografía asimétrica en la que se utiliza dos claves una la clave pública para cifrar datos y la clave privada para descifrar los datos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/03/cifrar-y-descifrar-datos-usando-algoritmos-de-clave-asimetrica-con-java/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/03/los-3-clientes-de-spring-para-hacer-peticiones-rest/</id>
        <title>Los 3 clientes de Spring para hacer peticiones REST</title>
        <updated>2023-03-09T20:00:00+02:00</updated>
        <published>2023-03-09T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/03/los-3-clientes-de-spring-para-hacer-peticiones-rest/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El proyecto Spring ofrece hasta 3 clientes o formas diferentes para realizar peticiones a servicios REST. La ventaja de estos clientes es que no requieren de dependencias adicionales si se usa Spring y están integradas con el ecosistema de Spring y Spring Boot.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/03/los-3-clientes-de-spring-para-hacer-peticiones-rest/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/03/cifrar-y-descifrar-datos-usando-algoritmos-de-clave-simetrica-con-java/</id>
        <title>Cifrar y descifrar datos usando algoritmos de clave simétrica con Java</title>
        <updated>2023-03-02T21:30:00+02:00</updated>
        <published>2023-03-02T21:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/03/cifrar-y-descifrar-datos-usando-algoritmos-de-clave-simetrica-con-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Algunos datos son sensibles y necesitan especial protección como los datos personales, bancarios o relacionados con la seguridad como contraseñas. Para minimizar los riesgos de seguridad en caso de un fallo se suele cifrar los datos al persistirlos en la base de datos de modo que en caso de la base de datos sea filtrada los datos sigan protegidos siempre y cuando la clave que permite descifrarlos no se ha filtrado también. Java ofrece clases en su JDK que implementan los principales algoritmos para cifrar y descifrar datos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/03/cifrar-y-descifrar-datos-usando-algoritmos-de-clave-simetrica-con-java/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/02/los-algoritmos-de-hashing-criptograficos-calculo-de-hashes-con-comandos-de-gnu-linux-y-java/</id>
        <title>Los algoritmos de hashing criptográficos, cálculo de hashes con comandos de GNU/Linux y Java</title>
        <updated>2023-02-16T00:00:00+02:00</updated>
        <published>2023-02-16T00:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/02/los-algoritmos-de-hashing-criptograficos-calculo-de-hashes-con-comandos-de-gnu-linux-y-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los algoritmos de <em>hashing</em> criptográficos son fundamentales en la firma digital y criptografía, pero también tienen su utilidad por sí mismos para la comprobación de la integridad. Se basan en un algoritmo y funciones matemáticas que transforman un conjunto de bytes en un número binario de longitud fija que constituye el <em>hash</em> digital del contenido. Hay varios algoritmos de <em>hashing</em> criptográficos y en GNU/Linux varios comandos que permiten calcular y comprobar el <em>hash</em> de un archivo. En los lenguajes de programación como en el caso de Java se ofrecen clases y métodos para la generación y cálculo de <em>hashes</em> en los algoritmos soportados.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/02/los-algoritmos-de-hashing-criptograficos-calculo-de-hashes-con-comandos-de-gnu-linux-y-java/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/02/generar-codigos-de-barras-y-codigos-qr-con-java/</id>
        <title>Generar códigos de barras y códigos QR con Java</title>
        <updated>2023-02-09T20:00:00+02:00</updated>
        <published>2023-02-09T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/02/generar-codigos-de-barras-y-codigos-qr-con-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los códigos de barras son una forma para que las computadoras reconozcan un código a partir de una etiqueta de un producto. Desde un lenguaje de programación como Java es posible generar códigos lineales o matriciales de diferentes estándares utilizando la librería que implemente el estándar.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/02/generar-codigos-de-barras-y-codigos-qr-con-java/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/02/los-codigos-de-barras-codigos-qr-y-lectores-hardware-de-codigos/</id>
        <title>Los códigos de barras, códigos QR y lectores hardware de códigos</title>
        <updated>2023-02-09T18:30:00+02:00</updated>
        <published>2023-02-09T18:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/02/los-codigos-de-barras-codigos-qr-y-lectores-hardware-de-codigos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los códigos de barras y códigos QR tienen muchas aplicaciones y son numerosos ámbitos en los que se usan por las ventajas que proporcionan, al ser una imagen legible por las máquinas permiten automatizar de forma rápida y sencilla una tarea tan anodina y mundana como la introducción de los códigos en la computadora. Los lectores hardware de códigos de barras y códigos QR funcionan realmente como un teclado, no necesitan de ningún controlador ni programa y son compatibles con cualquier sistema operativo. Hay varios estándares de códigos de barras y códigos QR con su propia representación gráfica impresa o gráfica, en función del estándar codifica diferente información numérica, alfanumérica y limitada o sin limitación en la cantidad de información.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/02/los-codigos-de-barras-codigos-qr-y-lectores-hardware-de-codigos/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/02/introduccion-conceptos-y-uso-basico-del-broker-de-mensajes-apache-kafka/</id>
        <title>Introducción, conceptos y uso básico del broker de mensajes Apache Kafka</title>
        <updated>2023-02-02T20:00:00+02:00</updated>
        <published>2023-02-02T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/02/introduccion-conceptos-y-uso-basico-del-broker-de-mensajes-apache-kafka/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La comunicación mediante mensajes permite desacoplar las aplicaciones y procesar las peticiones de forma asíncrona. Apache Kafka es un <em>broker</em> de mensajes muy popular por su escalabilidad, tolerancia a fallos y adaptabilidad para ser usado en diferentes casos de uso. Es una herramienta compleja dado el número de casos de uso que soporta y la necesidad de ser distribuida para dotarse de escalabilidad y tolerancia a fallos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/02/introduccion-conceptos-y-uso-basico-del-broker-de-mensajes-apache-kafka/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/los-juegos-de-epic-games-y-gog-en-gnu-linux-con-el-lanzador-heroic-games-laucher/</id>
        <title>Los juegos de Epic Games y GOG en GNU/Linux con el lanzador Heroic Games Laucher</title>
        <updated>2023-01-26T19:00:00+02:00</updated>
        <published>2023-01-26T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/los-juegos-de-epic-games-y-gog-en-gnu-linux-con-el-lanzador-heroic-games-laucher/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Que aún GNU/Linux es un sistema minoritario y lo seguirá siendo es una realidad pero que en GNU/Linux no se puede jugar a los mismos juegos de Windows es ya un mito. El cliente de Steam para GNU/Linux da acceso al amplio catálogo de juegos de esta tienda donde la mayoría de juegos se puede jugar. En este artículo muestro como instalar y usar el cliente Heroic Games Launcher para las tiendas Epic Games y GOG que combinado con los juegos que regala semanalmente la Epic Games da acceso a un buen catálogo de juegos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/01/los-juegos-de-epic-games-y-gog-en-gnu-linux-con-el-lanzador-heroic-games-laucher/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="juegos"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/</id>
        <title>Construir, desplegar y observar aplicaciones de forma uniforme con Waypoint</title>
        <updated>2023-01-19T20:00:00+01:00</updated>
        <published>2023-01-19T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Cuando se tienen muchas aplicaciones si no se tienen unos procesos definidos seguramente cada una requerirá su propio proceso, herramientas de construcción y despliegue. Estas diferencias añaden complejidad y no es deseable para tener un flujo de trabajo ágil. La herramienta Waypoint de HashiCorp permite construir una aplicación independientemente del lenguaje en el que esté implementada, desplegar en diferentes proveedores de computación en la nube y observar las aplicaciones una vez desplegadas, todo con la misma herramienta y de forma uniforme que simplifica en gran medida el flujo de desarrollo.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/construir-la-imagen-del-contenedor-de-la-aplicacion-usando-buildpacks/</id>
        <title>Construir la imagen del contenedor de la aplicación usando Buildpacks</title>
        <updated>2023-01-11T20:00:00+01:00</updated>
        <published>2023-01-11T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/construir-la-imagen-del-contenedor-de-la-aplicacion-usando-buildpacks/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los sistemas y servicios son significativamente complejos por sí mismos, además en sistemas que se componen de varios de ellos cada uno con sus diferencias añade más complejidad al sistema. Eliminar toda la complejidad posible y simplificar el sistema es algo deseable. La herramienta Buildpacks aplica a la construcción de las aplicaciones lo que los contenedores aplican en tiempo de ejecución de las mismas, uniformizando las aplicaciones independientemente del lenguaje y plataforma que usen.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-la-imagen-del-contenedor-de-la-aplicacion-usando-buildpacks/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/obtener-valores-de-configuracion-antes-iniciar-una-aplicacion-con-spring-boot/</id>
        <title>Obtener valores de configuración antes iniciar una aplicación con Spring Boot</title>
        <updated>2023-01-06T01:00:00+01:00</updated>
        <published>2023-01-06T01:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/obtener-valores-de-configuracion-antes-iniciar-una-aplicacion-con-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El mecanismo de configuración de Spring Boot es muy flexible y por otro lado Spring Boot proporciona varias formas de extensión. En el proceso de inicialización de la aplicación Spring Boot permite recibir eventos y realizar las acciones que se deseen. Uno de estos eventos es <em>ApplicationEnvironmentPreparedEvent</em> antes de inicializar el contexto y crear los <em>beans</em> del contenedor de dependencias, cyando se lanza este evento es posible acceder a las propiedades de configuración.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/01/obtener-valores-de-configuracion-antes-iniciar-una-aplicacion-con-spring-boot/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/12/hemeroteca-22/</id>
        <title>Hemeroteca #22</title>
        <updated>2022-12-29T21:00:00+01:00</updated>
        <published>2022-12-29T21:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/12/hemeroteca-22/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Este 2023 he escrito menos artículos que años anteriores, «solo» 52 artículos. Más allá del número de artículos pocas novedades más. Después de 13 años con un blog sigo con ganas de continuar escribiendo artículos y compartiendo lo que aprendo, a pesar de la gran cantidad de tiempo que me requiere.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/12/hemeroteca-22/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/12/crear-un-bean-segun-el-contexto-donde-se-inyecte-con-spring/</id>
        <title>Crear un bean según el contexto donde se inyecte con Spring</title>
        <updated>2022-12-22T19:00:00+02:00</updated>
        <published>2022-12-22T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/12/crear-un-bean-segun-el-contexto-donde-se-inyecte-con-spring/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Spring permite inyectar un <em>bean</em> construido utilizando información del contexto o clase donde se inyecte. Una caso de uso para esta funcionalidad es eliminar la habitual forma estática de inyectar las referencias a un Logger de una librería de <em>logging</em>, la inyección según el contexto permite proporciona el colaborador del Logger no como una variable estática sino en el constructor igual que otros colaboradores. Los beneficios son dos, se elimina una referencia estática que facilita los teses unitarios y se elimina un poco de código repetido en cada clase donde se use un Logger.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/12/crear-un-bean-segun-el-contexto-donde-se-inyecte-con-spring/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/12/radar-tecnologico-y-otras-fuentes-de-informacion-sobre-programacion/</id>
        <title>Radar tecnológico y otras fuentes de información sobre programación</title>
        <updated>2022-12-15T21:00:00+02:00</updated>
        <published>2022-12-15T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/12/radar-tecnologico-y-otras-fuentes-de-informacion-sobre-programacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Conocer que herramientas hay disponibles permite elegir aquellas que más apropiadas sean para resolver un problema, las herramientas no son el fin pero si un medio determinante. Las herramientas usadas diariamente en el trabajo no permiten experimentar y conocer otras nuevas herramientas que en algún momento puedan pasar a considerarse una mejor opción. El radar tecnológico de Thoughtworks hace un resumen al menos dos veces al año a tener en cuenta con los cambios en las herramientas, además permite conocer nuevas herramientas.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/12/radar-tecnologico-y-otras-fuentes-de-informacion-sobre-programacion/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>