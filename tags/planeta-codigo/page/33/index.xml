<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2021-12-16T19:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/</id>
        <title>Ejemplo de listener de eventos de Hibernate</title>
        <updated>2015-02-21T23:30:00+01:00</updated>
        <published>2015-02-20T16:30:44+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En alguna ocasión puede que tengamos la necesidad de realizar alguna acción cuando una entidad es guardada en base de datos, actualizada, eliminada, cargada, &hellip; . Algunos casos de uso pueden ser:</p>
<ul>
<li>Establecer la fecha de creación o de actualización del objeto cuando es persistido en base de datos.</li>
<li>Cifrar un dato del objeto al ser persistido en base de datos.</li>
<li>Proporcionar seguridad de modo que un usuario solo pueda modificar o acceder a los objetos a los que tenga acceso.</li>
<li>Al persistir el objeto guardar en un campo el valor calculado resultado de una función.</li>
<li>Cualquier otra restricción, cálculos o acciones.</li>
</ul>
<p>Para realizar estas operaciones podemos hacerlas de varias formas, una puede ser usando <em>triggers</em> de la base de datos disponibles en <a href="https://www.oracle.com/database/">Oracle</a> y <a href="https://www.postgresql.org/">PostgreSQL</a>. Si usamos <a href="https://hibernate.org/">Hibernate</a> como librería ORM de persistencia en una aplicación el equivalente a los <em>triggers</em> de BBDD es mediante un <em>listener</em> que sea llamado al ocurrir ciertos eventos. En la clase <a href="https://docs.jboss.org/hibernate/orm/4.3/javadocs/org/hibernate/event/spi/EventType.html"><em>EventType</em></a> está la lista completa de los eventos que podemos recibir y la clase <em>listener</em> que debemos implementar para recibir cada uno de los eventos. Esta es la lista de los eventos disponibles según los conceptos que usa Hibernate:</p>
<ul>
<li>AUTO_FLUSH</li>
<li>CLEAR</li>
<li>DELETE</li>
<li>DIRTY_CHECK</li>
<li>EVICT</li>
<li>FLUSH</li>
<li>FLUSH_ENTITY</li>
<li>INIT_COLLECTION</li>
<li>LOAD</li>
<li>LOCK</li>
<li>MERGE</li>
<li>PERSIST</li>
<li>PERSIST_ONFLUSH</li>
<li>POST_COLLECTION_RECREATE</li>
<li>POST_COLLECTION_REMOVE</li>
<li>POST_COLLECTION_UPDATE</li>
<li>POST_COMMIT_DELETE</li>
<li>POST_COMMIT_INSERT</li>
<li>POST_COMMIT_UPDATE</li>
<li>POST_DELETE</li>
<li>POST_INSERT</li>
<li>POST_LOAD</li>
<li>POST_UPDATE</li>
<li>PRE_COLLECTION_RECREATE</li>
<li>PRE_COLLECTION_REMOVE</li>
<li>PRE_COLLECTION_UPDATE</li>
<li>PRE_DELETE</li>
<li>PRE_INSERT</li>
<li>PRE_LOAD</li>
<li>PRE_UPDATE</li>
<li>REFRESH</li>
<li>REPLICATE</li>
<li>RESOLVE_NATURAL_ID</li>
<li>SAVE</li>
<li>SAVE_UPDATE</li>
<li>UPDATE</li>
</ul>
<p>Con estos eventos podemos ser notificados de muchas cosas que suceden internamente en Hibernate en algunos casos antes y/o después del evento. En JPA se dispone de varias anotaciones (@PreInsert, @PostInsert, &hellip;) con las que podemos marcar un determinado método como <em>listener</em> de un evento pero no funcionan si usamos únicamente Hibernate.</p>
<p>En este artículo explicaré como implementar un <em>listener</em> de ejemplo que reciba parte de estos eventos usando solo Hibernate. Primeramente e importante, debemos tener en cuenta que el proceso como reacción a uno de estos eventos ha de ser muy ligero y tardar poco tiempo ya que algunos eventos son lanzados por cada instancia de entidad como consecuencia de operaciones muy frecuentes en una aplicación, si tardasen mucho o consumiesen mucha memoria o tiempo de procesador probablemente el rendimiento de la aplicación disminuiría notablemente.</p>
<p>Como se ve en la clase <a href="https://docs.jboss.org/hibernate/orm/4.3/javadocs/org/hibernate/event/spi/EventType.html">EventType</a> cada evento tiene un <em>listener</em> distinto, para evitar crear una clase diferente por cada <em>listener</em> podemos emplear el <a href="https://es.wikipedia.org/wiki/Adapter_%28patr%C3%B3n_de_dise%C3%B1o%29">patrón de diseño <em>Adapter</em></a> de forma que implemente las diferentes interfaces en las que estamos interesados. La implementación de la clase <em>Adapter</em> y una implementación de esta clase <em>Adapter</em> si nos interesasen los eventos PRE_INSERT, PRE_UPDATE, PRE_DELETE, POST_INSERT, POST_UPDATE, POST_DELETE sería la siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.services.hibernate</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostDeleteEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostDeleteEventListener</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostInsertEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostInsertEventListener</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostUpdateEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostUpdateEventListener</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreDeleteEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreDeleteEventListener</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreInsertEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreInsertEventListener</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreUpdateEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreUpdateEventListener</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.persister.entity.EntityPersister</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HibernateEventAdapter</span> <span class="kd">implements</span> <span class="n">PreInsertEventListener</span><span class="o">,</span> <span class="n">PostInsertEventListener</span><span class="o">,</span> <span class="n">PreUpdateEventListener</span><span class="o">,</span> <span class="n">PostUpdateEventListener</span><span class="o">,</span> <span class="n">PreDeleteEventListener</span><span class="o">,</span>&#10;		<span class="n">PostDeleteEventListener</span> <span class="o">{</span>&#10;&#10;	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="n">1L</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">requiresPostCommitHanding</span><span class="o">(</span><span class="n">EntityPersister</span> <span class="n">persister</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPostDelete</span><span class="o">(</span><span class="n">PostDeleteEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onPreDelete</span><span class="o">(</span><span class="n">PreDeleteEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPostUpdate</span><span class="o">(</span><span class="n">PostUpdateEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onPreUpdate</span><span class="o">(</span><span class="n">PreUpdateEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPostInsert</span><span class="o">(</span><span class="n">PostInsertEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onPreInsert</span><span class="o">(</span><span class="n">PreInsertEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HibernateEventAdapter.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.services.hibernate</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostDeleteEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostInsertEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PostUpdateEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreDeleteEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreInsertEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.PreUpdateEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.services.spring.DummyService</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductoEventAdapter</span> <span class="kd">extends</span> <span class="n">HibernateEventAdapter</span> <span class="o">{</span>&#10;&#10;	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="n">1L</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">DummyService</span> <span class="n">dummy</span><span class="o">;</span>&#10;	&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDummy</span><span class="o">(</span><span class="n">DummyService</span> <span class="n">dummy</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">this</span><span class="o">.</span><span class="na">dummy</span> <span class="o">=</span> <span class="n">dummy</span><span class="o">;</span>		&#10;	<span class="o">}</span>&#10;	&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPostDelete</span><span class="o">(</span><span class="n">PostDeleteEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">dummy</span><span class="o">.</span><span class="na">process</span><span class="o">(</span><span class="s">&#34;postDelete&#34;</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getEntity</span><span class="o">());</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onPreDelete</span><span class="o">(</span><span class="n">PreDeleteEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">dummy</span><span class="o">.</span><span class="na">process</span><span class="o">(</span><span class="s">&#34;preDelete&#34;</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getEntity</span><span class="o">());</span>&#10;		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPostUpdate</span><span class="o">(</span><span class="n">PostUpdateEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">dummy</span><span class="o">.</span><span class="na">process</span><span class="o">(</span><span class="s">&#34;postUpdate&#34;</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getEntity</span><span class="o">());</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onPreUpdate</span><span class="o">(</span><span class="n">PreUpdateEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">dummy</span><span class="o">.</span><span class="na">process</span><span class="o">(</span><span class="s">&#34;preUpdate&#34;</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getEntity</span><span class="o">());</span>&#10;		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPostInsert</span><span class="o">(</span><span class="n">PostInsertEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">dummy</span><span class="o">.</span><span class="na">process</span><span class="o">(</span><span class="s">&#34;postInsert&#34;</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getEntity</span><span class="o">());</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onPreInsert</span><span class="o">(</span><span class="n">PreInsertEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">dummy</span><span class="o">.</span><span class="na">process</span><span class="o">(</span><span class="s">&#34;preInsert&#34;</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getEntity</span><span class="o">());</span>&#10;		<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductoEventAdapter.java</span>
    </div>
</div>
<p>Una vez que tenemos la clase que va a recibir los eventos para que Hibernate la use debemos crear un <a href="http://docs.jboss.org/hibernate/orm/4.3/javadocs/org/hibernate/integrator/spi/Integrator.html">Integrator</a> que lo instanciará y la dará a conocer a Hibernate. En el siguiente código puede verse una implementación de un Integrator de Hibernate, en el se instancia el <em>listener</em> y se asocia a los diferentes eventos. En este caso solo se crea un <em>listener</em> pero perfectamente podríamos asociar varios <em>listeners</em> al mismo evento:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.services.hibernate</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.hibernate.cfg.Configuration</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.engine.spi.SessionFactoryImplementor</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.service.spi.EventListenerRegistry</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.event.spi.EventType</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.integrator.spi.Integrator</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.metamodel.source.MetadataImplementor</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.hibernate.service.spi.SessionFactoryServiceRegistry</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.services.spring.DummyService</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HibernateIntegrator</span> <span class="kd">implements</span> <span class="n">Integrator</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">integrate</span><span class="o">(</span><span class="n">Configuration</span> <span class="n">configuration</span><span class="o">,</span> <span class="n">SessionFactoryImplementor</span> <span class="n">sessionFactory</span><span class="o">,</span> <span class="n">SessionFactoryServiceRegistry</span> <span class="n">serviceRegistry</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// As you might expect, an EventListenerRegistry is the place with which event listeners are registered. It is a service&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// so we look it up using the service registry&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">final</span> <span class="n">EventListenerRegistry</span> <span class="n">eventListenerRegistry</span> <span class="o">=</span> <span class="n">serviceRegistry</span><span class="o">.</span><span class="na">getService</span><span class="o">(</span><span class="n">EventListenerRegistry</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProductoEventAdapter</span> <span class="n">pea</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProductoEventAdapter</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">pea</span><span class="o">.</span><span class="na">setDummy</span><span class="o">(</span><span class="k">new</span> <span class="n">DummyService</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">eventListenerRegistry</span><span class="o">.</span><span class="na">setListeners</span><span class="o">(</span><span class="n">EventType</span><span class="o">.</span><span class="na">PRE_INSERT</span><span class="o">,</span> <span class="n">pea</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">eventListenerRegistry</span><span class="o">.</span><span class="na">setListeners</span><span class="o">(</span><span class="n">EventType</span><span class="o">.</span><span class="na">PRE_UPDATE</span><span class="o">,</span> <span class="n">pea</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">eventListenerRegistry</span><span class="o">.</span><span class="na">setListeners</span><span class="o">(</span><span class="n">EventType</span><span class="o">.</span><span class="na">PRE_DELETE</span><span class="o">,</span> <span class="n">pea</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">eventListenerRegistry</span><span class="o">.</span><span class="na">setListeners</span><span class="o">(</span><span class="n">EventType</span><span class="o">.</span><span class="na">POST_INSERT</span><span class="o">,</span> <span class="n">pea</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">eventListenerRegistry</span><span class="o">.</span><span class="na">setListeners</span><span class="o">(</span><span class="n">EventType</span><span class="o">.</span><span class="na">POST_UPDATE</span><span class="o">,</span> <span class="n">pea</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">eventListenerRegistry</span><span class="o">.</span><span class="na">setListeners</span><span class="o">(</span><span class="n">EventType</span><span class="o">.</span><span class="na">POST_INSERT</span><span class="o">,</span> <span class="n">pea</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">integrate</span><span class="o">(</span><span class="n">MetadataImplementor</span> <span class="n">metadata</span><span class="o">,</span> <span class="n">SessionFactoryImplementor</span> <span class="n">sessionFactory</span><span class="o">,</span> <span class="n">SessionFactoryServiceRegistry</span> <span class="n">serviceRegistry</span><span class="o">)</span> <span class="o">{</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">disintegrate</span><span class="o">(</span><span class="n">SessionFactoryImplementor</span> <span class="n">sessionFactory</span><span class="o">,</span> <span class="n">SessionFactoryServiceRegistry</span> <span class="n">serviceRegistry</span><span class="o">)</span> <span class="o">{</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HibernateIntegrator.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.services.spring</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">es.com.blogspot.elblogdepicodev.plugintapestry.entities.Producto</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DummyService</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">process</span><span class="o">(</span><span class="n">String</span> <span class="n">action</span><span class="o">,</span> <span class="n">Object</span> <span class="n">entity</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">if</span> <span class="o">(</span><span class="n">entity</span> <span class="k">instanceof</span> <span class="n">Producto</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="n">Producto</span> <span class="n">p</span> <span class="o">=</span> <span class="o">(</span><span class="n">Producto</span><span class="o">)</span> <span class="n">entity</span><span class="o">;</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Action: %s, Id: %d&#34;</span><span class="o">,</span> <span class="n">action</span><span class="o">,</span> <span class="n">p</span><span class="o">.</span><span class="na">getId</span><span class="o">()));</span>&#10;		<span class="o">}</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DummyService.java</span>
    </div>
</div>
<p>Finalmente, para que Hibernate conozca la existencia de este Integrator debemos crear un archivo que contenga el nombre completo de la clase <em>Integrator</em>. El archivo ha de estar en de un librería .jar en la ubicación <em>/META-INF/services/org.hibernate.integrator.spi.Integrator</em> y disponible en el <em>classpath</em>. El contenido de este archivo para el ejemplo es:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">es.com.blogspot.elblogdepicodev.plugintapestry.services.hibernate.HibernateIntegrator&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Integrator</span>
    </div>
</div>
<p>Con esto ya recibiremos los eventos cuando ocurran. En el ejemplo aparecerá en la consola los mensajes cuando se inserte, actualice o elimine una fila de base de datos. En las capturas de imagen se muestran las trazas de una inserción, una traza para la preinseción <em>Action: preInsert, Id: null</em> donde se ve que la entidad no tienen identificativo asignado y otra traza después de la inserción <em>Action: postInsert, Id: 1</em> donde la entidad ya tiene identificativo asignado y la sentencia SQL se ha ejecutado, como se ve en la captura los mensajes salen antes y después de ejecutarse la sentencia SQL que se envía a la base de datos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/images/aplicacion_hu0b45db61e98ca1675bb43436b5213fc0_21055_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Creando un registro en la base de datos"><img src="https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/images/aplicacion_hu0b45db61e98ca1675bb43436b5213fc0_21055_300x200_fit_box_3.png" width="300" height="144" alt="Creando un registro en la base de datos" title="Creando un registro en la base de datos"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/images/consola_hu0c9252c0340101ac98b61a4a60ae4523_74264_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Trazas de ejecución del listener"><img src="https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/images/consola_hu0c9252c0340101ac98b61a4a60ae4523_74264_300x200_fit_box_3.png" width="300" height="193" alt="Trazas de ejecución del listener" title="Trazas de ejecución del listener"  class="lozad "></a></p>
</figure>
</div>
<p>Otra implementación distinta a la expuesta en este artículo es con anotaciones tal y como hace JPA, podríamos hacer una implementación de <em>listener</em> que busque una anotación en la entidad y llame a ese método cuando se produzca el evento. Depende de como  prefiramos organizar el código, si preferimos tener el código del <em>listener</em> separado de la entidad o todo el código en la propia entidad.</p>
<p>Esto así puede servirnos pero si el <em>listeners</em> es más complejo debamos hacer uso de un servicio de <a href="https://spring.io/">Spring</a>, en el ejemplo mostrado se usa la clase <em>DummyService.java</em> que es instanciada por <em>HibernateIntegrator.java</em> e inyectada en la clase adaptador <em>ProductoEventAdapter.java</em>. En el siguiente artículo explicaré lo que debemos hacer para <a href="https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/">crear un <em>listener</em> de Hibernate que use servicios de Spring</a> e inyecte dependencias de otros servicios, de esta forma el listener o adaptador podrá usar todas las funcionalidades de los servicios disponibles en el contenedor IoC de Spring.</p>
<p>El <a href="https://github.com/picodotdev/elblogdepicodev/tree/master/PlugInTapestry">código fuente completo del ejemplo</a> lo puedes encontrar en mi <a href="https://github.com/picodotdev/">repositorio de GitHub</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://docs.jboss.org/hibernate/orm/4.3/manual/en-US/html_single/">Documentación hibernate</a></li>
<li><a href="http://docs.jboss.org/hibernate/orm/3.6/reference/es-ES/html/events.html">Interceptores y eventos</a></li>
<li><a href="http://docs.jboss.org/hibernate/orm/4.3/devguide/en-US/html_single/#d5e2282">Special service registries</a></li>
<li><a href="http://planet.jboss.org/post/event_listener_registration">Event Listener Registration</a></li>
<li><a href="http://cursohibernate.es/doku.php?id=unidades:06_objetos_validaciones:04_listeners">Listeners y reglas de negocio</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/02/la-palabra-clave-assert-de-java-y-un-ejemplo/</id>
        <title>La palabra clave assert de Java y un ejemplo</title>
        <updated>2015-02-14T23:30:00+01:00</updated>
        <published>2015-02-13T19:55:54+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/02/la-palabra-clave-assert-de-java-y-un-ejemplo/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Aunque no es muy utilizada, para tareas de depuración es una ayuda que bien empleada permite descubrir el origen de algún <em>bug</em> en un programa. Los <em>asserts</em> en Java son ignorados, por tanto no suponen ninguna penalización en tiempo de ejecucción, salvo que se indique de forma explicita en la ejecución del programa, esto permite añadirlos al código fuente y activarlos en el momento que se desee realizar una depuración para encontrar errores.</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La palabra clave o reservada <em>assert</em> sirve para aseverar que en un determinado momento del código una determinada condición debe ser cierta. Está disponible en <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> desde la versión 1.4 pero al menos yo con bastantes años de experiencia en programación en este lenguaje aún no he usado de forma amplia y posiblemente le pase a mucha de la gente y aún así hemos sobrevivido durante todo este tiempo.</p>
<p>Sin embargo, puede resultarnos bastante útil. Una de las situaciones en que puede ayudarnos es para descubrir una condición no válida en el momento del <em>assert</em> y no donde se produce una excepción en otro punto del código que puede no ser la causa real del error. Por ejemplo, supongamos que un método privado no acepta un parámetro con valor <em>null</em>, una variable no puede ser <em>null</em> o una colección no ha de estar vacía por poner solo unos pocos ejemplos de condiciones, si en un punto del código estamos seguros que es un error que esa condición sea falsa podemos hacer que el programa falle con una excepción ahí y no más tarde a consecuencia de que las condiciones no se cumplían. Otra forma en la que nos ayudan los <em>assert</em> es como documentación, en vez de poner un comentario o en el javadoc indicando una condición que se ha de cumplir podemos ponerlo con un <em>assert</em>. Normalmente se usan en:</p>
<ul>
<li>Precondiciones: en métodos privados que el llamador ha de cumplir.</li>
<li>Postcondiciones: para verificar el resultado prometido por el método.</li>
<li><em>Class invariants</em>: para validar el estado de una clase según está definido en su contrato, siempre se debe cumplir independientemente de las operaciones que se realicen.</li>
<li>Código no alcanzable en tiempo de ejecución: partes del programa que se espera que no sea alcanzable, como cláusulas <em>else</em> o <em>default</em> en sentencias <em>switch</em>.</li>
</ul>
<p>Y no deben usarse para:</p>
<ul>
<li>No se deben usar para comprobar argumentos en métodos públicos: los <em>asserts</em> pueden habilitarse o deshabilitarse, comprobar los argumentos se considera parte de las responsabilidades del método y su especificación.</li>
<li>No se deben usar para realizar tareas: ya que los <em>asserts</em> pueden deshabilitarse las tareas dejarían de ejecutarse y de proporcionar la funcionalidad del programa.</li>
</ul>
<p>Nos pueden entrar dudas de cuando emplear un <em>assert</em> y cuando un <em>if</em> o una excepción. Las excepciones se encargan de hacer que el programa sea robusto controlando las situaciones inesperadas pero posibles, los <em>assert</em> se encargan de que el programa sea correcto. Los <em>assert</em> deberían ser usados para asegurar algo, mientras que las excepciones deberían usarse para comprobar algo que podría ocurrir. Un <em>assert</em> termina la ejecución (ya que no se suele capturar la excepción que se produce) mientras que una excepción permite al programa continuar con la ejecución. Los <em>asserts</em> no deben ser sustitutos de condiciones de validación que debería hacer el programa en métodos públicos de una clase. Los <em>assert</em> son una herramienta en tiempo de desarrollo, las excepciones además son una herramienta para la ejecución en producción.</p>
<p>Un pequeño ejemplo de los <em>asserts</em> podría ser el siguiente en la que en el método <em>nextNumber</em> hay una postcondición según la cual el método debe devolver un número entero entre 0 y 9 (incluidos):</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.asserts</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;	&#10;	<span class="kd">public</span> <span class="nf">Main</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="cm">/**&#10;</span><span class="cm">	 * Devuelve un número entero entre 0 y 9.  &#10;</span><span class="cm">	 */</span>&#10;	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">nextNumber</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="n">40</span><span class="o">);</span>&#10;&#10;		<span class="c1">// Si el cálculo del número fuese más complejo incluyendo un assert&#10;</span><span class="c1"></span>		<span class="c1">// podemos asegurar en tiempo de desarrollo en esta postcondición&#10;</span><span class="c1"></span>		<span class="c1">// el valor generado por este método.&#10;</span><span class="c1"></span>		<span class="c1">// La línea de código anterior según el contrato del método debería ser:&#10;</span><span class="c1"></span>		<span class="c1">// int i = random.nextInt(10);&#10;</span><span class="c1"></span>		<span class="k">assert</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">:</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;El número devuelto no cumple la postcondición (%d)&#34;</span><span class="o">,</span> <span class="n">i</span><span class="o">);</span>&#10;		&#10;		<span class="k">return</span> <span class="n">i</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;	&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">Main</span> <span class="n">main</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Main</span><span class="o">();</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">main</span><span class="o">.</span><span class="na">nextNumber</span><span class="o">());</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Un <em>assert</em> cuya expresión se evalúa como falso produce una excepción del tipo <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/AssertionError.html">java.lang.AssertionError</a> pero para ello se han de habilitar en tiempo de ejecución como el parámetro <em>-ea</em> de la máquina virtual. En <a href="https://eclipse.org">eclipse</a> podemos cambiarlo en la configuración de ejecución del programa en la pestaña <em>Arguments</em> y <em>VM arguments</em> tal como se ven en la siguiente captura de pantalla:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/02/la-palabra-clave-assert-de-java-y-un-ejemplo/images/activacion-assert-java_hu2e618f9c78b18a1339b62fd0703ef314_89957_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación asserts en eclipse"><img src="https://picodotdev.github.io/blog-bitix/2015/02/la-palabra-clave-assert-de-java-y-un-ejemplo/images/activacion-assert-java_hu2e618f9c78b18a1339b62fd0703ef314_89957_300x200_fit_box_3.png" width="247" height="200" alt="Activación asserts en eclipse" title="Activación asserts en eclipse"  class="lozad "></a></p>
</figure>
</div>
<p>En la primera de las siguientes capturas de pantalla puede verse como el programa se ejecuta sin producir una excepción a pesar de no cumplirse el <em>assert</em> del método <em>nextNumber</em> ya que los <em>asserts</em> no fueron activados, en la segunda captura activando los <em>assert</em> se lanza una excepción al no cumplirse la postcondición.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/02/la-palabra-clave-assert-de-java-y-un-ejemplo/images/excepcion-assert_huc23090cbec6c15a88fe151cfa6107b71_36727_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ejecución sin excepción"><img src="https://picodotdev.github.io/blog-bitix/2015/02/la-palabra-clave-assert-de-java-y-un-ejemplo/images/excepcion-assert_huc23090cbec6c15a88fe151cfa6107b71_36727_300x200_fit_box_3.png" width="300" height="65" alt="Ejecución sin excepción" title="Ejecución sin excepción"  class="lozad "></a></p>
</figure>
</div>
<p>En el recomendable artículo <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/language/assert.html"><em>Programming With Assertions</em></a> se comenta de forma más detallada y amplia el funcionamiento y uso adecuado de la palabra clave <em>assert</em> de Java.</p>
<p>El funcionamiento de los <em>assert</em> en <a href="https://www.groovy-lang.org/">Groovy</a> es distinto. En groovy los <em>assert</em> no pueden deshabilitarse, están siempre habilitados y por tanto no hace falta usar el parámetro <em>-ea</em> de la máquina virtual que empleamos en Java, no es un <em>bug</em> es una <em>feature</em>. Por el contrario, en Java los <em>asserts</em> se consideran una herramienta en tiempo de desarrollo o depuración y por tanto podemos habilitarlos mientras desarrollamos y no habilitarlos en producción, una de las razones es que los <em>asserts</em> pueden suponer una penalización de rendimiento si las comprobaciones son costosas en tiempo o carga de CPU cosa que no queremos en producción donde el código ya se considera correcto.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/technotes/guides/language/assert.html">Programming With Assertions</a></li>
<li><a href="https://stackoverflow.com/questions/18907487/correct-use-java-assert-keyword">Correct use Java “assert” keyword</a></li>
<li><a href="https://stackoverflow.com/questions/1957645/when-to-use-an-assertion-and-when-to-use-an-exception">When to use an assertion and when to use an exception</a></li>
<li><a href="https://stackoverflow.com/questions/8077757/is-groovys-assert-a-good-idea-for-production-code-unlike-javas-assert">Is Groovy’s assert a good idea for production code, unlike Java’s assert?</a></li>
<li><a href="http://www.flowstopper.org/2013/11/java-should-i-assert-or-throw.html">Java: Should I assert or throw AssertionError?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/02/5-aniversario-del-blog/</id>
        <title>5º aniversario del blog</title>
        <updated>2015-02-06T23:00:00+01:00</updated>
        <published>2015-02-06T16:16:16+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/02/5-aniversario-del-blog/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/octopress.png" width="300" height="300" alt="Octopress" title="Octopress"  class=""></p>
</div>
<p>Este día 6 cumplo un lustro con las bitácoras <a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev</a> y desde hace un año con <a href="https://picodotdev.github.io/blog-bitix/">Blog Bitix</a>. 5 años como <em>blogger</em> en los que normalmente he escrito un artículo cada semana y he publicado los viernes o sábados. 5 años escribiendo artículos en los que comparto el conocimiento que tengo y voy aprendiendo tratando de que sirvan de alguna forma a alguien que los lea.</p>
<p>Después de pasado todos estos años los motivos por los que lo empecé los sigo manteniendo y quizá aún con más ganas de seguir escribiendo para compartir el bueno o malo mucho o poco (trato de que sea bueno) pero tal como es el conocimiento que poseo. En mi caso tener un <em>blog</em> es una de las buenas cosas que me alegro de haber empezado, por el momento no me canso de seguir escribiendo y me permite aprender sobre cualquier cosa que me interese en cada momento. Los artículos que escribo no suelen tratar temas de actualidad salvo algunas ocasiones relevantes como con la <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">nueva versión de Java 8</a>, de vez en cuando hago algún análisis de los productos tecnológicos que pasan por mis manos como un <a href="https://elblogdepicodev.blogspot.com.es/2012/08/desempaquetado-unboxing-de-amazon.html">lector de libros electrónicos</a>, el <a href="https://elblogdepicodev.blogspot.com.es/2012/12/desempaquetado-sony-vaio-e-14p.html">portátil que compré hace unos años</a> o un <a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/">disco SSD</a>. Últimamente publico pocos artículos sobre linux o el software libre como <a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html">De Windows a Arch Linux</a>, más tarde <a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/">De Arch Linux a Arch Linux</a> o <a href="https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/">instalando linux a un portátil viejo</a> y últimamente más <a href="https://picodotdev.github.io/blog-bitix/tags/java/">artículos sobre programación con java</a>, desarrollo web, html y <a href="https://picodotdev.github.io/blog-bitix/tags/javascript/">javscript</a>. Una amplia colección de artículos que he publicado me han dado incluso para reunirlos y, completándolos con un poco más de contenido, hacer con ellos un <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">libro sobre Apache Tapestry</a> publicado de forma totalmente gratis en varios formatos incluidos de libro electrónico.</p>
<p>Durante este tiempo en ambos blogs he tenido unas 450K páginas vistas, en realidad no son muchas (por no decir pocas) comparadas con las conseguidas por otras bitácoras personales de temática similar. Actualmente según feedly Blog Bitix tiene aproximadamente 70 suscriptores, seguramente haya algunos más que feedly no contabilice, tampoco son muchos. El mayor tráfico proviene del buscador Google, vistas que llegan como &ldquo;paracaidistas&rdquo; buscando información desde un enlace en la página de resultados con sus búsquedas y las palabras clave. A medida que cada semana publico más contenido un mes tras otro Blog Bitix tiene unas cuantas visitas más pero el crecimiento es lento.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/02/5-aniversario-del-blog/images/analytics_hu68f87c887bd18d6cd25a4a99ef866566_65056_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Visitas semanales de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2015/02/5-aniversario-del-blog/images/analytics_hu68f87c887bd18d6cd25a4a99ef866566_65056_300x200_fit_box_3.png" width="300" height="111" alt="Visitas semanales de Blog Bitix" title="Visitas semanales de Blog Bitix"  class="lozad "></a></p>
</figure>
</div>
<p>En estos cinco años he recibido tres ingresos de Google por la publicidad AdSense que han sido aproximadamente unos 210 € en total, esta cantidad no compensa el tiempo dedicado pero recibir uno de vez en cuando es algo que no está mal. Hace algunos meses también he incluido algunos enlaces usando el <a href="https://afiliados.amazon.es">programa de afiliados de Amazon</a> por ejemplo en el <a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/">disco SSD que compré</a> y una <a href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/">colección de libros recomendables leer para cualquier programador</a>, aún no se superado la cantidad mínima (25 €) para que Amazon me haga el ingreso pero no me queda mucho. Para alguien que publique análisis de productos más a menudo el 5% de comisión y el 10% para libros que ofrece Amazon por compra realizada puede ser otra fuente para rentabilizar cómodamente una bitácora.</p>
<p>Un artículo me supone unas cuantas horas de dedicación, entre 3 y 10, desde que dejé de usar <a href="https://www.blogger.com/">Blogger</a> y empecé a usar <a href="http://octopress.org/">Octopress</a> la edición me requiere menos tiempo. A lo que más tiempo dedico es hacer el ejemplo funcional de código, escribir el artículo es en realidad lo que menos tiempo le dedico. También hay otras tareas necesarias como leer documentación para poder escribir luego sobre ello y realizar la edición para publicarlo creando los <a href="https://gist.github.com/">gist</a> de los trozos de código o las capturas de imágenes.</p>
<p>Durante estos días se me ha presentado la posibilidad de formar parte como editor en <a href="http://www.genbetadev.com/">Genbeta Dev</a>, a pesar de la buena oportunidad que significaba de que lo que escribo llegue a muchos más lectores me requería que escribiese unos cuatro artículos semanales cosa que por tiempo no podía asumir, con lo que al final seguiré en esta anárquica e independiente bitácora cosa que tampoco quería dejar. Sin embargo, me lo tomaré como muestra de que algo estoy haciendo bien para haber tenido esa oportunidad.</p>
<p>A pesar del esfuerzo y dedicación que supone la bitácora las visitas recibidas posteriormente, ver que cada mes crecen un poco más, esporádicamente algún comentario y alguien que se pone en contacto conmigo a través del correo electrónico por el momento son suficiente recompensa. Espero seguir así durante una buena cantidad de tiempo hasta que no lo disponga o se me agoten las fuerzas de continuar.</p>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/convertir-fechas-y-husos-horarios-en-java/</id>
        <title>Convertir fechas y husos horarios en Java</title>
        <updated>2015-08-11T23:00:00+01:00</updated>
        <published>2015-01-31T11:32:35+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/01/convertir-fechas-y-husos-horarios-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Aunque en muchas aplicaciones no será necesario si desarrollamos una aplicación que trabaje con diferentes países y fechas probablemente deberemos tener en cuenta múltiples <a href="https://es.wikipedia.org/wiki/Huso_horario">husos horarios</a> o zonas horarias. Según estos husos horarios, por ejemplo, en el momento que son las 12:00 en Madrid hora local no son las 12:00 en Buenos Aires, si dos ciudades emplean diferente huso horario hay que tenerlo en cuenta para obtener la hora local en cada ciudad.</p>
<p>Hasta la versión 7 de Java el trabajo con fechas era complicado con las clases proporcionadas <a href="https://docs.oracle.com/javase/7/docs/api/java/util/GregorianCalendar.html">GregorianCalendar</a> y <a href="https://docs.oracle.com/javase/7/docs/api/java/sql/Date.html">Date</a>, una alternativa a la API de Java para el manejo de fechas hasta esta versión era emplear la librería <a href="https://www.joda.org/joda-time/">JodaTime</a>. JodaTime ofrece una API mejor y más completa para el manejo de fechas hasta la versión de Java 7. Con la <a href="https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html">nueva API para fechas de Java 8</a>, <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">entre otras novedades incluídas</a>, la situación ha mejorado pero hasta que tengamos oportunidad de usar esta versión puede que pase bastante tiempo y sigamos obligados a usar JodaTime si tenemos posibilidad de usar esta librería o usar directamente la API de Java 7 si no podemos.</p>
<p>Otro aspecto que debemos tener en cuenta en una aplicación es en que huso horario vamos a guardar las fechas en la base de datos, para simplificar lo recomendable es guardar siempre las fechas en el mismo huso horario. Podemos elegir cualquier huso horario quizá la local del lugar donde estamos o una mas genérica como UTC.</p>
<p>Podemos convertir la fecha de un huso horario a otro ya sea usando JodaTime, Java 7 o Java 8, por ejemplo ¿si en Madrid (España) son las 12:00 que hora sería en ese momento en Buenos Aires (Argentina)? El código que podemos emplear en Java para cambiar de zona horaria y averiguarlo es el siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.timezone</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Calendar</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.GregorianCalendar</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.TimeZone</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.joda.time.DateTime</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.joda.time.DateTimeZone</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="c1">// JodaTime&#10;</span><span class="c1"></span>		<span class="o">{</span>&#10;			<span class="n">DateTime</span> <span class="n">fecha</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="n">2015</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">31</span><span class="o">,</span> <span class="n">12</span><span class="o">,</span> <span class="n">00</span><span class="o">,</span> <span class="n">DateTimeZone</span><span class="o">.</span><span class="na">forID</span><span class="o">(</span><span class="s">&#34;Europe/Madrid&#34;</span><span class="o">));</span>&#10;&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;JodaTime&#34;</span><span class="o">);</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Hora Madrid:\t\t %s\n&#34;</span><span class="o">,</span> <span class="n">fecha</span><span class="o">);</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Hora Buenos Aires:\t %s\n&#34;</span><span class="o">,</span> <span class="n">fecha</span><span class="o">.</span><span class="na">withZone</span><span class="o">(</span><span class="n">DateTimeZone</span><span class="o">.</span><span class="na">forID</span><span class="o">(</span><span class="s">&#34;America/Argentina/Buenos_Aires&#34;</span><span class="o">)));</span>&#10;		<span class="o">}</span>&#10;		&#10;		<span class="c1">// Java 8&#10;</span><span class="c1"></span>		<span class="o">{</span>&#10;			<span class="n">ZonedDateTime</span> <span class="n">fecha</span> <span class="o">=</span> <span class="n">ZonedDateTime</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">2015</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">31</span><span class="o">,</span> <span class="n">12</span><span class="o">,</span> <span class="n">00</span><span class="o">,</span> <span class="n">00</span><span class="o">,</span> <span class="n">00</span><span class="o">,</span> <span class="n">ZoneId</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;Europe/Madrid&#34;</span><span class="o">));</span>&#10;&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;\nJava 8&#34;</span><span class="o">);</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Hora Madrid:\t\t %s\n&#34;</span><span class="o">,</span> <span class="n">fecha</span><span class="o">);</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Hora Buenos Aires:\t %s\n&#34;</span><span class="o">,</span> <span class="n">fecha</span><span class="o">.</span><span class="na">withZoneSameInstant</span><span class="o">(</span><span class="n">ZoneId</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;America/Argentina/Buenos_Aires&#34;</span><span class="o">)));</span>			&#10;		<span class="o">}</span>&#10;&#10;		<span class="c1">// Java 7&#10;</span><span class="c1"></span>		<span class="o">{</span>&#10;			<span class="n">Calendar</span> <span class="n">calendar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GregorianCalendar</span><span class="o">();</span>&#10;			<span class="n">calendar</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">2015</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">31</span><span class="o">,</span> <span class="n">12</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">0</span><span class="o">);</span>&#10;&#10;			<span class="n">SimpleDateFormat</span> <span class="n">sdfMadrid</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&#34;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&#34;</span><span class="o">);</span>&#10;			<span class="n">sdfMadrid</span><span class="o">.</span><span class="na">setTimeZone</span><span class="o">(</span><span class="n">TimeZone</span><span class="o">.</span><span class="na">getTimeZone</span><span class="o">(</span><span class="s">&#34;Europe/Madrid&#34;</span><span class="o">));</span>&#10;&#10;			<span class="n">SimpleDateFormat</span> <span class="n">sdfArgentina</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&#34;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&#34;</span><span class="o">);</span>&#10;			<span class="n">sdfArgentina</span><span class="o">.</span><span class="na">setTimeZone</span><span class="o">(</span><span class="n">TimeZone</span><span class="o">.</span><span class="na">getTimeZone</span><span class="o">(</span><span class="s">&#34;America/Argentina/Buenos_Aires&#34;</span><span class="o">));</span>&#10;&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;\nJava 7&#34;</span><span class="o">);</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Hora Madrid:\t\t %s\n&#34;</span><span class="o">,</span> <span class="n">sdfMadrid</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">calendar</span><span class="o">.</span><span class="na">getTime</span><span class="o">()));</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Hora Buenos Aires:\t %s\n&#34;</span><span class="o">,</span> <span class="n">sdfArgentina</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">calendar</span><span class="o">.</span><span class="na">getTime</span><span class="o">()));</span>&#10;		<span class="o">}</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">JodaTime&#10;Hora Madrid:		 2015-01-31T12:00:00.000+01:00&#10;Hora Buenos Aires:	 2015-01-31T08:00:00.000-03:00&#10;&#10;Java 8&#10;Hora Madrid:		 2015-01-31T12:00+01:00[Europe/Madrid]&#10;Hora Buenos Aires:	 2015-01-31T08:00-03:00[America/Argentina/Buenos_Aires]&#10;&#10;Java 7&#10;Hora Madrid:		 2015-01-31T12:00:00+01:00&#10;Hora Buenos Aires:	 2015-01-31T08:00:00-03:00</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>output.txt</span>
    </div>
</div>
<p>Java 7 requiere unas pocas líneas de código fuente más y en este caso se hace usando un SimpleDateFormat, en el caso de JodaTime y Java 8 el código es bastante similar.</p>
<p>El huso horario de Madrid es <em>Europe/Madrid</em> y el huso horario de Buenos Aires es <em>America/Argentina/Buenos_Aires</em> en el momento de escribir este artículo Madrid tiene un desplazamiento respecto a UTC de +01:00 y Buenos Aires de -03:00 con lo que entre estas dos ciudades hay una diferencia de cuatro horas en tiempo local. Quizá nos interese conocer el <a href="http://www.timeanddate.com/worldclock/">tiempo local actual en una ciudad</a> y con el <a href="http://www.timeanddate.com/worldclock/converter.html">conversor entre husos horarios</a> podemos comprobar que hemos programado correctamente la conversión en código.</p>
<p>Finalmente, hay que tener en cuenta que los <a href="https://es.wikipedia.org/wiki/Horario_de_verano">horarios de verano</a> que se establecen en cada país con la intención de ajustar normalmente el horario a las horas de luz y de este modo ahorrar energía. Estos horarios de verano los establece cada país y varían más a menudo de lo que podemos creer, a veces son una cuestión política. En el JDK para actualizar estos horarios de verano debemos actualizar el JDK esperando que <a href="https://www.oracle.com/">Oracle</a> los haya actualizado debidamente o usar la herramienta <a href="https://www.oracle.com/us/technologies/java/tzupdater-readme-136440.html">Timezone Updater Tool</a>. El actualizar el JDK o usar la herramienta Timezone Updater Tool en un servidor para esto puede ser un problema o simplemente es algo que no controlamos como desarrolladores de la aplicación por no estar el servidor bajo nuestro control, esta es otra ventaja de usar JodaTime ya que esta librería como dependencia del proyecto si está bajo nuestro control y podemos ir actualizando la versión de la misma en la que los horarios de verano si están actualizados.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.oracle.com/javase/7/docs/api/java/util/Date.html">Java 7 Date API</a></li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html">Java 8 Time API</a></li>
<li><a href="https://www.joda.org/joda-time/">JodaTime</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">Novedades y nuevas características de Java 8</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/</id>
        <title>Internacionalización (i18n) en JavaScript</title>
        <updated>2015-01-31T01:00:00+01:00</updated>
        <published>2015-01-23T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/javascript.svg" width="200" height="200" alt="JavaScript" title="JavaScript"  class=""></p>
</div>
<p>Si desarrollamos una aplicación web, que es usada en múltiples idiomas y el lado del cliente tiene cierta complejidad quizá nos encontremos con la necesidad de proporcionar internacionalización (i18n) para los textos o mensajes mediante una librería javascript. Una de la que más me ha gustado de las que he encontrado ha sido <a href="https://www.i18next.com/">i18next</a> pero hay <a href="https://stackoverflow.com/questions/3084675/internationalization-in-javascript">varias opciones más</a>, incluidas dos que merecen ser nombradas que son <a href="http://airbnb.github.io/polyglot.js/">polyglot</a> y <a href="https://github.com/SlexAxton/messageformat.js">messageformat</a>, estas tres opciones son parecidas pero no tienen exactamente las mismas funcionalidades, deberemos evaluarlas para elegir una según lo que necesitemos.</p>
<p>La documentación de i18next no es muy extensa pero es suficiente, las funcionalidades que ofrece son:</p>
<ul>
<li>Soporte para variables (interpolación)</li>
<li>Soporte para variables anidadas</li>
<li>Soporte para múltiples formas plurales e indefinidos</li>
<li>Soporte sprintf</li>
<li>Integración con jquery</li>
<li>Búsqueda de locales</li>
<li>Obtención de traducciones del servidor</li>
<li>Cacheo de recursos en el navegador</li>
<li>Algunas otras adicionales</li>
</ul>
<p>Para mostrar su uso me basaré en el ejemplo <a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/">Lista de tareas con Backbone y React</a> al que le añadiré el soporte de internacionalización con i18next. Como en el ejemplo uso RequireJS usaré la versión de i18next con soporte para AMD. Una vez descargada y colocada en el directorio de los módulos de RequireJS deberemos añadir la dependencia a los módulos donde la usemos, en el caso del ejemplo en tareas.js. En el ejemplo los textos que se necesitan internacionalizar son el título, el texto que aparece en el input antes de introducir el nombre de una tarea, el número de tareas completadas y el texto del botón limpiar, para mostrar estos textos usaremos la función t de i18next que nos devolverá dada la clave del texto que queremos el valor adecuado según los archivos de literales y el idioma de la aplicación. Todo esto lo hacemos de la siguiente forma:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="nx">i18n</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="s1">&#39;Lista_de_tareas&#39;</span><span class="p">)</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tareas-1.js</span>
    </div>
</div>
<p>Los archivos de literales son poco más que una relación de claves valor similar a los archivos properties de Java aunque en el caso de i18next se definen en archivos con formato json. En este ejemplo la localización (l10n) que proporcionaré será para español (translation-dev.json, idioma por defecto) y para inglés (translation-en.json). Por cada idioma localizado necesitamos crea un archivo con los literales:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;Lista_de_tareas&#34;</span><span class="p">:</span> <span class="s2">&#34;Lista de tareas&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;COMPLETADAS_tareas_completadas_de_TOTAL&#34;</span><span class="p">:</span> <span class="s2">&#34;__completadas__ tarea completada de __total__&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;COMPLETADAS_tareas_completadas_de_TOTAL_plural&#34;</span><span class="p">:</span> <span class="s2">&#34;__completadas__ tareas completadas de __total__&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;Muy_bien_has_completado_todas_las_tareas&#34;</span><span class="p">:</span> <span class="s2">&#34;¡Muy bien! has completado todas las tareas&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;Limpiar&#34;</span><span class="p">:</span> <span class="s2">&#34;Limpiar&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;Introduce_una_nueva_tarea&#34;</span><span class="p">:</span> <span class="s2">&#34;Introduce una nueva tarea&#34;</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>translation-dev.json</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;Lista_de_tareas&#34;</span><span class="p">:</span> <span class="s2">&#34;Tasks List&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;COMPLETADAS_tareas_completadas_de_TOTAL&#34;</span><span class="p">:</span> <span class="s2">&#34;__completadas__ task completed of __total__&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;COMPLETADAS_tareas_completadas_de_TOTAL_plural&#34;</span><span class="p">:</span> <span class="s2">&#34;__completadas__ tasks completed of __total__&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;Muy_bien_has_completado_todas_las_tareas&#34;</span><span class="p">:</span> <span class="s2">&#34;¡Perfect! You have done all tasks&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;Limpiar&#34;</span><span class="p">:</span> <span class="s2">&#34;Clean&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;Introduce_una_nueva_tarea&#34;</span><span class="p">:</span> <span class="s2">&#34;Type a new task&#34;</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>translation-en.json</span>
    </div>
</div>
<p>Los lenguajes tienen diferentes formas plurales, por ejemplo, en español hay dos formas plurales (1 y más de uno) pero dependiendo del número de elementos a los que hagamos referencia y el lenguaje puede variar el <a href="http://docs.translatehouse.org/projects/localization-guide/en/latest/l10n/pluralforms.html?id=l10n/pluralforms">número de formas plurales</a>. Si en una aplicación ves las típicas eses entre paréntesis, (s), es porque esa aplicación aunque esté internacionalizada no soporta las múltiples formas plurales de los lenguajes, para un usuario ver esos (s) crea confusión y dificulta la lectura del texto. Si nos encontramos con este caso el literal de la forma plural lo definiríamos y lo obtendríamos de la siguiente forma en el caso del español, el parámetro <em>count</em> se utiliza para determinada la forma plural a utilizar (en el caso de español, singular o plural) y los parámetros <em>completadas</em> y <em>total</em> como parámetros del literal usando sus valores en la interpolación en la cadena:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="nx">i18n</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="s1">&#39;COMPLETADAS_tareas_completadas_de_TOTAL&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">completadas</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">total</span><span class="o">:</span> <span class="mi">4</span> <span class="p">});</span> &#10;<span class="c1">// -&gt; { count: 1 } -&gt; COMPLETADAS_tareas_completadas_de_TOTAL -&gt; &#10;</span><span class="c1">// -&gt; __completadas__ tarea completada de __total__ + { completadas: 1, total: 4 }&#10;</span><span class="c1">// -&gt; 1 tarea completada de 4&#10;</span><span class="c1"></span>&#10;<span class="nx">i18n</span><span class="p">.</span><span class="nx">t</span><span class="p">(</span><span class="s1">&#39;COMPLETADAS_tareas_completadas_de_TOTAL&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">count</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">completadas</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nx">total</span><span class="o">:</span> <span class="mi">4</span> <span class="p">});</span>&#10;<span class="c1">// -&gt; { count: 2 } -&gt; COMPLETADAS_tareas_completadas_de_TOTAL_plural&#10;</span><span class="c1">// -&gt; __completadas__ tareas completadas de __total__ + { completadas: 2, total: 4 }&#10;</span><span class="c1">// -&gt; 2 tareas completadas de 4&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tareas-2.js</span>
    </div>
</div>
<p>Para completar el ejemplo debemos inicializar la librería i18next con la configuración que queramos por lo menos para definir el locale  y la disposición de los archivos de literales. Esta configuración en el ejemplo está antes de inicializar el componente de la lista de tareas:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;react&#39;</span><span class="p">,</span> <span class="s1">&#39;tareas&#39;</span><span class="p">,</span> <span class="s1">&#39;i18next&#39;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">React</span><span class="p">,</span> <span class="nx">tareas</span><span class="p">,</span> <span class="nx">i18n</span><span class="p">)</span> <span class="p">{</span>&#10;	<span class="nx">i18n</span><span class="p">.</span><span class="nx">init</span><span class="p">({</span> &#10;		<span class="nx">lng</span><span class="o">:</span> <span class="nx">requirejs</span><span class="p">.</span><span class="nx">s</span><span class="p">.</span><span class="nx">contexts</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">locale</span><span class="p">,</span>&#10;		<span class="nx">getAsync</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>&#10;		<span class="nx">resGetPath</span><span class="o">:</span> <span class="s1">&#39;js/locales/__lng__/__ns__.json&#39;</span>&#10;	<span class="p">});</span>&#10;	&#10;	<span class="c1">// ...&#10;</span><span class="c1"></span><span class="p">});</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>main.js</span>
    </div>
</div>
<p>Cambiando el idioma preferido en el navegador podemos ver los textos de la aplicación según el mismo:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/lista-tareas-es_hu4fffc33330c7356efb7d78fb0bf1042f_112035_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Aplicación en español"><img src="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/lista-tareas-es_hu4fffc33330c7356efb7d78fb0bf1042f_112035_300x200_fit_box_3.png" width="296" height="200" alt="Aplicación en español" title="Aplicación en español"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/lista-tareas-en_hu29c1d8e2333171926bcb978ef1032464_111310_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Aplicación en inglés"><img src="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/lista-tareas-en_hu29c1d8e2333171926bcb978ef1032464_111310_300x200_fit_box_3.png" width="296" height="200" alt="Aplicación en inglés" title="Aplicación en inglés"  class="lozad "></a></p>
</figure>
</div>
<p>El texto que indica cuantas tareas están completadas usa las diferentes formas plurales del lenguaje, en el caso del español dos, singular y plural cuando se marca una o dos tareas completadas.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/una-tarea-completada_hu19880757f83886461346764de6ace85a_113614_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Una tarea completada"><img src="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/una-tarea-completada_hu19880757f83886461346764de6ace85a_113614_300x200_fit_box_3.png" width="296" height="200" alt="Una tarea completada" title="Una tarea completada"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/dos-tareas-completadas_hu19880757f83886461346764de6ace85a_114028_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dos tareas completadas"><img src="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/dos-tareas-completadas_hu19880757f83886461346764de6ace85a_114028_300x200_fit_box_3.png" width="296" height="200" alt="Dos tareas completadas" title="Dos tareas completadas"  class="lozad "></a></p>
</figure>
</div>
<p>i18next se encarga de obtener los archivos de traducciones automáticamente según el idioma en que se deba mostrar la aplicación, para el caso de que el usuario tenga como idioma preferido es-ES se buscarán los archivos localizados es-ES, es y finalmente dev:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/peticiones-locales-es-ES_huece4ec21fc827eead67df2f890a04fc9_155599_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Búsqueda de traducciones"><img src="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/peticiones-locales-es-ES_huece4ec21fc827eead67df2f890a04fc9_155599_300x200_fit_box_3.png" width="296" height="200" alt="Búsqueda de traducciones" title="Búsqueda de traducciones"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/peticiones-locales-dev_huce496a18efce224633be7674a57166e8_154965_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Búsqueda de traducciones"><img src="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/peticiones-locales-dev_huce496a18efce224633be7674a57166e8_154965_300x200_fit_box_3.png" width="296" height="200" alt="Búsqueda de traducciones" title="Búsqueda de traducciones"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez hechos los cambios y habiendo modificado las pruebas unitarias de javascript comprobamos que todos siguen pasando correctamente:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/teses_hu1a324ee03e7c394df7b271af0c2fb1f3_36608_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Pruebas unitarias"><img src="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/images/teses_hu1a324ee03e7c394df7b271af0c2fb1f3_36608_300x200_fit_box_3.png" width="300" height="171" alt="Pruebas unitarias" title="Pruebas unitarias"  class="lozad "></a></p>
</figure>
</div>
<p>Eso es todo, este ejemplo aunque sencillo muestra bastantes cosas que se podrían utilizar como base para algo real, usa <a href="https://requirejs.org/">RequireJS</a>, <a href="https://mustache.github.io/">Mustache</a>, <a href="https://backbonejs.org/">Backbone</a>, <a href="https://reactjs.org/">React</a>, <a href="https://jasmine.github.io/">Jasmine</a>, <a href="https://gruntjs.com/">Grunt</a> y ahora <a href="https://www.i18next.com/">i18next</a> por la parte cliente y <a href="https://resteasy.jboss.org/">RESTEasy</a> y <a href="https://tapestry.apache.org/">Apache Tapestry</a> por la parte servidor, cada una de estas tecnologías las he comentado individualmente en varios artículos.</p>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html">Introducción y ejemplo de RequireJS</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.html">Introducción y ejemplo de Mustache</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html">Logging en JavaScript con log4javascript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html">Capturar errores de JavaScript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/optimizar-modulos-de-requirejs.html">Optimizar módulos de RequireJS y archivos JavaScript</a></li>
<li><a href="http://elblogdepicodev.blogspot.com/2013/04/introduccion-y-ejemplo-de-backbonejs.html">Introducción y ejemplo de Backbone.js</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html">Ejemplo de pruebas unitarias en javascript con Jasmine y Sinon</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html">Ejemplo lista de tareas con Marionette</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/">Lista de tareas con Backbone y React</a></li>
</ul>
<p>El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/BackboneReact">código fuente completo de este ejemplo</a> está en <a href="https://github.com/picodotdev">mi repositorio de GitHub</a>, una vez descargado el código puedes probarlo en tu equipo con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew tomcatRun&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-tomcatRun.sh</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://stackoverflow.com/questions/3084675/internationalization-in-javascript">Internationalization in JavaScript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2011/08/internacionalizacion-lenguajes-con.html">Internacionalización a lenguajes con diferentes formas plurales en Java</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2011/11/internacionalizacion-i18n-de-campos-con.html">Internacionalización (i18n) de campos con Hibernate</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/</id>
        <title>Conferencia BilboStack 2015</title>
        <updated>2016-01-31T10:00:00+01:00</updated>
        <published>2015-01-18T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bilbostack.png" width="300" height="78" alt="BilboStack" title="BilboStack"  class=""></p>
</div>
<p>Un año más una de las primeras conferencias del año se ha celebrado en Bilbao, la <a href="https://bilbostack.com/">BilboStack</a> 2015. Esta edición del 2015 ha sido la cuarta entrega donde varios profesionales del sector de las tecnologías han hablado de diversos temas, desde programación hasta metodologías de desarrollo y algunas otras cosas relacionadas con la tecnología y el desarrollo. Cada año la BilboStack acoge a más asistentes en la <a href="http://www.deusto.es">Universidad de Deusto</a> dando lugar este año a un cambio de ubicación dentro de la propia universidad para poder dar cabida a todos de forma más cómoda. Como en ediciones anteriores este año ha seguido manteniéndose gratuita, lo único necesario ha sido el registro para adquirir la entrada.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/universidad_hubc8aa6765d5e99e6c97092ce358c3155_148077_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Universidad de Deusto"><img src="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/universidad_hubc8aa6765d5e99e6c97092ce358c3155_148077_300x200_fit_q90_box.jpg" width="267" height="200" alt="Universidad de Deusto" title="Universidad de Deusto"  class="lozad "></a></p>
</figure>
</div>
<p>Hasta el momento el formato de la conferencia ha sido presentaciones de 45 minutos en dos tracks simultáneos en horario únicamente de mañana y durante un día, siendo la agenda de este 2015 la siguiente:</p>
<table class="table">
    <thead class="table-light">
        <th width="140px">Hora</th>
		<th>Track 1</th>
	</thead>
	<tbody>
		<tr>
			<td style="vertical-align: top;">9:00 - 9:45</td>
			<td>Desarrollo de aplicaciones web con .NET en MAC: open source, multiplataforma e incluso gratuito <em>por Ibon Landa</em></td>
		</tr>
		<tr>
			<td>10:00 - 10:45</td>
			<td>Google es ciego <em>por Oihana Alberdi</em></td>
		</tr>
		<tr>
			<td>11:15 - 12:00</td>
			<td>Descubriendo los Beacons <em>por Borja Reinares</em></td>
		</tr>
		<tr>
			<td>12:15 - 13:00</td>
			<td>¿Qué es eso de IoT? <em>por Quique Martinez</em></td>
		</tr>
		<tr>
			<td>13:15 - 14:00</td>
			<td>Bomberos pirómanos <em>por Ujue Agudo y Aritz Suescun</em></td>
		</tr>
	</tbody>
</table>
<table class="table">
    <thead class="table-light">
        <th width="140px">Hora</th>
		<th>Track 2</th>
	</thead>
	<tbody>
		<tr>
			<td style="vertical-align: top;">9:00 - 9:45</td>
			<td>Errores comunes en la visualización de datos y algunas soluciones <em>por Pablo Garaizar</em></td>
		</tr>
		<tr>
			<td>10:00 - 10:45</td>
			<td>ReactJS: un enfoque distinto a la UI en JavaScript <em>por Eduard Tomás</em></td>
		</tr>
		<tr>
			<td>11:15 - 12:00</td>
			<td>Creando directivas para AngularJs <em>por Hugo Biarge</em></td>
		</tr>
		<tr>
			<td>12:15 - 13:00</td>
			<td>WordPress al limite <em>por Asier Marqués</em></td>
		</tr>
		<tr>
			<td>13:15 - 14:00</td>
			<td>Arquitectura frontend de CartoDB <em>por Javi Santana</em></td>
		</tr>
	</tbody>
</table>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/track1_huf31e4ef64f7c3f38e59a34285a9f11b2_59977_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Sala track 1"><img src="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/track1_huf31e4ef64f7c3f38e59a34285a9f11b2_59977_300x200_fit_q90_box.jpg" width="266" height="200" alt="Sala track 1" title="Sala track 1"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/track2_hu5c46c924b6c660f63c9a07b86fab3514_127174_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Sala track 2"><img src="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/track2_hu5c46c924b6c660f63c9a07b86fab3514_127174_300x200_fit_q90_box.jpg" width="300" height="168" alt="Sala track 2" title="Sala track 2"  class="lozad "></a></p>
</figure>
</div>
<p>Como cada año no puede faltar alguna presentación del ubicuo JavaScript y en las presentaciones de años anteriores ha habido de PHP, Python, Groovy y .NET pero aún no ha habido ninguna de Java (a pesar de que será uno de los más usados por los asistentes). Después de revisar la agenda de este año he asistido únicamente y a todas a las presentaciones del track 1. Del track 2 me llamaban la atención la de ReactJS, pero es una herramienta que ya conozco y que me parece de lo mejor para su propósito aún así intuía que iba a conocer poco nuevo después de escribir el artículo <a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/">Ejemplo lista de tareas con Backbone y React</a> y usarlo en el ejemplo simple pero ilustrativo mostrado. También me llamaba la atención Wordpress al límite y Arquitectura frontend de CartoDB. A continuación un resumen breve de cada una de las presentaciones a las que he asistido.</p>
<hr>
<h3 id="desarrollo-de-aplicaciones-web-con-net-en-mac-open-source-multiplataforma-e-incluso-gratuito-empor-ibon-landaem">Desarrollo de aplicaciones web con .NET en MAC: open source, multiplataforma e incluso gratuito <em>por Ibon Landa</em></h3>
<p>Yo me muevo alrededor de la plataforma <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> en vez de <a href="https://www.microsoft.com/net">.NET</a> pero parece que Microsoft está dando un giro a su plataforma para dar cabida a opciones como <a href="https://www.linux.com/">Linux</a> o <a href="https://www.apple.com/es/mac/">Mac</a> y hacerla un poco más abierta tanto en su desarrollo como en su comunidad. Creo que más bien por necesidad que por ser buenos, en el ámbito empresarial y de servidores Java está mucho más establecido y tiene algunas comunidades y projectos más cerca del software libre y del código abierto como <a href="https://www.apache.org/">Apache</a>, <a href="https://spring.io/">Spring</a> o <a href="https://www.jboss.org/">JBoss</a> que además proporcionan proyectos de gran calidad y utilidad sin costes de licencias. El software libre, el código abierto y el coste de las licencias son argumentos de venta y se toman en consideración, si Microsoft no quiere dejar aislado a .NET en su propia plataforma Windows que aún con una gran cuota en el escritorio, en un futuro probablemente disminuya y mucha menos cuota en los servidores, no le queda más remedio que abrirse. Pero esta solo es mi opinión, en cualquier caso me parece un buen paso y bienvenido es.</p>
<p>La nueva plataforma de .NET comentada en la presentación aparte de ser agnóstico en el sistema operativo trata de ser agnóstico y quizá por facilidad de implementación cualquiera de ellos en las herramientas de desarrollo, de este modo, en esta nueva versión para el desarrollo no será necesario <a href="https://visualstudio.microsoft.com/">Microsoft Visual Studio</a> y podrá hacerse con cualquier editor de texto (<a href="https://www.sublimetext.com/">Sublime</a>, <a href="https://www.vim.org/">vim</a>, <a href="https://www.gnu.org/software/emacs/">emacs</a> o notepad) y desde la terminal. Esta nueva visión agnóstica de las herramientas hace que puedan ser utilizadas las que más adecuadas consideremos para una tarea aparte de las que ofrezca la propia Microsoft como <a href="https://gruntjs.com/">Grunt</a>, <a href="https://bower.io/">Bower</a>, <a href="https://karma-runner.github.io">Karma</a>, <a href="https://jasmine.github.io/">Jasmine</a>.</p>
<p>Después de la presentación me planteo aprender algo de .NET porque siendo pragmático hay una buena cantidad de ofertas de trabajo solicitando conocimientos en esta plataforma y algunas aparentemente interesantes.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/dotnet_hu0deb91fb81ffe484194292803dd4d9b1_147114_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desarrollo de aplicaciones web con .NET en MAC o Linux"><img src="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/dotnet_hu0deb91fb81ffe484194292803dd4d9b1_147114_300x200_fit_q90_box.jpg" width="267" height="200" alt="Desarrollo de aplicaciones web con .NET en MAC o Linux" title="Desarrollo de aplicaciones web con .NET en MAC o Linux"  class="lozad "></a></p>
</figure>
</div>
<h3 id="google-es-ciego-empor-oihana-alberdiem">Google es ciego <em>por Oihana Alberdi</em></h3>
<p>El título de la presentación viene motivado porque Google procesa el contenido no como lo vemos nosotros en el navegador sino por ejemplo sin estilos, de modo que dando importancia como está definido el contenido en el html de una página y haciendo que sea accesible mejoraremos como es indexada la página por Google y por tanto su posicionamiento en el buscador, pero también mejorando la accesibilidad de una página ayudaremos a que las personas con algún tipo de impedimento pueda acceder el contenido de forma más cómoda.</p>
<p>En la mejora de la accesibilidad de una página intervienen tanto diseñadores (tipografía, colores, estilos externalizados) como desarrolladores (código html limpio, javascript no intrusivo) y pueden ayudarse de herramientas como <a href="http://validator.w3.org/">validadores de HTML</a>, <a href="http://jigsaw.w3.org/css-validator/">validadores de CSS</a>, <a href="http://www.tawdis.net/">validadores de accesibilidad</a>. También podemos comprobar como se ve una página sin estilos (como es accedida por google), con javascript deshabilitado, añadiendo atributos alt (como a imágenes), añadiendo teclas de acceso, &hellip; algunas de estas cosas pueden probarse rápidamente con el <a href="https://addons.mozilla.org/es/firefox/addon/web-developer/">plugin web developer de Firefox</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/google-es-ciego_hu4e3ba4a773c576ae9d446c72b9ac5705_139286_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Google es ciego"><img src="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/google-es-ciego_hu4e3ba4a773c576ae9d446c72b9ac5705_139286_300x200_fit_q90_box.jpg" width="267" height="200" alt="Google es ciego" title="Google es ciego"  class="lozad "></a></p>
</figure>
</div>
<h3 id="descubriendo-los-beacons-empor-borja-reinaresem">Descubriendo los Beacons <em>por Borja Reinares</em></h3>
<p>La verdad es que no conocía de nada que eran en el mundo tecnológico los <em>beacons</em> salvo por lo poco que puede proporcionar su nombre, en la descripción de la charla no aparecía ningún texto de descripción. Mediante algún <a href="https://www.20minutos.es/noticia/2052004/0/beacons/mejor-que-gps/geolocalizacion/">artículo</a> he podido conocer algo sobre ellos y por donde podía ir la charla. La alternativa era la presentación de <a href="https://angular.io/">AngularJS</a> y personalmente estando más convencido de la opción <a href="https://backbonejs.org/">Backbone</a> y <a href="https://reactjs.org/">ReactJS</a> prefería conocer algo de los <em>beacons</em>.</p>
<p>Como su nombre indica un <em>beacon</em> o baliza es un dispositivo que emite una señal identificable, por bluethooth (<a href="https://en.wikipedia.org/wiki/Bluetooth_low_energy">Bluethooth Low Energy</a>, BLE). Posteriormente, un dispositivo como un teléfono inteligente (Android, iPhone o Windows Phone) con una aplicación instalada permite procesar esa señal para ofrecer alguna función útil para el usuario en base a la distancia hasta la baliza (0,5 metros, 2m, 30m), estas sol algunas <a href="https://en.wikipedia.org/wiki/Bluetooth_low_energy#Applications">aplicaciones de los <em>beacons</em> con BLE</a>. Algunos usos que se están dando a esta tecnología es en las Apple Store o en algunas tienda de ropa de EEUU.</p>
<p>BLE es distinto de NFC, BLE es una comunicación de 1:N, consume batería y el usuario no tiene que hacer nada, por el contrario, NFC es una comunicación 1:1, no consume energía (considerable) y necesita la intervención del usuario. Entre los retos de los <em>beacons</em> que debe resolver es el consumo de energía, necesita una aplicación instalada en el dispositivo, la reticencia del usuario a perder privacidad o problemas legales de protección de datos.</p>
<p>Los <em>beacons</em> y BLE puede ser un nuevo campo tecnológico, veremos si realmente se convierte en útil y se implanta su uso o si finalmente desaparece y posteriormente resurge como un nuevo concepto basado en el anterior que finalmente sea usado.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/beacons_hu8e5352d39ff844a44f798ffe49b90533_127858_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Descubriendo los Beacons"><img src="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/beacons_hu8e5352d39ff844a44f798ffe49b90533_127858_300x200_fit_q90_box.jpg" width="267" height="200" alt="Descubriendo los Beacons" title="Descubriendo los Beacons"  class="lozad "></a></p>
</figure>
</div>
<h3 id="qué-es-eso-de-iot-empor-quique-martinezem">¿Qué es eso de IoT? <em>por Quique Martinez</em></h3>
<p>El <a href="https://es.wikipedia.org/wiki/Internet_de_las_cosas">internet de las cosas</a> (IoT) es otro palabro que aprender, salvo que ahora tiene un nombre molón es la consecuencia de la evolución de la tecnología, no es más que encontrar una aplicación útil a los dispositivos que tienen tendencia a ser cada vez más pequeños, baratos, que pueden usar múltiples sensores y con la posibilidad de estar conectados a internet.</p>
<p>El número de estos dispositivos aumentará rápidamente en los próximos años tratando de ofrecer funciones útiles tanto para las empresas como para las personas. Por ejemplo, quizá en un futuro un seguro requiera que el vehículo asegurado disponga un dispositivo de estos con sensores como acelerómetro, velocímetro u otros datos cuantificables que puedan ser utilizados para determinar sin en un accidente se circulaba a más de 120 km/h o hacer una llamada de emergencia en su caso.</p>
<p>Otro nuevo área tecnológico en el que descubrir aplicaciones útiles y con gran potencial.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/iot_hu95c163bb02b27e595f59df6e5b03e2e8_119780_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Internet de las cosas (IoT)"><img src="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/iot_hu95c163bb02b27e595f59df6e5b03e2e8_119780_300x200_fit_q90_box.jpg" width="267" height="200" alt="Internet de las cosas (IoT)" title="Internet de las cosas (IoT)"  class="lozad "></a></p>
</figure>
</div>
<h3 id="bomberos-pirómanos-empor-ujue-agudo-y-aritz-suescunem">Bomberos pirómanos <em>por Ujue Agudo y Aritz Suescun</em></h3>
<p>Durante el desarrollo de un proyecto de software en algún momento alguien (cliente, usuario, desarrollador, consultor, jefe de proyecto, diseñador, &hellip;) involucrado puede tener la sensación o certeza de que el producto que se está desarrollando no resuelve en alguna medida las necesidades del cliente y los usuarios y/o no es motivo de orgullo de los que lo realizan. El concepto de bombero pirómano trata de identificar estos problemas y hacerlos visibles para todos los involucrados y &ldquo;prender un  fuego&rdquo; con ellos como haría un pirómano. Sin embargo, estos fuegos pueden presentar peligros para el proyecto en el momento que no son tomadas medidas para apagarlos o resolverlos como haría un bombero. De esta forma se presenta el concepto de bombero pirómano formado por estos dos opuestos.</p>
<p>En <a href="https://www.biko2.com/">Biko</a> siguen tres ideas para mantener estos fuegos controlados:</p>
<ol>
<li>Quemar cuanto antes. Cuanto antes se prenda el fuego más margen de maniobra habrá en el proyecto haciendo con más garantías de que cumpla su objetivo y evitará malgastar tiempo, dinero y esfuerzo en el desarrollo.</li>
<li>Todo el equipo comparte la misma visión del proyecto. El esfuerzo es compartido por todos los involucrados evitando sorpresas cuando un fuego obliga a cambiar las funcionalidades según las restricciones que presenten los involucrados como prioridades o el mismo proyecto en tiempo o coste.</li>
<li>Mantener equilibrio constante. En el momento que aparece un fuego hay que tomar medidas para apagarlo evitando así perder el control del proyecto.</li>
</ol>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/bomberos-piromanos_hu6e6c455272234a8f6a921f0ab199aecb_112858_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Bombero pirómano"><img src="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/images/bomberos-piromanos_hu6e6c455272234a8f6a921f0ab199aecb_112858_300x200_fit_q90_box.jpg" width="267" height="200" alt="Bombero pirómano" title="Bombero pirómano"  class="lozad "></a></p>
</figure>
</div>
<hr>
<p>Por desgracia este año no ha sido posible grabar en vídeo las presentaciones pero pasados unos días seguro que se publican las diapositivas, sin embargo, con únicamente las diapositivas pierde mucho del contenido respecto a la presentación dada en vivo. En algunas presentaciones al menos se ha recogido el audio:</p>
<ul>
<li>Desarrollo de aplicaciones web con .NET en MAC: open source, multiplataforma e incluso gratuito <em>por Ibon Landa</em> <a href="https://www.slideshare.net/ibonilm/open-source-and-cross-platform-net">Diapositivas</a></li>
<li>Errores comunes en la visualización de datos y algunas soluciones <em>por Pablo Garaizar</em> <a href="https://www.slideshare.net/txipi/bilbostack2015-garaizar">Diapositivas</a></li>
<li>Creando directivas para AngularJs <em>por Hugo Biarge</em> <a href="https://onedrive.live.com/?cid=2BFC01CE6CF4BF53&amp;id=2BFC01CE6CF4BF53!14323">Diapositivas y demos</a></li>
<li>ReactJS: un enfoque distinto a la UI en JavaScript <em>por Eduard Tomás</em> <a href="https://www.slideshare.net/eduardtomas/introduccin-a-reactjs">Diapositivas</a></li>
<li>Wordpress al límite <em>por Asier Marqués</em></li>
<li>Arquitectura de CartoDB <em>por Javi Santana</em></li>
</ul>
<p>Había en una lista de reproducción de YouTube de <a href="https://www.meetup.com/es-ES/elcomite/">elComite</a> están disponibles casi todas las presentaciones de las ediciones 2012, 2013 y 2014 con las que saciar tu curiosidad. Para el año que viene si tienes posibilidad de ofrecerte para grabar las presentaciones con una cámara para poder publicarlas más tarde casi seguro que los organizadores estarían agradecidos y dispuestos a darte facilidades para ello.</p>
<p>Nuevamente esta edición de la BilboStack ha sido excelente gracias a sus organizadores, ponentes, Universidad de Deusto y asistentes, esperemos que en el 2016 continuemos disfrutando de esta gran conferencia.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/como-hacer-un-substring-de-una-cadena-html/</id>
        <title>Cómo hacer un substring de una cadena HTML</title>
        <updated>2015-01-16T13:03:52+01:00</updated>
        <published>2015-01-16T13:03:52+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/01/como-hacer-un-substring-de-una-cadena-html/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una de las cosas que he tenido que resolver en <a href="https://twitter.com/blogstackinfo">Blog Stack</a> es como conseguir un extracto del contenido completo de una cadena que es HTML. Esto lo he usado en los diferentes feeds de Blog Stack donde solo se muestra el extracto de cada artículo y no el texto completo. A primera vista puede parecer fácil pero no lo es tanto, cortar una cadena que es html haciendo un substring puede ocasionar problemas si se hace en un mal punto de la cadena y luego esa cadena cortada se inserta como contenido de nuevo el una página web. Lo más probable que ocurra es una desmaquetación de la página o que los estilos aparezcan mal pero puede dejar estropeada la página completa.</p>
<p>Por ejemplo, si tenemos la siguiente cadena y la cortamos en un mal punto y luego insertamos en una página html ese contenido lo que ocurrirá es que todo el texto a continuación de él aparecerá en negrita.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>Lorem ipsum ad his scripta blandit partiendo, &#10;eum fastidii accumsan euripidis in, &#10;eum liber hendrerit an.<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>text-1.html</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>Lorem ipsum ad his scripta blandit partiendo, eum fastidii&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>text-2.html</span>
    </div>
</div>
<p>Usar una expresión regular tampoco es solución, con alguna puede parecer que en algún caso funciona pero posiblemente para cada expresión regular podamos encontrar un html para el que no sirva. La expresión regular puede ser complicada.</p>
<p>Para dar solución a este problema podemos emplear jsoup. <a href="https://jsoup.org/">Jsoup</a> es una librería Java que nos permite manipular el html, desde extraer en forma de texto plano el contenido hasta modificar el html empleando una API. Empleando esta librería podemos ir extrayendo el contenido para contar cuantos caracteres de texto contiene el html y a la vez crear un extracto del documento html.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="n">String</span> <span class="nf">getContentExcerpt</span><span class="o">()</span> <span class="o">{</span>&#10;	<span class="c1">// Obtener el documento que representa al contenido del que extraer el extracto&#10;</span><span class="c1"></span>	<span class="n">Document</span> <span class="n">document</span> <span class="o">=</span> <span class="n">Jsoup</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">getContent</span><span class="o">());</span>&#10;	<span class="kd">final</span> <span class="n">StringBuffer</span> <span class="n">excerpt</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>&#10;	<span class="kd">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Node</span><span class="o">&gt;</span> <span class="n">nodes</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;	<span class="c1">// Recorrer los nodos del documento&#10;</span><span class="c1"></span>	<span class="n">document</span><span class="o">.</span><span class="na">traverse</span><span class="o">(</span><span class="k">new</span> <span class="n">NodeVisitor</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="nd">@Override</span>&#10;		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">tail</span><span class="o">(</span><span class="n">Node</span> <span class="n">node</span><span class="o">,</span> <span class="kt">int</span> <span class="n">depth</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="o">}</span>&#10;&#10;		<span class="nd">@Override</span>&#10;		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">head</span><span class="o">(</span><span class="n">Node</span> <span class="n">node</span><span class="o">,</span> <span class="kt">int</span> <span class="n">depth</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="k">if</span> <span class="o">(</span><span class="n">excerpt</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">Globals</span><span class="o">.</span><span class="na">POST_EXCERPT_LENGHT</span><span class="o">)</span> <span class="o">{</span>&#10;				<span class="c1">// Se ha llegado al límite de caracteres del extracto, recoger los nodos posteriores&#10;</span><span class="c1"></span>				<span class="n">nodes</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">node</span><span class="o">);</span>&#10;			<span class="o">}</span>&#10;			<span class="k">if</span> <span class="o">(</span><span class="n">node</span> <span class="k">instanceof</span> <span class="n">TextNode</span><span class="o">)</span> <span class="o">{</span>&#10;				<span class="c1">// Añadir los caracteres al extracto, para contar el número de caracteres recorridos&#10;</span><span class="c1"></span>				<span class="n">TextNode</span> <span class="n">textNode</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextNode</span><span class="o">)</span> <span class="n">node</span><span class="o">;</span>&#10;				<span class="n">excerpt</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">textNode</span><span class="o">.</span><span class="na">text</span><span class="o">());</span>&#10;			<span class="o">}</span>&#10;		<span class="o">}</span>&#10;	<span class="o">});</span>&#10;	<span class="c1">// Eliminar los nodos posteriores del extracto&#10;</span><span class="c1"></span>	<span class="k">for</span> <span class="o">(</span><span class="n">Node</span> <span class="n">node</span> <span class="o">:</span> <span class="n">nodes</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">node</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span>&#10;	<span class="o">}</span>&#10;	<span class="c1">// Obtener el extracto del documento&#10;</span><span class="c1"></span>	<span class="k">return</span> <span class="n">document</span><span class="o">.</span><span class="na">body</span><span class="o">().</span><span class="na">html</span><span class="o">();</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppPostRecord.java</span>
    </div>
</div>
<p>Empleando esta librería la cadena del ejemplo anterior podría quedar:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>Lorem ipsum ad his scripta blandit partiendo, eum fastidii<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>text-3.html</span>
    </div>
</div>
<p>El resultado aplicando está solución puede verse en el <a href="https://picodotdev.github.io/blog-bitix/index.xml">feed de la portada de Blog Stack</a> donde se muestra una entradilla o extracto del inicio del contenido de cada uno de los artículos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/como-hacer-un-substring-de-una-cadena-html/images/blogstack_hu136623f3657149380e94f9bb052c5761_271412_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Portada Blog Stack"><img src="https://picodotdev.github.io/blog-bitix/2015/01/como-hacer-un-substring-de-una-cadena-html/images/blogstack_hu136623f3657149380e94f9bb052c5761_271412_300x200_fit_box_3.png" width="300" height="171" alt="Portada Blog Stack" title="Portada Blog Stack"  class="lozad "></a></p>
</figure>
</div>
<p>El código fuente de Blog Stack está disponible en un <a href="https://github.com/picodotdev/blog-stack/tree/master">repositorio de GitHub</a> donde puede verse el código completo.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/">Qué es y cómo hacer «web scraping» en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/">Cómo filtrar contenido HTML de forma segura</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/</id>
        <title>Introducción e inicio a Drupal</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2015-01-10T11:08:12+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/drupal.svg" width="200" height="218" alt="Drupal" title="Drupal"  class=""></p>
</div>
<p>Para los proyectos web cuyo punto central es el contenido disponemos de algunas opciones que prácticamente nos dan la solución hecha o facilitan enormemente la tarea como desarrolladores y posteriormente a los administradores que no necesitarán un gran conocimiento para administrar la web. Estas aplicaciones se les suele conocer como <a href="https://es.wikipedia.org/wiki/Sistema_de_gesti%C3%B3n_de_contenidos">Sistemas de gestión de contenidos</a> (Content Management System, CMS) y como siempre disponemos de varias opciones, algunas similares.</p>
<p>No soy un experto en CMS ni he usado uno en un proyecto real pero trataré en este artículo hacer una introducción a <a href="https://www.drupal.org/">Drupal</a>. Hay otras opciones como <a href="https://wordpress.org/">Wordpress</a> o <a href="https://www.joomla.org/">Joomla</a> también desarrolladas en <a href="https://secure.php.net/">PHP</a> y en el ámbito <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> otras como <a href="https://www.alfresco.com/">Alfresco</a>, <a href="https://www.nuxeo.com/">Nuxeo</a>, <a href="https://dotcms.com/">dotCMS</a> y <a href="https://www.liferay.com/">Liferay</a> aunque estas en algunos puntos son diferentes ofreciendo gestión documental o <a href="https://es.wikipedia.org/wiki/Portal_%28Internet%29">portales de internet</a>. Wordpress es más simple que Drupal pero si tenemos conocimientos de desarrollo Drupal posiblemente se adapte más a nuestras preferencias. Alfresco y Nuxeo son más bien gestores de contenido y de documentos pero no permiten gestionar como se visualiza el contenido en la web final, Liferay es algo más parecido a lo que ofrece Drupal pero tengo la sensación que es algo más compleja o no exactamente con las mismas opciones y está más destinado a la creación de portales web.</p>
<p>Drupal como decía está desarrollado sobre PHP pero solo necesitaremos conocer este lenguaje en el momento que queramos desarrollar y personalizarlo. Como usuarios para crear contenido y gestionar la disposición de los elementos en la página web no necesitamos conocer nada de PHP solo necesitaremos conocer como funciona la herramienta de administración que ofrece Drupal. El tipo de los proyectos para los que puede estar indicado Durpal puede ser aquellos en los que los usuarios quieran crear y publicar nuevo contenido y quieran ellos mismos modificar los elementos de las páginas sin necesidad de solicitar un desarrollo. Algunos casos de uso pueden ser instituciones de la administración pública, empresas, tiendas, comercios, &hellip; aquellos que quieran tener una presencia en internet y puedan necesitar añadir, modificar o eliminar en algún momento el contenido de su web. La tarea de los desarrolladores consistirá en personalizar la instalación de Drupal a las necesidades del cliente y sus usuarios ya sea adaptando el aspecto de la web a crear, creando la taxonomía del contenido, definiendo los tipos de contenidos y que información contiene, usuarios y roles, &hellip;</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/inicio_huf2a00d1862abd088cad08a0e96220a73_29179_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio Drupal"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/inicio_huf2a00d1862abd088cad08a0e96220a73_29179_300x200_fit_box_3.png" width="282" height="200" alt="Inicio Drupal" title="Inicio Drupal"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/inicio-administracion_hub35f112cec43233d532972ffb246ef4a_31553_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio Drupal (Administración)"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/inicio-administracion_hub35f112cec43233d532972ffb246ef4a_31553_300x200_fit_box_3.png" width="284" height="200" alt="Inicio Drupal (Administración)" title="Inicio Drupal (Administración)"  class="lozad "></a></p>
</figure>
</div>
<p>Por defecto Drupal ofrece dos tipos de contenido páginas y artículos que poseen un título y un cuerpo aunque podemos crear nuevos tipos de contenido con información adicional como podría ser eventos que recojan además una fecha y hora de inicio, fecha y hora de fin, lugar, &hellip;. Podemos crear usuarios y roles y asignarles permisos como poder crear contenidos, crear menús con enlaces a ciertos contenidos que queramos destacar. Podemos usar taxonomía para categorizar el contenido y que este esté organizado y sea fácilmente encontrado por los usuarios. Asociar tipos de contenido con ciertos tipo de taxonomía. Modificar los bloques como menús, formulario de inicio de sesión, &hellip; y hacer que solo se vean en ciertas páginas, para algunos tipos de contenidos, ciertos roles o usuarios. Hacer vistas o listas de los contenidos. Modificar la disposición o layout de las páginas por ejemplo para que tenga dos, tres columnas, una cabecera y un pie, &hellip;. Finalmente también podemos modificar y personalizar el aspecto del sitio web con temas que podemos descargar o desarrollar nosotros mismos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/crear-pagina_hu7d989873d8b0f756fcd2a2f6d4a5079e_29858_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Crear página"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/crear-pagina_hu7d989873d8b0f756fcd2a2f6d4a5079e_29858_300x200_fit_box_3.png" width="268" height="200" alt="Crear página" title="Crear página"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/crear-articulo_hu0014f6dd0073fd8d37aeb94d3751c5dd_27499_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Crear artículo"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/crear-articulo_hu0014f6dd0073fd8d37aeb94d3751c5dd_27499_300x200_fit_box_3.png" width="268" height="200" alt="Crear artículo" title="Crear artículo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/tipos-contenido_huba7f8446c7a2941a4e3617665d20c22c_35127_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Tipos de contenido"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/tipos-contenido_huba7f8446c7a2941a4e3617665d20c22c_35127_300x200_fit_box_3.png" width="268" height="200" alt="Tipos de contenido" title="Tipos de contenido"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/taxonomia_hu1fcd59d2c1d62e6b49a85ac111a75cce_31161_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Taxonomía"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/taxonomia_hu1fcd59d2c1d62e6b49a85ac111a75cce_31161_300x200_fit_box_3.png" width="268" height="200" alt="Taxonomía" title="Taxonomía"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/taxonomia-etiquetas_hu35632a7f6f6e2d9092b91e8ed8f12db8_32967_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Etiquetas taxonomía"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/taxonomia-etiquetas_hu35632a7f6f6e2d9092b91e8ed8f12db8_32967_300x200_fit_box_3.png" width="268" height="200" alt="Etiquetas taxonomía" title="Etiquetas taxonomía"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/bloques_hu1f377a72bcf3cbdca8dcadf3f8fd8ee4_51185_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Bloques"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/bloques_hu1f377a72bcf3cbdca8dcadf3f8fd8ee4_51185_300x200_fit_box_3.png" width="268" height="200" alt="Bloques" title="Bloques"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas_huc003da5bd98a62d8b7d13b8ac6eb160e_41340_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Personas"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas_huc003da5bd98a62d8b7d13b8ac6eb160e_41340_300x200_fit_box_3.png" width="268" height="200" alt="Personas" title="Personas"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas-permisos_hue055cb0b63d35a77098fdba63fb778f7_58790_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Permisos personas"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas-permisos_hue055cb0b63d35a77098fdba63fb778f7_58790_300x200_fit_box_3.png" width="268" height="200" alt="Permisos personas" title="Permisos personas"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas-roles_hu45fae67c6210dedb2811f13e5443eade_54247_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Roles personas"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas-roles_hu45fae67c6210dedb2811f13e5443eade_54247_300x200_fit_box_3.png" width="268" height="200" alt="Roles personas" title="Roles personas"  class="lozad "></a></p>
</figure>
</div>
<p>Drupal es ampliamente <a href="https://www.drupal.org/project/project_module">extensible mediante módulos</a> permitiendo agregarle funcionalidades de diferentes categorías (contenido, administración, integración con terceros, comercio electrónico, &hellip;) si las incorporadas por defecto no nos son suficientes. Algunos de  los módulos más empleados son <a href="https://www.drupal.org/project/panels">Panels</a> que permite definir contenedores (barra izquierda, región contenido, barra derecha, pie, cabecera, &hellip;) en una página y asignar el contenido que queremos que aparezca en cada uno de ellos, <a href="https://www.drupal.org/project/cck">Content Construction Kit (CCK)</a>, <a href="https://www.drupal.org/project/views">Views</a> para definir vistas de una colección de elementos, <a href="https://www.drupal.org/project/pathauto">Pathauto</a> para hacer las URLs amigables al usuario y buscadores mejorando el SEO del sitio, <a href="https://www.drupal.org/project/webform">Webform</a> para crear formularios y recoger información y otros muchos más para infinidad de cosas. Sin embargo, conviene usar los más populares que están ampliamente probados y hayan demostrado su utilidad, los que tenga buen soporte y un mantenimiento activo, estas cosas las podemos seleccionar con el filtro en el formulario de búsqueda de módulos.</p>
<p>En definitiva Drupal es una herramienta de mucha utilidad para gestionar un sitio web. Si la parte importante del sitio web es el contenido Drupal puede adaptarse perfectamente a las necesidades y si el sitio web ha de ser administrado por usuarios sin conocimientos técnicos puede ser una solución que no requiera desarrollar una aplicación web a medida costando menos tiempo y menos esfuerzo. Para iniciarse en Drupal los libros <a href="https://amzn.to/2udreMi">Beginning Drupal 7</a> y <a href="https://amzn.to/39PQMzE">Pro Drupal 7 Development</a> son un buen inicio, he leído el primero y están muy bien explicado partiendo desde cero conocimiento sobre Drupal o PHP, contiene suficiente detalle para conocer las diferentes posibilidades que ofrece esta plataforma de gestión de contenidos.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1430228598&amp;linkId=0918d80bc297650520a5ff23dd6aaa77" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1430228385&amp;linkId=6f1cc0aedb7daa7be2fc5b5e4591442f" title="Amazon" class="lozad"></iframe>
</div>
<p>Si queremos probarlo posiblemente la solución mas sencilla es usar la <a href="https://bitnami.com/stack/drupal">imagen que ofrece Bitnami de Drupal</a> que contiene todos los requisitos de Drupal ya instalados (servidor web, base de datos, dependencias, &hellip;), podemos descargarla y crear una máquina virtual con VirtualBox, en unos pocos minutos podemos empezar a probar Drupal. En el artículo de <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">introducción sobre Bitnami</a> explico como crear una máquina virtual e iniciar cualquiera de las <a href="https://bitnami.com/stacks">imágenes</a> de las que ofrece <a href="https://bitnami.com/">Bitnami</a> con VirtualBox.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">Introducción al gestor de proyectos y tareas Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar un plugin ágil en Redmine</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/</id>
        <title>Instalar y usar un plugin ágil en Redmine</title>
        <updated>2015-01-10T12:00:00+01:00</updated>
        <published>2015-01-03T01:27:56+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/redmine.png" width="300" height="89" alt="Redmine" title="Redmine"  class=""></p>
</div>
<p>Las metodologías ágiles para la gestión de proyectos son ya ampliamente usadas, como <a href="https://es.wikipedia.org/wiki/Scrum_%28desarrollo_de_software%29">scrum</a> o <a href="https://es.wikipedia.org/wiki/Programaci%C3%B3n_extrema">programación extrema</a> (XP). Una diferencia entre las metodologías ágiles y las metodologías empleadas tradicionalmente como el modelo en cascada es que en las metodologías ágiles se tiene en cuenta que se pueden producir cambios en el desarrollo del proyecto y suelen ser más flexibles y adaptables ante estos cambios.</p>
<p>En el modelo de metodología ágil podemos usar un panel kanban donde ver de un vistazo rápido las tareas terminadas, las que están en progreso y las próximas tareas planificadas reflejando la realidad del equipo de desarrollo. Reorganizándolas según prioridades que pueden cambiar de una semana a otra, en las metodologías ágiles no se realiza una planificación completa inicial sino que se va realizando a medida que el proyecto progresa.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/panel-kanban_hu4ef8f81386afd1f4c05942e3239ab438_36051_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Panel Kanban de Redmine"><img src="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/panel-kanban_hu4ef8f81386afd1f4c05942e3239ab438_36051_300x200_fit_box_3.png" width="300" height="136" alt="Panel Kanban de Redmine" title="Panel Kanban de Redmine"  class="lozad "></a></p>
</figure>
</div>
<p>También para la gestión de las tareas de los proyectos se suele usar algún tipo de herramienta que permita recoger y gestionar las peticiones adaptada a la metodología que usemos, una de estas herramientas puede ser <a href="https://www.redmine.org/">Redmine</a>. En la <a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">introducción sobre Redmine</a> comentaba que es lo nos puede ofrecer para gestionar el proyecto.</p>
<p>Por defecto, Redmine no dispone de un panel kanban para ver las peticiones pero <a href="http://www.redminecrm.com/projects/agile/pages/1">usando el plugin ágile de RedmineCRM</a> se le puede añadir la funcionalidad con el que además del panel kanban podemos ver otra serie de gráficas como <a href="https://es.wikipedia.org/wiki/Burn_down_chart">burndown</a> y paneles. Hay otras opciones perfectamente válidas como <a href="https://www.atlassian.com/software/jira">JIRA</a> pero esta tiene una política de precios basada en el número de usuarios y a partir de un cierto número es una cantidad considerable.</p>
<p>Podemos usar la versión gratuita del <a href="http://www.redminecrm.com/">plugin RedmineCRM</a> lo que nos ofrecerá los <em>agile boards</em>, <em>version planner</em> y <em>burndown chart</em>, la versión PRO para un solo sitio tiene un precio de $200, ofrece funcionalidades adicionales como organización en lineas horizontales, subcolumnas y colores para las peticiones en el panel kanban además de algunas opciones más. Para el caso de Redmine también hay otros plugins disponibles para gestionar los proyectos de forma ágil pero no tan buenos como el de RedmineCRM, estos son <a href="http://www.redminebacklogs.net/">Redmine Backlogs</a> y <a href="http://www.redmine.org/plugins/scrum2b">Scrum2B</a>.</p>
<p>Después de <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">instalar Redmine con Bitnami</a> si queremos instalar el plugin ágile de RedmineCRM debemos realizar los siguientes pasos desde la terminal de la máquina virtual, en mi caso usando VirtualBox:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo loadkeys es&#10;$ <span class="nb">cd</span> /opt/bitnami/apps/redmine/htdocs/plugins&#10;$ wget http://redminecrm.com/license_manager/15337/redmine_agile-1_3_5-light.zip&#10;$ unzip redmine_agile-1_3_5-light.zip&#10;$ <span class="nb">cd</span> /opt/bitnami/apps/redmine/htdocs/&#10;$ bundle install --without development <span class="nb">test</span>&#10;$ bundle <span class="nb">exec</span> rake redmine:plugins <span class="nv">NAME</span><span class="o">=</span>redmine_agile <span class="nv">RAILS_ENV</span><span class="o">=</span>production&#10;$ <span class="nb">cd</span> /opt/bitnami/&#10;$ sudo ctlscript.sh restart apache</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>instalar-redminecrm-bitnami.sh</span>
    </div>
</div>
<p>Finalmente, debemos activar el plugin agile en el proyecto usando la opción Administration&gt; Agile.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/configuracion_hue052186d9db87a4a7ddb2d207f6da4d3_32798_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación panel Kanban"><img src="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/configuracion_hue052186d9db87a4a7ddb2d207f6da4d3_32798_300x200_fit_box_3.png" width="300" height="139" alt="Activación panel Kanban" title="Activación panel Kanban"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez activado ya podemos ver el panel kanban mostrado en la primera captura en la pestaña ágil. Por defecto en Redmine solo veremos las columnas New, In progress, Resolved y Feedback pero podemos modificar el flujo de las peticiones adaptándolo a nuestra metodología u organización, podemos hacer esto desde Administración&gt; Estados de peticiones para crear nuevos estados y Administración&gt; Flujo de trabajo para establecer el grafo de estados determinando a que estados puede cambiar una petición desde su estado actual.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/estados-peticiones_hu8a2a9674874943501314cb8d2ca16bed_46591_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Estados de peticiones"><img src="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/estados-peticiones_hu8a2a9674874943501314cb8d2ca16bed_46591_300x200_fit_box_3.png" width="300" height="139" alt="Estados de peticiones" title="Estados de peticiones"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/flujo-de-trabajo_hu96763af7a06f0f0b8ba222c218e7f202_64657_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Flujo de trabajo"><img src="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/flujo-de-trabajo_hu96763af7a06f0f0b8ba222c218e7f202_64657_300x200_fit_box_3.png" width="300" height="139" alt="Flujo de trabajo" title="Flujo de trabajo"  class="lozad "></a></p>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">Introducción al gestor de proyectos y tareas Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/</id>
        <title>Hemeroteca #6</title>
        <updated>2014-12-24T18:00:00+02:00</updated>
        <published>2014-12-24T16:02:04+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/octopress.png" width="300" height="300" alt="Octopress" title="Octopress"  class=""></p>
</div>
<p>Seis nuevos meses para el Blog Bitix cumpliendo un año como tal y siendo la continuación de los casi cuatro años de <a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev</a>. Otro año que finaliza y toca hacer <a href="https://picodotdev.github.io/blog-bitix/2014/">recapitulación de los que he escrito durante este tiempo</a>, 26 nuevos artículos escritos con puntualidad uno por semana y publicados el viernes o sábado.</p>
<p>Aunque aún no puedo usar profesionalmente el <em>framework</em> web <a href="https://tapestry.apache.org/">Apache Tapestry</a> con el realmente me divierto programando sigo escribiendo sobre él con algunos temas interesantes tales que cómo usar un CDN, cómo crear plantillas para dar un aspecto común a todas las páginas de la aplicación, una comparativa entre el modelo «pull» que usa Tapestry y el modelo «push» que normalmente se usa en los <em>framework</em> basados en acciones, cómo crear una doble barra de botones sin duplicar el mismo código, como forzar el uso de https o la anotación Cached. Todo este contenido lo he añadido al <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">libro PlugIn Tapestry</a> y que puedes descargar de forma totalmente libre en varios formatos. No está mal y aún tengo más contenido pendiente por publicar tal que como embeber una aplicación web usando tomcat-embed de forma que la aplicación esté autocontenida y el despliegue sea más sencillo y evitemos problemas, hacer un ejemplo con el componente Grid que muestre sus grandes posibilidades y la gran cantidad de trabajo que nos puede ahorrar, &hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/actualizacion-del-libro-plugin-tapestry/">Actualización del libro PlugIn Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/doble-barra-de-botones-con-apache-tapestry/">Doble barra de botones con Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/forzar-el-uso-del-protocolo-https-en-apache-tapestry/">Forzar el uso del protocolo https en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/usar-apache-tapestry-en-una-aplicacion-standalone/">Usar Apache Tapestry en una aplicación «standalone»</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry/">Servir recursos estáticos desde un CDN en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/anotacion-cached-de-apache-tapestry/">Anotación Cached de Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/plantillas-en-apache-tapestry/">Plantillas en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/">Modelo «push» contra modelo «pull» en <em>frameworks</em> web</a></li>
</ul>
<p>Respecto a artículos sobre programación también he escrito unos cuantos relativos a Java, me parece que cada uno de estos son interesantes mostrando algunos aspectos avanzados y útiles. Por supuesto, también tengo pendientes por escribir más artículos sobre Java, como generics, palabra reservada assert, los métodos equals y hashCode y como implementarlos&hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/">Ejercicios (katas) para mejorar habilidades de programación practicando</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/">8+ libros para mejorar como programadores</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/">Cómo filtrar contenido HTML de forma segura</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/">Qué es y cómo hacer «web scraping» en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/generar-urls-semanticas-y-amigables/">Generar URLs semánticas y amigables</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/configuracion-usando-codigo-java/">Configuración usando código Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/monitorizar-archivos-con-java/">Monitorizar archivos con Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/compilar-y-cargar-de-forma-dinamica-una-clase-java/">Compilar y cargar de forma dinámica una clase Java</a></li>
</ul>
<p>Desde hace un tiempo estoy escribiendo más sobre temas de programación que sobre Linux más que nada porque Arch Linux me va también y me da tan pocos problemas que no encuentro oportunidades grandes de escribir sobre algún tema que le pueda resultar útil a alguien más. Sin embargo, si que he escrito sobre algunas herramientas que disponemos en Linux y del software libre como <a href="https://www.docker.com/">Docker</a>, <a href="https://www.ansible.com/">Ansible</a> o <a href="https://bitnami.com/">Bitnami</a>, tengo algunos artículos más por escribir sobre <a href="https://memcached.org/">Memcached</a>, EncFS, algo más de <a href="https://www.redmine.org/">Redmine</a>, &hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Cómo instalar y guía de inicio básica de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción y características de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/agregador-blog-stack-redisenado/">Agregador Blog Stack rediseñado</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/procesador-de-documentos-lyx/">Procesador de documentos LyX</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/">Experiencia instalando sistema operativo a ordenador viejo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/">De Arch Linux a Arch Linux</a></li>
</ul>
<p>Si no quieres perderte ninguno de los nuevos artículos que escriba puede suscribirte al <a href="https://picodotdev.github.io/blog-bitix/index.xml">canal RSS de Blog Bitix</a>, <a href="https://twitter.com/picodotdev/">seguirme en twiter</a> o desde hace un poco de tiempo seguir la <a href="https://plus.google.com/114317443908384387611/posts">página de Google+ de Blog Bitix</a>. Por supuesto, en anteriores entregas de hemerotecas dispones de más artículos si algunos de estos te han parecido interesantes.</p>
<p>Y para finalizar quiero agradecer a <a href="https://twitter.com/fran_mosteiro">Fran Mosteiro</a>, <a href="https://twitter.com/josetesan">Jose Luís Sánchez</a>, <a href="https://twitter.com/jbravo">Joaquín Bravo</a>, <a href="https://twitter.com/mbmerayo">Marcos Bello</a> y algunos otros que esporádicamente también suelen hacer RT o marcar como favoritos los tweets de esta bitácora y que me ayudan un poquito o mucho a difundir lo que escribo ¡muchas gracias!, un saludo y ¡que comencéis bien el nuevo año 2015! :)</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/images/christmas-tux-2014_huaef2ca66353b2d132c670385d2dd34d4_553762_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Christmastux 2014"><img src="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/images/christmas-tux-2014_huaef2ca66353b2d132c670385d2dd34d4_553762_600x450_fit_q90_box.jpg" width="600" height="338" alt="Christmastux 2014" title="Christmastux 2014"  class="lozad "></a></p>
<figcaption>¡Buen 2015! <br>Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/</id>
        <title>Introducción al gestor de proyectos y tareas Redmine</title>
        <updated>2015-01-10T12:00:00+01:00</updated>
        <published>2014-12-19T19:57:31+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/redmine.png" width="200" height="59" alt="Redmine" title="Redmine"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bitnami.svg" width="200" height="224" alt="Bitnami" title="Bitnami"  class=""></p>
</div>
<p>Para desarrollar un proyecto de software se hace imprescindible disponer de algunas herramientas que nos permitan realizar las tareas. Una de estas herramientas es un <a href="https://en.wikipedia.org/wiki/Issue_tracking_system">gestor de tareas, peticiones o errores</a>, que nos permite recoger en una herramienta gran parte de la información, conocer el estado, planificar y hacer el seguimiento las tareas necesario para desarrollar de forma ordenada, sin que perdamos nada de información y pudiendo recuperarla en cualquier momento en un futuro.</p>
<p>Como es habitual herramientas que gestionan tareas disponemos de varias algunas de las más conocidas son <a href="https://www.bugzilla.org/">Bugzilla</a>, <a href="https://www.atlassian.com/software/jira">JIRA</a>, <a href="https://www.mantisbt.org/">Mantis</a>, <a href="https://trac.edgewall.org/">Trac</a> y la herramienta de la que hablaré en este artículo, <a href="https://www.redmine.org/">Redmine</a>. Cada una de estas herramientas como gestores de tareas son parecidas pero se diferencian en algunas cosas como la licencia que tiene, el esquema de precios o la funcionalidad que ofrece. Redmine tiene una <a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html">licencia de software libre GPL</a> y por tanto la podemos usar sin ningún coste, en la siguiente tabla podemos compararla con los <a href="https://www.atlassian.com/software/jira/pricing">precios de JIRA</a> que para pocos usuarios son asumibles pero que a medida que se aumentan los usuarios empiezan a ser notables aunque posiblemente alcanzables en función del tamaño de la empresa. En cualquier siendo JIRA también una herramienta excelente Redmine cumple perfectamente con la misma función. En la wikipedia podemos encontrar <a href="https://en.wikipedia.org/wiki/Comparison_of_issue-tracking_systems">más opciones y comparar unas con otras</a>.</p>
<p>Si queremos evaluar Redmine una forma sencilla podemos hacerlo mediante una imagen de Bitnami con VirtualBox. En la <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">introducción a Bitnami</a> comento qué es y como nos puede ayudar a disponer de software que en algunos casos no es simple de instalar y que con Bitnami podemos disponer de forma sencilla y rápida, además de como usar con VirtualBox cualquier imagen de Bitnami de las herramientas ofrecidas. Una vez seguidos los pasos de la guía anterior podemos acceder a Redmine con el navegador web y una dirección similar a <em>http://192.168.0.11</em>, el usuario y contraseña para acceder es user y bitnami respectivamente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/proyecto_huc5391f3bb2fe8f890f4052d1e1603f1a_23188_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Proyecto"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/proyecto_huc5391f3bb2fe8f890f4052d1e1603f1a_23188_300x200_fit_box_3.png" width="300" height="181" alt="Proyecto" title="Proyecto"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/peticion_huee84518d778088ae20bd387a73d5293d_38867_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Petición"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/peticion_huee84518d778088ae20bd387a73d5293d_38867_300x200_fit_box_3.png" width="300" height="185" alt="Petición" title="Petición"  class="lozad "></a></p>
</figure>
</div>
<p>Con Redmine podemos adaptar el flujo de las tareas a la forma de organización que empleemos, podemos personalizar el grafo de estados que siguen las tareas y que personas tiene permisos para hacer cada uno de los cambios de estado. También podemos añadir campos personalizados que queremos recoger para cada petición, por ejemplo, podemos querer dar un tamaño a las tareas en función de si estimamos que es grande, media o pequeña. También podemos crear filtros y guardarlos para encontrar fácilmente tareas.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/estados_hue0e3162886816900263a2154c8ee2e5e_42878_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Estados"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/estados_hue0e3162886816900263a2154c8ee2e5e_42878_300x200_fit_box_3.png" width="300" height="181" alt="Estados" title="Estados"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/propiedades_hua076b1dfa17f61f58d8ee0d6df42ce47_38825_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Propiedades"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/propiedades_hua076b1dfa17f61f58d8ee0d6df42ce47_38825_300x200_fit_box_3.png" width="300" height="181" alt="Propiedades" title="Propiedades"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/consulta_hub5bad320ba6632e1084e3f266f937585_41369_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Filtros"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/consulta_hub5bad320ba6632e1084e3f266f937585_41369_300x200_fit_box_3.png" width="249" height="200" alt="Filtros" title="Filtros"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/flujo-estados_hu677460e55ab0aea1e8fac0028295eff7_59509_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Flujo estados"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/flujo-estados_hu677460e55ab0aea1e8fac0028295eff7_59509_300x200_fit_box_3.png" width="300" height="177" alt="Flujo estados" title="Flujo estados"  class="lozad "></a></p>
</figure>
</div>
<p>Además de gestionar las tareas Redmine dispone de herramientas que nos pueden ser útiles en el proyecto como una wiki para recoger documentación del proyecto y un repositorio de documentos para aquellos que no queremos incluir en la herramienta de control de versiones por su tamaño pero que queremos que estén disponibles para cualquiera que trabaje con el proyecto.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/wiki_huc8ef37bf4091738b82bd6e3b425a7926_26237_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Wiki"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/wiki_huc8ef37bf4091738b82bd6e3b425a7926_26237_300x200_fit_box_3.png" width="262" height="200" alt="Wiki" title="Wiki"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/archivos_huf26cedcb4ea27c3a1cb52eb9f4e24372_15256_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivos"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/archivos_huf26cedcb4ea27c3a1cb52eb9f4e24372_15256_300x200_fit_box_3.png" width="300" height="133" alt="Archivos" title="Archivos"  class="lozad "></a></p>
</figure>
</div>
<p>Pero Redmine es más que una herramienta de gestión de tareas, los complementos pueden añadirle funcionalidad adicional que permite <a href="http://www.redminecrm.com/projects/crm/pages/1">convertirla en un CRM para gestionar las comunicaciones con clientes</a> o en un <a href="http://www.redminecrm.com/projects/helpdesk/pages/1">helpdesk para atender las tareas de clientes</a>. Además de otros como <a href="http://www.redminecrm.com/projects/people/pages/1">personalizar los usuarios de Redmine</a> o crear <a href="http://www.redminecrm.com/projects/checklist/pages/1">pequeñas listas de tareas</a> que nos evitará crear subtareas.</p>
<p>En el siguiente artículo comentaré como instalar el <a href="http://www.redminecrm.com/projects/agile/pages/1">plugin agile de Redmine</a> con la imagen de Bitnami en VirtualBox de forma que podamos visualizar las tareas en un panel kanban, y de un vistazo y rápidamente conozcamos las tareas que están terminadas, que están en progreso, a punto de empezarse o en la cola de tareas por hacer.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar plugin ágil en Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
<li><a href="http://www.luisblasco.com/5-plugins-gratuitos-instalar-en-redmine/">5 plugins gratuitos para instalar a Redmine</a></li>
<li><a href="http://www.redmine.org/projects/redmine/wiki/RedmineIssueList#Applying-and-saving-filters">Aplicar y guardar filtros</a></li>
<li><a href="https://stackoverflow.com/questions/9027479/how-do-you-modify-a-filter-in-redmine">Como modificar un filtro</a></li>
<li><a href="http://www.luisblasco.com/blog/">Blog con varios artículos interesantes sobre Redmine</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/</id>
        <title>Ejercicios (katas) para mejorar habilidades de programación practicando</title>
        <updated>2014-12-13T12:06:06+01:00</updated>
        <published>2014-12-13T12:06:06+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>La semana pasada escribía sobre <a href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/">algunos libros que leer para ser mejores programadores</a>, sin embargo, toda esa teoría solo sirve cuando se interioriza para usar más tarde en la práctica. Para interiorizar parte de ese conocimiento hasta el momento creo que no se ha inventado mejor manera que escribiendo código teniendo en cuenta esos principios.</p>
<p>Las katas y dojos son unos ejercicios que se realizan para practicar, son problemas sencillos de los que se conoce la solución pero lo importante no es resolverlos sino aplicar las lecciones aprendidas y mejorar nuestras habilidades de programación que posteriormente usemos en los proyectos que trabajamos. Estos ejercicios se suelen realizar con otras personas, en la página <a href="http://katayunos.com/">Katayunos - Merendojos</a> se suelen organizar encuentros en algunas ciudades y fechas, si no nos cuadran las fechas y lugares podemos realizarlas individualmente cuando y donde prefiramos aunque una de las partes que nos perderemos es aprender de las habilidades y formas de trabajar de otras personas.</p>
<p>En la página <a href="http://codekata.com/">CodeKata</a> podemos leer una introducción a las katas y una colección de ejercicios con los que practicar. En estos ejercicios deberemos intentar aplicar varios <a href="http://javarevisited.blogspot.com.es/2012/03/10-object-oriented-design-principles.html">principios de la programación orientada a objetos</a> como el principio SOLID, DRY, abierto a extensión cerrado a modificación (OCP), <a href="https://elblogdepicodev.blogspot.com.es/2012/03/patrones-de-diseno-en-la-programacion.html">patrones de diseño</a>, nombres de métodos y variables que hagan que el código sea expresivo, teses unitarios, refactorizaciones, &hellip; todas esas cosas que consideramos correctas para escribir buen código.</p>
<p>El primero de los ejercicios propuestos en CodeKata es <a href="http://codekata.com/kata/kata01-supermarket-pricing/">Kata01: Supermarket Pricing</a> que consiste en pensar una forma de representar los precios de los productos de un supermercado, aparte de un precio simple como puede ser $0.65 por producto, otros como tres por un dolar, $1.99 / pound o compre dos obtenga uno más gratis o con descuento. Para esta kata en internet hay comentadas varias soluciones, probablemente para representar los diferentes precios una solución sea crear una clase que calcule los diferentes tipos de precios aplicando el <a href="https://es.wikipedia.org/wiki/Strategy_%28patr%C3%B3n_de_dise%C3%B1o%29">patrón Strategy</a> en función de como se calcule el precio de cada producto.</p>
<p>Intentando implementar en código una posible solución aplicando el patrón Strategy, usando BigDecimal para los precios (en vez de double y float que no pueden representar correctamente algunos valores decimales), este ejemplo muestra como calcular el precio de un producto dada su cantidad y su tipo de precio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.kata01</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.math.RoundingMode</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Pricing</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Offer</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="nf">calculateWithOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">);</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="nf">getNumberWithoutOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="nf">getNumberWithOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="o">{</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pricing</span> <span class="n">pricing</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span><span class="o">(</span><span class="n">Pricing</span> <span class="n">pricing</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">pricing</span> <span class="o">=</span> <span class="n">pricing</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">pricing</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="n">quantity</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">SimplePricing</span> <span class="kd">implements</span> <span class="n">Pricing</span> <span class="o">{</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">unitPrice</span><span class="o">;</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SimplePricing</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">unitPrice</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">unitPrice</span> <span class="o">=</span> <span class="n">unitPrice</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">unitPrice</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">quantity</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">WeightPricing</span> <span class="kd">implements</span> <span class="n">Pricing</span> <span class="o">{</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">weightPrice</span><span class="o">;</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">WeightPricing</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">weightPrice</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">weightPrice</span> <span class="o">=</span> <span class="n">weightPrice</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">weight</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">weightPrice</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">weight</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">OfferPricing</span> <span class="kd">implements</span> <span class="n">Pricing</span><span class="o">,</span> <span class="n">Offer</span> <span class="o">{</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pricing</span> <span class="n">normalPricing</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">offerQuantity</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">offerPercent</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OfferPricing</span><span class="o">(</span><span class="n">Pricing</span> <span class="n">normalPricing</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">offerQuantity</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">offerPercent</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">normalPricing</span> <span class="o">=</span> <span class="n">normalPricing</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">offerQuantity</span> <span class="o">=</span> <span class="n">offerQuantity</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">offerPercent</span> <span class="o">=</span> <span class="n">offerPercent</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">withoutOfferPrice</span> <span class="o">=</span> <span class="n">normalPricing</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="n">getNumberWithoutOffer</span><span class="o">(</span><span class="n">quantity</span><span class="o">));</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">withOfferPrice</span> <span class="o">=</span> <span class="n">calculateWithOffer</span><span class="o">(</span><span class="n">getNumberWithOffer</span><span class="o">(</span><span class="n">quantity</span><span class="o">));</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">withoutOfferPrice</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">withOfferPrice</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculateWithOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">normalPricing</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1&#34;</span><span class="o">)).</span><span class="na">multiply</span><span class="o">(</span><span class="n">quantity</span><span class="o">).</span><span class="na">multiply</span><span class="o">(</span><span class="n">getOfferPercent</span><span class="o">());</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">getNumberWithoutOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">groups</span> <span class="o">=</span> <span class="n">quantity</span><span class="o">.</span><span class="na">divide</span><span class="o">(</span><span class="n">offerQuantity</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">RoundingMode</span><span class="o">.</span><span class="na">DOWN</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">quantity</span><span class="o">.</span><span class="na">subtract</span><span class="o">(</span><span class="n">groups</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">getNumberWithOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">quantity</span><span class="o">.</span><span class="na">subtract</span><span class="o">(</span><span class="n">getNumberWithoutOffer</span><span class="o">(</span><span class="n">quantity</span><span class="o">));</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigDecimal</span> <span class="nf">getOfferPercent</span><span class="o">()</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">BigDecimal</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">100</span><span class="o">).</span><span class="na">subtract</span><span class="o">(</span><span class="n">offerPercent</span><span class="o">).</span><span class="na">divide</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;100&#34;</span><span class="o">));</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	<span class="o">}</span>&#10;	&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">Product</span> <span class="n">p1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">SimplePricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;2&#34;</span><span class="o">)));</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p1</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">)));</span>&#10;&#10;		<span class="n">Product</span> <span class="n">p2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">WeightPricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.35&#34;</span><span class="o">)));</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p2</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">)));</span>&#10;&#10;		<span class="n">Product</span> <span class="n">p3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">OfferPricing</span><span class="o">(</span><span class="k">new</span> <span class="n">SimplePricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;50&#34;</span><span class="o">)));</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p3</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;6&#34;</span><span class="o">)));</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.kata01</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.kata01.Main.OfferPricing</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.kata01.Main.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.kata01.Main.SimplePricing</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.kata01.Main.WeightPricing</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.junit.Assert</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainTest</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Test</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">simplePricing</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">Product</span> <span class="n">p1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">SimplePricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;2&#34;</span><span class="o">)));</span>&#10;		<span class="n">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;6&#34;</span><span class="o">),</span> <span class="n">p1</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">)));</span>&#10;	<span class="o">}</span> &#10;	&#10;	<span class="nd">@Test</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">weightPricing</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">Product</span> <span class="n">p2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">WeightPricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.35&#34;</span><span class="o">)));</span>&#10;		<span class="n">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;4.05&#34;</span><span class="o">),</span> <span class="n">p2</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">)));</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Test</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">offerPricing</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">Product</span> <span class="n">p3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">OfferPricing</span><span class="o">(</span><span class="k">new</span> <span class="n">SimplePricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;50&#34;</span><span class="o">)));</span>&#10;		<span class="n">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;4.5&#34;</span><span class="o">),</span> <span class="n">p3</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;5&#34;</span><span class="o">)));</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MainTest.java</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/images/teses-junit_hufd5df9af52eaf6ce499b5244effa36fc_31631_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ejecución de teses"><img src="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/images/teses-junit_hufd5df9af52eaf6ce499b5244effa36fc_31631_300x200_fit_box_3.png" width="300" height="167" alt="Ejecución de teses" title="Ejecución de teses"  class="lozad "></a></p>
</figure>
</div>
<p>Aun practicando estas katas no va a hacer que luego nuestro código en un proyecto real sea perfecto ni siquiera algo cercano a ello más bien hará que sea un poquito mejor, estos ejercicios son bastante simples que no tienen las complejidades de algunos casos reales, aún así siguen mereciendo realizarlos. También hay que tener en cuenta que no son realmente para aprender a programar aunque si pueden servir para aprender un nuevo lenguaje sobre todo si se hacen con otra persona que ya lo conoce y mientras se realiza la kata podemos preguntarle y nos resuelva las dudas que nos vayan surgiendo de la sintaxis, API o herramientas de ese lenguaje.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li>http://codekata.com/<br></li>
<li>http://katayunos.com/<br></li>
<li>http://www.codewars.com/</li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="software-libre"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/</id>
        <title>8&#43; libros para mejorar como programadores</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-12-05T17:08:57+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Hay cantidad de información para aprender y en diferentes formatos desde libros si queremos tener un conocimiento más profundo sobre alguna materia pasando por presentaciones en <a href="https://es.slideshare.net/">SlideShare</a> o <a href="https://speakerdeck.com/">SpeakerDeck</a> que aún comentando los detalles de forma escueta sirven para conocer los detalles importantes sobre un tema, charlas de hangouts que quizá requieran menos esfuerzo y tiempo por nuestra parte que leer un libro como las compartidas en <a href="https://www.desarrolloweb.com/">desarrolloweb</a> o en <a href="http://virtualjug.com/">Virtual JUG</a>, blogs con artículos que explican un detalle específico (aquí hay una buena <a href="https://www.baeldung.com/java-blogs">colección de bitácoras sobre java</a>), <a href="http://katayunos.com/">katayunos y merendojos</a> en los que se practican técnicas de programación sobre un problema conocido, sencillos, de los que ya se conoce su solución y que se realizan junto a otras personas, convenciones como <a href="http://www.codemotion.es/">Codemotion</a>, <a href="https://es.pycon.org/">PyCon</a>, <a href="https://greachconf.com/">Greach</a>, <a href="http://www.librecon.io/">LibreCon</a>, <a href="http://agile-spain.org">CAS</a>, <a href="http://www.springio.net/">Spring I/O</a>, <a href="http://apachecon.com/">ApacheCon</a>, <a href="https://bilbostack.com/">BilboStack</a>&hellip; En estas convenciones se hacen presentaciones de alrededor de una hora para los asistentes, además siendo presenciales permiten reunirse con otras personas con los mismos intereses y de las que algunas los vídeos están disponibles en YouTube&hellip; en definitiva, para aprender lo único que se necesita es tiempo y motivación que no es poco después de una jornada laboral que ocupa la mayor parte de nuestro tiempo.</p>
<p>En este artículo comentaré algunos libros que a mí me han gustado y que mucha gente recomienda leer ya que contienen cantidad importante e interesante de información útil para realizar mejor la tarea de programación, algunos tratan sobre el código otros sobre como enfrentarnos a las tareas y problemas que nos encontramos en el desarrollo y trabajo.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="thinking-in-java">Thinking in Java</h3>
<p>Yo como programador Java el libro que recomiendo para aquellos que ya tengan unos pocos conocimientos de programación estén empezando a programar en Java es <a href="https://amzn.to/2Qo38qQ">Thinking in Java</a> aunque también es recomendable para aquellos que incluso llevan varios años programando en Java, contiene una explicación detallada de cada uno de los aspectos del lenguaje. Java 8 ha introducido numerosas novedades (streams, lambdas, mejorada la programación asíncrona, date api, default methods, programación funcional, &hellip;) y el libro <a href="https://amzn.to/2ZThJxJ">Java 8 in Action</a> nos permite conocerlas detalladamente. En otros lenguajes hay otros libros que nos pueden introducir en la materia como <a href="https://amzn.to/39GxlsU">C# 5.0 All-in-One For Dummies</a> o <a href="https://amzn.to/35oMxHG">Beginning Python</a>.</p>
<h3 id="effective-java">Effective Java</h3>
<p>Para aquellos que ya tienen varios años de experiencia el libro <a href="https://amzn.to/39C8Ehn">Effective Java</a> contiene numerosos consejos para usar Java de forma &ldquo;efectiva&rdquo; aunque algunos puntos del libro son aplicables a cualquier otro lenguaje de programación orientado objetos. La segunda edición no está actualizada con las novedades introducidas en Java 8 pero prácticamente todo sigue siendo válido, el libro <a href="v">Java 8 in Action</a> también contiene algunos consejos en la misma linea que complementan a este libro.</p>
<h3 id="head-first---design-patterns">Head First - Design Patterns</h3>
<p>Los patrones de diseño nos presentan una solución que se ha comprobado válida para resolver problemas. En varios casos tratan de hacer que los cambios no afecten de forma notable a la estructura de los programas. Hay patrones de creación, estructurales o de comportamiento, &hellip; conviene conocerlos por si en algún momento determinado podemos aplicarlos a nuestro código. El formato del libro <a href="https://amzn.to/37GFpYV">Head First Design Patterns</a> no sigue la estructura tradicional de los libros sino una estructura más esquemática y con ejemplos que hacen sencillo comprender los patrones, cuando aplicarlos, que ventajas tienen, que desventajas y como están relacionados los patrones entre ellos. Otro libro con un formato más tradicional y muy comentado es <a href="https://amzn.to/36qiq3P">Design Patterns</a>.</p>
<h3 id="clean-code">Clean Code</h3>
<p>El contenido de <a href="https://amzn.to/2T0L5IS">Clean code</a> es aplicable a cualquier lenguaje y de interés para cualquier programador, contiene consejos para escribir mejor código en nuestras aplicaciones, desde como asignar nombres, como escribir funciones, comentarios, formatear el código, objetos y estructuras de datos, &hellip;, temás relacionados con el código que escribimos. El objetivo de la programación es escribir código que funciona y resuelva necesidades pero también es casi tan importante que sea fácilmente entendible por otros programadores o nosotros mismos unas semanas más tarde ya que la mayor parte del tiempo no la dedicamos a escribir nuevo código sino a modificarlo.</p>
<h3 id="code-complete">Code Complete</h3>
<p><a href="https://amzn.to/37Gh59B">Code Complete</a> es otro libro que se centra en como mejorar el código que escribimos de forma similar a Clean Code, explica muchos principios que pueden guiar el código que desarrollamos. Aún no lo he leído pero es mencionado bastante bastantes veces en libros de lectura recomendada. Por una lectura rápida por encima parece que está bastante bien.</p>
<h3 id="the-pragmatic-programmer">The Pragmatic Programmer</h3>
<p>El libro <a href="https://amzn.to/2MXRVuZ">Pragmatic programmer</a> también es aplicable independientemente de lenguaje que utilicemos. Contienen consejos que podemos usar como guía para tomar decisiones, para escribir mejor código y también para ser mejores programadores y profesionales.</p>
<h3 id="the-clean-coder">The Clean Coder</h3>
<p>Quizá ya conocieses Clean Code pero conocías ¿<a href="https://amzn.to/2MXB4II">The Clean Coder</a>?. Del mismo autor que Clean Code pero en este caso se centra no en el código sino en el programador, explica como enfrentarnos a situaciones que nos encontramos como programadores en el trabajo, en la programación escribir código solo es una pequeña parte y comprende mucho más que escribir lineas de código, también dar solución a las necesidades del negocio y de forma correcta. Trata de explicar como comportarnos de forma profesional, el decir no, el decir sí, practicar, gestión del tiempo, estimaciones, colaboración, equipos, aprender de un mentor, ser un mentor, &hellip;</p>
<h3 id="refactoring">Refactoring</h3>
<p>Comenzar un proyecto desde el inicio no es lo habitual y aún así pasado un tiempo no muy grande el código se convierte en heredado, lo habitual es que tengamos que modificar código que ya están escrito. El libro <a href="https://amzn.to/39CyVMm">Refactoring</a> nos explica como modificar el código para que tenga mejor diseño y sea más legible o fácil de modificar en un futuro y ante los posibles cambios que se vayan introduciendo. Algunas de las acciones están relacionadas con aplicar algunos principios de los patrones de diseño explicados en Head First - Design Patterns o algunos principios comentados en Clean Code.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0131872486&amp;linkId=dae8597bb6dc4beae956320ef09df513" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617291994&amp;linkId=70189a833eb781236f9c1b63064c8b27" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321356683&amp;linkId=468caab01af35306c48d99ca564ebf23" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0596007124&amp;linkId=3fa600b62ab3a48a0c6a5dfc6b9c9651" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0201633612&amp;linkId=2d6122afa07f905f4c3f2a9bcc62ff23" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0132350882&amp;linkId=41b8842029752ed268fefa4ec10f03a7" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0735619670&amp;linkId=caad6be50f3166c9e6c0c6cb8f8ba3ec" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=020161622X&amp;linkId=8ce01379ebca38f4fb82221abb3b0a81" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0137081073&amp;linkId=2fb79f1801f1d0a448b7aa533cd1af8e" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0201485672&amp;linkId=7c8b407a597aff8be999138b9159d305" title="Amazon" class="lozad"></iframe>
</div>
<p>En una <a href="https://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read">pregunta y respuesta de stackoveflow</a> sobre los libros a leer por un programador, están recogidos una buena colección de los mejores de ellos.</p>
<p>De la lista de este artículo el que me falta por leer es Code Complete el resto por mi propia experiencia recomiendo leerlos incluso más de una vez dependiendo de lo bien que absorbamos el conocimiento recogido en ellos y más tarde lo tengamos presente mientras trabajamos y programamos. Estos son de los libros más mencionados en artículos similares a este como buena documentación que leer sobre programación, si los leemos y nos quedamos con un porcentaje aunque sea pequeño ya mejoraremos bastante, también es probable que algunas cosas de las comentadas en los libros ya las tengamos presentes con la experiencia que hemos adquirido por nosotros mismos, en estos libros ese conocimiento adquirido y más comprobaremos que está documentado. ¡Feliz lectura!</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">Novedades de Java 8</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/03/patrones-de-diseno-en-la-programacion.html">Patrones de diseño en la programación orientada a objetos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/">Ejercicios (katas) para mejorar habilidades de programación practicando</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="software-libre"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/</id>
        <title>Introducción a Bitnami</title>
        <updated>2017-05-28T01:00:00+02:00</updated>
        <published>2014-11-29T10:45:45+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bitnami.svg" width="200" height="224" alt="Bitnami" title="Bitnami"  class=""></p>
</div>
<p>Instalar algunas aplicaciones, herramientas o servicios no siempre es sencillo y rápido. En la mayoría de los casos los pasos están explicados suficientemente pero en la práctica nos pueden surgir dudas o problemas que no están documentados que pueden hacer que la experiencia de instalación no sea agradable o necesitar dependencias que hay que instalar a la vez para obtener un funcionamiento correcto. Además, sin emplear una máquina virtual se necesita instalar en el propio equipo o servidor cuando quizá solo interesa evaluar el producto con lo que al hacer la desinstalación se acaba con archivos temporales que quizá no se eliminen y permanezcan ocupando espacio para siempre o hasta ser eliminados.</p>
<p><a href="https://bitnami.com/">Bitnami</a> es una amplia colección de servicios populares que permite instalarlos y disponer de ellos rápidamente completamente configurados sin necesidad de dedicar tiempo a conocer como instalarlos, además, si empleamos virtualización con <a href="https://www.virtualbox.org/">VirtualBox</a> se consigue que el equipo quede completamente limpio una vez que el servicio sea desinstalado bastando únicamente eliminar la máquina virtual. Esta colección de servicios se pueden instalar en el propio equipo, en una máquina virtual con VirtualBox, <a href="https://www.vmware.com/">VMware</a>, <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a> o en la nube por ejemplo de <a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a>, <a href="https://azure.microsoft.com/es-es/">microsoft-azure</a> o <a href="https://cloud.google.com/">Google Cloud</a> y próximamente usando <a href="https://www.docker.com/">Docker</a>.</p>
<p>¿Alguna vez has querido probar <a href="https://wordpress.org/">Wordpress</a>, <a href="https://www.redmine.org/">Redmine</a>, <a href="https://www.drupal.org/">Drupal</a>, <a href="https://www.mediawiki.org/">MediaWiki</a>, <a href="https://www.phpbb.com/">phpBB</a>, <a href="https://www.liferay.com/">Liferay</a>, <a href="https://jenkins.io/">Jenkins</a>, <a href="https://plone.org/">Plone</a>, <a href="https://www.alfresco.com/">Alfresco</a>, &hellip;? Estos son solo unos pocos ejemplos de <a href="https://bitnami.com/stacks">todos los servicios que nos ofrece Bitnami</a> listos para que empecemos a usarlos en unos pocos minutos, hay muchos otros disponibles y en un futuro se agregarán más según las peticiones que realicen los usuarios de Bitnami. Algunas aplicaciones están compuestas de una pila completa de servicios como por ejemplo LAMP (Linux, Apache, MySQL, PHP) o LAPP (Linux, Apache, PostgreSQL, PHP) que incluyen una lista completa de dependencias que necesitan como FastCGI, OpenSSL, phpMyAdmin, ModSecurity, SQLite, Varnish, ImageMagick, xDebug, Xcache, OpenLDAP, ModSecurity, Memcache, OAuth, PEAR, PECL, APC, GD o cURL. Adicionalmente podemos usar una única pila como LAMP para instalar varios <a href="https://bitnami.com/stack/lamp/modules">módulos</a> en vez de instalar cada aplicación individualmente (Drupal, MediaWiki, &hellip;) de forma que todas las aplicación compartan la infraestructura de la misma pila.</p>
<p>En un futuro parece que Bitnami ofrecerá soporte para <a href="https://www.docker.com/">Docker</a> haciendo que no necesitemos ni siquiera un entorno de virtualización, ahorrando espacio en disco y ofreciendo el máximo rendimiento que ofrezca la máquina sin ningún tipo de penalización que impone virtualizar.</p>
<h3 id="cómo-empezar-a-usar-bitnami">¿Cómo empezar a usar Bitnami?</h3>
<p>A continuación explicaré la opción de usar Bitnami con VirtualBox, para el ejemplo usaré la aplicación de <a href="https://about.gitlab.com/">GitLab</a>. En la <a href="https://docs.bitnami.com/virtual-machine/">guía de inicio rápido de Bitnami</a> están explicadas otras opciones y preguntas frecuentes, en este caso nos interesa la <a href="https://docs.bitnami.com/virtual-machine/get-started-virtualbox/">sección para VirtualBox</a>.</p>
<p>Teniendo instalado previamente VirtualBox, primeramente necesitaremos descargar la imagen del disco que contiene la <a href="https://bitnami.com/stack/gitlab">aplicación de Bitnami para GitLab</a>. Accedida a la sección <a href="https://bitnami.com/stack/gitlab/virtual-machine"><em>Local Install</em></a> pulsamos el botón <em>Download</em> según la versión del sistema operativo que prefiramos, en este caso usaré la basada en <a href="https://www.debian.org/">Debian</a>. A continuación hay que crear una máquina virtual en VirtualBox mediante la opción <em>Importar servicio virtualizado&hellip;</em> del menú <em>Archivo</em> donde hay que seleccionar el archivo de extensión <em>ova</em> y cambiaremos la memoria asignada a la máquina virtual al menos 2048 MiB.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-importar-servicio-virtualizado_huea606d4532b9c289e2b465a836172f8b_108509_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Importación de servicio virtualizado en VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-importar-servicio-virtualizado_huea606d4532b9c289e2b465a836172f8b_108509_300x200_fit_box_3.png" width="300" height="198" alt="Importación de servicio virtualizado en VirtualBox" title="Importación de servicio virtualizado en VirtualBox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-gitlab_hu8207aa8b5020809288ce6ba68fd9735a_23848_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Máquina virtual de GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-gitlab_hu8207aa8b5020809288ce6ba68fd9735a_23848_300x200_fit_box_3.png" width="296" height="200" alt="Máquina virtual de GitLab" title="Máquina virtual de GitLab"  class="lozad "></a></p>
<figcaption>Importación de servicio virtualizado de Bitnami en VirtualBox</figcaption>
</figure>
</div>
<p>Una vez importado el servicio y creada la máquina virtual la tratamos como cualquier otra máquina virtual para iniciarla la máquina virtual está lista para ser iniciada. Una vez iniciada completamente en la terminal se solicita un inicio de sesión con el usuario y contraseña que da acceso a una terminal para realizar tareas administrativas, en la misma página de inicio de sesión se indica el usuario y contraseña a usar y se indica la dirección IP (en el caso de las capturas mostradas es la <em>192.168.1.3</em>) que es necesario usar para acceder al servicio con el navegador. En el primer inicio de sesión se solicita cambiar la contraseña.</p>
<p>Accediendo con el navegador a la dirección <em>https://192.168.1.3</em> se accede a la aplicación de GitLab que pide un usuario y contraseña para iniciar sesión, el usuario y contraseña están indicados en la página de descarga de la imagen del servicio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab-inicio-sesion_hua827c112ebc0dfe1f95fdf1511ae6469_60472_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión de GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab-inicio-sesion_hua827c112ebc0dfe1f95fdf1511ae6469_60472_300x200_fit_box_3.png" width="284" height="200" alt="Inicio de sesión de GitLab" title="Inicio de sesión de GitLab"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab_hu1c9450aa09534aa8f5ca35bf6de1a0dd_55744_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab_hu1c9450aa09534aa8f5ca35bf6de1a0dd_55744_300x200_fit_box_3.png" width="266" height="200" alt="GitLab" title="GitLab"  class="lozad "></a></p>
<figcaption>Servicio de GitLab</figcaption>
</figure>
</div>
<p>En definitiva, Bitnami es de utilidad si se necesita usar cualquiera de los servicios que ofrece tanto para probarlos con una máquina virtual o para instalarlos en la nube de Amazon EC2, Azure o en Google Cloud. La nube evita adquirir hardware y posibilita escalarlo según las necesidades siempre estando dispuestos a pagar su coste, en algunos casos un mini PC como los <a href="https://amzn.to/2rauzYV">Brix</a>, <a href="https://amzn.to/2s8GYtI">NUC</a> o <a href="https://amzn.to/2r07KGS">Cubi</a> que soportan cantidades de memoria de 16 GiB y algunos 32 GiB son mas que suficientes para una infraestructura interna de una empresa pequeña que incluya control de versiones, gestor de peticiones, integración continua, base de datos, servidor de aplicaciones, &hellip; estos ordenadores pequeños en tamaño pero con una capacidad de proceso y memoria nada despreciable son una opción a considerar para algunas tareas y pueden actuar perfectamente como servidores en los que alojar algunos servicios para consumo interno.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://bitnami.com">Bitnami</a></li>
<li><a href="https://en.wikipedia.org/wiki/Bitnami">Wikipedia Bitnami</a></li>
<li><a href="http://www.jsitech.com/generales/bitnami-una-tienda-de-aplicaciones-para-servidores/">Bitnami, Una tienda de Aplicaciones para Servidores</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción a Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Guía de inicio básico de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">Introducción al gestor de proyectos y tareas Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar plugin ágil en Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/</id>
        <title>Integración entre Ansible y Docker</title>
        <updated>2014-12-29T19:00:00+01:00</updated>
        <published>2014-11-22T10:28:52+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ansible.svg" width="200" height="246" alt="Ansible" title="Ansible"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>En la <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">introducción de Docker</a> y <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">inicio básico de docker</a> explicaba como usar Docker y en la <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">introducción a Ansible</a> explicaba las características de Ansible y como usarlo. Podemos usar <a href="https://www.docker.com/">Docker</a> y <a href="https://www.ansible.com/">Ansible</a> de forma separada pero también podemos combinarlas para beneficiarnos de las propiedades de cada una. En Ansible disponemos de dos módulos que nos permite manejar las imágenes y los contenedores de Docker, estos son <a href="http://docs.ansible.com/docker_module.html">docker</a> y <a href="http://docs.ansible.com/docker_image_module.html">docker_image</a>.</p>
<p>Usando tareas de ansible podemos automatizar el arranque del servicio de docker, la construcción de las imágenes con los Dokerfile y el inicio o parada de los contenedores de docker. En el ejemplo se construye una imagen base en la que se basarán el resto de imágenes, se crea una imagen con mysql, otra de redis y finalmente la imagen apps donde se ejecutarán las aplicaciones que usarán los servicios de mysql y redis.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nn">---</span><span class="w">&#10;</span><span class="w"></span>- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start docker service</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">name=docker state=started</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">   &#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">build docker images</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker_image</span><span class="p">:</span><span class="w"> </span><span class="l">name=&#34;{{ item.name }}&#34; tag=&#34;{{ item.tag }}&#34; state=&#34;present&#34; path={{ item.path }}</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/base&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/base&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/mysql&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/mysql&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/redis&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/redis&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/apps&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/apps&#34;</span><span class="w"> </span>}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.yml</span>
    </div>
</div>
<p>Una vez que disponemos de las imágenes de docker podemos arrancar contenedores con ellas automatizándolo con ansible. En este caso se inicia el servicio de docker, se inicializan los contenedores con los volúmenes donde se guardan los datos de forma persistente de mysql y redis, se inician los contenedores de mysql y redis usando los volúmenes anteriores y finalmente el contenedor de las aplicaciones. Al final, se muestra cierta información de las imágenes como sus direcciones IP.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml">- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start docker service</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">name=docker state=started</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start mysql data docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=busybox:latest name=picodotdev-mysql-data state=present volumes=&#34;/var/lib/mysql&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">mysql_data_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start redis data docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=busybox:latest name=picodotdev-redis-data state=present volumes=&#34;/var/lib/redis&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">redis_data_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start mysql docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/mysql:1.0 name=picodotdev-mysql state=running volumes_from=picodotdev-mysql-data hostname=mysql ports=3306:3306 command=/sbin/my_init</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">mysql_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start redis docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/redis:1.0 name=picodotdev-redis state=running volumes_from=picodotdev-redis-data volumes=&#34;{{ keys_path }}:/mnt/keys&#34; hostname=redis ports=6379:6379 command=/sbin/my_init</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">redis_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start apps docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/apps:1.0 name=picodotdev-apps state=running volumes=&#34;{{ projects_path }}:/mnt/projects,{{ grails_path }}:/root/.grails,{{ gradle_path }}:/root/.gradle,{{ keys_path }}:/mnt/keys&#34; hostname=apps ports=8080:8080,8443:8443 links=picodotdev-mysql:mysql,picodotdev-redis:redis command=/sbin/my_init</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">apps_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">update hosts with containers ip address</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">replace</span><span class="p">:</span><span class="w"> </span><span class="l">dest=/etc/hosts regexp=&#34;^(\d+\.\d+\.\d+\.\d+)(\s+{{ item.host }})$&#34; replace=&#34;{{ item.ip }}\2&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mysql&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;redis&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;apps&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">display containers info</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">debug</span><span class="p">:</span><span class="w"> </span><span class="l">msg=&#34;info&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>start.yml</span>
    </div>
</div>
<p>Ansible <a href="http://docs.ansible.com/list_of_all_modules.html">dispone muchos módulos</a> que nos permiten automatizar las tareas:</p>
<ul>
<li><a href="http://docs.ansible.com/list_of_cloud_modules.html">Módulos para manejo de entornos cloud</a> (<a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a>, <a href="https://azure.microsoft.com/es-es/">microsoft-azure</a>, <a href="https://www.digitalocean.com/">Digital Ocean</a>, <a href="https://www.openstack.org/">OpenStack</a>, <a href="https://www.rackspace.com/es">Rackspace</a>)</li>
<li><a href="http://docs.ansible.com/list_of_commands_modules.html">Módulos para ejecutar comandos</a></li>
<li><a href="http://docs.ansible.com/list_of_database_modules.html">Módulos para administración de bases de datos</a></li>
<li><a href="http://docs.ansible.com/modules_by_category.html">Módulos para manejo de archivos</a></li>
<li><a href="http://docs.ansible.com/list_of_packaging_modules.html">Módulos para manejo de paquetes</a></li>
<li><a href="http://docs.ansible.com/list_of_source_control_modules.html">Módulos para manejo de sistemas de control de versiones</a></li>
<li>Y algunos más</li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>