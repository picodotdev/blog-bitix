<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre el lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2024-01-20T20:00:00+02:00</updated>
    <author></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/</id>
        <title>Cifrar archivos con EncFS en GNU/Linux</title>
        <updated>2016-02-22T21:00:00+01:00</updated>
        <published>2016-02-19T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Hacer copias de seguridad es una buena práctica para evitar perder información en caso de que por ejemplo un disco duro se nos estropee. Cifrar la información o al menos parte de ella como las contraseñas (si las guardamos en un archivo de texto) también es una buena práctica por si perdemos una memoria USB, nos roban en un lugar público o en nuestro domicilio un disco duro o un portátil o los extraviamos en algún viaje. Una forma sencilla para proteger su contenido cifrando múltiples archivos es EncFS.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/</id>
        <title>Cómo recuperar archivos eliminados o de una unidad corrupta en GNU/Linux</title>
        <updated>2016-02-12T19:30:00+01:00</updated>
        <published>2016-02-12T19:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Muchos archivos y su contenido son recuperables aún después de eliminados y liberado su espacio ocupado del sistema de archivos. Herramientas como Foremost son capaces de recuperar el contenido de un archivo si no ha sido sobrescrito accediendo a bajo nivel a los datos de la unidad, ya esté corrupta y de algún error al montarla o funcione perfectamente. Pudiendo extraer una imagen de la unidad seremos capaces de recuperar gran cantidad de archivos motivo por el cual al deshacernos de una unidad de almacenamiento es recomendable hacer un borrado seguro para evitar que información personal o confidencial sea obtenida con cualquier propósito.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/</id>
        <title>6º aniversario del blog</title>
        <updated>2016-02-07T10:00:00+01:00</updated>
        <published>2016-02-06T12:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Muchas bitácoras perecen y son abandonadas al cabo de un par de años, quizá sus autores desmotivados por las pocas visitas que reciben o por el tiempo que se dan cuenta que les requiere dedicar a escribir en una bitácora y más aún editar los artículos. En mi caso aún no he perdido las ganas por seguir escribiendo y son incluso mayores. La experiencia acumulada durante este tiempo también se nota en la redacción de los artículos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/</id>
        <title>Conferencia BilboStack 2016</title>
        <updated>2016-02-27T22:00:00+01:00</updated>
        <published>2016-01-31T00:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/</id>
        <title>Aplicación web con Spark framework y Java</title>
        <updated>2016-01-24T12:00:00+01:00</updated>
        <published>2016-01-23T16:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Spark <em>framework</em> es un <em>microframework</em> web para Java que además hace uso de las novedades introducidas en la versión 8 del lenguaje. Para una aplicación no compleja o de un tamaño reducido permite desarrollar con su sencillez la funcionalidad de la aplicación inmediatamente y una arquitectura liviana.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/</id>
        <title>Introducción y ejemplo básico sobre Vert.x</title>
        <updated>2016-01-15T20:00:00+01:00</updated>
        <published>2016-01-15T15:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Las aplicaciones basadas en eventos y con E/S no bloqueante son más eficientes, requieren menos recursos y son capaces de servir más peticiones o usuarios por unidad de tiempo. En JavaScript su mejor representante es Node.js, en la plataforma JVM uno equivalente es Vert.x. Pero también tiene sus contrapartidas. En el artículo incluiré un pequeño ejemplo de Vert.x que muestre las diferencias con las aplicaciones tradicionalmente basadas en hilos y llamadas a métodos bloqueantes.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/</id>
        <title>Windows 10 y Office 2016 tan fáciles de usar sin licencia como siempre</title>
        <updated>2020-09-12T01:00:00+02:00</updated>
        <published>2016-01-08T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Comentaba en un artículo que es sorprendente que Microsoft con la capacidad que tiene y estando los dispositivos conectados a internet mayoritariamente no sea capaz de evitar usar su software sin licencia. Estoy a punto de ver si con Windows 10 y Office 2016 sigue siendo tan fácil como siempre. También tendré una muestra de la injusta fama de Windows pero que permite Microsoft por el <em>bloatware</em> que preinstalan los fabricantes de dispositivos con su sistema operativo.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="microsoft"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="windows"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/</id>
        <title>Hemeroteca #8</title>
        <updated>2016-01-04T22:00:00+01:00</updated>
        <published>2016-01-02T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Seis meses más de artículos la mayoría sobre programación en Java tratando algunas de las nuevas tendencias de programación con las posibilidades de la plataforma de la JVM. Unos pocos artículos más continuando la serie sobre Docker y uno de opinión sobre las licencias de Microsoft.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/</id>
        <title>Yo apoyo al software libre, tú también</title>
        <updated>2016-01-02T12:00:00+01:00</updated>
        <published>2015-12-29T21:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Hay múltiples formas con las que colaborar con el software libre, una muy importante es usándolo y al final de cierto tiempo uno se plantea de colaborar de otras formas para devolver un poquito de todo lo que nos ha ofrecido. Así pues, podemos colaborar realizando o mejorando la traducción de algún programa que usemos, promocionándolo entre nuestros conocidos o escribiendo en un blog sobre él, enviando informes de error o si tenemos los conocimientos aportando código para corregir algún error o añadiéndole alguna funcionalidad, depende de tiempo y conocimiento que tengamos también. Otra forma es realizando alguna donación económica aunque sea una pequeña cantidad a algún proyecto o software que nos resulte de interés. Después de recibir el ingreso de AdSense por la publicidad de esta bitácora este es mi caso.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/</id>
        <title>Publicado Apache Tapestry 5.4</title>
        <updated>2015-12-24T16:00:00+02:00</updated>
        <published>2015-12-24T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/</id>
        <title>Cómo buscar los enlaces rotos de un sitio web</title>
        <updated>2015-12-18T18:00:00+01:00</updated>
        <published>2015-12-18T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Ya tengamos un sitio web, una bitácora, o una aplicación web es recomendable comprobar cada cierto tiempo los enlaces rotos. Las páginas pueden desaparecer o cambiar de dirección y esto provocará páginas no encontradas en los enlaces que las referenciasen. Usando herramientas que automaticen la tarea podemos encontrar enlaces rotos de forma efectiva y rápida.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/</id>
        <title>Monitorizar estado de sitios web con Uptime Robot</title>
        <updated>2015-12-15T18:00:00+01:00</updated>
        <published>2015-12-11T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/</id>
        <title>Información y métricas de la aplicación con Spring Boot Actuator</title>
        <updated>2015-12-11T23:25:00+01:00</updated>
        <published>2015-12-04T17:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Desarrollar una aplicación no solo implica implementar su funcionalidad, esa aplicación ha de mantenerse funcionando en su entorno de producción. Monitorizar y disponer de información sobre el estado ayuda a mantenerla funcionando sin ninguna caída de servicio u obtener métricas para mejorar su funcionamiento. Entre las numerosas funcionalidades ofrecidas por Spring para las aplicaciones Java está Spring Boot Actuator que precisamente nos proporcionará métricas e información interesantes de serie pudiendo implementar nueva según la necesidades.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/</id>
        <title>Configuración de una aplicación en diferentes entornos con Spring Cloud Config</title>
        <updated>2015-12-11T22:00:00+01:00</updated>
        <published>2015-11-28T11:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La configuración de una aplicación suele varíar según el entorno en el que se ejecuta, la opción recomendada es que este externalizada y que el artefacto que se despliega en cada entorno sea el mismo. Con Spring Cloud Config en vez de guardar la configuración en un archivo de la propia máquina donde se instala podemos guardar de forma centralizada en un repositorio y que la aplicación obtenga la versión más actualizada cuando se inicia. En este ejemplo explicaré como crear el servidor de configuraciones con Spring Cloud Config y un ejemplo de cliente con Spring Boot que le solicita su configuración según su entorno.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/11/validar-objetos-con-spring-validation-ejemplo-registros-de-jooq/</id>
        <title>Validar objetos con Spring Validation, ejemplo registros de jOOQ</title>
        <updated>2015-11-17T19:20:00+01:00</updated>
        <published>2015-11-17T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/11/validar-objetos-con-spring-validation-ejemplo-registros-de-jooq/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>jOOQ es una alternativa a Hibernate que devuelve la base de datos a primer plano en una aplicación. Por la importancia en cualquier aplicación de los datos propone que la base de datos sea la única fuente de la verdad. Para los modelos es patente al generarse a partir del esquema de la base de datos para las validaciones se puede hacer con restricciones de integridad pero si queremos conocer los errores detalladamente que se produzcan puede que deseemos usar Spring Validation.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2015/11/validar-objetos-con-spring-validation-ejemplo-registros-de-jooq/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>