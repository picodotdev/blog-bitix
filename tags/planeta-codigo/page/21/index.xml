<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2022-07-08T16:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/</id>
        <title>Conferencia BilboStack 2018</title>
        <updated>2018-01-28T23:30:00+01:00</updated>
        <published>2018-01-27T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>A diferencia de los seis años anteriores este la <a href="https://bilbostack.com/">BilboStack</a> ha tenido lugar en el <a href="https://www.euskalduna.eus/">Palacio Euskalduna</a> en vez de la <a href="https://www.deusto.es">Universidad de Deusto</a> permitiendo un aforo aún mayor que el de la universidad y con unas salas más grandes y butacas más cómodas que las espartanas sillas de la uni en las que igualmente si se ponía atención y luego esfuerzo se aprendían cosas interesantes, muchos hemos pasado varios años en ellas.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/bilbostack-1_hue1f64a941f5a3ba1e32eb76074289836_385158_2560x1440_fit_q90_box.jpg" data-gallery="" title="BilboStack 2018"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/bilbostack-1_hue1f64a941f5a3ba1e32eb76074289836_385158_300x200_fit_q90_box.jpg" width="300" height="194" alt="BilboStack 2018" title="BilboStack 2018"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/bilbostack-2_hu481cb810c34d0fe683ae61403618c5c0_258124_2560x1440_fit_q90_box.jpg" data-gallery="" title="BilboStack 2018"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/bilbostack-2_hu481cb810c34d0fe683ae61403618c5c0_258124_300x200_fit_q90_box.jpg" width="88" height="200" alt="BilboStack 2018" title="BilboStack 2018"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/bilbostack-3_hudab2cac80d1f9fe5ce2bda5b2d3533be_582530_2560x1440_fit_q90_box.jpg" data-gallery="" title="BilboStack 2018"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/bilbostack-3_hudab2cac80d1f9fe5ce2bda5b2d3533be_582530_300x200_fit_q90_box.jpg" width="267" height="200" alt="BilboStack 2018" title="BilboStack 2018"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/presentacion_hu417f5cfc388c8cd2afe5e61b3a34f2a4_303863_2560x1440_fit_q90_box.jpg" data-gallery="" title="Presentación BilboStack 2018"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/presentacion_hu417f5cfc388c8cd2afe5e61b3a34f2a4_303863_300x200_fit_q90_box.jpg" width="267" height="200" alt="Presentación BilboStack 2018" title="Presentación BilboStack 2018"  class="lozad "></a></p>
<figcaption>BilboStack 2018</figcaption>
</figure>
</div>
<p>En la presentación inicial se ha comentado como se gestó la primera BilboStack. A la vuelta de otra conferencia los organizadores se preguntaron por que no organizar una ellos en Bilbao para no siempre ir a otras ciudades como Madrid o Barcelona.</p>
<p>Hasta el momento siempre se ha mantenido gratuita la entrada previa reserva pero este año con la ayuda de los patrocinadores han podido acceder a este gran recinto y costear el viaje a los ponentes, esto demuestra lo agradecidos que debemos estar a los de los  años anteriores ya que además de hacer la presentación compartiendo su conocimiento se pagaban ellos mismos el viaje.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/euskalduna-1_hu719da7a778c0e82331251ba73817ee94_479072_2560x1440_fit_q90_box.jpg" data-gallery="" title="Palacio Euskalduna"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/euskalduna-1_hu719da7a778c0e82331251ba73817ee94_479072_300x200_fit_q90_box.jpg" width="267" height="200" alt="Palacio Euskalduna" title="Palacio Euskalduna"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/euskalduna-2_hu6b44b9ef729faf8f4b38c670cfef02e4_538134_2560x1440_fit_q90_box.jpg" data-gallery="" title="Palacio Euskalduna"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/euskalduna-2_hu6b44b9ef729faf8f4b38c670cfef02e4_538134_300x200_fit_q90_box.jpg" width="267" height="200" alt="Palacio Euskalduna" title="Palacio Euskalduna"  class="lozad "></a></p>
<figcaption>Palacio Euskalduna</figcaption>
</figure>
</div>
<p>700 y pico entradas eran las que se han ofrecido, ni los organizadores creían que se iban a agotar y se jactaban de que habría entradas para todos en los primeros días de poner la primera oleada para la reserva, pues al final ni esas 700 parece que han estado sobradas. Sorprendente ya que en el 2016 los asistentes fueron 332, algo menos de la mitad del aforo de este año. 6 de las 8 presentaciones han sido dadas por mujeres y en años anteriores también ha habido presencia femenina tanto ponentes como asistentes.</p>
<p>Número de asistentes por año:</p>
<ul>
<li>2012: 252</li>
<li>2013: 261</li>
<li>2014: 304</li>
<li>2015: 340</li>
<li>2016: 332</li>
<li>2017: ¿?</li>
<li>2018: 500</li>
</ul>
<p>Por supuesto tener a disposición para la conferencia este recinto y los ponente sin que estos se paguen el viaje ha sido más fácil y posible gracias a los patrocinadores que además han ofrecido algunas pegatinas, cuadernillos, folletos a los asistentes e incluso ofertas laborales.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/patrocinadores_hue51a3baaa91d85f10840c82ab7c4fb3a_344148_2560x1440_fit_box_3.png" data-gallery="" title="Patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/patrocinadores_hue51a3baaa91d85f10840c82ab7c4fb3a_344148_300x200_fit_box_3.png" width="300" height="120" alt="Patrocinadores" title="Patrocinadores"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/merchandising_hu31a4358e851aec15298dcebddc944b24_347720_2560x1440_fit_q90_box.jpg" data-gallery="" title="Merchandising"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/merchandising_hu31a4358e851aec15298dcebddc944b24_347720_300x200_fit_q90_box.jpg" width="267" height="200" alt="Merchandising" title="Merchandising"  class="lozad "></a></p>
<figcaption>Patrocinadores</figcaption>
</figure>
</div>
<p>La agenda del evento en esta edición ha sido la siguiente, dos <em>tracks</em> con cuatro presentaciones en cada una de ellas, en formato de una mañana y el posterior postevento para el que desee.</p>
<table class="table">
    <thead class="table-light">
        <th width="140px">Hora</th>
        <th>Track 1</th>
    </thead>
    <tbody>
        <tr>
            <td>09:00-09:20</td>
            <td>Presentación</td>
        </tr>
        <tr>
            <td>09:30-10:20</td>
            <td>Lo que no se VUE <em>por Angélica Lozano</em></td>
        </tr>
        <tr>
            <td>10:30-11:20</td>
            <td>Refactoring Mount Doom - Tackling Legacy Code <em>por Franziska Sauerwein</em></td>
        </tr>
        <tr>
            <td>11:30-12:00</td>
            <td>Networking + Café</td>
        </tr>
        <tr>
            <td>12:00-12:50</td>
            <td>Camino a producción <em>por Mario Marin</em></td>
        </tr>
        <tr>
            <td>13:00-13:50</td>
            <td>Evitando el efecto dominó en nuestros (micro)servicios <em>por Javi Ferrer y Rafa Gómez</em></td>
        </tr>
        <tr>
            <td>> 14:00</td>
            <td>Networking + pintxos y poteo</td>
        </tr>
    </tbody>
</table>
<table class="table">
    <thead class="table-light">
        <th width="140px">Hora</th>
        <th>Track 2</th>
    </thead>
    <tbody>
        <tr>
            <td>09:00-09:20</td>
            <td>Presentación</td>
        </tr>
        <tr>
            <td>09:30-10:20</td>
            <td>Con canvas y a lo loco <em>por Carmen Ansio Ruiz</em></td>
        </tr>
        <tr>
            <td>10:30-11:20</td>
            <td>CSS Grid Layout en acción <em>por Diana Aceves</em></td>
        </tr>
        <tr>
            <td>11:30-12:00</td>
            <td>Networking + Café</td>
        </tr>
        <tr>
            <td>12:00-12:50</td>
            <td>Machine Learning, camino a Skynet <em>por Beatriz Martín</em></td>
        </tr>
        <tr>
            <td>13:00-13:50</td>
            <td>Aventuras con Agile: retrospectivas <em>por Amalia Hernández</em></td>
        </tr>
        <tr>
            <td>> 14:00</td>
            <td>Networking + pintxos y poteo</td>
        </tr>
    </tbody>
</table>
<h3 id="lo-que-no-se-vue-empor-angélica-lozanoem">Lo que no se Vue <em>por Angélica Lozano</em></h3>
<p>En una aplicación con algunos indicadores para el sector de la automoción en la que el <em>front</em> era «una puta chapuza» la replantean para permitir diferentes dispositivos y desacoplar el <em>frontend</em> y <em>backend</em>. Usando <a href="https://vuejs.org/">Vue</a> las cosas se simplifican al usar sus componentes (componentes&hellip; de que me suena&hellip;) encapsulando la funcionalidad y utilizando un solo fichero en el que se incluye la plantilla para el HTML, el código JavaScript asociado y los estilos CSS.</p>
<p>Algunas de sus manías o recomendaciones son programar y dar nombres a las cosas en inglés (¿evitar el <em>spanglish</em>, más compacto que el español?, caracter ñ, &hellip;), conocer las herramientas que hace más simple el trabajo, usar <a href="https://es.wikipedia.org/wiki/Poka-yoke">poka-jokes</a> al diseñar el código para no poder usarlo mal ni aposta, evitar sentencias <em>if</em> anidadas utilizando <em>guard-clauses</em>, utilizar una buena semántica según el área de dominio junto con una buena nomenclatura al asignar nombres o usar alguna herramienta para analizar que el código sigue las buenas prácticas adoptadas.</p>
<p>En las plantillas de Vue se usan algunas directivas como <em>v-if</em>, <em>v-for</em> o <em>v-model</em> para añadirles lógica o para pasar propiedades del componente padre al hijo, con eventos se puede pasar información del hijo al componente padre. Es un <em>framework</em> progresivo en el que se pueden ir usando cosas según se necesitan (vuex, vue-router, vuetify, vue-i18n).</p>
<p>Llevar el código a las fábricas de automoción es parte del desarrollo y para ello utilizan herramientas como <a href="https://jenkins.io/">Jenkins</a>, <a href="https://www.ansible.com/">Ansible</a> y <a href="https://www.docker.com/">Docker</a>.</p>
<p>Referencia:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=8-ymTkrZPLg">La Pull Request Perfecta</a></li>
<li><a href="https://www.youtube.com/watch?v=zC51h2jU0n4">Meetup Vuex, ¿para qué sirve? ¿lo necesito?</a></li>
<li><a href="https://www.gitbook.com/book/jdonsan/desarrolla-aplicaciones-con-vuejs/details">Libro Desarrolla aplicaciones con Vue</a></li>
<li><a href="https://www.youtube.com/watch?v=esFGn_8S_mw">Curso Testing con Vuejs, CodelyTv Pro</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/lo-que-no-se-vue_hu670e07eb2d467cfd99c03b177cc4864f_340701_2560x1440_fit_q90_box.jpg" data-gallery="" title="Lo que no se Vue"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/lo-que-no-se-vue_hu670e07eb2d467cfd99c03b177cc4864f_340701_300x200_fit_q90_box.jpg" width="267" height="200" alt="Lo que no se Vue" title="Lo que no se Vue"  class="lozad "></a></p>
</figure>
</div>
<h3 id="css-grid-layout-en-acción-empor-diana-acevesem">CSS Grid Layout en acción <em>por Diana Aceves</em></h3>
<p>Mas que una charla ha sido una demostración de como implementar con <a href="https://www.w3.org/TR/css-grid-1/">CSS Grid</a> una <a href="http://themes.themewaves.com/fuze/#!layout-1">plantilla existente para Wordpress</a> con once variaciones de <em>layout</em>, una columna y fila con un texto alineado horizontalmente y verticalmente, dos columnas, tres columnas, dos filas, dos filas dos columnas y así hasta once.</p>
<p>La especificación de CSS Grid es grande y parece complicada pero no hace falta conocerla entera ya que utilizando una pequeña parte y unas pocas propiedades ya es posible hacer cosas interesantes. En las herramientas para desarrolladores de Firefox hay un inspector especifico para los <em>grids</em> útil para depurar e inspeccionar los elementos.</p>
<p>Algunas de las propiedades de CSS Grid son:</p>
<ul>
<li>display: grid;</li>
<li>grid-template-columns: 4em 4em 4em;</li>
<li>grid-template-columns: 1fr 1fr 1fr;</li>
<li>grid-template-rows: repeat(5, 4em);</li>
<li>grid-gap: 4em;</li>
<li>grid-row-gap: 4em;</li>
<li>grid-column: 3;</li>
<li>grid-row: 2;</li>
<li>grid-row: span 2;</li>
<li>grid-row: 1/span 2;</li>
<li>grid-auto-flow: dense;</li>
</ul>
<p>Ah! Que recuerdos de aquella época cuando se maquetaban con tablas e incluso tablas dentro de tablas y gifs de un pixel transparentes&hellip;, luego vinieron los <em>divs</em> y algunos <em>floats</em>, &hellip; las cosas han cambiado con CSS Grid y CSS Flexbox aunque los que no nos dedicamos específicamente al diseño o maquetación sobrevivimos con <a href="https://getbootstrap.com/">Bootstrap</a>.</p>
<p>Referencia:</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout">CSS Grid Layout</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout">CSS Flexbox Layout</a></li>
<li><a href="https://blogs.igalia.com/mrego/2015/02/25/grid-auto-placement-is-ready/">Grid Auto-Placement Is Ready</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/css-grid-layout-en-accion_hu7fb0e918ac444a23e2228c30481f71d1_249287_2560x1440_fit_q90_box.jpg" data-gallery="" title="CSS Grid Layout en acción"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/css-grid-layout-en-accion_hu7fb0e918ac444a23e2228c30481f71d1_249287_300x200_fit_q90_box.jpg" width="267" height="200" alt="CSS Grid Layout en acción" title="CSS Grid Layout en acción"  class="lozad "></a></p>
</figure>
</div>
<h3 id="camino-a-producción-empor-mario-marinem">Camino a producción <em>por Mario Marin</em></h3>
<p>Había oído algo de la tienda de componentes electrónicos para ordenadores <a href="https://www.pccomponentes.com/">PC Componentes</a> que ahí está luchando con <a href="https://amzn.to/2flFhHA">Amazon</a>, nada más y nada menos, en este nicho de mercado. Es un ejemplo de éxito por como ha pasado de ser una tienda de barrio a convertirse en una de las web de referencia en internet del comercio electrónico. Algunos de sus números en el 2017 son:</p>
<ul>
<li>314 millones de facturación</li>
<li>88 millones de sesiones</li>
<li>1,5 millones de pedidos</li>
<li>30 mil pedidos semanales</li>
</ul>
<p>Evolucionan en la misma medida que crece el negocio por internet. Surgen necesidades y departamentos (atención al cliente, compras, devoluciones, &hellip;). El desarrollo y el mantenimiento se complica que acaba afectando a la rapidez del desarrollo. También se va acumulando la deuda técnica pero el negocio tiene que seguir funcionando, no se puede parar a resolverla o parar de crearla para llegar antes al mercado o no llegar más tarde que la competencia. El resultado es algo que no funciona bien con errores y que los sistemas a duras penas soportan.</p>
<p>En este punto es cuando empiezan a mejorar, aprendiendo cosas que antes no conocían a partir de como los demás con problemas similares los resuelven y que aplicándolas van solucionando algunos problemas. También contratando gente específica para desarrollo o sistemas y utilizando herramientas que faciliten el desarrollo como <a href="https://bitbucket.org/">Bitbucket</a>, <a href="https://www.atlassian.com/software/jira">JIRA</a>, <a href="https://git-scm.com/">Git</a>, <a href="https://jenkins.io/">Jenkins</a>, <a href="https://www.docker.com/">Docker</a>, <a href="https://phpunit.de/">PHPUnit</a>, <a href="https://www.sonarqube.org/">SonarQube</a>, <a href="https://docs.seleniumhq.org/">Selenium</a> y <a href="https://newrelic.com/">New Relic</a>.</p>
<p>Echando la vista atrás se ve lo que has mejorado y es satisfactorio, a pesar de que quedan muchas cosas por hacer.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/camino-a-produccion_hu51beb7963aea8019fbcf4bc98296e78f_405386_2560x1440_fit_q90_box.jpg" data-gallery="" title="Camino a producción"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/camino-a-produccion_hu51beb7963aea8019fbcf4bc98296e78f_405386_300x200_fit_q90_box.jpg" width="267" height="200" alt="Camino a producción" title="Camino a producción"  class="lozad "></a></p>
</figure>
</div>
<h3 id="evitando-el-efecto-dominó-en-nuestros-micoservicios-empor-javi-ferrer-y-rafa-gómezem">Evitando el efecto dominó en nuestros (mico)servicios <em>por Javi Ferrer y Rafa Gómez</em></h3>
<p>Muchas aplicaciones empiezan siendo un monolito, sin embargo aún siendo más fáciles de saber como funcionan y de desarrollar nuevas características no están exentas de problemas como el escalado ante picos de tráfico o que cuando se cae deja de funcionar todo. Los microservicios tratan de solventar algunos de las deficiencias de los monolitos y permiten cosas como múltiples equipos para diferentes funcionalidades, trocear el monolito en partes más pequeñas, usar diferentes lenguajes de programación según se considere el más adecuado para cada parte y escalarlas individualmente.</p>
<p>Sin embargo, dividir la aplicación en dos no es suficiente ya que puede seguir estando acopladas en la base de datos si la comparten de modo que si una parte sufre un tráfico importante este puede afectar a la otra aplicación por competir con ella en el acceso a la base de datos. Crear dos bases de datos y que las aplicaciones se comuniquen mediante llamadas a una API, por ejemplo con un servicio REST, para acceder una a los datos de la otra sigue habiendo acoplamiento, si una parte falla afecta a la otra. Estas opciones siguen siendo un monolito, distribuido pero monolito.</p>
<p>Para eliminar este acoplamiento en la infraestructura de las aplicaciones se pueden aplicar los principios <a href="https://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29">SOLID</a> e <a href="https://en.wikipedia.org/wiki/Dependency_inversion_principle">inversión de dependencias</a> que ya aplicamos en el código para no depender de una implementación concreta, creando una interfaz de repositorio y luego implementaciones de esta según se necesiten, una implementación del repositorio para guardar en base de datos u otra para enviar un correo electrónico. De esta forma se pueden añadir nuevas implementaciones con nuevas funcionalidades, el sistema está abierto a extensión sin necesidad de modificar el código existente.</p>
<p>A nivel de la infraestructura una forma de interfaz son los eventos, un sistema los publica y otro u otros suscritos a ellos los consumen. Utilizar un sistema de mensajes y colas como <a href="https://www.rabbitmq.com/">RabbitMQ</a> permite desacoplar los servicios, si el consumidor de eventos cae los mensajes se siguen encolando y se volverán a procesar cuando el consumidor esté de nuevo en funcionamiento. Si se quiere desarrollar una nueva funcionalidad asociada a un evento solo hay que crear una nueva cola y el nuevo consumidor con su funcionalidad.</p>
<p>Aunque los microservicios solucionan algunos problemas de los monolitos traen consigo nuevo problemas como una consistencia eventual en las diferentes bases de datos que posee cada microservicio, también puede haber duplicados y no se garantiza el orden de los mensajes.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/evitando-el-efecto-domino-en-nuestros-micoservicios_huc63a958d862ca8a76560a8af20c81eb1_422138_2560x1440_fit_q90_box.jpg" data-gallery="" title="Evitando el efecto dominó en nuestros (mico)servicios"><img src="https://picodotdev.github.io/blog-bitix/2018/01/conferencia-bilbostack-2018/images/evitando-el-efecto-domino-en-nuestros-micoservicios_huc63a958d862ca8a76560a8af20c81eb1_422138_300x200_fit_q90_box.jpg" width="267" height="200" alt="Evitando el efecto dominó en nuestros (mico)servicios" title="Evitando el efecto dominó en nuestros (mico)servicios"  class="lozad "></a></p>
</figure>
</div>
<p>Cuando en diciembre se pusieron las entradas para reserva a no mucho tardar y con las ganas de ir a la conferencia estaba motivado para ir, en los días anteriores siempre da algo de pereza la asistencia ya que después de una semana de trabajo las ganas no son tantas de pasar la mañana o el día también con el mismo tema sin desconectar ni descansar, pero luego después de haber madrugado y las presentaciones queda una buena sensación y de haber merecido la pena el esfuerzo.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/</id>
        <title>Gestión de peticiones, wiki y pages con GitLab</title>
        <updated>2018-01-20T10:00:00+01:00</updated>
        <published>2018-01-20T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gitlab.svg" width="200" height="184" alt="GitLab" title="GitLab"  class=""></p>
</div>
<p>Una de las cosas que me gustan de <a href="https://about.gitlab.com/">GitLab</a> es que se puede usar en un servidor propio, la otra cosa que me gusta es que incluye varias herramientas casi imprescindibles para cualquier proyecto como gestión de peticiones para recoger las historias, wiki como documentación e información y <em>pages</em> para generar pequeños sitios web además de los repositorios de <a href="https://git-scm.com/">Git</a> o el servidor de integración y entrega continua. Que GitLab incluya por defecto todas estas herramientas hace innecesario recurrir en la mayoría de los casos a varias herramientas especializadas que cubran estas necesidades como <a href="https://www.atlassian.com/software/jira">JIRA</a>, <a href="https://jenkins.io/">Jenkins</a>, <a href="https://www.mediawiki.org/">MediaWiki</a> o un servidor web para los sitios web.</p>
<p>Después de <a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/">instalar GitLab usando Docker</a> o de alguna de sus otras formas, creado un usuario no administrador y un proyecto se puede empezar a usar las herramientas de gestión de incidencias, wiki y <em>pages</em>. Estas son solo tres de sus herramientas incluidas, además incluye <a href="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/">integración y entrega continua</a>.</p>
<h3 id="gestión-de-peticiones">Gestión de peticiones</h3>
<p>La herramienta de gestión de peticiones permite crear historias que recojan las tareas a realizar, las historias pueden ser de diferente tipo como nuevas funcionalidades, mejoras técnicas o errores, es posible asignarlas a diferentes usuarios, relacionar peticiones entre si o incluir documentos adjuntos. Las historias también se pueden mostrar en un panel <a href="https://es.wikipedia.org/wiki/Kanban_%28desarrollo%29">Kanban</a> para visualizar el estado de las peticiones, las que están realizándose, las desplegadas en producción, las siguientes peticiones y donde puede haber cuellos de botella en los procesos. El flujo y el panel Kanban que siguen las peticiones desde que se crean hasta que se dan por terminadas es personalizable.</p>
<p>Para crear una nueva petición hay que acceder en el proyecto a <em>Issues</em> y pulsar el botón <em>New Issue</em>. Rellenados los datos del formulario de creación se puede consultar desde <em>Issues &gt; List</em> para verlas en formato lista o <em>Issues &gt; Board</em> para verlas en formato panel Kanban. El panel Kanban se puede modificar y asignando etiquetas a las peticiones crear columnas adaptado al flujo de trabajo de una organización. Con <a href="https://docs.gitlab.com/ee/user/markdown.html">formato de las descripciones de las peticiones</a> permite hacer referencia a otras o incluir menciones a otros usuarios.</p>
<ul>
<li><a href="https://docs.gitlab.com/ee/user/project/issues/issues_functionalities.html#11-reference">Issues Functionalities</a></li>
<li><a href="https://docs.gitlab.com/ee/user/project/issues/crosslinking_issues.html">Crosslinking Issues</a></li>
<li><a href="https://about.gitlab.com/product/issueboard/">Issue Board</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/new-issue-1_hu39cda9bb77c6776898ba6dc3bdb94e84_286600_2560x1440_fit_box_3.png" data-gallery="" title="Nueva petición A"><img src="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/new-issue-1_hu39cda9bb77c6776898ba6dc3bdb94e84_286600_300x200_fit_box_3.png" width="300" height="163" alt="Nueva petición A" title="Nueva petición A"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/new-issue-2_hu39cda9bb77c6776898ba6dc3bdb94e84_285620_2560x1440_fit_box_3.png" data-gallery="" title="Nueva petición B"><img src="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/new-issue-2_hu39cda9bb77c6776898ba6dc3bdb94e84_285620_300x200_fit_box_3.png" width="300" height="163" alt="Nueva petición B" title="Nueva petición B"  class="lozad "></a></p>
<figcaption>Nueva petición</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/issues_hua9fb50b63579c6550c6f5d00c5abbfce_218131_2560x1440_fit_box_3.png" data-gallery="" title="Lista de peticiones"><img src="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/issues_hua9fb50b63579c6550c6f5d00c5abbfce_218131_300x200_fit_box_3.png" width="300" height="163" alt="Lista de peticiones" title="Lista de peticiones"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/labels_hucf4845fc7964e54d76e32fedbafd0a71_293277_2560x1440_fit_box_3.png" data-gallery="" title="Etiquetas"><img src="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/labels_hucf4845fc7964e54d76e32fedbafd0a71_293277_300x200_fit_box_3.png" width="300" height="163" alt="Etiquetas" title="Etiquetas"  class="lozad "></a></p>
<figcaption>Lista de peticiones y etiquetas</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/board_hubcbec4cba09a225e060715df5c1b7a3b_161725_2560x1440_fit_box_3.png" data-gallery="" title="Panel Kanban"><img src="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/board_hubcbec4cba09a225e060715df5c1b7a3b_161725_300x200_fit_box_3.png" width="300" height="163" alt="Panel Kanban" title="Panel Kanban"  class="lozad "></a></p>
<figcaption>Panel Kanban</figcaption>
</figure>
</div>
<h3 id="wiki">Wiki</h3>
<p>Una wiki ayuda a recoger información útil en el mismo proyecto pero no en el repositorio de código fuente, por ejemplo, cómo iniciar la aplicación de un proyecto a partir del repositorio de código fuente, qué dependencias tiene como el JDK o una base de datos. También puede recoger información general de lógica de negocio que no cambien tan a menudo como el código como pudiera ser un esquema de alto nivel de arquitectura o por que se han tomado algunas decisiones en la arquitectura y los requerimientos.</p>
<p>Cuando se accede por primera vez a la wiki se crea la página de inicio que se puede editar o crear nuevas páginas. Las páginas de la wiki se escriben en formato <a href="https://es.wikipedia.org/wiki/Markdown">Markdown</a> y se guarda un historial de las ediciones que se han realizado a cada página.</p>
<ul>
<li><a href="https://docs.gitlab.com/ce/user/project/wiki/index.html">GitLab Wiki</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/new-page_hucf4845fc7964e54d76e32fedbafd0a71_224040_2560x1440_fit_box_3.png" data-gallery="" title="Nueva página"><img src="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/new-page_hucf4845fc7964e54d76e32fedbafd0a71_224040_300x200_fit_box_3.png" width="300" height="163" alt="Nueva página" title="Nueva página"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/page_hucf4845fc7964e54d76e32fedbafd0a71_160172_2560x1440_fit_box_3.png" data-gallery="" title="Página"><img src="https://picodotdev.github.io/blog-bitix/2018/01/gestion-de-peticiones-wiki-y-pages-con-gitlab/images/page_hucf4845fc7964e54d76e32fedbafd0a71_160172_300x200_fit_box_3.png" width="300" height="163" alt="Página" title="Página"  class="lozad "></a></p>
<figcaption>Nueva página y página</figcaption>
</figure>
</div>
<h3 id="pages">Pages</h3>
<p>La herramienta de <em>pages</em> o páginas permite crear un pequeño sitio web. Se pueden utilizar varias de las herramientas generadoras de sitios web estáticos como <a href="https://jekyllrb.com/">Jekyll</a> o <a href="https://gohugo.io/">Hugo</a>. Para crear un sitio web hay que crear un repositorio de código fuente con un archivo <em>.gitlab-ci.yml</em> y una tarea de nombre <em>pages</em> que contiene los comandos para construir el sitio web.</p>
<p>Es posible asignar a los sitios web de <em>pages</em> un dominio propio y añadirles seguridad con el protocolo HTTPS. En <a href="https://gitlab.com/pages">estos repositorios</a> hay ejemplos de como generar un sitio web del proyecto con varios de los más populares generadores de sitios web estáticos. Dependiendo de si el sitio web es para el proyecto o del usuario o grupo el sitio estará accesible en la dirección u otra.</p>
<ul>
<li><a href="https://docs.gitlab.com/ee/user/project/pages/index.html#gitlab-pages-documentation">GitLab Pages</a></li>
</ul>
<p>En resumen, ya con esta pequeña serie de artículos queda claro que GitLab es una herramienta muy completa y que incluye las funcionalidades de varias que son suficientes para la mayoría de los casos sin tener que recurrir a Jira, Jenkins, MediaWiki o un servidor web. Además, con la muy completa <a href="https://docs.gitlab.com/ce/api/">API de GitLab</a> es posible hacer desarrollos a medida y según las necesidades que se tengan.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GitLab">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>docker-compose -f docker-compose-all.yml up</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/</id>
        <title>Integración y entrega continua con GitLab sobre Docker</title>
        <updated>2018-01-13T10:30:00+01:00</updated>
        <published>2018-01-13T10:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gitlab.svg" width="200" height="184" alt="GitLab" title="GitLab"  class=""></p>
</div>
<p><a href="https://about.gitlab.com/">GitLab</a> es una herramienta muy completa, una de las necesidades de los proyectos es tener teses y que estos se ejecuten con cada <em>commit</em> para asegurar que los cambios no introducen errores en las funcionalidades cubiertas por los teses, esto es la integración continua. La entrega inmediata es una vez que los teses se han ejecutado correctamente hacer el despliegue en los servidores de forma pasa el tiempo mínimo entre que una funcionalidad está desarrollada y esta se puede utilizar.</p>
<p>GitLab proporciona integración continua (<em>Continuos Integration</em>, CI) y entrega continua (<em>Continuos Delivery</em>, CD) sin necesidad de una herramienta externa más especializada como es <a href="https://jenkins.io/">Jenkins</a>. En el siguiente ejemplo muestro como configurar GitLab para crear uno o varios <em>runner</em> que son los que realizan las acciones de integración y entrega continua y el archivo descriptor <em>.gitlab-ci.yml</em> en formato <em>yaml</em> que define las acciones específicas del proyecto que se ejecutarán con cada <em>commit</em> en el repositorio <a href="https://git-scm.com/">Git</a>.</p>
<p>Jenkins es una herramienta más especializada que también sirve para realizar integración y entrega continua. En la página <a href="https://about.gitlab.com/comparison/gitlab-vs-jenkins.html">GitLab vs Jenkins</a> se comparan las características de ambas herramientas, aunque en esa página de comparación GitLab está indicando que tiene algunas características más y aunque no tuviera tantas para la mayoría de los casos de uso es más que suficiente con la ventaja de no necesitar una herramienta más al estar estar ya integrado en GitLab que ofrece además del repositorio de código fuente, una wiki o un páginas para un sitio web.</p>
<p>Para realizar integración y entrega continua hay definir las acciones, tareas y comandos de los que se componen del <em>pipeline</em> específico para el proyecto, la descripción del <em>pipeline</em> se define en un archivo <em>.gitlab-ci.yml</em> que se añade en el directorio raíz del código fuente del proyecto en su repositorio de Git. El <em>pipeline</em> según las necesidades del proyecto consta de varios pasos o <em>steps</em> que se ejecutan de forma secuencial. Si en un mismo paso hay varias acciones estas se ejecutan de forma paralela. En el ejemplo de proyecto <em>test</em> con un programa <em>Hola Mundo</em> con Java y usando la herramienta de construcción <a href="https://gradle.org/">Gradle</a> el <em>pipeline</em> consta de las acciones de compilación y de ejecución de pruebas unitarias y <a href="https://picodotdev.github.io/blog-bitix/2017/09/como-generar-la-documentacion-javadoc-con-gradle/">creación de documentación <em>javadoc</em></a>. La tarea de Gradle <em>build</em> en un proyecto Java realiza la compilación, ejecución de pruebas unitarias y genera el artefacto resultado el el directorio <em>build/distributions</em> y la librería <em>jar</em> con las clases compiladas en <em>build/libs</em>, la tarea <em>javadoc</em> genera la <a href="https://docs.oracle.com/javase/9/docs/api/overview-summary.html">documentación Javadoc</a> de las clases del proyecto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">openjdk:8-jdk-alpine</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">stages</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">build</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">build</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">stage</span><span class="p">:</span><span class="w"> </span><span class="l">build</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">script</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">./gradlew --no-daemon build javadoc</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">artifacts</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">paths</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">build/distributions/gradle.zip</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">build/docs/javadoc/</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gitlab-ci.yml</span>
    </div>
</div>
<p>Añadido el archivo del <em>pipeline</em> al código fuente del proyecto hay que definir un <em>runner</em> que se encargará de ejecutarlo con cada <em>commit</em> que se envíe al repositorio de código fuente. Hay que registrarlo y se necesita un <em>token</em> que se puede obtener desde el área de administración en <em>Overview &gt; Runners</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/images/gitlab-runners_hu4e48bd46d630c15053f13e201276a889_258822_2560x1440_fit_box_3.png" data-gallery="" title="Runners"><img src="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/images/gitlab-runners_hu4e48bd46d630c15053f13e201276a889_258822_300x200_fit_box_3.png" width="300" height="164" alt="Runners" title="Runners"  class="lozad "></a></p>
<figcaption>GitLab Runners</figcaption>
</figure>
</div>
<p>Al registrarlo hay que especificar el tipo de <em>runner</em>, hay varios tipos, en este caso se usa el de <em>docker</em> para ejecutar el <em>pipeline</em> dentro de un contenedor de <a href="https://www.docker.com/">Docker</a>. En en archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> es necesario que el <em>runner</em> pueda comunicarse con el servicio de Docker, para ello como punto de montaje del contenedor de <em>gitlab-runner</em> se especificar el archivo <em>docker.sock</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker <span class="nb">exec</span> -it gitlab-runner gitlab-runner register --url <span class="s2">&#34;https://gitlab&#34;</span> --registration-token <span class="s2">&#34;RhoFva9z8Ri6cuDYbXN1&#34;</span> --tag-list <span class="s2">&#34;gitlab-runner-01&#34;</span> --run-untagged <span class="s2">&#34;true&#34;</span> --locked <span class="s2">&#34;false&#34;</span> --executor <span class="s2">&#34;docker&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>add-gitlab-runner.sh</span>
    </div>
</div>
<p>En este ejemplo y con este <em>pipeline</em> el artefacto distribuible de la aplicación y el Javadoc se almacena en GitLab estando accesible para su descarga desde el panel lateral una vez finalizado el <em>pipeline</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/images/pipelines_hu3f62b1b8d4d7ea188729501f507f909e_98907_2560x1440_fit_box_3.png" data-gallery="" title="Pipelines"><img src="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/images/pipelines_hu3f62b1b8d4d7ea188729501f507f909e_98907_300x200_fit_box_3.png" width="300" height="164" alt="Pipelines" title="Pipelines"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/images/pipeline_huedfef20b9fb22617dbc80afe0102ced6_359504_2560x1440_fit_box_3.png" data-gallery="" title="Pipeline"><img src="https://picodotdev.github.io/blog-bitix/2018/01/integracion-y-entrega-continua-con-gitlab-sobre-docker/images/pipeline_huedfef20b9fb22617dbc80afe0102ced6_359504_300x200_fit_box_3.png" width="281" height="200" alt="Pipeline" title="Pipeline"  class="lozad "></a></p>
<figcaption>Pipeline</figcaption>
</figure>
</div>
<p>El descriptor usando <a href="https://docs.docker.com/compose/">Docker Compose</a> que define el servicio de GitLab y otro para GitLab Runner es el siguiente. El nombre de dominio que he utilizado para el servidor es <em>gitlab</em> y ha de añadirse al archivo <em>/etc/hosts</em> para que sea resuelto localmente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3.4&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;gitlab/gitlab-ce:latest&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">gitlab</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">GITLAB_OMNIBUS_CONFIG</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] = 8022&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;external_url &#39;https://gitlab&#39;&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx[&#39;ssl_certificate&#39;] = &#39;/etc/gitlab/ssl/gitlab.crt&#39;&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx[&#39;ssl_certificate_key&#39;] = &#39;/etc/gitlab/ssl/gitlab.key&#39;&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pages_external_url &#39;https://gitlab&#39;&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pages_nginx[&#39;redirect_http_to_https&#39;] = true&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pages_nginx[&#39;ssl_certificate&#39;] = &#34;/etc/gitlab/ssl/gitlab.crt&#34;&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pages_nginx[&#39;ssl_certificate_key&#39;] = &#34;/etc/gitlab/ssl/gitlab.key&#34;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">networks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">gitlab</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">aliases</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">gitlab</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;8022:22&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;8080:80&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;8443:443&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;gitlab-config-volume:/etc/gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;gitlab-log-volume:/var/log/gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;gitlab-data-volume:/var/opt/gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;./docker-volumes/gitlab/ssl:/etc/gitlab/ssl&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab-runner</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;gitlab/gitlab-runner:latest&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">gitlab-runner</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;DOCKER_NETWORK_MODE=gitlab_gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">links</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">gitlab</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">networks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">gitlab</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;gitlab-runner-config-volume:/etc/gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;./docker-volumes/gitlab/ssl/gitlab.crt:/etc/gitlab-runner/certs/ca.crt&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;/var/run/docker.sock:/var/run/docker.sock&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab-config-volume</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab-log-volume</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab-data-volume</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab-runner-config-volume</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">networks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">driver</span><span class="p">:</span><span class="w"> </span><span class="l">bridge</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-all.yml</span>
    </div>
</div>
<p>En la sección de referencia hay unos buenos enlaces de documentación de GitLab sobre la integración continua, despliegue continuo y entrega continua.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GitLab">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>docker-compose -f docker-compose-all.yml up</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.gitlab.com/ce/ci/">GitLab Continuous Integration (GitLab CI/CD)</a></li>
<li><a href="https://docs.gitlab.com/ce/ci/quick_start/README.html">Getting started with GitLab CI/CD</a></li>
<li><a href="https://docs.gitlab.com/ce/ci/yaml/README.html">Configuration of your jobs with .gitlab-ci.yml</a></li>
<li><a href="https://gist.github.com/daicham/5ac8461b8b49385244aa0977638c3420">A sample of .gitlab-ci.yml for a gradle project</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/</id>
        <title>Explicación del fallo de seguridad Meltdown y Spectre en los microprocesadores Intel</title>
        <updated>2018-01-07T01:30:00+01:00</updated>
        <published>2018-01-06T10:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los procesadores Intel se han visto afectados por un grave error de seguridad debido a que fueron diseñados con ejecución especulativa sin tener algunas consideraciones de seguridad, técnica empleada para aumentar el rendimiento pero que tiene efectos colaterales en la cache que pueden se aprovechados para realizar ataques <em>side-channel</em> con los que leer el contenido de la memoria del <em>kernel</em>, independientemente del sistema operativo utilizado.</strong></p>]]>
        <![CDATA[<p>El año 2018 ha empezando haciéndose público uno de los peores <em>bugs</em> de seguridad que afecta a absolutamente todos los procesadores <a href="https://www.intel.es">Intel</a> que esta compañía ha fabricado en la última década, denominado <a href="https://meltdownattack.com/"><em>Meltdown</em> y su variante <em>Spectre</em></a>, el error tiene su propio nombre, logotipo y página web. Un error de diseño en los procesadores que solo se puede corregir reemplazando el microprocesador o modificando los sistemas operativos aunque se especula con una pérdida de rendimiento en ciertas cargas de trabajo, entre un 5% y un 30%. El error es tan grave que permite leer a un programa la memoria del núcleo del sistema operativo que debería estar protegida. En la memoria del <em>kernel</em> residen las claves de acceso a sistemas o datos sensibles que obtenidos y utilizados pueden ocasionar graves problemas de seguridad con consecuencias económicas o de acceso no autorizado a información. Este error es tan grave que deja al viejo conocido <a href="https://en.wikipedia.org/wiki/Pentium_FDIV_bug">fallo de la división de los Pentium</a> a la altura de chiste. Hace unos meses por si fuera poco se conocía otro error de seguridad en el <a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">Management Engine (ME)</a> de Intel.</p>
<ul>
<li><a href="https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00088&amp;languageid=en-fr">Listado de procesadores Intel afectados por Meltdown y Spectre</a></li>
</ul>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/meltdown.svg" width="200" height="200" alt="Meltdown" title="Meltdown"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spectre.svg" width="200" height="200" alt="Spectre" title="Spectre"  class="lozad "></p>
<figcaption>Logotipos de Meltdown y Spectre</figcaption>
</figure>
</div>
<p>Reemplazar todos los microprocesadores es tremendamente caro además de que primero hay que diseñar y fabricar unos que estén exentos del <em>bug</em> que lleva tiempo, meses o años hasta que estén preparados, por lo que la solución hasta el momento pasa por hacer modificaciones en el software y en los sistemas operativos, compiladores y programas para resolver o mitigar el problema. En el sistema operativo la solución consiste en separar el espacio de direcciones del <em>kernel</em> de la de los programas, sin embargo, cada vez que el microprocesador cambia entre un espacio de direcciones a otro hay una penalización en tiempo por lo que en ciertas cargas de trabajo muy intensivas en las que se cambia frecuentemente de contextos como operaciones de red, de almacenamiento rápido o E/S el rendimiento se ve afectado. Para un usuario doméstico, ofimático o juegos la perdida de rendimiento será insignificante y no será apreciable ya que en estos casos el microprocesador no trabaja a la máxima carga o no está cambiando frecuentemente del espacio de direcciones del <em>kernel</em> al de usuario. En grandes centros de datos como la computación en la nube de <a href="https://aws.amazon.com/es/">Amazon Web Services</a>, <a href="https://cloud.google.com/">Google Cloud Platform</a> o <a href="https://azure.microsoft.com/es-es/">Microsoft Azure</a> el rendimiento será más apreciable.</p>
<p>Como usuarios domésticos para estar protegidos conviene descargar únicamente software de fuentes confiables pero para los usuarios empresariales con sus servicios en la nube en donde los sistemas están aislados pero usando infraestructura compartida y con el descubrimiento de este <em>bug</em> es más grave si no se parchea, los proveedores de infraestructura en la nube ya han planificando tareas de mantenimiento y reinicios obligatorios.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/intel.svg" width="200" height="200" alt="Intel" title="Intel"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/amd.svg" width="200" height="200" alt="AMD" title="AMD"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/arm.svg" width="200" height="200" alt="ARM" title="ARM"  class="lozad "></p>
</figure>
</div>
<h3 id="técnicas-para-aumentar-el-rendimiento">Técnicas para aumentar el rendimiento</h3>
<p>Los microprocesadores modernos implementan varias técnicas para aumentar el rendimiento. Una de las mas simples es aumentar la frecuencia de trabajo del microprocesador, uno de los primeros Pentium trabajaba únicamente a 100 Mhz y los actuales llegan hasta los 3 Ghz, casi 30 veces más. Pero aumentar la frecuencia solo es posible hasta cierto límite a partir del cual el microprocesador se calienta mucho y consume mucha energía. Por lo que hay que emplear otras técnicas al mismo tiempo.</p>
<p>Otra de las mas simples es reducir el tamaño de los transistores, unos transistores más pequeños hace que sea posible incluir más transistores en el mismo espacio físico para incluir caches de mayor tamaño o nuevas funcionalidades, con más velocidad y con menor consumo de energía. El tamaño de los transistores de los Pentium originales era de 800 nanómetros e incluía 3.1 millones, los Intel Core de octava generación se fabrican a 14 nanómetros incluyendo unos 5000 millones, unas 60 veces más pequeños. Aún así cada vez es más difícil cumplir con la <a href="https://es.wikipedia.org/wiki/Ley_de_Moore">ley de Moore</a> ya que se está llegando a límite físico de los átomos de los materiales, consistía en que cada dos años se duplica el número de transistores de un microprocesador.</p>
<p>Con la ayuda de unos transistores más pequeños y más espacio se aprovecha para aumentar el rendimiento incluyendo más núcleos de cómputo. Pero para aumentar el rendimiento de un núcleo de cómputo individual o el <abbr title="Instructions Per Cicle">IPC</abbr> se emplean otras técnicas como utilizar múltiples <em>pipelines</em> para ejecutar varias instrucciones simultáneamente, ejecución fuera de orden para reorganizar las instrucciones y la ejecución especulativa para mantener llenos esos <em>pipelines</em>.</p>
<h3 id="escalar">Escalar</h3>
<p>En un microprocesador escalar se ejecuta una instrucción por ciclo, por ejemplo, en esta secuencia de instrucciones que realizan unas sumas se tardarían 6 ciclos de reloj. A estos microprocesadores que ejecutan una instrucción por ciclo de reloj se les denomina escalares, siendo ejemplos el Intel 486 y el ARM1176 usado en la Raspberry Pi 1.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">m</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">n</span> <span class="o">=</span> <span class="n">c</span><span class="o">+</span><span class="n">d</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">o</span> <span class="o">=</span> <span class="n">d</span><span class="o">+</span><span class="n">e</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">x</span> <span class="o">=</span> <span class="n">f</span><span class="o">+</span><span class="n">o</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">y</span> <span class="o">=</span> <span class="n">h</span><span class="o">+</span><span class="n">i</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">z</span> <span class="o">=</span> <span class="n">j</span><span class="o">+</span><span class="n">k</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>escalar.py</span>
    </div>
</div>
<h3 id="superescalar">Superescalar</h3>
<p>En un microprocesador con dos <em>pipelines</em> o <a href="https://en.wikipedia.org/wiki/Superscalar_processor">superescalar</a> se pueden realizar varias operaciones simultáneamente, es decir, mientras se realiza la primera operación en la variable <em>m</em> se realiza al mismo tiempo la segunda operación de <em>n</em>, con lo que estas operaciones podrían completarse en únicamente tres ciclos de reloj con la siguiente equivalencia de programa. Ejemplos de microprocesadores superescalares son el Intel Pentium y los <a href="https://www.arm.com/">ARM</a> Cortex-A7 y Cortex-A53 estos últimos usados en la Raspberry Pi 2 y 3 respectivamente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">+</span><span class="n">d</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">o</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">,</span> <span class="n">f</span><span class="o">+</span><span class="n">o</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="n">h</span><span class="o">+</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="n">k</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>superescalar-1.py</span>
    </div>
</div>
<p>Sin embargo, hacer la suma de <em>o</em> y <em>x</em> al mismo tiempo no es posible ya que antes de calcular <em>x</em> hay que calcular <em>o</em> debido a que uno de los operandos en la suma de <em>x</em> es <em>o</em>, es decir, hay una dependencia en estas instrucciones y se han de ejecutar una después de otra. Con lo que en vez de tres ciclos habría que conformase en ejecutar estas instrucciones en cuatro ciclos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">+</span><span class="n">d</span> &#10;</span></span><span class="line"><span class="cl"><span class="n">o</span> <span class="o">=</span> <span class="n">d</span><span class="o">+</span><span class="n">e</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="c1"># el segundo pipeline está ocioso</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">f</span><span class="o">+</span><span class="n">o</span><span class="p">,</span> <span class="n">h</span><span class="o">+</span><span class="n">i</span> &#10;</span></span><span class="line"><span class="cl"><span class="n">z</span> <span class="o">=</span> <span class="n">j</span><span class="o">+</span><span class="n">k</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="c1"># el segundo pipeline está ocioso</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>suprescalar-2.py</span>
    </div>
</div>
<h3 id="fuera-de-orden">Fuera de orden</h3>
<p>Los microprocesadores <a href="https://en.wikipedia.org/wiki/Out-of-order_execution">fuera de orden</a> reordenan las instrucciones de la forma adecuada para que el programa sea equivalente pero manteniendo los <em>pipelines</em> llenos. Cambiando el orden entre las instrucciones <em>x</em> e <em>y</em> se consigue ejecutar las instrucciones en tres ciclos de reloj. Ejemplos de microprocesadores fuera de orden son el Pentium 2 y siguientes microprocesadores Intel y <a href="https://www.amd.com/es">AMD</a> incluyendo varios ARM Cortex-A9, A15, A17 y A57.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">+</span><span class="n">d</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">o</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">,</span> <span class="n">h</span><span class="o">+</span><span class="n">i</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">x</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="n">f</span><span class="o">+</span><span class="n">o</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="n">k</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>fuera-de-orden.py</span>
    </div>
</div>
<h3 id="predicción-de-salto-y-ejecución-especulativa">Predicción de salto y ejecución especulativa</h3>
<p>Los programas incluyen saltos con sentencias condicionales <em>if</em> o de bucle. Los microprocesadores tratan de adivinar si una sentencia de salto se producirá o no (con heurísticas y son bastante buenos acertando) para recuperar y tener preparadas las siguientes instrucciones. Mantener los <em>pipelines</em> llenos es difícil al aumentar su número a tres o cuatro. Para tratar de mantenerlos llenos los microprocesadores usan la predicción de salto y van ejecutando las instrucciones desechando las operaciones si finalmente no se acierta en el salto pero habiendo aumentado el rendimiento si se ha acertado, realizan <a href="https://en.wikipedia.org/wiki/Speculative_execution">ejecución especulativa</a> de las instrucciones.</p>
<p>En este otro caso, <em>v</em> depende de <em>u</em> y <em>u</em> depende de <em>t</em> de modo que un microprocesador superescalar sin ejecución especulativa tardará tres ciclos computando <em>t</em>, <em>u</em> y <em>v</em> para determinar el valor de <em>v</em> en la sentencia condicional <em>if</em> (en otro ciclo) momento en que pasa otros tres ciclos calculando <em>w</em>, <em>x</em> e <em>y</em>, en total 4 o 7 ciclos dependiendo de si hay salto en la sentencia condicional.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">t</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">u</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">v</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">w</span> <span class="o">=</span> <span class="n">e</span><span class="o">+</span><span class="n">f</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">x</span> <span class="o">=</span> <span class="n">w</span><span class="o">+</span><span class="n">g</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="o">+</span><span class="n">h</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ejecucion-especulativa-1.py</span>
    </div>
</div>
<p>Si el predictor de salto determina que es probable que la condición sea cierta la ejecución especulativa reordena el programa de la siguiente manera:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">t</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">u</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">v</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">w_</span> <span class="o">=</span> <span class="n">e</span><span class="o">+</span><span class="n">f</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">x_</span> <span class="o">=</span> <span class="n">w_</span><span class="o">+</span><span class="n">g</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">y_</span> <span class="o">=</span> <span class="n">x_</span><span class="o">+</span><span class="n">h</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">w_</span><span class="p">,</span> <span class="n">x_</span><span class="p">,</span> <span class="n">y_</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ejecucion-especulativa-2.py</span>
    </div>
</div>
<p>Y con la ejecución superescalar se mantiene los <em>pipelines</em> ocupados de modo que el ejemplo tiene la siguiente equivalencia y tardando aproximadamente 3 ciclos cuando antes se necesitaban 7.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">t</span><span class="p">,</span> <span class="n">w_</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">e</span><span class="o">+</span><span class="n">f</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">u</span><span class="p">,</span> <span class="n">x_</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span><span class="p">,</span> <span class="n">w_</span><span class="o">+</span><span class="n">g</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">v</span><span class="p">,</span> <span class="n">y_</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span><span class="p">,</span> <span class="n">x_</span><span class="o">+</span><span class="n">h</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">w_</span><span class="p">,</span> <span class="n">x_</span><span class="p">,</span> <span class="n">y_</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ejecucion-especulativa-3.py</span>
    </div>
</div>
<h3 id="cache">Cache</h3>
<p>Los microprocesadores son muy rápidos comparados con la memoria o el acceso al almacenamiento secundario. Un Cortex-A53 de una Raspberry Pi puede ejecutar una instrucción en 0.5 nanosegundos pero el acceso a memoria costar 100 nanosegundos. Esto no es bueno pero por fortuna los accesos a memoria siguen patrones, accediendo repetidamente a variables recientemente accedidas y accediendo a variables en posiciones cercanas, de forma que colocando estas variables en una cache más rápida y cercana al procesador que la memoria principal se mitiga en gran medida el problema.</p>
<h3 id="relación-entre-ejecución-especulativa-cache-y-_meltdown_-y-_spectre_">Relación entre ejecución especulativa, cache y <em>Meltdown</em> y <em>Spectre</em></h3>
<p>La ejecución especulativa tiene el efecto colateral de colocar datos en la memoria cache del microprocesador y esto es utilizado para realizar una forma de <a href="https://en.wikipedia.org/wiki/Side-channel_attack">ataque side-channel</a>. Desde el punto de vista de <em>Meltdown</em> y <em>Spectre</em> y la ejecución especulativa lo importante es que midiendo el tiempo que tarda el acceso a memoria se puede conocer si el dato está en la cache (tarda poco) o no (tarda mucho).</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">t</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">u</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">v</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">w</span> <span class="o">=</span> <span class="n">kern_mem</span><span class="p">[</span><span class="n">address</span><span class="p">]</span>   <span class="c1"># si se llega aquí se produce un fallo</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">x</span> <span class="o">=</span> <span class="n">w</span> <span class="o">&amp;</span> <span class="mh">0x100</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="c1"># operación de bit and</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">y</span> <span class="o">=</span> <span class="n">user_mem</span><span class="p">[</span><span class="n">x</span><span class="p">]</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>meltdown-1.py</span>
    </div>
</div>
<p><em>u</em> tiene una dependencia sobre <em>t</em> y <em>v</em> sobre <em>u</em> con lo que el microprocesador usando la superescalabilidad, la ejecución fuera de orden y ejecución especulativa acabaría transformando el programa en la siguiente secuencia de operaciones:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="line"><span class="cl"><span class="n">t</span><span class="p">,</span> <span class="n">w_</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">kern_mem</span><span class="p">[</span><span class="n">address</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">u</span><span class="p">,</span> <span class="n">x_</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span><span class="p">,</span> <span class="n">w_</span> <span class="o">&amp;</span> <span class="mh">0x100</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">v</span><span class="p">,</span> <span class="n">y_</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span><span class="p">,</span> <span class="n">user_mem</span><span class="p">[</span><span class="n">x_</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;</span></span><span class="line"><span class="cl">   <span class="n">w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">w_</span><span class="p">,</span> <span class="n">x_</span><span class="p">,</span> <span class="n">y_</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="c1"># nunca se llega aquí, si no fallo</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>meltdown-2.py</span>
    </div>
</div>
<p>El microprocesador lee de el valor de una dirección del <em>kernel</em> de forma especulativa pero el fallo en la operación de acceso no se produce hasta se conoce el valor de <em>v</em> utilizando en la sentencia condicional no es cero. Limpiando la cache previamente y haciendo que <em>v</em> de cero para que no se produzca la excepción con los valores adecuados de las variables (<em>a</em>, <em>b</em>, <em>c</em>, <em>d</em>) la ejecución especulativa de <code>v, y_ = u+d, user_mem[x_]</code> producirá un acceso a la dirección de memoria <em>0x000</em> o <em>0x100</em> dependiendo del valor del octavo bit recuperado en el acceso ilegal a la dirección de memoria <code>kern_mem[address]</code>. El ataque <em>side-channel</em> se produce midiendo el tiempo que tarda una instrucción posterior que utilice estas direcciones, si está o no está en la cache (por el tiempo que tarda) determina a que dirección de memoria se ha accedido y cual es el valor del octavo bit de una dirección del <em>kernel</em>. ¡Felicidades has leído un bit de la memoria del kernel!. Bit a bit y con tiempo se puede leer todo el contenido de la memoria del <em>kernel</em> aplicando esta operación millones de veces.</p>
<h3 id="notas-finales">Notas finales</h3>
<p>Los microprocesadores ARM1176, Cortex-A7, and Cortex-A53 usados en la Raspberry Pi no se ven afectados por el <em>Meltdown</em> ya que no poseen ejecución especulativa, los AMD Ryzen tampoco se ven afectados por el <em>Meltdown</em> ya que aunque si soportan ejecución especulativa al contrario de Intel la ejecución especulativa no se permite entre diferentes anillos de seguridad, el <em>kernel</em> se ejecuta en el anillo 0 y las aplicaciones en el anillo 3. Sin embargo, una variante de <em>Meltdown</em> es <em>Spectre</em> que es el mismo caso pero en vez de con la memoria del <em>kernel</em> con la memoria de otra aplicación. Como las aplicaciones se ejecutan en el mismo anillo en este caso los AMD Ryzen y algunos modelos de ARM si se ven afectados por <em>Spectre</em> al igual que también los Intel.</p>
<p>La ejecución especulativa hace más rápidos los microprocesadores pero habiéndose descubierto este fallo muy inseguros en el caso de los Intel ya que se ve afectados por <em>Meltdown</em> y <em>Spectre</em> a menos que se implementen parches por software ya que por microcódigo no es posible darle solución. <em>Meltdown</em> es más grave pero se puede corregir modificando el <em>kernel</em> aún con una pérdida de rendimiento, <em>Spectre</em> es más difícil de explotar pero más difícil de corregir y lo que se hará en este último caso es mitigar el problema modificando el sistema operativo, compilador y aplicaciones.</p>
<p>Intel tiene un problema importante, con AMD y sus Ryzen a buen precio, con buen rendimiento y&hellip; sin el problema del <em>Meltdown</em>. Para corregir el fallo en el diseño de la arquitectura del hardware Intel va a tener que rediseñar en parte su arquitectura y esto le va a llevar meses hasta tener preparados nuevos modelos de microprocesadores sin el error.</p>
<p>En el <em>kernel</em> de Linux 4.14.11 ya se han aplicado varios parches al igual que posteriormente se implementarán en Windows y macOS. Yo como usuario de Linux con un Intel Core i5-3210M que posee la característica <em>pcid</em> y esa versión del <em>kernel</em> no he notado ninguna perdida de rendimiento apreciable.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.raspberrypi.org/blog/why-raspberry-pi-isnt-vulnerable-to-spectre-or-meltdown/">Why Raspberry Pi isn’t vulnerable to Spectre or Meltdown</a></li>
<li><a href="https://pdfs.semanticscholar.org/2209/42809262c17b6631c0f6536c91aaf7756857.pdf">The Intel 80x86 Processor Architecture: Pitfalls for Secure Systems</a></li>
<li><a href="https://www.amd.com/en/corporate/speculative-execution">An Update on AMD Processor Security</a></li>
<li><a href="https://lkml.org/lkml/2017/12/27/2">x86/cpu, x86/pti: Do not enable PTI on AMD processors</a></li>
<li><a href="https://en.wikipedia.org/wiki/List_of_ARM_microarchitectures">List of ARM microarchitectures</a></li>
<li><a href="https://geeks.ms/etomas/2018/01/05/meltdown-y-spectre-algunos-comentarios/">Meltdown y Spectre algunos comentarios</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/</id>
        <title>Artículo #5 de Yo apoyo al software libre</title>
        <updated>2018-01-03T13:00:00+01:00</updated>
        <published>2018-01-03T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>La última donación que hice a algún proyecto de software libre fue en mayo del 2017, desde entonces he recibido algunos ingresos por la publicidad AdSense que incluyó en el blog. Los ingresos por AdSense están empezando a ser bastantes constantes de al menos 1 € al día con lo que al mes se convierten en 30 €, un més bueno en 50 €, con lo que cada dos o tres meses recibo un ingreso.</p>
<p>También hace unos meses escribí un artículo patrocinado con enlaces de afiliación sobre varios <a href="https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/">cursos de formación de KeepCoding</a>, la mayoría de usuarios se registran en los cursos gratuitos y ya cuando había perdido las esperanzas de que alguien comprase algún curso pagando un par de usuarios se registraron usando mis códigos de afiliado.</p>
<p>En esta ocasión los proyectos a los que he hecho una donación han sido <a href="https://lineageos.org/">LineageOS</a> y <a href="https://www.replicant.us/">Replicant</a>, dos distribuciones de <a href="https://www.android.com/">Android</a> que permiten dar una segunda o tercera vida a móviles que desde hace tiempo se han quedado sin soporte oficial del fabricante ni de Google ni parches de seguridad con lo que ello supone en estos dispositivos que se están convirtiendo en cada vez más imprescindibles. Esto genera dispositivos no actualizados, tarde o temprano potencialmente inseguros y la conocida fragmentación en la plataforma Android.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/lineageos.svg" width="200" height="200" alt="Replicant" title="Replicant"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/replicant.svg" width="200" height="200"  class="lozad "></p>
</figure>
</div>
<p>Muchos móviles siguen siendo perfectamente útiles aún pasados más de dos años. En mi móvil, un Samsung Galaxy S3 (i9300) del año 2012 con 4 núcleos y un solo <em>giga</em> de memoria RAM con no tantos años de vida pero que ya podría considerarse obsoleto debido al gran avance en capacidades que experimentado los <em>smartphones</em> usaba la extinta CyanogenMod en su versión 10.2 que incorporaba Android 4.4 (KitKat) cuando de fábrica tenía 4.1 o 4.2 (Jelly Bean). En alguna ocasión he pensado en actualizarlo a alguna versión más reciente de Android aunque por el poco uso que hago del móvil ya me era suficiente con la versión 4.4 de Android, también porque me daba un poco de pereza hacer la actualización aún no siendo demasiado complicado y no tardando mucho sabiendo lo que hay que hacer. En estas dos distribuciones de Android el Samsung Galaxy S3 está soportado.</p>
<h3 id="lineageos">LineageOS</h3>
<p>Se trata de la versión heredera de CyanogenMod, soporta una gran cantidad de terminales que con el paso del tiempo va aumentando aunque hasta el momento no he visto que se haya lanzado una versión estable de alguno de ellos, en cualquier caso en el estado actual funcionará bastante bien en cualquiera de los terminales.</p>
<p>Finalmente, ayer precisamente me decidí a instalar LineageOS 14.1 que incorpora una de las últimas versiones de Android, 7.1, y mucho más reciente que la que tenía, no lo había hecho hasta el momento por eso de no tener una versión estable y no estaba seguro de que tal funcionaría en un móvil tan «antiguo». Después de haberlo hecho he comprobado que funciona de forma perfectamente fluida aún con la poca cantidad de RAM que tiene para los tiempos actuales en los que los móviles ya incorporan entre 2 y 4 GiB, incluso mejor ya que funciona la cámara frontal que antes con CyanogenMod no.</p>
<ul>
<li><a href="https://wiki.lineageos.org/devices/i9300/install">Guía de instalación LineageOS para Samsung Galaxy S3</a></li>
<li><a href="https://www.youtube.com/watch?v=icVFJdBL60w">Vídeo de instalación LineageOS</a></li>
<li><a href="https://download.lineageos.org/">Dispositivos soportados</a></li>
</ul>
<p>Se ofrece de forma gratuita pero los servidores que son necesarios para el desarrollo y el mantenimiento de los sitios web tienen unos costes, este es el detalle de los <a href="https://wiki.lineageos.org/costs/">costes de LineageOS</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/cyanogenmod-10.2_huf3a84ec940d0e4a07e9ca5cf0a2732a5_86598_2560x1440_fit_q90_box.jpg" data-gallery="" title="CynogenMod 10.2"><img src="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/cyanogenmod-10.2_huf3a84ec940d0e4a07e9ca5cf0a2732a5_86598_300x200_fit_q90_box.jpg" width="113" height="200" alt="CynogenMod 10.2" title="CynogenMod 10.2"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/lineageos-14.1_hu5d1bf970dbec1af605def033c54a0ed9_87661_2560x1440_fit_q90_box.jpg" data-gallery="" title="LineageOS 14.1"><img src="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/lineageos-14.1_hu5d1bf970dbec1af605def033c54a0ed9_87661_300x200_fit_q90_box.jpg" width="113" height="200" alt="LineageOS 14.1" title="LineageOS 14.1"  class="lozad "></a></p>
<figcaption>CynogenMod 10.2 y LineageOS 14.1</figcaption>
</figure>
</div>
<h3 id="replicant">Replicant</h3>
<p>Es la distribución de Android recomendada por la <a href="https://www.fsf.org/">FSF</a>. Uno de sus objetivos es los teléfonos móviles respeten la privacidad de los usuarios no realizando seguimiento, posicionamiento y no compartiendo datos e incluyendo en el sistema operativo solo elementos libres. Y es que prácticamente todas las aplicaciones quieren acceder a los contactos, fotos, mensajes SMS, llamadas y otros varios permisos que las aplicaciones solicitan y hay que conceder. Esta distribución de Android es para aquellos le dan gran importancia a la seguridad, privacidad y libertad en estos dispositivos que podrían calificarse de seguimiento y vigilancia. Y por ello esta distribución es importante.</p>
<p>Está basado en LineageOS 13 y Android 6 quitándole los componentes que no mantienen la privacidad y proporcionándole sustitutos. No soporta tantos dispositivos como LineageOS aunque están varios que fueron y son muy populares.</p>
<ul>
<li><a href="https://www.replicant.us/supported-devices.php">Dispositivos soportados</a></li>
<li><a href="https://redmine.replicant.us/projects/replicant/wiki/ReplicantStatus">Estado de soporte en los dispositivos</a></li>
<li><a href="https://www.replicant.us/freedom-privacy-security-issues.php">Motivaciones del uso de Replicant, Freedom and privacy/security issues</a></li>
<li><a href="https://redmine.replicant.us/projects/replicant/wiki#Replicant-installation">Guías de instalación</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/replicant-6_huf9e3f77883367cad80fcc02422b90b7a_435737_2560x1440_fit_box_3.png" data-gallery="" title="Replicant 6"><img src="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/replicant-6_huf9e3f77883367cad80fcc02422b90b7a_435737_300x200_fit_box_3.png" width="120" height="200" alt="Replicant 6" title="Replicant 6"  class="lozad "></a></p>
<figcaption>Replicant 6</figcaption>
</figure>
</div>
<h3 id="comprobantes-de-las-donaciones">Comprobantes de las donaciones</h3>
<p>En ambos casos las donaciones que he hecho han sido de 15 €.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/donacion-lineageos_hu363323e9a26d548b6782c5dc77f42687_59453_2560x1440_fit_box_3.png" data-gallery="" title="Donación LineageOS"><img src="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/donacion-lineageos_hu363323e9a26d548b6782c5dc77f42687_59453_650x450_fit_box_3.png" width="318" height="450" alt="Donación LineageOS" title="Donación LineageOS"  class="lozad "></a></p>
<figcaption>Donación LineageOS</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/donacion-replicant_hua90b6e38f84426edcfd021dbfc02199c_107406_2560x1440_fit_box_3.png" data-gallery="" title="Donación Replicant"><img src="https://picodotdev.github.io/blog-bitix/2018/01/articulo-5-de-yo-apoyo-al-software-libre/images/donacion-replicant_hua90b6e38f84426edcfd021dbfc02199c_107406_650x450_fit_box_3.png" width="291" height="450" alt="Donación Replicant" title="Donación Replicant"  class="lozad "></a></p>
<figcaption>Donación Replicant</figcaption>
</figure>
</div>
<table class="table">
    <thead>
        <tr class="thead-dark">
            <th colspan="4">Donaciones que he realizado hasta la última fecha</th>
        </tr>
        <tr class="thead-light">
            <th>#</th>
            <th>Fecha</th>
            <th>Proyecto</th>
            <th>Donación</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>2015/12</td>
            <td>Free Software Foundation Europe (FSFE)</td>
            <td>40 €</td>
        </tr>
        <tr>
            <td>2</td>
            <td>2016/09</td>
            <td>Wikipedia, Mozilla/Firefox</td>
            <td>10 €, 10 €</td>
        </tr>
        <tr>
            <td>3</td>
            <td>2017/01</td>
            <td>elementaryOS, Libre Office, Arch Linux ARM</td>
            <td>10 €, 10 €, 10 €</td>
        </tr>
        <tr>
            <td>4</td>
            <td>2017/05</td>
            <td>GNOME, VideoLAN (VLC), Arch Linux</td>
            <td>15,31 €, 10 €, 0,31 €</td>
        </tr>
        <tr>
            <td>5</td>
            <td>2018/01</td>
            <td>LineageOS, Replicant</td>
            <td>15 €, 15 €</td>
        </tr>
        <tr>
            <td>6</td>
            <td>2018/12</td>
            <td>Wine</td>
            <td>$20</td>
        </tr>
        <tr>
            <td>7</td>
            <td>2019/12</td>
            <td>Calibre</td>
            <td>$10</td>
        </tr>
        <tr>
            <td>8</td>
            <td>2020/12</td>
            <td>Phoronix, Mozilla/Firefox, GnuPG</td>
            <td>$12, 10 €, 10 €</td>
        </tr>
        <tr>
            <td>9</td>
            <td>2022/01</td>
            <td>KeePassXC</td>
            <td>15 €</td>
        </tr>
        <tr>
            <td colspan="3">Total</td>
            <td>180 €, $42</td>
        </tr>
    </tbody>
</table>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/</id>
        <title>Hemeroteca #12</title>
        <updated>2018-01-13T11:35:00+01:00</updated>
        <published>2017-12-30T09:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Cuarto año de Blog Bitix y en febrero serán ocho desde que empecé con <a href="https://elblogdepicodev.blogspot.com.es">El blog del pico.dev</a>. En los últimos seis meses he seguido publicando casi a dos artículos por semana y durante el 2017 ha sido casi siempre así, en este semestre han sido 48 artículos, que juntos con los 39 del primero son 87 durante el año 2017, mi mayor tasa de publicación en un año.</p>
<p>En estas hemerotecas siempre repaso cual es la evolución de visitas e ingresos de AdSense que quizá a alguien más le resulte de interés. En Junio y Julio alcance unas 50K páginas vistas el mayor pico de visitas, aunque en meses posteriores han descendido, al principio lo achacaba a los meses vacacionales de verano pero luego se han mantenido no se si por alguna penalización de Google o algún artículo que recibía muchas visitas y haya descendido en su posicionamiento. En cualquier caso en los últimos meses del año las visitas han tenido una tendencia ascendente, de unas 40K páginas vistas y superior respecto a las de hace una año que comparándolas han sido de 25K en 2016 y de 38K en 2017 un crecimiento de un 85%. No está mal, si el año siguiente fuese igual me daría por muy satisfecho.</p>
<p>En el apartado de ingresos por la publicidad AdSense, algunos artículos patrocinados y enlaces de afiliación también ha estado bien. En estos momentos por AdSense es raro el día que no recibo al menos un euro y algún día excepcional he recibido 8, otros algo menos de 2 y 3, mensualmente ya es habitual que esté en un rango de 30 y 45 €, los ingresos de AdSense se relacionan en gran medida con el número de visitas. Al final el artículo que publiqué sobre los <a href="https://picodotdev.github.io/blog-bitix/2017/02/cursos-de-formacion-de-keepcoding/">cursos de formación de KeepCoding</a> han merecido la pena como artículo patrocinado con la compra de dos usuario de tres cursos (aunque la mayoría de gente se registran a los cursos gratuitos), pero esto junto con los artículos patrocinados es más esporádico y por el momento poco habitual para mi.</p>
<p>En alguna ocasión me han comentado que me donarían algo por los artículos que escribo, una posibilidad sería usar <a href="https://www.patreon.com/">Patreon</a> o <a href="https://www.paypal.com/">PayPal</a>, sin embargo, no me convence mucho la donación directa por ser demasiado generosa y he preferido añadir una <a href="https://picodotdev.github.io/blog-bitix/series/donacion/">página con ciertos productos tecnológicos y <em>gamers</em> seleccionados</a> para que si alguien le gusta mis artículos, se acuerda y quiere donarme algo lo haga a través de estos enlaces de afiliación. Al que compra le cuesta lo mismo pero yo recibo una comisión. Esto me recuerda que debería hacer alguna nueva donación a proyectos de software libre y estoy pensando en <a href="https://lineageos.org/">Lineage OS</a> y <a href="https://www.replicant.us/">Replicant</a>.</p>
<p>Quien crea que es mucho que pruebe a crearse una bitácora, un canal en <a href="https://www.youtube.com/">YouTube</a> o un <em>podcast</em> y verá rápidamente que o se acierta en la temática y se es muy bueno creando contenido que genera interés o primero verá que han de pasar dos años y dedicar una ingente cantidad de horas a crear ese contenido para llegar a estas cifras que tampoco son altas, no en vano muchos de estos proyectos son abandonados al cabo de unos meses, por algo será.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/images/analytics-2017_hu9673f1dbb4b3f428b854147e70d639bf_62017_2560x1440_fit_box_3.png" data-gallery="" title="Analytics 2017 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/images/analytics-2017_hu9673f1dbb4b3f428b854147e70d639bf_62017_300x200_fit_box_3.png" width="300" height="117" alt="Analytics 2017 de Blog Bitix" title="Analytics 2017 de Blog Bitix"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/images/gadsense-2017_hu3955e30c6b90da6e9f89725e82304470_34878_2560x1440_fit_box_3.png" data-gallery="" title="AdSense 2017 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/images/gadsense-2017_hu3955e30c6b90da6e9f89725e82304470_34878_300x200_fit_box_3.png" width="300" height="91" alt="AdSense 2017 de Blog Bitix" title="AdSense 2017 de Blog Bitix"  class="lozad "></a></p>
<figcaption>Evolución visitas e ingresos en 2017</figcaption>
</figure>
</div>
<p>Pero por otra parte he recibido buenos comentarios sobre lo que escribo en Blog Bitix, por algunas personas vía <a href="https://twitter.com/">Twitter</a> y otras en algún comentario que me anima a seguir escribiendo y compartiendo como hasta ahora lo que voy aprendiendo e investigando que algún día espero utilizar en algún trabajo antes de que me jubile o pruebe ser un jardinero o barrendero.</p>
<p>Este <a href="https://picodotdev.github.io/blog-bitix/2017/">año 2017 he escrito los artículos</a> y este semestre me propuse publicar una mayor cantidad de artículos relacionados con el lenguaje de programación Java con motivo de la pasada publicación de Java 9. Pero primero empecé con un par de artículos sobre <em>portlets</em> y <a href="https://tapestry.apache.org/">Apache Tapestry</a> que en algún momento espero añadirlos en alguna sección del libro <a href="https://picodotdev.github.io/blog-bitix/2014/08/actualizacion-del-libro-plugin-tapestry/">PlugIn Tapestry</a>. Por supuesto, varios artículos comentando las novedades más relevantes de Java 9 publicado en septiembre entre ellas la modularidad y otras no menos notables.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/introduccion-a-los-portales-y-ejemplo-de-portlet-con-liferay/">Introducción a los portales y ejemplo de portlet con Liferay</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/portlets-con-el-framework-apache-tapestry-y-apache-pluto/">Portlets con el framework Apache Tapestry y Apache Pluto</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/iniciar-rapido-un-proyecto-de-java-con-gradle-o-de-spring-con-spring-initializr/">Iniciar rápido un proyecto de Java con Gradle o de Spring con Spring Initializr</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/iniciacion-a-la-programacion-concurrente-en-java/">Iniciación a la programación concurrente en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/">4 formas de hacer un bucle for en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/ejecutar-varias-tareas-de-forma-concurrente-en-java/">Ejecutar varias tareas de forma concurrente en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/el-antipatron-de-inicializacion-de-variables-con-dobles-llaves-en-java/">El antipatrón de inicialización de variables con dobles llaves en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/cache-simple-de-datos-y-con-ehcache-en-java/">Cache simple de datos y con Ehcache en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/los-cuantificadores-greedy-reluctant-y-possessive-en-expresiones-regulares/">Los cuantificadores greedy, reluctant y possessive en expresiones regulares</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/los-tipos-de-referencias-debiles-soft-weak-y-phantom-en-java/">Los tipos de referencias débiles soft, weak y phantom en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/la-herramienta-de-documentacion-javadoc-de-java/">La herramienta de documentación Javadoc de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/como-generar-la-documentacion-javadoc-con-gradle/">Cómo generar la documentación Javadoc con Gradle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/crear-anotaciones-de-javadoc-personalizadas-con-taglets/">Crear anotaciones de Javadoc personalizadas con taglets</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/cambiar-y-personalizar-los-estilos-de-la-documentacion-javadoc/">Cambiar y personalizar los estilos de la documentación Javadoc</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/">Novedades y nuevas características de Java 9, los módulos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-de-java-9-mas-alla-de-la-modularidad/">Novedades de Java 9, más allá de la modularidad</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/jshell-la-herramienta-repl-incorporada-en-java-9/">JShell la herramienta REPL incorporada en Java 9</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/evitar-niveles-de-anidacion-de-sentencias-condicionales-con-guard-clauses/">Evitar niveles de anidación de sentencias condicionales con guard clauses</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/ejemplo-con-el-cliente-http-2-de-java/">Ejemplo con el cliente HTTP/2 de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/obtener-el-minimo-o-maximo-de-dos-una-lista-o-stream-de-valores-en-java/">Obtener el mínimo o máximo de dos, una lista o stream de valores en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-para-gestionar-errores-con-java/">Las excepciones para gestionar errores en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/obtener-informacion-de-la-pila-de-las-excepciones/">Obtener información de la pila de las excepciones</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/formas-de-reducir-el-codigo-de-las-clases-pojo-de-java/">Formas de reducir el código de las clases POJO de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/visualizar-datos-y-generar-graficas-en-java-con-jfreechart/">Visualizar datos y generar gráficas en Java con JFreeChart</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/la-forma-correcta-de-ordenar-alfabeticamente-cadenas-en-java/">La forma correcta de ordenar alfabéticamente cadenas en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/">Introducción a la programación funcional con Java y la librería Vavr</a></li>
</ul>
<p>Una serie de artículos sobre <a href="https://graphql.org/">GraphQL</a> como alternativa a una API REST que tiene algunas ventajas. Aún me queda publicar uno de esta serie, en cuanto se acepte un <em>pull request</em> a raíz de una petición que cree con <a href="https://github.com/graphql-java/graphql-java-tools/issues/93">un problema que me encontré</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/que-es-graphql-y-ejemplo-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/">Qué es GraphQL y ejemplo para una interfaz de un servicio con Spring Boot y Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/">Usar un resolver para recuperar propiedades en GraphQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/">Consultas con parámetros para filtrar datos en GraphQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/">Paginación usando cursores en GraphQL y Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/definir-nuevos-tipos-de-datos-escalares-en-graphql/">Definir nuevos tipos de datos escalares en GraphQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/devolver-mensajes-de-error-descriptivos-en-graphql/">Devolver mensajes de error descriptivos en GraphQL</a></li>
</ul>
<p>De los menos en este semestre están relacionados con el software libre. De <a href="https://about.gitlab.com/">GitLab</a> tengo otro par de artículos por publicar para realizar integración continua y mostrando más en detalles su gestión de peticiones, wiki y páginas. Si estas navidades tienes algún momento para ver la televisión en uno de los siguientes artículos encontrarás varias ideas relacionadas con la tecnología.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/">Instalar y renovar un certificado de Let&rsquo;s Encrypt en Nginx</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/">El buscador que respeta tu privacidad, DuckDuckGo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/">Películas sobre tecnología o informática, series, documentales, vídeos, libros, GNU/Linux y software libre</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/">Como eliminar metainformación de las fotos en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/">GitLab, la completa herramienta integrada para desarrollo de software</a></li>
</ul>
<p>O de opinión.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/la-triste-realidad-de-java-versiones-antiguas/">La triste realidad de Java, versiones antiguas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/10/consejos-para-empresas-y-gente-de-recursos-humanos-que-busquen-talento/">Consejos para empresas y gente de recursos humanos que busquen talento</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/07/microsoft-does-not-care-if-you-use-windows-or-office-without-a-license/">Microsoft does not care if you use Windows or Office without a license</a></li>
</ul>
<p>Algunos artículos de tema alternativos en la temática principal de este blog pero que también me gusta compartir, comentando el cambio que hice de compañía eléctrica a <a href="https://www.holaluz.com/">Holaluz</a>, de caldera a termo eléctrico y la diferencia en la factura entre tener caldera y tener termo eléctrico. Un par de artículos de los robles que he plantado que espero prosperen, publicaré alguno más. También algún artículo de desempaquetado.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/desempaquetado-maletin-herramientas-mannesmann-y-bandejas-melamina-balvi/">Desempaquetado maletín herramientas Mannesmann y bandejas melamina Balvi</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/07/la-busqueda-de-ejemplares-de-roble-comun/">La búsqueda de ejemplares de roble común</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/como-seleccionar-y-hacer-germinar-facilmente-semillas-de-roble/">Cómo seleccionar y hacer germinar fácil semillas de roble</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/sustituir-caldera-de-gas-por-un-termo-electrico-fleck-duo-7-50/">Sustituir caldera de gas por un termo eléctrico Fleck Duo 7 50</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/comparando-la-factura-entre-caldera-de-gas-y-termo-electrico/">Comparando la factura entre caldera de gas y termo eléctrico</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/me-cambio-a-la-electrica-holaluz/">Me cambio a la eléctrica Holaluz</a></li>
</ul>
<p>Una buena colección de libros técnicos que he leído durante el último trío de años y me han gustado junto con una selección de productos tecnológicos.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/08/37-buenos-libros-sobre-sobre-java-linux-devops-y-desarrollo-que-he-leido/">37 buenos libros sobre sobre Java, Linux, DevOps y desarrollo que he leído</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/11/8-plus-ideas-de-productos-tecnologicos-para-comprar-o-regalar/">8+ ideas de productos tecnológicos para comprar o regalar</a></li>
</ul>
<p>Espero seguir escribiendo como hasta ahora en el 2018 si el tiempo del que dispongo me lo permite y continuo con motivación. Por lo pronto son unos cuantos artículos que ya tengo escritos a falta de retocar en el momento que los publique. Puedes aprovechar para repasar esta lista y leer alguno si te lo perdiste, por supuesto si aún no lo has hecho, suscríbete con tu lector preferido al <a href="https://picodotdev.github.io/blog-bitix/index.xml"><em>feed</em> a Blog Bitix</a>. Finalmente, ya solo me queda desearos con la siguiente imagen linuxera de <a href="http://www.klowner.com/">Klowner</a>&hellip; ¡Buen <strike>2016</strike> 2018!</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/images/christmas-tux-2017_hu4666a9b653f218359d1cc8abe813ce9a_529979_2560x1440_fit_q90_box.jpg" data-gallery="" title="¡Buen 2018!"><img src="https://picodotdev.github.io/blog-bitix/2017/12/hemeroteca-12/images/christmas-tux-2017_hu4666a9b653f218359d1cc8abe813ce9a_529979_600x450_fit_q90_box.jpg" width="600" height="338" alt="¡Buen 2018!" title="¡Buen 2018!"  class="lozad "></a></p>
<figcaption>¡Buen 2018! <br>Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/</id>
        <title>GitLab, la completa herramienta integrada para desarrollo de software</title>
        <updated>2018-01-14T02:00:00+01:00</updated>
        <published>2017-12-23T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Al desarrollar software una herramienta de control de versiones como Git y otras como un gestor de peticiones, una herramienta de integración continua o despliegue contínuo o una wiki para documentación son necesarias. Hay productos específicos para cada uno de ellos pero GitLab proporciona en una único producto todas estas facilitando su instalación y administración estando integradas en el mismo producto.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gitlab.svg" width="200" height="184" alt="GitLab" title="GitLab"  class=""></p>
</div>
<p>Usar una herramienta de control de versiones para el código fuente de un proyecto o programa es imprescindible para recuperar versiones anteriores de los archivos, comparar y compartir los cambios con el resto de desarrolladores del equipo. Otras herramientas imprescindibles son un gestor de peticiones para documentar cuál es el trabajo a realizar, ver en que se está trabajando, priorizar el trabajo inmediato que se realizará y el estado de cada petición. Por otro lado una herramienta donde recoger documentación del proyecto ayuda a compartir información y hacer que ese conocimiento quede recogido en algún lugar que pueda ser consultado con posterioridad o para futuros desarrolladores. También en estos días es imprescindible una herramienta para automatizar la ejecución de las pruebas unitarias y funcionales en cada <em>commit</em> al repositorio de código fuente.</p>
<p>Para cada una de estas funcionalidades hay herramientas específicas: <a href="https://git-scm.com/">Git</a> para la herramienta de control de versiones, <a href="https://github.com/">GitHub</a> con algunas funciones colaborativas como <em>pull request</em> y revisiones de código, <a href="https://www.atlassian.com/software/jira">Jira</a> para la gestión de peticiones, <a href="https://www.mediawiki.org/">MediaWiki</a> para documentar cierta información o <a href="https://jenkins.io/">Jenkins</a> para la ejecución de las pruebas automatizadas. Instalar estas herramientas individualmente requiere tiempo y dedicación, además de mantenimiento posterior.</p>
<p><a href="https://about.gitlab.com/">GitLab</a> es una herramienta que proporciona estas funcionalidades en un único producto y por tanto más fácil de instalar y administrar. Quizá su gestor de peticiones y wiki no tenga tantas opciones como sus respectivos productos específicos pero para la mayoría de casos son más que suficientes. Y tiene un desarrollo muy activo añadiendo características cada pocas semanas.</p>
<p>Hay varias formas de instalar GitLab, una de ellas es <a href="https://about.gitlab.com/installation/#ubuntu">instalandolo como un paquete de software</a> en la propia máquina, usando una <a href="https://docs.gitlab.com/ce/install/docker.html">imagen de Docker</a> o con una <a href="https://bitnami.com/stack/gitlab">imagen de Bitnami</a>. Siguiendo el artículo de <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a> puedes conocer como instalar GitLab en una máquina virtual con <a href="https://www.virtualbox.org/">VirtualBox</a> y con la <a href="https://picodotdev.github.io/blog-bitix/series/docker/">serie de artículos sobre Docker</a> como instalarlo en forma de contenedor y en la web de GitLab se explica como instalarlo como un software más de un sistema.</p>
<p>Usando <a href="https://www.docker.com/">Docker</a> y el siguiente archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> basta el comando <code>docker-compose up</code> para iniciar GitLab. Instalado GitLab de alguna de las formas anteriores usando un navegador web y con la dirección <em>https://gitlab</em> (configurados los certificados SSL y la ubicación de los volúmenes) se accede a la aplicación de GitLab, donde inicialmente se pide la contraseña del usuario administrador <em>root</em> con la que iniciar sesión y realizar las tareas administrativas como crear otros usuarios y proyectos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3.4&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;gitlab/gitlab-ce:latest&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">gitlab</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;localhost&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">GITLAB_OMNIBUS_CONFIG</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;external_url &#39;https://gitlab&#39;&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx[&#39;ssl_certificate&#39;] = &#39;/etc/gitlab/ssl/gitlab.crt&#39;&#10;</span></span></span><span class="line"><span class="cl"><span class="sd">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx[&#39;ssl_certificate_key&#39;] = &#39;/etc/gitlab/ssl/gitlab.key&#39;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;8022:22&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;8080:80&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;8443:443&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;gitlab-config-volume:/etc/gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;gitlab-log-volume:/var/log/gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;gitlab-data-volume:/var/opt/gitlab&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;./docker-volumes/gitlab/ssl:/etc/gitlab/ssl&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab-config-volume</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab-log-volume</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">gitlab-data-volume</span><span class="p">:</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/change-password_hu3f295538ccf72e0ec99dcad5d4c63996_44191_2560x1440_fit_box_3.png" data-gallery="" title="Contraseña de root"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/change-password_hu3f295538ccf72e0ec99dcad5d4c63996_44191_300x200_fit_box_3.png" width="281" height="200" alt="Contraseña de root" title="Contraseña de root"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/sing-in_hue89707dcc5c5de11c60f0a85274f050b_42041_2560x1440_fit_box_3.png" data-gallery="" title="Inicio de sesión"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/sing-in_hue89707dcc5c5de11c60f0a85274f050b_42041_300x200_fit_box_3.png" width="280" height="200" alt="Inicio de sesión" title="Inicio de sesión"  class="lozad "></a></p>
<figcaption>Contraseña e inicio de sesión</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/welcome_hu2da1e5fdf1b426fa9452872d3bd4a19b_52228_2560x1440_fit_box_3.png" data-gallery="" title="Página de bienvenida"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/welcome_hu2da1e5fdf1b426fa9452872d3bd4a19b_52228_300x200_fit_box_3.png" width="300" height="145" alt="Página de bienvenida" title="Página de bienvenida"  class="lozad "></a></p>
<figcaption>Página de bienvenida</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/profile_hu55e86529b7a0f31262c5a2c1b23c311f_100271_2560x1440_fit_box_3.png" data-gallery="" title="Perfil de usuario"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/profile_hu55e86529b7a0f31262c5a2c1b23c311f_100271_300x200_fit_box_3.png" width="215" height="200" alt="Perfil de usuario" title="Perfil de usuario"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/admin-area_hu2bc627e32bd560de9019a98c885f2cf6_91134_2560x1440_fit_box_3.png" data-gallery="" title="Área de administración"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/admin-area_hu2bc627e32bd560de9019a98c885f2cf6_91134_300x200_fit_box_3.png" width="300" height="166" alt="Área de administración" title="Área de administración"  class="lozad "></a></p>
<figcaption>Perfil de usuario y área de administración</figcaption>
</figure>
</div>
<p>Iniciada sesión ya se puede empezar a usar GitLab a crear usuarios con sus claves SSH, repositorios de Git pudiendo importar otros existentes, crear nuevos, páginas de una wiki y peticiones, integración y entrega continua y personalizar el panel <em>kanban</em> con el flujo que deseamos que sigan las peticiones en la organización, por ejemplo, <em>planning</em>, <em>ready</em>, <em>doing</em>, <em>review</em>, <em>merged</em> y <em>deployed</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/new-proyect_hu551d53ebe6ff130f5283b65bd7d57bcf_146652_2560x1440_fit_box_3.png" data-gallery="" title="Nuevo proyecto"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/new-proyect_hu551d53ebe6ff130f5283b65bd7d57bcf_146652_300x200_fit_box_3.png" width="300" height="164" alt="Nuevo proyecto" title="Nuevo proyecto"  class="lozad "></a></p>
<figcaption>Nuevo proyecto</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/new-issue_hu7402a5aeec834bb2c1b9692593fe6d54_88682_2560x1440_fit_box_3.png" data-gallery="" title="Nueva petición"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/new-issue_hu7402a5aeec834bb2c1b9692593fe6d54_88682_300x200_fit_box_3.png" width="300" height="144" alt="Nueva petición" title="Nueva petición"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/issues-board_hu5059f50581f26d8841e090624a928783_64972_2560x1440_fit_box_3.png" data-gallery="" title="Panel de peticiones"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/issues-board_hu5059f50581f26d8841e090624a928783_64972_300x200_fit_box_3.png" width="300" height="144" alt="Panel de peticiones" title="Panel de peticiones"  class="lozad "></a></p>
<figcaption>Nueva petición y panel de peticiones</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/new-wiki-page_hu56ffba61cfee3aad93461a4d9826c6ee_67467_2560x1440_fit_box_3.png" data-gallery="" title="Nueva página wiki"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/new-wiki-page_hu56ffba61cfee3aad93461a4d9826c6ee_67467_300x200_fit_box_3.png" width="300" height="156" alt="Nueva página wiki" title="Nueva página wiki"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/wiki-page_hu9d2686a12d158d298665c940d773eac8_48317_2560x1440_fit_box_3.png" data-gallery="" title="Página wiki"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/wiki-page_hu9d2686a12d158d298665c940d773eac8_48317_300x200_fit_box_3.png" width="300" height="144" alt="Página wiki" title="Página wiki"  class="lozad "></a></p>
<figcaption>Página wiki</figcaption>
</figure>
</div>
<p>Creado un proyecto GitLab e introducida la clave pública SSH nos proporciona la dirección URL con la que se puede clonar, convertir una carpeta existente en un repositorio o añadir un repositorio existente. Una vez con el repositorio en el sistema de archivos local se puede empezar a subir, modificar y eliminar archivos del repositorio de control de versiones. Hecho algún <em>commit</em> y subido algún archivo desde GitLab se puede ver el contenido del repositorio de Git.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git clone ssh://git@gitlab:8022/root/test.git&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> <span class="nb">test</span>&#10;</span></span><span class="line"><span class="cl">$ touch README.md&#10;</span></span><span class="line"><span class="cl">$ git add README.md&#10;</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;add README&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ git push -u origin master</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>clone-repository.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">cd</span> <span class="nb">test</span>&#10;</span></span><span class="line"><span class="cl">$ git init&#10;</span></span><span class="line"><span class="cl">$ git remote add origin ssh://git@gitlab:8022/root/test.git&#10;</span></span><span class="line"><span class="cl">$ git add .&#10;</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;Initial commit&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ git push -u origin master</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>existing-folder.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> <span class="nb">test</span>&#10;</span></span><span class="line"><span class="cl">git remote rename origin old-origin&#10;</span></span><span class="line"><span class="cl">git remote add origin ssh://git@gitlab:8022/root/test.git&#10;</span></span><span class="line"><span class="cl">git push -u origin --all&#10;</span></span><span class="line"><span class="cl">git push -u origin --tags</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>existing-repository.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/project-details-1_hua47bf6d38b0dd5109067886cedcd51c2_134607_2560x1440_fit_box_3.png" data-gallery="" title="Detalles de proyecto"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/project-details-1_hua47bf6d38b0dd5109067886cedcd51c2_134607_300x200_fit_box_3.png" width="222" height="200" alt="Detalles de proyecto" title="Detalles de proyecto"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/project-details-2_hud95fc715f3e235e843f2be32102e7524_152847_2560x1440_fit_box_3.png" data-gallery="" title="Detalles de proyecto"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/project-details-2_hud95fc715f3e235e843f2be32102e7524_152847_300x200_fit_box_3.png" width="289" height="200" alt="Detalles de proyecto" title="Detalles de proyecto"  class="lozad "></a></p>
<figcaption>Detalles de proyecto</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/source-file_hufc00af2bd9f3dc146f74ce204a45b1ae_76527_2560x1440_fit_box_3.png" data-gallery="" title="Contenido de archivo código fuente"><img src="https://picodotdev.github.io/blog-bitix/2017/12/gitlab-la-completa-herramienta-integrada-para-desarrollo-de-software/images/source-file_hufc00af2bd9f3dc146f74ce204a45b1ae_76527_300x200_fit_box_3.png" width="300" height="144" alt="Contenido de archivo código fuente" title="Contenido de archivo código fuente"  class="lozad "></a></p>
<figcaption>Contenido de archivo de código fuente</figcaption>
</figure>
</div>
<p>Otras formas de usar GitLab es desde la nube de <a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a> o de forma SaaS a un coste de entre 39 € y 199 € por usuario y mes pero si la nube no es una opción una de las ventajas de GitLab es que se puede instalar en algún sistema propio de cualquiera de las formas anteriores y tener proyecto privados. GitLab es otra herramienta que a añadiría a <a href="https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/">Herramientas para un proyecto Java</a>. Hay alguna cosa adicional a conocer <a href="https://docs.gitlab.com/ce/update/README.html">como realizar una actualización</a> cuando se publique una nueva versión o <a href="https://docs.gitlab.com/ce/raketasks/backup_restore.html#creating-a-backup-of-the-gitlab-system">como hacer copias de seguridad y restaurarlas</a>. Lo que he mostrado aquí son solo una introducción a unas pocas de las muchas posibilidades de GitLab.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GitLab">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>docker-compose up</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/</id>
        <title>Como eliminar metainformación de las fotos en GNU/Linux</title>
        <updated>2017-12-22T18:00:00+01:00</updated>
        <published>2017-12-22T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>En los archivos de las fotos e imágenes además de su información visual gráfica, los millones de píxeles, se guarda información adicional relacionada con la misma, por ejemplo, con que modelo de cámara se realizó, la fecha y la hora a la que se realizó, e incluso la localización si la cámara dispone de GPS u otro medio de ubicación como posicionamiento mediante la red de datos móvil o WIFI.</p>
<p>Compartir la foto en redes sociales ya es compartir mucha información y un peligro para la privacidad pero si además va acompañada de esta metainformación lo es algo más. Esta metainformación, información sobre la información, información sobre la imagen, son los <a href="https://es.wikipedia.org/wiki/Exchangeable_image_file_format">datos EXIF</a> y se guardan embebidos en el propio archivo de la foto.</p>
<p>Podemos obtener la metainformación guardada en la foto de diferentes formas. Una con la herramienta de visualización de imágenes de nuestro entorno de escritorio, en mi caso con el visor de imágenes de <a href="https://www.gnome.org/">GNOME</a> o con las propiedades de archivo de <a href="https://www.microsoft.com/es-es/windows/">Windows</a> (botón derecho del ratón sobre el archivo &gt; Propiedades). Otra es usando la herramienta ImageMagick.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/images/visor-imagenes_hu4963d27b856a96c5f47e229f55955a16_987189_2560x1440_fit_box_3.png" data-gallery="" title="Visor de imágenes de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/images/visor-imagenes_hu4963d27b856a96c5f47e229f55955a16_987189_300x200_fit_box_3.png" width="136" height="200" alt="Visor de imágenes de GNOME" title="Visor de imágenes de GNOME"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/images/propiedades-imagen_hu70383a2fb948f1bd506ced73d1cb1367_48909_2560x1440_fit_box_3.png" data-gallery="" title="Propiedades de imagen con metadatos"><img src="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/images/propiedades-imagen_hu70383a2fb948f1bd506ced73d1cb1367_48909_300x200_fit_box_3.png" width="207" height="200" alt="Propiedades de imagen con metadatos" title="Propiedades de imagen con metadatos"  class="lozad "></a></p>
<figcaption>Imagen y propiedades con metadatos</figcaption>
</figure>
</div>
<p>Instalado el paquete <a href="https://www.imagemagick.org">ImageMagick</a> de nuestra distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>, en este caso con <a href="https://www.archlinux.org/">Arch Linux</a> la metainformación de una foto se obtiene con el comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ identify -verbose planton-roble.jpg$ identify -verbose planton-roble.jpg&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>identify.sh</span>
    </div>
</div>
<p>Si la foto incluye personas algunas redes sociales como <a href="https://www.facebook.com/">Facebook</a> permiten identificarlas, acompañada de metainformación además informa de con que, con quién, cuando y donde se tomó la foto. Si te importa y quieres proteger tu privacidad un poco es aconsejable eliminar esta metainformación al subir o compartir las fotos en las redes sociales. Con ImageMagick se puede eliminar la metainformación con los siguientes comandos. El primero modifica el archivo original y el segundo crea una copia de la foto sin la metainformación:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ mogrify -strip *.jpg&#10;</span></span><span class="line"><span class="cl">$ convert -strip source.jpg destination.jpg &#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mogrify-convert.sh</span>
    </div>
</div>
<p><a href="https://help.twitter.com/es/using-twitter/tweeting-gifs-and-pictures">Twitter elimina los datos EXIF</a> de las fotos aunque utiliza la ubicación de la foto para realizar sugerencias de ubicaciones. <a href="https://www.facebook.com/">Facebook</a> creo que también elimina los datos EXIF al menos al visualizarlas, también <a href="https://www.whatsapp.com/">WhatsApp</a> y <a href="https://telegram.org/">Telegram</a>. Pero al compartir los archivos de fotos de forma directa como correo electrónico o por algún otro medio los metadatos seguirán estando presentes.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/images/planton-roble_hud0fc0db0d78a6f19c535a581fd7f4ddd_615910_2560x1440_fit_q90_box.jpg" data-gallery="" title="Imagen con datos EXIF"><img src="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/images/planton-roble_hud0fc0db0d78a6f19c535a581fd7f4ddd_615910_300x200_fit_q90_box.jpg" width="150" height="200" alt="Imagen con datos EXIF" title="Imagen con datos EXIF"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/images/planton-roble-noexif_hu1c1e87beb0ed78012360b8f81c258ebb_646306_2560x1440_fit_q90_box.jpg" data-gallery="" title="Imagen sin datos EXIF"><img src="https://picodotdev.github.io/blog-bitix/2017/12/como-eliminar-metainformacion-de-las-fotos-en-gnu-linux/images/planton-roble-noexif_hu1c1e87beb0ed78012360b8f81c258ebb_646306_300x200_fit_q90_box.jpg" width="150" height="200" alt="Imagen sin datos EXIF" title="Imagen sin datos EXIF"  class="lozad "></a></p>
<figcaption>Imagen izquierda con datos EXIF, imagen derecha sin datos EXIF</figcaption>
</figure>
</div>
<p>¿Puedes averiguar el dispositivo, la fecha en la que hizo la foto y con que software fotográfico se editó?</p>
<p>Independientemente de los datos EXIF al compartir fotos hay que tener un poco de cuidado, si tu privacidad no te importa mucho y compartes cualquier cosa personal tuya y así lo has decidido, tú mismo, eso sí simplemente se respetuoso y respeta la privacidad de las personas de las que tienes intención de compartir fotos. Ten en cuenta que compartir que estás de vacaciones, amigos, familiares y con el resto del historial de tu red social se puede conocer bastante acerca de la vida de una persona.</p>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/</id>
        <title>Introducción a la programación funcional con Java y la librería Vavr</title>
        <updated>2017-12-15T23:00:00+01:00</updated>
        <published>2017-12-15T23:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Ciertas propiedades de la programación funcional fueron una de las características más destacadas añadidas a Java 8. La librería Javaslang y más tarde renombrada a Vavr basándose en estas nueva características añade algunas otras que no están incluidas en el propio JDK y están presentes en otros lenguajes más recientes y con programación funcional desde sus inicios. En esta breve introducción a la librería Vavr comentaré cuales son las propiedades que proporciona para simplificar algunas aspectos de la tarea de programación.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/vavr.png" width="300" height="91" alt="Vavr" title="Vavr"  class=""></p>
</div>
<p>La programación funcional es un paradigma de programación declarativa que usa múltiples funciones para realizar cálculos y transformaciones a los datos de entrada para producir un resultado, se centra más en las funciones necesarias para realizar los cálculos que en la forma de realizar esos cálculos como ocurre en la programación imperativa. En la programación declarativa el código expresa mejor la intención y suele requerir menos código y estos son algunos motivos de por qué usar la programación funcional.</p>
<p>Las funciones tiene como característica que no cambian los valores de entrada sino que en base a ellos producen unos datos de salida nuevos, otra de sus características es que si se usan los mismos valores de entrada se producen los mismos valores de salida. Un primer paso hacia la programación funcional es usar datos inmutables.</p>
<p>Dicho esto un código no se evalúa únicamente por la cantidad de lineas de código que contiene menos lineas no siempre es mejor si otra variable a tener en cuenta es la legibilidad que facilite la compresión del código a otra persona y a uno mismo en un futuro.</p>
<p>Me parece que ha sido hace mucho menos pero Java 8 fue publicado ya nada más y nada menos que hace casi cuatro años, una de las mayores modificaciones al lenguaje Java desde Java 5. Una de la nuevas características añadidas más destacadas fue la incorporación de las funciones <em>lambda</em> que posibilitan la programación funcional. Las <em>lambdas</em> combinado con los <em>streams</em>, otra de las nuevas características, en las colecciones hacen posible escribir con muchas menos líneas de código y de una forma mucho más natural y legible para la misma funcionalidad que en versiones anteriores. Las <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">nuevas características añadidas al lenguaje en Java 8</a> ya por si solas son una gran mejora sin embargo a algunos no les parecen suficientes, una de las librerías Java del momento es <a href="https://www.vavr.io/">Vavr</a> que mejora y añade nuevas funcionalidades basándose en las novedades básicas añadidas al lenguaje en la versión 8.</p>
<p>Varv se define a si misma como una librería funcional para Java 8+. Vavr proporciona colecciones inmutables, las necesarias funciones y estructuras de control para operar estos valores. El resultado es bello y simplemente funciona.</p>
<p>Java 8 no incorpora todo lo que podría en el JDK por decisión de los desarrolladores, ya que una de los principios que guían el desarrollo de Java es la compatibilidad hacia atrás e incorporar cosas en el lenguaje o JDK que en un momento determinado hasta que no demuestran que son realmente útiles y beneficiosas. Conservar la compatibilidad hacia atrás es una fortaleza pero que puede dar la sensación que Java siempre va un paso por detrás en incorporar novedades, aún así complementado con librerías como Vavr en el caso de las programación funcional se echa de menos menos otros lenguajes como <a href="https://kotlinlang.org/">Kotlin</a> o <a href="https://clojure.org/">Clojure</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/images/vavr-overview_hud440010d046c9f191d022a39629fda85_77665_2560x1440_fit_box_3.png" data-gallery="" title="Jerarquía de clases de Vavr"><img src="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/images/vavr-overview_hud440010d046c9f191d022a39629fda85_77665_300x200_fit_box_3.png" width="300" height="71" alt="Jerarquía de clases de Vavr" title="Jerarquía de clases de Vavr"  class="lozad "></a></p>
<figcaption>Jerarquía de clases de Vavr</figcaption>
</figure>
</div>
<p>Los principios que sigue la librería Vavr y que forman la tendencia en la programación y la programación funcional son:</p>
<ul>
<li>Efectos colaterales: los cambios de estado son considerados dañinos si afectan al programa de una forma no deseada.</li>
<li>Transparencia referencial: una función o expresión tiene esta propiedad si puede ser reemplazada por su valor sin afectar al comportamiento del programa. Dicho de otra forma, dados los mismos datos de entrada el resultado de la función o expresión es el mismo. Una función es <em>pura</em> si todas las expresiones que contiene tienen la propiedad de <em>transparencia referencial</em>.</li>
<li>Pensar en valores: los valores más interesantes son aquellos que son inmutables ya que son <em>thread-safe</em> no necesitando mecanismos de sincronización en su acceso o modificación, son estables para las funciones <em>equals</em> y <em>hashCode</em> siendo confiables como claves <em>hash</em> y no necesitan ser clonados.</li>
<li>Estructuras de datos: proporciona una colección rica de estructuras de datos funcionales apoyándose en la funciones <em>lambda</em>. Son un reemplazo para las colecciones estándar de Java, la única interfaz que comparten es <a href="https://docs.oracle.com/javase/9/docs/api/java/lang/Iterable.html">Iterable</a>. Las colecciones de Java ocultan los detalles de implementación y las estructuras de datos internas pero son <em>colecciones mutables</em>. Las <em>colecciones inmutables</em> en Java se proporcionan como envoltorios que lanzan una excepción al intentarlas modificar. La <em>colecciones persistentes</em> son efectivamente inmutables realizando pequeñas modificaciones y conservando las estructuras anteriores y nuevas y permitiendo consultar y modificar cualquiera de sus versiones.</li>
<li>Estructuras de datos funcionales: son aquellas estructuras de datos inmutables, persistentes y los métodos tienen la propiedad de transparencia referencial.</li>
<li>Colecciones: los <em>stream</em> de Java para las colecciones son una forma de recorrerlas, realizar una computación y obtener una nueva colección. Los <em>stream</em> de Vavr no están tan relacionados con las colecciones.</li>
</ul>
<p>Vavr proporciona una representación bien diseñada de algunos de los tipos más básicos que aparentemente están ausentes o son rudimentarios en Java: <em>Tuple</em>, <em>Value</em> y <em>λ</em> (función <em>lambda</em>). Entre las funcionalidades proporcionadas por Vavr están:</p>
<ul>
<li>Tuplas: son una caja para contener varios objetos evitando la necesidad de crear una clase especifica si esta no tiene ningún comportamiento asociado. Vavr proporciona tuplas hasta de 8 elementos, de <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/Tuple0.html">Tuple0</a> a <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/Tuple8.html">Tuple8</a>.</li>
<li>Funciones: la programación funcional se basa en los valores y la transformación de esos valores usando funciones. Java 8 proporciona la clase <a href="https://docs.oracle.com/javase/9/docs/api/java/util/function/package-summary.html">Function</a> que acepta solo un parámetro y la clase <a href="https://docs.oracle.com/javase/9/docs/api/java/util/function/package-summary.html">BiFunction</a> que acepta dos. En Vavr las interfaces funcionales van de <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/Function0.html">Function0</a> hasta <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/Function8.html">Function8</a>. Es posible aplicar conceptos como <em>composition</em>, <em>lifting</em>, <em>partial application</em>, <em>currying</em> o <em>memoization</em>.</li>
<li>Valores: los valores en Vavr son inmutables. Algunos objetos <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/Value.html">Value</a> proporcionados son: <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/control/Option.html">Option</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/control/Try.html">Try</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/Lazy.html">Lazy</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/control/Either.html">Either</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/concurrent/Future.html">Future</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/control/Validation.html">Validation</a>.</li>
<li>Colecciones: se ha diseñado una nueva librería de colecciones para Java que cumple con los requerimientos de la programación funcional e inmutabilidad. <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/collection/List.html">List</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/collection/Queue.html">Queue</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/collection/SortedSet.html">SortedSet</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/collection/Seq.html">Seq</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/collection/Set.html">Set</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/collection/Map.html">Map</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/collection/Stream.html">Stream</a>, <a href="https://static.javadoc.io/io.vavr/vavr/0.10.3/io/vavr/collection/Traversable.html">Traversable</a>, &hellip;</li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/images/collections-seq_huc90751218fb5817ee94e119b6982b26c_12474_2560x1440_fit_box_3.png" data-gallery="" title="Jerarquía de clases de Seq"><img src="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/images/collections-seq_huc90751218fb5817ee94e119b6982b26c_12474_300x200_fit_box_3.png" width="300" height="151" alt="Jerarquía de clases de Seq" title="Jerarquía de clases de Seq"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/images/collections-set-map_hu653b4e3b17a755b45e0037757ebaf29a_13335_2560x1440_fit_box_3.png" data-gallery="" title="Jerarquía de clases de Set y Map"><img src="https://picodotdev.github.io/blog-bitix/2017/12/introduccion-a-la-programacion-funcional-con-java-y-la-libreria-vavr/images/collections-set-map_hu653b4e3b17a755b45e0037757ebaf29a_13335_300x200_fit_box_3.png" width="300" height="131" alt="Jerarquía de clases de Set y Map" title="Jerarquía de clases de Set y Map"  class="lozad "></a></p>
<figcaption>Jerarquía de clases de Seq, Set y Map</figcaption>
</figure>
</div>
<ul>
<li><em>Pattern matching</em>: son una especie de sentencia <em>switch</em> que son evaluadas como una expresión y que retornan un valor.</li>
</ul>
<p>Entre la <a href="https://www.vavr.io/vavr-docs">documentación de Varv</a> hay numerosos ejemplos de código de todo lo anterior que recomiendo leer. En el siguiente ejemplo de código incluyo algunos posibles casos de uso de varias de las funcionalidades anteriores. En definitiva la librería Vavr complementa y añade a Java algunas de las características presentes en la programación funcional de otros lenguajes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.vavr</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.vavr.*</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.vavr.Lazy</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.vavr.collection.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.vavr.collection.Stream</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.vavr.control.Either</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.vavr.control.Option</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.vavr.control.Try</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import static</span> <span class="nn">io.vavr.API.*</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import static</span> <span class="nn">io.vavr.Predicates.instanceOf</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Throwable</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Side-Effects&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CheckedFunction2</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">divide</span> <span class="o">=</span> <span class="o">(</span><span class="n">Integer</span> <span class="n">dividend</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">divisor</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">dividend</span> <span class="o">/</span> <span class="n">divisor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">divide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">4</span><span class="o">,</span> <span class="n">2</span><span class="o">)).</span><span class="na">onSuccess</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">::</span><span class="n">println</span><span class="o">).</span><span class="na">onFailure</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">divide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">4</span><span class="o">,</span> <span class="n">0</span><span class="o">)).</span><span class="na">onSuccess</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">::</span><span class="n">println</span><span class="o">).</span><span class="na">onFailure</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Functional Data Structures&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">2</span><span class="o">,</span> <span class="n">3</span><span class="o">).</span><span class="na">tail</span><span class="o">().</span><span class="na">prepend</span><span class="o">(</span><span class="n">1</span><span class="o">).</span><span class="na">map</span><span class="o">(</span><span class="n">o</span> <span class="o">-&gt;</span> <span class="n">o</span> <span class="o">*</span> <span class="n">2</span><span class="o">).</span><span class="na">forEach</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">::</span><span class="n">println</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Collections&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Stream</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">2</span><span class="o">,</span> <span class="n">3</span><span class="o">).</span><span class="na">tail</span><span class="o">().</span><span class="na">prepend</span><span class="o">(</span><span class="n">1</span><span class="o">).</span><span class="na">toStream</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">Integer</span> <span class="n">i</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Tuples&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Tuple3</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">,</span> <span class="n">BigDecimal</span><span class="o">&gt;</span> <span class="n">tuple</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Tuple3</span><span class="o">&lt;&gt;(</span><span class="s">&#34;El señor de los anillos&#34;</span><span class="o">,</span> <span class="n">1272</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;10.40&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Titulo: %s, Páginas: %d, Precio: %.2f%n&#34;</span><span class="o">,</span> <span class="n">tuple</span><span class="o">.</span><span class="na">_1</span><span class="o">,</span> <span class="n">tuple</span><span class="o">.</span><span class="na">_2</span><span class="o">,</span> <span class="n">tuple</span><span class="o">.</span><span class="na">_3</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;# Values&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Option</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;foo&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Lazy</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">&gt;</span> <span class="n">lazy</span> <span class="o">=</span> <span class="n">Lazy</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">Math</span><span class="o">::</span><span class="n">random</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">lazy</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">lazy</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CheckedFunction2</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">divide</span> <span class="o">=</span> <span class="o">(</span><span class="n">Integer</span> <span class="n">dividend</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">divisor</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">dividend</span> <span class="o">/</span> <span class="n">divisor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Either</span><span class="o">&lt;</span><span class="n">Throwable</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">value1</span> <span class="o">=</span> <span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">divide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">4</span><span class="o">,</span> <span class="n">2</span><span class="o">)).</span><span class="na">toEither</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Either</span><span class="o">&lt;</span><span class="n">Throwable</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">value2</span> <span class="o">=</span> <span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">divide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">4</span><span class="o">,</span> <span class="n">0</span><span class="o">)).</span><span class="na">toEither</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">value1</span><span class="o">.</span><span class="na">right</span><span class="o">().</span><span class="na">peek</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">::</span><span class="n">println</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">value2</span><span class="o">.</span><span class="na">left</span><span class="o">().</span><span class="na">peek</span><span class="o">(</span><span class="n">e</span> <span class="o">-&gt;</span> <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CheckedFunction1</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">curriedDivide</span> <span class="o">=</span> <span class="n">divide</span><span class="o">.</span><span class="na">curried</span><span class="o">().</span><span class="na">apply</span><span class="o">(</span><span class="n">10</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">curriedDivide</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">2</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Function0</span><span class="o">&lt;</span><span class="n">Double</span><span class="o">&gt;</span> <span class="n">hashCache</span> <span class="o">=</span> <span class="n">Function0</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">Math</span><span class="o">::</span><span class="n">random</span><span class="o">).</span><span class="na">memoized</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hashCache</span><span class="o">.</span><span class="na">apply</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">hashCache</span><span class="o">.</span><span class="na">apply</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Number</span> <span class="n">number</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Double</span><span class="o">(</span><span class="n">4</span><span class="o">.</span><span class="na">34</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Option</span><span class="o">&lt;</span><span class="n">Number</span><span class="o">&gt;</span> <span class="n">plusOne</span> <span class="o">=</span> <span class="n">Match</span><span class="o">(</span><span class="n">number</span><span class="o">).</span><span class="na">option</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Case</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="n">instanceOf</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">class</span><span class="o">)),</span> <span class="n">i</span> <span class="o">-&gt;</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Case</span><span class="o">(</span><span class="n">$</span><span class="o">(</span><span class="n">instanceOf</span><span class="o">(</span><span class="n">Double</span><span class="o">.</span><span class="na">class</span><span class="o">)),</span> <span class="n">d</span> <span class="o">-&gt;</span> <span class="n">d</span> <span class="o">+</span> <span class="n">2</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">plusOne</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl"># Side-Effects&#10;</span></span><span class="line"><span class="cl">2&#10;</span></span><span class="line"><span class="cl">java.lang.ArithmeticException: / by zero&#10;</span></span><span class="line"><span class="cl">	at io.github.picodotdev.blogbitix.vavr.Main.lambda$main$8fab2fe6$1(Main.java:20)&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	at io.github.picodotdev.blogbitix.vavr.Main.lambda$main$a54cc6af$2(Main.java:22)&#10;</span></span><span class="line"><span class="cl"># Functional Data Structures&#10;</span></span><span class="line"><span class="cl">	at io.vavr.control.Try.of(Try.java:75)&#10;</span></span><span class="line"><span class="cl">	at io.github.picodotdev.blogbitix.vavr.Main.main(Main.java:22)&#10;</span></span><span class="line"><span class="cl">2&#10;</span></span><span class="line"><span class="cl">4&#10;</span></span><span class="line"><span class="cl">6&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># Collections&#10;</span></span><span class="line"><span class="cl">1&#10;</span></span><span class="line"><span class="cl">2&#10;</span></span><span class="line"><span class="cl">3&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># Tuples&#10;</span></span><span class="line"><span class="cl">Titulo: El señor de los anillos, Páginas: 1272, Precio: 10,40&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># Values&#10;</span></span><span class="line"><span class="cl">0.9017284202792532&#10;</span></span><span class="line"><span class="cl">0.9017284202792532&#10;</span></span><span class="line"><span class="cl">2&#10;</span></span><span class="line"><span class="cl">java.lang.ArithmeticException: / by zero&#10;</span></span><span class="line"><span class="cl">	at io.github.picodotdev.blogbitix.vavr.Main.lambda$main$8fab2fe6$2(Main.java:56)&#10;</span></span><span class="line"><span class="cl">	at io.github.picodotdev.blogbitix.vavr.Main.lambda$main$d82d4ab3$1(Main.java:58)&#10;</span></span><span class="line"><span class="cl">	at io.vavr.control.Try.of(Try.java:75)&#10;</span></span><span class="line"><span class="cl">	at io.github.picodotdev.blogbitix.vavr.Main.main(Main.java:58)&#10;</span></span><span class="line"><span class="cl">5&#10;</span></span><span class="line"><span class="cl">0.5015851774222647&#10;</span></span><span class="line"><span class="cl">0.5015851774222647&#10;</span></span><span class="line"><span class="cl">6.34</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jcenter</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s2">&#34;io.vavr:vavr:0.9.2&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.vavr.Main&#39;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>La librería Varv es una de las que pongo como ejemplo en el artículo <a href="https://picodotdev.github.io/blog-bitix/2017/10/la-triste-realidad-de-java-versiones-antiguas/">La triste realidad de Java, versiones antiguas</a>, si es útil no usarla puede hacer que programar en Java no sea todo lo placentero que podría ser. Algunas de las críticas que recibe Java no tienen validez usando las herramientas o librerías adecuadas porque en cierta medida las herramientas importan aunque por ahí circule la idea de que las herramientas no importan, para una persona de negocio quizá no sin embargo para un desarrollador sí.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Vavr">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.vavr.io/">Documentación de Vavr</a></li>
<li><a href="https://www.javadoc.io/doc/io.vavr/vavr">Javadoc de Vavr</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/</id>
        <title>Películas sobre tecnología o informática, series, documentales, vídeos, libros, GNU/Linux y software libre</title>
        <updated>2017-12-30T00:05:00+01:00</updated>
        <published>2017-12-07T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Si estás interesado en la tecnología, informática en general y en el software libre, código abierto y GNU/Linux estoy más que seguro que las siguientes listas de películas, series, documentales y libros te gustarán bastante. Probablemente algunas ya hayas visto pero otra quizá no conocías o aún no has visto y este artículo te anima a ver. En el momento de escribir esto aún no he visto todo el contenido de este artículo pero con esta lista lo tengo anotado y pendiente de ver.</p>
<h3 id="películas">Películas</h3>
<ul>
<li><a href="https://www.filmaffinity.com/es/film399662.html">Piratas de Silicon Valley</a></li>
<li><a href="https://www.filmaffinity.com/es/film689614.html">Trabajo basura (Office Space)</a></li>
<li><a href="https://www.filmaffinity.com/es/film553168.html">Juegos de guerra</a></li>
<li><a href="https://www.filmaffinity.com/es/film358476.html">Blade Runner</a>, <a href="https://www.filmaffinity.com/es/film236626.html">Blade Runner 2049</a></li>
<li><a href="https://www.filmaffinity.com/es/film577699.html">La red social</a></li>
<li><a href="https://www.filmaffinity.com/es/film601423.html">Jobs</a></li>
<li><a href="https://www.filmaffinity.com/es/film480342.html">Steve Jobs</a></li>
<li><a href="https://www.filmaffinity.com/es/film488334.html">TRON</a>, <a href="https://www.filmaffinity.com/es/film589915.html">TRON: Legacy</a></li>
<li><a href="https://www.filmaffinity.com/es/film271983.html">Blackhat. Amenaza en la red</a></li>
<li><a href="https://www.filmaffinity.com/es/film437471.html">Conspiración en la red, AntiTRUST</a></li>
<li><a href="https://www.filmaffinity.com/es/film304107.html">Terminator</a>, <a href="https://www.filmaffinity.com/es/film576352.html">Terminator 2: El juicio final</a>, <a href="https://www.filmaffinity.com/es/film477986.html">Terminator 3: La rebelión de las máquinas</a>, <a href="https://www.filmaffinity.com/es/film517417.html">Terminator Salvation</a>, <a href="https://www.filmaffinity.com/es/film188260.html">Terminator Génesis</a></li>
<li><a href="https://www.filmaffinity.com/es/film233071.html">Los fisgones (Sneakers)</a></li>
<li><a href="https://es.wikipedia.org/wiki/Categor%C3%ADa:Pel%C3%ADculas_sobre_hackers">Otras películas sobre <em>hackers</em></a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/pirates-of-silicon-valley_huf3d9194e40025139a91c69d434838aa4_24103_2560x1440_fit_q90_box.jpg" data-gallery="" title="Piratas de Silicon Valley"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/pirates-of-silicon-valley_huf3d9194e40025139a91c69d434838aa4_24103_300x200_fit_q90_box.jpg" width="143" height="200" alt="Piratas de Silicon Valley" title="Piratas de Silicon Valley"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/office-space_hu6692d072b2cbd3ba435bf229c583a46a_19619_2560x1440_fit_q90_box.jpg" data-gallery="" title="Trabajo basura"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/office-space_hu6692d072b2cbd3ba435bf229c583a46a_19619_300x200_fit_q90_box.jpg" width="135" height="200" alt="Trabajo basura" title="Trabajo basura"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/wargames_hu436eb37d140692e56db0ab5fca4f6766_24070_2560x1440_fit_q90_box.jpg" data-gallery="" title="Juegos de guerra"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/wargames_hu436eb37d140692e56db0ab5fca4f6766_24070_300x200_fit_q90_box.jpg" width="131" height="200" alt="Juegos de guerra" title="Juegos de guerra"  class="lozad "></a></p>
</figure>
</div>
<h3 id="series">Series</h3>
<ul>
<li><a href="https://www.filmaffinity.com/es/film800295.html">Black Mirror</a></li>
<li><a href="https://www.filmaffinity.com/es/film993489.html">Mr Robot</a></li>
<li><a href="https://www.filmaffinity.com/es/film279751.html">Silicon Valley</a></li>
<li><a href="https://www.filmaffinity.com/es/film449215.html">Halt and Catch Fire</a></li>
<li><a href="https://www.filmaffinity.com/es/film914339.html">The IT Crowd</a></li>
<li><a href="https://www.filmaffinity.com/es/film482651.html">Scorpion</a></li>
<li><a href="https://www.filmaffinity.com/es/film752650.html">Odio canibal</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/black-mirror_huf50dee2f57cd1502b4d93b3af0346b90_11019_2560x1440_fit_q90_box.jpg" data-gallery="" title="Black Mirror"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/black-mirror_huf50dee2f57cd1502b4d93b3af0346b90_11019_300x200_fit_q90_box.jpg" width="136" height="200" alt="Black Mirror" title="Black Mirror"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/mr-robot_huce3f8e222da41cd8431903b74cb553e7_15340_2560x1440_fit_q90_box.jpg" data-gallery="" title="Mr Robot"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/mr-robot_huce3f8e222da41cd8431903b74cb553e7_15340_300x200_fit_q90_box.jpg" width="150" height="200" alt="Mr Robot" title="Mr Robot"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/silicon-valley_hu28a43ee397c766e577c4b3eff54997c8_18854_2560x1440_fit_q90_box.jpg" data-gallery="" title="Silicon Valley"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/silicon-valley_hu28a43ee397c766e577c4b3eff54997c8_18854_300x200_fit_q90_box.jpg" width="135" height="200" alt="Silicon Valley" title="Silicon Valley"  class="lozad "></a></p>
</figure>
</div>
<h3 id="documentales">Documentales</h3>
<ul>
<li><a href="https://es.wikipedia.org/wiki/El_triunfo_de_los_nerds">El triunfo de los nerds</a></li>
<li><a href="https://www.youtube.com/watch?v=7eOKcLnm0Xo">La historia de la computadora y computación</a></li>
<li><a href="https://www.youtube.com/watch?v=7KreXtq0QoA">La historia secreta de los <em>hackers</em></a></li>
<li><a href="https://www.youtube.com/watch?v=4Q7FTjhvZ7Y">Code Rush</a></li>
<li><a href="https://www.youtube.com/watch?v=9CghMhaNdZI">La revolución virtual</a></li>
<li><a href="https://www.youtube.com/watch?v=YtZvtUWo-bw">Documental Bill Gates</a></li>
<li><a href="https://www.filmaffinity.com/es/film113451.html">La historia de Aaron Swartz. El chico de Internet</a></li>
<li><a href="https://www.youtube.com/watch?v=uuxoThzFPPw">Historia de los primeros videojuegos</a></li>
<li><a href="https://www.youtube.com/watch?v=q_ymzSFjQ0A">La era de los videojuegos</a>, <a href="https://www.youtube.com/watch?v=TFN3SucnNns">II</a>, <a href="https://www.youtube.com/watch?v=9TsPi13AkOo">III</a>, <a href="https://www.youtube.com/watch?v=6WvCfi7AkG0">IV</a></li>
<li><a href="https://www.youtube.com/watch?v=1ao2V4A8Qcc">Atari: Game Over</a></li>
<li><a href="https://www.youtube.com/watch?v=1H9Gl9rLckk&amp;t=1504s">Gameplay - La historia de los videojuegos</a></li>
<li><a href="https://www.youtube.com/watch?v=ZKiLI7XFB9k">Good Copy Bad Copy</a></li>
<li><a href="https://es.wikipedia.org/wiki/Info_wars">Info wars</a></li>
<li><a href="https://www.youtube.com/watch?v=SSbhsPNnVWo">Lo and Behold: Reveries of the Connected World</a></li>
<li><a href="https://en.wikipedia.org/wiki/The_Machine_That_Changed_the_World_%28miniseries%29">The machine that changed the world</a></li>
<li><a href="https://www.youtube.com/watch?v=Pk2BWphDfvc">Nerds 2.0.1</a>, <a href="https://www.youtube.com/watch?v=EafxrkUEd50">II</a>, <a href="https://www.youtube.com/watch?v=ajn-Ij2AfPs">III</a></li>
<li><a href="https://www.youtube.com/watch?v=Q8BgoYRpGqA&amp;t=485s">Welcome to Macintosh</a></li>
<li><a href="https://www.youtube.com/watch?v=tNL3bDLgkh8">Steve Jobs: One last thing</a></li>
</ul>
<p>En <a href="https://www.youtube.com/">YouTube</a> hay cantidad de documentales más.</p>
<h3 id="documentales-sobre-el-software-libre-y-código-abierto">Documentales sobre el software libre y código abierto</h3>
<ul>
<li><a href="https://www.youtube.com/watch?v=HuoljD3rgVM">El software libre es como el pastel de la abuela</a></li>
<li><a href="https://www.youtube.com/watch?v=Gm6uLgmqqXs">El software libre</a></li>
<li><a href="https://www.youtube.com/watch?v=HyzXwba7r78">Software Libre: La comunidad sin amos</a></li>
<li><a href="https://www.youtube.com/watch?v=EJPE_B0YTPI">Entrevista a maddog</a></li>
<li><a href="https://www.youtube.com/watch?v=ehT9rm1gvNo">¿Qué es el software libre y por que es tan importante para la sociedad?</a></li>
<li><a href="https://www.youtube.com/watch?v=cwptTf-64Uo">Código Linux</a></li>
<li><a href="https://www.youtube.com/watch?v=sujZg7jwKdk">Revolution OS</a></li>
</ul>
<p>Probablemente ya conozcas el software libre, o quizá no, en cualquier caso te recomiendo que veas una de las conferencias de <a href="https://es.wikipedia.org/wiki/Richard_Stallman">Stallman</a> da en numerosos lugares y en las que da a conocer el software libre y promueve su uso. Cuales son los motivos éticos, morales, de seguridad y prácticos por los que preferir software libre en vez de software privativo. Si te convence y usas otros sistemas operativos como <a href="https://www.microsoft.com/es-es/windows/">Windows</a> o <a href="https://www.apple.com/macos/">MacOS</a> puedes empezar a conocer las distribuciones de <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> y <a href="https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/">elegir una distribución GNU/Linux</a> de entre las varias que hay disponibles.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=f0slZnpELaU">Conferencia Richard Matthew Stallman</a></li>
<li><a href="https://www.youtube.com/watch?v=06pLIUqB6zY">Preguntas Richard Matthew Stallman</a></li>
<li><a href="https://www.youtube.com/watch?v=onrIApj3Cjs">Entrevista en Español con Richard Stallman, «Software Libre»</a></li>
</ul>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="200" alt="GNU" title="GNU"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="200" alt="Linux" title="Linux"  class="lozad "></p>
</figure>
</div>
<h3 id="libros-y-novelas">Libros y novelas</h3>
<ul>
<li><a href="https://amzn.to/3B7p7aC">El círculo</a> de <em>Dave Eggers</em></li>
<li><a href="https://amzn.to/3FcV43O">Microsiervos</a> de <em>Douglas Coupland</em></li>
<li>Cuando los administradores de sistemas gobernaron la tierra de <em>Cory Doctorow</em></li>
<li><a href="https://amzn.to/3A62fH1">Criptonomicon</a> de <em>Neal Stephenson</em></li>
<li><a href="https://amzn.to/3FgplhS">Snow Crash</a> de <em>Neal Stephenson</em></li>
<li><a href="https://amzn.to/3l4xPRn">Ready Player One</a> y <a href="https://amzn.to/39ZHJNJ">Ready Player Two</a> de <em>Ernest Cline</em></li>
<li><a href="https://amzn.to/3D5GM2X">¿Sueñan los androides con ovejas eléctricas?</a> de <em>Philip K. Dick</em></li>
<li><a href="http://www.proyecto-tic.es/algunas-novelas-sobre-informatica-y-hackers/">Algunas novelas sobre informática y <em>hackers</em></a></li>
<li><a href="https://amzn.to/3Fgqc27">The Phoenix Project</a> y <a href="https://amzn.to/2ZN8D9H">The Unicorn Project</a> de Gene Kim.</li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/el-circulo_hu7f3120c3ff653771efe503374ca37c66_46118_2560x1440_fit_q90_box.jpg" data-gallery="" title="El circulo"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/el-circulo_hu7f3120c3ff653771efe503374ca37c66_46118_300x200_fit_q90_box.jpg" width="133" height="200" alt="El circulo" title="El circulo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/microsiervos_hucc51c583453c505a4470b590cb5a7557_562196_2560x1440_fit_q90_box.jpg" data-gallery="" title="Microsiervos"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/microsiervos_hucc51c583453c505a4470b590cb5a7557_562196_300x200_fit_q90_box.jpg" width="126" height="200" alt="Microsiervos" title="Microsiervos"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/_hu0915c1ff3f790100c88bfc6591ab7d70_59862_b5e67e53cad6572fed4b20bc7e6fdbe7.jpg" data-gallery="" title="Cuando los administradores de sistemas gobernaron la tierra"><img src="https://picodotdev.github.io/blog-bitix/2017/12/peliculas-sobre-tecnologia-o-informatica-series-documentales-videos-libros-gnu-linux-y-software-libre/images/_hu0915c1ff3f790100c88bfc6591ab7d70_59862_a313b091e12890ce7baab8a95a4fd7b3.jpg" width="131" height="200" alt="Cuando los administradores de sistemas gobernaron la tierra" title="Cuando los administradores de sistemas gobernaron la tierra"  class="lozad "></a></p>
</figure>
</div>
<p>¿Conoces alguno imprescindible más que incluir en esta lista?</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://victorhckinthefreeworld.com/2013/06/21/software-libre-la-comunidad-sin-amos/">Software Libre: La comunidad sin amos</a></li>
<li><a href="http://www.xataka.com/historias-de-la-tecnologia/nueve-documentales-sobre-la-historia-de-la-informatica-que-no-te-puedes-perder">Nueve documentales sobre la historia de la informática que no te puedes perder</a></li>
<li><a href="http://www.javipas.com/2015/06/26/documentales-sobre-gnulinux-y-open-source/">Documentales sobre GNU/Linux y Open Source</a></li>
<li><a href="https://es.wikipedia.org/wiki/Categor%C3%ADa:Documentales_sobre_inform%C3%A1tica">Documentales sobre informática</a></li>
<li><a href="http://www.proyecto-tic.es/algunas-peliculas-y-series-sobre-informatica-y-ordenadores/">Algunas películas y series sobre informática y ordenadores</a></li>
<li><a href="http://www.proyecto-tic.es/algunas-novelas-sobre-informatica-y-hackers/">Algunas novelas sobre informática y hackers</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/</id>
        <title>El buscador que respeta tu privacidad, DuckDuckGo</title>
        <updated>2017-12-07T12:30:00+01:00</updated>
        <published>2017-12-06T12:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/duckduckgo.svg" width="200" height="199" alt="DuckDuckGo" title="DuckDuckGo"  class=""></p>
</div>
<p>En la <abbr title="World Wide Web">WWW</abbr> o simplemente en la web hay una cantidad ingente de información y conocimiento distribuido entre los millones de computadoras interconectados por internet. La creación de la WWW por <a href="https://en.wikipedia.org/wiki/Tim_Berners-Lee">Tim_Berners-Lee</a> en 1989, hace no tanto, y su crecimiento exponencial desde entonces ha hecho que se haya convertido en uno de los recipientes de conocimiento más importantes de la humanidad. La información o conocimiento está ahí, la dificultad radica en que buscar y como encontrarla. Para atender a la necesidad de encontrar la información se han creado los buscadores, a día de hoy el más popular es <a href="https://www.google.es/">Google</a> pero hay otros como <a href="https://www.bing.com/">Bing</a>, <a href="https://www.yahoo.com/">Yahoo</a> o con cierta popularidad en algunas regiones como <a href="https://www.yandex.ru/">Yandex</a> en Rusia o <a href="https://www.baidu.com/">Baidu</a> en China.</p>
<p>Uno de los buscadores que está ganando popularidad es <a href="https://duckduckgo.com/">DuckDuckGo</a> ya que al contrario que otros <a href="https://duckduckgo.com/privacy">respeta la privacidad</a> de los usuarios no rastreando al usuario, no compartiendo las búsquedas realizadas o el historial de búsquedas y no guardando información personal. Pero también porque tiene algunas características únicas como los <a href="https://duckduckgo.com/bang">bang!</a> además de ofrecer una lista de resultados apropiada y relevante a lo que el usuario está buscando. También en cierta medida se puede <a href="https://duckduckgo.com/settings">personalizar el buscador</a> cambiando la apariencia, algunas opciones de privacidad y opciones generales en los resultados de búsqueda. En la siguiente página pueden <a href="https://tosdr.org/">comparar los términos de servicio de los principales proveedores de internet</a> de forma simple y resumida, entre ellos los <a href="https://tosdr.org/#google">términos de servicio de Google</a> y los <a href="https://tosdr.org/#duckduckgo">términos de servicio de DuckDuckGo</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo_hub9b4239670ec28b239d169b3284c6a30_26709_2560x1440_fit_box_3.png" data-gallery="" title="DuckDuckGo"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo_hub9b4239670ec28b239d169b3284c6a30_26709_300x200_fit_box_3.png" width="300" height="170" alt="DuckDuckGo" title="DuckDuckGo"  class="lozad "></a></p>
<figcaption>DuckDuckGo</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo-1_hu3cf5af135da4ed59f113fef2c29bb2e2_57515_2560x1440_fit_box_3.png" data-gallery="" title="No guardamos tu información personal"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo-1_hu3cf5af135da4ed59f113fef2c29bb2e2_57515_300x200_fit_box_3.png" width="300" height="170" alt="No guardamos tu información personal" title="No guardamos tu información personal"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo-2_hu7f1d210cb79e9c6e4344516dfa70c62e_56148_2560x1440_fit_box_3.png" data-gallery="" title="Nosotros no te perseguimos con anuncios"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo-2_hu7f1d210cb79e9c6e4344516dfa70c62e_56148_300x200_fit_box_3.png" width="300" height="170" alt="Nosotros no te perseguimos con anuncios" title="Nosotros no te perseguimos con anuncios"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo-3_hu36809bd8c5b39a451bf6ca3e47a700d6_47197_2560x1440_fit_box_3.png" data-gallery="" title="No rastreamos tu información"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo-3_hu36809bd8c5b39a451bf6ca3e47a700d6_47197_300x200_fit_box_3.png" width="300" height="170" alt="No rastreamos tu información" title="No rastreamos tu información"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo-4_hu07bb08a296d45bcf025a23d3e39723ba_39006_2560x1440_fit_box_3.png" data-gallery="" title="Cámbiate a DuckDuckGo"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/duckduckgo-4_hu07bb08a296d45bcf025a23d3e39723ba_39006_300x200_fit_box_3.png" width="300" height="170" alt="Cámbiate a DuckDuckGo" title="Cámbiate a DuckDuckGo"  class="lozad "></a></p>
<figcaption>Privacidad de DuckDuckGo</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/resultados_hub1dec5ad4be8c53fba32145906c7d7ae_79727_2560x1440_fit_box_3.png" data-gallery="" title="Resultados"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/resultados_hub1dec5ad4be8c53fba32145906c7d7ae_79727_300x200_fit_box_3.png" width="249" height="200" alt="Resultados" title="Resultados"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/resultados-imagenes_hu48ac9871f0c513031a11726836826706_806971_2560x1440_fit_box_3.png" data-gallery="" title="Resultados de imágenes"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/resultados-imagenes_hu48ac9871f0c513031a11726836826706_806971_300x200_fit_box_3.png" width="249" height="200" alt="Resultados de imágenes" title="Resultados de imágenes"  class="lozad "></a></p>
<figcaption>Resultados de DuckDuckGo</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/opciones-general_hu14f0a121b73053172797688c979e9e3a_138931_2560x1440_fit_box_3.png" data-gallery="" title="Opciones general"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/opciones-general_hu14f0a121b73053172797688c979e9e3a_138931_300x200_fit_box_3.png" width="96" height="200" alt="Opciones general" title="Opciones general"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/opciones-diseno_hu40c0334144b59f99598c2196b833f052_137221_2560x1440_fit_box_3.png" data-gallery="" title="Opciones diseño"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/opciones-diseno_hu40c0334144b59f99598c2196b833f052_137221_300x200_fit_box_3.png" width="249" height="200" alt="Opciones diseño" title="Opciones diseño"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/opciones-apariencia_hu3c8a5c385daf5755473dc44ef7a28b1d_139231_2560x1440_fit_box_3.png" data-gallery="" title="Opciones apariencia"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/opciones-apariencia_hu3c8a5c385daf5755473dc44ef7a28b1d_139231_300x200_fit_box_3.png" width="91" height="200" alt="Opciones apariencia" title="Opciones apariencia"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/opciones-privacidad_hu32acf0ec29e64ef4a69e3359d6194f76_62712_2560x1440_fit_box_3.png" data-gallery="" title="Opciones privacidad"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/opciones-privacidad_hu32acf0ec29e64ef4a69e3359d6194f76_62712_300x200_fit_box_3.png" width="249" height="200" alt="Opciones privacidad" title="Opciones privacidad"  class="lozad "></a></p>
<figcaption>Opciones de DuckDuckGo</figcaption>
</figure>
</div>
<p>DuckDuckGo es una empresa con ánimo de lucro pero lo hace respetando la privacidad de sus usuarios. Usa varias formas para ganar dinero, una de ellas es mediante enlaces de afiliación de páginas como <a href="https://amzn.to/2flFhHA">Amazon</a> o <a href="https://www.ebay.es/">eBay</a> con los que si el hace una compra DuckDuckGo obtiene una pequeña comisión, también mostrando en la página de resultados algunos enlaces de publicidad relevantes según la búsqueda realizada.</p>
<p>Los <em>bang!</em> permiten hacer búsquedas en otros sitios directamente desde DuckDuckGo, es muy útil ya que la lista de resultados la proporciona el sitio asociado al <em>bang</em> evitando tener que hacer clic en una página de resultados del buscador para ir al sitio como ocurren en el buscador de Google si queremos buscar un vídeo en <a href="https://www.youtube.com/">YouTube</a>. La sintaxis para hacer una búsqueda de un vídeo en YouTube es <em>!yt gnu linux</em>. <em>!yt</em> sería el <em>bang</em> denominándose así por la exclamación al inicio (o final) de la palabra asociada al sitio al que se redirigirá la búsqueda. DuckDuckGo tiene unos cuantos miles de <a href="https://duckduckgo.com/bang"><em>bangs</em> registrados</a> en varias categorías entre los que está incluidos los más populares. <em>!g</em> es para el buscador de Google que se puede utilizar en caso de que los resultados de DuckDuckGo no nos gusten. Otros son !twitch, !tpb (the pirate bay), !ames (amazon), !so (stackoverflow), !ebay, &hellip;</p>
<p>Para hacer búsquedas efectivas y encontrar la información que se desea es muy útil conocer la <a href="https://duck.co/help/results/syntax">sintaxis del buscador DuckDuckGo</a>. Por ejemplo, se puede utilizar una \ al inicio para ir directamente al primer resultado sin pasar por la página de resultados. Utilizar los <em>bang!</em>. Utilizar expresiones <em>and</em> y <em>or</em>. Encontrar páginas que no tienen un determinado término precediéndolo con un <em>-</em>. Buscar en un determinado sitio con <em>site:picodotdev.github.io</em>, en una determinada región con <em>region:</em> o <em>r:</em>. O hacer búsquedas en el título de la página con <em>intitle:</em> o de forma abreviada <em>t:</em> o por tipo de archivo con <em>filetype:</em> o <em>f:</em> como podría ser <em>pdf</em>, <em>txt</em>, <em>doc</em>, <em>docx</em>, <em>xls</em>, <em>xlsx</em>, <em>ppt</em>, <em>pptx</em> o <em>torrent</em> o en el cuerpo de la página con <em>inbody:</em> o <em>b:</em>.</p>
<p>Firefox tiene la opción de convertir DuckDuckGo en el buscador predeterminado en el apartado de <em>Preferencias</em> y sección <em>Buscar</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/firefox-duckduckgo_hudcc2c21306183f366a6f97533981d1ea_65357_2560x1440_fit_box_3.png" data-gallery="" title="Preferencias de buscadores en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/images/firefox-duckduckgo_hudcc2c21306183f366a6f97533981d1ea_65357_300x200_fit_box_3.png" width="238" height="200" alt="Preferencias de buscadores en Firefox" title="Preferencias de buscadores en Firefox"  class="lozad "></a></p>
<figcaption>Preferencias de buscadores en Firefox</figcaption>
</figure>
</div>
<p>También se pueden hacer búsquedas de imágenes, vídeos o noticias. Los resultados que ofrece DuckDuckGo son bastante buenos, sino mejores que los de Google, y en los casos que no acierte se puede buscar con <em>!g</em> en Google. Desde hace mucho tiempo DuckDuckGo es el único buscador que uso, #ComeToTheDuckSide.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/12/definir-nuevos-tipos-de-datos-escalares-en-graphql/</id>
        <title>Definir nuevos tipos de datos escalares en GraphQL</title>
        <updated>2020-08-22T21:00:00+02:00</updated>
        <published>2017-12-01T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/12/definir-nuevos-tipos-de-datos-escalares-en-graphql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/graphql.svg" width="200" height="200" alt="GraphQL" title="GraphQL"  class=""></p>
</div>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/11/que-es-graphql-y-ejemplo-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/">GraphQL es una alternativa a una interfaz REST</a> con las ventajas de permitir al consumidor obtener únicamente los datos que requiere y realizar varias consultas en una misma petición.</p>
<p><a href="https://graphql.org/">GraphQL</a> por defecto soporta un conjunto de tipos escalares en los datos entre los que están varios numéricos, cadenas, booleanos, enumerados además de los tipos o estructuras de datos definidos en la interfaz del servicio. Sin embargo, si es necesario es posible definir nuevos tipos de datos escalares como podría ser el caso de un tipo de dato para representar una fecha y otro de importe monetario.</p>
<p>El objeto en Java que representa una fecha con Java 8 sería <a href="https://docs.oracle.com/javase/9/docs/api/java/time/LocalDate.html">LocalDate</a> y la clase para el importe monetario podría ser un <a href="https://docs.oracle.com/javase/9/docs/api/java/math/BigDecimal.html">BigDecimal</a> o alguna de <a href="https://picodotdev.github.io/blog-bitix/2015/07/como-trabajar-con-importes-ratios-y-divisas-en-java/">la librería JavaMoney</a>.</p>
<p>Para que GraphQL soporte un nuevo tipo de dato escalar es necesario implementar una clase que realice la conversión. Esta clase se encarga de realizar la conversión entre el escalar añadido a una representación a devolver en las respuestas de las peticiones y la conversión entre la representación en consultas al tipo de dato hay que proporcionar al servicio. La clase debe implementar la interfaz <a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/schema/Coercing.java">Coercing</a> y construyendo un objeto <a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/schema/GraphQLScalarType.java">GraphQLScalarType</a> proporcionárselo a GraphQL en la definición del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LocalDateCoercing</span> <span class="kd">implements</span> <span class="n">Coercing</span><span class="o">&lt;</span><span class="n">LocalDate</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DateTimeFormatter</span> <span class="n">formatter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LocalDateCoercing</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_DATE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LocalDateCoercing</span><span class="o">(</span><span class="n">DateTimeFormatter</span> <span class="n">formatter</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">formatter</span> <span class="o">=</span> <span class="n">formatter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">serialize</span><span class="o">(</span><span class="n">Object</span> <span class="n">dataFetcherResult</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LocalDate</span> <span class="n">date</span> <span class="o">=</span> <span class="o">(</span><span class="n">LocalDate</span><span class="o">)</span> <span class="n">dataFetcherResult</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">date</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">formatter</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">CoercingSerializeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LocalDate</span> <span class="nf">parseValue</span><span class="o">(</span><span class="n">Object</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">parse</span><span class="o">(</span><span class="n">input</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LocalDate</span> <span class="nf">parseLiteral</span><span class="o">(</span><span class="n">Object</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">parse</span><span class="o">(</span><span class="n">input</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LocalDate</span> <span class="nf">parse</span><span class="o">(</span><span class="n">Object</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">input</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">string</span><span class="o">,</span> <span class="n">formatter</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">CoercingParseValueException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LocalDateCoercing.java</span>
    </div>
</div>
<p>Al definir el esquema se proporciona con el método <em>scalars</em> una lista con los tipos de datos escalares adicionales, en este caso una instancia de <em>GraphQLScalarType</em> con una instancia de <em>LocalDateCoercing</em>. Además en el descriptor del esquema hay que declarar el nuevo escalar con la palabra clave <em>scalar</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LibraryRepository</span> <span class="nf">buildLibraryRepository</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">LibraryRepository</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLSchema</span> <span class="nf">graphQLSchema</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">SchemaParser</span><span class="o">.</span><span class="na">newParser</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">schemaString</span><span class="o">(</span><span class="n">IOUtils</span><span class="o">.</span><span class="na">resourceToString</span><span class="o">(</span><span class="s">&#34;/library.graphqls&#34;</span><span class="o">,</span> <span class="n">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;UTF-8&#34;</span><span class="o">)))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">resolvers</span><span class="o">(</span><span class="k">new</span> <span class="n">Query</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">),</span> <span class="k">new</span> <span class="n">Mutation</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">),</span> <span class="k">new</span> <span class="n">BookResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">),</span> <span class="k">new</span> <span class="n">MagazineResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">scalars</span><span class="o">(</span><span class="n">GraphQLScalarType</span><span class="o">.</span><span class="na">newScalar</span><span class="o">().</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;Long&#34;</span><span class="o">).</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;Long scalar&#34;</span><span class="o">).</span><span class="na">coercing</span><span class="o">(</span><span class="k">new</span> <span class="n">LongCoercing</span><span class="o">()).</span><span class="na">build</span><span class="o">(),</span> <span class="n">GraphQLScalarType</span><span class="o">.</span><span class="na">newScalar</span><span class="o">().</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;LocalDate&#34;</span><span class="o">).</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;LocalDate scalar&#34;</span><span class="o">).</span><span class="na">coercing</span><span class="o">(</span><span class="k">new</span> <span class="n">LocalDateCoercing</span><span class="o">()).</span><span class="na">build</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">dictionary</span><span class="o">(</span><span class="n">Magazine</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">makeExecutableSchema</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="line"><span class="cl"><span class="kd">scalar</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">scalar</span><span class="w"> </span><span class="nc">LocalDate</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">date</span><span class="p">:</span><span class="w"> </span><span class="nc">LocalDate</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">comments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">batchedComments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">...</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.repository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LibraryRepository</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">sequence</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">comments</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Author</span><span class="o">&gt;</span> <span class="n">authors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Magazine</span><span class="o">&gt;</span> <span class="n">magazines</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LibraryRepository</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">sequence</span> <span class="o">=</span> <span class="n">0l</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">comments</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Philip K. Dick&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;George R. R. Martin&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Umberto Eco&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Andreas Eschbach&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ernest Cline&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a6</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Anónimo&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">a1</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">a6</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LongStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">10</span><span class="o">).</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span> <span class="o">-&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Comment</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="s">&#34;Comment &#34;</span> <span class="o">+</span> <span class="n">i</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ojo en el cielo&#34;</span><span class="o">,</span> <span class="n">a1</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1957</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Muerte de la luz&#34;</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1977</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;El nombre de la rosa&#34;</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1980</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Los tejedores de cabellos&#34;</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1995</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ready Player One&#34;</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">2011</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Muy interesante&#34;</span><span class="o">,</span> <span class="n">65L</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;PC Actual&#34;</span><span class="o">,</span> <span class="n">90L</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LibraryRepository.java</span>
    </div>
</div>
<p>Añadiendo al tipo <em>Book</em> una fecha de publicación usando este nuevo tipo escalar al realizar una consulta y devolver el dato se realiza la conversión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Book{books{title date}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;1957-01-01&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Muerte de la luz&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;1977-01-01&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;El nombre de la rosa&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;1980-01-01&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Los tejedores de cabellos&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;1995-01-01&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;date&#34;</span>: <span class="s2">&#34;2011-01-01&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/</id>
        <title>Paginación usando cursores en GraphQL y Java</title>
        <updated>2020-08-22T21:00:00+02:00</updated>
        <published>2017-11-26T10:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/graphql.svg" width="200" height="200" alt="GraphQL" title="GraphQL"  class=""></p>
</div>
<p>El conjunto de datos de una entidad en algunos casos será grande, miles o cientos de miles de registros, y por tanto no es viable devolverlos todos en una misma consulta por lo que es necesario realizar paginación devolviéndolos en pequeños grupos. La paginación se puede implementar de varias formas, habitualmente con un parámetro que limite el número de elementos a incluir en la página y otro parámetro <em>offset</em> que deseche los primeros elementos hasta el primero deseado. Sin embargo, utilizar los parámetros <em>limit</em> y <em>offset</em> puede producir resultados inesperados si mientras la obtención de una página y la siguiente se insertan nuevos elementos anteriores al <em>offset</em> ocasionando que lo que sería por ejemplo el décimo elemento pase a ser el undécimo.</p>
<p>Si esta situación es importante se suelen utilizar cursores que utilizan un parámetro para indicar el número de elementos a incluir en la página pero en vez de un <em>offset</em> utilizan el identificativo de un registro a partir del cual devolver registros de modo que aunque se inserten registros el primer elemento de la página no cambiará.</p>
<p>En el caso de la <a href="https://graphql.org/learn/pagination/">paginación en GraphQL</a> se proponen varias formas de implementar la paginación, una de ellas los cursores. En la documentación se explica la teoría, para implementarla es necesario <a href="https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/">crear un <em>data fetcher</em> o <em>resolver</em></a> que reciba los parámetros de <em>limit</em> para indicar el número de elementos a devolver en la página y <em>after</em> para indicar a partir de que elemento devolver elementos. También es necesario modificar el esquema de la API para tener en cuenta las nuevas estructuras de datos en las que se devuelven los resultados.</p>
<p>En este ejemplo de una librería para mostrar la paginación he añadido a los libros una lista de comentarios que será en la que soporte paginación. La definición del esquema queda de la siguiente forma siguiendo la <a href="https://facebook.github.io/relay/graphql/connections.htm">especificación de Relay</a> para lo cual se definen los tipos <em>CommentsConnection</em>, <em>CommentEdge</em> (usando <em>generics</em> no sería necesario implementar unas de estas clases por cada entidad paginable) y <em>PageInfo</em>. Los cursores son un dato opaco para el cliente pero que decodificado incluye el identificativo del comentario. La propiedad <em>comments</em> utiliza un <em>resolver</em> con parámetros que se usa para realizar la búsqueda y recuperar los elementos solicitados en la consulta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="line"><span class="cl"><span class="kd">scalar</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">comments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Comment</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">text</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Author</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">input</span><span class="w"> </span><span class="nc">BookFilter</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">edges</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">CommentEdge</span><span class="p">]</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">pageInfo</span><span class="p">:</span><span class="w"> </span><span class="nc">PageInfo</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">CommentEdge</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">node</span><span class="p">:</span><span class="w"> </span><span class="nc">Comment</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">cursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">PageInfo</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">startCursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">endCursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">hasNextPage</span><span class="p">:</span><span class="w"> </span><span class="nc">Boolean</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Query</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">books</span><span class="p">(</span><span class="py">filter</span><span class="p">:</span><span class="w"> </span><span class="nc">BookFilter</span><span class="p">):</span><span class="w"> </span><span class="p">[</span><span class="nc">Book</span><span class="p">]!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">book</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Book</span><span class="p">!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">authors</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Author</span><span class="p">]!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Author</span><span class="p">!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Mutation</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">addBook</span><span class="p">(</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Book</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kd">query</span><span class="p">:</span><span class="w"> </span><span class="nc">Query</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nc">mutation</span><span class="p">:</span><span class="w"> </span><span class="nc">Mutation</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type.CommentEdge</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CommentsConnection</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">CommentEdge</span><span class="o">&gt;</span> <span class="n">edges</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">PageInfo</span> <span class="n">pageInfo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">CommentsConnection</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">edges</span><span class="o">,</span> <span class="n">PageInfo</span> <span class="n">pageInfo</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">edges</span> <span class="o">=</span> <span class="n">edges</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">o</span> <span class="o">-&gt;</span> <span class="k">new</span> <span class="n">CommentEdge</span><span class="o">(</span><span class="n">o</span><span class="o">)).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">pageInfo</span> <span class="o">=</span> <span class="n">pageInfo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">CommentEdge</span><span class="o">&gt;</span> <span class="nf">getEdges</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">edges</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">PageInfo</span> <span class="nf">getPageInfo</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">pageInfo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CommentsConnection.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">graphql.relay.Relay</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CommentEdge</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Comment</span> <span class="n">comment</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">cursor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">CommentEdge</span><span class="o">(</span><span class="n">Comment</span> <span class="n">comment</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">comment</span> <span class="o">=</span> <span class="n">comment</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">cursor</span> <span class="o">=</span> <span class="n">toGlobalId</span><span class="o">(</span><span class="n">comment</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Comment</span> <span class="nf">getNode</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">comment</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCursor</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">cursor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">toGlobalId</span><span class="o">(</span><span class="n">Comment</span> <span class="n">comment</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">Relay</span><span class="o">().</span><span class="na">toGlobalId</span><span class="o">(</span><span class="n">Comment</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">(),</span> <span class="n">comment</span><span class="o">.</span><span class="na">getId</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">Long</span> <span class="nf">fromGlobalId</span><span class="o">(</span><span class="n">String</span> <span class="n">cursor</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">id</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Relay</span><span class="o">().</span><span class="na">fromGlobalId</span><span class="o">(</span><span class="n">cursor</span><span class="o">).</span><span class="na">getId</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CommentEdge.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PageInfo</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">startCursor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">endCursor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">hasNextPage</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">PageInfo</span><span class="o">(</span><span class="n">String</span> <span class="n">startCursor</span><span class="o">,</span> <span class="n">String</span> <span class="n">endCursor</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">hasNextPage</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">startCursor</span> <span class="o">=</span> <span class="n">startCursor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">endCursor</span> <span class="o">=</span> <span class="n">endCursor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">hasNextPage</span> <span class="o">=</span> <span class="n">hasNextPage</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getStartCursor</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">startCursor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getEndCursor</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">endCursor</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isHasNextPage</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">hasNextPage</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PageInfo.java</span>
    </div>
</div>
<p>En el caso del ejemplo los datos se almacenan en unas listas creadas al iniciar la aplicación y la paginación y la obtención de los datos de la página se realiza usando <em>streams</em> y con código Java para implementar la lógica según los parámetros de la paginación en el método <em>findComments</em>. Si los datos estuvieran almacenados en una base de datos relacional o NoSQL se usarían las facilidades de sus lenguajes u operaciones de consulta como sería generar la sentencia SQL apropiada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.repository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LibraryRepository</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">sequence</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">comments</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Author</span><span class="o">&gt;</span> <span class="n">authors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Magazine</span><span class="o">&gt;</span> <span class="n">magazines</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LibraryRepository</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">sequence</span> <span class="o">=</span> <span class="n">0l</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">comments</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Philip K. Dick&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;George R. R. Martin&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Umberto Eco&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Andreas Eschbach&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ernest Cline&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a6</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Anónimo&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">a1</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">a6</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LongStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">10</span><span class="o">).</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span> <span class="o">-&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Comment</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="s">&#34;Comment &#34;</span> <span class="o">+</span> <span class="n">i</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ojo en el cielo&#34;</span><span class="o">,</span> <span class="n">a1</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1957</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Muerte de la luz&#34;</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1977</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;El nombre de la rosa&#34;</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1980</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Los tejedores de cabellos&#34;</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1995</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ready Player One&#34;</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">2011</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Muy interesante&#34;</span><span class="o">,</span> <span class="n">65L</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;PC Actual&#34;</span><span class="o">,</span> <span class="n">90L</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="nf">findComments</span><span class="o">(</span><span class="n">Long</span> <span class="n">idBook</span><span class="o">,</span> <span class="n">Long</span> <span class="n">idAfter</span><span class="o">,</span> <span class="n">Long</span> <span class="n">limit</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Book</span> <span class="n">book</span> <span class="o">=</span> <span class="n">findBook</span><span class="o">(</span><span class="n">idBook</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Stream</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">book</span><span class="o">.</span><span class="na">getComments</span><span class="o">().</span><span class="na">stream</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">idAfter</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">stream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">dropWhile</span><span class="o">(</span><span class="n">b</span> <span class="o">-&gt;</span> <span class="n">idAfter</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">b</span><span class="o">.</span><span class="na">getId</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">idAfter</span><span class="o">)).</span><span class="na">skip</span><span class="o">(</span><span class="n">1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">limit</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">stream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">limit</span><span class="o">(</span><span class="n">limit</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">stream</span><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="nf">nextId</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">++</span><span class="n">sequence</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LibraryRepository.java</span>
    </div>
</div>
<p>Los comentarios se obtienen usando un <em>data fetcher</em> o <em>resolver</em> que si existe para una determinada propiedad tiene precedencia sobre el <em>data fetcher</em> por defecto que en Java obtiene el dato usando la convención de los <em>java beans</em>. En este caso es el <em>resolver</em> <em>BookResolver</em> siendo el método <em>getComments</em> el encargado de recuperar los datos de la propiedad <em>comments</em> cuando se solicite en una consulta de GraphQL, recibe los datos de paginación y delega la búsqueda en el repositorio para que haga la consulta apropiada.</p>
<p>La clase repositorio abstrae al <em>resolver</em> de como o donde están guardados los datos, de esta forma se podría pasar de guardarlos en una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a> a una base de datos <a href="https://www.mongodb.com/">MongoDB</a> sin que el <em>resolver</em> necesite ninguna modificación, también se podría optar por guardar los libros en una base de datos relacional y los comentarios en una base de datos MongoDB. El <em>resolver</em> se encarga de crear las instancias de objetos necesarios de los tipos <em>CommentsConnection</em>, <em>CommentEdge</em> y <em>PageInfo</em> para adaptarlos a las estructuras de datos apropiadas según la especificación de Relay en el servicio de GraphQL.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.resolver</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BookResolver</span> <span class="kd">implements</span> <span class="n">GraphQLResolver</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LibraryRepository</span> <span class="n">libraryRespository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">BookResolver</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRespository</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">libraryRespository</span> <span class="o">=</span> <span class="n">libraryRespository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getIsbn</span><span class="o">(</span><span class="n">Book</span> <span class="n">book</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Getting ISBN %d...&#34;</span><span class="o">,</span> <span class="n">book</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">3000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;ok%n&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">CommentsConnection</span> <span class="nf">getComments</span><span class="o">(</span><span class="n">Book</span> <span class="n">book</span><span class="o">,</span> <span class="n">String</span> <span class="n">after</span><span class="o">,</span> <span class="n">Long</span> <span class="n">limit</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Long</span> <span class="n">idAfter</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Long</span> <span class="n">limitPlusOne</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">after</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">idAfter</span> <span class="o">=</span> <span class="n">CommentEdge</span><span class="o">.</span><span class="na">fromGlobalId</span><span class="o">(</span><span class="n">after</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">limit</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">limit</span> <span class="o">&lt;</span> <span class="n">Long</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">limitPlusOne</span> <span class="o">=</span> <span class="n">limit</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">commentsPlusOne</span> <span class="o">=</span> <span class="n">libraryRespository</span><span class="o">.</span><span class="na">findComments</span><span class="o">(</span><span class="n">book</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="n">idAfter</span><span class="o">,</span> <span class="n">limitPlusOne</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Stream</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">commentsPlusOne</span><span class="o">.</span><span class="na">stream</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">limit</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">stream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">limit</span><span class="o">(</span><span class="n">limit</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">comments</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comment</span> <span class="n">firstComment</span> <span class="o">=</span> <span class="o">(!</span><span class="n">comments</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">?</span> <span class="n">comments</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">0</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comment</span> <span class="n">lastComment</span> <span class="o">=</span> <span class="o">(!</span><span class="n">comments</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">?</span> <span class="n">comments</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">comments</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="n">1</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">startCursor</span> <span class="o">=</span> <span class="o">(</span><span class="n">firstComment</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="n">CommentEdge</span><span class="o">.</span><span class="na">toGlobalId</span><span class="o">(</span><span class="n">firstComment</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">endCursor</span> <span class="o">=</span> <span class="o">(</span><span class="n">lastComment</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="n">CommentEdge</span><span class="o">.</span><span class="na">toGlobalId</span><span class="o">(</span><span class="n">lastComment</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">boolean</span> <span class="n">hasNextPage</span> <span class="o">=</span> <span class="n">commentsPlusOne</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">comments</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">CommentsConnection</span><span class="o">(</span><span class="n">comments</span><span class="o">,</span> <span class="k">new</span> <span class="n">PageInfo</span><span class="o">(</span><span class="n">startCursor</span><span class="o">,</span> <span class="n">endCursor</span><span class="o">,</span> <span class="n">hasNextPage</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BookResolver.java</span>
    </div>
</div>
<p>Una vez implementada la paginación en los comentarios con la siguientes consultas se obtiene un libro usando una <a href="https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/">consulta con un filtro</a> todos sus comentarios, los 3 primeros comentarios usando el parámetro <em>limit</em> y los siguientes tres comentarios a partir del tercero usando los parámetros <em>limit</em> y <em>after</em>. Obteniendo como respuesta un libro con únicamente los comentarios deseados. Cada elemento en el resultado contiene los datos solicitados junto con el valor del cursor que identifica al comentario además de incluir una estructura de datos <em>pageInfo</em> con información sobre la paginación.</p>
<p>Con el valor del cursor indicado en <em>pageInfo</em> en la propiedad <em>endCursor</em> se podría obtener la siguiente página de comentarios realizando otra consulta e indicándolo en el parámetro <em>after</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books(filter:{title:\&#34;^Ready.*\&#34;}){title comments{edges{node{text}cursor} pageInfo{startCursor endCursor hasNextPage}}}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;comments&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;edges&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 1&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDox&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 2&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoy&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 3&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoz&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 4&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 5&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo1&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 6&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo2&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 7&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo3&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 8&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo4&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 9&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo5&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;pageInfo&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;startCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDox&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;endCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo5&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hasNextPage&#34;</span>: <span class="nb">false</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books(filter:{title:\&#34;^Ready.*\&#34;}){title comments(limit:3){edges{node{text}cursor} pageInfo{startCursor endCursor hasNextPage}}}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;comments&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;edges&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 1&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDox&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 2&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoy&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 3&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoz&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;pageInfo&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;startCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDox&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;endCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoz&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hasNextPage&#34;</span>: <span class="nb">true</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-2.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books(filter:{title:\&#34;^Ready.*\&#34;}){title comments(limit:3,after:\&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDoz\&#34;){edges{node{text}cursor} pageInfo{startCursor endCursor hasNextPage}}}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;comments&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;edges&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 4&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 5&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo1&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;node&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;text&#34;</span>: <span class="s2">&#34;Comment 6&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;cursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo2&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">]</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;pageInfo&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;startCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo0&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;endCursor&#34;</span>: <span class="s2">&#34;aW8uZ2l0aHViLnBpY29kb3RkZXYuYmxvZ2JpdGl4LmdyYXBocWwuQ29tbWVudDo2&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hasNextPage&#34;</span>: <span class="nb">true</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-3.sh</span>
    </div>
</div>
<p>Los cursores tiene la ventaja de que son opacos por lo que se evita que los clientes dependan de identificativos y podrían cambiarse sin que los clientes necesitasen modificaciones. Otra ventaja es que la especificación de Relay propone un marco y unas convenciones para estandarizar la paginación. Sin embargo, esta solo es una forma de hacer paginación y es perfectamente posible usar cualquier otra para adaptarla a las necesidades que haya por ejemplo añadiendo más datos a <em>pageInfo</em> o con más u otros parámetros para realizar la consulta de paginación.</p>
<p>Pero&hellip; en este ejemplo por cada libro que se devuelve como resultado en la consulta se realiza una búsqueda de los comentarios ya que las propiedades de resultado en la consulta se recuperan una a una. Para la mayoría de propiedades esto no es problema ya que son propiedades que están en un objeto que no realizan consultas a una base de datos pero en el caso de los comentarios sí. Si se devolviesen muchos libros se realizaría una consulta para cada uno de ellos lo que no es eficiente. Si se devolviesen 500 libros y sus comentarios se realizarían 500 consultas para obtener los comentarios de cada libro, usando una base de datos relacional serían 1+500 consultas SQL por cada petición a GraphQL, 1 para obtener los libros y 500 para los comentarios. Como solución a este problema está la funcionalidad de <em>batching</em> de GraphQL que permite obtener todos los comentarios de los libros en una única consulta, será tema para otro de los siguientes artículos de esta serie sobre GraphQL.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/</id>
        <title>Consultas con parámetros para filtrar datos en GraphQL</title>
        <updated>2019-06-15T01:10:00+02:00</updated>
        <published>2017-11-25T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/11/consultas-con-parametros-para-filtrar-datos-en-graphql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/graphql.svg" width="200" height="200" alt="GraphQL" title="GraphQL"  class=""></p>
</div>
<p>No será extraño que en una API para obtener datos esté la necesidad de realizar algún tipo de filtrado para recuperar únicamente la colección de datos deseados de todos los existentes en un repositorio. A las consultas de <a href="https://graphql.org/">GraphQL</a> se les pueden pasar argumentos que son recibidos por los métodos que actúan como punto de entrada de las consultas. Con los argumentos es posible implementar cualquier funcionalidad que se necesite, entre ellas el filtrado. Los argumentos pueden ser datos escalares o más complejos que se definen con la palabra reservada <em>input</em> en el esquema.</p>
<p>Usando el mismo ejemplo que he utilizado en artículos anteriores ahora en este caso implemento la funcionalidad de poder filtrar los libros de una biblioteca utilizando una expresión regular que el título del libro debe cumplir para obtenerse como resultado. El esquema del <em>endpoint</em> de GraphQL queda de la siguiente forma para implementar el filtrado, usando el tipo definido con <em>input</em> es posible pasar como argumentos datos complejos o agrupaciones de datos escalares.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="line"><span class="cl"><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">comments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">...</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">input</span><span class="w"> </span><span class="nc">BookFilter</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">...</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Query</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">books</span><span class="p">(</span><span class="py">filter</span><span class="p">:</span><span class="w"> </span><span class="nc">BookFilter</span><span class="p">):</span><span class="w"> </span><span class="p">[</span><span class="nc">Book</span><span class="p">]!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">book</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Book</span><span class="p">!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">authors</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Author</span><span class="p">]!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Author</span><span class="p">!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Mutation</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">addBook</span><span class="p">(</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Book</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kd">query</span><span class="p">:</span><span class="w"> </span><span class="nc">Query</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nc">mutation</span><span class="p">:</span><span class="w"> </span><span class="nc">Mutation</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<p>La implementación del tipo <em>BookFilter</em> en la implementación de Java de GraphQL es una <em>Java Bean</em> con una propiedad por cada argumento y sus correspondientes métodos <em>set</em> y <em>get</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BookFilter</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">title</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getTitle</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">title</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTitle</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BookFilter.java</span>
    </div>
</div>
<p>La clase <em>Query</em> es el punto de entrada a las consultas raíz y posee un método con el mimo nombre que la consulta solicitada en GraphQL y que en este caso es <em>findBooks</em> que recibe como argumento una instancia del objeto <em>BookFilter</em> que a su vez se lo proporciona al servicio de repositorio independiente de GraphQL para que haga la búsqueda adecuada según corresponda en el sistema de persistencia empleado. En el caso que los datos se guarden en una base de datos relacional posiblemente el filtrado se realiza ejecutando una sentencia SQL. En el caso del ejemplo como los datos están en una colección de una estructura de datos Java el filtrado se realiza usando los <em>streams</em>, expresiones regulares y código Java.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.resolver</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Query</span> <span class="kd">implements</span> <span class="n">GraphQLQueryResolver</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Query</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">libraryRepository</span> <span class="o">=</span> <span class="n">libraryRepository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="nf">books</span><span class="o">(</span><span class="n">BookFilter</span> <span class="n">filter</span><span class="o">,</span> <span class="n">DataFetchingEnvironment</span> <span class="n">environment</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span> <span class="o">=</span> <span class="n">libraryRepository</span><span class="o">.</span><span class="na">findBooks</span><span class="o">(</span><span class="n">filter</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">GraphQLContext</span> <span class="n">context</span> <span class="o">=</span> <span class="n">environment</span><span class="o">.</span><span class="na">getGraphQlContext</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">books</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Query.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.repository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LibraryRepository</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">sequence</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Comment</span><span class="o">&gt;</span> <span class="n">comments</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Author</span><span class="o">&gt;</span> <span class="n">authors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Magazine</span><span class="o">&gt;</span> <span class="n">magazines</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">LibraryRepository</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">sequence</span> <span class="o">=</span> <span class="n">0l</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">comments</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Philip K. Dick&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;George R. R. Martin&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Umberto Eco&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Andreas Eschbach&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ernest Cline&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Author</span> <span class="n">a6</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Author</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Anónimo&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">authors</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">a1</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">a6</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LongStream</span><span class="o">.</span><span class="na">range</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">10</span><span class="o">).</span><span class="na">forEach</span><span class="o">(</span><span class="n">i</span> <span class="o">-&gt;</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Comment</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="s">&#34;Comment &#34;</span> <span class="o">+</span> <span class="n">i</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">books</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ojo en el cielo&#34;</span><span class="o">,</span> <span class="n">a1</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1957</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Muerte de la luz&#34;</span><span class="o">,</span> <span class="n">a2</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1977</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;El nombre de la rosa&#34;</span><span class="o">,</span> <span class="n">a3</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1980</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Los tejedores de cabellos&#34;</span><span class="o">,</span> <span class="n">a4</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">1995</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Book</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Ready Player One&#34;</span><span class="o">,</span> <span class="n">a5</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">2011</span><span class="o">,</span> <span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span> <span class="k">this</span><span class="o">.</span><span class="na">comments</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">magazines</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;Muy interesante&#34;</span><span class="o">,</span> <span class="n">65L</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Magazine</span><span class="o">(</span><span class="n">nextId</span><span class="o">(),</span> <span class="s">&#34;PC Actual&#34;</span><span class="o">,</span> <span class="n">90L</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Book</span> <span class="nf">findBook</span><span class="o">(</span><span class="n">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">books</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">b</span> <span class="o">-&gt;</span> <span class="n">b</span><span class="o">.</span><span class="na">getId</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">id</span><span class="o">)).</span><span class="na">findFirst</span><span class="o">().</span><span class="na">orElse</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="nf">findBooks</span><span class="o">(</span><span class="n">BookFilter</span> <span class="n">filter</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Stream</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">stream</span> <span class="o">=</span> <span class="n">books</span><span class="o">.</span><span class="na">stream</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">filter</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">stream</span> <span class="o">=</span> <span class="n">stream</span><span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">b</span> <span class="o">-&gt;</span> <span class="n">b</span><span class="o">.</span><span class="na">getTitle</span><span class="o">().</span><span class="na">matches</span><span class="o">(</span><span class="n">filter</span><span class="o">.</span><span class="na">getTitle</span><span class="o">()));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">stream</span><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Publication</span><span class="o">&gt;</span> <span class="nf">findPublications</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Publication</span><span class="o">&gt;</span> <span class="n">publications</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">publications</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">books</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">publications</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">magazines</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">publications</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LibraryRepository.java</span>
    </div>
</div>
<p>Siguiendo la idea del ejemplo es posible realizar el filtrado de los datos con los argumentos que sean necesarios y la lógica adecuada según el repositorio donde estén almacenados los datos ya sea en un sistema con una base de datos relacional como <a href="https://www.postgresql.org/">PostgreSQL</a> o NoSQL como <a href="https://www.mongodb.com/">MongoDB</a>. Se podrían añadir más datos por ejemplo para filtrar por otros criterios como el número de páginas, autor o incluir otros parámetros para realizar otras funciones como especificar criterios de ordenación.</p>
<p>Esta petición busca los libros que su título comience por las letras <em>O</em> o <em>R</em> obteniendo dos coincidencias como resultado. En este caso entre los datos solo se devuelve el título del libro pero perfectamente podrían haber sido cualesquiera otros de entre los que posee el tipo <em>Book</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books(filter:{title:\&#34;^[OR].*\&#34;}){title}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>Pero&hellip; ¿que ocurre si aún con el filtrado o en una consulta el número de coincidencias son unos cuantos miles? Seguramente sean demasiadas coincidencias para devolver en una única petición y por ello es habitual <a href="https://picodotdev.github.io/blog-bitix/2017/11/paginacion-usando-cursores-en-graphql-y-java/">realizar paginación en GraphQL</a>. Eso será tema para otro de los siguientes artículos de esta serie sobre GraphQL.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/</id>
        <title>Usar un resolver para recuperar propiedades en GraphQL</title>
        <updated>2020-08-22T21:00:00+02:00</updated>
        <published>2017-11-18T10:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/11/usar-un-resolver-para-recuperar-propiedades-en-graphql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/graphql.svg" width="200" height="200" alt="GraphQL" title="GraphQL"  class=""></p>
</div>
<p>Cuando en una consulta de <a href="https://graphql.org/">GraphQL</a> se indican las propiedades a devolver GraphQL usa para cada una de ellas lo que en la implementación de Java se llama un <em>resolver</em> y en otras implementaciones <em>data fetcher</em>. En la mayoría de casos las propiedades serán propiedades de un objeto y en estos casos se usará un <em>PropertyDataFetcher</em> usando en Java la convención de los <em>java beans</em> o la clave de un mapa. En el caso de que cierto dato no esté almacenado en el objeto sino en un repositorio externo es necesario usar un <em>resolver</em> para devolver esa propiedad en la consulta.</p>
<p>Por ejemplo, supongamos que en el ejemplo de la librería en el caso de los libros le añadimos un nuevo dato para el ISBN que está almacenado en un sistema externo, en otro repositorio. La nueva definición del esquema quedaría de la siguiente forma, basta con añadir la nueva propiedad al tipo <em>Book</em> y su tipo que será <em>String</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="line"><span class="cl"><span class="kd">scalar</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Author</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Query</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">books</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Book</span><span class="p">]!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">authors</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Author</span><span class="p">]!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Author</span><span class="p">!</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Mutation</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">addBook</span><span class="p">(</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Book</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kd">query</span><span class="p">:</span><span class="w"> </span><span class="nc">Query</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nc">mutation</span><span class="p">:</span><span class="w"> </span><span class="nc">Mutation</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<p>Para que una consulta que recupere el ISBN funcione correctamente es necesario implementar un <em>resolver</em> creando una clase que implemente la interfaz <em>GraphQLResolver&lt;Book&gt;</em> en la que se incluya un método <em>get</em> por cada propiedad del tipo <em>Book</em> que esté almacenada en otro repositorio. Estos métodos <em>get</em> reciben como parámetro el objeto <em>Book</em> a partir del cual como contexto es posible tener los datos del libro del que hay que recuperar el ISBN, posiblemente utilizando su identificativo. En el ejemplo simplemente se devuelve un dato aleatorio pero perfectamente en caso necesario se podría usar un repositorio que lo recupere del sistema de información que lo almacena.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.resolver</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BookResolver</span> <span class="kd">implements</span> <span class="n">GraphQLResolver</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LibraryRepository</span> <span class="n">libraryRespository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">BookResolver</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRespository</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">libraryRespository</span> <span class="o">=</span> <span class="n">libraryRespository</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getIsbn</span><span class="o">(</span><span class="n">Book</span> <span class="n">book</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Getting ISBN %d...&#34;</span><span class="o">,</span> <span class="n">book</span><span class="o">.</span><span class="na">getId</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">3000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;ok%n&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BookResolver.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -XPOST -H <span class="s2">&#34;Content-Type: application/json&#34;</span> -d <span class="s1">&#39;{&#34;query&#34;: &#34;query Books{books{title isbn}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;9664c44a-9b70-4f8e-8db9-960c16bd3d9c&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Muerte de la luz&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;b2cadd23-827c-4057-ae65-e3fbcbafee03&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;El nombre de la rosa&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;57ccc845-8792-40ed-9561-d75070399c8b&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Los tejedores de cabellos&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;f035727e-8a7d-4a34-9604-1f5b22c249a7&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;isbn&#34;</span>: <span class="s2">&#34;40393df6-7bfb-4132-97d4-bd98ebbfd565&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>A la hora de definir el servicio de GraphQL hay que proporcionar el <em>resolver</em> personalizado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LibraryRepository</span> <span class="nf">buildLibraryRepository</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">LibraryRepository</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLSchema</span> <span class="nf">graphQLSchema</span><span class="o">(</span><span class="n">LibraryRepository</span> <span class="n">libraryRepository</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">SchemaParser</span><span class="o">.</span><span class="na">newParser</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">schemaString</span><span class="o">(</span><span class="n">IOUtils</span><span class="o">.</span><span class="na">resourceToString</span><span class="o">(</span><span class="s">&#34;/library.graphqls&#34;</span><span class="o">,</span> <span class="n">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;UTF-8&#34;</span><span class="o">)))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">resolvers</span><span class="o">(</span><span class="k">new</span> <span class="n">Query</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">),</span> <span class="k">new</span> <span class="n">Mutation</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">),</span> <span class="k">new</span> <span class="n">BookResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">),</span> <span class="k">new</span> <span class="n">MagazineResolver</span><span class="o">(</span><span class="n">libraryRepository</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">scalars</span><span class="o">(</span><span class="n">GraphQLScalarType</span><span class="o">.</span><span class="na">newScalar</span><span class="o">().</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;Long&#34;</span><span class="o">).</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;Long scalar&#34;</span><span class="o">).</span><span class="na">coercing</span><span class="o">(</span><span class="k">new</span> <span class="n">LongCoercing</span><span class="o">()).</span><span class="na">build</span><span class="o">(),</span> <span class="n">GraphQLScalarType</span><span class="o">.</span><span class="na">newScalar</span><span class="o">().</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;LocalDate&#34;</span><span class="o">).</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;LocalDate scalar&#34;</span><span class="o">).</span><span class="na">coercing</span><span class="o">(</span><span class="k">new</span> <span class="n">LocalDateCoercing</span><span class="o">()).</span><span class="na">build</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">dictionary</span><span class="o">(</span><span class="n">Magazine</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">makeExecutableSchema</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Los <em>resolvers</em> permiten almacenar la información en dos bases de datos distintas, una podría ser almacenar una información una base de datos relacional, otra información en una base de datos NoSQL, dos bases de datos relacionales distintas o incluso proporcionado por una API distinta. En cualquier caso para el usuario de la API y del servicio es transparente como esté almacenada la información.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://graphql-java.readthedocs.io/en/v5/schema.html">Creating a schema</a></li>
<li><a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/schema/DataFetchingEnvironment.java">DataFetchingEnvironment</a></li>
<li><a href="https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/schema/DataFetcher.java">DataFetcher</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>