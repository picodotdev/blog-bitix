<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2022-12-29T21:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/</id>
        <title>Servidor OAuth, gateway y servicio REST utilizando tokens JWT con Spring</title>
        <updated>2019-02-08T20:00:00+01:00</updated>
        <published>2019-02-08T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Hace unos días encontré un <a href="https://www.idealista.com/labs/blog/spring-framework/autenticando-el-api-de-idealista-hipotecas-con-spring-oauth2-y-zuul/">articulo del blog técnico de los desarrolladores de Idealista</a>. En él comentaban que tenían una API para realizar simulaciones hipotecarias usando <a href="https://spring.io/">Spring</a> como <em>framework</em>, <a href="https://spring.io/projects/spring-security-oauth">Spring Security OAuth</a> como forma de autenticación y autorización y JWT como forma de codificar el <em>token</em> que otorga el servidor OAuth y contiene la información necesaria para que el servidor de recursos permita o no el acceso al recurso que aloja.</p>
<p>Ya había oído mencionar JWT pero este artículo me ha permitido conocer su utilidad, y no es poca. Como se menciona en el artículo JWT tiene la ventaja de que que no es necesario persistirlo en una base de datos y contiene toda la información que el servidor de recursos necesita para realizar la autorización ya que es capaz de cargar con información arbitraria que el servicio desee en el momento de la emisión, la autenticación y comprobación de que ha sido emitido por el servidor OAuth la realiza sabiendo que el <em>token</em> está firmado.</p>
<p>Los <em>tokens</em> son una serie de caracteres aparentemente sin sentido al estar <em>hasheados</em> y firmados con una clave compartida entre servidor OAuth y el servidor de recurso o para mayor seguridad mediante clave privada en el servidor OAuth y su clave pública asociada en el servidor de recursos, con la firma el servidor de recursos el capaz de comprobar la autenticidad del <em>token</em> sin necesidad de comunicarse con él. Los <em>tokens</em> de OAuth son más cortos, los <em>tokens</em> JWT con más largos ya que contienen información adicional. Se componen de tres partes separadas por un punto, una cabecera con el algoritmo <em>hash</em> utilizado y tipo de <em>token</em>, un documento JSON con datos y una firma de verificación.</p>
<p>El hecho de que los <em>tokens</em> JWT no sea necesario persistirlos en base de datos elimina la necesidad de tener su infraestructura, como desventaja es que no es tan fácil de revocar el acceso a un <em>token</em> JWT y por ello se les concede un tiempo de expiración corto. En el articulo se analizaba su infraestructura y hay varios elementos configurables de diferentes formas, son:</p>
<ul>
<li>El servidor OAuth que proporciona los tokens, realiza la autenticación y proporciona las autorizaciones.</li>
<li>El servidor del recurso al que se le envía el <em>token</em>, en base a las autorizaciones otorgadas por el servidor OAuth al token y las autorizaciones necesarias para acceder al recurso concedo o no acceso al recurso.</li>
<li>En el caso de múltiples servicios con múltiples recursos es conveniente un <em>gateway</em> para que sea el punto de entrada de todos los servicios, de esta forma los clientes solo necesitarán conocer el <em>gateway</em> en vez de los múltiples servicios individuales. El <em>gateway</em> se encarga de hacer de <em>proxy</em> en base a información en la petición como ruta, <em>host</em>, parámetros, cabeceras, &hellip; de redirigir la petición al servicio encargado de atenderla y devolver la respuesta. Un ejemplo de <em>gateway</em> es <a href="https://github.com/Netflix/zuul">Zuul</a> como ya he mostrado en el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/">Proxy para microservicios con Spring Cloud Netflix y Zuul</a>.</li>
</ul>
<p>Puede haber más elementos en la infraestructura y quizá sea el caso de un sistema real como sería un servidor de descubrimiento con <a href="https://github.com/Netflix/eureka">Eureka</a> o un servidor de configuración con <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a>, en la <a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">serie de artículos sobre Spring Cloud</a> los muestro. Para este ejemplo obvio estos otros servidores y me centro en los más relacionados con el artículo. Aunque lógicamente son diferentes servicios se puede crear uno que proporcione varios de ellos al mismo tiempo, por ejemplo, un servicio que haga al mismo tiempo de servidor de OAuth y de <em>gateway</em> que es una de las posibles cambios que dejan al final en el artículo de Idealista.</p>
<p>Spring ha creado su propio proyecto de <em>gateway</em> para sustituir a Zuul, <a href="https://spring.io/projects/spring-cloud-gateway">Spring Cloud Gateway</a> y será el que use en este artículo. Soporta <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> 2, <a href="https://projects.spring.io/spring-framework/">Spring Framework</a> 5, coincidencia por cualquier parámetro de la petición, filtros y transformaciones o predicados, el patrón <em>circuit breaker</em>, limitación de peticiones y reescritura de rutas.</p>
<p>Los servicios los mantengo separados ya que al combinarlos pueden surgir problemas de integración al usar diferentes versiones de librerías de Spring aún cuando todos los proyectos son de Spring. Por ejemplo, Spring Cloud Gateway utiliza Spring WebFlux que puede ser diferente del lo que utilice Spring Security OAuth y la integración puede no estar exenta de problemas.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/oauth.svg" width="200" height="200" alt="OAuth" title="OAuth"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/jwt.svg" width="318" height="168" alt="JWT" title="JWT"  class="lozad "></p>
</figure>
</div>
<h3 id="servidor-oauth">Servidor OAuth</h3>
<div class="alert alert-warning">
<p>Spring ha marcado como obsoleta su implementación de servidor OAuth mostrada a continuación y recomienda usar un proveedor alternativo de autenticación como <a href="https://www.keycloak.org/">Keycloak</a> o <a href="https://www.okta.com/">Okta</a> u otros servicios como <a href="https://www.google.es/">Google</a> o <a href="https://github.com/">Github</a>.</p>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</a> muestro un ejemplo con Keycloak y en <a href="https://picodotdev.github.io/blog-bitix/2020/11/autenticacion-con-openid-oauth-en-cualquier-web-con-nginx-y-de-forma-nativa-con-spring-boot/">Autenticación con OpenID/OAuth en cualquier web con Nginx y de forma nativa con Spring Boot</a> como añadir autenticación OAuth a cualquier página web y de forma nativa en una aplicación de Spring Boot.</p>
</div>
<p>Empezando por el servidor OAuth y las dependencias que necesita, son <em>spring-security-oauth2</em> y para generar <em>tokens</em> JWT <em>spring-security-jwt</em>, el resto son dependencias necesarias de Spring Boot</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.0.8.RELEASE&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springoauth.oauth.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-security&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.security:spring-security-jwt:1.0.10.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;javax.xml.bind:jaxb-api:2.3.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.sun.xml.bind:jaxb-impl:2.3.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jaxb:jaxb-runtime:2.3.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;javax.activation:activation:1.1.1&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>oauth/build.gradle</span>
    </div>
</div>
<p>La clase principal de Spring Boot y que inicia la aplicación no tiene nada especial salvo la necesaria anotación <em>@EnableAuthorizationServer</em> para habilitar el servidor OAuth.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springoauth.oauth</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableAuthorizationServer</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>oauth/Main.java</span>
    </div>
</div>
<p>La parte importante está en la clase de configuración. La clase <em>JwtAccessTokenConverter</em> se encarga de codificar el token, la clase <em>TokenStore</em> de generarlos, <em>DefaultTokenServices</em> contiene referencias a ambos, los métodos heredados <em>configure()</em> configuran diferentes aspectos del servicio como los requisitos para acceder a los <em>endpoint</em> para ver el contenido de un <em>token</em> o los clientes OAuth que reconoce. Para cada cliente se necesita proporcionar el identificativo del cliente, su clave privada o <em>secret</em>, identificativo del recurso, que tipos de concesiones, <em>grants</em>, formas o flujos de obtener el <em>token</em>, que autoridades y ámbitos o <em>scopes</em> se le asigna al token.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springoauth.oauth</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Configuration</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableAuthorizationServer</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AuthorizationServerConfiguration</span> <span class="kd">extends</span> <span class="n">AuthorizationServerConfigurerAdapter</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ClientDetailsService</span> <span class="n">clientDetailsService</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DefaultTokenServices</span> <span class="n">tokenServices</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">JwtAccessTokenConverter</span> <span class="nf">tokenConverter</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JwtAccessTokenConverter</span> <span class="n">converter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JwtAccessTokenConverter</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">converter</span><span class="o">.</span><span class="na">setSigningKey</span><span class="o">(</span><span class="s">&#34;1234567890&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">converter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">TokenStore</span> <span class="nf">tokenStore</span><span class="o">(</span><span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">JwtTokenStore</span><span class="o">(</span><span class="n">tokenConverter</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultTokenServices</span> <span class="nf">tokenServices</span><span class="o">(</span><span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">,</span> <span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultTokenServices</span> <span class="n">tokenServices</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTokenServices</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenServices</span><span class="o">.</span><span class="na">setTokenStore</span><span class="o">(</span><span class="n">tokenStore</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenServices</span><span class="o">.</span><span class="na">setTokenEnhancer</span><span class="o">(</span><span class="n">tokenConverter</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">tokenServices</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">TokenStoreUserApprovalHandler</span> <span class="nf">userApprovalHandler</span><span class="o">(</span><span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">,</span> <span class="n">ClientDetailsService</span> <span class="n">clientDetailsService</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TokenStoreUserApprovalHandler</span> <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TokenStoreUserApprovalHandler</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">handler</span><span class="o">.</span><span class="na">setTokenStore</span><span class="o">(</span><span class="n">tokenStore</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">handler</span><span class="o">.</span><span class="na">setRequestFactory</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultOAuth2RequestFactory</span><span class="o">(</span><span class="n">clientDetailsService</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">handler</span><span class="o">.</span><span class="na">setClientDetailsService</span><span class="o">(</span><span class="n">clientDetailsService</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">handler</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ApprovalStore</span> <span class="nf">approvalStore</span><span class="o">(</span><span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TokenApprovalStore</span> <span class="n">store</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TokenApprovalStore</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">store</span><span class="o">.</span><span class="na">setTokenStore</span><span class="o">(</span><span class="n">tokenStore</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">store</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">AuthorizationServerSecurityConfigurer</span> <span class="n">security</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">security</span><span class="o">.</span><span class="na">allowFormAuthenticationForClients</span><span class="o">().</span><span class="na">tokenKeyAccess</span><span class="o">(</span><span class="s">&#34;isAuthenticated()&#34;</span><span class="o">).</span><span class="na">checkTokenAccess</span><span class="o">(</span><span class="s">&#34;isAuthenticated()&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">AuthorizationServerEndpointsConfigurer</span> <span class="n">endpoints</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">endpoints</span><span class="o">.</span><span class="na">tokenServices</span><span class="o">(</span><span class="n">tokenServices</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">ClientDetailsServiceConfigurer</span> <span class="n">clients</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">clients</span><span class="o">.</span><span class="na">inMemory</span><span class="o">().</span><span class="na">withClient</span><span class="o">(</span><span class="s">&#34;client&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">.</span><span class="na">secret</span><span class="o">(</span><span class="s">&#34;{noop}1234567890&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">.</span><span class="na">resourceIds</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">.</span><span class="na">authorizedGrantTypes</span><span class="o">(</span><span class="s">&#34;client_credentials&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">.</span><span class="na">authorities</span><span class="o">(</span><span class="s">&#34;CLIENT&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">.</span><span class="na">scopes</span><span class="o">(</span><span class="s">&#34;read&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>oauth/AuthorizationServerConfiguration.java</span>
    </div>
</div>
<p>El servidor OAuth de ejemplo se inicia con el comando <em>./gradlew oauth:run</em>. Para obtener un <em>token</em> se realiza con las siguientes peticiones. Por defecto, se solicita autenticación <em>basic</em> pero la invocación al método <em>allowFormAuthenticationForClients()</em> hace que los parámetros de las credenciales se puedan indicar por parámetros.</p>
<p>Con el <em>endpoint</em> <em>/oauth/check_token</em> se decodifica el <em>token</em>. En la página de JWT hay una herramienta para decodificar el token y verificar de la firma introduciendo clave de firma en la casilla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -X POST -u <span class="s2">&#34;client:1234567890&#34;</span> -d <span class="s2">&#34;grant_type=client_credentials&#34;</span> <span class="s2">&#34;http://localhost:8095/oauth/token&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;access_token&#34;</span>:<span class="s2">&#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ0MSwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEwMzE0NTk4LTRjZDctNDRmNi1hMmM4LTNjYjA5MGE1MjUxZSIsImNsaWVudF9pZCI6ImNsaWVudCJ9.n8Dwcd8YTms2Hl0YgTho9QdBWD1hAnOEmkcS-Wefy6c&#34;</span>,<span class="s2">&#34;token_type&#34;</span>:<span class="s2">&#34;bearer&#34;</span>,<span class="s2">&#34;expires_in&#34;</span>:43199,<span class="s2">&#34;scope&#34;</span>:<span class="s2">&#34;read&#34;</span>,<span class="s2">&#34;jti&#34;</span>:<span class="s2">&#34;10314598-4cd7-44f6-a2c8-3cb090a5251e&#34;</span><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">$ curl -X POST <span class="s2">&#34;http://localhost:8095/oauth/token?grant_type=client_credentials&amp;client_id=client&amp;client_secret=1234567890&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;access_token&#34;</span>:<span class="s2">&#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&#34;</span>,<span class="s2">&#34;token_type&#34;</span>:<span class="s2">&#34;bearer&#34;</span>,<span class="s2">&#34;expires_in&#34;</span>:43199,<span class="s2">&#34;scope&#34;</span>:<span class="s2">&#34;read&#34;</span>,<span class="s2">&#34;jti&#34;</span>:<span class="s2">&#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&#34;</span><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl -X POST -u <span class="s2">&#34;client:1234567890&#34;</span> -d <span class="s2">&#34;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&#34;</span> http://localhost:8095/oauth/check_token&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;aud&#34;</span>:<span class="o">[</span><span class="s2">&#34;service&#34;</span><span class="o">]</span>,<span class="s2">&#34;scope&#34;</span>:<span class="o">[</span><span class="s2">&#34;read&#34;</span><span class="o">]</span>,<span class="s2">&#34;active&#34;</span>:true,<span class="s2">&#34;exp&#34;</span>:1549692458,<span class="s2">&#34;authorities&#34;</span>:<span class="o">[</span><span class="s2">&#34;CLIENT&#34;</span><span class="o">]</span>,<span class="s2">&#34;jti&#34;</span>:<span class="s2">&#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&#34;</span>,<span class="s2">&#34;client_id&#34;</span>:<span class="s2">&#34;client&#34;</span><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>oauth/curl.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/images/encoded-decoded-jwt_hu1ab378b072a97342bd947994d891fa06_108022_2560x1440_fit_box_3.png" data-gallery="" title="Token JWT codificado y decodificado"><img src="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/images/encoded-decoded-jwt_hu1ab378b072a97342bd947994d891fa06_108022_600x450_fit_box_3.png" width="494" height="450" alt="Token JWT codificado y decodificado" title="Token JWT codificado y decodificado"  class="lozad "></a></p>
<figcaption>Token JWT codificado y decodificado</figcaption>
</figure>
</div>
<h3 id="servidor-gateway">Servidor Gateway</h3>
<p>El servidor <em>gateway</em> en realidad no interviene en la lógica de OAuth porque la autorización se delega en cada servicio que contiene el recurso. Como se indicaba en Idealista estaría bien que el <em>gateway</em> librase de la responsabilidad de autorización a los servicios de los recursos para hacerlos más sencillos, creo que Spring Security en el momento del artículo no está soportado en Spring WebFlux que utiliza el <em>gateway</em>.</p>
<p>Lo único necesario par definir el <em>gateway</em> son las dependencias del proyecto, poco más que <em>spring-cloud-starter-gateway</em>, y la configuración de enrutado que <em>matchea</em> peticiones según el parámetro <em>predicates</em>, reescribe la URL hacia el servicio  según el filtro <em>RewritePath</em> y finalmente redirige la petición a la ubicación del servicio indicada en <em>uri</em>. Se inicia con <em>./gradlew gateway:run</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.0.8.RELEASE&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springoauth.gateway.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-gateway&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gateway/build.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">server.port</span><span class="p">:</span><span class="w"> </span><span class="m">8090</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">gateway</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">routes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">path_route</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">uri</span><span class="p">:</span><span class="w"> </span><span class="l">http://localhost:8080/</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">predicates</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">Path=/service/</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">filters</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">RewritePath=/service/, /</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gateway/application.yml</span>
    </div>
</div>
<h3 id="servicio-servidor-de-recurso">Servicio, servidor de recurso</h3>
<p>Dado que el servicio interpreta los <em>tokens</em> JWT y aplica reglas de seguridad necesita las mismas dependencias que utiliza el servidor OAuth.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.0.8.RELEASE&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springoauth.service.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-security&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-oauth2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.security:spring-security-jwt:1.0.10.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;javax.xml.bind:jaxb-api:2.3.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.sun.xml.bind:jaxb-impl:2.3.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jaxb:jaxb-runtime:2.3.0&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;javax.activation:activation:1.1.1&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service/build.gradle</span>
    </div>
</div>
<p>El recurso es muy simple, solo devuelve un mensaje.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springoauth.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RestController</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (%s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service/DefaultController.java</span>
    </div>
</div>
<p>El servicio comparte configuración similar al servidor de Ouath par el <em>JwtAccessTokenConverter</em>, <em>TokenStore</em> y <em>DefaultTokenServices</em>. En el método configure se define que el <em>endpoint</em> <em>/</em> requiere el rol <em>CLIENT</em> que se obtiene del token JWT enviado. Hay que utilizar la anotación <em>@EnableResourceServer</em>, se inicia con el comando <em>./gradlew service:run</em>.</p>
<p>Hay que recalcar que el servicio para verificar el <em>token</em> y comprobar la autorización no necesita comunicarse con el servidor OAuth toda la información que necesita está en el <em>token</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springoauth.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Configuration</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableResourceServer</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ResourceServerConfiguration</span> <span class="kd">extends</span> <span class="n">ResourceServerConfigurerAdapter</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DefaultTokenServices</span> <span class="n">tokenServices</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">JwtAccessTokenConverter</span> <span class="nf">tokenConverter</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JwtAccessTokenConverter</span> <span class="n">converter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JwtAccessTokenConverter</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">converter</span><span class="o">.</span><span class="na">setSigningKey</span><span class="o">(</span><span class="s">&#34;1234567890&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">converter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">TokenStore</span> <span class="nf">tokenStore</span><span class="o">(</span><span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">JwtTokenStore</span><span class="o">(</span><span class="n">tokenConverter</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultTokenServices</span> <span class="nf">tokenServices</span><span class="o">(</span><span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">,</span> <span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultTokenServices</span> <span class="n">tokenServices</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTokenServices</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenServices</span><span class="o">.</span><span class="na">setTokenStore</span><span class="o">(</span><span class="n">tokenStore</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenServices</span><span class="o">.</span><span class="na">setTokenEnhancer</span><span class="o">(</span><span class="n">tokenConverter</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">tokenServices</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">ResourceServerSecurityConfigurer</span> <span class="n">resources</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">resources</span><span class="o">.</span><span class="na">tokenServices</span><span class="o">(</span><span class="n">tokenServices</span><span class="o">).</span><span class="na">resourceId</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">HttpSecurity</span> <span class="n">http</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">http</span><span class="o">.</span><span class="na">authorizeRequests</span><span class="o">().</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">).</span><span class="na">hasAuthority</span><span class="o">(</span><span class="s">&#34;CLIENT&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service/ResourceServerConfiguration.java</span>
    </div>
</div>
<p>Si no se envía el <em>token</em> JWT se produce un error de autenticación con código de error <em>401 Unauthorized</em>, si se envía un token correcto y la autoridad requerida del recurso la petición se devuelve el mensaje u el código de estado <em>200 OK</em>, si se envía un <em>token</em> JWT con una autoridad que no corresponde con la necesaria para el recurso, en el ejemplo una autoridad <em>DUMMY</em>, se devuelve un código de estado <em>403 Forbbiden</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -v http://localhost:8090/service/&#10;</span></span><span class="line"><span class="cl">*   Trying ::1...&#10;</span></span><span class="line"><span class="cl">* TCP_NODELAY <span class="nb">set</span>&#10;</span></span><span class="line"><span class="cl">* Connected to localhost <span class="o">(</span>::1<span class="o">)</span> port <span class="m">8090</span> <span class="o">(</span><span class="c1">#0)</span>&#10;</span></span><span class="line"><span class="cl">&gt; GET /service/ HTTP/1.1&#10;</span></span><span class="line"><span class="cl">&gt; Host: localhost:8090&#10;</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.63.0&#10;</span></span><span class="line"><span class="cl">&gt; Accept: */*&#10;</span></span><span class="line"><span class="cl">&gt;&#10;</span></span><span class="line"><span class="cl">&lt; HTTP/1.1 <span class="m">401</span> Unauthorized&#10;</span></span><span class="line"><span class="cl">&lt; transfer-encoding: chunked&#10;</span></span><span class="line"><span class="cl">&lt; Cache-Control: no-store&#10;</span></span><span class="line"><span class="cl">&lt; Pragma: no-cache&#10;</span></span><span class="line"><span class="cl">&lt; WWW-Authenticate: Bearer <span class="nv">realm</span><span class="o">=</span><span class="s2">&#34;service&#34;</span>, <span class="nv">error</span><span class="o">=</span><span class="s2">&#34;unauthorized&#34;</span>, <span class="nv">error_description</span><span class="o">=</span><span class="s2">&#34;Full authentication is required to access this resource&#34;</span>&#10;</span></span><span class="line"><span class="cl">&lt; X-Content-Type-Options: nosniff&#10;</span></span><span class="line"><span class="cl">&lt; X-XSS-Protection: 1<span class="p">;</span> <span class="nv">mode</span><span class="o">=</span>block&#10;</span></span><span class="line"><span class="cl">&lt; X-Frame-Options: DENY&#10;</span></span><span class="line"><span class="cl">&lt; Content-Type: application/json<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>UTF-8&#10;</span></span><span class="line"><span class="cl">&lt; Date: Fri, <span class="m">08</span> Feb <span class="m">2019</span> 18:58:03 GMT&#10;</span></span><span class="line"><span class="cl">&lt;&#10;</span></span><span class="line"><span class="cl">* Connection <span class="c1">#0 to host localhost left intact</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;error&#34;</span>:<span class="s2">&#34;unauthorized&#34;</span>,<span class="s2">&#34;error_description&#34;</span>:<span class="s2">&#34;Full authentication is required to access this resource&#34;</span><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl -H <span class="s2">&#34;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&#34;</span> http://localhost:8090/service/&#10;</span></span><span class="line"><span class="cl">Hello world <span class="o">(</span>http://localhost:8080/<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl -X POST -u <span class="s2">&#34;client:1234567890&#34;</span> -d <span class="s2">&#34;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2xpZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc&#34;</span> http://localhost:8095/oauth/check_token&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;aud&#34;</span>:<span class="o">[</span><span class="s2">&#34;service&#34;</span><span class="o">]</span>,<span class="s2">&#34;scope&#34;</span>:<span class="o">[</span><span class="s2">&#34;read&#34;</span><span class="o">]</span>,<span class="s2">&#34;active&#34;</span>:true,<span class="s2">&#34;exp&#34;</span>:1549692458,<span class="s2">&#34;authorities&#34;</span>:<span class="o">[</span><span class="s2">&#34;DUMMY&#34;</span><span class="o">]</span>,<span class="s2">&#34;jti&#34;</span>:<span class="s2">&#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&#34;</span>,<span class="s2">&#34;client_id&#34;</span>:<span class="s2">&#34;client&#34;</span><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">$ curl -v -H <span class="s2">&#34;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2xpZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc&#34;</span> http://localhost:8090/service/&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;error&#34;</span>:<span class="s2">&#34;access_denied&#34;</span>,<span class="s2">&#34;error_description&#34;</span>:<span class="s2">&#34;Access is denied&#34;</span><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">*   Trying ::1...&#10;</span></span><span class="line"><span class="cl">* TCP_NODELAY <span class="nb">set</span>&#10;</span></span><span class="line"><span class="cl">* Connected to localhost <span class="o">(</span>::1<span class="o">)</span> port <span class="m">8090</span> <span class="o">(</span><span class="c1">#0)</span>&#10;</span></span><span class="line"><span class="cl">&gt; GET /service/ HTTP/1.1&#10;</span></span><span class="line"><span class="cl">&gt; Host: localhost:8090&#10;</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.63.0&#10;</span></span><span class="line"><span class="cl">&gt; Accept: */*&#10;</span></span><span class="line"><span class="cl">&gt; Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2x&#10;</span></span><span class="line"><span class="cl">pZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc&#10;</span></span><span class="line"><span class="cl">&gt;&#10;</span></span><span class="line"><span class="cl">&lt; HTTP/1.1 <span class="m">403</span> Forbidden&#10;</span></span><span class="line"><span class="cl">&lt; transfer-encoding: chunked&#10;</span></span><span class="line"><span class="cl">&lt; Cache-Control: no-store&#10;</span></span><span class="line"><span class="cl">&lt; Pragma: no-cache&#10;</span></span><span class="line"><span class="cl">&lt; X-Content-Type-Options: nosniff&#10;</span></span><span class="line"><span class="cl">&lt; X-XSS-Protection: 1<span class="p">;</span> <span class="nv">mode</span><span class="o">=</span>block&#10;</span></span><span class="line"><span class="cl">&lt; X-Frame-Options: DENY&#10;</span></span><span class="line"><span class="cl">&lt; Content-Type: application/json<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>UTF-8&#10;</span></span><span class="line"><span class="cl">&lt; Date: Fri, <span class="m">08</span> Feb <span class="m">2019</span> 19:02:14 GMT&#10;</span></span><span class="line"><span class="cl">&lt;&#10;</span></span><span class="line"><span class="cl">* Connection <span class="c1">#0 to host localhost left intact</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span><span class="s2">&#34;error&#34;</span>:<span class="s2">&#34;access_denied&#34;</span>,<span class="s2">&#34;error_description&#34;</span>:<span class="s2">&#34;Access is denied&#34;</span><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service/curl.sh</span>
    </div>
</div>
<p>Los <em>tokens</em> JWT además de firmar se pueden cifrar, en el ejemplo se usa una conexión no segura con el protocolo HTTP usando una conexión segura HTTPS ya se proporcionaría confidencialidad para los <em>tokens</em> y es lo recomendado.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringOauth">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew oauth:run, ./gradlew gateway:run, ./gradlew service:run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/spring-security-oauth-jwt">Using JWT with Spring Security OAuth</a></li>
<li><a href="http://websystique.com/spring-security/secure-spring-rest-api-using-oauth2/">Secure Spring REST API using OAuth2</a></li>
<li><a href="https://www.devglan.com/spring-security/spring-boot-oauth2-jwt-example">Spring Boot Security OAuth2 Jwt Auth Example</a></li>
<li><a href="https://www.jorgehernandezramirez.com/2017/04/17/spring-boot-oauth-server/">Spring Boot – OAuth Server</a></li>
<li><a href="https://stackoverflow.com/questions/23950068/spring-oauth2-full-authentication-is-required-to-access-this-resource">Spring OAuth2 &ldquo;Full authentication is required to access this resource&rdquo;</a></li>
<li><a href="https://stackoverflow.com/questions/52606720/issue-with-having-multiple-websecurityconfigureradapter-in-spring-boot">Issue with having multiple WebSecurityConfigurerAdapter in spring-boot</a></li>
<li><a href="https://stackoverflow.com/questions/49654143/spring-security-5-there-is-no-passwordencoder-mapped-for-the-id-null">Spring Security 5: There is no PasswordEncoder mapped for the id &ldquo;null&rdquo;</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/02/9-aniversario-del-blog/</id>
        <title>9º aniversario del blog</title>
        <updated>2019-02-05T20:00:00+01:00</updated>
        <published>2019-02-05T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/02/9-aniversario-del-blog/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Ya han pasado nueve años desde que el sábado 6 de febrero del 2010 cree un blog, <a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev</a>, que fue el precedente de <a href="https://picodotdev.github.io/blog-bitix/">Blog Bitix</a> cambio motivado por pasar de <a href="https://www.blogger.com/">Blogger</a> a <a href="http://octopress.org/">Octopress</a> con <a href="https://pages.github.com/">GitHub Pages</a> y posteriormente con <a href="https://gohugo.io/">Hugo</a>.</p>
<p>Dicen que las bitácoras o <em>blogs</em> están en decadencia por las redes sociales como <a href="https://twitter.com/">Twitter</a> u otras formas de compartir contenido como los <em>podcast</em> que son más cálidos por la voz humana que los fríos <em>blogs</em> y vídeos de <a href="https://www.youtube.com/">YouTube</a> dinámicos más útiles en ciertos casos que los estáticos <em>blogs</em>, otras formas son a través de <a href="https://www.linkedin.com/">LinkedIn</a> o <a href="https://www.facebook.com/">Facebook</a>. Sin embargo, y a pesar de todo creo que los <em>blogs</em> son una de las mejores formas de compartir contenido simplemente por el hecho de que es un contenido indexable por los buscadores cosa que ni los <em>podcast</em> ni los vídeos de YouTube cumplen en la misma medida a los cuales se llega por recomendación y no por búsqueda.</p>
<p>En Twitter últimamente se ha puesto de moda escribir mensajes encadenados e hilos, algunos son un contenido muy bueno pero personalmente me gustan poco estos hilos por el simple hecho de la misma naturaleza de Twitter de transmitir la información, no son indexables por los buscadores, tienen un momento de gloria cuando son compartidos con <em>retwets</em> pero al cabo del tiempo se pierden, una pena. <a href="https://www.linkedin.com/">LinkedIn</a> pide registrarse para acceder a su contenido y Facebook ¡no, gracias! por motivos de privacidad. Por ello no he tenido hasta el momento anhelos de compartir el contenido que elaboro en cualquier otro de estos otros formatos.</p>
<p>También han surgido los canales de <a href="https://telegram.org/">Telegram</a> para grupos de usuarios por ejemplo para <a href="https://www.archlinux.org/">Arch Linux</a>, <a href="https://www.gnome.org/">GNOME</a>, <a href="https://www.linux.com/">Linux</a>, &hellip; que ofrecen ayuda sobre estos temas, vamos lo que son los antiguos foros web pero en un formato mucho peor, es muy probable que recurrentemente se pregunte cada cierto tiempo la misma pregunta y las contestaciones no quedan disponibles para otros usuarios en el futuro. Las redes sociales ofrecen inmediatez, mayor disponibilidad con los dispositivos móviles y contacto directo pero como formatos para contenido me parecen un atraso con respecto a la web y los <em>blogs</em>.</p>
<p>Desistid de compartir contenido que debiera perdurar y ser encontrado en las anteriores formas, su éxito se debe a que en ellas están los usuarios, que solo es necesario una cuenta en esos servicios y se obtiene respuesta rápidamente, pero para mí ¡larga vida a la web, HTML, los <em>blogs</em> y a los <em>bloggers</em>!.</p>
<p>Lo que sí podría intentar hacer es escribir artículos en inglés, alguno ya escribí a modo de prueba y es que el público potencial sería todo el mundo en vez de solo los hispanohablantes. Sería una buena forma de que practicase el inglés pero quizá lo determinante es que me requeriría mayor tiempo para escribir el artículo. El público sería mayor pero también hay mucha más competencia al haber más <em>blogs</em> en ese idioma.</p>
<p>Cada letra, cada tilde, cada coma y punto, cada imagen de un artículo está ahí y en la posición en la que está porque así alguien lo quiso e hizo con cada pulsación de tecla y clic de ratón. Uso varias herramientas para publicar el contenido pero no hay ninguna que me ayude a escribir el contenido de los artículos y crear los ejemplos, es todo manual y lleva horas hacerlo, este artículo entre tres y cuatro horas y solo contiene unos pocos párrafos, más de cinco horas los que llevan ejemplo y más aún si tengo que investigar para hacerlo. Múltiplica eso por 380 artículos escritos hasta el momento y 566 sumando los de El blog de pico.dev y da una buena cantidad de horas que no son parte mi trabajo sino simplemente en mi caso un entretenimiento.</p>
<p>En los artículos que escribo no suelo expresar habitualmente mis sentimientos o temas personales cosa que algunos otros <em>bloggers</em> hacen, puede crear un vínculo emocional entre <em>blogger</em> y lectores pero simplemente no es mi forma de escribir contenido. Podría también escribir menos artículos pero más elaborados o de mayor aporte, en buena medida nada de lo que escribo es nada que no se encuentre sin mucha dificultad en otro lado, eso sí si muestro algo de código suelo incluir en <a href="https://github.com/">GitHub</a> el código fuente del ejemplo completo cosa que ya no es tan habitual encontrar.</p>
<p>He llegado al noveno año y con los artículos que tengo escritos en borrador y pendientes de publicar creo que llegaré a la cifra más redonda de la década. <a href="https://picodotdev.github.io/blog-bitix/2019/02/log-de-sqls-y-de-sqls-lentas-en-myql-y-postgresql/">El artículo anterior</a>, el #379 de Blog Bitix lo tenía escrito en borrador desde el año 2016, casi dos años, es un ejemplo del tiempo que tengo algunos sin publicar, si los contabilizo para ser más exacto son 70 artículos que tengo escritos en borrador y pendientes de publicar que es lo que más me exige. Por lo que sí creo que llegaré al año 10 publicando artículos.</p>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/02/log-de-sqls-y-de-sqls-lentas-en-myql-y-postgresql/</id>
        <title>Log de SQLs y de SQLs lentas en MySQL y PostgreSQL</title>
        <updated>2019-02-04T13:00:00+01:00</updated>
        <published>2019-02-04T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/02/log-de-sqls-y-de-sqls-lentas-en-myql-y-postgresql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/mysql.svg" width="300" height="204" alt="MySQL" title="MySQL"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="206" alt="PostgreSQL" title="PostgreSQL"  class=""></p>
</div>
<p>La información generalmente y en la mayoría de los casos es de las cosas más importantes de una aplicación. Para guardarla se suelen emplear bases de datos relacionales por sus propiedades de consistencia, transaccionalidad y propiedades ACID aunque más recientemente se ha popularizado otros sistemas no SQL como <a href="https://redis.io/">Redis</a> o <a href="https://www.mongodb.com/">Mongo</a> para diferentes casos de uso.</p>
<p>Dos de las bases de datos relacionales más usadas son <a href="https://www.postgresql.org/">PostgreSQL</a> y <a href="https://www.mysql.com/">MySQL</a>. El rendimiento de una aplicación en buena parte depende del acceso a la base de datos relacional. Por ello conviene saber cuáles, cuántas consultas se están lanzando al servidor y el tiempo tardan, además suele ser útil monitorizar especialmente las consultas que consideramos lentas al superar cierto umbral de tiempo. Con la información de que consultas, cuantas y las lentas se toman tomar acciones  asegurar el buen funcionamiento del sistema, para mejorar el rendimiento de la aplicación optimizando las consultas lentas u optimizando la aplicación para que realice menos consultas al servidor de base de datos si es que hay un <a href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/">problema de 1+N típico en las librerías ORM como Hibernate</a>.</p>
<p>Que una SQL tarde mucho en ejecutarse y consuma muchos recursos del sistema en CPU o memoria potencialmente es un problema grave que posiblemente afecte a funcionalidades importantes de una aplicación, será más acusado si hay un volumen relevante de usuarios usando el sistema simultáneamente. Las consecuencias van desde la caída del servicio hasta tiempos de respuesta elevados.</p>
<h3 id="mysql">MySQL</h3>
<p>Para activar la generación de logs y de SQLs lentas en MySQL hay que añadir la siguiente configuración a MySQL. Las sentencias lentas que superan cierto tiempo de ejecución son emitidas al archivo <em>mysql-slow.log</em>, según la configuración indicada aquellas que superen 10 segundos. Dado que el ejemplo de consulta es sencilla y la base de datos no es grande la sentencia no aparece en el log de SQLs lentas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">mysql</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">mysql:8</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">./configuration/:/etc/mysql/conf.d</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">./scripts/:/scripts/</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">mysql-data:/var/lib/mysql</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">mysql-log:/var/log/mysql</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">MYSQL_ROOT_PASSWORD</span><span class="p">:</span><span class="w"> </span><span class="l">root</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">MYSQL_DATABASE</span><span class="p">:</span><span class="w"> </span><span class="l">blogbitix</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">entrypoint</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">bash -c &#34;chown -R mysql:mysql /var/log/mysql &amp;&amp; exec /entrypoint.sh mysqld&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">mysql-data</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">mysql-log:</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mysql/docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Ini" data-lang="Ini"><span class="line"><span class="cl"><span class="k">[mysqld]</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">general_log</span><span class="o">=</span><span class="s">1</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">general_log_file</span><span class="o">=</span><span class="s">/var/log/mysql/mysql.log</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="na">slow_query_log</span><span class="o">=</span><span class="s">1</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">long_query_time</span><span class="o">=</span><span class="s">10</span>&#10;</span></span><span class="line"><span class="cl"><span class="na">slow_query_log_file</span><span class="o">=</span><span class="s">/var/log/mysql/mysql-slow.log</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mysql/configuration/mysql.cnf</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Sql" data-lang="Sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="k">IF</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="n">Persons</span><span class="w"> </span><span class="p">(</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">person_id</span><span class="w"> </span><span class="nb">int</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w"> </span><span class="n">AUTO_INCREMENT</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">,</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">last_name</span><span class="w"> </span><span class="nb">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">first_name</span><span class="w"> </span><span class="nb">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">)</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="k">INTO</span><span class="w"> </span><span class="n">Persons</span><span class="w"> </span><span class="p">(</span><span class="n">last_name</span><span class="p">,</span><span class="w"> </span><span class="n">first_name</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 1&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 1&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 2&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 2&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 3&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 3&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 4&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 4&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 5&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 5&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 6&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 6&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 7&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 7&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 8&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 8&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 9&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 9&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 10&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 10&#39;</span><span class="p">);</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mysql/scripts/database.sql</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-compose up&#10;</span></span><span class="line"><span class="cl">$ docker ps&#10;</span></span><span class="line"><span class="cl">CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   NAMES&#10;</span></span><span class="line"><span class="cl">8d7d4953cb39&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql:latest&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;bash -c chown…&#34;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">10</span> seconds ago&nbsp;&nbsp;&nbsp;&nbsp;  Up <span class="m">15</span> seconds&nbsp;&nbsp;&nbsp;&nbsp;   3306/tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msqsql_msqsql_1&#10;</span></span><span class="line"><span class="cl">$ docker <span class="nb">exec</span> -it 8d7d4953cb39 bash&#10;</span></span><span class="line"><span class="cl">root@8d7d4953cb39:/# mysql -uroot -proot blogbitix &lt; /scripts/database.sql&#10;</span></span><span class="line"><span class="cl">root@8d7d4953cb39:/# mysql -uroot -proot&#10;</span></span><span class="line"><span class="cl">mysql&gt; show databases<span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">+--------------------+&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span> Database&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl">+--------------------+&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span> blogbitix&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span> information_schema <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span> mysql&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span> performance_schema <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span> sys&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&#10;</span></span><span class="line"><span class="cl">+--------------------+&#10;</span></span><span class="line"><span class="cl"><span class="m">5</span> rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">mysql&gt; use blogbitix<span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">Database changed&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">mysql&gt; <span class="k">select</span> * from Persons<span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">+-----------+--------------+---------------+&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span> person_id <span class="p">|</span> last_name&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> first_name&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&#10;</span></span><span class="line"><span class="cl">+-----------+--------------+---------------+&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span> <span class="p">|</span> Last name <span class="m">1</span>  <span class="p">|</span> First name <span class="m">1</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">2</span> <span class="p">|</span> Last name <span class="m">2</span>  <span class="p">|</span> First name <span class="m">2</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">3</span> <span class="p">|</span> Last name <span class="m">3</span>  <span class="p">|</span> First name <span class="m">3</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">4</span> <span class="p">|</span> Last name <span class="m">4</span>  <span class="p">|</span> First name <span class="m">4</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">5</span> <span class="p">|</span> Last name <span class="m">5</span>  <span class="p">|</span> First name <span class="m">5</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">6</span> <span class="p">|</span> Last name <span class="m">6</span>  <span class="p">|</span> First name <span class="m">6</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">7</span> <span class="p">|</span> Last name <span class="m">7</span>  <span class="p">|</span> First name <span class="m">7</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">8</span> <span class="p">|</span> Last name <span class="m">8</span>  <span class="p">|</span> First name <span class="m">8</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">9</span> <span class="p">|</span> Last name <span class="m">9</span>  <span class="p">|</span> First name <span class="m">9</span>  <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">10</span> <span class="p">|</span> Last name <span class="m">10</span> <span class="p">|</span> First name <span class="m">10</span> <span class="p">|</span>&#10;</span></span><span class="line"><span class="cl">+-----------+--------------+---------------+&#10;</span></span><span class="line"><span class="cl"><span class="m">10</span> rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">root@8d7d4953cb39:/# tail -20 /var/log/mysql/mysql.log &#10;</span></span><span class="line"><span class="cl">2019-02-04T13:26:48.414716Z	   <span class="m">19</span> Connect	root@localhost on  using Socket&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:26:48.414911Z	   <span class="m">19</span> Query	<span class="k">select</span> @@version_comment limit <span class="m">1</span>&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:26:53.629645Z	   <span class="m">19</span> Query	show databases&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:26:58.847307Z	   <span class="m">19</span> Query	SELECT DATABASE<span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:26:58.847709Z	   <span class="m">19</span> Init DB	blogbitix&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:26:58.851495Z	   <span class="m">19</span> Query	show databases&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:26:58.853238Z	   <span class="m">19</span> Query	show tables&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:26:58.858211Z	   <span class="m">19</span> Field List	Persons &#10;</span></span><span class="line"><span class="cl">2019-02-04T13:27:03.463610Z	   <span class="m">19</span> Query	show tables&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:28:20.522918Z	   <span class="m">19</span> Query	<span class="k">select</span> * from Persons&#10;</span></span><span class="line"><span class="cl">2019-02-04T13:28:35.275031Z	   <span class="m">19</span> Quit	</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mysql/bash.sh</span>
    </div>
</div>
<h3 id="postgresql">PostgreSQL</h3>
<p>En el caso de PostgreSQL el archivo de log se ubica según el valor de la propiedad <em>log_directory</em> y <em>log_filename</em>. Se activa el log con la propiedad <em>logging_collector</em>. Las sentencias con errores también se incluyen en el mismo archivo. Para obtener los tiempos que tardan las sentencias en ejecutarse hay que establecer un umbral en milisegundos para que la sentencia sea incluida en el log, con el valor 0 se incluyen todas las sentencias en el log en la propiedad <em>log_min_duration_statement</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">postgres</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres:11</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">./configuration/postgresql.conf:/etc/postgresql/postgresql.conf</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">./scripts/:/scripts/</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">postgres-data:/var/lib/postgresql/data</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">postgres-log:/var/log/postgres</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">POSTGRES_PASSWORD</span><span class="p">:</span><span class="w"> </span><span class="l">postgres</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">POSTGRES_DB</span><span class="p">:</span><span class="w"> </span><span class="l">blogbitix</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">postgres -c config_file=/etc/postgresql/postgresql.conf</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">postgres-data</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="l">postgres-log:</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql/docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">#------------------------------------------------------------------------------&#10;</span></span><span class="line"><span class="cl"># REPORTING AND LOGGING&#10;</span></span><span class="line"><span class="cl">#------------------------------------------------------------------------------&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># - Where to Log -&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">log_destination = &#39;stderr&#39;		# Valid values are combinations of&#10;</span></span><span class="line"><span class="cl">					# stderr, csvlog, syslog, and eventlog,&#10;</span></span><span class="line"><span class="cl">					# depending on platform.  csvlog&#10;</span></span><span class="line"><span class="cl">					# requires logging_collector to be on.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># This is used when logging to stderr:&#10;</span></span><span class="line"><span class="cl">logging_collector = on		# Enable capturing of stderr and csvlog&#10;</span></span><span class="line"><span class="cl">					# into log files. Required to be on for&#10;</span></span><span class="line"><span class="cl">					# csvlogs.&#10;</span></span><span class="line"><span class="cl">					# (change requires restart)&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># These are only used if logging_collector is on:&#10;</span></span><span class="line"><span class="cl">log_directory = &#39;log&#39;			# directory where log files are written,&#10;</span></span><span class="line"><span class="cl">					# can be absolute or relative to PGDATA&#10;</span></span><span class="line"><span class="cl">log_filename = &#39;postgresql-%Y-%m-%d_%H%M%S.log&#39;	# log file name pattern,&#10;</span></span><span class="line"><span class="cl">					# can include strftime() escapes&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># - When to Log -&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">log_min_duration_statement = 0	# -1 is disabled, 0 logs all statements&#10;</span></span><span class="line"><span class="cl">					# and their durations, &gt; 0 logs only&#10;</span></span><span class="line"><span class="cl">					# statements running at least this number&#10;</span></span><span class="line"><span class="cl">					# of milliseconds&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"># - What to Log -&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">log_statement = &#39;all&#39;			# none, ddl, mod, all&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql/configuration/postgresql.conf</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Sql" data-lang="Sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="k">IF</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">EXISTS</span><span class="w"> </span><span class="n">Persons</span><span class="w"> </span><span class="p">(</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">person_id</span><span class="w"> </span><span class="nb">SERIAL</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">,</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">last_name</span><span class="w"> </span><span class="nb">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">first_name</span><span class="w"> </span><span class="nb">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">)</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">INSERT</span><span class="w"> </span><span class="k">INTO</span><span class="w"> </span><span class="n">Persons</span><span class="w"> </span><span class="p">(</span><span class="n">last_name</span><span class="p">,</span><span class="w"> </span><span class="n">first_name</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 1&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 1&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 2&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 2&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 3&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 3&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 4&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 4&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 5&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 5&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 6&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 6&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 7&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 7&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 8&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 8&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 9&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 9&#39;</span><span class="p">),</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="s1">&#39;Last name 10&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;First name 10&#39;</span><span class="p">);</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql/scripts/database.sql</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-compose up&#10;</span></span><span class="line"><span class="cl">$ docker ps&#10;</span></span><span class="line"><span class="cl">CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   NAMES&#10;</span></span><span class="line"><span class="cl">448b3ab5684d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:latest&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">6</span> seconds ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">5</span> seconds&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5432/tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgresql_postgres_1&#10;</span></span><span class="line"><span class="cl">$ docker <span class="nb">exec</span> -it 448b3ab5684d bash&#10;</span></span><span class="line"><span class="cl">root@448b3ab5684d:/# psql -U postgres -d blogbitix -f /scripts/database.sql&#10;</span></span><span class="line"><span class="cl">CREATE TABLE&#10;</span></span><span class="line"><span class="cl">INSERT <span class="m">0</span> <span class="m">10</span>&#10;</span></span><span class="line"><span class="cl">root@448b3ab5684d:/# psql -U postgres&#10;</span></span><span class="line"><span class="cl">psql <span class="o">(</span>11.1 <span class="o">(</span>Debian 11.1-3.pgdg90+1<span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1"># \l</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List of databases&#10;</span></span><span class="line"><span class="cl">   Name&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>  Owner   <span class="p">|</span> Encoding <span class="p">|</span>  Collate   <span class="p">|</span>   Ctype&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>   Access privileges   &#10;</span></span><span class="line"><span class="cl">-----------+----------+----------+------------+------------+-----------------------&#10;</span></span><span class="line"><span class="cl"> blogbitix <span class="p">|</span> postgres <span class="p">|</span> UTF8&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> en_US.utf8 <span class="p">|</span> en_US.utf8 <span class="p">|</span> &#10;</span></span><span class="line"><span class="cl"> postgres  <span class="p">|</span> postgres <span class="p">|</span> UTF8&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> en_US.utf8 <span class="p">|</span> en_US.utf8 <span class="p">|</span> &#10;</span></span><span class="line"><span class="cl"> template0 <span class="p">|</span> postgres <span class="p">|</span> UTF8&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> en_US.utf8 <span class="p">|</span> en_US.utf8 <span class="p">|</span> <span class="o">=</span>c/postgres&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  +&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> <span class="nv">postgres</span><span class="o">=</span>CTc/postgres&#10;</span></span><span class="line"><span class="cl"> template1 <span class="p">|</span> postgres <span class="p">|</span> UTF8&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> en_US.utf8 <span class="p">|</span> en_US.utf8 <span class="p">|</span> <span class="o">=</span>c/postgres&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  +&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> <span class="nv">postgres</span><span class="o">=</span>CTc/postgres&#10;</span></span><span class="line"><span class="cl"><span class="o">(</span><span class="m">4</span> rows<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1"># \connect blogbitix</span>&#10;</span></span><span class="line"><span class="cl">You are now connected to database <span class="s2">&#34;blogbitix&#34;</span> as user <span class="s2">&#34;postgres&#34;</span>.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">blogbitix</span><span class="o">=</span><span class="c1"># select * from Persons;</span>&#10;</span></span><span class="line"><span class="cl"> person_id <span class="p">|</span>  last_name   <span class="p">|</span>  first_name   &#10;</span></span><span class="line"><span class="cl">-----------+--------------+---------------&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span> <span class="p">|</span> Last name <span class="m">1</span>  <span class="p">|</span> First name <span class="m">1</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">2</span> <span class="p">|</span> Last name <span class="m">2</span>  <span class="p">|</span> First name <span class="m">2</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">3</span> <span class="p">|</span> Last name <span class="m">3</span>  <span class="p">|</span> First name <span class="m">3</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">4</span> <span class="p">|</span> Last name <span class="m">4</span>  <span class="p">|</span> First name <span class="m">4</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">5</span> <span class="p">|</span> Last name <span class="m">5</span>  <span class="p">|</span> First name <span class="m">5</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">6</span> <span class="p">|</span> Last name <span class="m">6</span>  <span class="p">|</span> First name <span class="m">6</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">7</span> <span class="p">|</span> Last name <span class="m">7</span>  <span class="p">|</span> First name <span class="m">7</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">8</span> <span class="p">|</span> Last name <span class="m">8</span>  <span class="p">|</span> First name <span class="m">8</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">9</span> <span class="p">|</span> Last name <span class="m">9</span>  <span class="p">|</span> First name <span class="m">9</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">10</span> <span class="p">|</span> Last name <span class="m">10</span> <span class="p">|</span> First name <span class="m">10</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">(</span><span class="m">10</span> rows<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">root@005d4f42cf44:/# tail /var/lib/postgresql/data/log/postgresql-2019-02-04_151958.log &#10;</span></span><span class="line"><span class="cl">2019-02-04 15:19:58.980 GMT <span class="o">[</span>25<span class="o">]</span> LOG:  database system was shut down at 2019-02-04 15:19:57 GMT&#10;</span></span><span class="line"><span class="cl">2019-02-04 15:19:58.990 GMT <span class="o">[</span>1<span class="o">]</span> LOG:  database system is ready to accept connections&#10;</span></span><span class="line"><span class="cl">2019-02-04 15:20:13.526 GMT <span class="o">[</span>46<span class="o">]</span> LOG:  statement: <span class="k">select</span> * from Persons<span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">2019-02-04 15:20:13.527 GMT <span class="o">[</span>46<span class="o">]</span> LOG:  duration: 1.555 ms</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql/bash.sh</span>
    </div>
</div>
<p>Como los archivos de log de sentencias ejecutadas potencialmente serán grandes hay que rotarlos y monitorizar o limitar su tamaño. En PostgreSQL usando las directivas de configuración, <em>log_rotation_age</em> o <em>log_rotation_size</em>, en MySQL posiblemente con el comando <a href="https://linux.die.net/man/8/logrotate">logrotate</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/server-logs.html">MySQL Server Logs</a></li>
<li><a href="https://www.postgresql.org/docs/current/runtime-config-logging.html">PostgreSQL Error Reporting and Logging</a></li>
<li><a href="https://stackoverflow.com/questions/5441972/how-to-see-log-files-in-mysql">How to see log files in MySQL?</a></li>
<li><a href="https://stackoverflow.com/questions/6479107/how-to-enable-mysql-query-log">How to enable MySQL Query Log?</a></li>
<li><a href="https://stackoverflow.com/questions/722221/how-to-log-postgresql-queries">How to log PostgreSQL queries?</a></li>
<li><a href="http://www.postgresql.org/docs/current/static/runtime-config-logging.html">PostgreSQL: Error Reporting and Logging</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/02/convertir-un-json-a-objetos-y-objetos-a-json-con-json-b-gson-y-jackson-en-java/</id>
        <title>Convertir un JSON a objetos y objetos a JSON con JSON-B, Gson y Jackson en Java</title>
        <updated>2019-02-02T10:15:00+01:00</updated>
        <published>2019-02-01T17:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/02/convertir-un-json-a-objetos-y-objetos-a-json-con-json-b-gson-y-jackson-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Continuando la serie de pequeños artículos sobre cómo procesar JSON después de ver anteriormente otras dos formas, <a href="https://picodotdev.github.io/blog-bitix/2019/01/generar-procesar-y-modificar-documentos-json-con-json-p-en-java/">Generar, procesar y modificar documentos JSON con JSON-P en Java</a> y <a href="https://picodotdev.github.io/blog-bitix/2019/01/usar-expresiones-jsonpath-para-extraer-datos-de-un-json-en-java/">Usar expresiones JSONPath para extraer datos de un JSON en Java</a>, en este artículo hay una tercera.</p>
<p>En las dos primeras si los datos son muchos o son todos la tarea de recuperar los datos uno a uno requiere una buena cantidad de código. Dado que un JSON no son nada más que valores, arrays y mapas utilizando la estructuras de datos equivalentes de Java se puede hacer una correspondencia entre los datos del JSON a objetos POJO siguiendo ciertas convenciones.</p>
<p>Una vez que los datos han sido cargados en una instancia de una clase se recuperan los datos con los correspondientes métodos <em>get</em> del objeto, además dado que las propiedades de los objetos tiene un tipo se realiza la conversión adecuada para convertir el dato del JSON al tipo de la propiedad del objeto.</p>
<p>Hay tres librerías distintas populares para hacer este <em>binding</em> entre JSON y objetos. <a href="http://json-b.net/">JSON-B</a>, <a href="https://github.com/google/gson">Gson</a> y <a href="https://github.com/FasterXML/jackson">Jackson</a> siendo la primera la más estándar en el lenguaje Java. En los siguientes ejemplos dada una cadena con JSON y la clase raíz a la que hacer la correspondencia de las propiedades se crea una instancia de <em>Comprador</em> y múltiples de <em>Direccion</em>. La correspondencia entre las propiedades del JSON y del objeto se hace en base al nombre.</p>
<p>Se utilizan los métodos <em>toJson()</em> tanto en JSON-B como en Gson y el método <em>writeValueAsString()</em> en Jackson para convertir a JSON y los métodos <em>fromJson()</em> y <em>readValue()</em> para convertir desde JSON a objetos. Estos métodos devuelven una instancia de la clase raíz indicada y acceder a las propiedades se hace con los correspondientes <em>getter</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comprador</span> <span class="n">comprador</span> <span class="o">=</span> <span class="n">buildComprador</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Comprador</span><span class="o">&gt;</span> <span class="n">compradores</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">buildComprador</span><span class="o">(),</span> <span class="n">buildComprador</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// JSON-B&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonbConfig</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JsonbConfig</span><span class="o">().</span><span class="na">withAdapters</span><span class="o">(</span><span class="k">new</span> <span class="n">JsonbLocalDateAdapter</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Jsonb</span> <span class="n">jsonb</span> <span class="o">=</span> <span class="n">JsonbBuilder</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">config</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">json</span> <span class="o">=</span> <span class="n">jsonb</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="n">comprador</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span> <span class="o">=</span> <span class="n">jsonb</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">json</span><span class="o">,</span> <span class="n">Comprador</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;JSON-B: %s%n&#34;</span><span class="o">,</span> <span class="n">json</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;JSON-B (comprador): %s, %s, %d%n&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getNombre</span><span class="o">(),</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getFechaNacimiento</span><span class="o">(),</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Gson&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">GsonBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GsonBuilder</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">builder</span><span class="o">.</span><span class="na">registerTypeAdapter</span><span class="o">(</span><span class="n">LocalDate</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="k">new</span> <span class="n">GsonLocalDateTypeAdapter</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">create</span><span class="o">();;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">json</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="n">comprador</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">json</span><span class="o">,</span> <span class="n">Comprador</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Gson: %s%n&#34;</span><span class="o">,</span> <span class="n">json</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Gson (comprador): %s, %s, %d%n&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getNombre</span><span class="o">(),</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getFechaNacimiento</span><span class="o">(),</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Jackson&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ObjectMapper</span> <span class="n">mapper</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ObjectMapper</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SimpleModule</span> <span class="n">module</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleModule</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">module</span><span class="o">.</span><span class="na">addSerializer</span><span class="o">(</span><span class="n">LocalDate</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="k">new</span> <span class="n">JacksonLocalDateSerializer</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">module</span><span class="o">.</span><span class="na">addDeserializer</span><span class="o">(</span><span class="n">LocalDate</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="k">new</span> <span class="n">JacksonLocalDateDeserializer</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mapper</span><span class="o">.</span><span class="na">registerModule</span><span class="o">(</span><span class="n">module</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">json</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">comprador</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="n">json</span><span class="o">,</span> <span class="n">Comprador</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Jackson: %s%n&#34;</span><span class="o">,</span> <span class="n">json</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Jackson (comprador): %s, %s, %d%n&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getNombre</span><span class="o">(),</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getFechaNacimiento</span><span class="o">(),</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Comprador</span> <span class="nf">buildComprador</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comprador</span> <span class="n">comprador</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Comprador</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span><span class="o">.</span><span class="na">setNombre</span><span class="o">(</span><span class="s">&#34;Juan&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span><span class="o">.</span><span class="na">setFechaNacimiento</span><span class="o">(</span><span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">buildDireccion</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">buildDireccion</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">comprador</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Direccion</span> <span class="nf">buildDireccion</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">Direccion</span><span class="o">(</span><span class="s">&#34;calle&#34;</span><span class="o">,</span> <span class="s">&#34;ciudad&#34;</span><span class="o">,</span> <span class="s">&#34;codigoPostal&#34;</span><span class="o">,</span> <span class="s">&#34;pais&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-1.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Comprador</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">nombre</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LocalDate</span> <span class="n">fechaNacimiento</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Direccion</span><span class="o">&gt;</span> <span class="n">direcciones</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Comprador</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">direcciones</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getNombre</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">nombre</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNombre</span><span class="o">(</span><span class="n">String</span> <span class="n">nombre</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">nombre</span> <span class="o">=</span> <span class="n">nombre</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LocalDate</span> <span class="nf">getFechaNacimiento</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">fechaNacimiento</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFechaNacimiento</span><span class="o">(</span><span class="n">LocalDate</span> <span class="n">fechaNacimiento</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">fechaNacimiento</span> <span class="o">=</span> <span class="n">fechaNacimiento</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Direccion</span><span class="o">&gt;</span> <span class="nf">getDirecciones</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">direcciones</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDirecciones</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Direccion</span><span class="o">&gt;</span> <span class="n">direcciones</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">direcciones</span> <span class="o">=</span> <span class="n">direcciones</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Comprador.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Direccion</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">calle</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">ciudad</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">codigoPostal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">pais</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Direccion</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Direccion</span><span class="o">(</span><span class="n">String</span> <span class="n">calle</span><span class="o">,</span> <span class="n">String</span> <span class="n">ciudad</span><span class="o">,</span> <span class="n">String</span> <span class="n">codigoPostal</span><span class="o">,</span> <span class="n">String</span> <span class="n">pais</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">calle</span> <span class="o">=</span> <span class="n">calle</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">ciudad</span> <span class="o">=</span> <span class="n">ciudad</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">codigoPostal</span> <span class="o">=</span> <span class="n">codigoPostal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">pais</span> <span class="o">=</span> <span class="n">pais</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCalle</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">calle</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCalle</span><span class="o">(</span><span class="n">String</span> <span class="n">calle</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">calle</span> <span class="o">=</span> <span class="n">calle</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCiudad</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">ciudad</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCiudad</span><span class="o">(</span><span class="n">String</span> <span class="n">ciudad</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">ciudad</span> <span class="o">=</span> <span class="n">ciudad</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getCodigoPostal</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">codigoPostal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCodigoPostal</span><span class="o">(</span><span class="n">String</span> <span class="n">codigoPostal</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">codigoPostal</span> <span class="o">=</span> <span class="n">codigoPostal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getPais</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">pais</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPais</span><span class="o">(</span><span class="n">String</span> <span class="n">pais</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">pais</span> <span class="o">=</span> <span class="n">pais</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Direccion.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">JSON-B: {&#34;direcciones&#34;:[{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;},{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;}],&#34;fechaNacimiento&#34;:&#34;2019-02-01&#34;,&#34;nombre&#34;:&#34;Juan&#34;}&#10;</span></span><span class="line"><span class="cl">JSON-B (comprador): Juan, 2019-02-01, 2&#10;</span></span><span class="line"><span class="cl">Gson: {&#34;nombre&#34;:&#34;Juan&#34;,&#34;fechaNacimiento&#34;:&#34;2019-02-01&#34;,&#34;direcciones&#34;:[{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;},{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;}]}&#10;</span></span><span class="line"><span class="cl">Gson (comprador): Juan, 2019-02-01, 2&#10;</span></span><span class="line"><span class="cl">Jackson: {&#34;nombre&#34;:&#34;Juan&#34;,&#34;fechaNacimiento&#34;:&#34;2019-02-01&#34;,&#34;direcciones&#34;:[{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;},{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;}]}&#10;</span></span><span class="line"><span class="cl">Jackson (comprador): Juan, 2019-02-01, 2</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>El funcionamiento de las tres librerías es similar varían los nombres de los métodos que tienen sus API, se proporciona la cadena JSON y la clase de la que se crea una instancia en la que se cargan los datos. En el caso de que el JSON sea una lista o <em>array</em> de varios elementos el tipo indicado en el que cargar los datos cambia respecto a cargar únicamente un objeto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comprador</span> <span class="n">comprador</span> <span class="o">=</span> <span class="n">buildComprador</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// JSON-B&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compradores</span> <span class="o">=</span> <span class="n">jsonb</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">arrayJson</span><span class="o">,</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Comprador</span><span class="o">&gt;(){}.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getGenericSuperclass</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Gson&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compradores</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">arrayJson</span><span class="o">,</span> <span class="k">new</span> <span class="n">TypeToken</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Comprador</span><span class="o">&gt;&gt;(){}.</span><span class="na">getType</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Jackson&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compradores</span> <span class="o">=</span> <span class="n">mapper</span><span class="o">.</span><span class="na">readValue</span><span class="o">(</span><span class="n">arrayJson</span><span class="o">,</span> <span class="k">new</span> <span class="n">TypeReference</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Comprador</span><span class="o">&gt;&gt;(){});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-2.java</span>
    </div>
</div>
<p>Para añadir tipos de datos que no están entre los básicos de JSON como es una fecha cada librería proporciona interfaces o clases abstractas para hacer la conversión desde el dato a un tipo de JSON y desde JSON al tipo del dato. En este caso para un tipo de dato <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDate.html">LocalDate</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JsonbLocalDateAdapter</span> <span class="kd">implements</span> <span class="n">JsonbAdapter</span><span class="o">&lt;</span><span class="n">LocalDate</span><span class="o">,</span> <span class="n">JsonString</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">JsonString</span> <span class="nf">adaptToJson</span><span class="o">(</span><span class="n">LocalDate</span> <span class="n">obj</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Json</span><span class="o">.</span><span class="na">createValue</span><span class="o">(</span><span class="n">obj</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_LOCAL_DATE</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LocalDate</span> <span class="nf">adaptFromJson</span><span class="o">(</span><span class="n">JsonString</span> <span class="n">obj</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">obj</span><span class="o">.</span><span class="na">getString</span><span class="o">(),</span> <span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_LOCAL_DATE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JsonLocalDateAdapter.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">GsonLocalDateTypeAdapter</span> <span class="kd">extends</span> <span class="n">TypeAdapter</span><span class="o">&lt;</span><span class="n">LocalDate</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">write</span><span class="o">(</span><span class="n">JsonWriter</span> <span class="n">out</span><span class="o">,</span> <span class="n">LocalDate</span> <span class="n">value</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">out</span><span class="o">.</span><span class="na">value</span><span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_LOCAL_DATE</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LocalDate</span> <span class="nf">read</span><span class="o">(</span><span class="n">JsonReader</span> <span class="n">in</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">in</span><span class="o">.</span><span class="na">nextString</span><span class="o">(),</span> <span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_LOCAL_DATE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>GsonLocalDateTypeAdapter.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JacksonLocalDateSerializer</span> <span class="kd">extends</span> <span class="n">JsonSerializer</span><span class="o">&lt;</span><span class="n">LocalDate</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">serialize</span><span class="o">(</span><span class="n">LocalDate</span> <span class="n">value</span><span class="o">,</span> <span class="n">JsonGenerator</span> <span class="n">gen</span><span class="o">,</span> <span class="n">SerializerProvider</span> <span class="n">serializers</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gen</span><span class="o">.</span><span class="na">writeString</span><span class="o">(</span><span class="n">value</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_LOCAL_DATE</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JacksonLocalDateSerializer.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JacksonLocalDateDeserializer</span> <span class="kd">extends</span> <span class="n">JsonDeserializer</span><span class="o">&lt;</span><span class="n">LocalDate</span><span class="o">&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">LocalDate</span> <span class="nf">deserialize</span><span class="o">(</span><span class="n">JsonParser</span> <span class="n">p</span><span class="o">,</span> <span class="n">DeserializationContext</span> <span class="n">ctxt</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getValueAsString</span><span class="o">(),</span> <span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_LOCAL_DATE</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JacksonLocalDateDeserializer.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s2">&#34;javax.json:javax.json-api:1.1&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s2">&#34;javax.json.bind:javax.json.bind-api:1.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s2">&#34;javax.json.bind:javax.json.bind-api:1.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s2">&#34;com.google.code.gson:gson:2.8.5&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s2">&#34;com.fasterxml.jackson.core:jackson-databind:2.9.8&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s2">&#34;org.eclipse:yasson:1.0&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s2">&#34;org.glassfish:javax.json:1.1&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javajson.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jcenter</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaJson">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://json-b.net/users-guide.html">JSON-B Users Guide</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/</id>
        <title>Conferencia BilboStack 2019</title>
        <updated>2019-02-08T23:15:00+01:00</updated>
        <published>2019-01-26T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>La octava edición de la <a href="https://bilbostack.com/">BilboStack</a> sigue fiel a su cita en el calendario a finales de enero como en anteriores ocasiones. Tampoco cambia el formato de cuatro presentaciones en dos <em>tracks</em> simultáneos y de ser únicamente de media jornada a la mañana par disfrutar a la tarde del <em>networking</em>, comida y de Bilbao para aquellos que así quieran y aprovechar el viaje si se viene de fuera. Tampoco cambia el recinto como en la edición anterior de el Palacio Euskalduna, con un aforo bastante amplio aún así las entradas han llegado a agotarse y no han quedado prácticamente sitios libres en la sala A3.</p>
<p>La novedad más relevante de este año es que por primera vez las entradas han tenido un precio muy módico que no llega a los 15 € por asistente que junto a los patrocinadores permitirá a la organización cubrir en parte algunos costes como viajes de los ponentes, alojamiento, comida, recinto, etc. Otra novedad es que en el descanso después de las dos primeras presentaciones ha habido café y de comer para acompañarlo junto a los <em>stands</em> de varios de los patrocinadores para hacer contactos en el <em>networking</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/euskalduna-1_hu57c75de9d7f71fc32801bdebb9245ddf_1212555_2560x1440_fit_q90_box.jpg" data-gallery="" title="Palacio Euskalduna"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/euskalduna-1_hu57c75de9d7f71fc32801bdebb9245ddf_1212555_200x150_fit_q90_box.jpg" width="200" height="150" alt="Palacio Euskalduna" title="Palacio Euskalduna"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/euskalduna-2_hue48544f72b64090f5c71239952437d59_1106529_2560x1440_fit_q90_box.jpg" data-gallery="" title="Palacio Euskalduna"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/euskalduna-2_hue48544f72b64090f5c71239952437d59_1106529_200x150_fit_q90_box.jpg" width="200" height="150" alt="Palacio Euskalduna" title="Palacio Euskalduna"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/bilbostack-logo-2_hu246ae502fffa2ca4acba3dd7290899eb_80938_2560x1440_fit_q90_box.jpg" data-gallery="" title="Palacio Euskalduna"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/bilbostack-logo-2_hu246ae502fffa2ca4acba3dd7290899eb_80938_300x200_fit_q90_box.jpg" width="113" height="200" alt="Palacio Euskalduna" title="Palacio Euskalduna"  class="lozad "></a></p>
<figcaption>Palacio Euskalduna <br>Fuente: @BilboStack</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/patrocinadores_hu7d932b78034ea677a67c7b704b063b18_103388_2560x1440_fit_box_3.png" data-gallery="" title="Patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/patrocinadores_hu7d932b78034ea677a67c7b704b063b18_103388_200x150_fit_box_3.png" width="200" height="106" alt="Patrocinadores" title="Patrocinadores"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/localizacion_hu187171ac5d63892354cd7cb9932086fe_508095_2560x1440_fit_box_3.png" data-gallery="" title="Ubicación"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/localizacion_hu187171ac5d63892354cd7cb9932086fe_508095_200x150_fit_box_3.png" width="200" height="63" alt="Ubicación" title="Ubicación"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/paquete-bienvenida_hu9288d0fd87185dc1291640d85e4db984_720011_2560x1440_fit_q90_box.jpg" data-gallery="" title="Paquete de bienvenida"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/paquete-bienvenida_hu9288d0fd87185dc1291640d85e4db984_720011_200x150_fit_q90_box.jpg" width="112" height="150" alt="Paquete de bienvenida" title="Paquete de bienvenida"  class="lozad "></a></p>
<figcaption>Patrocinadores, ubicación y paquete de bienvenida</figcaption>
</figure>
</div>
<p>La conferencia comienza con la presentación y la bienvenida de los organizadores junto con unas palabras de Xabier Otxandiano concejal de desarrollo económico del ayuntamiento de Bilbao comentando la transformación que ha realizado la ciudad en las últimas décadas, urbanística siendo representante el propio palacio Euskalduna de un entorno más industrial a otro más de servicios y la importancia de la tecnología con el potencial para convertirse en la nueva industria de la ciudad. Por este motivo la conferencia BilboStack es importante y lo apoyan de forma institucional haciendo hincapié que no es fácil organizar una conferencia con el poder de convocatoria de casi 700 personas un sábado a la mañana y a la que muchos acuden haciendo muchos kilómetros de viaje.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/presentacion_hufb7ff9da4902dbeb69ac83cdcff111ed_494994_2560x1440_fit_q90_box.jpg" data-gallery="" title="Presentación"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/presentacion_hufb7ff9da4902dbeb69ac83cdcff111ed_494994_200x150_fit_q90_box.jpg" width="200" height="150" alt="Presentación" title="Presentación"  class="lozad "></a></p>
<figcaption>Presentación</figcaption>
</figure>
</div>
<p>La agenda comienza a las 9:00 de la mañana del sábado con una presentación y terminaba a las 14:00 aunque por el control de acceso de este año ha sido recomendable llegar un poco antes para evitar alguna pequeña aglomeración en los últimos minutos y encontrar y entrar en las salas con suficiente antelación. Llega el momento de decidir a qué presentación de los dos <em>tracks</em> asistir, dependiendo de los intereses de cada uno a veces no es fácil y uno quisiera haber asistido a las dos.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/6qQIs8q2Q9s" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<table class="table">
    <thead class="table-light">
        <th width="140px">Hora</th>
        <th>Sala Barria</th>
    </thead>
    <tbody>
        <tr>
            <td>09:00-09:20</td>
            <td>Presentación</td>
        </tr>
        <tr>
            <td>09:30-10:20</td>
            <td>Kubernetes is not a deployment tool: it's a platform <em>por Jose Armesto</em></td>
        </tr>
        <tr>
            <td>10:30-11:20</td>
            <td>Come reza data <em>por Inés Huertas</em></td>
        </tr>
        <tr>
            <td>11:30-12:00</td>
            <td>Networking + Café</td>
        </tr>
        <tr>
            <td>12:00-12:50</td>
            <td>Devops is not what you think <em>por Eduardo Ferro</em></td>
        </tr>
        <tr>
            <td>13:00-13:50</td>
            <td>10 retos de la creación de chatbots y asistentes con NLP <em>por Cristina Santamarina</em></td>
        </tr>
        <tr>
            <td>> 14:00</td>
            <td>Networking + pintxos y poteo</td>
        </tr>
    </tbody>
</table>
<table class="table">
    <thead class="table-light">
        <th width="140px">Hora</th>
        <th>Sala A3</th>
    </thead>
    <tbody>
        <tr>
            <td>09:00-09:20</td>
            <td>Presentación</td>
        </tr>
        <tr>
            <td>09:30-10:20</td>
            <td>Web Components API: esto va en serio <em>por Belén Albeza</em></td>
        </tr>
        <tr>
            <td>10:30-11:20</td>
            <td>Agile JavaScript <em>por Ricardo Borillo</em></td>
        </tr>
        <tr>
            <td>11:30-12:00</td>
            <td>Networking + Café</td>
        </tr>
        <tr>
            <td>12:00-12:50</td>
            <td>UX para desarrolladores front y back <em>por Virginia Aguirre</em></td>
        </tr>
        <tr>
            <td>13:00-13:50</td>
            <td>Viaje desde Arquitectura Hexagonal al Event Sourcing <em>por Carlos Buenosvinos</em></td>
        </tr>
        <tr>
            <td>> 14:00</td>
            <td>Networking + pintxos y poteo</td>
        </tr>
    </tbody>
</table>
<p>Cómo ocasiones anteriores hago un compendio de las ideas con las que me quedé de las presentaciones a las que asistí, seguro que me dejo cosas de las comentadas.</p>
<h3 id="web-components-api-esto-va-en-serio-por-_belén-albeza_">Web Components API: esto va en serio por <em>Belén Albeza</em></h3>
<p>Desde los inicios la web está formada por dos elementos el protocolo HTTP y los documentos HTML con el contenido. Con el paso del tiempo las páginas añadieron CSS y comportamiento con el lenguaje JavaScript. En gran medida las bases iniciales no han cambiado y una página de hace 20 años se verán igualmente en un navegador actual, al contrario que las aplicaciones nativas que pueden dejar de funcionar con actualizaciones de dispositivos móviles en un lustro.</p>
<p>Los <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components">Web Components</a> son una especificación que están implementando la navegadores y es la alternativa estándar que cubre algunos aspectos de las populares librerías JavaScript como <em>React</em> y <em>Vue</em>. Estas aportan estructura al JavaScript y permiten crear componentes que por defecto loa navegadores no ofrecen como un calendario o menús.</p>
<p><em>Web Components</em> permite crear etiquetas propias y ser usadas en los documentos HTML como si de cualquier otra etiqueta estándar se tratase. Los web componentes se componen de un nombre, atributos y los eventos que lanza. Con la API de los <em>Web componentes</em> se proporciona el  HTML que genera un componente, el comportamiento con JavaScript y las clases CSS que le aplican.</p>
<p>Las <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components#Specifications">especificación es de los <em>Web Components</em></a> son varias. Una de las cosas que aportan los <em>web components</em> es que el CSS de estos no entren en colisión con cualquier otro CSS de la página o de otros web componentes.</p>
<p>En las <em>DevTools</em> de <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> se puede inspeccionar el <em>shadow</em> DOM del web componentes. En la documentación de MDN hay varias páginas que detallan los Web Components con <a href="https://html.spec.whatwg.org/multipage/custom-elements.html#custom-elements">ejemplos</a>.</p>
<p>Tenía claro que quería acudir a esta presentación, era una en la que no tenía muchas dudas al elegir por quien la daba <a href="https://twitter.com/ladybenko">@ladybenko</a>, desarrolladora de Firefox, es el nivel que hay en los ponentes de la BilboStack. Comenzaba la mañana posponiendo la alarma del despertador varias veces pero solo por esta presentación ya ha merecido el levantarme para acudir a la BilboStack.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/webcomponents-1_hu89e7d80d62c90c68c4b1324f8a7d0ea2_138300_2560x1440_fit_q90_box.jpg" data-gallery="" title="Web Components API"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/webcomponents-1_hu89e7d80d62c90c68c4b1324f8a7d0ea2_138300_300x200_fit_q90_box.jpg" width="267" height="200" alt="Web Components API" title="Web Components API"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/webcomponents-2_hubaeb5426c14bfd77e741e80fefd573ed_227393_2560x1440_fit_q90_box.jpg" data-gallery="" title="Web Components API"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/webcomponents-2_hubaeb5426c14bfd77e741e80fefd573ed_227393_300x200_fit_q90_box.jpg" width="267" height="200" alt="Web Components API" title="Web Components API"  class="lozad "></a></p>
<figcaption>Web Components API</figcaption>
</figure>
</div>
<h3 id="agile-javascript-por-_ricardo-borillo_">Agile JavaScript por <em>Ricardo Borillo</em></h3>
<p>En el <a href="https://stateofjs.com/">State of JavaScript del 2018</a> se mencionan numerosas herramientas de JavaScript más populares del momento y otras nuevas que están surgiendo como alternativa.</p>
<p>Entre las que se mencionan, no son pocas, están <a href="https://www.npmjs.com/">npm</a>, <a href="https://github.com/creationix/nvm">nvm</a>, <a href="https://nodejs.org/en/">Node.js</a>, <a href="https://webpack.js.org/">Webpack</a>, <a href="https://babeljs.io/">Babel</a>, <a href="https://parceljs.org/">Parcel</a>, <a href="https://rollupjs.org/guide/en">Rollup</a>, <a href="https://eslint.org/">Eslint</a>, <a href="https://prettier.io/">Prettier</a>, <a href="https://flow.org/">Flow</a>, <a href="https://www.typescriptlang.org/">TypeScript</a>, <a href="https://reasonml.github.io/">Reason</a>.</p>
<p>Esta presentación junto con la anterior forman la representación de JavaScript que siempre tiene la BilboStack y es que muchos lo utilizamos en mayor o menor medida.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/agilejavascript-1_hu0560659ea6befc96b6eb919c2fe75d2b_192995_2560x1440_fit_q90_box.jpg" data-gallery="" title="Agile JavaScript"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/agilejavascript-1_hu0560659ea6befc96b6eb919c2fe75d2b_192995_300x200_fit_q90_box.jpg" width="267" height="200" alt="Agile JavaScript" title="Agile JavaScript"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/agilejavascript-2_hu21aa0a3eae5c755be0e81168915f3220_183539_2560x1440_fit_q90_box.jpg" data-gallery="" title="Agile JavaScript"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/agilejavascript-2_hu21aa0a3eae5c755be0e81168915f3220_183539_300x200_fit_q90_box.jpg" width="267" height="200" alt="Agile JavaScript" title="Agile JavaScript"  class="lozad "></a></p>
<figcaption>Agile JavaScript</figcaption>
</figure>
</div>
<h3 id="descanso">Descanso</h3>
<p>No saque fotos pero algunos patrocinadores dispusieron <em>stands</em> en los que hacerse con algunas pegatinas y bagatelas, de las empresas una oportunidad de conocerlas e iniciar algún contacto.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/bilbostack-networking_hu84331644d15bb10e6cd18ac7ed6a6009_494788_2560x1440_fit_q90_box.jpg" data-gallery="" title="Networking &amp;#43; Café"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/bilbostack-networking_hu84331644d15bb10e6cd18ac7ed6a6009_494788_300x200_fit_q90_box.jpg" width="267" height="200" alt="Networking &amp;#43; Café" title="Networking &amp;#43; Café"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/bilbostack-photocall_huaa46c29829e4745306de42d3b7d2460e_520318_2560x1440_fit_q90_box.jpg" data-gallery="" title="Photocall"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/bilbostack-photocall_huaa46c29829e4745306de42d3b7d2460e_520318_300x200_fit_q90_box.jpg" width="150" height="200" alt="Photocall" title="Photocall"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/bilbostack-hashtag_hu59f94e4cf53e8790ddf3fdd6030cfc63_160886_2560x1440_fit_q90_box.jpg" data-gallery="" title="Hashtag"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/bilbostack-hashtag_hu59f94e4cf53e8790ddf3fdd6030cfc63_160886_300x200_fit_q90_box.jpg" width="300" height="67" alt="Hashtag" title="Hashtag"  class="lozad "></a></p>
<figcaption>Networking &#43; Café, photocall y hashtag</figcaption>
</figure>
</div>
<h3 id="ux-para-desarrolladores-front-y-back-por-_virginia-aguirre_">UX para desarrolladores front y back por <em>Virginia Aguirre</em></h3>
<p>A veces hay más atención puesta en la tecnología que en la experiencia de usuario y en estos casos ocurren ejemplos como el Nokia Ngage con su peculiar forma para hacer llamadas, aplicaciones con gran cantidad de barras de herramientas que ocupan gran parte del espacio vertical de la pantalla o el incómodo menú inicio de Windows 8 más adaptado a interfaces táctiles que a escritorio. La UX hace hincapié en las necesidades del usuario primero, las necesidades del negocio y finalmente las posibilidades técnicas, el orden es importante.</p>
<p>UX aplicado es que el usuario pueda ver como quedan los muebles antes de comprarlos, ante esta necesidad del usuario Ikea desarrolla una aplicación de realidad aumentada que permite ver con la cámara del móvil una representación del mueble en la pantalla con la imagen del salón captada por la cámara. Otro ejemplo de uso es encontrar la gasolinera más cercana aprovechando la geolocalización de los móviles, dado que el contexto es uno de estar conduciendo la aplicación no ha de ser interactiva como es el caso de mostrar un mapa del país en el que ver las gasolineras y buscar entre ellas la más cercana. Con la geolocalización la aplicación ya puede conocer la ubicación del usuario y mostrar la más cercana que será el caso de uso más habitual.</p>
<p>En UX hay múltiples factores usuario, sociales, culturales, contexto de uso (casa, coche, móvil, escritorio) y el producto. Hay que entender el problema para proporcionar una solución efectiva, la solución puede desarrollarse de forma iterativa. Obtener información de los usuarios puede hacerse con analítica web, del departamento de atención al cliente, de formularios de encuestas, de noticias, informes sectoriales o analizando que hace la competencia.</p>
<p>De las que he asistido esta y la del otro <em>track</em> era la presentación que podría haber asistido a cualquiera, en cualquier caso siempre se descubre algún detalle interesante, como programador en mi caso varios puntos interesantes.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/ux_hu4fd0b58bdc920b616cb9c35ed1982c66_271918_2560x1440_fit_q90_box.jpg" data-gallery="" title="UX para desarrolladores front y back"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/ux_hu4fd0b58bdc920b616cb9c35ed1982c66_271918_300x200_fit_q90_box.jpg" width="267" height="200" alt="UX para desarrolladores front y back" title="UX para desarrolladores front y back"  class="lozad "></a></p>
<figcaption>UX para desarrolladores front y back</figcaption>
</figure>
</div>
<h3 id="viaje-desde-arquitectura-hexagonal-al-event-sourcing-por-_carlos-buenosvinos_">Viaje desde Arquitectura Hexagonal al Event Sourcing por <em>Carlos Buenosvinos</em></h3>
<p>Las arquitecturas pueden evolucionar en seis niveles.</p>
<ol>
<li>Spaghetti</li>
<li>Framework</li>
<li>Hexagonal</li>
<li>Hexagonal + Domain Event</li>
<li>CQRS</li>
<li>Event Sourcing</li>
</ol>
<p>Estar en el nivel 3 y 4 probablemente para muchas aplicaciones ya sea suficiente. En las 1 no hay estructura y con el paso del tiempo añadir nuevas características se hace más difícil y el código más difícil de mantener. La 2 añade estructura al código pero lo hace dependiente del framework en forma de acoplamiento. Con hexagonal se trata de independizar la lógica de negocio del código de infraestructura entendiendo por infraestructura la parte ajena al modelo como es el caso del sistema de persistencia en concreto que se utilice, para el negocio que sea una base de datos relacional o NoSQL es indiferente. Con una arquitectura hexagonal se separan aspectos, se independiza del <em>framework</em> y retrasan las decisiones de infraestructura.</p>
<p>Hay funcionalidades que no forman parte del núcleo del negocio. Estas funcionalidades se pueden realizar al reaccionar a esos eventos, registrados en <em>elastic search</em> o <em>rabbit</em> se obtienen métricas en tiempo real de lo que sucede en la aplicación. Al mostrar una página la cantidad de información puede generar unas decenas o cientos de consultas a la base de datos y a medida que se añaden funcionalidades e información la página irá más lenta. Cuando se modifica una entidad se dispara un evento que un <em>listener</em> escucha y se encarga de recuperar la información actualizada y guardarla transformada según las necesidades de lectura para que con una consulta se obtenga toda toda la información de la entidad, en este momento el rendimiento de la aplicación no se degrada al añadir nuevas características. En este sistema donde las consultas y modificaciones están separadas, con la serie de eventos que provocan cambios se puede reconstruir el estado final de una entidad aplicando la serie de eventos que sucedieron secuencialmente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/hexagonal-eventsourcing_hud6cb55f575f7cc86b20f840a0710b8fb_238975_2560x1440_fit_q90_box.jpg" data-gallery="" title="Viaje desde Arquitectura Hexagonal al Event Sourcing"><img src="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/images/hexagonal-eventsourcing_hud6cb55f575f7cc86b20f840a0710b8fb_238975_300x200_fit_q90_box.jpg" width="267" height="200" alt="Viaje desde Arquitectura Hexagonal al Event Sourcing" title="Viaje desde Arquitectura Hexagonal al Event Sourcing"  class="lozad "></a></p>
<figcaption>Viaje desde Arquitectura Hexagonal al Event Sourcing</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://medium.com/@vgaltes/bilbostack-2019-78553b19af25">BilboStack 2019 por <em>Vicenç García-Altés</em></a></li>
<li><a href="https://medium.com/@azaharafernandezguizan/bilbostack-2019-nunca-defrauda-5b0eb785932e">Bilbostack 2019. Nunca defrauda. por <em>Azahara Fernández Guizán</em></a></li>
<li><a href="https://www.eferro.net/2019/01/bilbostack.html">Bilbostack 2019 por <em>Eduardo Ferro Aldama</em></a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/01/usar-expresiones-jsonpath-para-extraer-datos-de-un-json-en-java/</id>
        <title>Usar expresiones JSONPath para extraer datos de un JSON en Java</title>
        <updated>2019-01-25T18:30:00+01:00</updated>
        <published>2019-01-25T18:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/01/usar-expresiones-jsonpath-para-extraer-datos-de-un-json-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Para tratar JSON en Java hay varias alternativas una de ellas es <a href="https://picodotdev.github.io/blog-bitix/2019/01/generar-procesar-y-modificar-documentos-json-con-json-p-en-java/">utilizar la API de bajo nivel JSON-P</a>, otra es <a href="http://json-b.net/">JSON-B</a> que requiere construir una o varias clases de Java a las que hacer la correspondencia entre el JSON y los objetos Java. Otra alternativa es utilizar expresiones o selectores que seleccionen los datos de JSON de forma similar a como se puede hacer con <a href="https://www.w3.org/TR/xpath/all/">XPath</a> para el caso de XML o <a href="https://jquery.com/">jQuery</a> con los elementos de HTML.</p>
<p>Las expresiones de <a href="https://goessner.net/articles/JsonPath/">JSONPath</a> o <em>XPath for JSON</em> se componen de operadores, funciones, operadores de filtrado y predicados con los que dado un JSON y una expresión permite seleccionar, extraer y transformar los datos de forma precisa. La librería <a href="https://github.com/json-path/JsonPath">JsonPath</a> es una implementación en Java de la especificación JSONPath.</p>
<p>Dado el siguiente texto en JSON estos son algunos ejemplos de expresiones que seleccionan datos utilizando JsonPath.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;store&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;book&#34;</span><span class="p">:</span> <span class="p">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;category&#34;</span><span class="p">:</span> <span class="s2">&#34;reference&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;author&#34;</span><span class="p">:</span> <span class="s2">&#34;Nigel Rees&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="s2">&#34;Sayings of the Century&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;price&#34;</span><span class="p">:</span> <span class="mf">8.95</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;category&#34;</span><span class="p">:</span> <span class="s2">&#34;fiction&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;author&#34;</span><span class="p">:</span> <span class="s2">&#34;Evelyn Waugh&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="s2">&#34;Sword of Honour&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;price&#34;</span><span class="p">:</span> <span class="mf">12.99</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;category&#34;</span><span class="p">:</span> <span class="s2">&#34;fiction&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;author&#34;</span><span class="p">:</span> <span class="s2">&#34;Herman Melville&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="s2">&#34;Moby Dick&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;isbn&#34;</span><span class="p">:</span> <span class="s2">&#34;0-553-21311-3&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;price&#34;</span><span class="p">:</span> <span class="mf">8.99</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;category&#34;</span><span class="p">:</span> <span class="s2">&#34;fiction&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;author&#34;</span><span class="p">:</span> <span class="s2">&#34;J. R. R. Tolkien&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;title&#34;</span><span class="p">:</span> <span class="s2">&#34;The Lord of the Rings&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;isbn&#34;</span><span class="p">:</span> <span class="s2">&#34;0-395-19395-8&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;price&#34;</span><span class="p">:</span> <span class="mf">22.99</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">],</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;bicycle&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;color&#34;</span><span class="p">:</span> <span class="s2">&#34;red&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;price&#34;</span><span class="p">:</span> <span class="mf">19.95</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>store.json</span>
    </div>
</div>
<p>En estas expresiones por orden se obtienen los autores de los libros de la tienda, los libros de la tienda, los libros cuyo precio es menor que 10, los libros que tienen un atributo <em>isbn</em>, los dos primeros libros y los precios de todos los artículos incluidos los de las bicicletas. En las páginas de JSONPath y de JsonPath hay una documentación más detallada de la sintaxis de las expresiones. JSONPath dispone de un <a href="http://jsonpath.com/">evaluador de expresiones</a> para probar las expresiones de forma rápida.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// JsonPath&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/store.json&#34;</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">storeJson</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">lines</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">br</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ReadContext</span> <span class="n">readContext</span> <span class="o">=</span> <span class="n">JsonPath</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">storeJson</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">expressions</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedHashMap</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expressions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;authors&#34;</span><span class="o">,</span> <span class="s">&#34;$.store.book[*].author&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expressions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;books&#34;</span><span class="o">,</span> <span class="s">&#34;$.store.book[*]&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expressions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;cheap-books&#34;</span><span class="o">,</span> <span class="s">&#34;$.store.book[?(@.price &lt; 10)]&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expressions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;isbn-books&#34;</span><span class="o">,</span> <span class="s">&#34;$.store.book[?(@.isbn)]&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expressions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;first-books&#34;</span><span class="o">,</span> <span class="s">&#34;$.store.book[:2]&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expressions</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;prices&#34;</span><span class="o">,</span> <span class="s">&#34;$..price&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expressions</span><span class="o">.</span><span class="na">forEach</span><span class="o">((</span><span class="n">key</span><span class="o">,</span> <span class="n">expression</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Object</span> <span class="n">value</span> <span class="o">=</span> <span class="n">readContext</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">expression</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s: %s%n&#34;</span><span class="o">,</span> <span class="n">key</span><span class="o">,</span> <span class="n">value</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">authors: [&#34;Nigel Rees&#34;,&#34;Evelyn Waugh&#34;,&#34;Herman Melville&#34;,&#34;J. R. R. Tolkien&#34;]&#10;</span></span><span class="line"><span class="cl">books: [{&#34;category&#34;:&#34;reference&#34;,&#34;author&#34;:&#34;Nigel Rees&#34;,&#34;title&#34;:&#34;Sayings of the Century&#34;,&#34;price&#34;:8.95},{&#34;category&#34;:&#34;fiction&#34;,&#34;author&#34;:&#34;Evelyn Waugh&#34;,&#34;title&#34;:&#34;Sword of Honour&#34;,&#34;price&#34;:12.99},{&#34;category&#34;:&#34;fiction&#34;,&#34;author&#34;:&#34;Herman Melville&#34;,&#34;title&#34;:&#34;Moby Dick&#34;,&#34;isbn&#34;:&#34;0-553-21311-3&#34;,&#34;price&#34;:8.99},{&#34;category&#34;:&#34;fiction&#34;,&#34;author&#34;:&#34;J. R. R. Tolkien&#34;,&#34;title&#34;:&#34;The Lord of the Rings&#34;,&#34;isbn&#34;:&#34;0-395-19395-8&#34;,&#34;price&#34;:22.99}]&#10;</span></span><span class="line"><span class="cl">cheap-books: [{&#34;category&#34;:&#34;reference&#34;,&#34;author&#34;:&#34;Nigel Rees&#34;,&#34;title&#34;:&#34;Sayings of the Century&#34;,&#34;price&#34;:8.95},{&#34;category&#34;:&#34;fiction&#34;,&#34;author&#34;:&#34;Herman Melville&#34;,&#34;title&#34;:&#34;Moby Dick&#34;,&#34;isbn&#34;:&#34;0-553-21311-3&#34;,&#34;price&#34;:8.99}]&#10;</span></span><span class="line"><span class="cl">isbn-books: [{&#34;category&#34;:&#34;fiction&#34;,&#34;author&#34;:&#34;Herman Melville&#34;,&#34;title&#34;:&#34;Moby Dick&#34;,&#34;isbn&#34;:&#34;0-553-21311-3&#34;,&#34;price&#34;:8.99},{&#34;category&#34;:&#34;fiction&#34;,&#34;author&#34;:&#34;J. R. R. Tolkien&#34;,&#34;title&#34;:&#34;The Lord of the Rings&#34;,&#34;isbn&#34;:&#34;0-395-19395-8&#34;,&#34;price&#34;:22.99}]&#10;</span></span><span class="line"><span class="cl">first-books: [{&#34;category&#34;:&#34;reference&#34;,&#34;author&#34;:&#34;Nigel Rees&#34;,&#34;title&#34;:&#34;Sayings of the Century&#34;,&#34;price&#34;:8.95},{&#34;category&#34;:&#34;fiction&#34;,&#34;author&#34;:&#34;Evelyn Waugh&#34;,&#34;title&#34;:&#34;Sword of Honour&#34;,&#34;price&#34;:12.99}]&#10;</span></span><span class="line"><span class="cl">prices: [8.95,12.99,8.99,22.99,19.95]</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Estas son las dependencias necesarias para JsonPath y como usa <a href="https://www.slf4j.org/">SLF4J</a> varias más para redirigir las trazas a <a href="https://logging.apache.org/log4j/2.x/">Log4j</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.jayway.jsonpath:json-path:2.4.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-api:2.11.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;org.apache.logging.log4j:log4j:2.11.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-core:2.11.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-slf4j18-impl:2.11.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>El código equivalente para extraer estos datos usando JSON-P sería más largo, complejo, difícil de mantener y de difícil compresión. Dependiendo de la cantidad de datos a seleccionar se preferirá JSON-B si son muchos o JsonPath si son pocos o hay cierta lógica de filtrado.</p>
<p>La librería <a href="https://jmespath.org/">JMESPath</a> es una librería equivalente a JsonPath aunque utiliza otra especificación en la que cambia la sintaxis de las expresiones pero no dejan de ser similares, por el hecho de que las expresiones JsonPath siguen el estándar de XPath para XML le da algo de mayor atractivo.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaJson">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/01/reproducir-audio-y-musica-midi-y-sampled-wav-mp3-ogg-con-java-y-ffmpeg/</id>
        <title>Reproducir audio y música MIDI y sampled (wav, mp3, ogg) con Java y FFmpeg</title>
        <updated>2019-12-08T02:00:00+01:00</updated>
        <published>2019-01-21T12:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/01/reproducir-audio-y-musica-midi-y-sampled-wav-mp3-ogg-con-java-y-ffmpeg/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ffmpeg.svg" width="400" height="98" alt="FFmpeg" title="FFmpeg"  class=""></p>
</div>
<p>En la API de Java en el paquete <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/package-summary.html">javax.sound.sampled</a> hay unas pocas clases que permiten reproducir archivos de música o sonidos y en el paquete <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/midi/package-summary.html">java.sound.midi</a> contiene clases para la música o sonidos digitales o sintetizados. Los tipos de archivos de música o sonidos soportados son <em>wav, au, aif</em> para los archivos <em>sampled</em>, y archivos <em>midi</em> para los digitales. Nativamente Java con las clases incluidas en el JDK no puede reproducir varios formatos de archivo de sonido populares como <em>mp3</em> u <em>ogg</em>.</p>
<p>Como Java no soporta muchos tipos de archivos para reproducir los no soportados hay que hacer una conversión a alguno de los si soportados, por ejemplo de <em>mp3</em> a <em>wav</em>. <a href="https://www.ffmpeg.org/">FFmpeg</a> es un programa con el que se pueden hacer <a href="https://picodotdev.github.io/blog-bitix/2016/03/cambiar-el-formato-de-archivos-de-musica-o-audio-en-gnu-linux/">conversiones de archivos de sonido</a> y <a href="https://picodotdev.github.io/blog-bitix/2016/04/cambiar-el-formato-de-archivos-de-video-o-peliculas-en-gnu-linux/">recodificaciones de archivos de vídeo</a> que junto con la posibilidad de <a href="https://picodotdev.github.io/blog-bitix/2016/03/como-ejecutar-un-proceso-del-sistema-con-java/">invocar desde Java un proceso del sistema</a> habilita reproducir archivos <em>mp3</em> u <em>ogg</em> desde Java.</p>
<p>La clase principal de la API de sonido es <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html">AudioSystem</a> para los archivos <em>sampled</em> y <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/midi/MidiSystem.html">MidiSystem</a> para los archivos <em>midi</em>, con los métodos <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html#getAudioFileTypes%28%29">getAudioFileTypes()</a> y <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/midi/MidiSystem.html#getMidiFileTypes%28%29">getMidiFileTypes()</a> se obtienen los archivos de audio soportados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javasound</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">printSupportedFileTypes</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">printSupportedFileTypes</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">audioFileTypes</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">AudioSystem</span><span class="o">.</span><span class="na">getAudioFileTypes</span><span class="o">()).</span><span class="na">map</span><span class="o">(</span><span class="n">it</span> <span class="o">-&gt;</span> <span class="n">it</span><span class="o">.</span><span class="na">getExtension</span><span class="o">()).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;, &#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">midiFileTypes</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">MidiSystem</span><span class="o">.</span><span class="na">getMidiFileTypes</span><span class="o">()).</span><span class="na">mapToObj</span><span class="o">(</span><span class="n">it</span> <span class="o">-&gt;</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">it</span><span class="o">)).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;, &#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Audio file types: %s%n&#34;</span><span class="o">,</span> <span class="n">audioFileTypes</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Midi file types: %s%n&#34;</span><span class="o">,</span> <span class="n">midiFileTypes</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Mixers info: %s%n&#34;</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">AudioSystem</span><span class="o">.</span><span class="na">getMixerInfo</span><span class="o">()).</span><span class="na">map</span><span class="o">(</span><span class="n">it</span> <span class="o">-&gt;</span> <span class="n">it</span><span class="o">.</span><span class="na">toString</span><span class="o">()).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;, &#34;</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-1.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Audio file types: wav, au, aif&#10;</span></span><span class="line"><span class="cl">Midi file types: 0, 1&#10;</span></span><span class="line"><span class="cl">Mixers info: Port PCH [hw:0], version 4.20.3-arch1-1-ARCH, default [default], version 4.20.3-arch1-1-ARCH, PCH [plughw:0,0], version 4.20.3-arch1-1-ARCH, PCH [plughw:0,3], version 4.20.3-arch1-1-ARCH, PCH [plughw:0,7], version 4.20.3-arch1-1-ARCH, PCH [plughw:0,8], version 4.20.3-arch1-1-ARCH, PCH [plughw:0,9], version 4.20.3-arch1-1-ARCH, PCH [plughw:0,10], version 4.20.3-arch1-1-ARCH</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-1</span>
    </div>
</div>
<p>Para reproducir un archivo <em>midi</em> hay que usar las clases <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/midi/MidiSystem.html">MidiSystem</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/midi/Sequence.html">Sequence</a> y <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/midi/Sequencer.html">Sequencer</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javasound</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">printSupportedFileTypes</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">format</span> <span class="o">=</span> <span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">switch</span> <span class="o">(</span><span class="n">format</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="s">&#34;midi&#34;</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">playMidi</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="s">&#34;wav&#34;</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">playWav</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="s">&#34;mp3&#34;</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">playMp3</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="s">&#34;ogg&#34;</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">playOgg</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">playMidi</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/midi.mid&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Sequencer</span> <span class="n">sequencer</span> <span class="o">=</span> <span class="n">MidiSystem</span><span class="o">.</span><span class="na">getSequencer</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sequencer</span><span class="o">.</span><span class="na">open</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sequencer</span><span class="o">.</span><span class="na">setSequence</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Midi duration: %d seconds%n&#34;</span><span class="o">,</span> <span class="n">sequencer</span><span class="o">.</span><span class="na">getMicrosecondLength</span><span class="o">()</span> <span class="o">/</span> <span class="mi">1000000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sequencer</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">do</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">sequencer</span><span class="o">.</span><span class="na">isRunning</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sequencer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">is</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-2.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Midi duration: 216 seconds&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-2</span>
    </div>
</div>
<p>Para reproducir un archivo <em>wav</em> hay que usar las clases <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioSystem.html">AudioSystem</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/AudioInputStream.html">AudioInputStream</a> y <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/sound/sampled/Clip.html">Clip</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javasound</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">playWav</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/wav.wav&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AudioInputStream</span> <span class="n">ais</span> <span class="o">=</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">getAudioInputStream</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Clip</span> <span class="n">clip</span> <span class="o">=</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">getClip</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">open</span><span class="o">(</span><span class="n">ais</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Audio format: %s%n&#34;</span><span class="o">,</span> <span class="n">ais</span><span class="o">.</span><span class="na">getFormat</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Sampled duration: %d seconds%n&#34;</span><span class="o">,</span> <span class="n">clip</span><span class="o">.</span><span class="na">getMicrosecondLength</span><span class="o">()</span> <span class="o">/</span> <span class="mi">1000000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">do</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">clip</span><span class="o">.</span><span class="na">isRunning</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ais</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-3.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Audio format: PCM_SIGNED 44100.0 Hz, 16 bit, stereo, 4 bytes/frame, little-endian&#10;</span></span><span class="line"><span class="cl">Sampled duration: 205 seconds&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-3</span>
    </div>
</div>
<p>Para reproducir un archivo <em>mp3</em> o <em>ogg</em> hay que convertirlo al formato <em>wav</em>, con el comando <em>FFmpeg</em> y usando una tubería leyendo de su salida resultado de la conversión con un <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/InputStream.html">InputStream</a>. En el siguiente ejemplo se realiza una conversión de un <em>mp3</em> a <em>wav</em> con el formato 44100Hz, 2 canales y de 16 bits con un proceso de <em>FFmpeg</em>. Para reproducir un archivo <em>ogg</em> el código es similar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javasound</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">playMp3</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProcessBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProcessBuilder</span><span class="o">().</span><span class="na">command</span><span class="o">(</span><span class="s">&#34;ffmpeg&#34;</span><span class="o">,</span> <span class="s">&#34;-i&#34;</span><span class="o">,</span> <span class="s">&#34;src/main/resources/mp3.mp3&#34;</span><span class="o">,</span> <span class="s">&#34;-acodec&#34;</span><span class="o">,</span> <span class="s">&#34;pcm_s16le&#34;</span><span class="o">,</span> <span class="s">&#34;-ar&#34;</span><span class="o">,</span> <span class="s">&#34;44100&#34;</span><span class="o">,</span> <span class="s">&#34;-ac&#34;</span><span class="o">,</span> <span class="s">&#34;2&#34;</span><span class="o">,</span> <span class="s">&#34;-f&#34;</span><span class="o">,</span> <span class="s">&#34;wav&#34;</span><span class="o">,</span> <span class="s">&#34;pipe:1&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Process</span> <span class="n">process</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">process</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AudioInputStream</span> <span class="n">ais</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AudioInputStream</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">getAudioInputStream</span><span class="o">(</span><span class="n">is</span><span class="o">).</span><span class="na">getFormat</span><span class="o">(),</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">NOT_SPECIFIED</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Clip</span> <span class="n">clip</span> <span class="o">=</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">getClip</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">open</span><span class="o">(</span><span class="n">ais</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Audio format: %s%n&#34;</span><span class="o">,</span> <span class="n">ais</span><span class="o">.</span><span class="na">getFormat</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Sampled duration: %d seconds%n&#34;</span><span class="o">,</span> <span class="n">clip</span><span class="o">.</span><span class="na">getMicrosecondLength</span><span class="o">()</span> <span class="o">/</span> <span class="mi">1000000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">do</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">clip</span><span class="o">.</span><span class="na">isRunning</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ais</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-4.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Audio format: PCM_SIGNED 44100.0 Hz, 16 bit, stereo, 4 bytes/frame, little-endian&#10;</span></span><span class="line"><span class="cl">Sampled duration: 205 seconds&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-4</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javasound</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">playOgg</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProcessBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProcessBuilder</span><span class="o">().</span><span class="na">command</span><span class="o">(</span><span class="s">&#34;ffmpeg&#34;</span><span class="o">,</span> <span class="s">&#34;-i&#34;</span><span class="o">,</span> <span class="s">&#34;src/main/resources/ogg.ogg&#34;</span><span class="o">,</span> <span class="s">&#34;-acodec&#34;</span><span class="o">,</span> <span class="s">&#34;pcm_s16le&#34;</span><span class="o">,</span> <span class="s">&#34;-ar&#34;</span><span class="o">,</span> <span class="s">&#34;44100&#34;</span><span class="o">,</span> <span class="s">&#34;-ac&#34;</span><span class="o">,</span> <span class="s">&#34;2&#34;</span><span class="o">,</span> <span class="s">&#34;-f&#34;</span><span class="o">,</span> <span class="s">&#34;wav&#34;</span><span class="o">,</span> <span class="s">&#34;pipe:1&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Process</span> <span class="n">process</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">process</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AudioInputStream</span> <span class="n">ais</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AudioInputStream</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">getAudioInputStream</span><span class="o">(</span><span class="n">is</span><span class="o">).</span><span class="na">getFormat</span><span class="o">(),</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">NOT_SPECIFIED</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Clip</span> <span class="n">clip</span> <span class="o">=</span> <span class="n">AudioSystem</span><span class="o">.</span><span class="na">getClip</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">open</span><span class="o">(</span><span class="n">ais</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Audio format: %s%n&#34;</span><span class="o">,</span> <span class="n">ais</span><span class="o">.</span><span class="na">getFormat</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Sampled duration: %d seconds%n&#34;</span><span class="o">,</span> <span class="n">clip</span><span class="o">.</span><span class="na">getMicrosecondLength</span><span class="o">()</span> <span class="o">/</span> <span class="mi">1000000</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">do</span>  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">clip</span><span class="o">.</span><span class="na">isRunning</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clip</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ais</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-5.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Audio format: PCM_SIGNED 44100.0 Hz, 16 bit, stereo, 4 bytes/frame, little-endian&#10;</span></span><span class="line"><span class="cl">Sampled duration: 205 seconds&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-5</span>
    </div>
</div>
<p>En todos los casos como se muestra en el código es posible también conocer la duración de un archivo de sonido. En realidad al usar <em>FFmpeg</em> cualquier tipo de archivo de sonido que soporte la conversión a <em>wav</em> es reproducible con Java, y no son pocos los soportados incluso muchos no tan populares como el <em>mp3</em> o <em>ogg</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ffmpeg -codecs&#10;</span></span><span class="line"><span class="cl">$ ffmpeg -formats&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ffmpeg.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaSound">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run --args=&#34;midi&#34;, ./gradlew run --args=&#34;mp3&#34;, ./gradlew run --args=&#34;ogg&#34;</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.oracle.com/javase/tutorial/sound/sampled-overview.html">Tutorial Java Sound</a></li>
<li><a href="https://www.oracle.com/technetwork/java/javase/tech/index-jsp-140239.html">Java Media Framework</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/01/generar-procesar-y-modificar-documentos-json-con-json-p-en-java/</id>
        <title>Generar, procesar y modificar documentos JSON con JSON-P en Java</title>
        <updated>2019-01-18T18:00:00+01:00</updated>
        <published>2019-01-18T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/01/generar-procesar-y-modificar-documentos-json-con-json-p-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Los servicios que ofrecen una API REST normalmente emplean JSON como formato para intercambiar datos tanto en las peticiones como en las respuestas. En Java hay varias formas de generar y procesar JSON para obtener los datos que contiene.</p>
<p>Una de las formas estándar es usando la <a href="https://javaee.github.io/jsonp/">especificación JSON-P</a> que convierte un JSON a una estructura de objetos Java que representan los datos del JSON como son los objetos <a href="https://static.javadoc.io/javax.json/javax.json-api/1.1.4/javax/json/Json.html">Json</a>, <a href="https://static.javadoc.io/javax.json/javax.json-api/1.1.4/javax/json/JsonObject.html">JsonObject</a>, <a href="https://static.javadoc.io/javax.json/javax.json-api/1.1.4/javax/json/JsonArray.html">JsonArray</a>, <a href="https://static.javadoc.io/javax.json/javax.json-api/1.1.4/javax/json/JsonString.html">JsonString</a> o <a href="https://static.javadoc.io/javax.json/javax.json-api/1.1.4/javax/json/JsonNumber.html">JsonNumber</a>. Esta API permite convertir una cadena de texto en formato JSON a objetos de la API y una jerarquía de objetos de la API a una cadena.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comprador</span> <span class="n">comprador</span> <span class="o">=</span> <span class="n">buildComprador</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Comprador</span><span class="o">&gt;</span> <span class="n">compradores</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">buildComprador</span><span class="o">(),</span> <span class="n">buildComprador</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">json</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">arrayJson</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// JSON-P&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonObject</span> <span class="n">jsonp</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createObjectBuilder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;nombre&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getNombre</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;edad&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getEdad</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;direcciones&#34;</span><span class="o">,</span> <span class="n">Json</span><span class="o">.</span><span class="na">createArrayBuilder</span><span class="o">().</span><span class="na">add</span><span class="o">(</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Json</span><span class="o">.</span><span class="na">createObjectBuilder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;calle&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getCalle</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;ciudad&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getCiudad</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;codigoPostal&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getCodigoPostal</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;pais&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">getPais</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">Json</span><span class="o">.</span><span class="na">createObjectBuilder</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;calle&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">getCalle</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;ciudad&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">getCiudad</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;codigoPostal&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">getCodigoPostal</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;pais&#34;</span><span class="o">,</span> <span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">getPais</span><span class="o">()))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonArray</span> <span class="n">arrayJsonp</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createArrayBuilder</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">jsonp</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="n">jsonp</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">json</span> <span class="o">=</span> <span class="n">jsonp</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jsonp</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createReader</span><span class="o">(</span><span class="k">new</span> <span class="n">StringReader</span><span class="o">(</span><span class="n">json</span><span class="o">)).</span><span class="na">readObject</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;JSON-P: %s%n&#34;</span><span class="o">,</span> <span class="n">json</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;JSON-P (JsonObject): %s%n&#34;</span><span class="o">,</span> <span class="n">jsonp</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;JSON-P (JsonArray): %s%n&#34;</span><span class="o">,</span> <span class="n">arrayJson</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Comprador</span> <span class="nf">buildComprador</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Comprador</span> <span class="n">comprador</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Comprador</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span><span class="o">.</span><span class="na">setNombre</span><span class="o">(</span><span class="s">&#34;Juan&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span><span class="o">.</span><span class="na">setEdad</span><span class="o">(</span><span class="mi">30</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">buildDireccion</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">comprador</span><span class="o">.</span><span class="na">getDirecciones</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">buildDireccion</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">comprador</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Direccion</span> <span class="nf">buildDireccion</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">Direccion</span><span class="o">(</span><span class="s">&#34;calle&#34;</span><span class="o">,</span> <span class="s">&#34;ciudad&#34;</span><span class="o">,</span> <span class="s">&#34;codigoPostal&#34;</span><span class="o">,</span> <span class="s">&#34;pais&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-1.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">JSON-P: {&#34;name&#34;:&#34;Juan&#34;,&#34;edad&#34;:30,&#34;direcciones&#34;:[{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;},{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;}]}&#10;</span></span><span class="line"><span class="cl">JSON-P (JsonObject): {&#34;name&#34;:&#34;Juan&#34;,&#34;edad&#34;:30,&#34;direcciones&#34;:[{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;},{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;}]}&#10;</span></span><span class="line"><span class="cl">JSON-P (JsonArray): [{&#34;nombre&#34;:&#34;Juan&#34;,&#34;fechaNacimiento&#34;:&#34;2020-09-18&#34;,&#34;direcciones&#34;:[{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;},{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;}]},{&#34;nombre&#34;:&#34;Juan&#34;,&#34;fechaNacimiento&#34;:&#34;2020-09-18&#34;,&#34;direcciones&#34;:[{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;},{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;}]}]</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-1</span>
    </div>
</div>
<p>JSON-P permite analizar un JSON recibiendo un flujo de eventos en su lectura con la <em>Stream API</em> además de soportar las especificaciones <a href="https://tools.ietf.org/html/rfc6901">JSON Pointer</a> para construir una referencia a una valor del documento JSON que junto con <a href="https://tools.ietf.org/html/rfc6902">JSON Patch</a> y <a href="https://tools.ietf.org/html/rfc7396">JSON Merge Patch</a> permite realizar operaciones de modificación a un documento JSON o un recurso en una API REST con el verbo <em>PATCH</em> de <em>HTTP</em>. Las clases en la API son <a href="https://static.javadoc.io/javax.json/javax.json-api/1.1.4/javax/json/JsonPointer.html">JsonPointer</a>, <a href="https://static.javadoc.io/javax.json/javax.json-api/1.1.4/javax/json/JsonPatch.html">JsonPatch</a> y <a href="https://static.javadoc.io/javax.json/javax.json-api/1.1.4/javax/json/JsonMergePatch.html">JsonMergePatch</a>.</p>
<p>En el ejemplo se agrega un nuevo campo y se elimina un elemento de un array a un documento JSON haciendo uso de JSON Pointer y JSON Patch. En los documentos de las especificaciones se incluyen algunos ejemplos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javajson</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonPatch</span> <span class="n">jsonPatch</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createPatchBuilder</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;/telefono&#34;</span><span class="o">,</span> <span class="s">&#34;111111111&#34;</span><span class="o">).</span><span class="na">remove</span><span class="o">(</span><span class="s">&#34;/direcciones/0&#34;</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jsonp</span> <span class="o">=</span> <span class="n">jsonPatch</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="n">jsonp</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;JSON-P (JsonPatch): %s%n&#34;</span><span class="o">,</span> <span class="n">jsonPatch</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;JSON-P (JsonObject): %s%n&#34;</span><span class="o">,</span> <span class="n">jsonp</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-2.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">JSON-P (JsonPatch): [{&#34;op&#34;:&#34;add&#34;,&#34;path&#34;:&#34;/telefono&#34;,&#34;value&#34;:&#34;111111111&#34;},{&#34;op&#34;:&#34;remove&#34;,&#34;path&#34;:&#34;/direcciones/0&#34;}]&#10;</span></span><span class="line"><span class="cl">JSON-P (JsonObject): {&#34;name&#34;:&#34;Juan&#34;,&#34;edad&#34;:30,&#34;direcciones&#34;:[{&#34;calle&#34;:&#34;calle&#34;,&#34;ciudad&#34;:&#34;ciudad&#34;,&#34;codigoPostal&#34;:&#34;codigoPostal&#34;,&#34;pais&#34;:&#34;pais&#34;}],&#34;telefono&#34;:&#34;111111111&#34;}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out-2</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s2">&#34;javax.json:javax.json-api:1.1&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>JSON-P es una API de bajo nivel para procesar JSON y un tanto engorrosa de utilizar, no es la única forma utilizable. También está la especificación <a href="http://json-b.net/">JSON-B</a> que va un poco más lejos que JSON-P y ofrece una forma de hacer una correspondencia entre el JSON y tipos propios en Java que siguen las convenciones de los <a href="https://es.wikipedia.org/wiki/JavaBean">Java Bean</a>, con esto se aprovecha la validación de tipos de Java. Las librerías <a href="https://github.com/google/gson">Gson</a> y <a href="https://github.com/FasterXML/jackson">Jackson</a> también ofrece soporte para tratar con JSON de forma parecida a JSON-B. Otra alternativa es utilizar <a href="https://github.com/json-path/JsonPath">JsonPath</a> que permite extraer datos de una cadena JSON con expresiones de selección.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaJson">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/usar-expresiones-jsonpath-para-extraer-datos-de-un-json-en-java/">Usar expresiones JSONPath para extraer datos de un JSON en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/convertir-un-json-a-objetos-y-objetos-a-json-con-json-b-gson-y-jackson-en-java/">Convertir un JSON a objetos y objetos a JSON con JSON-B, Gson y Jackson en Java</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/01/comandos-para-compilar-codigo-fuente-y-ejecutar-programas-java/</id>
        <title>Comandos para compilar código fuente y ejecutar programas Java</title>
        <updated>2020-10-24T22:30:00+01:00</updated>
        <published>2019-01-13T14:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/01/comandos-para-compilar-codigo-fuente-y-ejecutar-programas-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Aún recuerdo cuando empecé a programar con el lenguaje Java sobre el año 1997 que la compilación y ejecución del código la hacía manualmente con los comandos <a href="https://docs.oracle.com/en/java/javase/11/tools/javac.html">javac</a> <a href="https://docs.oracle.com/en/java/javase/11/tools/java.html">java</a> y <a href="https://docs.oracle.com/en/java/javase/11/tools/jar.html">jar</a> en un máquina Intel Pentium a 120 Mhz con tan solo 8 MiB, más tarde 32 MiB, con Windows 95 y Java 1.2, momento en el que ni siquiera había un IDE ni las herramientas de construcción modernas como <a href="https://maven.apache.org/">Maven</a> y <a href="https://gradle.org/">Gradle</a>, había que descargar manualmente las librerías de dependencias en forma de archivos <em>jar</em> que se requiriesen. Luego con JBuilder como IDE este se encargaba de realizar la compilación y ejecución y no hacía falta utilizar estos comandos directamente.</p>
<p>Ahora con herramientas como Gradle además de compilar y ejecutar el programa incluso las dependencias son descargadas de forma automática de repositorios donde se ubican versionadas incluso de forma transitiva, descargando las dependencias de las dependencias.</p>
<p>Usar estos dos comandos directamente ya no es necesario pero como curiosidad comentaré como es su uso ya que siguen formando parte del <a href="https://picodotdev.github.io/blog-bitix/2020/10/entorno-de-desarrollo-java-para-editar-compilar-y-ejecutar-programas/">entorno de desarrollo mínimo de Java para editar, compilar y ejecutar programas</a>. El comando <em>javac</em> sirve para compilar los archivos de código fuente, dado que los paquetes del código fuente de Java se corresponden con directorios en el sistema de archivos el código fuente se ha de ubicar de forma consistente entre la estructura de directorio y el código fuente. Suponiendo que que hay las siguientes clases que hacen uso de la librería <a href="https://logging.apache.org/log4j/2.x/">log4j2</a> y están ubicadas en el directorio <em>src/main/java</em> con la misma convención que utiliza Gradle el comando para realizar la compilación y copiar los recursos es el siguiente.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="estructura-de-directorios-de-un-proyecto">Estructura de directorios de un proyecto</h3>
<p>Las herramientas de construcción Maven y Gradle siguen una convención en la estructura de directorios y archivos para los proyectos Java. Esta convención proporciona que la estructura de directorios sea la misma en todos los proyectos Java y hace innecesaria una configuración específica para cada proyecto lo que hace a los proyectos más sencillos y fáciles de empezar. El código fuente se ubica en el directorio <em>src/main/java</em> y las clases compiladas se generan en el directorio <em>target</em> o <em>build</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ tree&#10;</span></span><span class="line"><span class="cl">.&#10;</span></span><span class="line"><span class="cl">├── jar.sh&#10;</span></span><span class="line"><span class="cl">├── javac.sh&#10;</span></span><span class="line"><span class="cl">├── java-jar.sh&#10;</span></span><span class="line"><span class="cl">├── java.sh&#10;</span></span><span class="line"><span class="cl">├── libraries&#10;</span></span><span class="line"><span class="cl">│   ├── log4j-api-2.11.1.jar&#10;</span></span><span class="line"><span class="cl">│   └── log4j-core-2.11.1.jar&#10;</span></span><span class="line"><span class="cl">├── src&#10;</span></span><span class="line"><span class="cl">│   └── main&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; ├── java&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; │   └── io&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; │  &nbsp;&nbsp;&nbsp;&nbsp; └── github&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; │  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; └── picodotdev&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; │  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; └── blogbitix&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; │  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; └── java8&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; │  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; └── helloworld&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; │  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; └── Main.java&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; ├── misc&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; │   └── MANIFEST.MF&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp; └── resources&#10;</span></span><span class="line"><span class="cl">│  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; └── log4j2.xml&#10;</span></span><span class="line"><span class="cl">└── target&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;└── classes&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="m">14</span> directories, <span class="m">9</span> files</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tree.sh</span>
    </div>
</div>
<h3 id="el-programa-hola-mundo-en-java">El programa Hola Mundo en Java</h3>
<p>El siguiente es el programa mínimo de Java similar al <em>Hola Mundo</em> por el que se suele empezar a programar en cualquier lenguaje de programación, al ejecutarse simplemente emite un mensaje en la consola. El método <em>main</em> es un método estático, con un ámbito de visibilidad público, está dentro de una clase, recibe un <em>array</em> de <em>strings</em> con los argumentos con los que ha invocado su ejecución y retorna <em>void</em>. El método <em>System.out.println()</em> recibe un <em>string</em> y lo emite en la salida estándar del programa.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.java8.helloworld</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Arguments: {}&#34;</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">args</span><span class="o">).</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;, &#34;</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<h3 id="comando-para-compilar-código-fuente-java">Comando para compilar código fuente Java</h3>
<p>Para compilar el código fuente Java se usa el compilador de Java, el compilador de Java es un programa que a partir del código fuente genera archivos de <em>bytecode</em>, el programa y comando del compilador de Java es <em>javac</em>.</p>
<p>Con el parámetro <em>-classpath</em> se indica la ubicación de las librerías o dependencias que requiriere el código fuente, con el parámetro <em>-sourcepath</em> el directorio raíz de los archivos de código fuente, el parámetro <em>-source</em> indica la versión del lenguaje del código fuente, <em>-target</em> la versión de la máquina virtual del <em>bytecode</em> que generará el compilador y con el parámetro <em>-d</em> el directorio donde generan los archivos <em>class</em> con el <em>bytecode</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>javac -classpath <span class="s2">&#34;libraries/*&#34;</span> -sourcepath src/main/java -source 1.8 -target 1.8 -d target/classes src/main/java/io/github/picodotdev/blogbitix/java8/helloworld/Main.java&#10;</span></span><span class="line"><span class="cl">cp -r src/main/resources/* target/classes</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>javac.sh</span>
    </div>
</div>
<h3 id="comando-para-ejecutar-un-programa-java">Comando para ejecutar un programa Java</h3>
<p>Una vez generados los archivos de <em>bytecode</em> a partir de la compilación del código fuente su ejecución se realiza con el comando <em>java</em> donde hay que indicar las ubicaciones del los archivos <em>class</em> y las librerías <em>jar</em> necesarias que necesiten, la clase principal con el punto de entrada del programa que contenga un método <em>public static void main(String[] args)</em> y los parámetros del programa que se reciben en el parámetro <em>args</em> del método <em>main</em>. En la ejecución del programa la máquina virtual de Java interpreta el <em>bytecode</em> que consiste en traducir a código máquina ejecutable por el procesador del sistema anfitrión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>java -classpath <span class="s2">&#34;target/classes:libraries/*&#34;</span> io.github.picodotdev.blogbitix.java8.helloworld.Main <span class="s2">&#34;</span><span class="nv">$@</span><span class="s2">&#34;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>java.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./java.sh arg1 arg2 arg3&#10;</span></span><span class="line"><span class="cl">16:13:45.386 <span class="o">[</span>main<span class="o">]</span> INFO  io.github.picodotdev.blogbitix.java8.helloworld.Main Arguments: arg1, arg2, arg3&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>java-run.sh</span>
    </div>
</div>
<h3 id="comando-para-crear-una-librería-java-ejecutable">Comando para crear una librería Java ejecutable</h3>
<p>La distribución de los archivos <em>class</em> se suele realizar usando librerías <em>jar</em> y estas se construyen usando el comando <em>jar</em>. El <a href="https://docs.oracle.com/javase/tutorial/deployment/jar/manifestindex.html">archivo de manifiesto</a> es un descriptor en el que se puede indicar la clase de entrada sin tener que especificarla en el comando <em>java</em> haciendo los archivo <em>jar</em> similar a un ejecutable.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>jar cvfm holamundojava8.jar src/main/misc/MANIFEST.MF -C target/classes .&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>jar.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Main-Class: io.github.picodotdev.blogbitix.java8.helloworld.Main&#10;</span></span><span class="line"><span class="cl">Class-Path: libraries/log4j-api-2.11.1.jar libraries/log4j-core-2.11.1.jar&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MANIFEST.MF</span>
    </div>
</div>
<p>Y la ejecución de del programa contenido en el archivo <em>jar</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>java -jar holamundojava8.jar <span class="s2">&#34;</span><span class="nv">$@</span><span class="s2">&#34;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>java-jar.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./java-jar.sh arg1 arg2 arg3&#10;</span></span><span class="line"><span class="cl">16:20:33.848 <span class="o">[</span>main<span class="o">]</span> INFO  io.github.picodotdev.blogbitix.java8.helloworld.Main Arguments: arg1, arg2, arg3&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>java-jar-run.sh</span>
    </div>
</div>
<p>Así es la compilación y ejecución de código Java en Java 8 y anteriores, con la <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/">introducción de la modularidad a partir de Java 9</a> esto cambia ya que el <em>classpath</em> queda obsoleto y es reemplazado por el equivalente con módulos <em>module-path</em>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoJava8">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/</id>
        <title>Acceder a hojas de cálculo de Google Docs mediante API desde una aplicación Java</title>
        <updated>2019-01-12T18:30:00+01:00</updated>
        <published>2019-01-12T18:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/google.svg" width="350" height="118" alt="Google" title="Google"  class=""></p>
</div>
<p><a href="https://developers.google.com/products/develop/">Google ofrece numerosos productos de desarrollo</a> que permiten automatizar tareas e realizar integración con servicios, aplicaciones y documentos de Google creando un programa con un lenguaje de programación. <a href="https://developers.google.com/api-client-library/java/apis/">Las API que ofrece Google</a> desde <a href="https://www.google.es/drive/apps.html">Drive</a>, <a href="https://www.google.com/intl/es/sheets/about/">Sheets</a>, <a href="https://www.google.com/intl/es/slides/about/">Sides</a>, <a href="https://www.google.com/intl/es/gmail/about/">GMail</a>, <a href="https://www.google.com/calendar/about/">Calendar</a>, <a href="https://contacts.google.com/">Contacts</a>, <a href="https://www.google.es/intl/es/streetview/">Street View</a>, <a href="https://www.google.com/adsense/">AdSense</a>, <a href="https://www.google.es/intl/es/analytics/">Analytics</a>, <a href="https://www.youtube.com/">Youtube</a>,  <a href="https://cloud.google.com/speech-to-text/">Speech</a> y muchos más.</p>
<ul>
<li><a href="https://developers.google.com/api-client-library/">Google API Client Libraries</a></li>
<li><a href="https://developers.google.com/api-client-library/java/">Google API Client Libraries, Java</a></li>
</ul>
<p>Para acceder a los servicios mediante APIs hay que obtener unas credenciales. Un ejemplo es el siguiente usando un API <em>key</em> para acceder a una hoja de cálculo compartida para cualquier usuario que tenga el enlace o identificativo del documento en Google Drive. Cada servicio de Google ofrece una API distinta según su contexto y datos que maneja.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.javagoogleapi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Credential</span> <span class="nf">getCredentialsApiKey</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">GoogleCredential</span><span class="o">().</span><span class="na">createScoped</span><span class="o">(</span><span class="n">SCOPES</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">GeneralSecurityException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">NetHttpTransport</span> <span class="n">httpTransport</span> <span class="o">=</span> <span class="n">GoogleNetHttpTransport</span><span class="o">.</span><span class="na">newTrustedTransport</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonFactory</span> <span class="n">jsonFactory</span> <span class="o">=</span> <span class="n">JacksonFactory</span><span class="o">.</span><span class="na">getDefaultInstance</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Sheets</span> <span class="n">service</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sheets</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">httpTransport</span><span class="o">,</span> <span class="n">jsonFactory</span><span class="o">,</span> <span class="n">getCredentialsApiKey</span><span class="o">()).</span><span class="na">setApplicationName</span><span class="o">(</span><span class="n">APPLICATION_NAME</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-1.java</span>
    </div>
</div>
<p>Las hojas de cálculo se utilizan para contener información, son fácilmente editables por los usuarios y se convierten casi en una forma de base de datos. Con <a href="https://developers.google.com/sheets/api/">las APIs que ofrece Google para Spreadsheets</a> esta información es utilizable en una aplicación, un buen caso de uso es aquel en el que ciertos datos o parámetros potencialmente cambian cada cierto tiempo o según reglas de negocio. Por ejemplo, se puede crear una hoja de cálculo con los precios, descripciones, existencias, disponibilidad o gastos de envío de los productos e importar esta información en la base de datos de una aplicación usando una API de Google, en vez de crear una aplicación <em>backoffice</em> de edición a medida para editar esa información, la aplicación consistiría en procesar el documento e insertar su información en la base de datos.</p>
<p>Como contrapartida de estas integraciones hay que tener en cuenta que una aplicación se hace dependiente del servicio los servicios de Google que utilice, hay que evaluar si esta dependencia es deseable.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/0rpgVE_nrIk" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>Otro posible aplicación es utilizar documentos de texto en Google Drive como plantillas de correos electrónicos, se permite una edición sencilla y posteriormente se importan en la aplicación para que los utilice. A un documento de Google Drive se accede mediante esta petición HTTP GET. Las hojas de cálculo también están disponibles mediante una interfaz REST sin embargo usando las APIs que ofrece Google para cada lenguaje es más cómodo que tratar con los datos en crudo en formato JSON.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -X GET <span class="s2">&#34;https://sheets.googleapis.com/v4/spreadsheets/1JhBPGW4F.../values/Hoja1?key=AIzaSyDGwW...&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;range&#34;</span>: <span class="s2">&#34;Hoja1!A1:AA1000&#34;</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;majorDimension&#34;</span>: <span class="s2">&#34;ROWS&#34;</span>,&#10;</span></span><span class="line"><span class="cl">  <span class="s2">&#34;values&#34;</span>: <span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;a1&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;a3&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;a2&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;a4&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">  <span class="o">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -X GET <span class="s2">&#34;https://www.googleapis.com/drive/v3/files/1YCnD37w6p.../export?key=AIzaSyDGwW...&amp;mimeType=text/plain&#34;</span>&#10;</span></span><span class="line"><span class="cl">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed <span class="k">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation &#10;</span></span><span class="line"><span class="cl">ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint&#10;</span></span><span class="line"><span class="cl">occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-2.sh</span>
    </div>
</div>
<p>Para las hojas de cálculo hay dos formas de autorización para una aplicación. Mediante una API <em>key</em> con permisos de utilización de la API permite acceder a cualquier documento público, compartido de forma pública o para los usuarios que tengan el enlace o identificativo del documento. La otra más segura es creando una cuenta de servicio de forma que el documento se comparta únicamente con esa cuenta de servicio como si de cualquier otro usuario se tratase en vez de hacerlo público o para cualquiera que tenga el enlace.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.javagoogleapi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">CREDENTIALS_FILE_PATH</span> <span class="o">=</span> <span class="s">&#34;/blogbitix-119471bc8ebf.json&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Credential</span> <span class="nf">getCredentialsServiceAccount</span><span class="o">(</span><span class="n">NetHttpTransport</span> <span class="n">httpTransport</span><span class="o">,</span> <span class="n">JsonFactory</span> <span class="n">jsonFactory</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">CREDENTIALS_FILE_PATH</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">GoogleCredential</span><span class="o">.</span><span class="na">fromStream</span><span class="o">(</span><span class="n">in</span><span class="o">,</span> <span class="n">httpTransport</span><span class="o">,</span> <span class="n">jsonFactory</span><span class="o">).</span><span class="na">createScoped</span><span class="o">(</span><span class="n">SCOPES</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">GeneralSecurityException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">NetHttpTransport</span> <span class="n">httpTransport</span> <span class="o">=</span> <span class="n">GoogleNetHttpTransport</span><span class="o">.</span><span class="na">newTrustedTransport</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonFactory</span> <span class="n">jsonFactory</span> <span class="o">=</span> <span class="n">JacksonFactory</span><span class="o">.</span><span class="na">getDefaultInstance</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Sheets</span> <span class="n">service</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sheets</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">httpTransport</span><span class="o">,</span> <span class="n">jsonFactory</span><span class="o">,</span> <span class="n">getCredentialsServiceAccount</span><span class="o">(</span><span class="n">httpTransport</span><span class="o">,</span> <span class="n">jsonFactory</span><span class="o">)).</span><span class="na">setApplicationName</span><span class="o">(</span><span class="n">APPLICATION_NAME</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-2.java</span>
    </div>
</div>
<p>Laa API <em>key</em> se crean en la página de <a href="https://console.developers.google.com/apis/credentials">Credenciales</a> para lo que previamente hay que crear un proyecto. Para leer el documento hay que compartirlo al menos para cualquiera que tenga acceso al enlace, al compartirlo se especifica si se hace en modo solo lectura o con permisos de escritura.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-credentials_hu116c94ed86a1fadfd830c4a2c6fc8ede_54231_2560x1440_fit_box_3.png" data-gallery="" title="Google Credentials"><img src="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-credentials_hu116c94ed86a1fadfd830c4a2c6fc8ede_54231_300x200_fit_box_3.png" width="300" height="129" alt="Google Credentials" title="Google Credentials"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-api-key_hu1c94b54ead1ec0fe0a478bd78fbd4bde_63148_2560x1440_fit_box_3.png" data-gallery="" title="Google API Key"><img src="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-api-key_hu1c94b54ead1ec0fe0a478bd78fbd4bde_63148_300x200_fit_box_3.png" width="269" height="200" alt="Google API Key" title="Google API Key"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-document-share_hu3a75edaafaa8302f727a6b88b49d99c8_55990_2560x1440_fit_box_3.png" data-gallery="" title="Compartir documento en Google Drive"><img src="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-document-share_hu3a75edaafaa8302f727a6b88b49d99c8_55990_300x200_fit_box_3.png" width="300" height="168" alt="Compartir documento en Google Drive" title="Compartir documento en Google Drive"  class="lozad "></a></p>
<figcaption>Google Credentials, API Key y compartir documento</figcaption>
</figure>
</div>
<p>El enlace al compartir el documento o al editarlo contiene el identificativo de documento. Con la API <em>key</em> o cuenta de servicio, el identificativo del documento y el documento compartido al menos para cualquiera que tenga el enlace la información del documento está accesible para una aplicación mediante una API REST o de forma programática con una implementación de la API con Java, este programa Java imprime el contenido de las celdas de la hoja de cálculo en la terminal. Se necesita una expresión que identifique la hoja y el contenido de las celdas de las que se quieren datos con un <a href="https://developers.google.com/sheets/api/guides/concepts#a1_notation">rango en notación A1</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-spreadsheet_hu2ac3b424b62ef874983c386522926d77_25924_2560x1440_fit_box_3.png" data-gallery="" title="Hoja de cálculo de Google"><img src="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-spreadsheet_hu2ac3b424b62ef874983c386522926d77_25924_300x200_fit_box_3.png" width="300" height="164" alt="Hoja de cálculo de Google" title="Hoja de cálculo de Google"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-document_hu02b1ae11f15da7edaf19c311b5f5b343_45403_2560x1440_fit_box_3.png" data-gallery="" title="Documento de Google"><img src="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-document_hu02b1ae11f15da7edaf19c311b5f5b343_45403_300x200_fit_box_3.png" width="300" height="135" alt="Documento de Google" title="Documento de Google"  class="lozad "></a></p>
<figcaption>Hoja de cálculo y documento de Google</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.javagoogleapi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">GeneralSecurityException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Sheets</span> <span class="n">service</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sheets</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">httpTransport</span><span class="o">,</span> <span class="n">jsonFactory</span><span class="o">,</span> <span class="n">getCredentialsApiKey</span><span class="o">()).</span><span class="na">setApplicationName</span><span class="o">(</span><span class="n">APPLICATION_NAME</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ValueRange</span> <span class="n">response</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">spreadsheets</span><span class="o">().</span><span class="na">values</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="n">SPREADSHEET_ID</span><span class="o">,</span> <span class="n">RANGE</span><span class="o">).</span><span class="na">setKey</span><span class="o">(</span><span class="n">API_KEY</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;&gt;</span> <span class="n">values</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getValues</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">values</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">values</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;No data found.&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">row</span> <span class="o">:</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">row</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">Object</span><span class="o">::</span><span class="n">toString</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">stream</span><span class="o">.</span><span class="na">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;, &#34;</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-3.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="hl"><span class="lnt"> 7&#10;</span></span><span class="hl"><span class="lnt"> 8&#10;</span></span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl">$ ./gradlew run&#10;</span></span><span class="line"><span class="cl">&gt; Task :compileJava&#10;</span></span><span class="line"><span class="cl">&gt; Task :processResources UP-TO-DATE&#10;</span></span><span class="line"><span class="cl">&gt; Task :classes&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&gt; Task :run&#10;</span></span><span class="line hl"><span class="cl">a1, a3&#10;</span></span><span class="line hl"><span class="cl">a2, a4&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">BUILD SUCCESSFUL in 1s&#10;</span></span><span class="line"><span class="cl"><span class="m">3</span> actionable tasks: <span class="m">2</span> executed, <span class="m">1</span> up-to-date</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.sh</span>
    </div>
</div>
<p>El método de API <em>key</em> obliga a hacer público el documento lo que no es deseable desde el punto de vista de seguridad aunque es un poco más simple que crear una cuenta de servicio. Para no hacer público el documento pero permitir acceder a una aplicación hay que crear una cuenta de servicio en la página <a href="https://console.developers.google.com/iam-admin/serviceaccounts">Cuentas de servicio</a> seleccionando o creando un proyecto.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-service-account_hu2d83f14d9df8a03d71287aee955052d9_71479_2560x1440_fit_box_3.png" data-gallery="" title="Cuenta de servicio de Google"><img src="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-service-account_hu2d83f14d9df8a03d71287aee955052d9_71479_300x200_fit_box_3.png" width="300" height="133" alt="Cuenta de servicio de Google" title="Cuenta de servicio de Google"  class="lozad "></a></p>
<figcaption>Cuenta de servicio de Google</figcaption>
</figure>
</div>
<p>Al crear una cuenta de servicio y una clave se genera un archivo en formato JSON con las credenciales que hay que guardar y utilizar en una aplicación para acceder a los documentos compartidos con esta cuenta de servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">{&#10;</span></span><span class="line"><span class="cl">  &#34;type&#34;: &#34;service_account&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;project_id&#34;: &#34;blogbitix&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;private_key_id&#34;: &#34;119471bc8...&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;private_key&#34;: &#34;-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDFQpNVknb3bRp9\n...\n-----END PRIVATE KEY-----\n&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;client_email&#34;: &#34;blogbitix@blogbitix.iam.gserviceaccount.com&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;client_id&#34;: &#34;110222042...&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;auth_uri&#34;: &#34;https://accounts.google.com/o/oauth2/auth&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;token_uri&#34;: &#34;https://oauth2.googleapis.com/token&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;auth_provider_x509_cert_url&#34;: &#34;https://www.googleapis.com/oauth2/v1/certs&#34;,&#10;</span></span><span class="line"><span class="cl">  &#34;client_x509_cert_url&#34;: &#34;https://www.googleapis.com/robot/v1/metadata/x509/blogbitix%40blogbitix.iam.gserviceaccount.com&#34;&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>blogbitix-119471bc8ebf.json</span>
    </div>
</div>
<p>En vez de compartir el documento con cualquiera que tenga en enlace, con una cuenta de servicio el documento se puede compartir únicamente con esa cuenta de servicio, la cuenta de servicio posee un correo electrónico que la identifica, el documento se puede compartir únicamente con esta cuenta de servicio como si de cualquier otro usuario se tratase.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-document-share-service-account_hubd4913666ed69164853f4d9189f90b0d_78026_2560x1440_fit_box_3.png" data-gallery="" title="Documento compartido con cuenta de servicio"><img src="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/images/google-document-share-service-account_hubd4913666ed69164853f4d9189f90b0d_78026_300x200_fit_box_3.png" width="269" height="200" alt="Documento compartido con cuenta de servicio" title="Documento compartido con cuenta de servicio"  class="lozad "></a></p>
<figcaption>Documento compartido con cuenta de servicio</figcaption>
</figure>
</div>
<p>El siguiente código Java accede a un documento utilizando las credenciales de una cuenta de servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.javagoogleapi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">....</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">APPLICATION_NAME</span> <span class="o">=</span> <span class="s">&#34;JavaGoogleApi&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">API_KEY</span> <span class="o">=</span> <span class="s">&#34;AIzaSyDBZ...&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">CREDENTIALS_FILE_PATH</span> <span class="o">=</span> <span class="s">&#34;/blogbitix-119471bc8ebf.json&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">SPREADSHEET_ID</span> <span class="o">=</span> <span class="s">&#34;1JhBPGW4F...&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">RANGE</span> <span class="o">=</span> <span class="s">&#34;Hoja1&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">SCOPES</span> <span class="o">=</span> <span class="n">Collections</span><span class="o">.</span><span class="na">singletonList</span><span class="o">(</span><span class="n">SheetsScopes</span><span class="o">.</span><span class="na">SPREADSHEETS_READONLY</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Credential</span> <span class="nf">getCredentialsApiKey</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">GoogleCredential</span><span class="o">().</span><span class="na">createScoped</span><span class="o">(</span><span class="n">SCOPES</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Credential</span> <span class="nf">getCredentialsServiceAccount</span><span class="o">(</span><span class="n">NetHttpTransport</span> <span class="n">httpTransport</span><span class="o">,</span> <span class="n">JsonFactory</span> <span class="n">jsonFactory</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">CREDENTIALS_FILE_PATH</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">GoogleCredential</span><span class="o">.</span><span class="na">fromStream</span><span class="o">(</span><span class="n">in</span><span class="o">,</span> <span class="n">httpTransport</span><span class="o">,</span> <span class="n">jsonFactory</span><span class="o">).</span><span class="na">createScoped</span><span class="o">(</span><span class="n">SCOPES</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">GeneralSecurityException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">NetHttpTransport</span> <span class="n">httpTransport</span> <span class="o">=</span> <span class="n">GoogleNetHttpTransport</span><span class="o">.</span><span class="na">newTrustedTransport</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonFactory</span> <span class="n">jsonFactory</span> <span class="o">=</span> <span class="n">JacksonFactory</span><span class="o">.</span><span class="na">getDefaultInstance</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Sheets</span> <span class="n">service</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sheets</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">httpTransport</span><span class="o">,</span> <span class="n">jsonFactory</span><span class="o">,</span> <span class="n">getCredentialsServiceAccount</span><span class="o">(</span><span class="n">httpTransport</span><span class="o">,</span> <span class="n">jsonFactory</span><span class="o">)).</span><span class="na">setApplicationName</span><span class="o">(</span><span class="n">APPLICATION_NAME</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ValueRange</span> <span class="n">response</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">spreadsheets</span><span class="o">().</span><span class="na">values</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="n">SPREADSHEET_ID</span><span class="o">,</span> <span class="n">RANGE</span><span class="o">).</span><span class="na">setKey</span><span class="o">(</span><span class="n">API_KEY</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;&gt;</span> <span class="n">values</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getValues</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">values</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">values</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;No data found.&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">row</span> <span class="o">:</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">row</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">Object</span><span class="o">::</span><span class="n">toString</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">stream</span><span class="o">.</span><span class="na">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;, &#34;</span><span class="o">)));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-4.java</span>
    </div>
</div>
<p>En el caso de Java hay que incluir la dependencia que proporciona la implementación de la API de Google Spreadsheets para Java como se muestra usando <a href="https://gradle.org/">Gradle</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.javagoogleapi.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;com.google.apis:google-api-services-sheets:v4-rev553-1.25.0&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Google ofrece un <a href="https://developers.google.com/apis-explorer/#p/sheets/v4/">explorador para probar las peticiones y permisos de los documentos</a> o <a href="https://developers.google.com/apis-explorer/#p/">explorar cualquier otra API de Google</a> por ejemplo esta de Drive para <a href="https://developers.google.com/apis-explorer/#p/drive/v3/drive.files.export">exportar un documento en un formato determinado</a> directamente desde una web sin tener que crear una aplicación, también se pueden <a href="https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/get">hacer peticiones desde las páginas de documentación</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaGoogleApi">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://googleapis.github.io/google-api-java-client/releases/1.25.0/javadoc/index.html">Google API Client Library for Java, Javadoc</a></li>
<li><a href="https://developers.google.com/resources/api-libraries/documentation/sheets/v4/java/latest/">Google Sheets API v4, Javadoc</a></li>
<li><a href="https://github.com/googleapis/">Código fuente Google APIs</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/</id>
        <title>Las contraseñas e información sensible en el código fuente o bytecode de Java no son seguras</title>
        <updated>2019-01-05T13:00:00+01:00</updated>
        <published>2019-01-04T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En Java el código fuente se compila a una representación en <em>bytecode</em> independiente de la arquitectura del procesador y sistema operativo donde posteriormente se ejecuta. Este <em>bytecode</em> es un formato binario pero que puede ser descompilado fácilmente con la herramienta <em>javap</em> incluida en el propio JDK o examinado su contenido simplemente con un editor de texto hexadecimal. Con estas herramientas es fácil ver las instrucciones del programa para la máquina virtual y los caracteres de las cadenas que fueron incluidas en el código fuente.</p>
<p>Lógicamente, de este modo <em>hardcodear</em> una contraseña en el código fuente hace que el código fuente sea inseguro pero es que incluso distribuir el binario compilado no es seguro ya que cualquier usuario que tenga acceso al binario de la aplicación es potencialmente capaz de recuperar la contraseña, tener acceso al binario quizá no sea sencillo pero aparte de eso no hay ninguna medida de seguridad adicional que añada más dificultad. Quien dice contraseña dice igualmente una clave privada de cifrado simétrico usada para cifrar o descifrar datos o un <em>bearer token</em> de OAuth. En definitiva es un problema de seguridad.</p>
<p>Compilado el programa y utilizando la herramienta <em>javap</em> se puede obtener el valor de la contraseña. ¿Adivinas cual es la contraseña en este archivo binario de <em>bytecode</em> examinado el contenido?</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/images/java-class-hex_hucc38684a2f2e126dcaa28adc7d18c1d8_94339_2560x1440_fit_box_3.png" data-gallery="" title="Contenido hexadecimal de un archivo binario de bytecode Java"><img src="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/images/java-class-hex_hucc38684a2f2e126dcaa28adc7d18c1d8_94339_300x200_fit_box_3.png" width="284" height="200" alt="Contenido hexadecimal de un archivo binario de bytecode Java" title="Contenido hexadecimal de un archivo binario de bytecode Java"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/images/c-bin-hex_huba456bb72be79b51d2898e9d10ffeae8_61110_2560x1440_fit_box_3.png" data-gallery="" title="Contenido hexadecimal de un archivo binario de C"><img src="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/images/c-bin-hex_huba456bb72be79b51d2898e9d10ffeae8_61110_300x200_fit_box_3.png" width="284" height="200" alt="Contenido hexadecimal de un archivo binario de C" title="Contenido hexadecimal de un archivo binario de C"  class="lozad "></a></p>
<figcaption>Contenido hexadecimal de un archivo binario de bytecode Java y C</figcaption>
</figure>
</div>
<p>El siguiente ejemplo sencillo de un programa Java incluye una cadena con una supuesta contraseña. Se observa que en el archivo visualizado en formato hexadecimal o descompilado los caracteres de la cadena son fácilmente reconocibles.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">password</span> <span class="o">=</span> <span class="s">&#34;Mz6K3P9rDZ7G6wH&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Para compilar este pequeño programa se utiliza el comando <em>javac</em> que genera el archivo de <em>bytecode</em> <em>Main.class</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ javac Main.java&#10;</span></span><span class="line"><span class="cl">$ xxd Main.class&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>javac.sh</span>
    </div>
</div>
<p>Para decompilar este pequeño programa se utiliza el comando <em>javap</em>, con él se ven las instrucciones interpretadas por la máquina virtual de Java y la cadena con la contraseña.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ javap -c Main.class&#10;</span></span><span class="line"><span class="cl">Compiled from <span class="s2">&#34;Main.java&#34;</span>&#10;</span></span><span class="line"><span class="cl">public class Main <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">  public Main<span class="o">()</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Code:&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   0: aload_0&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   1: invokespecial <span class="c1">#1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // Method java/lang/Object.&#34;&lt;init&gt;&#34;:()V</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   4: <span class="k">return</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  public static void main<span class="o">(</span>java.lang.String<span class="o">[])</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;Code:&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   0: ldc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="c1">#2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // String Mz6K3P9rDZ7G6wH</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   2: astore_1&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   3: getstatic&nbsp;&nbsp;&nbsp;&nbsp; <span class="c1">#3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // Field java/lang/System.out:Ljava/io/PrintStream;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   6: ldc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="c1">#4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // String Hello World!</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   8: invokevirtual <span class="c1">#5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  11: <span class="k">return</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>javap.sh</span>
    </div>
</div>
<p>Que el contenido de la constante de las cadenas del programa sea incluido en el binario y examinable con un editor hexadecimal no es exclusivo de Java, en otros lenguajes de programación como C y formatos de ejecutables como ELF para Linux se da el mismo caso al examinar el binario como se observa en las imágenes anteriores. Seguramente en la mayoría de lenguajes, como C#, ocurra lo mismo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>&#10;</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">password</span> <span class="o">=</span> <span class="s">&#34;Mz6K3P9rDZ7G6wH&#34;</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nf">printf</span><span class="p">(</span><span class="s">&#34;Hello World!&#34;</span><span class="p">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.c</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ gcc Main.c -o Main&#10;</span></span><span class="line"><span class="cl">$ xxd Main&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gcc.sh</span>
    </div>
</div>
<p>Una solución para evitar este problema de seguridad es <a href="https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/">ubicar la contraseña a un archivo de configuración incluso con los valores sensibles cifrados</a> y que sean descifrados únicamente por la aplicación en el momento de iniciarse. En el caso de ubicar este archivo de configuración en un servidor se puede proteger mediante permisos para que solo los administradores o algunos desarrolladores tenga acceso a él y no cualquier usuario que consiga acceso al sistema.</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/</id>
        <title>Hemeroteca #14</title>
        <updated>2018-12-30T19:00:00+01:00</updated>
        <published>2018-12-30T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Casi 9 años publicando de forma constante un artículo a la semana, dos artículos algunas semanas. Durante casi está década creo que ha habido pocas semanas en las que no he publicado. Este último años no ha sido distinto, el siguiente espero&hellip; espero que sea parecido o mejor ahora que tengo mi propio equipo personal que he estado mucho tiempo esperando hasta que fuese comercializado, un <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Intel NUC Bean Canyon</a> del que en este semestre he publicado un artículo con de su desempaquetado junto con otros artículos del <a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/">monitor BenQ PD2700Q</a> y <a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/">teclado ratón</a> pero también comentando las opciones que he barajado.</p>
<p>Casi 9 años publicando artículos algunos mejor que otros pero siempre intentando compartir lo que sé o voy aprendiendo, para llegar a esta cifra hay que tener constancia para llegar a escribir tanto tiempo, dedicación, no abandonar fácil para no empezar una cosa y dejarlo al cabo de poco e incluso de publicar aún cuando el ánimo no es el de los mejores momentos, planificación y organización para saber que publicar, tiempo ya que cuesta escribir los artículos, motivación y perseverancia para tener más visitas, comentarios de algunos usuarios, más ingresos de AdSense, compartir, &hellip; No es fácil, en mi caso sabiendo que mucho de lo que escribo no lo aplico en el trabajo, donde actualmente tengo un Mac por obligación y no trabajo con Java y mis temas principales son GNU/Linux y Java, con lo que a veces tengo la sensación de no serme útil. Al finalizar este 2018 ya van 371 artículos publicados desde finales del 2013 que empecé a hacerlo en Blog Bitix.</p>
<p>Ahora que tengo mi propio equipo y como de nuevo estoy usando <a href="https://www.archlinux.org/">Arch Linux</a> podré publicar más artículos sobre <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>, he empezado por publicar como jugar a <a href="https://eu.diablo3.com/es/">Diablo 3</a> u otros juegos de <a href="https://www.blizzard.com/es-es/">Blizzard</a> en Linux con <a href="https://www.winehq.org/">Wine</a>.</p>
<p>Durante <a href="https://picodotdev.github.io/blog-bitix/2018/">el año 2018 he escrito múltiples artículos</a> y este semestre he escrito varios relacionados con el ordenador que necesitaba y finalmente he comprado al final de año pero del que había noticias desde muchos meses antes, la espera de varios meses hasta que se comercializase se me hizo larga.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/">Desempaquetado y análisis de teclado y ratón inalámbrico V7 CKW200</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/">Desempaquetado y análisis de monitor BenQ PD2700Q 2K/QHD, IPS, 27 pulgadas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Desempaquetado Intel NUC8i5BEK (Bean Canyon), HyperX Impact (RAM) y Samsung 970 EVO NVMe (SSD)</a></li>
</ul>
<p>He completado con algún artículo más la <a href="https://picodotdev.github.io/blog-bitix/series/graphql/">serie sobre GraphQL</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/">El editor, explorador e IDE GraphiQL para una API con GraphQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/08/usando-directivas-en-graphql/">Usando directivas en GraphQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/08/los-fragmentos-en-graphql/">Los fragmentos en GraphQL</a></li>
</ul>
<p>También he escrito varios artículos de la serie sobre <a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">Spring Cloud</a> para escribir microservicios en Java.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/08/aplicaciones-basadas-en-microservicios/">Aplicaciones basadas en microservicios</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">Registro y descubrimiento de servicios con Spring Cloud Netflix</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/servicio-de-configuracion-para-microservicios-con-spring-cloud-config/">Servicio de configuración para microservicios con Spring Cloud Config</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/">Almacenar cifrados los valores de configuración sensibles en Spring Cloud Config</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/">Tolerancia a fallos en un cliente de microservicio con Spring Cloud Netflix y Hystrix</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resiliencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/">Balanceo de carga y resiliencia en un microservicio con Spring Cloud Netflix y Ribbon</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/">Proxy para microservicios con Spring Cloud Netflix y Zuul</a></li>
</ul>
<p>Algunos pocos artículos sobre GNU/Linux.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/07/como-recuperar-arch-linux-despues-de-una-actualizacion-que-provoca-el-sistema-no-inicie/">Como recuperar Arch Linux después de una actualización que provoca el sistema no inicie</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/">El editor de archivos e IDE minimalista Visual Studio Code</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/el-comando-fork-bomb-explicado/">El comando fork bomb explicado</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/flatpak-distribucion-e-instalacion-de-programas-de-escritorio-en-las-distribuciones-gnu-linux/">Flatpak, distribución e instalación de programas de escritorio en las distribuciones GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/12/como-usar-wine-para-jugar-en-gnu-linux-a-juegos-de-windows/">Cómo usar Wine para jugar en GNU/Linux a Diablo 3 u otros juegos de Blizzard o Windows</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/">Monitorizar procesos que realizan lectura o escritura al almacenamiento en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/12/permitir-o-denegar-trafico-de-red-con-el-firewall-ufw-en-gnu-linux/">Permitir o denegar tráfico de red con el firewall UFW en GNU/Linux</a></li>
</ul>
<p>Sobre Java o programación algunos más.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/07/que-es-un-sut-fake-stub-mock-y-spy-en-las-pruebas-con-un-ejemplo/">Qué es un SUT, fake, stub, mock y spy en las pruebas con un ejemplo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/07/pruebas-funcionales-con-geb-en-una-aplicacion-web-java/">Pruebas funcionales con Geb en una aplicación web Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/07/la-libreria-log4j-para-emitir-trazas-en-aplicaciones-java/">La librería Log4j para emitir trazas en aplicaciones Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/07/identificar-todas-las-trazas-de-una-peticion-en-una-aplicacion-web-java-con-log4j/">Identificar todas las trazas de una petición en una aplicación web Java con Log4j</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/08/personalizar-el-mensaje-emitido-de-un-objeto-en-log4j/">Personalizar el mensaje emitido de un objeto en Log4j</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/recargar-la-configuracion-sin-reiniciar-una-aplicacion-spring-boot-con-spring-cloud-config/">Recargar sin reiniciar la configuración de una aplicación Spring Boot con Spring Cloud Config</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/">Novedades y nuevas características de Java 11</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/10/ejemplo-sencillo-de-como-leer-datos-de-un-archivo-excel-o-csv-en-java/">Ejemplo sencillo de cómo leer datos de un archivo Excel o CSV en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/">Formatear con color sentencias SQL o código fuente en la terminal con Java y Jansi</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/novedades-de-java-ee-8/">Novedades de Java EE 8</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/">Monitorizar una aplicación Java de Spring Boot con Micrometer, Prometheus y Grafana</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/">Exponer las métricas de Hystrix en Grafana con Prometheus de una aplicación Spring Boot</a></li>
</ul>
<p>Y varios de opinión o noticias relevantes como la caída de <a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun</a> hace ya años o la compra de <a href="https://www.redhat.com/es">Red Hat</a> por parte de <a href="https://www.ibm.com/us-en/">IBM</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/07/sobre-la-venta-entre-particulares-de-ebay-milanuncios-y-wallapop/">Sobre la venta entre particulares de eBay, milanuncios y Wallapop</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/08/despues-de-la-guerra-del-numero-de-nucleos-en-los-procesadores-vendra-la-guerra-de-la-computacion-heterogenea-o-manycores/">Después de la guerra del número de núcleos en los procesadores, ¿vendrá la guerra de la computación heterogénea o manycores?</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/08/sobre-las-competiciones-deportivas-de-videojuegos-o-esports/">Sobre las competiciones deportivas de videojuegos o eSports</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/">Sun Microsystems cae, la adquiere Oracle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/">IBM adquiere Red Hat, el gigante de Linux y código abierto</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/el-agotamiento-de-direcciones-ipv4-y-el-protocolo-de-internet-ipv6/">El agotamiento de direcciones IPv4 y el protocolo de internet IPv6</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/12/articulo-6-de-yo-apoyo-al-software-libre/">Artículo #6 de Yo apoyo al software libre</a></li>
</ul>
<p>Revisando los artículos que he publicado en <a href="https://picodotdev.github.io/blog-bitix/series/hemeroteca/">otras hemerotecas</a> hay algunos que parece no los haya escrito hace 2 y 3 años sino mucho menos. El crecimiento tanto en visitas como en ingresos no ha sido tanto como años anteriores, supongo que ya llegado un cierto umbral es difícil conservar los mismos ratios de crecimiento. Todos estos nuevos artículos es nuevo contenido que hace que reciba algunas visitas más y que los ingresos sean algo mayores. Dependiendo de si miro en Analytics o AdSense unas 520K páginas vistas este 2018 no muchas más que las casi 500K del 2017. En cualquier caso en las siguientes imágenes están las estadísticas de este blog por si a alguien le sirven para comparar con el suyo o como previsión de una web similar, a mi me servirá para consultarlo en un futuro y ver la evolución de los datos, también el tiempo necesario para conseguirlo o el número de artículos requeridos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/analytics-2018_hu2ada8cebf2023f92a50bb99f47b93326_64912_2560x1440_fit_box_3.png" data-gallery="" title="Analytics 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/analytics-2018_hu2ada8cebf2023f92a50bb99f47b93326_64912_600x450_fit_box_3.png" width="600" height="254" alt="Analytics 2018 de Blog Bitix" title="Analytics 2018 de Blog Bitix"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-2018_hu636faed4932c19361f2f0a556d5002dc_32098_2560x1440_fit_box_3.png" data-gallery="" title="AdSense 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-2018_hu636faed4932c19361f2f0a556d5002dc_32098_600x450_fit_box_3.png" width="600" height="258" alt="AdSense 2018 de Blog Bitix" title="AdSense 2018 de Blog Bitix"  class="lozad "></a></p>
<figcaption>Evolución visitas e ingresos en 2018</figcaption>
</figure>
</div>
<p>Incluyo además algunas métricas que proporciona AdSense de RPM, clics y CPC. Este final de año ha sido especialmente bueno con la semana del <em>black friday</em> como punto álgido llegando casi a 70 € en un mes, en todo el año han sido casi 500 € contra los 450 € del 2017.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-ingresos-2018_hu1b9e049b82ca37c55653dc9f7f608567_86318_2560x1440_fit_box_3.png" data-gallery="" title="Ingresos 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-ingresos-2018_hu1b9e049b82ca37c55653dc9f7f608567_86318_300x200_fit_box_3.png" width="113" height="200" alt="Ingresos 2018 de Blog Bitix" title="Ingresos 2018 de Blog Bitix"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-paginas-vistas-2018_hu9af27ceaf50279e6f09b10b7794973eb_87876_2560x1440_fit_box_3.png" data-gallery="" title="Páginas vistas 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-paginas-vistas-2018_hu9af27ceaf50279e6f09b10b7794973eb_87876_300x200_fit_box_3.png" width="113" height="200" alt="Páginas vistas 2018 de Blog Bitix" title="Páginas vistas 2018 de Blog Bitix"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-clics-2018_hued0fc56ac5576d06747e659b90f243e1_85483_2560x1440_fit_box_3.png" data-gallery="" title="Clics 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-clics-2018_hued0fc56ac5576d06747e659b90f243e1_85483_300x200_fit_box_3.png" width="113" height="200" alt="Clics 2018 de Blog Bitix" title="Clics 2018 de Blog Bitix"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-crt-2018_hua934a19f5a838277c977312945230d48_84813_2560x1440_fit_box_3.png" data-gallery="" title="CRT 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-crt-2018_hua934a19f5a838277c977312945230d48_84813_300x200_fit_box_3.png" width="113" height="200" alt="CRT 2018 de Blog Bitix" title="CRT 2018 de Blog Bitix"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-cpc-2018_hu5dd2148119d9c65dff7097ef6269582d_77672_2560x1440_fit_box_3.png" data-gallery="" title="CPC 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-cpc-2018_hu5dd2148119d9c65dff7097ef6269582d_77672_300x200_fit_box_3.png" width="113" height="200" alt="CPC 2018 de Blog Bitix" title="CPC 2018 de Blog Bitix"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-rpm-2018_hu9d3b8ec4b7a7f5b5a4f8281d0b22755b_80426_2560x1440_fit_box_3.png" data-gallery="" title="RPM 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-rpm-2018_hu9d3b8ec4b7a7f5b5a4f8281d0b22755b_80426_300x200_fit_box_3.png" width="113" height="200" alt="RPM 2018 de Blog Bitix" title="RPM 2018 de Blog Bitix"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-tipos-de-puja-2018_hufd652d0bb9a4a214cdee3c8d07383e3c_22630_2560x1440_fit_box_3.png" data-gallery="" title="Tipos de puja 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-tipos-de-puja-2018_hufd652d0bb9a4a214cdee3c8d07383e3c_22630_300x200_fit_box_3.png" width="273" height="200" alt="Tipos de puja 2018 de Blog Bitix" title="Tipos de puja 2018 de Blog Bitix"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-plataformas-2018_hu3c48376a2ee051ee4cfb9dd80dd68b49_21354_2560x1440_fit_box_3.png" data-gallery="" title="Plataformas 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/gadsense-plataformas-2018_hu3c48376a2ee051ee4cfb9dd80dd68b49_21354_300x200_fit_box_3.png" width="274" height="200" alt="Plataformas 2018 de Blog Bitix" title="Plataformas 2018 de Blog Bitix"  class="lozad "></a></p>
<figcaption>Métricas de AdSense</figcaption>
</figure>
</div>
<p>Además, de AdSense incluyo enlaces de Amazon de algunos productos que compro y de los que publico algún artículo. Este año a través de los enlaces de afiliado de Amazon ha facturado a través de ellos casi 900 € y he recibido a cambio 50 € en comisiones.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/amazon-2018_hu745a46ebc42e3ba687315a0ce1b2c13d_83793_2560x1440_fit_box_3.png" data-gallery="" title="Facturación e ingresos Amazon"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/amazon-2018_hu745a46ebc42e3ba687315a0ce1b2c13d_83793_600x450_fit_box_3.png" width="600" height="430" alt="Facturación e ingresos Amazon" title="Facturación e ingresos Amazon"  class="lozad "></a></p>
</figure>
</div>
<p>Como siempre mis deseos de que empecéis bien el nuevo año, en este caso el 2019, ¡buen 2019!.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/christmas-tux-2018_hu95daf3122e4db98487c9042ab621eb95_564556_2560x1440_fit_q90_box.jpg" data-gallery="" title="Christmas Tux 2018"><img src="https://picodotdev.github.io/blog-bitix/2018/12/hemeroteca-14/images/christmas-tux-2018_hu95daf3122e4db98487c9042ab621eb95_564556_600x450_fit_q90_box.jpg" width="600" height="338" alt="Christmas Tux 2018" title="Christmas Tux 2018"  class="lozad "></a></p>
<figcaption>¡Buen 2019! <br>Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/12/permitir-o-denegar-trafico-de-red-con-el-firewall-ufw-en-gnu-linux/</id>
        <title>Permitir o denegar tráfico de red con el firewall UFW en GNU/Linux</title>
        <updated>2018-12-24T13:00:00+01:00</updated>
        <published>2018-12-24T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/12/permitir-o-denegar-trafico-de-red-con-el-firewall-ufw-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Un cortafuegos o <em>firewall</em> hace que un sistema sea más seguro analizando todo el tráfico de red que se recibe y envía impidiéndolo o permitiéndolo según las reglas que se hayan definido. Aunque los <em>routers</em> con los que nos conectamos a internet también hacen la función de <em>firewall</em> es aconsejable instalar un cortafuegos en cada sistema, sobre todo en sistemas portátiles que podemos conectar a redes WIFI ajenas a las que pueden conectarse al mismo tiempo otros muchos usuarios que desconocemos.</p>
<p>En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> un <em>firewall</em> con el que las reglas de tráfico de red se puede definir de forma sencilla es <em>Uncomplicated Firewall</em> o UFW. En la distribución <a href="https://www.archlinux.org/">Arch Linux</a> hay que instalar su paquete y habilitarlo para que se inicie con el sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S ufw</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># systemctl enable ufw.service</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ufw enable</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ufw-enable.sh</span>
    </div>
</div>
<p>En la <a href="https://wiki.archlinux.org/">wiki de Arch Linux</a> hay una buena página explicativa de su uso.</p>
<ul>
<li><a href="https://wiki.archlinux.org/index.php/Uncomplicated_Firewall">Arch Linux Wiki Uncomplicated Firewall</a></li>
</ul>
<p>Instalado y activado hay que definir las reglas de tráfico permitidas. Por defecto, se deniega el tŕafico proveniente de un sistema que no sea el local. Por ejemplo, con el cortafuegos activado para que un servidor web sea accesible desde otro equipo en la misma red o desde internet hay crear una regla que permita todo el tráfico entrante los puertos por defecto <em>80</em> para <em>http</em> y <em>443</em> para <em>https</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ufw allow 80/tcp</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ufw allow 443/tcp</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ufw-allow-1.sh</span>
    </div>
</div>
<p>Para permitir acceso al servidor web únicamente desde la red local a la que está conectado el equipo hay que indicar la dirección IP de la red, los casos habituales son <em>192.168.0.0/24</em> o <em>192.168.1.0/24</em>. En vez de usar la directiva <em>allow</em> se puede emplear la directiva <em>deny</em> para denegar el tráfico.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ufw allow from 192.168.1.0/24 to any port 80 proto tcp</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ufw allow from 192.168.1.0/24 to any port 443 proto tcp</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ufw-allow-2.sh</span>
    </div>
</div>
<p>Definidas algunas reglas se pueden listar y de forma numerada en el caso de querer eliminar alguna.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ufw status</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ufw status numbered</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ufw-status-1.sh</span>
    </div>
</div>
<p>Para eliminar reglas hay que hacerlo según su número de la lista anterior.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ufw delete 1</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ufw-delete.sh</span>
    </div>
</div>
<p>Ciertas aplicaciones usan un puerto conocido como el ejemplo de servidor web en el puerto <em>443</em> o <em>80</em>, SSH en el <em>22</em> o descarga y compartición de archivos mediante P2P por Bittorrent que dependiendo de la aplicación se usa uno u otro, en el caso de <a href="https://transmissionbt.com/">Transmission</a> es <em>51413</em>. Sabiendo la aplicación para la que se quiere permitir el tráfico no es necesario conocer su puerto, ufw ya incorpora varias aplicaciones conocidas que se listan y activan con un comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ufw app list</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ufw-app-list.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ufw allow Transmission</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ufw allow from 192.168.1.0/24 to any app &#34;WWW&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># ufw allow from 192.168.1.0/24 to any app &#34;WWW Secure&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ufw-app-allow.sh</span>
    </div>
</div>
<p>En el caso de este ejemplo se permite el tráfico para la aplicación Transmission desde cualquier ordenador y a las aplicaciones de servidor web tanto en el puerto seguro como inseguro y en el puerto <em>8080</em> que usan algunos servidores de aplicaciones limitando su acceso únicamente desde la red local.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ufw status</span>&#10;</span></span><span class="line"><span class="cl">Status: active&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">To&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action&nbsp;&nbsp;&nbsp;&nbsp;  From&#10;</span></span><span class="line"><span class="cl">--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ------&nbsp;&nbsp;&nbsp;&nbsp;  ----&#10;</span></span><span class="line"><span class="cl">Transmission&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ALLOW&nbsp;&nbsp;&nbsp;&nbsp;   Anywhere&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">8080/tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ALLOW&nbsp;&nbsp;&nbsp;&nbsp;   192.168.1.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">WWW Secure&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALLOW&nbsp;&nbsp;&nbsp;&nbsp;   192.168.1.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">WWW&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ALLOW&nbsp;&nbsp;&nbsp;&nbsp;   192.168.1.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">Transmission <span class="o">(</span>v6<span class="o">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ALLOW&nbsp;&nbsp;&nbsp;&nbsp;   Anywhere <span class="o">(</span>v6<span class="o">)</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ufw-status-2.sh</span>
    </div>
</div>
<p>Los comandos anteriores aunque cambiando los valores de los puertos o dirección IP son suficientes para hacer un sistema más seguro no permitiendo tráfico de red y evitando que se puedan establecer conexiones desde otro sistema en la misma red de área local a ciertos puertos de red abiertos sin ser conscientes de que los están.</p>
<p>En algunos casos como usando una <a href="https://www.raspberrypi.org/">Raspberry Pi</a> sin interfaz gráfica para minimizar el consumo de recursos es necesario conocer o consultar los comandos de ufw.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://help.ubuntu.com/community/UFW">Ubuntu UFW</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/</id>
        <title>Exponer las métricas de Hystrix en Grafana con Prometheus de una aplicación Spring Boot</title>
        <updated>2018-12-21T11:30:00+01:00</updated>
        <published>2018-12-21T11:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p><a href="https://github.com/Netflix/Hystrix">Hystrix</a> es una implementación del patrón <em>circuit breaker</em> para hacer que un servicio sea tolerante fallos cuando aquellos que utiliza fallan. Es conveniente tener una herramienta de monitorización para conocer el estado del sistema y actuar pronto o conocer si el comportamiento del sistema es diferente al hacer algún cambio. Hystrix proporciona varios datos como el número de peticiones realizadas, cuantas han fallado o cual es el estado del patrón <em>circuit breaker</em>. <a href="https://prometheus.io/">Prometheus</a> es una herramienta de monitorización que recoge las métricas de los servicios de forma periódica y las almacena para una consulta posterior, <a href="https://grafana.com/">Grafana</a> es otra herramienta de monitorización que permite visualizar en gráficas las métricas almacenadas en Prometheus y observar los valores a lo largo del tiempo.</p>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/">Tolerancia a fallos en un cliente de microservicio con Spring Cloud Netflix y Hystrix</a> explicaba como crear un servicio de <a href="https://spring.io/">Spring</a> que implementa el patrón <em>circuit breaker</em> con Hystrix y en el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/">Monitorizar una aplicación Java con Spring Boot, Micrometer, Prometheus y Grafana</a> explicaba como exportar las métricas de <a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actuator</a> a Prometheus y como crear gráficas en Grafana.</p>
<p>Hystrix ofrece un <em>dashboard</em> algo espartano con los datos de Hystrix de la propia aplicación. Los datos de las métricas de Hystrix por defecto no se exponen en Spring Boot Actuator pero se pueden añadir creando un <em>bean</em> <em>HystrixMetricsBinder</em> en la configuración de Spring.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableDiscoveryClient</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableCircuitBreaker</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableHystrixDashboard</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Bean</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">HystrixMetricsBinder</span> <span class="nf">hystrixMetricsBinder</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="k">new</span> <span class="n">HystrixMetricsBinder</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">  <span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;io.micrometer:micrometer-registry-prometheus:1.0.8&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Una vez hecho esto Spring en el <em>endpoint</em> <em>/actuator/metrics</em> se exponen las métricas de Hystrix, si además se configura Spring añadiendo la dependencia <em>io.micrometer:micrometer-registry-prometheus</em> para exponer las métricas en el formato para que Prometheus las recolecta también se añaden en el <em>endpoint</em> <em>/actuator/prometheus</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl http://client.127.0.0.1.xip.io:8095/actuator/metrics&#10;</span></span><span class="line"><span class="cl">$ curl http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.requests&#10;</span></span><span class="line"><span class="cl">$ curl http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.circuit.breaker.open&#10;</span></span><span class="line"><span class="cl">$ curl http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.fallback&#10;</span></span><span class="line"><span class="cl">$ http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.latency.total&#10;</span></span><span class="line"><span class="cl">$ http://client.127.0.0.1.xip.io:8095/actuator/metrics/hystrix.errors&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl http://client.127.0.0.1.xip.io:8095/actuator/prometheus&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>metrics-endpoints.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">  <span class="nt">&#34;names&#34;</span><span class="p">:</span> <span class="p">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="err">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.requests&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.command.other&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.circuit.breaker.open&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.fallback&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.latency.execution&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.execution&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.latency.total&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.threadpool.concurrent.execution.rolling.max&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.errors&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;hystrix.threadpool.concurrent.execution.current&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="err">...</span>&#10;</span></span><span class="line"><span class="cl">  <span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>actuator-metrics.json</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_threadpool_concurrent_execution_current  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_threadpool_concurrent_execution_current gauge&#10;</span></span><span class="line"><span class="cl">hystrix_threadpool_concurrent_execution_current{group=&#34;ClientService&#34;,key=&#34;get&#34;,threadpool=&#34;ClientService&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_requests_total  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_requests_total counter&#10;</span></span><span class="line"><span class="cl">hystrix_requests_total{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 137.0&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_circuit_breaker_open  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_circuit_breaker_open gauge&#10;</span></span><span class="line"><span class="cl">hystrix_circuit_breaker_open{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_latency_execution_seconds_max  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_latency_execution_seconds_max gauge&#10;</span></span><span class="line"><span class="cl">hystrix_latency_execution_seconds_max{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.472&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_latency_execution_seconds  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_latency_execution_seconds summary&#10;</span></span><span class="line"><span class="cl">hystrix_latency_execution_seconds_count{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 137.0&#10;</span></span><span class="line"><span class="cl">hystrix_latency_execution_seconds_sum{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 2.839&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_execution_total Execution results. See https://github.com/Netflix/Hystrix/wiki/Metrics-and-Monitoring#command-execution-event-types-comnetflixhystrixhystrixeventtype for type definitions&#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_execution_total counter&#10;</span></span><span class="line"><span class="cl">hystrix_execution_total{event=&#34;emit&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_execution_total{event=&#34;success&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 137.0&#10;</span></span><span class="line"><span class="cl">hystrix_execution_total{event=&#34;failure&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_execution_total{event=&#34;timeout&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_execution_total{event=&#34;bad_request&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_execution_total{event=&#34;short_circuited&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_execution_total{event=&#34;thread_pool_rejected&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_execution_total{event=&#34;semaphore_rejected&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_threadpool_concurrent_execution_rolling_max  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_threadpool_concurrent_execution_rolling_max gauge&#10;</span></span><span class="line"><span class="cl">hystrix_threadpool_concurrent_execution_rolling_max{group=&#34;ClientService&#34;,key=&#34;get&#34;,threadpool=&#34;ClientService&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_command_other_total Other execution results. See https://github.com/Netflix/Hystrix/wiki/Metrics-and-Monitoring#other-command-event-types-comnetflixhystrixhystrixeventtype for type definitions&#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_command_other_total counter&#10;</span></span><span class="line"><span class="cl">hystrix_command_other_total{event=&#34;exception_thrown&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_command_other_total{event=&#34;response_from_cache&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_command_other_total{event=&#34;cancelled&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_command_other_total{event=&#34;collapsed&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_command_other_total{event=&#34;command_max_active&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_latency_total_seconds_max  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_latency_total_seconds_max gauge&#10;</span></span><span class="line"><span class="cl">hystrix_latency_total_seconds_max{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.474&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_latency_total_seconds  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_latency_total_seconds summary&#10;</span></span><span class="line"><span class="cl">hystrix_latency_total_seconds_count{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 137.0&#10;</span></span><span class="line"><span class="cl">hystrix_latency_total_seconds_sum{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 2.857&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_errors_total  &#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_errors_total counter&#10;</span></span><span class="line"><span class="cl">hystrix_errors_total{group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl"># HELP hystrix_fallback_total Fallback execution results. See https://github.com/Netflix/Hystrix/wiki/Metrics-and-Monitoring#command-fallback-event-types-comnetflixhystrixhystrixeventtype for type definitions&#10;</span></span><span class="line"><span class="cl"># TYPE hystrix_fallback_total counter&#10;</span></span><span class="line"><span class="cl">hystrix_fallback_total{event=&#34;fallback_emit&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_fallback_total{event=&#34;fallback_success&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_fallback_total{event=&#34;fallback_failure&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_fallback_total{event=&#34;fallback_rejection&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">hystrix_fallback_total{event=&#34;fallback_missing&#34;,group=&#34;ClientService&#34;,key=&#34;get&#34;,} 0.0&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>actuator-prometheus.prometheus</span>
    </div>
</div>
<p>Con estas métricas recolectadas por Prometheus se pueden visualizar en gráficas por Grafana. Hay algunos <a href="https://grafana.com/dashboards?search=hystrix">paneles de Grafana para Hystrix</a> como el <a href="https://grafana.com/dashboards/7145">7145</a> pero que necesitan ser adaptados según la nomenclatura de las propiedades expuestas por Spring Boot. En este caso se monitoriza el número de peticiones realizadas, el tiempo de latencia, si los circuitos están abiertos, los fallos, éxitos y <em>tiemouts</em> así como el estado de los <em>thread pools</em> que utiliza Hystrix para realizar las peticiones de un cliente a un servicio.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/images/grafana-hystrix-dashboard_hubb858c136f51315f74d2f101a3e561f6_151082_2560x1440_fit_box_3.png" data-gallery="" title="Panel de Grafana pàra métricas de Hystrix"><img src="https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/images/grafana-hystrix-dashboard_hubb858c136f51315f74d2f101a3e561f6_151082_600x450_fit_box_3.png" width="600" height="358" alt="Panel de Grafana pàra métricas de Hystrix" title="Panel de Grafana pàra métricas de Hystrix"  class="lozad "></a></p>
<figcaption>Panel de Grafana para métricas de Hystrix</figcaption>
</figure>
</div>
<p>Exponer las métricas en una aplicación de Spring Boot para Prometheus es muy sencillo y con Grafana se puede observar el estado del sistema de forma tan detallada como lo sean las métricas expuestas por la aplicación. Por defecto Spring Boot ya expone una buena cantidad de métricas del estado del servicio como uso de CPU, memoria, hilos o recolector de basura.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew client:run</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://github.com/spring-cloud/spring-cloud-netflix/issues/3004">Expose Hystrix metrics to Actuator /metrics (and /prometheus)</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/</id>
        <title>Monitorizar procesos que realizan lectura o escritura al almacenamiento en GNU/Linux</title>
        <updated>2018-12-17T11:00:00+01:00</updated>
        <published>2018-12-17T11:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/firefox.svg" width="200" height="188" alt="Firefox" title="Firefox"  class=""></p>
</div>
<p>Hoy día los precios de los SSD son asequibles y a cada mes que pasa su coste por GB se reduce de forma significativa, son mucho más rápidos que un disco duro mecánico y es una de las mejores mejoras que se le pueden hacer a un ordenador para aumentar el rendimiento si el problema es la tasa de transferencia del almacenamiento. El sistema se inicia mucho más rápido, en segundos en vez de minutos, y las aplicaciones también tardan mucho menos en cargarse. Cambiar a un SSD significa aumentar el rendimiento notablemente y parecer que se tiene equipo nuevo.</p>
<p>Aunque los SSD son muchísimo más rápidos que los discos duros mecánicos tradicionales tanto en lectura como en escritura adolecen de un tiempo de vida de unos 1000 ciclos de escritura por cada celda. Aunque 1000 ciclos de escritura pueden parecer pocos son más que suficientes para que el disco SSD y equipo se quede obsoleto antes de que pueda fallar según el ritmo al que avanza la tecnología. Aunque en un principio no debamos preocuparnos demasiado de la fiabilidad no está demás cuidarlo en lo posible.</p>
<p>Según Samsung la cantidad de datos que se pueden escribir en un <a href="https://www.samsung.com/semiconductor/minisite/ssd/product/consumer/860evo/">860 EVO</a> y <a href="https://www.samsung.com/es/memory-storage/ssd-970-evo/MZ-V7E500BW/">970 EVO</a> son según la capacidad 250, 500 GB y 1 TB de 150 TBW, 300 y 600 respectivamente (TBW = Terabytes escritos, 1 TB = 1000 GB). La esperanza de vida estimada antes de que se empiecen a producir fallos para el SSD de 250 GB es de de unos 20 años estimando unos 20 GB de escritura al día (150 TBW * 1000 GB/TB / (20 GB * 365 dias/año), en ese tiempo el equipo se quedará obsoleto y el coste del almacenamiento se habrá reducido significativamente.</p>
<p>Para cuidar el SSD hay que conocer la cantidad de datos que se están escribiendo en la unidad. En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> es sencillo, el siguiente comando da la cantidad de datos en megabytes leídos y escritos desde que que se ha encendido el sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ awk <span class="s1">&#39;/sd|nvme/ {print $3&#34;\t&#34;($6 * 512) / (1024 * 1024)&#34;\t&#34;($10 * 512) / (1024 * 1024)}&#39;</span> /proc/diskstats&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>awk-uptime-writes.sh</span>
    </div>
</div>
<p>En este caso se han escrito 326 MB en el dispositivo <em>nvme0n1p2</em> que corresponde a la partición <em>root</em> en una hora de actividad del sistema realizando tareas ofimáticas y de navegación.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/awk_hu2f9598549ed102025232bc79089abe44_40142_2560x1440_fit_box_3.png" data-gallery="" title="Datos escritos al almacenamiento desde el inicio del sistema"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/awk_hu2f9598549ed102025232bc79089abe44_40142_300x200_fit_box_3.png" width="300" height="108" alt="Datos escritos al almacenamiento desde el inicio del sistema" title="Datos escritos al almacenamiento desde el inicio del sistema"  class="lozad "></a></p>
<figcaption>Datos escritos al almacenamiento desde el inicio del sistema</figcaption>
</figure>
</div>
<p>También es interesante conocer los datos escritos en la unidad en total desde su instalación, en realidad lo siguiente nos dará los GiB escritos desde la creación de la partición, si se han hecho varios particionados no será el total del tiempo de vida de la unidad. Al usar LVM on LUKS el nombre que Linux le a la unidad en mi caso es <em>dm-1</em>, según la configuración del sistema otro nombre que se le asigna es <em>sda2</em>. En esta captura de 129 GB.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ awk <span class="s1">&#39;// {print $0 / (1024 * 1024)}&#39;</span> /sys/fs/ext4/dm-1/lifetime_write_kbytes&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>awk-lifetime-writes.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/awk-lifetime_hu39bef0aba530b0a41102a26d1d2db139_20509_2560x1440_fit_box_3.png" data-gallery="" title="Datos escritos a una partición"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/awk-lifetime_hu39bef0aba530b0a41102a26d1d2db139_20509_300x200_fit_box_3.png" width="300" height="136" alt="Datos escritos a una partición" title="Datos escritos a una partición"  class="lozad "></a></p>
<figcaption>Datos escritos a una partición</figcaption>
</figure>
</div>
<p>Después de <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">comprar un Intel NUC junto con SSD</a> e instalarle <a href="https://www.archlinux.org/">Arch Linux</a> me he dado cuenta que de forma periódica, cada 5 o 10 segundos, parpadea la luz de actividad del disco duro (o simplemente almacenamiento al tener un SSD) sin hacer ninguna actividad salvo tener algunas aplicaciones abiertas. He instalado <em>iotop</em> para descubrir el origen de esta actividad y he encontrado dos. Por un lado <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a>, varios procesos de él, y otro proceso del sistema <em>jdb2-dm-1-8</em> que corresponde al <em>journaling</em> del sistema de archivos. La opción <em>-a</em> de <em>iotop</em> muestra la cantidad de E/S en la sesión por proceso y la opción <em>--only</em> solo aquellos que han realizado E/S.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ iotop -a --only&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>iotop.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/iotop_hue4687c96ed1462b9a490f6bf88d00c3d_167006_2560x1440_fit_box_3.png" data-gallery="" title="Datos escritos por procesos del sistema"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/iotop_hue4687c96ed1462b9a490f6bf88d00c3d_167006_300x200_fit_box_3.png" width="300" height="198" alt="Datos escritos por procesos del sistema" title="Datos escritos por procesos del sistema"  class="lozad "></a></p>
<figcaption>Datos escritos por procesos del sistema</figcaption>
</figure>
</div>
<p>Investigando sobre los motivos de escritura de Firefox he encontrado algunos artículos y tres recomendaciones a cambiar en la configuración de Firefox para optimizar su uso en unidades SSD.</p>
<ul>
<li><a href="https://superuser.com/questions/399473/firefox-writes-megabytes-of-data-per-minute-to-disk-why">Firefox writes megabytes of data per minute to disk, why?</a></li>
<li><a href="https://pringao.com/optimizar-firefox-para-ssd/">Optimizar Firefox para SSD</a></li>
</ul>
<p>Las opciones a cambiar en la configuración son:</p>
<ul>
<li><em>browser.sessionstore.interval</em>: para recuperar las pestañas abiertas en caso de cierre inesperado Firefox las guarda en disco cada cierto tiempo, por defecto 15000 ms o 15 segundos que es un tiempo muy bajo y que ocasiona escrituras al disco constantemente.</li>
<li><em>browser.cache.disk.enable</em>: para no realizar tŕafico de red en un futuro los recursos ya descargados como imágenes, archivos de estilo o <em>javascript</em> los almacena en una caché en el disco. Evita tráfico de red y mejora el rendimiento pero la caché ocupa espacio en disco y ocasiona escrituras. Cambiando el valor de esta propiedad a <em>false</em> se inhabilita la cache y las escrituras.</li>
<li><em>browser.cache.memory.capacity</em>: para no perder la funcionalidad de la cache al menos en una sesión si se dispone de memoria RAM suficiente se puede activar una cache en memoria. Esta opción indica en KiB el espacio reservado para esa caché. Un valor de 307200 (300 * 1024) corresponde a 300 MiB de caché en memoria. Aún teniendo una cache de sesión y en memoria no he notado diferencia velocidad de carga en las páginas al navegar aún usando ADSL. Esa opción se ha de crear de tipo entero.</li>
</ul>
<p>Estas opciones se cambian el la sección de configuración de Firefox introduciendo <em>about:config</em> en la barra de direcciones.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/firefox-config-1_huac92489a70fe30a83fa2fed454815d3b_38903_2560x1440_fit_box_3.png" data-gallery="" title="Configuración de Firefox optimizado para SSD"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/firefox-config-1_huac92489a70fe30a83fa2fed454815d3b_38903_300x200_fit_box_3.png" width="286" height="200" alt="Configuración de Firefox optimizado para SSD" title="Configuración de Firefox optimizado para SSD"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/firefox-config-2_hu1ede719cd1c8042fc711c3800df7e9b2_102209_2560x1440_fit_box_3.png" data-gallery="" title="Configuración de Firefox optimizado para SSD"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/firefox-config-2_hu1ede719cd1c8042fc711c3800df7e9b2_102209_300x200_fit_box_3.png" width="286" height="200" alt="Configuración de Firefox optimizado para SSD" title="Configuración de Firefox optimizado para SSD"  class="lozad "></a></p>
<figcaption>Configuración de Firefox optimizado para SSD</figcaption>
</figure>
</div>
<p>Con la configuración por defecto y cambiando estas opciones esta es la diferencia de los procesos de Firefox que causan E/S después de un tiempo de uso. Por defecto se observa que hay un proceso relacionado que debe estar relacionado con la caché a raíz de su nombre que escribe en el almacenamiento y cambiadas las opciones solo los procesos <em>mozStorage</em> escriben, estos procesos están relacionados con las <em>cookies</em> y almacenamiento local o bases de datos que los navegadores ofrecen a las páginas web pero los procesos relacionados con la caché han desaparecido. La cantidad de datos escritos con las opciones por defecto y cambiadas son significativamente menores en el mismo periodo de tiempo.</p>
<p>Dado que la caché ocasiona escrituras en el almacenamiento el proceso de <em>journaling</em> del sistema también realiza escrituras amplificando el problema. Con Firefox optimizado para SSD el proceso <em>firefox [Cache2 I/O]</em> desaparece y al escribir la sesión no cada 15 segundos Firefox deja de escribir de forma regular. <a href="https://www.google.es/chrome/browser/desktop/">Google Chrome</a> no ofrece estas opciones de personalización.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/firefox-default_hu13ad6d682ee4ae6ce7313a7569e91b43_134475_2560x1440_fit_box_3.png" data-gallery="" title="Entrada y salida con las opciones de Firefox por defecto"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/firefox-default_hu13ad6d682ee4ae6ce7313a7569e91b43_134475_300x200_fit_box_3.png" width="300" height="198" alt="Entrada y salida con las opciones de Firefox por defecto" title="Entrada y salida con las opciones de Firefox por defecto"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/firefox-ssd_hue958cb401399bf1e0ea7184de54b2473_92599_2560x1440_fit_box_3.png" data-gallery="" title="Entrada y salida con opciones de Firefox optimizadas para SSD"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/firefox-ssd_hue958cb401399bf1e0ea7184de54b2473_92599_300x200_fit_box_3.png" width="300" height="198" alt="Entrada y salida con opciones de Firefox optimizadas para SSD" title="Entrada y salida con opciones de Firefox optimizadas para SSD"  class="lozad "></a></p>
<figcaption>Entrada y salida de Firefox por defecto y optimizado para SSD</figcaption>
</figure>
</div>
<p>En el entorno de escritorio <a href="https://www.gnome.org/">GNOME</a> con la aplicación <em>Monitor del sistema</em> es posible ver la cantidad de datos escritos por un proceso en total y en tiempo real.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/gnome-monitor-del-sistema_hudc54858e148c80688588348a42ecafd9_174051_2560x1440_fit_box_3.png" data-gallery="" title="Monitor del sistema de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/gnome-monitor-del-sistema_hudc54858e148c80688588348a42ecafd9_174051_300x200_fit_box_3.png" width="300" height="173" alt="Monitor del sistema de GNOME" title="Monitor del sistema de GNOME"  class="lozad "></a></p>
<figcaption>Monitor del sistema de GNOME</figcaption>
</figure>
</div>
<p>Dado que los SSD no hacen ruido no se ha pedido la alerta sonora del «rascar» del disco cuando algún programa está escribiendo o leyendo de forma intensiva y por ello quizá no nos demos cuenta de que algún programa está teniendo un mal comportamiento y esté escribiendo muchos datos al SSD, peor aún si el sistema ni siquiera dispone de este LED de actividad.</p>
<p>Para visualizar el uso del disco de forma constante <a href="https://extensions.gnome.org/extension/120/system-monitor/">en GNOME hay una extensión que hace de monitor del sistema</a> que agregará en la barra superior un área de estado visible en todo momento en la que se puede ver la información del estado del sistema, entre esa información se puede visualizar la cantidad de lectura y escritura que está realizando al almacenamiento.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/gnome-extension-system-monitor_hu9cf33cffc4fcae05a240cdf19afd64b7_165112_2560x1440_fit_box_3.png" data-gallery="" title="Extensión de GNOME de monitor del sistema"><img src="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-procesos-que-realizan-lectura-o-escritura-al-almacenamiento-en-gnu-linux/images/gnome-extension-system-monitor_hu9cf33cffc4fcae05a240cdf19afd64b7_165112_300x200_fit_box_3.png" width="209" height="200" alt="Extensión de GNOME de monitor del sistema" title="Extensión de GNOME de monitor del sistema"  class="lozad "></a></p>
<figcaption>Extensión de GNOME de monitor del sistema</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>