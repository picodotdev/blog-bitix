<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2022-07-14T00:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/</id>
        <title>Desempaquetado Intel NUC8i5BEK (Bean Canyon), HyperX Impact (RAM) y Samsung 970 EVO NVMe (SSD)</title>
        <updated>2019-09-16T00:30:00+02:00</updated>
        <published>2018-11-30T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Al fin tengo nuevo equipo que cumple con los requisitos que le demandaba. Principalmente que sea pequeño pero al mismo tiempo suficientemente potente para que me suponga un salto notable en rendimiento respecto al portátil que tenía. Después de decidirme entre nuevo portátil, ITX o NUC me decidí por unos de los nuevos Bean Canyon con procesador de 4 núcleos y 8 hilos, posibilidad de SSD con NVMe y hasta un máximo de 32 GiB de RAM.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/intel.svg" width="300" height="199" alt="Intel" title="Intel"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hyperx.svg" width="300" height="116" alt="HyperX" title="HyperX"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/samsung.svg" width="300" height="99" alt="Samsung" title="Samsung"  class=""></p>
</div>
<p>Llevaba unos cuantos meses buscando entre las muchas opciones que hay un nuevo ordenador personal, casi un año desde enero del 2018 hasta ahora noviembre. La espera en algunos momentos se me ha hecho larga ya que sobre <a href="https://en.wikipedia.org/wiki/Next_Unit_of_Computing">Intel NUC</a> por el que me he decidido como nuevo equipo ya había noticias de él en enero, sin embargo, hasta julio no los empezaba a distribuir <a href="https://www.intel.es">Intel</a> y no ha sido hasta octubre y noviembre (coincidiendo con la semana del <em>black friday</em> a finales de noviembre) cuando ha empezado a estar disponible en las tiendas para comprar. Ha sido tanto tiempo por el conjunto de características que deseaba que limitaba en buena medida las opciones entre las que podía elegir, más cuando en las tiendas aún no estaba el equipo que quería. Por algunas cosas aún seguiría esperando pero ya me decidido a quedarme con el NUC ya que no quiero esperar más a tener mi propio equipo. Por obligación estoy usando un Apple MacBook Pro del 2015 que tengo a mi disposición por motivos laborales pero echo de menos mi distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> preferida que es <a href="https://www.archlinux.org/">Arch Linux</a>.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="anteriores-equipos">Anteriores equipos</h3>
<p>Siempre que puedo cuando algún familiar necesita un ordenador lo que hago es darle el que tengo yo y yo comprar uno nuevo, de esta forma al ordenador que entrego le doy una segunda vida para la que es perfectamente útil, así ha sido con los tres ordenadores que he comprado hasta el momento desde el 2002. Mis usos son mucho más exigentes, principalmente los equipos se me han quedado pequeños por la cantidad de memoria RAM. El primer ordenador que compré en el 2004 fue un ordenador de escritorio en formato torre tradicional ATX con un <a href="https://es.wikipedia.org/wiki/AMD_Athlon">AMD Athlon</a> 1800+ (32 bits), 512 MiB de memoria, 60 GB de disco duro y tarjeta gráfica <a href="https://www.nvidia.com/page/geforce2mx.html">NVIDIA GeForce2</a> MX 400 creo que con 32 MiB. Viendo que al finalizar su vida útil era algo complicado donar un ordenador ATX por tema de espacio el siguiente equipo que compré en el 2008 fue un portátil Dell XPS 1530 con un <a href="https://ark.intel.com/es-es/products/33916/Intel-Core2-Duo-Processor-T8100-3M-Cache-2_10-GHz-800-MHz-FSB">Intel Core 2 Duo T8100</a>, 4 GiB de memoria, 320 GB de disco duro y gráfica <a href="https://www.nvidia.es/object/geforce_8600_es.html">NVIDIA 8600GT</a> con 512 MiB, al poco tiempo de donarlo se estropeó, se quedó completamente muerto sin llegar a hacer ningún atisbo de encenderse, desde entonces no quiero nada que venga de Dell incluidos monitores tampoco me convenció pasado el tiempo de deslumbramiento inicial de su posesión la calidad de esta marca. El tercer equipo que compré a finales del 2012 también fue un portátil con la misma intención de poder donarlo llegado el momento, un Sony VAIO de 14&quot; de resolución 1600x900 en panel TN con un <a href="https://ark.intel.com/es-es/products/67355/Intel-Core-i5-3210M-Processor-3M-Cache-up-to-3_10-GHz-rPGA">Intel Core i5 3210M</a> (Ivy Bridge, con un <a href="https://en.wikipedia.org/wiki/Intel_Graphics_Technology#Ivy_Bridge">gráfica integrada HD 4000</a>), 8 GB de memoria con la que poder virtualizar más a gusto y un SSD Samsung 840 EVO de 250 GB SATA III (550 MB/s lectura, 500 MB/s escritura) que le puse a posteriori con el que el aumento de rendimiento en acceso a almacenamiento persistente. El SSD fue una gran mejora respecto a los discos duros mecánicos, mejor inversión que mejor procesador y más cantidad de memoria. Una pena que Sony haya abandonado el mercado de los portátiles porque con este Sony he estado realmente contento aún con algunos acabados en plástico y su pantalla TN.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/componentes_hua5c0834e4848d7d59bb13952f9b808c5_1757138_2560x1440_fit_q90_box.jpg" data-gallery="" title="4 GiB DDR2 de memoria RAM, AMD Athlon e Intel Core 2 Duo (T8100)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/componentes_hua5c0834e4848d7d59bb13952f9b808c5_1757138_200x150_fit_q90_box.jpg" width="200" height="121" alt="4 GiB DDR2 de memoria RAM, AMD Athlon e Intel Core 2 Duo (T8100)" title="4 GiB DDR2 de memoria RAM, AMD Athlon e Intel Core 2 Duo (T8100)"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/amd-athlon_huae8c4e7ad340a73b24d9fb102f67ae77_1609883_2560x1440_fit_q90_box.jpg" data-gallery="" title="Microprocesador AMD Athlon"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/amd-athlon_huae8c4e7ad340a73b24d9fb102f67ae77_1609883_200x150_fit_q90_box.jpg" width="200" height="105" alt="Microprocesador AMD Athlon" title="Microprocesador AMD Athlon"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/intel-core-2-duo_huf69ede0f60e5f01176e29e2113c1664a_564046_2560x1440_fit_q90_box.jpg" data-gallery="" title="Microprocesador Intel Core 2 Duo (T8100)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/intel-core-2-duo_huf69ede0f60e5f01176e29e2113c1664a_564046_200x150_fit_q90_box.jpg" width="152" height="150" alt="Microprocesador Intel Core 2 Duo (T8100)" title="Microprocesador Intel Core 2 Duo (T8100)"  class="lozad "></a></p>
<figcaption>4 GiB DDR2 de memoria RAM, AMD Athlon e Intel Core 2 Duo (T8100) de anteriores equipos</figcaption>
</figure>
</div>
<h3 id="la-búsqueda">La búsqueda</h3>
<p>Empezaba por decidirme que formato de ordenador quería con <a href="https://picodotdev.github.io/blog-bitix/2018/04/intentando-elegir-portatil-nuc-o-mini-itx-para-comprar-nuevo-equipo/">Intentando elegir portátil, NUC o mini ITX para comprar nuevo equipo</a> y pasado un tiempo ya casi optado por la opción que quería, <a href="https://picodotdev.github.io/blog-bitix/2018/06/decidido-a-comprar-un-intel-nuc-entre-las-opciones-que-he-evaluado/">Decidido a comprar un Intel NUC entre las opciones que he evaluado</a> pasando por un <a href="https://picodotdev.github.io/blog-bitix/2018/04/sobre-el-slimbook-aio-curve/">análisis del Slimbook Curve</a> que hice. Para el nuevo ordenador personal en cualquier opción que eligiese quería monitor externo, al final elegí un <a href="https://amzn.to/2OFdFi9">BenQ PD2700Q con resolución QHD (2560x1440) e IPS</a>. Descarté un ATX por tamaño e igualmente un ITX que aún siendo un formato más pequeño seguía siendo grande para mi, a pesar de que con esta opción podría elegir un <a href="https://www.amd.com/es/ryzen">AMD Ryzen</a> con mayor cantidad de núcleos. Un portátil seguía siendo una opción válida para poder donarlo en un futuro pero ocupa cierto espacio en la mesa y no tengo intención de moverlo por lo que la función que le da nombre no me es necesaria, si eligiese uno sería un <a href="https://slimbook.es/en/pro-ultrabook-13-aluminium">Slimbook Pro2</a> seguramente. Como opción me quede con algún ordenador en formato Intel NUC, en un futuro cuando ya se me quede no válido para mis usos principales lo utilizaré como ordenador servidor de archivos, de descargas u otros usos personales que pueda darle como <a href="https://owncloud.org/">OwnCloud</a> o <a href="https://about.gitlab.com/">GitLab</a>, como ocupa poco el espacio no será un problema.</p>
<h3 id="intel-nuc8i5bek-bean-canyon">Intel NUC8i5BEK (Bean Canyon)</h3>
<p>Es una pena que AMD no ofrezca equipos en formato de Intel NUC, muy posiblemente lo hubiese elegido principalmente por <a href="https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/">los graves fallos de seguridad Meltdown y Spectre</a> que se hicieron públicos a inicios del 2018 que afectan más a Intel y que por ser un fallo del hardware solo se pueden no arreglar, simplemente mitigar haciendo que sea más difícil explotarlos y con pérdida de rendimiento. Para que en el cambio del equipo fuese una mejora significativa respecto al anterior portátil Sony que tenía quería que tuviese algún núcleo más en esta guerra entre Intel y AMD por ver quien ofrece más núcleos que parece por ahora va ganando AMD con su nueva arquitectura Zen y los problemas que está teniendo Intel para bajar de los 14 nanómetros de litografía para el tamaño de los transistores.</p>
<p>Además, tengo intención de intentar jugar algún juego como <a href="https://eu.diablo3.com/es/">Diablo 3</a> en GNU/Linux instalando la aplicación <a href="https://www.blizzard.com/es-es/apps/battle.net/desktop">Battle.net</a> de <a href="https://www.blizzard.com/es-es/">Blizzard</a> ejecutándola con <a href="https://www.winehq.org/">Wine</a>, <a href="https://www.playonlinux.com/en/">PlayOnLinux</a>/<a href="https://phoenicis.org/">Phoenicis</a> o <a href="https://www.winepak.org/">Winepak</a>, al menos en una máquina virtual con <a href="https://www.virtualbox.org/">VirtualBox</a> lo conseguí a pesar de que no llegué a jugar pero si a instalar el juego. También intentaré instalar algún juego de <a href="https://store.steampowered.com/">Steam</a> y de <a href="https://www.gog.com/">GOG</a> sobre los que si lo consigo publicaré sus respectivos artículos para explicarlo. Al Diablo es casi seguro que jugaré si me funciona en GNU/Linux el resto es más intención de querer tener tiempo para jugar a estos juegos que lo vaya a hacer. Las gráficas integradas de Intel son muy básicas y no está destinadas principalmente a juegos, al menos no triple A nuevos, pero son suficientes para un jugador ocasional como yo que tampoco le importa bajar la resolución y detalles gráficos para tener unos FPS razonables para jugar o se conforma con juegos con unos años.</p>
<p>Los juegos que tengo en mi lista son los siguientes, juegos de rol o estrategia principalmente como se aprecia.</p>
<ul>
<li><a href="https://eu.diablo3.com/es/">Diablo 3</a></li>
<li><a href="https://store.steampowered.com/app/310560/DiRT_Rally/">DirtRally</a></li>
<li><a href="https://store.steampowered.com/app/640820/Pathfinder_Kingmaker/">Pathfinder: Kingmaker</a></li>
<li><a href="https://www.gog.com/game/torchlight_ii">Tochligh II</a></li>
<li><a href="https://store.steampowered.com/app/271590/Grand_Theft_Auto_V/">Grand Theft Auto V</a></li>
<li><a href="https://store.steampowered.com/app/245620/Tropico_5/">Tropico 5</a></li>
<li><a href="https://store.steampowered.com/app/257350/Baldurs_Gate_II_Enhanced_Edition/">Baldur&rsquo;s Gate II: Enhanced Edition</a></li>
</ul>
<p>Intel ha lanzado al mercado unos NUC con gráfica <a href="https://en.wikipedia.org/wiki/AMD_RX_Vega_series">AMD Vega</a> con los que si es posible a jugar bien a juegos, los NUC conocidos como <a href="https://en.wikipedia.org/wiki/Next_Unit_of_Computing#Kaby_Lake-G">Hades Canyon</a>. Sin embargo, estos son sensiblemente caros para mi presupuesto y tienen una fuente de alimentación tan grande como el propio NUC con la que era un poco reticente. Al mismo tiempo había leído noticias de los <a href="https://en.wikipedia.org/wiki/Next_Unit_of_Computing#Coffee_Lake-U">Bean Canyon</a> que cumplían tres requerimientos que tenía, al menos 4 núcleos y 8 hilos y una gráfica un poco mejor, de la gama Iris que tienen el doble de potencia de lo que ofrece Intel en algunos de sus procesadores y posibilidad de instalar hasta 32 GiB de memoria RAM (aunque en el vídeo de más abajo dicen que se puede instalar 64GB cuando haya módulos de 32GB, en la página oficial de Intel mencionan 32GB como máximo). Sin embargo, esto me implicaba esperar ya que estos equipos aún no estaban en el mercado, había NUCs con 4 núcleos pero con gráfica UHD 630 (GT2) no <a href="https://en.wikipedia.org/wiki/Intel_Graphics_Technology#Kaby_Lake_Refresh_/_Coffee_Lake">Iris Graphics 655</a> y que eran más caros que el precio al que finalmente han salido los Bean Canyon que llevan también 4 núcleos y la citada Iris Graphics 655 (GT3). Las <a href="https://en.wikipedia.org/wiki/Intel_HD_and_Iris_Graphics">gráficas Intel</a> no son muy potentes comparadas con las dedicadas NVIDIA y AMD pero tienen muy buen soporte de controladores en GNU/Linux.</p>
<p>Hay varios modelos de Bean Canyon variando el procesador que incorporan, ligeramente en tamaño si ofrecen bahía para disco de 2.5&quot; y en el precio. El más básico <a href="https://www.intel.com/content/www/us/en/products/boards-kits/nuc/kits/nuc8i3bek.html">NUC8i3BEK</a> lleva un procesador <a href="https://www.intel.com/content/www/us/en/products/processors/core/i3-processors/i3-8109u.html">i3-8109U</a> que tiene 2 núcleos y 4 hilos con 4 MiB de cache pero la misma gráfica Iris que los modelos mayores. El <a href="https://www.intel.com/content/www/us/en/products/boards-kits/nuc/kits/nuc8i5bek.html">NUC8i5BEK</a> lleva un procesador <a href="https://ark.intel.com/products/135935/Intel-Core-i5-8259U-Processor-6M-Cache-up-to-3_80-GHz">i5-8259U</a> con 4 núcleos y 8 hilos con 6 MiB de cache, la misma Iris Graphics 655 de todos estos modelos. El modelo <a href="https://www.intel.com/content/www/us/en/products/boards-kits/nuc/kits/nuc8i7beh.html">NUC8i7BEK</a> lleva un <a href="https://ark.intel.com/products/137979/Intel-Core-i7-8559U-Processor-8M-Cache-up-to-4-50-GHz-">i7-8559U</a> con 8 MiB de cache. Todos los modelos tienen un TPD de 28W que es algo mayor que los 15W de la generación anterior pero para que no suponga un problema el calor generado en los Bean Canyon Intel ha incorporado un ventilador de un tamaño más grande para que aún así el ruido que hace al funcionar sea menor, además ha modificado las rejillas de ventilación para permitir mayor flujo de aire.</p>
<p>Todos poseen un puerto Ethernet Gigabit y WiFI AC con Bluetooth 5.0, una salida de vídeo HDMI 2.0a con soporte hasta 4K, salida Display Port 1.2 integrada en el conector USB Type-C, cuatro puertos USB dos en la parte frontal (uno con soporte carga) y dos en la parte trasera, además del conector para la fuente de alimentación que tiene un tamaño pequeño comparado con la de los Hades Canyon, en la parte frontal está el botón de encendido y un LED indicador de actividad del SSD junto con la salida de audio en formato jack 3.5mm. Los modelos acabados en <em>K</em> son más pequeños en tamaño vertical ya que no ofrecen bahía 2.5 pulgadas para un segundo disco duro con interfaz SATA III que si ofrecen los acabados en <em>H</em>. En un lateral se encuentra la ranura para <a href="https://en.wikipedia.org/wiki/Secure_Digital">tarjetas SDXC</a> con soporte UHS-I en formato microSD. En el interior están los dos <em>slots</em> para la memoria pudiendo instalar hasta un total de 32 GiB DDR4 a 2400Mhz, también está el conector M.2 para un SSD con interfaz NVMe de longitud 2280 o 2242, también tiene un puerto SATA III.</p>
<p>Ocupan muy poco, tiene un tamaño de 11x11x3.6cm (ancho, largo, alto en centímetros) y la fuente de alimentación 13x5x3cm.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Next_Unit_of_Computing">Next Unit of Computing (NUC)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Intel_Graphics_Technology">Intel Graphics Technology</a></li>
<li><a href="https://www.tomshardware.com/news/intel-bean-canyon-pricing-specs">Intel&rsquo;s Bean Canyon NUCs Hit the Shelves</a></li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/intel-nuc8i5-brief_hueed7c97bafe40f3b39d93eaefcfb39d9_744625_2560x1440_fit_box_3.png" data-gallery="" title="Intel NUC Bean Canyon (tall)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/intel-nuc8i5-brief_hueed7c97bafe40f3b39d93eaefcfb39d9_744625_600x450_fit_box_3.png" width="600" height="338" alt="Intel NUC Bean Canyon (tall)" title="Intel NUC Bean Canyon (tall)"  class="lozad "></a></p>
<figcaption>Intel NUC Bean Canyon (slim y tall)</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/especificaciones-modelos-intel-nuc-bean-canyon_hu4b88bcc68cd3f1e6345a5498b842a444_112797_2560x1440_fit_box_3.png" data-gallery="" title="Especificaciones de los modelos Intel NUC Bean Canyon"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/especificaciones-modelos-intel-nuc-bean-canyon_hu4b88bcc68cd3f1e6345a5498b842a444_112797_600x450_fit_box_3.png" width="285" height="450" alt="Especificaciones de los modelos Intel NUC Bean Canyon" title="Especificaciones de los modelos Intel NUC Bean Canyon"  class="lozad "></a></p>
<figcaption>Especificaciones de los modelos Intel NUC Bean Canyon</figcaption>
</figure>
</div>
<p>En el momento de comercialización el modelo NUC8i3BEK tiene un precio sobre los 300 €, el NUC8i5BEK sobre los 400 € y el NUC8i7BEK sobre los 500 €. Los Hades Canyon llegan a los 800 € y 1000 € pero con mejor gráfica y mayor número de puertos de conexión. Con la aparición de los Bean Canyon los <a href="https://en.wikipedia.org/wiki/Next_Unit_of_Computing#Kaby_Lake-U_%28Baby_Canyon%29">Baby Canyon</a> de la generación anterior se han convertido en una opción desaconsejada por la reducida diferencia de precio, el <a href="https://www.intel.com/content/www/us/en/products/boards-kits/nuc/kits/nuc7i5bnk.html">NUC7i5BNK</a> (i5-7260U) cuesta unos 360 € y tiene 2 núcleos menos que el NUC8i5.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B09BKRXXNZ&amp;linkId=b9fc7a3e35ba1a716963ac602a66fb33" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B09D7CM8L4&amp;linkId=d92b67c02f080c4ba42c4abfd4885aea" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B09JP3K5MP&amp;linkId=4af8520848ee25ccedbe7c7c191f40c5" title="Amazon" class="lozad"></iframe>
</div>
<p>Opté por el modelo NUC8i5BEK sobre el NUC8i3BEK, por sus cuatro núcleos y sobre el NUC8i7BEH porque este no ofrece un aumente de rendimiento significativo sobre el i5 acorde a la diferencia de precio. Podría haber tenido alguna duda de si optar por el modelo sin bahía de 2.5 SATA (<em>slim</em>) o el modelo con bahía (<em>tall</em>) pero con los 500GB, si necesitase más podría ponerle además una micro SDXC de 128 GB o 256 GB con las que tendré suficiente espacio, con el disco de 250 GB del portátil Sony no llegaba a los 100 GB ocupados. Y en cualquier caso en el futuro si necesito más espacio los SSD se habrán abaratado mucho o aumentado su capacidad si continúan con su bajada de precios y aumento de capacidades a cada mes que pasa como hasta ahora.</p>
<p>El precio del NUC en el momento de salida es de unos 400 € no es muy superior respecto a los que costaría un equipo ITX teniendo en cuenta que en estos hay que comprar procesador, placa base, fuente de alimentación y caja, con la diferencia de que ocupa sensiblemente más. Un <a href="https://www.pccomponentes.com/amd-ryzen-r5-2400g-36ghz">AMD Ryzen 2400G</a>, <a href="https://www.pccomponentes.com/msi-b450i-gaming-plus-ac">placa base MSI B450I</a>, <a href="https://www.pccomponentes.com/corsair-cx450-450w-80-plus-bronze">fuente de 450W</a> y caja ITX el conjunto se va a aproximadamente a los mismos 400 €, el Ryzen tiene mejor gráfica integrada que la Intel pero el conjunto ocupa sensiblemente mucho más espacio.</p>
<p>He esperado todos estos meses hasta ahora que han aparecido a la venta en <a href="https://amzn.to/2flFhHA">Amazon</a> y también en <a href="https://www.pccomponentes.com/">PC Componentes</a>. Varios meses antes se han publicado varios artículos analizando en buen detalle estos modelos de NUC asi como antes la <a href="https://newsroom.intel.com/news/intel-introduces-new-nuc-kits-nuc-mini-pcs-intel-nuc-family/">nota de prensa con la presentación oficial de Intel</a> en el momento de su inicio de comercialización. En mi experiencia con este caso desde que aparecen las primeras noticias en los medios hasta que se empieza a comercializar y más tarde hasta que aparece en las tiendas y llega a tiendas como Amazon y Pc Componentes, puede pasar perfectamente más de medio año o un año.</p>
<ul>
<li><a href="https://nucblog.net/2018/10/coffee-lake-nuc8i3beh-review/">Coffee Lake i3 NUC Review (NUC8i3BEH)</a></li>
<li><a href="https://nucblog.net/2018/11/coffee-lake-i5-nuc-review-nuc8i5bek-nuc8i5beh/">Coffee Lake i5 NUC Review (NUC8i5BEK / NUC8i5BEH)</a></li>
<li><a href="https://nucblog.net/2018/11/coffee-lake-i7-nuc-review-nuc8i7beh/">Coffee Lake i7 NUC Review (NUC8i7BEH)</a></li>
<li><a href="https://nucblog.net/2018/11/gaming-on-bean-canyon-nucs/">Gaming on Bean Canyon NUCs – Comparison</a></li>
<li><a href="https://www.thurrott.com/hardware/190478/intel-nuc-nuc8i7beh-mini-pc-kit-first-impressions">Intel NUC (NUC8i7BEH) Mini-PC Kit First Impressions</a></li>
<li><a href="https://www.cnx-software.com/2018/05/16/intel-nuc-kit-nuc7pjyh-review/">Intel NUC Kit NUC7PJYH Review</a></li>
<li><a href="https://hardzone.es/2018/07/25/nuc-intel-bean-canyon-coffee-lake-u/">Nuevos NUC Intel Bean Canyon: ahora con procesadores Coffee Lake-U</a></li>
</ul>
<p>En el primer vídeo se hace una análisis del NUC y en el siguiente se puede observar como se comporta en varias pruebas de rendimiento y juegos.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/MMuJlVW7mQE" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/4miXwdJMG1s" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>También se puede ver una comparativa del rendimiento entre los modelos de procesador de los Bean Canyon y la generación anterior. Los 2 núcleos y cuatro hilos adicionales de la octava generación se notan al comparar los resultados en multihilo.</p>
<ul>
<li><a href="https://browser.geekbench.com/v4/cpu/compare/10847596?baseline=10972155">NUC7i5BNK vs NUC8i5BEK</a></li>
</ul>
<h3 id="memoria-hyperx-impact">Memoria HyperX Impact</h3>
<p>Como desarrollador suelo virtualizar sistemas operativos con <a href="https://www.virtualbox.org/">VirtualBox</a> o iniciar contenedores de <a href="https://www.docker.com/">Docker</a> que demandan en buena medida cantidad de memoria. Todos los equipos principalmente se me quedan pequeños por la cantidad de memoria mucho más incluso que por potencia de procesador o por la velocidad o tamaño del almacenamiento ya habiendo pasado a los SSD, incluso los 8 GiB del portátil Sony se me quedaron pequeños. La memoria DDR4 está muy cara, más incluso que en el momento de su salida (casi el doble) lo que es una anomalía en la tecnología que siempre baja de precio por la presión de los avances, los fabricantes deben estar teniendo unos márgenes de beneficios brutales con la memoria DDR4. La excusa es que han preferido producir memoria NAND y RAM para teléfonos móviles que memoria RAM para ordenadores. En el 2019 está previsto que baje de precio entre un 10% y 20% por menor demanda.</p>
<p>Probablemente 16 GiB me sería suficientes pero no me importa ir a por los 32 GiB aún con el consiguiente aumento de precio. Del modelo de la memoria no tengo muchos requerimientos simplemente una que fuese de 2400Mhz y estuviese entre las <a href="http://compatibleproducts.intel.com/ProductDetails/ExportPeripheralInfo?moduleName=Intel%C2%AE%20NUC&amp;productType=Kits&amp;productName=Intel%C2%AE%20NUC%20Kit%20NUC8i5BEK">memorias validada por Intel</a> para estos NUC. Hay módulos de 16 GB que se venden sueltos o <em>kits</em> de dos pares de módulos para hacerlos funcionar en <em>dual channel</em>. Dependiendo del momento puede salir más económico comprar los dos módulos por separado o comprar un <em>kit</em>. La ventaja del <em>kit</em> es que están validados para hacerlos funcionar en <em>dual channel</em> y es que los módulos separados pueden tener alguna diferencia según el momento en que fuero fabricados ya que podrían haberse producido con componentes de diferentes proveedores pudiendo hacer que tengan diferencias que provocase errores en el sistema. Comprando los dos módulos en el mismo momento es raro que tenga alguna diferencia pero por asegurar se puede optar por el <em>kit</em>.</p>
<ul>
<li><a href="https://foro.noticias3d.com/vbulletin/showthread.php?t=433238">Kits de RAM vs módulos individuales, ¿existe realmente alguna diferencia?</a></li>
<li><a href="http://www.tomshardware.co.uk/forum/270105-30-difference-memory-kits-single-memory-modules">Difference between memory kits and single memory modules</a></li>
<li><a href="https://www.kingston.com/datasheets/HX424S14IBK2_32.pdf">HyperX Impact Memory Module Specifications</a></li>
</ul>
<p>Dos modelos validados por Intel compatibles con esto NUC son HyperX Impact de Kingston y los G.Skill Ripjaws más o menos en el mismo precio, los HyperX tienen algo mejor latencia aunque será poco apreciable en el uso del ordenador. En cualquier caso conviene fijarse en la compatibilidad por la fecuencia de trabajo soportada por el NUC y la memoria. Los 32 GiB en el momento en que los he comprado están entre 280 y 320 €, ciertamente cara. Al final opté por la memoria HyperX Impact.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B097TP1N9G&amp;linkId=acd31b9807fe2cd5136c1ee426d31317" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B083W5ZRJ1&amp;linkId=efa0ab7617d19c20edd3b43c57e76165" title="Amazon" class="lozad"></iframe>
</div>
<ul>
<li><a href="https://www.hyperxgaming.com/es/memory/impact-ddr4">Memoria HyperX Impact</a></li>
</ul>
<h3 id="samsung-970-evo-m2-nvme">Samsung 970 EVO M.2 NVMe</h3>
<p>El almacenamiento en formato SSD está bajando notablemente de precio a cada mes o par de meses que pasa. En tamaño de 250 GB ya tienen un precio muy asequible e incluso en 500 GB y 1 TB no son prohibitivos. Cambiar el disco duro por un SSD es la mejor inversión a realizar en un ordenador si la cantidad de memoria es suficiente, cualquier procesador cumple para usos ofimáticos. Se puede optar por un SSD con interfaz SATA III con una velocidad de lectura y escritura de 550 / 500 MB/s que ya es bastante rápido para muchos usuarios o en formato M.2 NVMe que ofrece sensiblemente mayores tasas de transferencia de hasta 3500 / 2500 MB/s.</p>
<p>Por la cantidad de datos que tengo el tamaño que necesito está entre 250 y 500 considerando que una gran parte de los datos los tengo en dos discos duros USB externos por duplicado y el equipo solo contendría los más importantes. He barajado un M.2, ya que es el conector que ofrece el Intel NUC que he elegido, como el Samsung 970 EVO y con interfaz SATA III de 500 GB con conector M.2 había barajado el Crucial MX500. Por comparar como han evolucionado el SSD que compré en el 2014 para el Sony Vaio era un Samsung 840 EVO de 250 GB me costó 125 € y ahora un NVMe ofrece el doble de capacidad y a una velocidad sensiblemente superior y en formato SATA III doble de capacidad a un precio sensiblemente inferior.</p>
<p>Al final he optado por el Samsung 970 EVO, con el Crucial con interfaz SATA III tendría creo que suficiente pero no estoy ajustando mucho el precio, al igual que en la memoria.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07MFBLN7K&amp;linkId=d8ee308b386ae8fc1ed0978391f98ade" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B077SQ8J1V&amp;linkId=048e7dde98c59aff3bdf3eda82b0057a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08PC5DKZQ&amp;linkId=dcd291ad706e925f4dfca3c39045a54f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B077SF8KMG&amp;linkId=30e60238410c4c1f9584f13e067e8cca" title="Amazon" class="lozad"></iframe>
</div>
<p>Es muy posible que compre adicionalmente una tarjeta micro SDXC de 128 GB o de 256 GB como una forma de ampliar la cantidad de almacenamiento que tengo disponible y como carperta de descargas y archivos temporales. Las SDXC admiten hasta un almacenamiento de 2 TiB que en un futuro se harán más asequibles en precio.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07P9W5HJV&amp;linkId=94d207e03eb06aae1e957b8ea9fd541a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07H1231S8&amp;linkId=a34fdc7896b0bd98cca4bffe8d532f81" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B085FGBBQT&amp;linkId=53ddc3565d97646edfb49c83ebfaf25e" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B06XFS5657&amp;linkId=186319e6ae3e35777b9412d236a46297" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B09D3N9MFH&amp;linkId=cc5b5ec88477019b977e0e5e92c2b712" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B06XFHQGB9&amp;linkId=69626bf45c9c279219546f122fd33a06" title="Amazon" class="lozad"></iframe>
</div>
<ul>
<li><a href="https://www.samsung.com/es/memory-storage/ssd-970-evo/MZ-V7E500BW/">Samsung 970 EVO NVMe M.2 500GB SSD</a></li>
<li><a href="https://www.samsung.com/es/memory-storage/evo-plus-microsd-with-adapter-mb-mc128gaeu/MB-MC128GAEU/">Samsung EVO Plus microSD</a></li>
</ul>
<h3 id="desempaquetado">Desempaquetado</h3>
<p>Con estos componentes he realizado el pedido en <a href="https://amzn.to/2flFhHA">Amazon</a> ya que es la tienda que suelo utilizar para las compras en internet que hago, por comodidad, ahorrar tiempo, poder informarme lo mejor que puedo con las opiniones de otros clientes y por el amplio catálogo de productos que tiene. En total el conjunto de todos estos componentes me ha salido por unos 830 €, algo más barato que el portátil Sony si tengo en cuenta el SSD que le compre luego pero sensiblemente mejor con el lustro que ha pasado entre uno y otro.</p>
<h4 id="nuc">NUC</h4>
<p>La caja del NUC es muy pequeña en la que se incluye el NUC y la fuente de alimentación que es mucho más pequeña que el ladrillo de los Hades Canyon.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-1_hueb9732b69881ed1a8fb1af830483bccf_640332_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-1_hueb9732b69881ed1a8fb1af830483bccf_640332_200x150_fit_q90_box.jpg" width="182" height="150" alt="Caja Intel NUC8i5BEK" title="Caja Intel NUC8i5BEK"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-2_hue1f852c6a1e1a627adeea2d64b484b8b_367322_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-2_hue1f852c6a1e1a627adeea2d64b484b8b_367322_200x150_fit_q90_box.jpg" width="200" height="133" alt="Caja Intel NUC8i5BEK" title="Caja Intel NUC8i5BEK"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-3_hub0dced20d4a49613f9b7ae4c1a96129b_881813_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-3_hub0dced20d4a49613f9b7ae4c1a96129b_881813_200x150_fit_q90_box.jpg" width="180" height="150" alt="Caja Intel NUC8i5BEK" title="Caja Intel NUC8i5BEK"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-4_hueffa107b5e142b32a91180c98a0dfac5_628540_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-4_hueffa107b5e142b32a91180c98a0dfac5_628540_200x150_fit_q90_box.jpg" width="200" height="134" alt="Caja Intel NUC8i5BEK" title="Caja Intel NUC8i5BEK"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-5_hudf0a15d8a9b017d9930a9779cdecae15_836435_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-5_hudf0a15d8a9b017d9930a9779cdecae15_836435_200x150_fit_q90_box.jpg" width="190" height="150" alt="Caja Intel NUC8i5BEK" title="Caja Intel NUC8i5BEK"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-6_hud39a22f2f962d86a12bad7a17cf87857_1016479_2560x1440_fit_q90_box.jpg" data-gallery="" title="Caja Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-6_hud39a22f2f962d86a12bad7a17cf87857_1016479_200x150_fit_q90_box.jpg" width="179" height="150" alt="Caja Intel NUC8i5BEK" title="Caja Intel NUC8i5BEK"  class="lozad "></a></p>
<figcaption>Caja Intel NUC8i5BEK</figcaption>
</figure>
</div>
<p>Aspecto exterior del NUC.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-7_hucdb59c155478afe0ac7dbfc4135e123b_277473_2560x1440_fit_q90_box.jpg" data-gallery="" title="Aspecto exterior Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-7_hucdb59c155478afe0ac7dbfc4135e123b_277473_200x150_fit_q90_box.jpg" width="200" height="77" alt="Aspecto exterior Intel NUC8i5BEK" title="Aspecto exterior Intel NUC8i5BEK"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-8_hu072375a650fc74db888870cd145b9f6f_693170_2560x1440_fit_q90_box.jpg" data-gallery="" title="Aspecto exterior Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-8_hu072375a650fc74db888870cd145b9f6f_693170_200x150_fit_q90_box.jpg" width="200" height="88" alt="Aspecto exterior Intel NUC8i5BEK" title="Aspecto exterior Intel NUC8i5BEK"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-9_huae6714879890f02d2f53cb9f38fe5acd_634420_2560x1440_fit_q90_box.jpg" data-gallery="" title="Aspecto exterior Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-9_huae6714879890f02d2f53cb9f38fe5acd_634420_200x150_fit_q90_box.jpg" width="200" height="86" alt="Aspecto exterior Intel NUC8i5BEK" title="Aspecto exterior Intel NUC8i5BEK"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-10_hu6b6a791c5082fb0ff9f0042de9f13efb_625634_2560x1440_fit_q90_box.jpg" data-gallery="" title="Aspecto exterior Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-10_hu6b6a791c5082fb0ff9f0042de9f13efb_625634_200x150_fit_q90_box.jpg" width="200" height="87" alt="Aspecto exterior Intel NUC8i5BEK" title="Aspecto exterior Intel NUC8i5BEK"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-11_hu453378435dfb18b533ba6e3b609463ef_719109_2560x1440_fit_q90_box.jpg" data-gallery="" title="Aspecto exterior Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-11_hu453378435dfb18b533ba6e3b609463ef_719109_200x150_fit_q90_box.jpg" width="143" height="150" alt="Aspecto exterior Intel NUC8i5BEK" title="Aspecto exterior Intel NUC8i5BEK"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-12_hu82930b50e1a40f30648b77321489ccea_818154_2560x1440_fit_q90_box.jpg" data-gallery="" title="Aspecto exterior Intel NUC8i5BEK"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-12_hu82930b50e1a40f30648b77321489ccea_818154_200x150_fit_q90_box.jpg" width="200" height="112" alt="Aspecto exterior Intel NUC8i5BEK" title="Aspecto exterior Intel NUC8i5BEK"  class="lozad "></a></p>
<figcaption>Aspecto exterior Intel NUC8i5BEK</figcaption>
</figure>
</div>
<p>La fuente de alimentación del NUC y el soporte VESA con sus tornillos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-13_hufa18b033a43089f097ffbe8a10879f5c_624951_2560x1440_fit_q90_box.jpg" data-gallery="" title="Fuente de alimentación"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-13_hufa18b033a43089f097ffbe8a10879f5c_624951_200x150_fit_q90_box.jpg" width="128" height="150" alt="Fuente de alimentación" title="Fuente de alimentación"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-14_hu6116ee8fb85eb3ae3a9110198b958364_612095_2560x1440_fit_q90_box.jpg" data-gallery="" title="Soporte VESA"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-nuc-14_hu6116ee8fb85eb3ae3a9110198b958364_612095_200x150_fit_q90_box.jpg" width="200" height="150" alt="Soporte VESA" title="Soporte VESA"  class="lozad "></a></p>
<figcaption>Fuente de alimentación y soporte VESA</figcaption>
</figure>
</div>
<p>Manuales e instrucciones del NUC.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/instrucciones-1_hu0d47227c596b5cfaa027faef463db967_835883_2560x1440_fit_q90_box.jpg" data-gallery="" title="Manuales e instrucciones del NUC"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/instrucciones-1_hu0d47227c596b5cfaa027faef463db967_835883_200x150_fit_q90_box.jpg" width="169" height="150" alt="Manuales e instrucciones del NUC" title="Manuales e instrucciones del NUC"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/instrucciones-2_huda26822c9e7bc0e2717b40763cdd3a80_939349_2560x1440_fit_q90_box.jpg" data-gallery="" title="Manuales e instrucciones del NUC"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/instrucciones-2_huda26822c9e7bc0e2717b40763cdd3a80_939349_200x150_fit_q90_box.jpg" width="148" height="150" alt="Manuales e instrucciones del NUC" title="Manuales e instrucciones del NUC"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/instrucciones-3_hueddcee0aab1a707c6c9f9bf784ab74c6_618100_2560x1440_fit_q90_box.jpg" data-gallery="" title="Manuales e instrucciones del NUC"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/instrucciones-3_hueddcee0aab1a707c6c9f9bf784ab74c6_618100_200x150_fit_q90_box.jpg" width="200" height="138" alt="Manuales e instrucciones del NUC" title="Manuales e instrucciones del NUC"  class="lozad "></a></p>
<figcaption>Manuales e instrucciones del NUC</figcaption>
</figure>
</div>
<p>En el interior se aprecia el conector SATA aunque para usarlo en la versión <em>slim</em> hay que dejar la tapa inferior sin poner para poder añadir el disco 2.5&quot; y los cables que necesita. La parte interior de la tapa inferior tiene una tira de un material que hace de disipador para el SSD NVMe.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-interior-1_hud0423be9841a74ea7e3a7f275499070b_367567_2560x1440_fit_q90_box.jpg" data-gallery="" title="Placa base del NUC"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-interior-1_hud0423be9841a74ea7e3a7f275499070b_367567_200x150_fit_q90_box.jpg" width="150" height="150" alt="Placa base del NUC" title="Placa base del NUC"  class="lozad "></a></p>
<figcaption>Placa base del NUC <br>Fuente: nucblog.net</figcaption>
</figure>
</div>
<p>El ventilador es más grande que en generaciones anteriores.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i3beh-fan_hu2a04476658c268bdeb9f926005bbc880_210901_2560x1440_fit_q90_box.jpg" data-gallery="" title="Ventilador"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i3beh-fan_hu2a04476658c268bdeb9f926005bbc880_210901_200x150_fit_q90_box.jpg" width="150" height="150" alt="Ventilador" title="Ventilador"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i3beh-heatsink_huf68be85ced995c399623728934aa8a07_354298_2560x1440_fit_q90_box.jpg" data-gallery="" title="Disipador"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i3beh-heatsink_huf68be85ced995c399623728934aa8a07_354298_200x150_fit_q90_box.jpg" width="150" height="150" alt="Disipador" title="Disipador"  class="lozad "></a></p>
<figcaption>Ventilador y disipador <br>Fuente: nucblog.net</figcaption>
</figure>
</div>
<h4 id="memoria">Memoria</h4>
<p>El <em>kit</em> de la memoria DDR4 a 2400 Mhz no tiene nada especial. Cada módulo está empaquetado en un <em>blister</em> de plástico.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ram-1_hu2e5de92eb8192045e349d92cdc65d517_1078283_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado memoria HyperX Impact"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ram-1_hu2e5de92eb8192045e349d92cdc65d517_1078283_200x150_fit_q90_box.jpg" width="94" height="150" alt="Desempaquetado memoria HyperX Impact" title="Desempaquetado memoria HyperX Impact"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ram-2_hua0b32db0a22702645bfe71cdd84821ed_792691_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado memoria HyperX Impact"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ram-2_hua0b32db0a22702645bfe71cdd84821ed_792691_200x150_fit_q90_box.jpg" width="93" height="150" alt="Desempaquetado memoria HyperX Impact" title="Desempaquetado memoria HyperX Impact"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ram-3_hu94f4f8267f93a540dc76b5e057e7aca3_658751_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado memoria HyperX Impact"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ram-3_hu94f4f8267f93a540dc76b5e057e7aca3_658751_200x150_fit_q90_box.jpg" width="200" height="114" alt="Desempaquetado memoria HyperX Impact" title="Desempaquetado memoria HyperX Impact"  class="lozad "></a></p>
<figcaption>Desempaquetado memoria HyperX Impact</figcaption>
</figure>
</div>
<h4 id="ssd">SSD</h4>
<p>El <em>stick</em> del SSD también es muy pequeño solo mide 8cm de largo y unos 2,5 cm de ancho.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ssd-1_hu8d08b28d0ab37ca18e011062a3d628b8_829000_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado SSD Samsung 970 EVO NVMe"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ssd-1_hu8d08b28d0ab37ca18e011062a3d628b8_829000_200x150_fit_q90_box.jpg" width="200" height="133" alt="Desempaquetado SSD Samsung 970 EVO NVMe" title="Desempaquetado SSD Samsung 970 EVO NVMe"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ssd-2_hu4d63aefa837cf31344df6906c30202bd_1146960_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado SSD Samsung 970 EVO NVMe"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ssd-2_hu4d63aefa837cf31344df6906c30202bd_1146960_200x150_fit_q90_box.jpg" width="200" height="137" alt="Desempaquetado SSD Samsung 970 EVO NVMe" title="Desempaquetado SSD Samsung 970 EVO NVMe"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ssd-3_hu0ecbabc551f6b7092faa0f194a3fa617_656353_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado SSD Samsung 970 EVO NVMe"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ssd-3_hu0ecbabc551f6b7092faa0f194a3fa617_656353_200x150_fit_q90_box.jpg" width="142" height="150" alt="Desempaquetado SSD Samsung 970 EVO NVMe" title="Desempaquetado SSD Samsung 970 EVO NVMe"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ssd-4_hu2b1b732df8fbc3831c9c437676405674_673534_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado SSD Samsung 970 EVO NVMe"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/desempaquetado-ssd-4_hu2b1b732df8fbc3831c9c437676405674_673534_200x150_fit_q90_box.jpg" width="195" height="150" alt="Desempaquetado SSD Samsung 970 EVO NVMe" title="Desempaquetado SSD Samsung 970 EVO NVMe"  class="lozad "></a></p>
<figcaption>Desempaquetado SSD Samsung 970 EVO NVMe</figcaption>
</figure>
</div>
<h3 id="montaje-de-memoria-y-ssd">Montaje de memoria y SSD</h3>
<p>Montar la memoria y el SSD en el NUC es sencillo. Para acceder al interior del NUC hay que quitar los cuatro tornillos de la tapa inferior que da acceso a los <em>slots</em> de memoria y el conector M.2, estos tornillos tienen unos topes de modo que no se puede quitarlos completamente tampoco se perderán.</p>
<p>La memoria se coloca en el <em>slot</em> con cierta inclinación unos 30 grados y posteriormente se empuja hacia abajo con la precaución antes de tocar el módulo desconectar el NUC de la fuente de alimentación y descargar la electricidad estática tocando algo de metal que esté conectado a tierra. No es necesario hacer mucha fuerza ni hace falta forzarlo, como los <em>slots</em> están uno encima del otro primero se coloca el módulo que queda abajo. Aunque no es necesario hacer mucha fuerza me ha dado la sensación de que hay que hacer más de la que debería ser necesaria.</p>
<p>El SSD se coloca de forma similar, con cierta inclinación al presentar el SSD en el conector y empujando hacia los lados alternativamente hasta que quede bien insertado en el conector sin hacer mucha fuerza, finalmente se empuja hacia abajo y con un tornillo situado al final del <em>stick</em> fijado en su posición final para que no se mueva.</p>
<p>Una vez colocados ambos elementos se vuelve a colocar la tapa inferior que hace de base en el NUC y ya está listo para el primer encendido para instalarle el sistema operativo o entrar en la BIOS con las tecla F2, F10 para seleccionar la unidad de inicio y F7 para realizar una actualización del firmware y BIOS.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/montaje-nuc-1_hu40e6338178f7cb5dbecc00ce6a4e29d0_1066643_2560x1440_fit_q90_box.jpg" data-gallery="" title="Montaje de memoria y SSD M.2"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/montaje-nuc-1_hu40e6338178f7cb5dbecc00ce6a4e29d0_1066643_200x150_fit_q90_box.jpg" width="152" height="150" alt="Montaje de memoria y SSD M.2" title="Montaje de memoria y SSD M.2"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/montaje-nuc-2_huc8526ad3fe482637a2468b56c14f7f46_947147_2560x1440_fit_q90_box.jpg" data-gallery="" title="Montaje de memoria y SSD M.2"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/montaje-nuc-2_huc8526ad3fe482637a2468b56c14f7f46_947147_200x150_fit_q90_box.jpg" width="200" height="110" alt="Montaje de memoria y SSD M.2" title="Montaje de memoria y SSD M.2"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/montaje-nuc-3_huf132094b176828cac812cefe3b7e265d_718814_2560x1440_fit_q90_box.jpg" data-gallery="" title="Montaje de memoria y SSD M.2"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/montaje-nuc-3_huf132094b176828cac812cefe3b7e265d_718814_200x150_fit_q90_box.jpg" width="156" height="150" alt="Montaje de memoria y SSD M.2" title="Montaje de memoria y SSD M.2"  class="lozad "></a></p>
<figcaption>Montaje de memoria y SSD M.2</figcaption>
</figure>
</div>
<p>El ventilador está en la parte superior del NUC, para acceder a él hay que desmontar la placa base con el objetivo de limpiar el polvo que se le acumule para que su capacidad de refrigeración sea eficiente. En el momento que funcione más rápidamente de lo normal en tareas que no requiere demasiada computación hay que hacerle una limpieza y al disipador.</p>
<ul>
<li><a href="https://www.ifixit.com/Guide/Intel&#43;NUC5i7RYH&#43;Disassembly/98011">Desmontaje de un Intel NUC</a></li>
</ul>
<h3 id="análisis">Análisis</h3>
<p>El NUC es realmente pequeño con sus 11x11cm ocupa muy poco espacio, además la versión <em>slim</em> solo tiene 3,6 cm de altura. Para instalar el sistema operativo, en mi caso la distribución Arch Linux de GNU/Linux he tenido que deshabilitar el <em>Secure Boot</em> desde la BIOS a la que se accede pulsando la tecla F2 en el momento que se inicia el sistema, con la tecla F10 se puede elegir la unidad de inicio que será una memoria USB formateada con el medio de instalación, la tecla F7 sirve para instalar actualizaciones del firmware y BIOS cuando Intel los publica, el nuevo firmware se ha de guardar en una memoria USB formateada en FAT32. La BIOS es gráfica y se puede manejar con ratón con opciones que se muestran en las capturas. Por el contrario la selección de unidad de inicio y actualización del firmware son basadas en texto.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios1_hu75d7b2e83d173ea51f75f124d2be8d59_103850_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios1_hu75d7b2e83d173ea51f75f124d2be8d59_103850_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios2_hu75d7b2e83d173ea51f75f124d2be8d59_72014_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios2_hu75d7b2e83d173ea51f75f124d2be8d59_72014_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios3_hu75d7b2e83d173ea51f75f124d2be8d59_83480_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios3_hu75d7b2e83d173ea51f75f124d2be8d59_83480_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios4_hu75d7b2e83d173ea51f75f124d2be8d59_106848_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios4_hu75d7b2e83d173ea51f75f124d2be8d59_106848_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios5_hu75d7b2e83d173ea51f75f124d2be8d59_70887_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios5_hu75d7b2e83d173ea51f75f124d2be8d59_70887_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios6_hu75d7b2e83d173ea51f75f124d2be8d59_80239_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios6_hu75d7b2e83d173ea51f75f124d2be8d59_80239_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios7_hu75d7b2e83d173ea51f75f124d2be8d59_85335_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios7_hu75d7b2e83d173ea51f75f124d2be8d59_85335_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios8_hu75d7b2e83d173ea51f75f124d2be8d59_85354_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios8_hu75d7b2e83d173ea51f75f124d2be8d59_85354_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios9_hu75d7b2e83d173ea51f75f124d2be8d59_95405_2560x1440_fit_box_3.png" data-gallery="" title="BIOS"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/nucblog-nuc8i5_bios9_hu75d7b2e83d173ea51f75f124d2be8d59_95405_200x150_fit_box_3.png" width="200" height="150" alt="BIOS" title="BIOS"  class="lozad "></a></p>
<figcaption>BIOS <br>Fuente: nucblog.net</figcaption>
</figure>
</div>
<p>Usando el <a href="https://picodotdev.github.io/blog-bitix/2017/01/script-para-instalar-arch-linux-facil-rapido-desatendido-automatizado-y-personalizable/"><em>script</em> para instalar Arch Linux de forma automatizada, desatendida y personalizable</a> conseguí instalarlo a la primera sin nada grave que no halla podido resolver. En GNU/Linux todo el hardware ha sido reconocido correctamente sin necesidad de instalar controladores adicionales. Desde la WIFI, Bluetooth, Thunderbolt, el SSD NVMe, puertos USB, tarjeta gráfica, salida HDMI y por supuesto los 32GiB de memoria. El monitor BenQ con su resolución QHD también ha sido reconocido correctamente también en la instalación. Aún tengo que probarlo más pero tengo la sensación de que el texto está mejor definido en GNOME que en macOS. Lo anterior puede ser una percepción pero por otro lado me he dado cuenta es que en macOS sacando el audio por el cable HDMI no se puede controlar el volumen ni silenciarlo, en Arch Linux con GNOME si se puede controlar el volumen del sonido cuando se emite por el cable HDMI también usar las teclas para silenciarlo.</p>
<p>Comparado con el anterior portátil Sony que tenía el rendimiento se nota algo mejor por el SSD NVMe con el que las aplicaciones se inician más rápido, la memoria DDR4 más veloz y mejor CPU además de ser con 4 núcleos. Aunque el disco es NVMe y ofrece más ancho de banda que SATA y es más rápido se nota algo pero la diferencia no es tan apreciable como pasar de disco mecánico a SSD. En tareas ofimáticas y de navegación el ventilador se enciende a ratos y estando en silencio se oye ligeramente pero no es molesto, la temperatura de la CPU se mantiene entre 30º y 40º encendiéndose el ventilador de forma ligera. En un juego como Diablo 3 la temperatura de la CPU sube y se mantienen en 75º pero al tacto no parece que coja mucho calor, con el ventilador funcionando para mantener la temperatura tampoco hace mucho ruido.</p>
<p>Me están entrando dudas de si mejor hubiese optado por la versión BEH (<em>tall</em>) con bahía para disco SATA de 2.5&quot; en vez de usar una tarjeta SDXC para tener más espacio de almacenamiento, un SSD y una SDXC tienen prácticamente el mismo precio por GB pero el disco SATA es más rápido, aunque es posible que en un futuro los SATA vayan desapareciendo por su limitación de transferencia.</p>
<p>Aún tengo que probarlo más pero estos NUCs se ajustan perfectamente a lo que finalmente estaba buscando en un futuro espero que AMD desarrolle un producto similar. Para tareas ofimáticas y de navegación por internet es más que suficiente, los ordenadores ATX e ITX quedan para los que quieren un rendimiento máximo o quieren jugar a las últimas novedades en juegos con grandes detalles y a altas resoluciones.</p>
<h3 id="alternativas-a-los-intel-nuc">Alternativas a los Intel NUC</h3>
<h4 id="apple-mac-mini">Apple Mac mini</h4>
<p>Un equipo equivalente a los NUC son los <a href="https://www.apple.com/es/mac-mini/">Apple Mac mini</a>. Después de unos años Apple los ha renovado como unos procesadores más recientes, más cantidad de memoria y SSD instalable. Pero a unos precios muy exagerados, tanto que el Mac mini con una configuración similar a la de este artículo del NUC saldría por 2100 €, bastante más del doble. Salvo que uno quiera macOS sí o sí y uno esté muy obcecado en querer Apple no es una opción en mi opinión acertada. Paro bueno esto pasa con cualquier producto de Apple no solo es específico de Mac mini aunque como se aprecia es un ejemplo claro y sangrante al compararlo. Por si fuera poco el procesador no soporta HyperThreading o SMT con lo que son 4 núcleos y 4 hilos y la gráfica es una UHD 630 la mitad de potente que la Iris Graphics 655.</p>
<p>Por otra parte al comparar el monitor entre usar una Mac Book Retina de 13&quot; y el NUC me he dado cuenta de dos cosas. Una que al usar el monitor externo BenQ PD2700Q con resolución QHD me da la sensación de que el texto se ve mejor al usarlo con el NUC que con el Mac, esto puede ser una sensación pero la segunda cosa de la que me he dado cuenta que no admite interpretación es que cuando se saca el audio junto con el vídeo por el cable HDMI al monitor y de este el audio se conecta a unos altavoces por el jack 3.5mm en macOS el control de volumen de audio queda desactivado de modo que si no tienes unos altavoces con control de volumen propio es muy incómodo usar los botones del monitor para regularlo, en GNOME se puede controlar el volumen desde el entorno de escritorio que en una configuración ordenador conectado a un monitor externo es lo que un usuario espera y lo más cómodo.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/mac-mini-1_huef0f34000e223214e5dcbf1a83ac568b_74241_2560x1440_fit_q90_box.jpg" data-gallery="" title="Mac mini (2018)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/mac-mini-1_huef0f34000e223214e5dcbf1a83ac568b_74241_200x150_fit_q90_box.jpg" width="200" height="75" alt="Mac mini (2018)" title="Mac mini (2018)"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/mac-mini-2_huec1ead7cb1055f60a3755a038f296985_19905_2560x1440_fit_q90_box.jpg" data-gallery="" title="Mac mini (2018)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/mac-mini-2_huec1ead7cb1055f60a3755a038f296985_19905_200x150_fit_q90_box.jpg" width="200" height="110" alt="Mac mini (2018)" title="Mac mini (2018)"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/mac-mini-3_hu0cf64836f4a44556f3e22313bf9349ce_33690_2560x1440_fit_q90_box.jpg" data-gallery="" title="Mac mini (2018)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/mac-mini-3_hu0cf64836f4a44556f3e22313bf9349ce_33690_200x150_fit_q90_box.jpg" width="200" height="43" alt="Mac mini (2018)" title="Mac mini (2018)"  class="lozad "></a></p>
<figcaption>Mac mini (2018)</figcaption>
</figure>
</div>
<p>En cualquier caso no entraba dentro de mis planes un Mac mini ni aunque tuviese el mismo precio del NUC ya que prefiero GNU/Linux como detallo en <a href="https://picodotdev.github.io/blog-bitix/2018/03/tu-con-mac-yo-con-mi-gnu-linux/">Tú con tu Mac, yo con mi GNU/Linux</a>.</p>
<table class="table">
    <thead class="table-light">
        <tr class="thead-light">
            <th>Componente</th>
            <th>Apple Mac mini</th>
            <th>Intel NUC Bean Canyon</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Ordenador</td>
            <td style="text-align: right;">900 €</td>
            <td style="text-align: right;">300 € (i3), 400 € (i5), 500 € (i7)</td>
        </tr>
        <tr>
            <td>Memoria 32 GiB</td>
            <td style="text-align: right;">+720 €</td>
            <td style="text-align: right;">+300 €</td>
        </tr>
        <tr>
            <td>SSD 500GB</td>
            <td style="text-align: right;">+480 €</td>
            <td style="text-align: right;">+120 €</td>
        </tr>
        <tr>
            <td>Total</td>
            <td style="text-align: right;">2100 €</td>
            <td style="text-align: right;">820 € (i5)</td>
        </tr>
    </tbody>
</table>
<h4 id="slimbook-one">Slimbook One</h4>
<p>También hubiese podido optar por un <a href="https://slimbook.es/one">Slimbook One</a> per no me convenció porque solo tienen un <em>slot</em> de memoria, admite hasta 32GB pero aún no hay módulos de esa cantidad si no es en <em>kit</em>, lo que en la práctica limita su memoria a 16GB. La tarjeta gráfica que tienen es una UHD 630 como comentaba la mitad de potente en teoría que la Iris Graphics 655. El diseño que tiene no es muy atractivo y no tiene tarjeta microSD como una forma de ampliarle el almacenamiento. El ONE sin descuento parte de 480 € más caro que los 400 € del Intel NUC.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/slimbook-one-1_hu27ec5ad8d7aea57e1e15902b7b1cee0f_44359_2560x1440_fit_q90_box.jpg" data-gallery="" title="Slimbook ONE (v2)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/slimbook-one-1_hu27ec5ad8d7aea57e1e15902b7b1cee0f_44359_200x150_fit_q90_box.jpg" width="200" height="150" alt="Slimbook ONE (v2)" title="Slimbook ONE (v2)"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/slimbook-one-2_hub34aa723a36bf8bce0805106d93d2711_50869_2560x1440_fit_q90_box.jpg" data-gallery="" title="Slimbook ONE (v2)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/slimbook-one-2_hub34aa723a36bf8bce0805106d93d2711_50869_200x150_fit_q90_box.jpg" width="200" height="129" alt="Slimbook ONE (v2)" title="Slimbook ONE (v2)"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/slimbook-one-3_hu1e52f46d6a88f605d064356c99460447_48200_2560x1440_fit_q90_box.jpg" data-gallery="" title="Slimbook ONE (v2)"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/slimbook-one-3_hu1e52f46d6a88f605d064356c99460447_48200_200x150_fit_q90_box.jpg" width="200" height="129" alt="Slimbook ONE (v2)" title="Slimbook ONE (v2)"  class="lozad "></a></p>
<figcaption>Slimbook ONE (v2)</figcaption>
</figure>
</div>
<h4 id="minis-forum">Minis Forum</h4>
<p>Después de un tiempo y a medida que AMD lanzando modelos de procesadores con bajo consumo y el buen rendimiento basados en la arquitectura Ryzen han aparecido algunos modelos similares en formato a los Intel NUC pero basados en los procesadores de AMD. Uno de ellos es el <a href="https://amzn.to/3kQkg4Z">Minis Forum UM300</a> que ya equipado con memoria y almacenamiento SSD tiene un precio muy competitivo.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B094VC6C9T&amp;linkId=8a1e1d77205066e350a8ea94d8a2794a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08XZQKCSY&amp;linkId=c6d67a1d28c20e1cf52fd620c520724b" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0958XZXND&amp;linkId=c372c09d811de14ea2f946892b41ed0b" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08NBK6G74&amp;linkId=a5478d556ca3e8609e9f41ecd23d87bd" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="switch-hdmi-y-cables-monitor-con-el-ordenador-y-consola">Switch HDMI y cables, monitor con el ordenador y consola</h3>
<p>Si el monitor es compartido tanto por el ordenador como por <a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/">una consola como la PlayStation 4 como muestro en su desempaquetado</a> es necesario un adaptador o <a href="https://amzn.to/3kxT2Cx"><em>switch</em> HDMI de múltiples entradas</a> y una salida para usar ambos sin necesidad de conectar y desconectar cables, no son caros y ofrecen mucha comodidad, con un botón se alterna entre la entrada del ordenador y la consola, además detecta la entrada pdesey se cambia automáticamente.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08QCYXNPC&amp;linkId=ecbc49eaab7716ebc63e4e7c7b7b91b6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00SX0QKUS&amp;linkId=f2015c3d24868b088b801dc03f6638de" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07RY2X9LF&amp;linkId=f5c9c155adf728e8d3217ab7e723d14c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07RY2X9LF&amp;linkId=f5c9c155adf728e8d3217ab7e723d14c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01J8S6X2I&amp;linkId=87c2e46fa9d13984b35d29ce7d5761ae" title="Amazon" class="lozad"></iframe>
</div>
<p>Otro accesorio de utilidad es un <a href="https://amzn.to/36SUMMN">teclado pequeño con soporte dual para bluetooth y comunicación inalámbrica 2.4 Ghz</a> que es compatible tanto con el ordenador como una <em>smart tv</em>, teléfono Android o una PlayStation 4. En mi caso un uso sería tener el teclado pequeño con soporte de ratón para ver películas desde la cama y poder controlar el PC a distancia, incluye teclas multimedia y una rueda específica para hacer desplazamiento vertical muy cómoda al visualizar páginas web, además es retroiluminado perfecto para utilizarlo a oscuras si se está viendo una película. Funciona con una batería recargable.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07RQBRRR7&amp;linkId=ac037d001d51556cbf14f680b30146c2" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="nuevo-escritorio">Nuevo escritorio</h3>
<p>Este es la disposición que tenía antes con el Sony VAIO y la que tengo ahora con el NUC, la pantalla externa una <a href="https://amzn.to/2Qjs7MT">BenQ PD2700Q</a> de 27&quot; y resolución QHD (2560x1440), teclado y ratón inalámbrico <a href="https://amzn.to/2TKzmMT">V7 CKW200</a> a los que añadí un ratón <a href="https://amzn.to/2S9Bex2">Logitech M90</a> con cable básico de tres botones ya que el ratón inalámbrico en algunos momentos funciona con problemas, el teclado sin embargo funciona perfectamente, y <a href="https://amzn.to/2P5jocE">alfombrilla</a> para ellos junto con un <a href="https://amzn.to/2BwubZJ">concentrador USB 2.0 de Amazon Basics</a>. He ganado mucho espacio en la mesa si en algún momento quiero trabajar en ella para otras cosas, la pantalla la tengo ahora al final de la mesa y el NUC me ocupa menos espacio que el portátil además de que puedo colocarlo en cualquier sitio.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01K2210GS&amp;linkId=757f02716b01871e45865d4a9f1b75c6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0758DMHZG&amp;linkId=49e0edf2268751aed306f89bf5a657f6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B003D8ZT0C&amp;linkId=fbe6dbb7cf4d1a724de6c75d49946d10" title="Amazon" class="lozad"></iframe>
</div>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01KC4DR1C&amp;linkId=0aaffd200da53423d2078de9209797e6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00E0NHMNQ&amp;linkId=15cb29717d9441d0d13f0720d9731a0d" title="Amazon" class="lozad"></iframe>
</div>
<p>He tenido que esperar muchos meses a tener esta configuración, entre elegir que quería y aguantar a que lo que quería saliese al mercado. No se si la siguiente vez esperaré tanto ya que en algunos momento se me ha hecho un tanto difícil sobre todo los fines de semana y algunos días de vacaciones. Pero bueno ya lo tengo y ahora solo me queda sacarle provecho, no tener GNU/Linux durante un tiempo ha hecho que no haya escrito artículos sobre él, en cuanto lo pruebe más a fondo muy posiblemente escriba algunos artículos, empezando por esos que comento de como poder jugar a juegos con Wine, PlayOnLinux/Phoenicis, Winepak además de Steam y GOG en algún momento más tarde.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/gnome_hue8507550af9db664ac253fb21b8e521a_3695244_2560x1440_fit_box_3.png" data-gallery="" title="Intel NUC8i5BEK con Arch Linux y GNOME"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/gnome_hue8507550af9db664ac253fb21b8e521a_3695244_600x450_fit_box_3.png" width="600" height="338" alt="Intel NUC8i5BEK con Arch Linux y GNOME" title="Intel NUC8i5BEK con Arch Linux y GNOME"  class="lozad "></a></p>
<figcaption>Intel NUC8i5BEK con Arch Linux y GNOME</figcaption>
</figure>
</div>
<p>Este es <a href="https://picodotdev.github.io/blog-bitix/2016/12/la-fabrica-de-blog-bitix/">el escritorio que tenía antes</a>, con mucho espacio desaprovechado por la ubicación del portátil.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/escritorio-portatil-1_hu041fcc6ef545ce8d3cba613e5d2f52aa_183642_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escritorio con portátil"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/escritorio-portatil-1_hu041fcc6ef545ce8d3cba613e5d2f52aa_183642_200x150_fit_q90_box.jpg" width="200" height="150" alt="Escritorio con portátil" title="Escritorio con portátil"  class="lozad "></a></p>
<figcaption>Escritorio con portátil</figcaption>
</figure>
</div>
<p>Y el que tengo ahora.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/escritorio-nuc-1_hu5e7a38d191dc723451c2181ca879e4cb_429222_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escritorio con NUC"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/escritorio-nuc-1_hu5e7a38d191dc723451c2181ca879e4cb_429222_200x150_fit_q90_box.jpg" width="200" height="150" alt="Escritorio con NUC" title="Escritorio con NUC"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/escritorio-nuc-2_hu0db3370bc7d91c23d0318387d2b43941_856697_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escritorio con NUC"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/escritorio-nuc-2_hu0db3370bc7d91c23d0318387d2b43941_856697_200x150_fit_q90_box.jpg" width="187" height="150" alt="Escritorio con NUC" title="Escritorio con NUC"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/escritorio-nuc-3_hu71b88d496e26ef863751e7898b00b5e6_498351_2560x1440_fit_q90_box.jpg" data-gallery="" title="Escritorio con NUC"><img src="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/images/escritorio-nuc-3_hu71b88d496e26ef863751e7898b00b5e6_498351_200x150_fit_q90_box.jpg" width="200" height="150" alt="Escritorio con NUC" title="Escritorio con NUC"  class="lozad "></a></p>
<figcaption>Escritorio con NUC</figcaption>
</figure>
</div>
<blockquote>
<p>Software. Hardware. Complete.</p>
</blockquote>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://downloadcenter.intel.com/">Intel Download Center</a></li>
<li><a href="https://downloadcenter.intel.com/product/98414/Mini-PCs">Intel Download Center - Intel NUC</a></li>
<li><a href="https://www.intel.es/content/www/es/es/products/docs/boards-kits/nuc/nuc8i5bek-nuc8i5beh-brief.html">Intel NUC8i5BEK/NUC8i5BEH Brief</a></li>
<li><a href="http://compatibleproducts.intel.com/ProductDetails/ExportPeripheralInfo?moduleName=Intel%C2%AE%20NUC&amp;productType=Kits&amp;productName=Intel%C2%AE%20NUC%20Kit%20NUC8i5BEK">Intel® NUC Kit NUC8i5BEK Compatibility Tool</a></li>
<li><a href="https://www.intel.com/content/dam/support/us/en/documents/mini-pcs/NUC8i3BE_NUC8i5BE_NUC8i7BE_TechProdSpec.pdf">Intel® NUC Products NUC8i3BE/NUC8i5BE/NUC8i7BE Technical Product Specification </a></li>
<li><a href="https://communities.intel.com/community/tech/nuc">Intel® NUC Support Community</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/11/flatpak-distribucion-e-instalacion-de-programas-de-escritorio-en-las-distribuciones-gnu-linux/</id>
        <title>Flatpak, distribución e instalación de programas de escritorio en las distribuciones GNU/Linux</title>
        <updated>2018-11-23T17:30:00+01:00</updated>
        <published>2018-11-23T17:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/11/flatpak-distribucion-e-instalacion-de-programas-de-escritorio-en-las-distribuciones-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/flatpak.svg" width="300" height="225" alt="Flatpak" title="Flatpak"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Las distribuciones GNU/Linux son la recolección de cantidad de programas de software libre, cientos o miles, con una garantía de que funcionan correctamente en esa distribución y que facilita a los usuarios una fácil utilización. Hay múltiples distribuciones GNU/Linux con diferentes intereses ya sean generalistas como <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://fedoraproject.org/">Fedora</a>, <a href="https://www.debian.org/">Debian</a>, <a href="https://www.archlinux.org/">Arch Linux</a>, <a href="https://elementary.io/es/">elementary</a>, <a href="https://www.opensuse.org/">openSUSE</a> entre las más populares y otras especializadas en propósitos más específicos para servidor con <a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux">RHEL</a>, <a href="https://www.centos.org/">CentOS</a>, <a href="https://www.zentyal.org/">Zentyal</a> o <a href="https://www.alpinelinux.org/">Alpine</a>, para equipos con pocos recursos como <a href="http://puppylinux.com/">Puppy</a> o <a href="http://www.tinycorelinux.net/">Tiny Core</a>, seguridad y privacidad como <a href="https://tails.boum.org/">Tails</a> o sin componentes privativos como <a href="https://trisquel.info/es">Trisquel</a>.</p>
<p>Cada una de estas distribuciones es creada por personas que se encargan de mantener la distribución cogiendo el código fuente que los programadores del software crean y publican, compilándolo para crear un binario o paquete utilizable e instalable en esa distribución y comprobar que funciona correctamente sin conflictos con otros paquetes. Los mantenedores se encargan de publicar nuevas versiones de paquetes con cada nueva versión de cada programas, de reportar errores y de incluso aplicar parches de seguridad cuando se descubren.</p>
<p>Esta tarea que hacen los mantenedores se hace por cada paquete, son miles los que contiene una distribución, Debian tiene más de 51000, y por cada distribución aunque algunas se basan en otras como Ubuntu se basa en Debian y otras se basan a su vez en Ubuntu. Esto es una ingente cantidad de tiempo de dedicación de muchas personas y replicado en gran parte en cada distribución que podrían ser empleado en otras tareas.</p>
<p>La tarea que hacen los mantenedores es útil para comprobar que los paquetes de cada distribución funcionan correctamente y en conjunto con el resto de paquetes y porque los autores originales del software no tenían una forma de distribuir su software para que funcionase correctamente en todas las distribuciones.</p>
<p><a href="https://flatpak.org/">Flatpak</a> se define como el futuro, aunque es ya un presente, de forma de distribuir aplicaciones de escritorio siendo <a href="https://www.flatpak.org/setup/">varias distribuciones GNU/Linux importantes que ya lo soportan</a>. Las ventajas que proporciona son:</p>
<ul>
<li>Los paquetes de flatpak son utilizables en cualquier distribución.</li>
<li>Los autores del software pueden crear el paquete sin depender de que los mantenedores lo incluyan en una distribución para que sea utilizable por sus usuarios.</li>
<li>Una nueva versión está disponible inmediatamente para todas las distribuciones que será más una buena mejora para distribuciones con ciclos de publicación más lentos.</li>
<li>Proporciona entornos consistentes.</li>
<li>Las aplicaciones son utilizables incluso en nuevas versiones de una distribución.</li>
<li>Se pueden instalar múltiples versiones de una misma aplicación.</li>
<li>Hay menos riesgo de que una actualización de un programa provoque que el sistema quede inconsistente pudiendo incluso a no llegar a iniciarse correctamente.</li>
<li>Se mejora la seguridad el ejecutarse las aplicaciones de forma aislada en una caja de arena que limita las acciones que puede realizar. Los permisos como almacenamiento, red y dispositivos se han de conceder de forma explícita.</li>
<li>Cualquiera puede publicar su aplicación y ser utilizable por los usuarios sin que necesite ganar popularidad para que los mantenedores la incluyan en la distribución.</li>
<li>Las aplicaciones Flatpak se puede instalar a nivel de sistema (por defecto) y a nivel de usuario.</li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/jDVCITRWGgs" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>La <a href="https://www.flatpak.org/setup/">instalación de Flatpak</a> y <a href="http://docs.flatpak.org/en/latest/using-flatpak.html">guía de uso</a> no es más complicado que utilizar el propio gestor de paquetes de cada distribución. Los desarrolladores tienen su <a href="http://docs.flatpak.org/en/latest/building.html">guía para crear paquetes</a> y <a href="http://docs.flatpak.org/en/latest/publishing.html">publicar</a> en Flatpak.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Gestionar repositorios de Flatpak</span>&#10;</span></span><span class="line"><span class="cl">$ flatpak remotes&#10;</span></span><span class="line"><span class="cl">$ flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo&#10;</span></span><span class="line"><span class="cl">$ flatpak remote-delete flathub&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># Buscar programas</span>&#10;</span></span><span class="line"><span class="cl">$ flatpak search <span class="o">[</span>programas<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># Instalar un paquete, en este caso GIMP</span>&#10;</span></span><span class="line"><span class="cl">$ flatpak install flathub org.gimp.GIMP&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># Ejecutar un programa instalado como Flatpak (aunque se integran en el sistema </span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># añadiendo un icono en el lanzador de aplicaciones)</span>&#10;</span></span><span class="line"><span class="cl">$ flatpak run org.gimp.GIMP&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># Actualizar los programas</span>&#10;</span></span><span class="line"><span class="cl">$ flatpak update&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># Listar los programas instalados y runtimes, o solo aplicaciones</span>&#10;</span></span><span class="line"><span class="cl">$ flatpak list&#10;</span></span><span class="line"><span class="cl">$ flatpak list --app&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># Desinstalar un programa</span>&#10;</span></span><span class="line"><span class="cl">$ flatpak uninstall org.gimp.GIMP</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>flatpak.sh</span>
    </div>
</div>
<p><a href="https://flathub.org/home">Flathub</a> es un repositorio de las <a href="https://flathub.org/apps">aplicaciones Flatpak</a> que en el ejemplo se añade con el comando con <em>flatpak remote-add</em>. Las que hay se pueden <a href="https://flathub.org/apps/category/All">navegar por categoría</a> y son algunas de las más populares y que es probable querer instalar en cualquier sistema. A medida que pase el tiempo habrá más disponibles.</p>
<ul>
<li><a href="https://flathub.org/apps/category/AudioVideo">Audio y vídeo</a>: Audacity, GNOME Music, HandBrake, OpenShot, Pitivi, Rhythmbox, VLC, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Development">Desarrollo</a>: Atom, gitg, Meld, Backets, Sequeler, SmartGit, Sublime Text, Visual Studio Code, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Education">Educación</a>: GCompris, GeoGebra, GNU Octave, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Game">Juegos</a>: 0 A.D, Battle for Wesnoth, Games, gbrainy, GNOME Chess, OpenTTD, ScummVM, Shattered Pixel Dungeon, Steam, SuperTuxKart, Teeworlds, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Graphics">Gráficos y fotografía</a>: Blender, Colo , GNU Image Manipulation Program (GIMP), Image Optimizer, Inkscape, Krita, Scribus, Synfig Studio, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Network">Comunicación y noticias</a>: Dropbox, FeedReader, FileZilla, Geary, JDownloader, Pidgin, Polari, Remmina, Signal, Skype, Slack, Telegram, Thunderbird, Transmission, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Office">Productividad</a>: Calendar, Calibre, Contacts, Evolution, LibreOffice, Thunderbird, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Science">Ciencia</a>: Elements, Genius, Stellarium, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Settings">Configuración</a>: RazerGenie, &hellip;</li>
<li><a href="https://flathub.org/apps/category/Utility">Utilidades</a>: Agenda, FreeFileSync, KeePassXC, Nextcloud, Vim, &hellip;</li>
</ul>
<p>Con las ventajas de Flatpak tanto para usuarios, desarrolladores y mantenedores y a medida que gane más popularidad los desarrolladores tendrán más motivación por publicar sus aplicaciones en paquete Flatpak y en alguno de sus repositorios.</p>
<p>En la página de <a href="https://www.flatpak.org/faq/">preguntas frecuentes</a> está el curioso origen del nombre de Flatpak en relación con una de las innovaciones de paquetes planos de IKEA. Es una tecnología acoplada a Linux ya que utiliza varias de las tecnologías propias de Linux y por tanto no está para las <a href="https://es.wikipedia.org/wiki/Berkeley_Software_Distribution">distribuciones BSD</a> como ocurre en otros casos. El entorno de desarrollo <a href="https://wiki.gnome.org/Apps/Builder">GNOME Builder</a> soporta la programación para Flatpak.</p>
<p>Flatpak está más apoyada por <a href="https://www.redhat.com/es">Red Hat</a>, <a href="https://www.canonical.com/">Canonical</a> tiene su tecnología similar con <a href="https://snapcraft.io/">Snapcraft</a>. Ha ocurrido igual en anteriores casos con <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a> y <a href="https://es.wikipedia.org/wiki/Upstart">Upstart</a> o <a href="https://es.wikipedia.org/wiki/Wayland_%28protocolo%29">Wayland</a> y <a href="https://en.wikipedia.org/wiki/Mir_%28software%29">Mir</a> donde las tecnologías más apoyadas por Red Hat han sido las que mayor éxito han tenido y han prevalecido. Si nada cambia en <a href="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/">Red Hat al ser adquirida por parte de IBM</a> puede que se produzca el mismo resultado no tanto por que las tecnologías de Red Hat sean mejores sino porque tiene más peso en la comunidad que Canonical. Por el momento la <a href="https://kamikazow.wordpress.com/2018/06/08/adoption-of-flatpak-vs-snap-2018-edition/">adopción para snap contra la de Flatpak</a> no produce buenos augurios para la primera donde solo en Ubuntu es buena como no podría ser de otra forma.</p>
<p>Si usas Arch Linux e instalas el entorno de escritorio GNOME con los paquetes <em>gnome</em> y <em>gnome-extra</em> ya tendrás instalado Flatpak ya que se instala como dependencia. Se puede instalar directamente con el gestor de paquetes <em>pacman</em> con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S flatpak</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.sh</span>
    </div>
</div>
<p>Las distribuciones tal y como las conocemos van a cambiar mucho, entre esos cambios están una nueva forma de sistema base inmutable y actualizaciones con <a href="https://en.wikipedia.org/wiki/OSTree">OSTree</a> o sistema de archivos con <a href="https://en.wikipedia.org/wiki/OpenZFS">OpenZFS</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/sobre-el-futuro-de-las-distribuciones-gnu-linux-y-los-sistemas-operativos/">Sobre el futuro de las distribuciones GNU/Linux y los sistemas operativos</a></li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.reddit.com/r/linux/comments/60qdtw/flatpak_vs_snap_which_format_is_better_a_rather/">Flatpak vs Snap - Which format is &ldquo;Better&rdquo;? A rather excellent in-depth comparison</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Flatpak">Flatpak Arch Linux Wiki</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/11/el-agotamiento-de-direcciones-ipv4-y-el-protocolo-de-internet-ipv6/</id>
        <title>El agotamiento de direcciones IPv4 y el protocolo de internet IPv6</title>
        <updated>2018-11-16T19:00:00+01:00</updated>
        <published>2018-11-16T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/11/el-agotamiento-de-direcciones-ipv4-y-el-protocolo-de-internet-ipv6/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las direcciones IP de IPv4 que identifican a las computadoras de forma unequívoca para comunicarse entre si son limitadas y ya se han agotado. Aún siendo casi 4300 millones con el auge de internet en la última década y la que se espera en los próximos años con los dispositivos móviles y los elementos conectados del internet de las cosas la presión sobre el número de direcciones IP será aún mayor. Hasta ahora varias medidas paliativas han permitido mitigar la presión y extender la disponibilidad de direcciones IP. Uno de los principales motivos del desarrollo del protocolo IPv6 es aumentar en varios órdenes de magnitud el número de las direcciones IP disponibles, siendo en este protocolo direcciones de 128 bits en vez de 32 como IPv4. Sin embargo, hay varios motivos por los que aún IPv6 no se está usando ya de forma masiva.</strong></p>]]>
        <![CDATA[<p>El protocolo mediante el cual las computadoras intercambian datos mayoritariamente es el <a href="https://en.wikipedia.org/wiki/IPv4">protocolo IPv4</a>. Este protocolo identifica a cada máquina conectada a internet mediante una dirección IP que es un número de 32 bits normalmente escrito en cuatro grupos decimales para ser más fácilmente recordados por los humanos, por ejemplo, <em>192.169.1.56</em>. La dirección IP pública que tenemos asignada la podemos obtener de páginas como <a href="https://www.cual-es-mi-ip.net/">cual-es-mi-ip</a>. Un número binario de 32 bits da un máximo teórico de 4.294.967.296 posibles direcciones IP. En la época en que fué desarrollado las primeras redes de computadoras este número parecía adecuado y suficiente, sin embargo, con el éxito de internet y el crecimiento del número de dispositivos conectados el número de direcciones IP libres ya se ha agotado.</p>
<blockquote>
<p>11111111.11111111.11111111.11111111<br>
255.255.255.255<br>
127.0.0.1 (dirección <em>loopback</em>)</p>
</blockquote>
<p>El problema de agotamiento de direcciones IPv4 no es nuevo y ya desde hace alguna década se estaba advirtiendo e implementando medidas en el protocolo para retrasar durante algún tiempo el llegar a agotar las direcciones. Algunas de estas medidas son <a href="https://es.wikipedia.org/wiki/Classless_Inter-Domain_Routing">CIDR</a> y <a href="https://en.wikipedia.org/wiki/Network_address_translation">NAT</a>. CIDR permite aprovechar mejor o no desperdiciar tantas direcciones IP en los grupos de direcciones estableciendo una máscara para determinar cuál es la parte de dirección de red y cual es la dirección del host dentro de esa red, con CIDR las direcciones IP se identifican con el siguiente formato <em>255.255.255.255 /8</em> donde el último número determina que número de bits corresponden a la dirección de red y que parte a los <em>hosts</em> de esa red, en este caso 24 bits corresponden a la red y 8 bits a identificar al <em>host</em> hasta llegar a 32 bits. NAT permite a los dispositivos de una red compartir la misma dirección IP al conectarse a otras redes o internet, de esta forma en vez de requerirse una dirección pública por cada dispositivo de la red solo es necesaria una para todos los equipos, en los hogares es el enrutador o <em>router</em> el dispositivo el que hace NAT y el que tiene la dirección IP pública asignada. NAT no está exento de inconvenientes ya que los equipos externos a una red no pueden contactar directamente a los equipos internos de una red en la que se hace NAT, para ello hay que usar activación o reenvío de puertos que los <em>routers</em> ofrecen en su panel de administración. Incluso algunos proveedores de internet están implementado un NAT a nivel de proveedor conocido como <a href="https://es.wikipedia.org/wiki/Carrier_Grade_NAT">CG-NAT</a> para usar una o unas pocas direcciones IP para todos los usuarios del proveedor. A este nivel está llegando la escasez de direcciones IP del protocolo IPv4.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/el-agotamiento-de-direcciones-ipv4-y-el-protocolo-de-internet-ipv6/images/nat_hub435a52d50437f86895b6b097ff48ca2_311929_2560x1440_fit_box_3.png" data-gallery="" title="Panel de un router para hacer NAT"><img src="https://picodotdev.github.io/blog-bitix/2018/11/el-agotamiento-de-direcciones-ipv4-y-el-protocolo-de-internet-ipv6/images/nat_hub435a52d50437f86895b6b097ff48ca2_311929_300x200_fit_box_3.png" width="177" height="200" alt="Panel de un router para hacer NAT" title="Panel de un router para hacer NAT"  class="lozad "></a></p>
<figcaption>Panel de un router para hacer NAT</figcaption>
</figure>
</div>
<p>La solución a largo plazo para la escasez de direcciones IP del protocolo IPv4 es usar una nueva versión de protocolo conocida como <a href="https://en.wikipedia.org/wiki/IPv6">IPv6</a>. En IPv6 las direcciones IP son números de 128 bits dando lugar a 2<sup>128</sup>, aproximadamente 3.4×10<sup>38</sup> o 340.282.366.920.938.463.463.374.607.431.768.211.456 combinaciones teóricas posibles, esto son unas 7.9×10<sup>28</sup> veces más direcciones IP posibles que en IPv4. Las direcciones IPv6 se escriben en ocho grupos de cuatro números hexadecimales, pudiéndose hacer una contracción omitiendo grupos de ceros contiguos con <em>::</em>. El enorme número de direcciones de IPv6 hace innecesaria el NAT y CG-NAT y los problemas que estos ocasionan. Estas son unas comparaciones:</p>
<ul>
<li>La tierra tiene 4500 millones de años, si se asignan direcciones IPv6 al ritmo de 1000 millones por segundo desde que se formó la tierra hast ahora se usado una trillonésima parte del espacio de direcciones.</li>
<li>Se puede asignar 4 trillones de direcciones por cada uno de los 510 billones de metros cuadrados de la tierra.</li>
</ul>
<blockquote>
<p>11111111:11111111:11111111:11111111:11111111:<br>
11111111:11111111:11111111:11111111:11111111:<br>
11111111:11111111:11111111:11111111:11111111:11111111<br><br>
FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF<br><br>
::1 (dirección <em>loopback</em>)</p>
</blockquote>
<p>IPv6 ha sido desarrollado hace varios lustros sin embargo su adopción está siendo tan lenta ya que los proveedores de internet y servidores de internet necesitan soportar el nuevo protocolo, los sistemas operativos y equipos de red ya hace tiempo que fueron adaptados y cualquiera que se compre actualmente ya lo soportará. Usar IPv6 puede ocasionar que algunos servidores que no soporten este protocolo aún no puedan ser accedidos. El servicio de nombres de internet ya fue adaptado a IPv6 y seguramente los servidores de los servicios de empresas importantes como <a href="https://www.google.es/">Google</a>, <a href="https://amzn.to/2flFhHA">Amazon</a>, <a href="https://www.facebook.com/">Facebook</a>, <a href="https://www.microsoft.com/">Microsoft</a> o <a href="https://www.apple.com/">Apple</a> también lo soportan.</p>
<p>Algunas otras ventajas de IPv6 sobre IPv4 son:</p>
<ul>
<li>Procesado simplificado en los enrutadores: la cabecera de los paquetes de IPv6 aunque son más grandes son más simples. Los paquetes no son fragmentados en el tránsito por los <em>routers</em> sino por el equipo emisor. Se ha eliminado el <em>checksum</em> de la cabecera que ahora se considera garantizado a nivel de capa de enlace de modo que los <em>routers</em> no deben recalcular cuando los campos de la cabecera cambian.</li>
<li>Opciones extensibles: la cabecera de los paquetes tienen una extensión de 40 octetos con opciones adicionales implementadas como extensiones. Esto posibilita extender el protocolo en el futuro sin afectar a el núcleo de la estructura del paquete.</li>
<li><em>Jumbograms</em>: IPv4 limita el tamaño de los paquetes a una carga de 65.535 (2^16−1) octetos (64 KiB). IPv6 opcionalmente puede manejar paquetes de hasta 4.294,967.295 (2^32−1) octetos (4 GiB).</li>
<li>Privacidad: ofrece mecanismos para que la dirección IP que permite a cualesquiera dos equipos comunicarse no sea usado potencialmente para el rastreo.</li>
<li>Multicast: transmitir un paquete a múltiples destinos en una única operación de envío, en IPv4 era opcional pero en IPv6 está dentro de la especificación.</li>
</ul>
<p>Algunos motivos por los que IPv6 no se ha adoptado aún son:</p>
<ul>
<li>Es necesario tiempo para implementar el estándar: IPv6 fué publicado en 1998 pero llevó tiempo implementarlo y probarlo pasando varios años hasta que fué incorporado en los equipos. Los operadores necesitan tiempo para aprender cómo trabajar con esta nueva tecnología.</li>
<li>Falta de claro beneficio: los usuarios no experimentarán una mejora de rendimiento o redes más fiables. Implementarlo requiere esfuerzo económico y humano. Por ejemplo, si hay software o hardware que no soporta IPv6 es necesario reemplazarlo.</li>
<li>Falta de incentivo: sin demanda de los usuarios y sin un beneficio claro los proveedores de software no han realizado el cambio.</li>
<li>Dependencia sobre IPv4: la transición a IPv6 es un esfuerzo distribuido en la que intervienen múltiples organizaciones. Por un tiempo IPv4 y IPv6 coexistirán. Algunos programas no soportan el nuevo protocolo.</li>
</ul>
<p>Para añadir el soporte de IPv6 en un servidor web hay que usar la siguiente dirección IP en Apache y Nginx para escuchar peticiones en todas las interfaces de red.</p>
<blockquote>
<p># Apache<br>
Listen [::]:80</p>
</blockquote>
<blockquote>
<p># Nginx<br>
listen [::]:80 default_server;</p>
</blockquote>
<p>En una máquina con <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> se puede ver la dirección IPv6 asignada a cada interfaz de red con el comando <code>ip -6 addr show</code>.</p>
<p><a href="https://docs.aws.amazon.com/es_es/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html">Amazon soporta en algunas regiones IPv6</a> con lo que si usamos este servicio de computación en la nube se puede usar el nuevo protocolo. Otros actores importantes de la nube también lo soportan como <a href="https://www.digitalocean.com/">Digital Ocean</a> (<a href="https://www.digitalocean.com/community/tutorials/how-to-enable-ipv6-for-digitalocean-droplets">1</a>) o <a href="https://www.linode.com/">Linode</a> (<a href="https://www.linode.com/docs/networking/native-ipv6-networking/">2</a>). En las entidades de registro de dominios basta con añadir un registro AAAA a las zonas DNS.</p>
<p>Los siguientes dos artículos son interesantes, hablan de la evolución de las direcciones de internet y del agotamiento de direcciones, el estado de despliegue y por qué aún no se ha adoptado de forma masiva:</p>
<ul>
<li><a href="https://blogs.igalia.com/dpino/2017/05/25/ipv4-exhaustion/">A brief history of IPv4 address space exhaustion</a></li>
<li><a href="https://blogs.igalia.com/dpino/2017/05/30/ipv6-status/">IPv6 deployment status and transition technologies</a></li>
<li><a href="https://blogs.igalia.com/dpino/2017/06/05/dive-into-lw4o6/">Dive into Lightweight 4over6</a></li>
<li><a href="http://www.magazcitum.com.mx/?p=568#.WTVf6sklFYh">¿Por qué no está ya operando IPv6 en el mundo? </a></li>
</ul>
<p>Aún queda tiempo hasta que IPv6 sea el protocolo mayoritariamente utilizado, cuanta más escasez de direcciones IPv4 haya más necesidad de migrar habrá pero para ello el soporte en los servidores, hardware y software es necesario. En algunos países el tráfico sobre IPv6 se ha doblado respecto a otros años, en otros países aún no ha sido desplegado de forma significativa. ¿Llegará un momento en que Google tenga en cuenta para el SEO aquellos sitios que soporten IPv6 como ya hace con HTTPS en vez de HTTP?</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/11/novedades-de-java-ee-8/</id>
        <title>Novedades de Java EE 8</title>
        <updated>2018-11-09T17:00:00+01:00</updated>
        <published>2018-11-09T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/11/novedades-de-java-ee-8/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java-ee.png" width="200" height="213" alt="Java EE" title="Java EE"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/">publicación de Java 9</a> en agosto de 2017 con la importante novedad de los módulos ha hecho que la publicación de Java EE 8 haya pasado desapercibida. También ha contribuido el hecho de que <a href="https://www.oracle.com/">Oracle</a> haya entregado el desarrollo de futuras nuevas especificaciones de Java EE a la <a href="https://eclipse.org">fundación Eclipse</a> con el objetivo de que sea más abierto a otras empresas, Java EE a partir de ahora bajo la fundación Eclipse se denominará <a href="https://jakarta.ee/">Jakarta EE</a>. Pasados algunos meses los servidores de aplicaciones ya están implementando las nuevas novedades de Java EE 8. Algunos de los servidores que ya soportan estas nuevas especificaciones y novedades son <a href="https://wildfly.org/">Wildfly</a>, <a href="https://www.payara.fish/">Payara</a> <a href="https://ee.kumuluz.com/">Kumuluz</a> o <a href="https://tomcat.apache.org/">Tomcat</a> 9.</p>
<p>Hay algunas novedades de Java EE 8 entre ellas:</p>
<ul>
<li>Java Servlet 4.0 API con soporte para el protocolo HTTP/2, incluido el soporte para enviar recursos desde el servidor sin que el cliente los haya pedido aún a través del método <a href="https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletRequest.html#newPushBuilder--">newPushBuilder()</a> de la clase <a href="https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletRequest.html">HttpServletRequest</a>.</li>
<li>Soporte para JSON mejorado incluyendo una nueva API de <em>binding</em>.</li>
<li>Eventos CDI asíncronos.</li>
<li>Una nueva API de seguridad simple, estandarizada y modernizada.</li>
<li>Soporte para las nuevas capacidades de Java 8 (pe. Date &amp; Time API, Streams API, mejoras en las anotaciones).</li>
</ul>
<p>El soporte para <a href="https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/">HTTP/2 y sus importantes novedades</a> hace que desde Java se puedan aprovechar las mejoras en la segunda versión del protocolo HTTP y se aprovechan las <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">novedades de Java 8</a>. También en Java EE 8 se han actualizado de versión algunas de las especificaciones e incluido alguna nueva como la de la nueva API de seguridad que han de soportar los servidores de aplicaciones para ser compatibles:</p>
<ul>
<li>JSR 366 – Java EE 8 Platform</li>
<li>JSR 365 – Contexts and Dependency Injection (CDI) 2.0</li>
<li>JSR 367 – The Java API for JSON Binding (JSON-B) 1.0</li>
<li>JSR 369 – Java Servlet 4.0</li>
<li>JSR 370 – Java API for RESTful Web Services (JAX-RS) 2.1</li>
<li>JSR 372 – JavaServer Faces (JSF) 2.3</li>
<li>JSR 374 – Java API for JSON Processing (JSON-P)1.1</li>
<li>JSR 375 – Java EE Security API 1.0</li>
<li>JSR 380 – Bean Validation 2.0</li>
<li>JSR 250 – Common Annotations 1.3</li>
<li>JSR 338 – Java Persistence 2.2</li>
<li>JSR 356 – Java API for WebSocket 1.1</li>
<li>JSR 919 – JavaMail 1.6</li>
</ul>
<p>Hay un <a href="https://javaee.github.io/tutorial/">tutorial de Java EE 8</a> y con el <a href="https://javaee.github.io/firstcup/toc.html">ejemplo FirstCup</a> se puede adquirir un buen conocimiento para desarrollar aplicaciones con el lenguaje Java. En el artículo <a href="https://www.ibm.com/developerworks/opensource/library/j-whats-new-in-javaee-8/index.html">What&rsquo;s new in Java EE 8</a> hay unos pocos ejemplos de código con varias de estas novedades. Finalmente, con el traspaso de Java EE a la fundación Eclipse y por motivos de marca registrada el proyecto ha sido renombrado a Jakarta EE. Java EE o ahora Jakarta EE, <a href="https://microprofile.io/">Microprofile</a> y <a href="https://spring.io/">Spring</a> junto con algunos <em>frameworks</em> especializados son las opciones más utilizadas para realizar aplicaciones en Java en el lado del servidor.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.oracle.com/technetwork/java/javaee/documentation/ee8-release-notes-3894362.html">Java Platform, Enterprise Edition 8 SDK - Release Notes</a></li>
<li><a href="https://www.ibm.com/developerworks/opensource/library/j-whats-new-in-javaee-8/index.html">What&rsquo;s new in Java EE 8</a></li>
<li><a href="https://blogs.oracle.com/java/java-ee-8-overview">Java EE 8 Overview</a></li>
<li><a href="https://www.oracle.com/technetwork/java/javaee/overview/index.html">Java™ EE at a Glance</a></li>
<li><a href="https://javaee.github.io/">Java EE (GitHub)</a></li>
<li><a href="https://javaee.github.io/tutorial/">Java EE Tutorial</a></li>
<li><a href="https://javaee.github.io/tutorial/toc.html">Java EE Tutorial (Content)</a></li>
<li><a href="https://javaee.github.io/firstcup/toc.html">Java EE Tutorial: Your First Cup</a></li>
<li><a href="https://www.infoq.com/news/2018/02/from-javaee-to-jakartaee">From Java EE to Jakarta EE</a></li>
<li><a href="https://dzone.com/articles/an-overview-of-cdi-events">An Overview of CDI Events</a></li>
<li><a href="http://docs.jboss.org/cdi/spec/2.0/cdi-spec.html#firing_events_asynchronously">Firing CDI events asynchronously</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/</id>
        <title>Formatear con color sentencias SQL o código fuente en la terminal con Java y Jansi</title>
        <updated>2018-11-03T23:30:00+01:00</updated>
        <published>2018-11-03T23:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Usando la librería <a href="https://github.com/fusesource/jansi">Jansi</a> es posible <a href="https://elblogdepicodev.blogspot.com.es/2012/12/color-en-la-terminal-con-jansi.html">hacer que un programa Java emita texto en color en la terminal</a>. Emitir color en la terminal sirve para identificar más fácilmente y visualmente ciertas partes del texto, por ejemplo, emitiendo en rojo mensajes importantes o con color amarillo de fondo algún dato. Una utilidad práctica es formatear con color una sentencia SQL que se va a ejecutar en una aplicación a modo de traza o con colores el código fuente de un archivo Java u otro tipo de archivo de texto.</p>
<p>Una forma sencilla para formatear con colores un archivo de código fuente Java o una sentencia SQL sin llegar a hacer un procesador de sintaxis de ese lenguaje o formato es <a href="https://picodotdev.github.io/blog-bitix/2018/02/referencias-a-grupos-de-captura-en-expresiones-regulares-y-reemplazos/">utilizar expresiones regulares y grupos de captura</a>. En ambos casos hay partes que son palabras claves, números o cadenas en definitiva elementos que se deseen destacar. Con las clases <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Pattern.html">Pattern</a> y <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Matcher.html">Matcher</a> de Java se van obteniendo los diferentes grupos de captura de forma secuencial. Según sea el grupo capturado del elemento actual se utiliza Jansi para formatearlo con el color que le corresponde.</p>
<p>Una formateador simple para cada uno de estos casos serían los siguientes donde se utiliza una expresión regular con diferentes grupos de captura con nombre. El primer caso es para formatear con color una sentencia SQL sencilla en el método <em>printSql()</em> y el segundo el programa <em>Hola mundo</em> de Java en el método <em>printJava()</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaregexformatter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.fusesource.jansi.Ansi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.fusesource.jansi.AnsiConsole</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.regex.Matcher</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.regex.Pattern</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">SQL_REGEXP_REFERENCEGROPUS</span> <span class="o">=</span> <span class="s">&#34;(?&lt;keyword&gt;select|from|where|and)|(?&lt;string&gt;&#39;[^&#39;]*&#39;)|(?&lt;number&gt;\\d+)|(?&lt;other&gt;.)&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">JAVA_REGEXP_REFERENCEGROPUS</span> <span class="o">=</span> <span class="s">&#34;(?&lt;keyword&gt;public|static|void|class)|(?&lt;type&gt;String|int)(?&lt;typequalifier&gt;\\[\\]|\\s)|(?&lt;string&gt;\&#34;[^\&#34;]*\&#34;)|(?&lt;number&gt;\\d+)|(?&lt;other&gt;[\\s\\S])&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">systemInstall</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">out</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">printSql</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">printJava</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">out</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">systemUninstall</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">printSql</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pattern</span> <span class="n">p</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="n">SQL_REGEXP_REFERENCEGROPUS</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Matcher</span> <span class="n">m</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="s">&#34;select * from dual where a = &#39;1&#39; and b = 23&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">StringBuffer</span> <span class="n">formatedSql</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">while</span> <span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">find</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">keyword</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;keyword&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;string&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">number</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;number&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">other</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;other&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">keyword</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">MAGENTA</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">keyword</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">string</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">YELLOW</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">string</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">number</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">number</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">other</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">other</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">out</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">formatedSql</span><span class="o">.</span><span class="na">toString</span><span class="o">()));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">printJava</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pattern</span> <span class="n">p</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="n">JAVA_REGEXP_REFERENCEGROPUS</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Matcher</span> <span class="n">m</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="s">&#34;public class Main {\n\tpublic static void main(String[] args) {\n\t\tint number = 3;\n\t\tSystem.out.println(\&#34;Hello World!\&#34;);\n\t}\n}&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">StringBuffer</span> <span class="n">formatedSql</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">while</span> <span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">find</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">keyword</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;keyword&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">type</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;type&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">typeQualifier</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;typequalifier&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;string&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">number</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;number&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">other</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;other&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">keyword</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">MAGENTA</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">keyword</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">type</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">CYAN</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">type</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">typeQualifier</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">typeQualifier</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">string</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">YELLOW</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">string</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">number</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">number</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">other</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">other</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">out</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">formatedSql</span><span class="o">.</span><span class="na">toString</span><span class="o">()));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javaregexformatter.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.fusesource.jansi:jansi:2.3.2&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>El resultado en la terminal es el siguiente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/images/JavaRegexFormatter_hu2eff5423e6ca8ce9c5c70066ea0b2fdc_48614_2560x1440_fit_box_3.png" data-gallery="" title="Formateado de sentencia SQL y código Java"><img src="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/images/JavaRegexFormatter_hu2eff5423e6ca8ce9c5c70066ea0b2fdc_48614_650x450_fit_box_3.png" width="650" height="276" alt="Formateado de sentencia SQL y código Java" title="Formateado de sentencia SQL y código Java"  class="lozad "></a></p>
<figcaption>Formateado de sentencia SQL y código Java</figcaption>
</figure>
</div>
<p>Este ejemplo es una aplicación útil de las expresiones regulares. En este caso he usado Jansi para emitir en la terminal texto con color pero de forma similar esto se puede usar para formatear en una web el mismo texto transformándolo y generando el HTML con las clases CSS adecuadas.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRegexFormatter">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew installDist, ./build/install/JavaRegexFormatter/bin/JavaRegexFormatter</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/</id>
        <title>IBM adquiere Red Hat, el gigante de Linux y código abierto</title>
        <updated>2018-10-29T21:00:00+02:00</updated>
        <published>2018-10-29T06:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/redhat.svg" width="300" height="96" alt="Red Hat" title="Red Hat"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ibm.svg" width="300" height="120" alt="IBM" title="IBM"  class=""></p>
</div>
<p>Hace unos pocos días recordaba una de las adquisiciones más relevantes entre empresas de software y de tecnología, <a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/">la adquisición de Sun Microsystems por parte de Oracle</a> en enero del 2010. En este octubre del 2018 acaba de anunciarse la adquisición de <a href="https://www.redhat.com/es">Red Hat</a> por parte de <a href="https://www.ibm.com/us-en/">IBM</a>.</p>
<p>La adquisición de <a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</a> por parte de <a href="https://www.oracle.com/">Oracle</a> fue relevante por el conjunto de productos que poseía Sun entre ellos el lenguaje de programación más usado, <a href="https://www.oracle.com/technetwork/java/index.html">Java</a>, pero también <a href="https://www.mysql.com/">MySQL</a>, competencia directa de la base de datos Oracle, el paquete ofimático OpenOffice que originaría <a href="https://www.libreoffice.org/">LibreOffice</a>, el software de virtualización <a href="https://www.virtualbox.org/">VirtualBox</a>, <a href="https://en.wikipedia.org/wiki/Solaris_%28operating_system%29">Solaris</a> y otras tecnologías relevantes como <a href="https://en.wikipedia.org/wiki/ZFS">ZFS</a> y <a href="https://en.wikipedia.org/wiki/DTrace">DTrace</a>. Por su parte la adquisición de Red Hat por parte de IBM también es relevante por el <a href="https://www.redhat.com/en/technologies/all-products">conjunto de productos de Red Hat</a> que ha desarrollado, adquirido o contribuido como su sistema operativo basado en <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> denominado <a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux">Red Hat Enterprise Linux (RHEL)</a> pero también las variantes comunitarias del proyecto <a href="https://fedoraproject.org/">Fedora</a> o la versión equivalente comunitaria <a href="https://www.centos.org/">CentOS</a> basada en RHEL. Pero también por otros productos como el servidor de aplicaciones <a href="https://www.jboss.org/">JBoss</a> y <a href="https://wildfly.org/">Wildfly</a>, la herramienta de automatización <a href="https://www.ansible.com/">Ansible</a> adquirida no hace mucho, <a href="https://www.openshift.com/">OpenShift</a> como plataforma de computación en la nube basada en contenedores, la versión de Red Hat de <a href="https://www.openstack.org/">OpenStack</a> para disponer de una infraestructura para la computación en la nube, <a href="https://www.redhat.com/en/technologies/storage/gluster">Gluster</a> y <a href="https://www.redhat.com/en/technologies/storage/ceph">Ceph</a> para el almacenamiento, <a href="https://coreos.com/">CoreOS</a> a añadir a sus soluciones para contenedores entre otros de sus productos.</p>
<p>Entre las empresas Sun Microsystems y Red Hat hay algún punto en común como que las dos han tenido en especial consideración las tecnologías de código abierto y el software libre, son dos de las empresas que más han contribuido al desarrollo del software libre. <a href="https://www.fsf.org/news/fsf-welcomes-gpl-java.html">Sun dotando a Java de una licencia de software libre como GPL</a> en el año 2006 junto con los otros proyectos que fue adquiriendo y <a href="https://www.fedoraproject.org/wiki/Red_Hat_contributions">Red Hat con sus contribuciones al núcleo de Linux y otros proyectos</a> como el entorno de escritorio <a href="https://www.gnome.org/">GNOME</a>, <a href="https://wiki.gnome.org/Projects/NetworkManager">NetworkManager</a>, los controladores gráficos, el servidor gráfico de nueva generación <a href="https://es.wikipedia.org/wiki/Wayland_%28protocolo%29">Wayland</a> que sustituirá a <a href="https://www.x.org/wiki/XServer/">X.Org Server</a> o <a href="https://flatpak.org/">Flatpak</a> como nueva forma de distribuir software para todas las distribuciones GNU/Linux directamente por los desarrolladores de los programas, el software de virtualización <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a> o el sistema de inicio <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a>.</p>
<p>Sin embargo, también hay diferencias en la adquisición de Sun y Red Hat. Una de ellas significativa es que Sun no pasaba por buenos momentos cuando fue adquirida por Oracle aún con las importantes tecnologías que poseía incapaz de tener un modelo de negocio rentable sobre el que basarse para perdurar. Oracle se deshizo de los que no le eran provechosos y muchas personas abandonaron Sun/Oracle. En cambio Red Hat si posee un modelo de negocio rentable basado en el código abierto y software libre con una facturación de 2000 millones. Sun fue adquirida por 7400 millones de dólares lo que en su momento parecía una gran cantidad de dinero y ahora parece que fue muy barato, Red Hat ha sido adquirida por 34000 millones, una enorme diferencia entre ambas operaciones aún habiendo pasado casi una década.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/images/redhat-homepage_hu575f231ead20386a238f4d21650a15e2_239090_2560x1440_fit_box_3.png" data-gallery="" title="Anuncio en la página de Red Hat"><img src="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/images/redhat-homepage_hu575f231ead20386a238f4d21650a15e2_239090_650x450_fit_box_3.png" width="650" height="332" alt="Anuncio en la página de Red Hat" title="Anuncio en la página de Red Hat"  class="lozad "></a></p>
<figcaption>Anuncio en la página de Red Hat</figcaption>
</figure>
</div>
<p>Conocida la operación en la página de Red Hat se publican varias notas de prensa.</p>
<ul>
<li><a href="https://newsroom.ibm.com/2018-10-28-IBM-To-Acquire-Red-Hat-Completely-Changing-The-Cloud-Landscape-And-Becoming-Worlds-1-Hybrid-Cloud-Provider">IBM to acquire Red Hat, completely changing the cloud landscape and becoming world&rsquo;s #1 hybrid cloud provider</a></li>
<li><a href="https://www.redhat.com/en/blog/red-hat-ibm-creating-leading-hybrid-cloud-provider">Red Hat + IBM: Creating the leading hybrid cloud provider</a></li>
<li><a href="https://www.redhat.com/en/blog/monumental-day-open-source-and-red-hat">A monumental day for open source and Red Hat</a></li>
</ul>
<p>A razón de estas notas de prensa después de haberlas leído el motivo principal por el que IBM adquiere Red Hat es para convertirse en el proveedor número uno de computación en la nube híbrida y el motivo por el que Red Hat acepta la operación es porque estando dentro de una compañía del tamaño y recursos disponibles de IBM puede acelerar el crecimiento y proporcionar a una mayor audiencia innovación basándose en el código abierto a una escala mucho mayor conservando su cultura única y compromiso decidido con el código abierto, muchos años antes de lo que les costaría hacerlo solos. Red Hat en el 2008 eran 2200 empleados en el 2018 son 12600, IBM tiene 300000 empleados. IBM se mantiene comprometida con el gobierno abierto de Red Hat, las contribuciones al código abierto, la participación en la comunidad de código abierto y modelo de desarrollo. Red Hat seguirá siendo Red Hat como una unidad distinta dentro de IBM, mantiene su misión comprometida con el código abierto y valores de colaboración, transparencia, participación y meritocracia, incluso esperando que estos valores se transladen a IBM.</p>
<p>Red Hat se fundó en 1993 liberando en 1994 la primera versión de Red Hat Linux, en el 2001 vendía en comercios por $29.95 cajas con el sistema operativo entre entusiastas o descargable gratuitamente de sitios FTP. Pero con solo entusiastas del código abierto no haría de Red Hat (o Linux) un jugador en el software empresarial. En el año 2002 se hace la apuesta por separar los productos comerciales de su inversión continuada en construir proyectos de código abierto. Se deja de lado la descarga gratuita y las cajas con Red Hat Linux siendo reemplazadas con un modelo de suscripción empresarial, reteniendo los principios del código abierto de libertad a la vez que creando un modelo de negocio sostenible a largo plazo, publicándolo como Red Hat Enterprise Linux. El punto importante es que encontró un modelo de negocio exitoso para Linux y el código abierto continuando invirtiendo e innovando en la comunidad con proyectos como Fedora, siendo aún a día de hoy su modelo pero mucho más expandido. Desde el día que presentaron RHEL su misión ha sido llevar el código abierto a la empresa. Lo hicieron para Lixux, para Java EE, para OpenStack y lo están haciendo para Ansible, Kubernetes y más proyectos de código abierto.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/images/redhat-history_hu22322b882df75d6a0a16c7ba5415f1ab_184320_2560x1440_fit_q90_box.jpg" data-gallery="" title="Historia de Red Hat"><img src="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/images/redhat-history_hu22322b882df75d6a0a16c7ba5415f1ab_184320_650x450_fit_q90_box.jpg" width="619" height="450" alt="Historia de Red Hat" title="Historia de Red Hat"  class="lozad "></a></p>
<figcaption>Historia de Red Hat</figcaption>
</figure>
</div>
<p>IBM es una compañía mucho más grande que Red Hat y tiene importantes valores como los <a href="https://www.ibm.com/it-infrastructure/z">servidores <em>mainframe</em> IBM Z</a>, los <a href="https://www.ibm.com/it-infrastructure/power">procesadores POWER</a>, además de <a href="https://www.ibm.com/cloud-computing/bluemix/es">su propia nube</a>, software de analítica, internet de las cosas y <a href="https://www.ibm.com/solutions/es/es/">soluciones para varios sectores de la industria y gubernamentales</a>. El <a href="https://eclipse.org">proyecto Eclipse</a> surgió de IBM y ha estado ampliamente relacionada con Java con los <a href="https://www.ibm.com/es-es/marketplace/java-ee-runtime/details">servidores WebSphere</a> u <a href="https://openliberty.io">OpenLiberty</a>. Ambas son dos de las <a href="https://www.linuxfoundation.org/2017-linux-kernel-report-landing-page/">empresas que más contribuyen al <em>kernel</em> de Linux</a>.</p>
<p>En la nube hay negocio con varios actores importantes <a href="https://aws.amazon.com/es/">Amazon Web Services</a>, <a href="https://azure.microsoft.com/es-es/">Microsoft Azure</a>, <a href="https://cloud.google.com/">Google Cloud</a>, <a href="https://www.oracle.com/cloud/">Oracle Cloud</a> uniéndose ahora IBM y Red Hat entre otros varios actores más pequeños. En este auge de la nube y que seguirá creciendo todos quieren estar presentes, sin embargo, con la cantidad de ellos que quizá con el paso del tiempo solo haya dos o tres exitosos muy grandes que concentren la mayor parte del mercado. O quizá surja una nueva tecnología disruptiva que cambie de nuevo las reglas de juego. IBM que parecía pasar más desapercibida en los últimos tiempos con la adquisición de Red Hat toma una nueva relevancia que puede ser beneficiosa para ambas si son capaces de aprovechar esta oportunidad. IBM realiza nueva inversión en el código abierto que se suma a las ya anteriores de 1000 millones en Linux.</p>
<p>Al mismo tiempo se abre un periodo de incertidumbre considerando precedentes similares anteriores como el comentado de Sun pero también de oportunidades. Si no es exitoso <a href="https://www.canonical.com/">Canonical</a> y <a href="https://www.ubuntu.com/">Ubuntu</a> o <a href="https://www.suse.com/es-es/">SUSE</a> pueden ser beneficiados pasando a ocupar el espacio que ahora ocupa Red Hat. Está por ver si IBM abraza <a href="https://brand.redhat.com/foundations/">los valores por los que Red Hat ha tenido éxito</a>, de momento parece que va a mantener a Red Hat como una unidad distinta dentro de IBM.</p>
<p>¿IBM se convertirá en el gigante rojo o Red Hat se convertirá en Blue Hat?.</p>
<div class="media">
    <amp-twitter width="650" height="550" data-tweetid="1056893767913889794"></amp-twitter>
    <blockquote placeholder>
<p lang="en" dir="ltr">Red Hat gains stronger foothold in open source and more industry expertise with IBM deal, says CEO Jim Whitehurst <a href="https://t.co/gtXAO1CQ6X">https://t.co/gtXAO1CQ6X</a> <a href="https://t.co/21QzUw3rre">pic.twitter.com/21QzUw3rre</a></p>&mdash; Bloomberg Technology (@technology) <a href="https://twitter.com/technology/status/1056893767913889794?ref_src=twsrc%5Etfw">October 29, 2018</a>
</blockquote>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/s7dTjpvakmA" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/2_VFKqw1q2Q" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.xataka.com/empresas-y-economia/ibm-compra-red-hat-34-000-millones-dolares-hito-historico-para-empresa-que-triunfo-linux-open-source">IBM compra Red Hat por 34.000 millones de dólares en un hito histórico para la empresa que triunfó con Linux y el Open Source</a></li>
<li><a href="https://www.genbeta.com/actualidad/ibm-compra-red-hat-historica-operacion-34-000-millones-dolares">IBM compra Red Hat en una histórica operación de 34.000 millones de dólares</a></li>
<li><a href="https://www.genbeta.com/a-fondo/red-hat-como-empresa-software-open-source-llego-a-valer-34-000-millones-dolares">Red Hat, cómo una empresa de software open source llegó a valer 34.000 millones de dólares</a></li>
<li><a href="https://hipertextual.com/2018/10/ibm-compra-red-hat-34-000-millones-dolares">IBM compra Red Hat por 34.000 millones de dólares</a></li>
<li><a href="https://www.adslzone.net/2018/10/28/ibm-compra-red-hat/">IBM compra Red Hat por 34.000 millones: una de las mayores compras tecnológicas de la historia</a></li>
<li><a href="https://www.profesionalreview.com/2018/10/28/ibm-compra-red-hat-por-34-000-millones-de-dolares/]https://www.profesionalreview.com/2018/10/28/ibm-compra-red-hat-por-34-000-millones-de-dolares/">IBM compra Red Hat por 34.000 millones de dólares</a></li>
<li><a href="https://www.linuxadictos.com/ibm-realiza-la-mayor-compra-de-su-historia-tras-adquirir-red-hat.html">IBM realiza la mayor compra de su historia tras adquirir Red Hat</a></li>
<li><a href="https://jvare.com/2018/10/29/ibm-compra-red-hat/">IBM compra Red Hat</a></li>
<li><a href="https://www.meneame.net/story/ibm-compra-redhat-eng">IBM compra redhat</a></li>
<li><a href="https://siliconangle.com/2018/10/28/bombshell-deal-ibm-acquires-open-source-pioneer-red-hat-34b/">In a bombshell deal, IBM acquires open-source pioneer Red Hat for $34B</a></li>
<li><a href="http://marxsoftware.blogspot.com/2018/10/ibm-to-acquire-red-hat-java.html">IBM to Acquire Red Hat: A Java-Oriented First Look</a></li>
<li><a href="https://www.engadget.com/2018/10/28/ibm-buys-red-hat/">IBM buys Linux giant Red Hat to thrive in the cloud</a></li>
<li><a href="https://www.reddit.com/r/redhat/comments/9s5rqr/ibm_and_red_hat/">IBM and Red Hat?</a></li>
<li><a href="https://www.youtube.com/watch?v=2_VFKqw1q2Q&amp;list=PL040C33624F3CBAF9">Linux Ads</a></li>
<li><a href="https://brand.redhat.com/foundations/">Red Hat Brand Standards</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/ejemplo-sencillo-de-como-leer-datos-de-un-archivo-excel-o-csv-en-java/</id>
        <title>Ejemplo sencillo de cómo leer datos de un archivo Excel o CSV en Java</title>
        <updated>2018-10-26T10:00:00+02:00</updated>
        <published>2018-10-26T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/ejemplo-sencillo-de-como-leer-datos-de-un-archivo-excel-o-csv-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Los formatos de archivo de columnas separadas por comas o CSV y los documentos en formato de hojas de cálculo excel del paquete ofimático <a href="https://products.office.com/es-es/">Microsoft Office</a> son muy utilizados como formato de archivo para intercambiar datos entre aplicaciones o simplemente como contenedores de datos. Para leer los datos en estos formatos de archivos en Java hay que emplear alguna librería que facilite y entienda estos formatos de los archivos. Para leer los archivos CSV está la librería <a href="http://opencsv.sourceforge.net/">OpenCSV</a> y para los archivos excel está la librería <a href="https://poi.apache.org/">Apache POI</a>.</p>
<p>Con Apache POI para acceder al archivo excel hay que usar unas pocas clases de su API como <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFWorkbook.html">HSSFWorkbook</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFSheet.html">HSSFSheet</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFRow.html">HSSFRow</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFCell.html">HSSFCell</a> y utilizar el método adecuado según el tipo de datos a obtener.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundoapachepoi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">DATA</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DATA</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;PlayStation 4 (PS4) - Consola 500GB&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;340.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/PlayStation-4-PS4-Consola-500GB/dp/B013U9CW8A&#34;</span> <span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Raspberry Pi 3 Modelo B (1,2 GHz Quad-core ARM Cortex-A53, 1GB RAM, USB 2.0)&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;41.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Raspberry-Modelo-GHz-Quad-core-Cortex-A53/dp/B01CD5VC92/&#34;</span> <span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Gigabyte Brix - Barebón (Intel, Core i5, 2,6 GHz, 6, 35 cm (2.5\&#34;), Serial ATA III, SO-DIMM) Negro &#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;421.36&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Gigabyte-Brix-Bareb%C3%B3n-Serial-SO-DIMM/dp/B00HFCTUPM/&#34;</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeExcel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readExcel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeCsv</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readCsv</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">readExcel</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFWorkbook</span> <span class="n">wb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFWorkbook</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="s">&#34;data.xls&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFSheet</span> <span class="n">sheet</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">getSheetAt</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">getLastRowNum</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">rows</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFRow</span> <span class="n">row</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFCell</span> <span class="n">productCell</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFCell</span> <span class="n">priceCell</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="n">1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFCell</span> <span class="n">linkCell</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="n">2</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">product</span> <span class="o">=</span> <span class="n">productCell</span><span class="o">.</span><span class="na">getStringCellValue</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">price</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">priceCell</span><span class="o">.</span><span class="na">getNumericCellValue</span><span class="o">()).</span><span class="na">setScale</span><span class="o">(</span><span class="n">2</span><span class="o">,</span> <span class="n">BigDecimal</span><span class="o">.</span><span class="na">ROUND_HALF_DOWN</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">link</span> <span class="o">=</span> <span class="n">linkCell</span><span class="o">.</span><span class="na">getStringCellValue</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s, %s, %s%n&#34;</span><span class="o">,</span> <span class="n">product</span><span class="o">,</span> <span class="n">price</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">link</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-excel.java</span>
    </div>
</div>
<p>Para el caso de los CSV hay que utilizar la clase <a href="http://opencsv.sourceforge.net/apidocs/com/opencsv/CSVReader.html">CSVReader</a> que permite iterar sobre las líneas del archivo teniendo en cuenta el caracter separador de las columnas y las comillas de los datos. Para acceder a los valores de cada una de las columnas hay que convertir al tipo de datos deseado ya que siempre se devuelve un <em>String</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundoapachepoi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">DATA</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DATA</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;PlayStation 4 (PS4) - Consola 500GB&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;340.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/PlayStation-4-PS4-Consola-500GB/dp/B013U9CW8A&#34;</span> <span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Raspberry Pi 3 Modelo B (1,2 GHz Quad-core ARM Cortex-A53, 1GB RAM, USB 2.0)&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;41.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Raspberry-Modelo-GHz-Quad-core-Cortex-A53/dp/B01CD5VC92/&#34;</span> <span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Gigabyte Brix - Barebón (Intel, Core i5, 2,6 GHz, 6, 35 cm (2.5\&#34;), Serial ATA III, SO-DIMM) Negro &#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;421.36&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Gigabyte-Brix-Bareb%C3%B3n-Serial-SO-DIMM/dp/B00HFCTUPM/&#34;</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeExcel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readExcel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeCsv</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readCsv</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">readCsv</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CSVReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CSVReader</span><span class="o">(</span><span class="k">new</span> <span class="n">FileReader</span><span class="o">(</span><span class="s">&#34;data.csv&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">[]&gt;</span> <span class="n">lines</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readAll</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lines</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">d</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">product</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="n">0</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">price</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">d</span><span class="o">[</span><span class="n">1</span><span class="o">]);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">link</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="n">2</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s, %s, %s%n&#34;</span><span class="o">,</span> <span class="n">product</span><span class="o">,</span> <span class="n">price</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">link</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">reader</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-csv.java</span>
    </div>
</div>
<p>En ambos casos la salida en la consola al leer los datos de los documentos es la misma.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">PlayStation 4 (PS4) - Consola 500GB, 340.95, https://www.amazon.es/PlayStation-4-PS4-Consola-500GB/dp/B013U9CW8A&#10;</span></span><span class="line"><span class="cl">Raspberry Pi 3 Modelo B (1,2 GHz Quad-core ARM Cortex-A53, 1GB RAM, USB 2.0), 41.95, https://www.amazon.es/Raspberry-Modelo-GHz-Quad-core-Cortex-A53/dp/B01CD5VC92/&#10;</span></span><span class="line"><span class="cl">Gigabyte Brix - Barebón (Intel, Core i5, 2,6 GHz, 6, 35 cm (2.5&#34;), Serial ATA III, SO-DIMM) Negro , 421.36, https://www.amazon.es/Gigabyte-Brix-Bareb%C3%B3n-Serial-SO-DIMM/dp/B00HFCTUPM/&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Las dependencias a incluir en el proyecto son las siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.holamundoapachepoi.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;org.apache.poi:poi:4.0.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;com.opencsv:opencsv:4.3&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>También se puede <a href="https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/">utilizar Apache POI para crear hojas excel y OpenCSV para crear archivos CSV</a> con las columnas correctamente separadas por comas. Otra alternativa para leer o escribir archivos en formato CSV es <a href="https://commons.apache.org/proper/commons-csv/">Apache Commons CSV</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoApachePOI">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/">Ejemplo sencillo de como crear un documento PDF con Java y PDFBox</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/</id>
        <title>Desempaquetado y análisis de monitor BenQ PD2700Q, 2K/QHD, IPS, 27 pulgadas</title>
        <updated>2020-06-02T14:00:00+02:00</updated>
        <published>2018-10-23T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La siguiente pieza que he adquirido para completar lo que será mi ordenador personal en casa es el monitor que usaré en mayor medida para tareas ofimáticas, navegar por internet, quizá ver alguna película y en menor medida quizá también algún juego. De entre las opciones que buscaba inicialmente era que fuese IPS por los colores, de 27 pulgadas y con ese tamaño de pantalla con al menos resolución QHD. Hay muchos modelos entre los que elegir y con variaciones de precios notables en aparentemente las mismas características, de 32 pulgadas, ultrapanorámicos, UHD, orientados más a <em>gaming</em>, &hellip;</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/benq.svg" width="300" height="90" alt="BenQ" title="BenQ"  class=""></p>
</div>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/06/decidido-a-comprar-un-intel-nuc-entre-las-opciones-que-he-evaluado/">El ordenador que tenía intención de comprar, un Intel NUC</a> entre las <a href="https://picodotdev.github.io/blog-bitix/2018/04/intentando-elegir-portatil-nuc-o-mini-itx-para-comprar-nuevo-equipo/">opciones entre portátil, ITX o NUC que evalué hace ya más de seis meses</a> ha sido finalmente uno de sus modelos que me decidí a comprar, <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">el ordenador Intel NUC NUC8i5BEK del cual he realizado su desempaquetado</a>. Mientras espero a su comercialización ya estoy comprando las otras piezas que en cualquier caso necesito como <a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/">teclado y ratón inalámbrico, alfombrilla para la mesa</a> y ahora otra pieza más importante, el monitor.</p>
<p>Ya con unas semanas habiendo usado el teclado y ratón V7 CKW200 acepto que el ratón no sea totalmente fiable y un peligro hacer cosas importantes con él al arrastrar y soltar ya que falla en ocasiones, quizá compre un ratón tradicional con cable si me da muchos problemas. He comprobado que se pueden tener dos ratones conectados simultáneamente, funcionado ambos. El teclado funciona perfectamente y estoy encantado con él, solo por el teclado no los he devuelto. Sin embargo, en el monitor con algún defecto de píxeles muertos o retención de imagen si haría la devolución, por fortuna una vez me ha llegado y lo he comprobado con unas <a href="https://jasonfarrell.com/misc/deadpixeltest.php">imágenes de prueba para detectar píxeles muertos o vagos</a> no he visto ninguno así que el panel me ha llegado perfecto estado.</p>
<p>He mirado varias opciones y modelos de  monitor y aún así tampoco estoy seguro de que la que finalmente he elegido sea la mejor en el mercado. Leyendo comentarios y opiniones de otros usuarios en todos los modelos siempre hay alguno que ha tenido problemas, en el caso de los monitores de píxeles muertos, vagos, fugas de luz, hasta retención de imágenes. Las fugas de luz es algo normal en la tecnología actual de monitores y televisores con retroiluminación led en los bordes de la pantalla, apreciable en condiciones de poca luz e imágenes oscuras.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="opciones">Opciones</h3>
<p>Partía de unos requerimientos de que fuera IPS por su calidad de colores, de 27 pulgadas y con resolución 2K o 2560x1440 en un rango de precio de hasta unos 300 €. En otro orden de cosas menos importantes que valoraba era que tuviese conexión <a href="https://es.wikipedia.org/wiki/High-Definition_Multimedia_Interface">HDMI</a> y <a href="https://en.wikipedia.org/wiki/DisplayPort">DisplayPort</a>, marcos finos y compatibilidad con soporte VESA. Hay opciones en formato ultrapanorámico de 29 pulgadas y resolución 2560x1080. He visto alguno de estos pero finalmente he preferido que tenga más resolución vertical y no sea tan ancho para no tener que girar la cabeza.</p>
<p>Con estos requerimientos iniciales me quedé con unos pocos candidatos. Básicamente monitores 2K en formato de 27 pulgadas e IPS muy similares en cuanto a características, son IPS de resolución QHD 2560x1440, tienen entrada HDMI 1.4 y DisplayPort 1.2, soporte VESA 100x100, con algunas pequeñas diferencias en cuanto a especificaciones. El <a href="https://amzn.to/2D0VQEf">BenQ PD2500Q</a> es de 25 pulgadas, panel de 8 bits y tiene sensor para adaptar automáticamente el brillo a la luz ambiental, posee un <em>hub</em> USB 3.1 de cuatro puertos, el <a href="https://amzn.to/2OFdFi9">BenQ PD2700Q</a> posee un <em>hub</em> USB 2.0 de dos puertos y un panel de 10 bits. Los dos modelos de BenQ son muy parecidos sino iguales en cuanto al panel de monitor, varía en cuanto al marco que en el caso del GW s brillante y en el PD mate, también cambian las conexiones que tienen el GW tiene D-Sub, DVI-DL (Dual Link), DisplayPort, HDMI y el PD DisplayPort, mini DisplayPort y HDMI. Ambos soportan 100% Rec.709 y sRGB, sin parpadeos, son regulables en altura, gira, inclinación y pivotable para ponerlo en modo vertical. Tienen un precio similar.</p>
<p>De las opciones con las que me quedé todos con panel de 10 bits (u 8 + 2, salvo el PD2500Q que es de 8), función de no parpadeo, filtro de luz azul y altavoces sencillos. El PD2700Q es un modelo más antiguo, los PD2500Q y PD2700U son más modernos y se notan en los biseles más reducidos y el <em>hub</em> con una versión mayor de USB.</p>
<p>Tanto el <a href="https://amzn.to/2OIyidi">Viewsonic VG2719-2K</a> como el <a href="https://amzn.to/2CZj8dx">V7 L27HAS2K-2E</a> tienen un precio más económico pero en cuanto a especificaciones técnicas no eran malas. Sin embargo, de estos modelos no hay mucha información ni de análisis en páginas web, desempaquetados en Youtube, ni opiniones en Amazon. Del V7 hay <a href="https://www.amazon.de/dp/B079P3YSTK/">dos opiniones en Amazon alemania</a> y ambas no son buenas y coinciden en que el texto y la imagen se ve borrosa. La falta de información me ha hecho tener reticencias con estos modelos.</p>
<p>El Viewsonic es un modelo del 2015 con dos HDMI 1.3 y DisplayPort 1.2. El BenQ PD2700Q es un modelo del año 2016, tiene HDMI 1.4 y DisplayPort 1.2, no es muy relevante ya que de HDMI 1.3 a 1.4 varía la resolución soportada pero en estos monitores en ambos casos es suficiente cualquiera de ellas en esta resolución y a 60 Hz. El Viewsonic es una opción algo menor pero considerando su precio y el del BenQ hubiese sido otra buena elección. El Viewsonic en contra tiene la falta de información aún habiendo un comentario positivo en Amazon.</p>
<ul>
<li><a href="https://amzn.to/2OFdFi9">BenQ PD2700Q</a> (<a href="https://www.benq.eu/es-es/monitor/designer/pd2700q.html">página fabricante</a>)</li>
<li><a href="https://amzn.to/2D0VQEf">BenQ PD2500Q</a> (<a href="https://www.benq.eu/es-es/monitor/designer/pd2500q.html">página fabricante</a>)</li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01K2210GS&amp;linkId=37c01c8c71f103d6c7ad009afd2892a9" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0737M9QP7&amp;linkId=3f46b23e2d6b884222796306587cced8" title="Amazon" class="lozad"></iframe>
</div>
<p>Los monitores UHD para un tamaño de 27 pulgadas a máxima resolución el texto y elementos gráficos se ven muy pequeños con lo que para uso ofimático hay que escalar a una más pequeña. Hay en un rango de precios muy amplio, desde 200 € a 700+€. Dos modelos en 4K de los anteriores son el <a href="https://amzn.to/2Pik820">BenQ PD2700U</a> que es el que hubiese elegido en caso de haber optado por UHD, el <a href="https://amzn.to/2PbNIGB">LG 27UK600-W</a> o el <a href="https://amzn.to/2Jcu1sP">LG 27UK650-W</a>, nótese la <em>U</em> en estos modelos. Estos monitores aún siendo UHD no llegan a los 192 dpi, se quedan en 163, para considerarse <a href="https://wiki.gnome.org/HowDoI/HiDpi">HiDPI</a> ni tienen una pantalla retina. Otras opciones son optar por 32&quot; UHD y en formato panorámico. Los otros candidatos destacables son estos alguno en formato panorámico.</p>
<ul>
<li><a href="https://amzn.to/3Fb5gc7">BenQ PD2700U</a></li>
<li><a href="https://amzn.to/39uDEEa">BenQ PD2705U</a></li>
<li><a href="https://amzn.to/2YLe1dq">BenQ PD3200U</a></li>
<li><a href="https://amzn.to/3kyG4nW">LG 34WN750-B</a></li>
<li><a href="https://amzn.to/3ooWHne">Samsung LU32J592UQRXEN</a></li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01K2210GS&amp;linkId=37c01c8c71f103d6c7ad009afd2892a9" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07GLR6RQF&amp;linkId=c69a55a9bb5bf63725b1bdffaa567444" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B096B3PBFZ&amp;linkId=7c2674cdea3a3b659db6acbfc49224b0" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01N4AIIIV&amp;linkId=076b46557cfcc1a8a97d634ec8558adc" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B086BHDHR5&amp;linkId=b3f97dfc3e625c270170a9ca9aae8eb8" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08SW8HC78&amp;linkId=85ea6c42eb833535683519da00bc0363" title="Amazon" class="lozad"></iframe>
</div>
<p>En monitores de 27 pulgadas la recomendación en varios foros es de 2K. Menos con 1K o <em>full hd</em> es ver píxeles como centollos, más es ver las cosas pequeñas a máxima resolución para tareas ofimáticas y es habitual tener que escalar a una resolución más baja aunque tenga mayor definición aprovechando la mayor densidad de píxeles o DPI. Estos son unos hilos en foros y dos artículos que me han parecido interesantes y que me han resuelto alguna duda o confirmado lo que ya suponía.</p>
<ul>
<li><a href="https://foro.elchapuzasinformatico.com/monitores/81918-monitor-de-27-1440p-24-1080p-para-ofimatica-office-programas-de-contabilidad.html">Monitor de 27 1440p o 24 1080p para ofimática, office y programas de contabilidad</a></li>
<li><a href="https://foro.elchapuzasinformatico.com/monitores/82088-monitor-27-usos-programacion-ofimatica-un-poco-de-diseno-illustrator-photoshop.html">Monitor 27&quot; - Usos: Programación, Ofimática y un poco de diseño(Illustrator, Photoshop)</a></li>
<li><a href="https://www.forocoches.com/foro/showthread.php?t=6062417">Voy a comprar un monitor de 27-28&hellip; ¿merece la pena que sea 4K?</a></li>
<li><a href="https://www.forocoches.com/foro/showthread.php?t=4760432">Entendidos en monitores: 27&quot; 1080/2k consejo compra</a></li>
<li><a href="https://www.disfrutadelcastigo.com/2014/01/comprar-un-monitor-4k.html">Comprar un monitor 4K</a></li>
<li><a href="https://www.disfrutadelcastigo.com/2017/04/comprar-monitor-ultrapanoramico-uwqhd.html">Comprar monitor ultrapanorámico UWQHD</a></li>
</ul>
<p>En <a href="https://www.pccomponentes.com/">PcComponentes</a> los precios no varían tanto pero en Amazon en algunos productos si hay notables diferencias entre pocos días o alguna semana, sobre todo en productos de tecnología. Para conocer si el precio actual de un producto es alto, bajo o está bajando la página <a href="https://es.camelcamelcamel.com/">CamelCamelCamel</a> permite introduciendo la URL del producto de Amazon mostrar una gráfica con la evolución del precio.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/camelcamelcamel-benq-pd2700q_huc761967a96eddd13231ae5a8310cf71b_58029_2560x1440_fit_box_3.png" data-gallery="" title="Evolución del precio del monitor BenQ PD2700Q"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/camelcamelcamel-benq-pd2700q_huc761967a96eddd13231ae5a8310cf71b_58029_300x200_fit_box_3.png" width="297" height="200" alt="Evolución del precio del monitor BenQ PD2700Q" title="Evolución del precio del monitor BenQ PD2700Q"  class="lozad "></a></p>
<figcaption>Evolución del precio del monitor BenQ PD2700Q</figcaption>
</figure>
</div>
<h3 id="benq-pd2700q">BenQ PD2700Q</h3>
<p>Teniendo en cuenta todo finalmente me he decidido por el <a href="https://www.benq.eu/es-es/monitor/designer/pd2700q.html">BenQ PD2700Q</a>. Tiene buena conectividad, sin conexiones obsoletas como en el caso del BenQ GW. Es un monitor orientado a diseñadores aunque mi uso es principalmente en tareas ofimáticas y posiblemente algún juego ocasional. Los monitores ultra anchos no los he usado pero se me hacen demasiado anchos obligando a mover la cabeza para cubrir su área de visualización. Ya con 27&quot; el monitor se me hace grande aunque me acostumbraré a este tamaño pasado un tiempo, para la gente que aún quiere un monitor
más grande los hay de 32&quot; aunque en estos ya hay que ir a una resolución de UHD 3840x2160. Dentro de la categoría de monitores de 27 pulgadas, con resolución 2560x1440, IPS y con conectividad HDMI y DisplayPort el BenQ PD2700Q es uno de los más baratos y con una mejor relación calidad precio.</p>
<p>Sus <a href="https://www.benq.eu/es-es/monitor/designer/pd2700q/specifications.html">especificaciones</a> más destacables son:</p>
<ul>
<li>Tamaño de la pantalla, 27</li>
<li>Resolución 2560x1440.</li>
<li>Tipo de panel, IPS</li>
<li>Brillo, 350 cd/㎡</li>
<li>Colores de la pantalla, 1.07 billion colors</li>
<li>Área de la pantalla (mm), 596.74(H) x 335.66(V)</li>
<li>Distancia entre píxeles (mm), 0.2331 y PPP, 108.79</li>
<li>Profundidad de color, 10bits</li>
<li>HDMI, HDMI (v1.4) x 1</li>
<li>DisplayPort, DisplayPort (v1.2) x 1</li>
<li>Mini DisplayPort, Mini DisplayPort (ver1.2) x 1</li>
<li>Concentrador USB 2.0, <em>upstream</em> x 1 y <em>downstream</em> x 2</li>
<li>Fuente de alimentación, <em>built-in</em></li>
<li>Dimensiones (altura × anchura × profundidad, mm) (sin base), 379.5 x 641.0 x 56.5. Con base (posición alta): 547.3 x 641.0 x 239.6. Con base (posición baja): 417.3 x 641.0 x 239.6</li>
</ul>
<p>Con 27 pulgadas y una resolución de 2560x1440 su área de visualización sus PPI son:</p>
<ul>
<li>Display size (<strong>27&quot;, QHD</strong>): 23.53&quot; × 13.24&quot; = 311.5in² (59.77cm × 33.62cm = <strong>2009.68cm²</strong>) at <strong>108.79 PPI</strong>, <strong>0.2335mm dot pitch</strong>, 11834 PPI²</li>
</ul>
<p>Comprando con un monitor de 23 pulgadas y una resolución de 1920x1080 y con un monitor de 3840x2160 en 27 pulgadas estos números son:</p>
<ul>
<li>Display size (<strong>23&quot;, FHD</strong>): 20.05&quot; × 11.28&quot; = 226.04in² (50.92cm × 28.64cm = <strong>1458.33cm²</strong>) at <strong>95.78 PPI</strong>, <strong>0.2652mm dot pitch</strong>, 9174 PPI²</li>
<li>Display size (<strong>27&quot;, UHD</strong>): 23.53&quot; × 13.24&quot; = 311.5in² (59.77cm × 33.62cm = <strong>2009.68cm²</strong>) at <strong>163.18 PPI</strong>, <strong>0.1557mm dot pitch</strong>, 26627 PPI²</li>
</ul>
<p>Hay algo de confusión cuando se menciona 2K en monitores, en realidad el término más apropiado es QHD (quad hd), que es 4 veces la resolución HD (1280x720), dos en alto y dos en ancho. Lo mismo ocurre con los monitores 4K que en realidad la denominación más acertada es UHD (ultra hd) y son cuatro veces la resolución FHD, dos en cada medida, 3840x2160.</p>
<p>En YouTube hay unos cuantos vídeos analizando este mismo monitor u otros parecidos que me han servidor para aclarar dudas.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=eEmQWkorC5c">BenQ 27 inch PD2700Q QHD Designer Monitor Review</a></li>
<li><a href="https://www.youtube.com/watch?v=lvJVVPwDpuM">BenQ PD2700Q review - 1440p IPS designer monitor</a></li>
<li><a href="https://www.youtube.com/watch?v=L5HUU2bsWMo">BenQ PD2700Q optimal für den Rec. 709</a></li>
<li><a href="https://www.youtube.com/watch?v=lAoP3GubSQ8">Video Review Monitor BenQ PD2700Q 27“, 2K, 4 ms</a></li>
<li><a href="https://www.youtube.com/watch?v=zrfogYO_yOQ">Quick review BenQ PD2700Q</a></li>
<li><a href="https://www.youtube.com/watch?v=bKjSox0uwnk">8 bit vs 10 bit Color: What&rsquo;s the Difference?</a></li>
<li><a href="https://www.youtube.com/watch?v=9ZXwqIrQE_M">¿Qué son 8-bit, 10-bit, 12-bit en Video? Todo sobre Bit Depth</a></li>
<li><a href="https://www.youtube.com/watch?v=0C2DnfPTcmE">1440p vs 4K (2160p) Monitor &ndash; What To Look Out For!</a></li>
<li><a href="https://www.youtube.com/watch?v=lZYLHPleZQQ">1080p vs 1440p Monitor</a></li>
<li><a href="https://www.youtube.com/watch?v=Hr_7-pVypSI">BenQ GW2765HT | 2K IPS 27&quot;</a></li>
<li><a href="https://www.youtube.com/watch?v=sdr10y_Ea-Q">Unboxing monitor BenQ GW2765HT QHD en español</a></li>
<li><a href="https://www.youtube.com/watch?v=o78qcRWz2Ag">BenQ GW2765HT Review - Best 1440p Monitor Under £300?</a></li>
<li><a href="https://www.youtube.com/watch?v=6DyJVoNyMX0">BenQ PD3200U Review</a></li>
<li><a href="https://www.youtube.com/watch?v=1THPLkNEH3k">Review Monitor para profesionales del diseño digital PD3200U</a></li>
</ul>
<h3 id="desempaquetado">Desempaquetado</h3>
<p>El monitor está perfectamente embalado en una caja impresa con las principales características del monitor, dentro lleva sus respectivos protectores e incluye los siguientes elementos. Que incluya una cable DisplayPort, HDMI y USB es de agradecer para no tener que comprarlos aparte y poder usar el monitor desde el primer momento.</p>
<ul>
<li>Monitor PD2700Q.</li>
<li>Guía de inicio y CD con software.</li>
<li>Cable de alimentación.</li>
<li>Cable HDMI.</li>
<li>Cable Mini DisplayPort a DisplayPort.</li>
<li>Cable USB para conectar al monitor y ordenador.</li>
<li>Gancho para colgar cascos en la parte trasera.</li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-1_hu5116f0dfb17873db99ba62d3f2645084_1396575_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-1_hu5116f0dfb17873db99ba62d3f2645084_1396575_200x150_fit_q90_box.jpg" width="200" height="136" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-2_hu3bdb6524ff67690ad6a69e79d8c3b993_1443386_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-2_hu3bdb6524ff67690ad6a69e79d8c3b993_1443386_200x150_fit_q90_box.jpg" width="200" height="150" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-3_hu94d64b531b486a2d7b0cc5ce850510b9_1047470_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-3_hu94d64b531b486a2d7b0cc5ce850510b9_1047470_200x150_fit_q90_box.jpg" width="114" height="150" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-4_hu17e56abcb9c56cc7f8bd8b5a24a8008a_308882_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-4_hu17e56abcb9c56cc7f8bd8b5a24a8008a_308882_200x150_fit_q90_box.jpg" width="200" height="25" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-5_hu1ed07e0c25e41219605616dd3f630812_437695_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-5_hu1ed07e0c25e41219605616dd3f630812_437695_200x150_fit_q90_box.jpg" width="200" height="31" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-6_hufa9850ac9ba7a1f4a780cb538d55d1e1_344382_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-6_hufa9850ac9ba7a1f4a780cb538d55d1e1_344382_200x150_fit_q90_box.jpg" width="200" height="49" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-7_hu51f315a4c3581c2a11c67765f54caa30_598185_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-7_hu51f315a4c3581c2a11c67765f54caa30_598185_200x150_fit_q90_box.jpg" width="200" height="70" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-8_hu38ccb7992c2885c252510f0b29afd82d_533432_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-8_hu38ccb7992c2885c252510f0b29afd82d_533432_200x150_fit_q90_box.jpg" width="200" height="67" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
<figcaption>Desempaquetado</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-9_hub38a4a1afdb288ae87ed05df0a898960_760324_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-9_hub38a4a1afdb288ae87ed05df0a898960_760324_200x150_fit_q90_box.jpg" width="200" height="85" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-10_hud74205ef1ea290368df24a862879f9cd_839713_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-10_hud74205ef1ea290368df24a862879f9cd_839713_200x150_fit_q90_box.jpg" width="183" height="150" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-11_hu374447e45a5ae5f23262c0c59f11dfd7_1377327_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-11_hu374447e45a5ae5f23262c0c59f11dfd7_1377327_200x150_fit_q90_box.jpg" width="180" height="150" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-12_huc9efa02f5648a1a9c80c4cc0b2503439_977819_2560x1440_fit_q90_box.jpg" data-gallery="" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-12_huc9efa02f5648a1a9c80c4cc0b2503439_977819_200x150_fit_q90_box.jpg" width="200" height="133" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
<figcaption>Contenido de la caja</figcaption>
</figure>
</div>
<p>El monitor posee unos biseles bastante amplios de 2 cm sin embargo al ser el marco negro con acabado mate no distraen mucho ni son molestos estéticamente. Aún así la tendencia es que estos biseles sean reducidos pero este modelo de monitor ya tiene algunos años.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-1_hu35beffe17ff722eac8777a7a200937ed_1175383_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-1_hu35beffe17ff722eac8777a7a200937ed_1175383_200x150_fit_q90_box.jpg" width="195" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-17_huf85a9313afdcca0a53ff5dff7f158cbc_910548_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-17_huf85a9313afdcca0a53ff5dff7f158cbc_910548_200x150_fit_q90_box.jpg" width="85" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-2_hu7fe92ed9a77a1705fc1de3c1c9ddad1a_318271_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-2_hu7fe92ed9a77a1705fc1de3c1c9ddad1a_318271_200x150_fit_q90_box.jpg" width="200" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-3_hudee5bdc267924a2e4879029a34a227db_280735_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-3_hudee5bdc267924a2e4879029a34a227db_280735_200x150_fit_q90_box.jpg" width="200" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-4_hub38fa695b3c84af3db03e3f62081ecd3_509017_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-4_hub38fa695b3c84af3db03e3f62081ecd3_509017_200x150_fit_q90_box.jpg" width="88" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-5_hu35beffe17ff722eac8777a7a200937ed_702417_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-5_hu35beffe17ff722eac8777a7a200937ed_702417_200x150_fit_q90_box.jpg" width="161" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-6_hu5f1c0d3ee872501368693d8d61ead517_1280967_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-6_hu5f1c0d3ee872501368693d8d61ead517_1280967_200x150_fit_q90_box.jpg" width="123" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-7_hu4c6b1cff5896835ba12bcdbd10a61154_479422_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-7_hu4c6b1cff5896835ba12bcdbd10a61154_479422_200x150_fit_q90_box.jpg" width="200" height="121" alt="Pantalla" title="Pantalla"  class="lozad "></a></p>
<figcaption>Pantalla</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-8_hu0c7cb0f17f93434647fb92fef31e27d6_1496173_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-8_hu0c7cb0f17f93434647fb92fef31e27d6_1496173_200x150_fit_q90_box.jpg" width="200" height="132" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-9_hub76190b181ca5123a23a87132492e009_898001_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-9_hub76190b181ca5123a23a87132492e009_898001_200x150_fit_q90_box.jpg" width="172" height="150" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-14_hu770e0593584802be6570325a809ba12d_269160_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-14_hu770e0593584802be6570325a809ba12d_269160_200x150_fit_q90_box.jpg" width="200" height="150" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-15_hu6fb8a55692bb8bbc1e65ec1b48849a6c_908665_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-15_hu6fb8a55692bb8bbc1e65ec1b48849a6c_908665_200x150_fit_q90_box.jpg" width="98" height="150" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-16_hu4251522e319ef23c1f84b3f061b5f6eb_299706_2560x1440_fit_q90_box.jpg" data-gallery="" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-16_hu4251522e319ef23c1f84b3f061b5f6eb_299706_200x150_fit_q90_box.jpg" width="200" height="150" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a></p>
<figcaption>Pantalla parte trasera</figcaption>
</figure>
</div>
<p>Este modelo de monitor incluye dos puertos USB 2.0 en la parte trasera, tiene utilidad en un ordenador de escritorio que esté debajo de la mesa para tener unos puertos USB más cerca del escritorio con un concentrador USB.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-10_hu6012b0274d1c2e4a93f4772d26698cfb_1198229_2560x1440_fit_q90_box.jpg" data-gallery="" title="Conexiones"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-10_hu6012b0274d1c2e4a93f4772d26698cfb_1198229_200x150_fit_q90_box.jpg" width="111" height="150" alt="Conexiones" title="Conexiones"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-11_huf31deadad9575a5a47cf159677746baf_683488_2560x1440_fit_q90_box.jpg" data-gallery="" title="Conexiones"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-11_huf31deadad9575a5a47cf159677746baf_683488_200x150_fit_q90_box.jpg" width="148" height="150" alt="Conexiones" title="Conexiones"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-12_hu89663704bf09451cb41f9a085b70511a_327929_2560x1440_fit_q90_box.jpg" data-gallery="" title="Conexiones"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-12_hu89663704bf09451cb41f9a085b70511a_327929_200x150_fit_q90_box.jpg" width="200" height="150" alt="Conexiones" title="Conexiones"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-13_hu4952d1a7aea5c6f00208016d52312f8b_388883_2560x1440_fit_q90_box.jpg" data-gallery="" title="Conexiones"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-13_hu4952d1a7aea5c6f00208016d52312f8b_388883_200x150_fit_q90_box.jpg" width="200" height="150" alt="Conexiones" title="Conexiones"  class="lozad "></a></p>
<figcaption>Conexiones</figcaption>
</figure>
</div>
<p>Los botones para ajustar los parámetros del monitor y OSD están detrás del monitor y el piloto indicador de encendido en un lateral de modo que en un ambiente de luz oscuro no molesta.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-1_hud9a53ae19cee97dc06a5f9c4da3df33a_1879740_2560x1440_fit_q90_box.jpg" data-gallery="" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-1_hud9a53ae19cee97dc06a5f9c4da3df33a_1879740_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-2_hu3587e460d2d3ce72477334026d729564_1648277_2560x1440_fit_q90_box.jpg" data-gallery="" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-2_hu3587e460d2d3ce72477334026d729564_1648277_200x150_fit_q90_box.jpg" width="200" height="142" alt="OSD" title="OSD"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-3_hu1ec171620fcb9e8476e22dc18178c8ae_988950_2560x1440_fit_q90_box.jpg" data-gallery="" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-3_hu1ec171620fcb9e8476e22dc18178c8ae_988950_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-4_huf5f5aba6d1e345ec47e20cf299c18c36_957019_2560x1440_fit_q90_box.jpg" data-gallery="" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-4_huf5f5aba6d1e345ec47e20cf299c18c36_957019_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-5_hufc25dae3825189cfbc6cdcfb2dc6653f_874112_2560x1440_fit_q90_box.jpg" data-gallery="" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-5_hufc25dae3825189cfbc6cdcfb2dc6653f_874112_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-6_hud549192c8b53bae4d7ce7cf85e5ee1fd_945105_2560x1440_fit_q90_box.jpg" data-gallery="" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-6_hud549192c8b53bae4d7ce7cf85e5ee1fd_945105_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-7_hua5708966aeee02c4db192c14ce614dd5_1369055_2560x1440_fit_q90_box.jpg" data-gallery="" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-7_hua5708966aeee02c4db192c14ce614dd5_1369055_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-8_hub8d6af5c5d53d57e27ac1be88028cbf4_344894_2560x1440_fit_q90_box.jpg" data-gallery="" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-8_hub8d6af5c5d53d57e27ac1be88028cbf4_344894_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a></p>
<figcaption>Configuración en pantalla (OSD)</figcaption>
</figure>
</div>
<p>Habitualmente estoy trabajando con un portátil MacBook Pro con pantalla retina y anteriormente he usado un Sony VAIO E 14P con panel TN de resolución 1600x900 y un monitor <a href="https://www.lg.com/hk_en/monitor/lg-E2351VR-home">LG 2351</a> también TN de resolución 1920x1080. Con respecto a los dos paneles TN que he usado hasta el momento la mejora es apreciable en sus ángulos de visión, colores más intensos, este es el motivo de requerir un panel tipo IPS. Si tengo que destacar algo del MacBook es la pantalla, la pantalla del BenQ cumple pero al no ser retina la diferencia es clara, aún conservando buena vista la definición del texto no es mala pero no llega a la calidad de la pantalla del MacBook, eso si en cuanto a colores no tiene nada que envidiar a la pantalla del Mac.</p>
<h3 id="análisis">Análisis</h3>
<p>Después de un tiempo de uso ya veré como son las impresiones, las primeras impresiones son buenas aunque viniendo de una pantalla retina no tanto. Si el texto resultase demasiado pequeño según las preferencias el MacBook permite reducir la resolución a 2048x1152, 1600x900, 1080p o 720p. Si se desea un monitor UHD que tenga HDMI 2.0 a 60 Hz y en esa resolución casi pensando en las 32”. Con el monitor externo no tengo que tener la pantalla tan cerca ni tener la cabeza agachada como con el portátil con lo que la postura corporal y de espalda es mejor para evitar cansancios y dolores que con el uso continuado pueden surgir, la verdad es que lo he notado ya desde el primer momento. Otra cosa que me gusta es que su fuente de alimentación está integrada con lo que no hay un transformador encima de la mesa y sus respectivos cables.</p>
<p>Con la resolución de 2560x1440 se puede visualizar más información al mismo tiempo y es más cómodo trabajar en una misma aplicación a pantalla completa o poder ver dos aplicaciones en primer plano. Se nota y mucho el espacio extra en la pantalla al trabajar con varias de las aplicaciones que uso habitualmente como editor de textos, navegador web y terminal.</p>
<p>La primera impresión es que un monitor de 27&quot; es grande pero ya me han comentado que es cuestión de acostumbrase y que dentro de poco me parecerá lo normal o incluso pequeño, de hecho ya hay monitores de 32&quot; para esa gente que aún lo quiere más grande. A la espera del Intel NUC tendré monitor que me parece grande pero un equipo que cabe en la palma de la mano. Comparado con la pantalla retina del MacBook las cosas no se ven tan definidas, un monitor de 27&quot; con pantalla retina no he visto salvo los Mac. Con 27&quot; en UHD tampoco se considera HiDPI y se queda en 163 dpi contra los 226 del Mac. Para que un monitor de 27&quot; tenga similar definición que con una pantalla retina la resolución debería ser del doble, 5120x2880, con esto alcanzaría unos 216 dpi y ya se consideraría HiDPI aunque habría que escalar la resolución en la configuración del ordenador ya que en la resolución nativa el texto se vería muy pequeño.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-1_hu401b9ddc58296b74eb4ee4f4571958d9_930052_2560x1440_fit_q90_box.jpg" data-gallery="" title="Imagen en la pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-1_hu401b9ddc58296b74eb4ee4f4571958d9_930052_200x150_fit_q90_box.jpg" width="200" height="150" alt="Imagen en la pantalla" title="Imagen en la pantalla"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-2_hu8c32db1ee813d06b996d270fbf4ad8db_835758_2560x1440_fit_q90_box.jpg" data-gallery="" title="Imagen en la pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-2_hu8c32db1ee813d06b996d270fbf4ad8db_835758_200x150_fit_q90_box.jpg" width="200" height="150" alt="Imagen en la pantalla" title="Imagen en la pantalla"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-3_hu59e0bb2772fe7415a47b097264530151_3075147_2560x1440_fit_q90_box.jpg" data-gallery="" title="Imagen en la pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-3_hu59e0bb2772fe7415a47b097264530151_3075147_200x150_fit_q90_box.jpg" width="200" height="150" alt="Imagen en la pantalla" title="Imagen en la pantalla"  class="lozad "></a></p>
<figcaption>Imagen en la pantalla</figcaption>
</figure>
</div>
<p>Este monitor tiene los botones de ajustes detrás del monitor marcados con unos indicadores en el frontal para encontrar su posición, en algún sitio se comenta que esto es algo incómodo para acertar a pulsar el botón adecuado. En lo que probado no me ha resultado nada incómodo y los botones me han parecido perfectos. Dado que el monitor tiene altavoces se le puede enviar sonido por el mismo cable HDMI que envía la señal de vídeo y luego con un jack de 3.5mm desde el monitor enviarlo a unos altavoces que den mejor calidad de sonido, esto me permite conectar un cable menos al ordenador y que la mesa no quede cubierta de cables. Aunque con esta opción al menos un Mac no permite ajustar el volumen hay que hacerlo desde los altavoces, por fortuna tengo unos altavoces con regulador de volumen.</p>
<p>Las fugas de luz o <em>bleeding</em> es otro de los posibles problemas de un monitor, por la tecnología de retoiluminación led hace que en condiciones oscuras los negros aparezcan como grises y que en los bordes de la pantalla se noten zonas un poco iluminadas al no bloquearse por completo la retoiluminación. Ya era consciente de este problema y no me sorprende que el que me ha llegado a mi tenga, no se si será mucho o poco porque no puedo comparar pero no me ha parecido excesivo. Sin píxeles muertos o vagos sin mucha fuga de luz me doy por contento. Por el momento tampoco he notado retención de imagen.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-4_hu1007699af4c68f3983c7d58a2194e36f_132667_2560x1440_fit_q90_box.jpg" data-gallery="" title="Bleeding en ambiente oscuro"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-4_hu1007699af4c68f3983c7d58a2194e36f_132667_200x150_fit_q90_box.jpg" width="200" height="150" alt="Bleeding en ambiente oscuro" title="Bleeding en ambiente oscuro"  class="lozad "></a></p>
<figcaption>Bleeding en ambiente oscuro</figcaption>
</figure>
</div>
<p>Con una resolución QHD hay más espacio que en una Full HD que agradecen los programadores, diseñadores y gente que pasa mucho tiempo delante de una pantalla trabajando en tareas relacionadas con múltiples documentos o aplicaciones. Por ejemplo, con un IDE es posible visualizar el código fuente de dos archivos o visualizar en primer plano el IDE, navegador y terminal al mismo tiempo. Las personas que trabajan con gráficos pueden visualizar imágenes más grandes ya sea en <a href="https://www.adobe.com/es/products/photoshop.html">Photoshop</a>, <a href="https://www.gimp.org/">GIMP</a>, <a href="https://inkscape.org/es/">Inkscape</a>, <a href="https://www.openshot.org/">OpenShot</a> y herramientas similares.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-5_hu80c91f4bcd45c1f509774c272454a4b3_2497995_2560x1440_fit_q90_box.jpg" data-gallery="" title="Espacio en resolución QHD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-5_hu80c91f4bcd45c1f509774c272454a4b3_2497995_200x150_fit_q90_box.jpg" width="200" height="113" alt="Espacio en resolución QHD" title="Espacio en resolución QHD"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-6_hu9f691abbd5d37e28f1f0a98cd6cdd9ee_428402_2560x1440_fit_box_3.png" data-gallery="" title="Espacio en resolución QHD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-6_hu9f691abbd5d37e28f1f0a98cd6cdd9ee_428402_200x150_fit_box_3.png" width="200" height="113" alt="Espacio en resolución QHD" title="Espacio en resolución QHD"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-7_hu22e0ba7774faf3602d24903c78848b09_932865_2560x1440_fit_box_3.png" data-gallery="" title="Espacio en resolución QHD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-7_hu22e0ba7774faf3602d24903c78848b09_932865_200x150_fit_box_3.png" width="200" height="113" alt="Espacio en resolución QHD" title="Espacio en resolución QHD"  class="lozad "></a></p>
<figcaption>Espacio en resolución QHD</figcaption>
</figure>
</div>
<p>En un futuro probablemente aparezcan nuevos monitores que soporten HDR y con resolución retina que supondrá otro salto en la calidad de la imagen. Me va a quedar la duda de si un monitor con resolución UHD de 27 pulgadas bajando la resolución sería una buena opción en cuanto a definición de texto, se suele comentar que no, usar una resolución escalada del panel no es lo mismo que en la resolución nativa pero me gustaría experimentarlo. Al menos en el Mac de resolución nativa 2560x1440 cambiar a 1600x900 se sigue viendo perfectamente el texto y en este BenQ de 27&quot; bajando la resolución no aprecio que el texto se vea peor. En cualquier caso los monitores UHD por el momento tienen un precio mayor, más del doble o al menos unos cientos de euros más según el modelo comparado, y este BenQ PD2700Q es de buena calidad acorde a su precio mayor que algunos otros QHD y que muchos Full HD pero de todas formas asequible para alguien que le da buen uso.</p>
<h3 id="detección-de-píxeles-muertos-o-vagos">Detección de píxeles muertos o vagos</h3>
<p>Es recomendable realizar una primera prueba al monitor para buscar píxeles muertos, que no se encienden, o vagos, que permanecen encendidos todo el tiempo con el color de un componente. El siguiente test se compone de varias imágenes en los colores básicos (negro, blanco, azul, rojo y verde) que visualizadas individualmente a pantalla completa muestran si algún pixel es defectuoso. Que haya un pixel defectuoso es molesto ya que basta para que haya solo uno y sepas donde está entre los casi 3 millones que tiene el monitor para que estés fijándote constantemente en él, más si se encuentra en el área central de la pantalla. También conviene informarse antes de comprar acerca de la garantía que ofrece cada fabricante respecto a los píxeles muertos, algunos toleran y no aceptan la devolución con cierto número de píxeles que permanecen encendidos, apagados o algún subpixel estropeado.</p>
<ul>
<li><a href="https://www.benq.com/en-us/support/downloads-faq/faq/product/application/dead-pixel-policy.html">BenQ LCD Monitor Pixel Policy</a></li>
<li><a href="https://jasonfarrell.com/misc/deadpixeltest.php">Imágenes de prueba para detectar píxeles muertos o vagos</a></li>
</ul>
<h3 id="vídeos-de-prueba">Vídeos de prueba</h3>
<p>Para probar la calidad del monitor (o televisor) en cuanto a colores o resolución <a href="https://www.youtube.com/results?search_query=4k&#43;video&#43;test">en YouTube hay varios</a>, uno de ellos de ejemplo es este pudiendo seleccionar la calidad desde 720p (HD), 1080p (FHD, 1K), 1440p (QHD, 2K) y 2160p (UHD, 4K). Lógicamente para apreciar las diferencias de calidad con respecto a una resolución más baja hay que tener un monitor o televisor que soporte la resolución más alta. Esto da una idea de como se ve una película, vídeo o imágenes. Las tareas ofimáticas no es lo mismo que ver vídeos, en UHD y usando escalado el texto gracias a su mayor PPI en el mismo tamaño que un QHD se ve más definido y claro. Sin embargo, el escalado aún presenta problemas ya que no todas las aplicaciones está preparadas.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/LXb3EKWsInQ" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="_switch_-hdmi-y-cables-monitor-con-el-ordenador-y-consola"><em>Switch</em> HDMI y cables, monitor con el ordenador y consola</h3>
<p>Si el monitor es compartido tanto por el <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">ordenador como un Intel NUC</a> como por <a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/">una consola como la PlayStation 4 como muestro en su desempaquetado</a> es necesario un adaptador o <em>switch</em> HDMI de múltiples entradas y una salida para usar ambos sin necesidad de conectar y desconectar cables, no son caros y ofrecen mucha comodidad, con un botón se alterna entre la entrada del ordenador y la consola, además detecta la entrada y se cambia automáticamente.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08QCYXNPC&amp;linkId=ecbc49eaab7716ebc63e4e7c7b7b91b6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00SX0QKUS&amp;linkId=f2015c3d24868b088b801dc03f6638de" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07RY2X9LF&amp;linkId=f5c9c155adf728e8d3217ab7e723d14c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00NO73MUQ&amp;linkId=3954e70941543ecb9ada5c76d26024e9" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="soporte-vesa">Soporte VESA</h3>
<p>En todos los modelos he buscado que sea compatible con la norma VESA 100x100 por si en un futuro lo pongo en uno soporte de modo que el pie no ocupe sitio en la mesa. La peana de algunos monitores no soportan ajustes en altura, inclinación, ajuste laterales o modo vertical pero con un soporte compatible con VESA se puede suplir la carencia además de evitar que la peana ocupe espacio. Con un soporte tienen la ventaja de que se puede ajustar la posición del monitor muy fácilmente. Estos soportes funcionan con una mordaza para anclarlos a la mesa.</p>
<p>Algunos soportes compatibles con VESA que he mirado son los siguientes.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B079YQQDT2&amp;linkId=de98aa0a1a642d8b7b8bd36c4ca7ca4f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B079YSGQKW&amp;linkId=d21eaafcd8bdff06c18668e60d08e71a" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="_hub_-de-puertos-usb"><em>Hub</em> de puertos USB</h3>
<p>Teniendo el monitor un <em>hub</em> USB 2.0 no merece la pena un <em>hub</em> externo USB 3.0 o 3.1, sin embargo, con otros monitores puede ser una opción como con el PD2500Q o el PD2700U. Los discos duros externos que tengo son USB 2.0 y por limitaciones del disco duro si fuesen 3.0 el rendimiento adicional no se si sería mucho mayor. Hay concentradores de 4, 7 y 10 puertos pero con esta cantidad de puertos es recomendable que sea alimentado sobre todo si se conectan discos duros externos sin alimentación propia, también hay algunos con interruptor individual de encendido por puerto.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B019BW4RT2&amp;linkId=3c197694911d2902b24886d313122a13" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B019BW4RTM&amp;linkId=a80af86538931b0679c7aa4299ee5595" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B087M6Z5TJ&amp;linkId=2b93be70743c91baf5729d42538c54f9" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.sven.de/dpi/">Calculadora DPI y PPI</a></li>
<li><a href="https://en.wikipedia.org/wiki/HDMI#Version_comparison">HDMI Version Comparison</a></li>
<li><a href="https://es.wikipedia.org/wiki/High-Definition_Multimedia_Interface#HDMI_1.4">HDMI 1.4</a></li>
<li><a href="https://es.wikipedia.org/wiki/High-Definition_Multimedia_Interface#HDMI_2.0">HDMI 2.0</a></li>
<li><a href="http://www.tftcentral.co.uk">TFT Central</a></li>
<li><a href="http://www.lagom.nl/lcd-test/">LDC Monitor Test Images</a></li>
<li><a href="https://www.pchardwarehelp.com/guides/backlight-bleeding.php">Backlight Bleeding</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/</id>
        <title>Sun Microsystems cae, la adquiere Oracle</title>
        <updated>2018-10-19T11:00:00+02:00</updated>
        <published>2018-10-19T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/sun-microsystems.svg" width="300" height="131" alt="Sun Microsystems" title="Sun Microsystems"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/oracle.svg" width="300" height="42" alt="Oracle" title="Oracle"  class=""></p>
</div>
<p>Era enero del 2010 y se anunciaba que <a href="https://www.oracle.com/">Oracle</a> adquiría <a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun</a> (<em>Stanford University Network</em>) por unos 7400 millones de dólares. Sun Microsystems era asimilada por uno de los grandes entre el mundo empresarial que eliminaba a uno de sus competidores. Fue un hecho importante debido a varias de las tecnologías que había desarrollado Sun y poseía como aún a día de hoy uno de los lenguajes más populares para el desarrollo de software, Java, y otras tecnologías importantes que había adquirido hace no tanto tiempo como la base de datos <a href="https://www.mysql.com/">MySQL</a> competencia de Oracle.</p>
<p>Otras tecnologías de Sun relevantes eran el sistema operativo <a href="https://en.wikipedia.org/wiki/Solaris_%28operating_system%29">Solaris</a>, la tecnologías de depuración <a href="https://en.wikipedia.org/wiki/DTrace">DTraze</a>, el avanzado sistema de archivos <a href="https://en.wikipedia.org/wiki/ZFS">ZFS</a> utilizando a día de hoy en los sistemas <a href="https://es.wikipedia.org/wiki/Berkeley_Software_Distribution">BSD</a>, el paquete ofimático OpenOffice predecesora de <a href="https://www.libreoffice.org/">LibreOffice</a>, la herramienta de automatización de proyectos Hudson también predecesora de <a href="https://jenkins.io/">Jenkins</a>, el software de virtualización <a href="https://www.virtualbox.org/">VirtualBox</a> o la plataforma de microprocesadores <a href="https://en.wikipedia.org/wiki/SPARC">Sparc</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-microsystems-headquarters_hu0047ae3704eff84da97a4c805c18df06_114546_2560x1440_fit_q90_box.jpg" data-gallery="" title="Sun Microsystems Headquarters"><img src="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-microsystems-headquarters_hu0047ae3704eff84da97a4c805c18df06_114546_200x150_fit_q90_box.jpg" width="200" height="138" alt="Sun Microsystems Headquarters" title="Sun Microsystems Headquarters"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-microsystems-workstation_hud75c3683ebd46266a26af929273fab5a_230774_2560x1440_fit_q90_box.jpg" data-gallery="" title="Sun Microsystems Workstation"><img src="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-microsystems-workstation_hud75c3683ebd46266a26af929273fab5a_230774_200x150_fit_q90_box.jpg" width="200" height="133" alt="Sun Microsystems Workstation" title="Sun Microsystems Workstation"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-ultrasparc_hu084f1de89712954340ab17b0a1802bb0_54421_2560x1440_fit_q90_box.jpg" data-gallery="" title="Sun Microsystems sparc"><img src="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-ultrasparc_hu084f1de89712954340ab17b0a1802bb0_54421_200x150_fit_q90_box.jpg" width="150" height="150" alt="Sun Microsystems sparc" title="Sun Microsystems sparc"  class="lozad "></a></p>
</figure>
</div>
<p>La adquisición de Oracle generó dudas por la cultura de empresa más cerrada que la que tenía Sun que contribuyó e influenció notablemente en el mundo tecnológico aún a día de hoy. Después de unos meses de la adquisición varias personas salieron de la compañía como <a href="https://en.wikipedia.org/wiki/James_Gosling">James Gosling</a> creador de Java, <a href="https://en.wikipedia.org/wiki/Tim_Bray">Tim Bray</a> creador de formato XML, <a href="https://en.wikipedia.org/wiki/Kohsuke_Kawaguchi">Kohsuke Kawaguchi</a> desarrollador principal de Hudson o <a href="https://en.wikipedia.org/wiki/Bryan_Cantrill">Bryan Cantrill</a> creador de DTrace.</p>
<p>¿Cuál fue el error o errores de Sun Microsystems para que teniendo unas tecnologías tan importantes tuviese problemas económicos como para que fuese vendida? Fue una de las empresas más afectadas por el estallido de la burbuja de las punto com y una pérdida importante de clientes grandes. Posiblemente el fallo fue que aún poseyendo grandes tecnologías y habiendo realizado importantes adquisiciones, algunas de dudoso acierto y muy caras, no fue capaz de rentabilizarlas económicamente, quizá que GNU/Linux le estuviese haciendo competencia al sistema Solaris u opciones más económicas como la arquitectura x86 a Sparc.</p>
<p>Oracle se ha deshecho muchas de las tecnologías a las que creía no sacar rentabilidad, otras como Java las ha seguido desarrollando creo en una buena dirección con la publicación de Java 7 y más tarde incluyendo cambios más importantes con <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">Java 8</a>, más recientemente <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java-9-los-modulos/">Java 9</a>, <a href="https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/">10</a> y <a href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/">11</a>. Con Java EE ha dado también un paso importante para proporcionarle un modelo de desarrollo más abierto y rápido traspasando el desarrollo a la fundación Eclipse y adoptando un nuevo nombre de <a href="https://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE</a> a <a href="https://jakarta.ee/">Jakarta EE</a>. Algunas otras conserva como VirtualBox con buena salud.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="300" height="200" alt="Java" title="Java"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/solaris.svg" width="300" height="200" alt="Solaris" title="Solaris"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/sparc.svg" width="300" height="200" alt="Sparc" title="Sparc"  class="lozad "></p>
</figure>
</div>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/libreoffice.svg" width="300" height="200" alt="LibreOffice" title="LibreOffice"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/mysql.svg" width="150" height="100" alt="MySQL" title="MySQL"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/virtualbox.svg" width="300" height="200" alt="VirtualBox" title="VirtualBox"  class="lozad "></p>
</figure>
</div>
<p>En el artículo <a href="https://www.wired.com/1995/12/java-saga/">The Java Saga</a> se comentan varios aspectos importantes de Java como que inicialmente este lenguaje estaba orientado a la electrónica donde la fiabilidad es más importante que la rapidez, C++ no era lo suficientemente fiable para lo que Gosling tenía en mente. Diseñaron la primera tableta electrónica, aún así pasa a ser la base de la emergente web para hacerla interactiva. Otro artículo interesante es <a href="https://www.networkworld.com/article/2268096/servers/the-downfall-of-sun-microsystems.html">The downfall of Sun Microsystems</a> en el que precisamente se comenta la falta de rentabilizar varias de sus tecnologías y la crisis de las punto com.</p>
<p>En <a href="https://www.britannica.com/topic/Sun-Microsystems-Inc">Sun Microsystems, Inc.</a> se indica que parte del éxito de Java se atribuye a la frase <em>«write once, run anywhere»</em> significando que un programa escrito en Java no tiene que se reescrito para cada sistema operativo de cada computadora. Si es ejecutado en una computadora UNIX, debería ejecutarse en una máquina Windows o Macintosh mediante el uso de la máquina virtual de Java o JVM. La <em>Java Virtual Machine</em> se proporcionaba con UNIX, Macintosh y otros sistemas asi como navegadores web como Netscape o Internet Explorer. Esa versatilidad hizo de Java un lenguaje popular al escribir aplicaciones para la web y para varios observadores disminuyendo la importancia de los sistemas operativos.</p>
<p>En 1997 Microsoft viéndose amenazada y haciendo uso de su técnica <a href="https://en.wikipedia.org/wiki/Embrace%2C_extend%2C_and_extinguish">adoptar, extender y extinguir</a> publicó una JVM que era incompatible con otras JVMs rompiendo de forma efectiva la promesa <em>«write once, run anywhere»</em> de los programas Java. En noviembre de 1998 la justicia instó a Microsoft a no distribuir más copias de su versión de Java.</p>
<p>En los artículos <a href="https://mailchi.mp/bonillaware/sun-microsystems-1?e=ccf70eee59">La historia de Sun Microsystems, 1ª Parte: Network is the computer</a> y <a href="https://mailchi.mp/bonillaware/sun-microsystems-2?e=ccf70eee59">La historia de Sun Microsystems. 2ª Parte: Write Once. Run Everywhere</a> se hace un buen repaso de la historia de esta empresa desde sus inicios e hitos más importantes asi como las personas que intervinieron en ellos pasando por los malos momentos hasta la finalmente adquisición por Oracle. Otro artículo y sus comentarios interesante es <a href="https://www.xataka.com/historia-tecnologica/asi-es-como-oracle-ha-sometido-a-sun-microsystems-a-una-muerte-larga-y-agonica">Así es como Oracle ha sometido a Sun Microsystems a una muerte larga y agónica</a>.</p>
<p>Por afinidad hacia el <em>open source</em> con su cultura de empresa la que hubiese preferido que adquiriese Sun es <a href="https://www.redhat.com/es">Red Hat</a> una compañía que ha demostrado que con el software libre se puede hacer negocio además de contribuir a la comunidad beneficiándose de ella al mismo tiempo, en el año 2012 alcanzó la cifra de 1000 millones de dólares de facturación y 2000 millones en el 2018. Sin embargo, no hubiese sido posible en ese momento porque Red Hat no era lo suficientemente grande como para hacer una adquisición de tal tamaño para con Sun Microsystems.</p>
<p>Sun Microsystems dejó una larga herencia que dura aún en día y frases legendarias y visionarias como <em>«the network is the computer»</em> atribuida a <a href="https://en.wikipedia.org/wiki/John_Gage">John Gage</a> o <em>«write once, run anywhere»</em> de Java.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</a></li>
<li><a href="https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle">Sun acquisition by Oracle</a></li>
<li><a href="https://en.wikipedia.org/wiki/Write_once">Write once, run anywhere</a></li>
<li><a href="https://gist.github.com/dbonillaf/d62dc83bc3747cccb0d885c9d4ad76f5">Links related with the history of Sun Microsystems</a></li>
<li><a href="https://www.arnnet.com.au/slideshow/334210/pictures-remember-rise-fall-sun-microsystems/">The rise and fall of Sun Microsystems</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/</id>
        <title>Proxy para microservicios con Spring Cloud Netflix y Zuul</title>
        <updated>2018-10-13T23:00:00+02:00</updated>
        <published>2018-10-13T23:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Teniendo una buen número de microservicios con múltiples instancias ofreciendo cada uno una API y en una ubicación diferente para simplificar la visión de los que actúen clientes de los microservicios se puede utilizar un <em>proxy</em>. Con un <em>proxy</em> es posible centralizar todas las peticiones, que sea éste el encargado de conocer la ubicación de todas las instancias de los microservicios y de hacer la llamada allí donde se encuentre cada una de ellas.</p>
<p>Entre las varias funcionalidades que proporcionar el proyecto <a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix</a> es esta de <em>proxy</em> mediante <a href="https://github.com/Netflix/zuul">Zuul</a>. Para hacer de <em>proxy</em> Zuul necesita tener una correspondencia entre URLs y servicios que realmente proporcionan la funcionalidad, una forma que tiene Zuul de conocer la ubicación de las instancias es utilizando el servicio de registro y descubrimiento <a href="https://github.com/Netflix/eureka">Eureka</a>. Además, Zuul como cliente de los microservicios posee la funcionalidad de <a href="https://github.com/Netflix/Hystrix">Hystrix</a> que implementa el patrón <em>circuit breaker</em> para tolerancia a fallos, <a href="https://github.com/Netflix/ribbon">Ribbon</a> para hacer balanceo de carga entre varias instancias de los microservicios a nivel de servidor además de reintentos cuando una instancia falla.</p>
<p>En el ejemplo que he utilizado para esta <a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">serie de artículos sobre Spring Cloud</a> hay un servicio que por defecto se inicia en el puerto <em>8080</em> y ofrece un <em>endpoint</em> <em>/</em> que devuelve un mensaje. Para crear un microservicio <em>proxy</em> con Zuul hay que crear una aplicación <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> anotar la clase principal con la anotación <em>@EnableZuulProxy</em> y proporcionar la configuración para la correspondencia de rutas y microservicios, además de las propiedades para hacer reintentos en caso de que un microservicio falle y de <em>timeouts</em> en caso de que se comporte no como se espera en cuanto tiempos de respuesta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.proxy</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableDiscoveryClient</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableZuulProxy</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main (zuul).java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.12.RELEASE&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.proxy.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.1.12.RELEASE&#39;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2&#39;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//implementation(&#39;org.springframework.cloud:spring-cloud-starter-bus-amqp&#39;, excludeSpringBootStarterLogging)&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-zuul&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.retry:spring-retry:1.2.2.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Se puede establecer un tiempo máximo para establecer la conexión, de tiempo de petición, el número de reintentos en la misma instancia si falla o en otro número de instancias, el número máximo de conexiones y el número máximo de conexiones al mismo <em>host</em>. Todas ellas definibles en cada servicio de forma individual bajo las propiedades <em>hystrix.command.service</em> y <em>service.ribbon</em> donde <em>service</em> es el identificativo del servicio. Las rutas se indican bajo la propiedad <em>zuul.routes</em> con la relación identificativo del servicio y <em>path</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8095}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">zuul</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">routes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;/service/**&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">retryable</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">hystrix</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">command</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">service</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">execution</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">isolation</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">thread</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">timeoutInMilliseconds</span><span class="p">:</span><span class="w"> </span><span class="m">20000</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">circuitBreaker</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">requestVolumeThreshold</span><span class="p">:</span><span class="w"> </span><span class="m">4</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">errorThresholdPercentage</span><span class="p">:</span><span class="w"> </span><span class="m">50</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">service</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ribbon</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ConnectTimeout</span><span class="p">:</span><span class="w"> </span><span class="m">1000</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ReadTimeout</span><span class="p">:</span><span class="w"> </span><span class="m">2000</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">MaxTotalHttpConnections</span><span class="p">:</span><span class="w"> </span><span class="m">100</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">MaxConnectionsPerHost</span><span class="p">:</span><span class="w"> </span><span class="m">100</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">MaxAutoRetries</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">MaxAutoRetriesNextServer</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ServerListRefreshInterval</span><span class="p">:</span><span class="w"> </span><span class="m">2000</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">OkToRetryOnAllOperations</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">retryableStatusCodes</span><span class="p">:</span><span class="w"> </span><span class="m">500</span><span class="p">,</span><span class="m">404</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>proxy.yml</span>
    </div>
</div>
<p>Dado que Zuul es un <em>proxy</em> para múltiples instancias de microservicios a cada microservicio hay que darle una ruta, cuando Zuul realiza la llamada a una instancia del microservicio se encarga de omitirla. En el ejemplo, la ruta en Zuul <em>/service/**</em> está asociada al microservicio <em>service</em> pero el servicio <em>service</em> ofrece su <em>endpoint</em> en <em>/</em>, Zuul se encarga de omitir la parte de la ruta para el <em>proxy</em> y hace la llamada a la ruta <em>/</em> como espera el microservicio.</p>
<p>Lógicamente los clientes deben contactar con el <em>proxy</em> en vez de con el microservicio directamente. Arrancado el servicio de descubrimiento y registro Eureka, el servidor de configuración de Spring Cloud, dos instancias del servicio y el <em>proxy</em> con Zuul haciendo las llamadas al <em>proxy</em> se observa que se obtiene el resultado del microservicio. Como en el ejemplo hay varias instancias del servicio Zuul realiza balanceo de carga entre ellas con Ribbon utilizando la política <em>round-robin</em> y el mensaje es diferente en cada una de las respuestas según la instancia invocada. Con Zuul además se consigue balanceo de carga a nivel de servidor que Ribbon solo ofrece a nivel de cliente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableDiscoveryClient</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableCircuitBreaker</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableHystrixDashboard</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">ClientService</span> <span class="n">service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">ProxyService</span> <span class="n">proxy</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.password&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.service&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getService</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">20000</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">String</span> <span class="n">response</span> <span class="o">=</span> <span class="o">(</span><span class="n">configuration</span><span class="o">.</span><span class="na">getService</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">))</span> <span class="o">?</span> <span class="n">service</span><span class="o">.</span><span class="na">get</span><span class="o">()</span> <span class="o">:</span> <span class="n">proxy</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service response: %s%n&#34;</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">100</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main (client).java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProxyService</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixCommand</span><span class="o">(</span><span class="n">fallbackMethod</span> <span class="o">=</span> <span class="s">&#34;getFallback&#34;</span><span class="o">,</span> <span class="n">commandProperties</span> <span class="o">=</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.requestVolumeThreshold&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;4&#34;</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.errorThresholdPercentage&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;50&#34;</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;execution.isolation.thread.timeoutInMilliseconds&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;25000&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">})</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;proxy&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">resource</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s%s&#34;</span><span class="o">,</span> <span class="n">uri</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="s">&#34;/service&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Client</span><span class="o">.</span><span class="na">create</span><span class="o">().</span><span class="na">resource</span><span class="o">(</span><span class="n">resource</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProxyService.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8081&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8082&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew proxy:run --args<span class="o">=</span><span class="s2">&#34;--port=8085&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew client:run --args<span class="o">=</span><span class="s2">&#34;--service=proxy&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run.sh</span>
    </div>
</div>
<p>Las URLs del servicio en el microservicio y en el <em>proxy</em> son.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Microservicio</span>&#10;</span></span><span class="line"><span class="cl">$ curl http://192.168.1.4:8080/&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="c1"># Microservicio en el proxy</span>&#10;</span></span><span class="line"><span class="cl">$ curl http://192.168.1.4:8085/service&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>El cliente de ejemplo realiza peticiones al <em>proxy</em>, en la salida se muestra el resultado del balanceo de carga cuando hay varias instancias, cuando se añade una nueva instancia entra a formar parte del balanceo de carga. Otro beneficio de Zuul es que ofrece la funcionalidad de reintentos de modo que si una instancia de un servicio falla la petición se reintenta en otra. En el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resiliencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/">Balanceo de carga y resiliencia en un microservicio con Spring Cloud Netflix y Ribbon</a> usando solo Ribbon se observaba que cuando una instancia falla se le siguen haciendo peticiones hasta que la lista de instancias del servicio en Eureka se actualiza quitando la fallida, con Hystrix se obtiene la respuesta <em>fallback</em> pero no se evita completamente el error. Zuul puede ocultar el error provocado por una instancia que falla reintentado la petición en la misma nuevamente, en otra u otras instancias según se configure. El comportamiento con Zuul cuando una instancia falla se puede comparar con el comportamiento incluido en el <a href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resiliencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/">artículo anterior usando en el cliente los microservicios directamente</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">$ ./gradlew client:run --args=&#34;--service=proxy&#34;&#10;</span></span><span class="line"><span class="cl">... # initially two service instances (8080, 8081)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">... # new service instance, ./gradlew service:run --args=&#34;--port=8082&#34;&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8082/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8082/, value)&#10;</span></span><span class="line"><span class="cl">... # kill service instance (8082), Ctrl+C&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Zuul además es capaz de proporciona otras muchas funcionalidades como:</p>
<ul>
<li>Autenticación</li>
<li>Seguridad</li>
<li>Recolección de métricas y monitorización</li>
<li>Pruebas de carga</li>
<li>Pruebas de verificación o <em>canary testing</em></li>
<li>Enrutado dinámico</li>
<li>Migración de servicio</li>
<li>Abandono de carga o <em>load shedding</em></li>
<li>Manejo de respuesta estática</li>
<li>Gestión de tráfico active/active</li>
</ul>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew-run.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resiliencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/</id>
        <title>Balanceo de carga y resiliencia en un microservicio con Spring Cloud Netflix y Ribbon</title>
        <updated>2018-10-12T20:46:00+02:00</updated>
        <published>2018-10-12T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resiliencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Un servicio que recibe numerosas peticiones o es crítico para el funcionamiento de una aplicación es necesario escalarlo o crear múltiples instancias de él para atender toda la carga que se demanda o para que en caso de que una instancia falle haya otras disponibles que funcionen correctamente para atender las peticiones.</p>
<p>En este entorno de múltiples instancias se hace necesario un servicio de registro y descubrimiento que usando <a href="https://spring.io/">Spring</a>, <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> y <a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix</a> una implementación es <a href="https://github.com/Netflix/eureka">Eureka</a>. Una vez descubiertas las instancias que hay del servicio es necesario hacer balanceo de carga para conseguir escalabilidad y tolerancia a fallos, en el mismo proyecto de Spring Cloud Netflix para realizar balanceo de carga en el cliente se ofrece <a href="https://github.com/Netflix/ribbon">Ribbon</a>.</p>
<p>Hay varias formas de usar Ribbon una de ellas es con lo que denominan <em>feign client</em>, con <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/client/RestTemplate.html">Spring RestTemplate</a> o directamente con <em>LoadBalancerClient</em> que es la que muestro en este artículo. Este cliente con Ribbon obtiene del servicio de registro y descubrimiento la lista inicial de instancias de un servicios registrado con sus ubicaciones siendo el <em>host</em> en el que se encuentran y el puerto en el que ofrecen su servicio. Con esta lista y el estado de los servicios se realiza el balanceo de carga. Sin embargo, dada la naturaleza de los microservicios se pueden añadir con posterioridad más instancias de un servicio o algunas pueden empezar fallar, Ribbon se encarga de mantener actualizada la lista de instancias de un servicio.</p>
<p>Combinado con <a href="https://github.com/Netflix/Hystrix">Hystrix</a> un ejemplo de cliente que hace peticiones a un servicio es el siguiente. Para demostrar su funcionamiento el cliente realiza varias llamadas a un servicio cada unos pocos milisegundos balanceando la carga entre las instancias que existan. Si con posterioridad se añade una nueva instancia del servicio Ribbon al cabo de un tiempo de que haya sido iniciada lo añadirá a la lista y empieza a seleccionarla para enviarle peticiones. Si una instancia falla hasta que Eureka no marca la instancia como fuera de servicio y el cliente no actualiza su lista de instancias en el ejemplo de cliente seguirá enviando peticiones a la instancia fuera de servicio y con Hystrix utilizando el método de <em>fallback</em> como respuesta.</p>
<p>Ante el fallo de una instancia para evitar que temporalmente el cliente empiece a fallar cuando le redirige una petición este puede reintentar las peticiones en otra instancia, esta funcionalidad se proporciona con <a href="https://github.com/spring-projects/spring-retry">Spring Retry</a> o utilizando <a href="https://github.com/Netflix/zuul">Zuul</a> como <em>proxy</em>.</p>
<p>El cliente usa la clase <em>LoadBalancerClient</em> que en cada invocación del método <em>choose()</em> devuelve una instancia diferente de servicio realizando balanceo de carga utilizando el método <em>round-robin</em>. La clase <em>ServiceInstance</em> proporciona la URL de la instancia del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableDiscoveryClient</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableCircuitBreaker</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableHystrixDashboard</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">ClientService</span> <span class="n">service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.password&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">20000</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">String</span> <span class="n">response</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service response: %s%n&#34;</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">100</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.net.URI</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClientService</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixCommand</span><span class="o">(</span><span class="n">fallbackMethod</span> <span class="o">=</span> <span class="s">&#34;getFallback&#34;</span><span class="o">,</span> <span class="n">commandProperties</span> <span class="o">=</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.requestVolumeThreshold&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;4&#34;</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.errorThresholdPercentage&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;50&#34;</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;execution.isolation.thread.timeoutInMilliseconds&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;1000&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">})</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Client</span><span class="o">.</span><span class="na">create</span><span class="o">().</span><span class="na">resource</span><span class="o">(</span><span class="n">uri</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ClientService.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.12.RELEASE&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.client.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.1.12.RELEASE&#39;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2&#39;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jersey.core:jersey-client:2.27&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jersey.inject:jersey-hk2:2.27&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>La clase del servicio y los comandos para iniciar el servicio de registro y descubrimiento, el servicio de configuración, las instancias del servicio en diferentes puertos y el cliente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RestController</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Timeout simulation&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">//Thread.sleep(random.nextInt(2000));&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (%s, %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8081&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8082&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew client:run</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run.sh</span>
    </div>
</div>
<p>Esta es la salida y funcionamiento del cliente realizando balanceado la carga entre las múltiples instancias y que ocurre cuando se añade una nueva o una empieza a fallar y se elimina de la lista.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">$ ./gradlew client:run&#10;</span></span><span class="line"><span class="cl">... # initially two service instances (8080, 8081)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">... # new service instance, ./gradlew service:run --args=&#34;--port=8082&#34;&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8082/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8082/, value)&#10;</span></span><span class="line"><span class="cl">... # kill service instance (8082), Ctrl+C&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">... # service instances list is updated&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8081/, value)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p><a href="https://github.com/Netflix/ribbon/blob/master/ribbon-core/src/main/java/com/netflix/client/config/CommonClientConfigKey.java">Ribbon posee numerosas propiedades de configuración</a> a nivel global para todos los clientes de servicios o de forma específica para cada servicio ya sea con la anotación <em>@RibbonClient</em> o mediante la configuración en archivos externos de Spring Boot. Algunas propiedades de configuración interesantes son las de <em>timeout</em> que permiten que un cliente no agote sus recursos esperando a que a los servicios que llama si tardan en responder y a su vez el cliente actuando de servidor recibe muchas llamadas de sus clientes. En un comando de Hystrix también se puede especificar un <em>timeout</em> de modo que si se realizan reintentos el tiempo total para Hystrix deberá ser superior que el tiempo total de todos los posibles reintentos teniendo en cuenta el <em>timeout</em> del cliente con Ribbon. Usando el cliente HTTP <a href="https://jersey.github.io/">Jersey</a> como en este caso también pueden establecerse <a href="https://jersey.github.io/apidocs/1.19.1/jersey/com/sun/jersey/api/client/Client.html"><em>timeouts</em> para una petición</a>.</p>
<p>El balanceo de carga que con Ribbon se realiza en el cliente es más sencillo que realizar el balanceo de carga en el servidor ya que no requiere una pieza más en la infraestructura pero requiere que el cliente tenga algo de lógica para hacer el balanceo de carga.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/</id>
        <title>Tolerancia a fallos en un cliente de microservicio con Spring Cloud Netflix y Hystrix</title>
        <updated>2019-10-10T19:00:00+01:00</updated>
        <published>2018-10-05T20:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Los microservicios son independientes unos de otros y se comunican mediante operaciones de red. Dado que las operaciones se realizan a través de un medio no confiable como la red, dada su naturaleza efímera y a que pueden fallar en los microservicios es importante que los clientes estén preparados ante posibles fallos.</p>
<p>Un patrón o técnica que se suele emplear es el de <a href="https://www.martinfowler.com/bliki/CircuitBreaker.html">Circuit Breaker</a>, en Java y con <a href="https://spring.io/">Spring</a> se ofrece en el proyecto <a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix</a> mediante <a href="https://github.com/Netflix/Hystrix">Hystrix</a> y <a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica">Javanica</a>. Este patrón soluciona dos problemas cuando un microservicio del que se depende falla y hace al microservicio que lo usa tolerante a fallos.</p>
<ul>
<li>Uno es que cuando un microservicio empieza a fallar es necesario dejar de hacerle peticiones para permitirle recuperarse si está saturado que provoca esos fallos. Cuando ocurre un fallo es posible realizar una acción en sustitución de la llamada al microservicio y devolver un valor alternativo como medida paliativa y hacer que el microsevicio afectado tenga la posibilidad de seguir ofreciendo su servicio aunque sea de forma degradada.</li>
<li>Otro problema es que el microservicio aunque no falle tarde demasiado en responder, se puede establecer un <em>timeout</em> que si se supera se deja de esperar e igualmente se realiza la acción de sustitución lo que evita que los microservicios que usan uno que tarda demasiado en responder agoten sus recursos y empiecen a fallar o tardar demasiado también.</li>
</ul>
<p>En ambos casos se evita que la cadena de microservicios empiece a fallar y con ello sistema completo. El proyecto <a href="https://dzone.com/articles/resilience4j-and-sentinel-two-open-source-alternat">Hystrix ha dejado de desarrollarse de forma activa</a> tal como aparece en el propio <a href="https://github.com/Netflix/Hystrix/blob/master/README.md">README.md</a> y como alternativa se recomienda usar <a href="https://github.com/resilience4j/resilience4j">Resilience4j</a> que además está diseñado para Java 8 y la programación funcional, en el artículo <a href="https://picodotdev.github.io/blog-bitix/2019/08/implementar-tolerancia-a-fallos-con-resilience4j/">Implementar tolerancia a fallos con Resilience4j</a> muestro su implementación.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix_hub9140d7d7b18b1dc3937691a78958e9a_86330_2560x1440_fit_box_3.png" width="640" height="225" alt="Hystrix" title="Hystrix"  class="lozad "></p>
</figure>
</div>
<p>El patrón <em>circuit breaker</em> se denomina así ya que implementa una lógica similar a un circuito eléctrico. El circuito en su estado normal está cerrado y se realizan las llamadas al microservicio servidor. Si el microservicio servidor empieza a fallar se llama a la acción alternativa con su valor, si se supera un umbral de errores el circuito pasa a estado abierto y se dejan de hacer llamadas al microservicio servidor. Cada cierto tiempo definido se realiza una llamada al servicio servidor para comprobar su estado de forma que si responde correctamente el circuito pasa a estado cerrado nuevamente y las siguientes llamadas se realizan al microservicio servidor dejándose de utilizar la acción alternativa.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-diagram_hu4845d342695fc4ba4f8fa8d72c767f7b_90482_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama del patrón circuit breaker"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-diagram_hu4845d342695fc4ba4f8fa8d72c767f7b_90482_300x200_fit_box_3.png" width="127" height="200" alt="Diagrama del patrón circuit breaker" title="Diagrama del patrón circuit breaker"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-states_hu56e2a01b6636c9453b9193ae50db8c8e_29040_2560x1440_fit_box_3.png" data-gallery="" title="Diagrama de estados"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-states_hu56e2a01b6636c9453b9193ae50db8c8e_29040_300x200_fit_box_3.png" width="222" height="200" alt="Diagrama de estados" title="Diagrama de estados"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix-fallback_hu341ff0d18f5e14bb81f44a2d6d1769ba_44880_2560x1440_fit_box_3.png" data-gallery="" title="Fallback del patrón circuit breaker"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix-fallback_hu341ff0d18f5e14bb81f44a2d6d1769ba_44880_300x200_fit_box_3.png" width="300" height="197" alt="Fallback del patrón circuit breaker" title="Fallback del patrón circuit breaker"  class="lozad "></a></p>
<figcaption>Diagrama del patrón circuit breaker, de estados y método fallback</figcaption>
</figure>
</div>
<p>Para utilizar Hystrix como implementación del patrón <em>circuit breaker</em> en una aplicación Java con <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> el método que realiza la llamada al microservicio servidor ha de  encapsularse en un método anotado con la anotación <a href="https://netflix.github.io/Hystrix/javadoc/com/netflix/hystrix/HystrixCommand.html">@HystrixCommand</a>, como parámetro se indica un método con la acción alternativa o <em>fallback</em> que obtiene un valor en los fallos. También se puede indicar el <em>tiemout</em> de espera antes de considerar que la llamada ha fallado con la propiedad <em>execution.isolation.thread.timeoutInMilliseconds</em>. Igualmente se pueden indicar los valores para abrir el circuito con <em>circuitBreaker.requestVolumeThreshold</em> y <em>circuitBreaker.errorThresholdPercentage</em>. Esos son los básicos para utilizar este patrón de tolerancia a fallos. Tiene <a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration">algunos valores adicionales más que se pueden configurar</a> para adaptar el patrón a los valores óptimos de la aplicación.</p>
<p>En el ejemplo el cliente en un bucle realiza las llamadas al servicio con un método <em>get()</em> anotado con <em>@HystrixCommand</em>. En este método se encapsula la petición HTTP que puede fallar, utilizando la librería <a href="https://jersey.github.io/">Jersey</a> y obtenida la ubicación de una instancia del servicio a su vez del servicio de registro y descubrimiento <a href="https://github.com/Netflix/eureka">Eureka</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClientService</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixCommand</span><span class="o">(</span><span class="n">fallbackMethod</span> <span class="o">=</span> <span class="s">&#34;getFallback&#34;</span><span class="o">,</span> <span class="n">commandProperties</span> <span class="o">=</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.requestVolumeThreshold&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;4&#34;</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.errorThresholdPercentage&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;50&#34;</span><span class="o">),</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;execution.isolation.thread.timeoutInMilliseconds&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;1000&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">})</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Client</span><span class="o">.</span><span class="na">create</span><span class="o">().</span><span class="na">resource</span><span class="o">(</span><span class="n">uri</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ClientService.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableDiscoveryClient</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableCircuitBreaker</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableHystrixDashboard</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">ClientService</span> <span class="n">service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.password&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">20000</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">String</span> <span class="n">response</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service response: %s%n&#34;</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">100</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">plugins</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.12.RELEASE&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">application</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.client.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.1.12.RELEASE&#39;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2&#39;</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jersey.core:jersey-client:2.27&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jersey.inject:jersey-hk2:2.27&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>El circuito se abre cuando el número de llamadas supera un umbral y un porcentaje de fallos, se han de cumplir las dos condiciones. Si el número de llamadas que se realizan no superan el umbral aunque todas fallen el circuito permanece cerrado. Ambos valores son personalizables con las propiedades <em>circuitBreaker.requestVolumeThreshold</em> y <em>circuitBreaker.errorThresholdPercentage</em>. El circuito permanece abierto al menos durante el tiempo indicado por <em>metrics.rollingStats.timeInMilliseconds</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RestController</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// Timeout simulation&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">//Thread.sleep(random.nextInt(2000));&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (%s, %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<p>En la aplicación ejemplo hay un microservicio servidor y un microservicio cliente, iniciada una instancia de microservicio servidor y una instancia del microservicio cliente que implementa el patrón <em>circuit breaker</em> inicialmente las peticiones se realizarán correctamente si no ocurre un <em>timeout</em>. Si se finaliza el proceso del microservicio servidor las peticiones del cliente al servidor empezarán a fallar y este obtiene el valor alternativo del método <em>fallback</em>, si se supera el umbral de llamadas y de fallos el circuito pasa a estado abierto. Mientras el circuito permanezca abierto el cliente sondea con una petición cada cierto tiempo el estado del servidor, si el servicio servidor se inicia unos instantes después de que esté disponible el cliente con la petición de sondeo comprobará que el servidor funciona, se cerrará el circuito y el cliente empezará a obtener los valores devueltos por el microservicio servidor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">$ ./gradlew client:run&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">... # kill service, Ctrl+C&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">... # restart service&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Fallback&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (http://192.168.1.4:8080/, value)&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Para monitorizar en tiempo real el estado del sistema y de los circuitos se ofrece un <em>dashboard</em> en el que visualizan el número de peticiones que se están realizando, las fallidas, el estado de los circuitos, las que fallan por <em>timeout</em> o las que fallan con error. Para tener acceso a esta página hay que incluir la dependencia <em>org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard</em>. La página <em>dashboard</em> está disponible en la dirección <em>http://localhost:8085/hystrix</em>. Este <em>dashboard</em> que ofrece Hystrix es muy básico y con un diseño mejorable, se pueden <a href="https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/">exponer las métricas de Hystrix en Grafana con Prometheus</a> para tener un panel con exactamente la información que se desee en una gráficas mucho más vistosas además de observar los datos exactamente en el periodo de tiempo deseado.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-closed_huce59696db4bb781bd0e709b415bf52e8_382684_2560x1440_fit_box_3.png" data-gallery="" title="Circuit breaker cerrado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-closed_huce59696db4bb781bd0e709b415bf52e8_382684_300x200_fit_box_3.png" width="300" height="183" alt="Circuit breaker cerrado" title="Circuit breaker cerrado"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-open_huce59696db4bb781bd0e709b415bf52e8_384418_2560x1440_fit_box_3.png" data-gallery="" title="Circuit breaker abierto"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-open_huce59696db4bb781bd0e709b415bf52e8_384418_300x200_fit_box_3.png" width="300" height="183" alt="Circuit breaker abierto" title="Circuit breaker abierto"  class="lozad "></a></p>
<figcaption>Estados del circuit breaker</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew client:run</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.martinfowler.com/bliki/CircuitBreaker.html">CircuitBreaker</a></li>
<li><a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.0.1.RELEASE/single/spring-cloud-netflix.html#_circuit_breaker_hystrix_clients">Circuit Breaker: Hystrix Clients</a></li>
<li><a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration">Hyxtrix Configuration (1)</a></li>
<li><a href="https://github.com/Netflix/Hystrix/wiki/Configuration">Hyxtrix Configuration (2)</a></li>
<li><a href="http://www.javamagazine.mozaicreader.com/SeptemberOctober2018/Twitter">Java Magazine Sep/Oct 2018</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/</id>
        <title>Almacenar cifrados los valores de configuración sensibles en Spring Cloud Config</title>
        <updated>2018-09-30T01:40:00+02:00</updated>
        <published>2018-09-30T01:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Para no tener que hacer cambios en el código que implica recompilar la aplicación y generar de nuevos los artefactos al cambiar algunos valores de la aplicación se utilizan los archivos de configuración. Los archivos de configuración son archivos de texto plano que pueden seguir algún formato como <em>properties</em>, <em>xml</em> o <em>yaml</em>, externos a la aplicación pero que lee sus propiedades al iniciarse. Algunas propiedades de configuración de ejemplo pueden ser la cadena de conexión a una base de datos, el usuario y contraseña.</p>
<p>Dado que algunos valores de configuración son sensibles como en el ejemplo anterior la cadena de conexión, usuario y contraseña es recomendable por mayor seguridad almacenar estos valores cifrados y que la aplicación los descifre con la clave correspondiente al necesitar su valor original. Estos valores no deben estar en el código fuente para <a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/">evitar un problema de seguridad aún con el código fuente compilado</a>.</p>
<p><a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a> permite guardar los archivos de configuración con algunos valores cifrados. Hay varias posibilidades de configuración para guardar los datos cifrados: mediante clave simétrica, clave privada-pública, guardarlos en el servicio externo <a href="https://www.vaultproject.io/">Vault</a> de <a href="https://www.hashicorp.com/">Hashicorp</a>, mantenerlos cifrados solo en el almacenamiento persistente o transmitirlos cifrados y que sea el cliente el que los descifre.</p>
<p>Utilizando la forma más simple para mantener los datos cifrados con una clave simétrica en el servicio de configuración hay que mantener en una propiedad de configuración la clave simétrica para cifrar y descifrar los datos, <em>encrypt.key</em>. En este ejemplo la clave simétrica y las propiedades cifradas están en archivos de configuración diferentes pero incluidos en el mismo servidor de configuración. Esto no parece que aporte mucha seguridad ya que si se tiene acceso al archivo de configuración de un servicio con una propiedad cifrada probablemente se tenga acceso al archivo con la clave cifrada y la medida de seguridad no es útil. Sin embargo, esto permite al estar separados los archivos de configuración añadir el archivo con la propiedad cifrada a un repositorio público sin peligro siempre y cuando la clave de cifrado se mantenga en secreto. Los archivos de configuración de los servicios en el servidor de configuración se podrían añadir a un repositorio de Git.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">native</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">searchLocations</span><span class="p">:</span><span class="w"> </span><span class="l">file:./misc/config</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">encrypt</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">ma8FvTm1t8uWRlYE3ghPsQxxESaZwpOGdlsFwIyPNIWE25yNg1dsvvnd7orlZL9FH0qJyRkG8kcf5CBVdjmi8b2yxKzpXyfxpMXj</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>bootstrap.yml</span>
    </div>
</div>
<p>Definida la clave simétrica e iniciado el servidor de configuración este ofrece dos <em>endpoints</em> para cifrar y descifrar datos. Utilizando el de cifrado se obtiene el valor cifrado del dato sensible que se quiere proteger. Con el <em>endpoint</em> de descifrado se puede descifrar. Se observa que utilizando varias veces el <em>endpoint</em> de cifrado se devuelve en cada una un valor distinto, sin embargo, descifrando cada uno de estos valores con el <em>endpoint</em> de descifrado siempre se obtiene el valor original. Esto es debido seguramente a que en la operación de cifrado se utiliza la técnica del <em>salt</em> para que a los valores cifrados se les pueda aplicar un ataque de diccionario, el <em>salt</em> es incluido en el valor devuelto para que la operación de descifrado devuelva el valor original.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl localhost:8090/encrypt -d secret&#10;</span></span><span class="line"><span class="cl">fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b&#10;</span></span><span class="line"><span class="cl">$ curl localhost:8090/encrypt -d secret&#10;</span></span><span class="line"><span class="cl">2b5ab02e4653bebb1b325e88eb9711df0e97e8f7efbbffc0dd0c5ae532dceedc&#10;</span></span><span class="line"><span class="cl">$ curl localhost:8090/encrypt -d secret&#10;</span></span><span class="line"><span class="cl">df06bcf1e36d910851a6e3f866d0f014388d3ddcb479b9f0e43194d7cfb5d72c&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl localhost:8090/decrypt -d fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b&#10;</span></span><span class="line"><span class="cl">secret&#10;</span></span><span class="line"><span class="cl">$ curl localhost:8090/decrypt -d 2b5ab02e4653bebb1b325e88eb9711df0e97e8f7efbbffc0dd0c5ae532dceedc&#10;</span></span><span class="line"><span class="cl">secret&#10;</span></span><span class="line"><span class="cl">$ curl localhost:8090/decrypt -d df06bcf1e36d910851a6e3f866d0f014388d3ddcb479b9f0e43194d7cfb5d72c&#10;</span></span><span class="line"><span class="cl">secret</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-1.sh</span>
    </div>
</div>
<p>El valor cifrado obtenido por este <em>endpoint</em> se puede guardar en los archivos de configuración entrecomillándolo y precediéndolo con la cadena <em>{cipher}</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">dev</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;{cipher}fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b&#39;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>client.yml</span>
    </div>
</div>
<p>En este caso el servicio al iniciarse obtiene su configuración del servicio de configuración, los datos se transmiten en forma plana sin cifrar y el cifrado utilizando en el servidor de configuración es transparente para el cliente. Accediendo al <em>endpoint</em> del servidor de configuración que devuelve la configuración de un servicio con una propiedad cifrada se observa que al obtener el valor se devuelve en texto plano al cliente, esta petición es la misma que hace el servicio para obtener su configuración, de modo que aunque la información está cifrada en el servidor de configuración se transmite al servicio sin cifrar en texto plano. En este ejemplo se utiliza el protocolo inseguro HTTP, lo recomendable es utilizar el protocolo HTTPS para cifrar el tráfico entre el servidor de configuración y el cliente de modo que los valores sensibles queden protegidos también en la transmisión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl http://localhost:8090/client/default.yml&#10;</span></span><span class="line"><span class="cl"><span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">   <span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;client&#34;</span>,&#10;</span></span><span class="line"><span class="cl">   <span class="s2">&#34;profiles&#34;</span>:<span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;default.yml&#34;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">]</span>,&#10;</span></span><span class="line"><span class="cl">   <span class="s2">&#34;label&#34;</span>:null,&#10;</span></span><span class="line"><span class="cl">   <span class="s2">&#34;version&#34;</span>:null,&#10;</span></span><span class="line"><span class="cl">   <span class="s2">&#34;state&#34;</span>:null,&#10;</span></span><span class="line"><span class="cl">   <span class="s2">&#34;propertySources&#34;</span>:<span class="o">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;file:misc/config/client.yml&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;source&#34;</span>:<span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;server.port&#34;</span>:<span class="s2">&#34;</span><span class="si">${</span><span class="nv">port</span><span class="p">:</span><span class="nv">8085</span><span class="si">}</span><span class="s2">&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;management.endpoints.web.exposure.include&#34;</span>:<span class="s2">&#34;*&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;circuitBreaker.requestVolumeThreshold&#34;</span>:4,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;circuitBreaker.errorThresholdPercentage&#34;</span>:50,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;metrics.rollingStats.timeInMilliseconds&#34;</span>:10000,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;config.key&#34;</span>:<span class="s2">&#34;dev&#34;</span>,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;config.password&#34;</span>:<span class="s2">&#34;secret&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">   <span class="o">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-2.sh</span>
    </div>
</div>
<p>Iniciado el servicio de descubrimiento, el de configuración y un servicio que tiene un dato cifrado de configuración el valor que obtiene está ya descifrado. En este caso el servicio <em>client</em> obtiene el valor de la propiedad <em>config.password</em> descifrado con el valor <em>secret</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew client:run</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">$ ./gradlew client:run&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">2018-09-30 00:56:08,193  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler [&#34;http-nio-8085&#34;]&#10;</span></span><span class="line"><span class="cl">2018-09-30 00:56:08,283  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.tomcat.util.net.NioSelectorPool Using a shared selector for servlet write/read&#10;</span></span><span class="line"><span class="cl">2018-09-30 00:56:08,689  INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8085 (http) with context path &#39;&#39;&#10;</span></span><span class="line"><span class="cl">2018-09-30 00:56:08,691  INFO  netflix.eureka.serviceregistry.EurekaAutoServiceRegistration Updating port to 8085&#10;</span></span><span class="line"><span class="cl">2018-09-30 00:56:08,695  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;io.github.picodotdev.blogbitix.springcloud.client.Main Started Main in 19.901 seconds (JVM running for 22.013)&#10;</span></span><span class="line"><span class="cl">Valor de propiedad de configuración (config.key): dev&#10;</span></span><span class="line"><span class="cl">Valor de propiedad de configuración (config.password): secret</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SpringBootApplication</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableDiscoveryClient</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableCircuitBreaker</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@EnableHystrixDashboard</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">ClientService</span> <span class="n">service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.password&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Configuration</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultConfiguration</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${config.key}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">key</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${config.password}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">password</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getKey</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">key</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setKey</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getPassword</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">password</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPassword</span><span class="o">(</span><span class="n">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultConfiguration.java</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh, ./curl-1.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/</id>
        <title>Novedades y nuevas características de Java 11</title>
        <updated>2018-09-29T14:00:00+02:00</updated>
        <published>2018-09-28T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Java 11 es la primera versión de soporte extendido publicada o LTS bajo el nuevo ciclo de publicaciones que adoptó Java en la versión 9. Añade varias novedades importantes en cuanto a seguridad y elimina otras que en versiones anteriores ya fueron marcadas como desaconsejadas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En la plataforma Java era habitual que entre versión y versión mayor pasasen varios años normalmente 3 o más. Este ciclo de publicaciones no se adapta a las necesidades de todas las empresas, organizaciones y usuarios. Algunas empresas y usuarios desean ciclos de publicaciones más cortos quizá con no tantas novedades en cada uno de ellos pero sí de forma más constante incorporando mejoras. Otras organizaciones necesitan confiar en una versión que tenga un ciclo de soporte largo para sus aplicaciones.</p>
<p>Para adaptarse a ambos requerimientos Java a partir de Java 9 adoptó un nuevo ciclo de publicaciones siendo cada seis meses para los que desean mejoras de forma regular y cada tres años para los que necesitan soporte extendido. <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-de-java-9-mas-alla-de-la-modularidad/">Java 9 incorporó la esperada modularización</a> que cambia la forma de desarrollo de las aplicaciones con numerosas mejoras. <a href="https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/">Java 10 añadió la inferencia de tipos para variables locales</a> con la palabra reservada <em>var</em>. Ahora Java 11 siendo una versión de soporte extendido o LTS, el soporte de Java 11 está planificado que dure hasta 2023 y hasta 2026 de forma extendida lo que son 8 años de soporte.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="introducción">Introducción</h3>
<p>En esta nueva versión de Java 11 publicada el 25 de septiembre de 2018 las novedades no son tan relevantes como lo fuero Java 8 con las <em>lambadas</em> y Java 9 con los módulos pero continúa con las mejoras incrementales y proporciona una versión LTS en la que empresas grandes confiarán como base para sus desarrollos.</p>
<ul>
<li><a href="https://openjdk.java.net/projects/jdk/11/">Características de Java 11</a></li>
<li><a href="https://www.oracle.com/java/technologies/javase/11-relnote-issues.html">Notas de publicación de Java 11</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/">Documentación de Java 11</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/docs/api/overview-summary.html">Documentación Javadoc de Java 11</a></li>
</ul>
<p>Las mejoras incluídas en esta versión son:</p>
<ul>
<li>181: <a href="http://openjdk.java.net/jeps/181">Nest-Based Access Control</a></li>
<li>309: <a href="http://openjdk.java.net/jeps/309">Dynamic Class-File Constants</a></li>
<li>315: <a href="http://openjdk.java.net/jeps/315">Improve Aarch64 Intrinsics</a></li>
<li>318: <a href="http://openjdk.java.net/jeps/318">Epsilon: A No-Op Garbage Collector</a></li>
<li>320: <a href="http://openjdk.java.net/jeps/320">Remove the Java EE and CORBA Modules</a></li>
<li>321: <a href="http://openjdk.java.net/jeps/321">HTTP Client (Standard)</a></li>
<li>323: <a href="http://openjdk.java.net/jeps/323">Local-Variable Syntax for Lambda Parameters</a></li>
<li>324: <a href="http://openjdk.java.net/jeps/324">Key Agreement with Curve25519 and Curve448</a></li>
<li>327: <a href="http://openjdk.java.net/jeps/327">Unicode 10</a></li>
<li>328: <a href="http://openjdk.java.net/jeps/328">Flight Recorder</a></li>
<li>329: <a href="http://openjdk.java.net/jeps/329">ChaCha20 and Poly1305 Cryptographic Algorithms</a></li>
<li>330: <a href="http://openjdk.java.net/jeps/330">Launch Single-File Source-Code Programs</a></li>
<li>331: <a href="http://openjdk.java.net/jeps/331">Low-Overhead Heap Profiling</a></li>
<li>332: <a href="http://openjdk.java.net/jeps/332">Transport Layer Security (TLS) 1.3</a></li>
<li>333: <a href="http://openjdk.java.net/jeps/333">ZGC: A Scalable Low-Latency Garbage Collector (Experimental)</a></li>
<li>335: <a href="http://openjdk.java.net/jeps/335">Deprecate the Nashorn JavaScript Engine</a></li>
<li>336: <a href="http://openjdk.java.net/jeps/336">Deprecate the Pack200 Tools and API</a></li>
</ul>
<h3 id="nuevas-características">Nuevas características</h3>
<h4 id="eliminación-de-módulos-java-ee-y-corba">Eliminación de módulos Java EE y CORBA</h4>
<p>Se eliminan del JDK paquetes ya desaconsejados hace varias versiones anteriores y que no eran muy usados en cualquier caso. Estos paquetes son los de CORBA una forma de llamada a procedimientos remotos que se utilizó como alternativa a RMI pero que nunca tuvo un uso extendido prefiriéndose SOAP o más recientemente interfaces REST.</p>
<p>La lista de paquetes eliminados son los siguientes.</p>
<ul>
<li><em>java.xml.ws</em> (JAX-WS, plus the related technologies SAAJ and Web Services Metadata)</li>
<li><em>java.xml.bind</em> (JAXB)</li>
<li><em>java.activation</em> (JAF)</li>
<li><em>java.xml.ws.annotation</em> (Common Annotations)</li>
<li><em>java.corba</em> (CORBA)</li>
<li><em>java.transaction</em> (JTA)</li>
<li><em>java.se.ee</em> (Aggregator module for the six modules above)</li>
<li><em>jdk.xml.ws</em> (Tools for JAX-WS)</li>
<li><em>jdk.xml.bind</em> (Tools for JAXB)</li>
</ul>
<h4 id="sintaxis-de-variables-locales-para-parámetros-en-lambdas">Sintaxis de variables locales para parámetros en lambdas</h4>
<p>Ahora los parámetros de una lambda pueden declararse con <em>var</em> con inferencia de tipos. Esto proporciona uniformidad en el lenguaje al declarar los parámetros permite usar anotaciones en los parámetros de la función lambda como <em>@NotNull</em>.</p>
<p>Esta funcionalidad tiene algunas restricciones. No se puede mezclar el uso y no uso de <em>var</em> y no se puede mezclar el uso de <em>var</em> y tipos en <em>lambdas</em> explícitas. Son consideradas ilegales por el compilador y producirá un error en tiempo de compilación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">(</span><span class="n">var</span> <span class="n">x</span><span class="o">,</span> <span class="n">var</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">  &#10;</span></span><span class="line"><span class="cl"><span class="o">(</span><span class="nd">@NotNull</span> <span class="n">var</span> <span class="n">x</span><span class="o">,</span> <span class="nd">@NotNull</span> <span class="n">var</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">  &#10;</span></span><span class="line"><span class="cl"><span class="o">(</span><span class="n">var</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span> <span class="c1">// no se puede mezclar var y no var&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">(</span><span class="n">var</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span> <span class="c1">// no se puede mezclar var y tipos en lamdas explícitas&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Lambda.java</span>
    </div>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/0eWgRyanQI0" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="cliente-http">Cliente HTTP</h4>
<p>En Java 9 se incorporó de forma experimental un cliente HTTP con soporte para HTTP/2 en el propio JDK. En Java 11 alcanza la categoría de estable. Este cliente HTTP es una forma sencilla de hacer llamadas a servicios web ya sean REST o <a href="https://graphql.org/">GraphQL</a>. Las clases del nuevo cliente se encuentran en el paquete <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/package-summary.html">java.net.http</a>. Al estar este cliente HTTP incorporado en el JDK no será necesario depender de librerías de terceros.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/sZSdWq490Vw" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="ejecución-desde-archivo-de-código-fuente-único">Ejecución desde archivo de código fuente único</h4>
<p>Para ejecutar un programa Java es necesario compilarlo a <em>bytecode</em> y posteriormente ejecutarlos. Se necesitan dos pasos. Para facilitar la ejecución de los programas que se componen de un único archivo de código fuente se añade la posibilidad de lanzar un programa desde el archivo de código fuente. Esto es útil par programas pequeños o para los casos de estar aprendiendo el lenguaje.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Hello, World&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HelloWorld.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ java HelloWorld.java&#10;</span></span><span class="line"><span class="cl">Hello, World&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>java-helloworld.sh</span>
    </div>
</div>
<p>Esta funcionalidad es compatible con los <em>shebang</em> de los sistemas Unix.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!.sdkman/candidates/java/current/bin/java --source 11&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>&#10;</span></span><span class="line"><span class="cl">public class HelloWorld <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;public static void main<span class="o">(</span>String<span class="o">[]</span> args<span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println<span class="o">(</span><span class="s2">&#34;Hello, World&#34;</span><span class="o">)</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>helloworld.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chmod +x ./HelloWorld.sh&#10;</span></span><span class="line"><span class="cl">$ ./HelloWorld.sh&#10;</span></span><span class="line"><span class="cl">Hello, World</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hello.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/images/java-helloworld_hudffca01b0a1961d9680fc7f7d030bedf_67656_2560x1440_fit_box_3.png" data-gallery="" title="Java 11 HelloWorld!"><img src="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/images/java-helloworld_hudffca01b0a1961d9680fc7f7d030bedf_67656_6500x450_fit_box_3.png" width="610" height="450" alt="Java 11 HelloWorld!" title="Java 11 HelloWorld!"  class="lozad "></a></p>
<figcaption>Java 11 HelloWorld!</figcaption>
</figure>
</div>
<h4 id="unicode-10">Unicode 10</h4>
<p>Tratar texto es una parte importante casi de cualquier aplicación, este soporte de Unicode 10 añade 16018 nuevos caracteres soportados, 128 nuevos emojis y 19 símbolos nuevos para el estándar en televisiones 4K.</p>
<h4 id="tls-13">TLS 1.3</h4>
<p>Algunas de las versiones anteriores de TLS ya no se consideran seguras añadir soporte para la versión más reciente TLS 1.3 permite a las aplicaciones Java ser más compatibles y más seguras. El protocolo TLS 1.3 proporciona dos beneficios principalmente, es más seguro y más rápido que sus versiones anteriores.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/HxDb5nwvN_Y" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="otras-mejoras">Otras mejoras</h3>
<p>Se añaden implementaciones específicas para la arquitectura Aarch64 para un mejor rendimiento en la plataforma <a href="https://www.arm.com/">ARM</a> en algunas funciones. Se añade de forma experimental un nuevo recolector de basura ZGC con pausas para recolectar basura menores capaz de manejar cantidades de memoria pequeñas de megabytes y grandes de terabytes. Al mismo tiempo se añade un recolector de basura Epsilon que no reclama la memoria. Se añade soporte para los algoritmos criptográficos <em>ChaCha20</em> y <em>Poly1305</em> junto con otras funcionalidades criptográficas <em>RSASSA-PSS</em>, <em>AES Encryption with HMAC-SHA2 for Kerberos 5</em>, &hellip;</p>
<p>Se añaden varios métodos a la clase <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html">String</a> muy utilizados con los que no será necesario recurrie a librerías de terceros. Estos métodos son <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#repeat%28int%29">repeat</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#isBlank%28%29">isBlank</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#strip%28%29">strip</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#stripLeading%28%29">stripLeading</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#stripTrailing%28%29">stripTrailing</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#lines%28%29">lines</a>. En otras clases de la API también se han añadido nuevos métodos.</p>
<p>Java que tradicionalmente marcaba como <em>deprecated</em> características pero que las seguía manteniendo por compatibilidad hacia atrás parece que ha empezado a eliminar varias de esas características desaconsejadas de forma más agresiva. No solo se añaden nuevas características, también se eliminan algunas y se desaconseja el uso de otras entre ellas el visor de <em>applets</em>, eliminación de <em>Unsafe.defineClass</em>, <em>Thread.destroy()</em> y <em>Thread.stop(Throwable)</em>, eliminación de las funcionalidades de despliegue de <em>Java Plugin</em> y <em>Java Web Start</em> que se marcaron como desaconsejadas en Java 9 y para eliminación en Java 10 finalmente en Java 11 se han eliminado sin reemplazo.</p>
<p>Oracle ya no ofrece el entorno de ejecución JRE ni versiones de 32 bits para Windows. JavaFX ya no está incluído en el JDK pero seguirá siendo utilizable como librería independiente.</p>
<p>Las anteriores son las funcionalidades que he considerado más destacables para todos los usuarios., También hay otras funcionalidades añadidas, soporte eliminado para funciones específicas o de funcionamiento interno.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developer.oracle.com/java/java11">Introducing Java SE 11</a></li>
<li><a href="https://www.oracle.com/technetwork/java/javase/11-relnote-issues-5012449.html">JDK 11 Release Notes</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/">Java 11 Documentation</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/docs/api/index.html">Java 11 Javadoc</a></li>
<li><a href="https://blogs.oracle.com/java-platform-group/introducing-java-se-11">Introducing Java SE 11 (blog)</a></li>
<li><a href="https://blogs.oracle.com/java-platform-group/oracle-jdk-releases-for-java-11-and-later">Oracle JDK Releases for Java 11 and Later</a></li>
<li><a href="https://blog.takipi.com/java-11-will-include-more-than-just-features/">Java 11 Will Include More Than Just Features</a></li>
<li><a href="https://www.azul.com/90-new-features-and-apis-in-jdk-11/">90 New Features (and APIs) in JDK 11</a></li>
<li><a href="https://4comprehension.com/java-11-string-api-updates/">Java 11 String API Updates</a></li>
<li><a href="https://github.com/eclipse/jetty.project/issues/2487">Java 11 removes EE and Corba packages</a></li>
<li><a href="https://twitter.com/java/status/1044609723012665344">Java Mission Control - Now serving OpenJDK binaries too!</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/migrate/index.html">Oracle JDK 11 Migration Guide</a></li>
<li><a href="http://www.java-countdown.xyz/">Countdown to Java Release Date</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/</id>
        <title>Recargar sin reiniciar la configuración de una aplicación Spring Boot con Spring Cloud Config</title>
        <updated>2018-09-23T00:50:00+02:00</updated>
        <published>2018-09-23T00:15:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>No es raro la necesidad de querer cambiar algunos valores de la configuración de una aplicación sin ningún cambio adicional en el código. Normalmente la configuración se externaliza en un archivo de texto en un determinado formato como <em>properties</em> o <em>yaml</em> que se lee al iniciarse la aplicación pero que al querer hacer cambios y hacerlos efectivos requiere reiniciar la aplicación.</p>
<p>Para evitar la caída de servicio en un reinicio de aplicación requiere tener varias instancias de la aplicación, ir sacando del balanceador las instancias para que no le soliciten nuevas peticiones, reiniciarlas y añadirlas de nuevo al balanceador si se hace balanceo de carga en el servidor o reiniciar las aplicaciones progresivamente si se hace en el cliente. Y esto con todas las instancias del servicio. <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a> y <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> entre sus funcionalidades de configuración posee una que consiste en recargar la configuración o ciertas partes de la misma. Para ello <a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actuator</a> ofrece un <em>endpoint</em> con el que disparar la recarga.</p>
<p>En el siguiente ejemplo de microservicio que posee una clase de configuración con algunas propiedades. El valor de estas propiedades se utilizan para el resultado de una acción en un <em>endpoint</em> del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.cloud.context.config.annotation.RefreshScope</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Configuration</span>&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RefreshScope</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultConfiguration</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${config.key}&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">key</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getKey</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">key</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setKey</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultConfiguration.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RestController</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (%s, %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8080}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">active</span><span class="p">:</span><span class="w"> </span><span class="l">cloud</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">rabbitmq</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="l">localhost</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">5672</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">guest</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">guest</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">management</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">web</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">exposure</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">include</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;*&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">value</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service.yml</span>
    </div>
</div>
<p>Iniciada la aplicación que requiere iniciar previamente el servicio de registro y descubrimiento y el servidor de configuración, la aplicación al iniciarse obtiene su configuración del servidor de configuración. Si se cambia la configuración de la variable <em>config.key</em> la aplicación no obtendrá el valor actualizado hasta que se invoque el <em>endpoint</em> <em>http://localhost:8080/actuator/refresh</em>. Para que Spring Boot recargue la configuración es necesario anotar con <em>@RefreshScope</em> la clase de configuración. Invocado el <em>endpoint</em> de recarga de configuración la aplicación toma de nuevo los nuevos valores del servicio de configuración.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -i -X POST  http://localhost:8080/&#10;</span></span><span class="line"><span class="cl">Hello world <span class="o">(</span>http://localhost:8080/, value<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ vim configserver/misc/config/service.yml&#10;</span></span><span class="line"><span class="cl"><span class="c1"># config.key: secret</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl -i -X POST  http://localhost:8080/actuator/refresh&#10;</span></span><span class="line"><span class="cl">HTTP/1.1 <span class="m">200</span>&#10;</span></span><span class="line"><span class="cl">Content-Type: application/vnd.spring-boot.actuator.v2+json<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>UTF-8&#10;</span></span><span class="line"><span class="cl">Transfer-Encoding: chunked&#10;</span></span><span class="line"><span class="cl">Date: Sat, <span class="m">22</span> Sep <span class="m">2018</span> 21:19:03 GMT&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;config.key&#34;</span><span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl http://localhost:8080/&#10;</span></span><span class="line"><span class="cl">Hello world <span class="o">(</span>http://localhost:8080/, secret<span class="o">)</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-1.sh</span>
    </div>
</div>
<p>En una aplicación orientada microservicios es muy posible que haya múltiples instancias del mismo servicio y para recargar la configuración de cada uno de ellos hay que hacerlo de forma individual con su <em>endpoint</em> de recarga de configuración. Dado el número de microservicios y su ubicación distribuida hacerlo de forma individual es un inconveniente.</p>
<p>Para resolver este inconveniente integrando <a href="https://cloud.spring.io/spring-cloud-bus/">Spring Cloud Bus</a> en las aplicaciones es posible recargar la configuración de todos los microservicios haciendo una única llamada al <em>endpoint</em> <em>http://localhost:8090/monitor</em> indicando el servicio a actualizar su configuración lo que es independiente del número de instancias y de su ubicación. Integrar Spring Cloud Bus requiere disponer de una instancia de mensajes como <a href="https://www.rabbitmq.com/">RabbitMQ</a> e incluir como dependencia tanto en el servidor de configuración como en el servicio la dependencia <em>spring-cloud-starter-bus-amqp</em>. Para esta comunicación de mensajes Spring Cloud Config crea en RabbitMQ una cola de mensajes que empieza por <em>springCloudBus</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-bus-amqp&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>configserver.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-bus-amqp:2.0.0.RELEASE&#39;</span><span class="o">)</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service.gradle</span>
    </div>
</div>
<p>Los pasos para probar estas funcionalidades con Spring Cloud Bus en una o varias varias instancias son iniciar una instancia o más del servidor de registro y descubrimiento, iniciar una o más instancias del servidor de configuración, iniciar una o varias instancias del servicio todas las instancias en un puerto y terminal diferente, invocar el servicio cuyo valor de respuesta depende de una propiedad de configuración, modificar el valor de la propiedad de configuración, recargar la configuración e invocar de nuevo el servicio para comprobar que el nuevo valor se ha hecho efectivo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8081&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-2.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -i -X POST  http://localhost:8080/&#10;</span></span><span class="line"><span class="cl">Hello world <span class="o">(</span>http://localhost:8080/, value<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">$ curl -i -X POST  http://localhost:8081/&#10;</span></span><span class="line"><span class="cl">Hello world <span class="o">(</span>http://localhost:8081/, value<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ vim configserver/misc/config/service.yml&#10;</span></span><span class="line"><span class="cl"><span class="c1"># config.key: secret</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl -X POST -d <span class="s1">&#39;path=service&#39;</span> http://localhost:8090/monitor&#10;</span></span><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;service&#34;</span><span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl http://localhost:8080/&#10;</span></span><span class="line"><span class="cl">Hello world <span class="o">(</span>http://localhost:8080/, secret<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ curl http://localhost:8081/&#10;</span></span><span class="line"><span class="cl">Hello world <span class="o">(</span>http://localhost:8081/, secret<span class="o">)</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-2.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run-1.sh, ./curl-1.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-bus/2.0.0.RELEASE/single/spring-cloud-bus.html#_quick_start">Spring Cloud Bus - Quick Start</a></li>
<li><a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#_push_notifications_and_spring_cloud_bus">Spring CloudBus - Push Notifications and Spring Cloud Bus</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-configuration-classes.html">Spring Boot - Configuration Classes</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    
</feed>