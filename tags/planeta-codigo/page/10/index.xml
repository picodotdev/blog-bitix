<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2022-01-13T23:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/</id>
        <title>10º aniversario del blog</title>
        <updated>2020-02-06T19:00:00+01:00</updated>
        <published>2020-02-06T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p><em>&ldquo;Bueno, ¡pues ya está!, ya tengo mi propio blog, todavía está en fase de construcción así que según vaya teniendo tiempo iré haciendo pequeños cambios en los gadgets y en su disposición. Por ahora me conformo con tenerlo visible [&hellip;].  Pero lo principal, escribir entradas en el blog, es algo que ya puedo realizar. Tratarán sobre temas relacionados con el software libre, incluyendo las dos distribuciones GNU/Linux que en este momento uso más habitualmente que son Ubuntu y Arch Linux, temas de tecnología, quizá temas de programación, experiencias personales sobre los mismos y otras cosas que se me vayan ocurriendo. [&hellip;]&quot;</em>.</p>
<p>Con el texto anterior empezaba el primer artículo a modo de prestación en <a href="https://elblogdepicodev.blogspot.com.es/2010/02/hola-mundo_06.html">elblogdepicodev</a> en el 2010, este mes de febrero se cumple que hace 10 años creé y empecé a escribir en un blog, durante todo este tiempo habrá habido pocas semanas de las 520 que no he escrito al menos un artículo, es más el total de artículos que he escrito desde entonces ha sido de unos 650 artículos dado que algunas semanas he publicado dos artículos y algunas esporádicamente incluso tres. En total 2,5 millones de páginas vistas, 525K en el último año. Cuando miro <a href="https://www.google.es/intl/es/analytics/">Google Analytics</a> y veo artículos del año 2017, 2016, 2015, 2014, &hellip; que se siguen visitado, no me da la sensación de que hayan pasado varios años desde que los publique.</p>
<p>Pasados estos 10 años y a pesar del tiempo que requiere escribir y publicar cada artículo aún sigo con ganas de seguir escribiendo y publicando, hay una enorme cantidad de temas interesantes sobre los que escribir, no me he planteado dejarlo, y es que me permite seguir aprendiendo cada semana un poco sobre alguna cosa que me interesa, me gusta compartir con la intención de que a alguien le resulta útil el contenido y quizá en un futuro esto mismo que escribo me resulte útil laboralmente. La temáticas principales siguen siendo <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> y <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> aunque no es un blog solo de Java ni un blog solo de GNU/Linux. Como blog personal en el sentido de individual que es, muy rara vez incluyo información personal, en él ocasionalmente hago desempaquetados de los productos que compro y he probado, algún artículo de opinión o desde hace unos meses que tengo una PS4 escribiré sobre los juegos que voy jugando y completando.</p>
<p>Como comentaba en la <a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/">última hemeroteca del año 2019</a> el blog no ha crecido en visitas a pesar de haber escrito unos 80 artículos nuevos, por ello quiero hacer algunos cambios. El primero es planificar mejor el contenido que escribo y publico con el objetivo en parte de atraer más visitas que al mismo tiempo sean interesantes de leer pero también manteniendo que el escribir lo sea para mi. Hasta ahora he escrito de lo que me ha apetecido en cada momento de forma un tanto aleatoria sin ningún plan de publicación incluso para las series de artículos relacionados como <a href="https://picodotdev.github.io/blog-bitix/series/docker/">la serie de Docker</a> o <a href="https://picodotdev.github.io/blog-bitix/series/graphql/">la serie sobre GraphQL</a>. Analizando los artículos más vistos alguno de los más sencillos son los más populares de mi blog como <a href="https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/">4 formas de hacer un bucle for en Java</a>, me plantearé escribir según se me vayan ocurriendo alguno de estos artículos sencillos, básicos o no sencillos pero esenciales que en algún caso no escribo por ya darlo por sabido. Tampoco quiero dejar de escribir por completo de vez en cuando algún artículo que para mi considero avanzado.</p>
<p>El segundo punto que ya he empezado, es hacer algunas modificaciones en los estilos del blog para mejorar el porcentaje de rebote, que creo es muy alto casi de un 90%, y aumentar el número de páginas vistas por sesión. Para esto tengo pensado modificar las páginas de lista de artículos como en la página de inicio y los artículos relacionados al final de cada artículo. En vez de que sean un simple enlace que sean el título y una imagen que traigan algo más la atención a dos o tres columnas en vez de a una solo para que quepan más en lugar de un artículo en el mismo espacio. Quizá incluiré en algunas páginas un <em>slider</em> que incluya artículos que considero destacables también para mejorar el porcentaje de rebote y para que artículos antiguos sean un poco más visibles. También mejorar la página de error 404 con estas mismas ideas, que aunque no debería llegarse a ella si se realizan algunas visualizaciones, ahora solo muestro un mensaje sin ningún enlace salvo los de la estructura de la página.</p>
<p>Esos son los estilos por los que ha pasado el blog.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/images/elblogdepicodev-blogger_hu999671f6e66fc885f110033163260054_209924_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El blog de pico.dev con Blogger"><img src="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/images/elblogdepicodev-blogger_hu999671f6e66fc885f110033163260054_209924_200x150_fit_q90_box.jpg" width="200" height="120" alt="El blog de pico.dev con Blogger" title="El blog de pico.dev con Blogger"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/images/blogbitix-octopress_huab010b8380ed6dc95379d0978ff51e36_200631_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Blog Bitix con Octopress"><img src="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/images/blogbitix-octopress_huab010b8380ed6dc95379d0978ff51e36_200631_200x150_fit_q90_box.jpg" width="200" height="143" alt="Blog Bitix con Octopress" title="Blog Bitix con Octopress"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/images/blogbitix-hugo-2020-02_hu9bd46dad0bcde0cb1220f9eb73fc7b72_1164937_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Blog Bitix con Hugo"><img src="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/images/blogbitix-hugo-2020-02_hu9bd46dad0bcde0cb1220f9eb73fc7b72_1164937_200x150_fit_box_3.png" width="139" height="150" alt="Blog Bitix con Hugo" title="Blog Bitix con Hugo"  class="lozad "></a></p>
<figcaption>Rediseños que he ido realizando en el blog</figcaption>
</figure>
</div>
<p>Algunas otras modificaciones ya he realizado, una de ellas crear la versión de <a href="https://picodotdev.github.io/blog-bitix/">páginas AMP</a> del blog para ver que resultado da. En un principio esta versión está mejor adaptada para los móviles, siendo más rápida, con lo que para Google es posible que la considere mejor, y dado que Google es la mayor fuente de usuarios quizá se note algo. Al final de año mediré con Analytics cual ha sido el resultado. En las primeras semanas algunos usuarios ya están accediendo a la versión AMP.</p>
<p>Otra modificación importante que he realizado ha sido <a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/">cargar las imágenes, los comentarios de Disqus e <em>iframes</em> como vídeos de YouTube con <em>lazy load</em></a>. Así estos elementos no se solicitan hasta que realmente son necesarios al ser visualizados, lo que hace que la página se cargue antes y sea más rápida. Mejora la métrica de PageSpeed y Google en su algoritmo de posicionamiento es posible que las posicione mejor en su página de resultados.</p>
<p>Con algunas nuevas capacidades de Hugo como los <a href="https://gohugo.io/getting-started/configuration-markup#markdown-render-hooks">render hooks</a> de enlaces e imágenes es posible implementar cierta lógica para algunas cosas interesantes que simplifiquen la generación del contenido. Aún estoy pendiente de que <a href="https://gohugo.io/">Hugo</a> permita usar el formato de <a href="https://github.com/gohugoio/hugo/issues/5924">imágenes WebP</a> y <a href="https://github.com/gohugoio/hugo/issues/4595">soporte <em>watermarking</em></a>.</p>
<p>Vamos a ver que ocurre en la década del 2020.</p>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/</id>
        <title>Los modificadores de acceso de clases, propiedades y métodos en Java</title>
        <updated>2020-02-04T20:00:00+01:00</updated>
        <published>2020-01-31T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Uno de los principios básicos de los lenguajes orientados a objetos es la encapsulación, mediante la cual se garantiza que los datos de una clase solo son modificados por las operaciones apropiadas implementadas en los métodos de sus clases para preservar su invariante, las reglas que define la clase y el estado consistente de su estado.</p>
<p>El acceso a las propiedades y métodos se determina mediante las palabras reservadas de los modificadores de acceso, en Java hay cuatro modificadores de acceso que definen ámbitos de visibilidad de más restrictivos a menos restrictivos:</p>
<ul>
<li><code>private</code>: únicamente la clase puede acceder a la propiedad o método.</li>
<li><code>package private</code> (valor por defecto si no se indica ninguno): solo las clases en el mismo paquete pueden acceder a la propiedad o método.</li>
<li><code>protected</code>: las clases del mismo paquete y que heredan de la clase pueden acceder a la propiedad o método.</li>
<li><code>public</code>: la propiedad o método es accesible desde cualquier método de otra clase.</li>
</ul>
<p>Las clases tienen uno de los modificadores de acceso <code>public</code> o <code>package private</code> con el mismo significado que en las propiedades y métodos, visibles desde cualquier otro paquete y solo visible desde su propio paquete.</p>
<p>Los modificadores de acceso son una palabra reservada del lenguaje y se colocan delante de la propiedad o método, el modificador de acceso <code>package private</code> no tiene palabra reservada se aplica en caso de que no se especifique un modificador de acceso explícitamente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Foo</span> <span class="o">{</span>&#10;&#10;  <span class="kd">private</span> <span class="n">String</span> <span class="n">property1</span><span class="o">;</span>&#10;  <span class="n">String</span> <span class="n">property2</span><span class="o">;</span>&#10;  <span class="kd">protected</span> <span class="n">String</span> <span class="n">property3</span><span class="o">;</span>&#10;  <span class="kd">public</span> <span class="n">property4</span><span class="o">;</span>&#10;&#10;  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getProperty1</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp; <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">format</span><span class="o">;</span>&#10;  <span class="o">}</span>&#10;&#10;  <span class="n">String</span> <span class="nf">getProperty2</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp; <span class="k">return</span> <span class="n">property2</span><span class="o">;</span>&#10;  <span class="o">}</span>&#10;&#10;  <span class="kd">protected</span> <span class="n">String</span> <span class="nf">getProperty3</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp; <span class="k">return</span> <span class="n">property3</span><span class="o">;</span>&#10;  <span class="o">}</span>&#10;&#10;  <span class="kd">private</span> <span class="n">String</span> <span class="nf">getProperty4</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp; <span class="k">return</span> <span class="n">property4</span><span class="o">;</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Foo.java</span>
    </div>
</div>
<p>Los ámbitos de visibilidad según el modificador de acceso y el origen de acceso a la propiedad o método son los siguientes.</p>
<table class="table">
   <thead class="table-light">
       <th width="250px">Modificador de acceso</th>
       <th>Misma clase o anidada</th>
       <th>Clase en el mismo paquete</th>
       <th>Clase que hereda en otro paquete</th>
       <th>Clase que no hereda en otro paquete</th>
   </thead>
   <tbody>
       <tr>
           <td>private</td>
           <td>Sí</td>
           <td>No</td>
           <td>No</td>
           <td>No</td>
       </tr>
       <tr>
           <td>default (package private)</td>
           <td>Sí</td>
           <td>Sí</td>
           <td>No</td>
           <td>No</td>
       </tr>
       <tr>
           <td>protected</td>
           <td>Sí</td>
           <td>Sí</td>
           <td>Sí</td>
           <td>No</td>
       </tr>
       <tr>
           <td>public</td>
           <td>Sí</td>
           <td>Sí</td>
           <td>Sí</td>
           <td>Sí</td>
       </tr>
   </tbody>
</table>
<p>En este gráfico hay representados paquetes que contienen clases, clases con rectángulos, las flechas indican herencia entre clases y las clases que están coloreadas indican que tienen visibilidad de la propiedad y método según el ámbito de acceso, la ubicación de la clase que accede y si hay una relación de herencia. En esencia es la misma información de la tabla pero representada de forma gráfica.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/images/java-access-specifier_hua4dc7e14397aa21078ef211e311b7b0c_57114_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Modificadores de acceso en Java"><img src="https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/images/java-access-specifier_hua4dc7e14397aa21078ef211e311b7b0c_57114_600x450_fit_q90_box.jpg" width="537" height="409" alt="Modificadores de acceso en Java" title="Modificadores de acceso en Java"  class="lozad "></a></p>
<figcaption>Modificadores de acceso en Java <br>Fuente: wikipedia.org</figcaption>
</figure>
</div>
<p>Una detalle a tener en cuenta es que los modificadores afectan a las clases, una propiedad privada de una clase es accesible para todas las instancias de esa clase. En concreto, este código es válido y el resultado es <em>two</em>, <em>bar1</em> puede acceder a la propiedad <em>thing</em> de la instancia <em>bar2</em> aún siendo privada en la clase.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Bar</span> <span class="o">{</span>&#10;&#10;   <span class="kd">private</span> <span class="n">String</span> <span class="n">thing</span><span class="o">;</span>&#10;&#10;   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">Bar</span><span class="o">(</span><span class="n">String</span> <span class="n">thing</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">this</span><span class="o">.</span><span class="na">thing</span> <span class="o">=</span> <span class="n">thing</span><span class="o">;</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="kd">public</span> <span class="n">String</span> <span class="nf">getOtherThing</span><span class="o">(</span><span class="n">Bar</span> <span class="n">other</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">other</span><span class="o">.</span><span class="na">thing</span><span class="o">;</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Bar</span> <span class="n">bar1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bar</span><span class="o">(</span><span class="s">&#34;one&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Bar</span> <span class="n">bar2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bar</span><span class="o">(</span><span class="s">&#34;two&#34;</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">String</span> <span class="n">thing</span> <span class="o">=</span> <span class="n">bar1</span><span class="o">.</span><span class="na">getOtherThing</span><span class="o">(</span><span class="n">bar2</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">thing</span><span class="o">);</span>&#10;   <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Bar.java</span>
    </div>
</div>
<p>No hay encapsulación entre las instancias de la misma clase, la encapsulación es para la clase accedida desde otras clases según los modificadores de acceso. Pero aunque una instancia tenga acceso y capacidad de modificar las propiedades de otra instancia se ha de seguir manteniendo la invariante, si una instancia modifica los datos de otra instancia ha de seguir manteniendo la invariante de la clase de esa otra instancia. Para mantener la invariante y la encapsulación generalmente se proporciona acceso a un método y no directamente a las propiedades.</p>
<h3 id="la-modularidad-a-partir-java-9">La modularidad a partir Java 9</h3>
<p>Los ámbitos de visibilidad es un mecanismo bastante limitado ni es suficiente para proporcionar encapsulación. No hay ningún impedimento a que cualquiera pueda crear una clase en un paquete que contiene clases privadas de paquete o métodos <em>package private</em> o heredar de esas clases y de esta manera tener acceso a clases, métodos y propiedades que el autor original no las diseñó para esos propósitos. Puede ser incluso un problema de seguridad.</p>
<p><a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java2-los-modulos/">La modularidad añadida en Java 9</a> viene a complementar y dar una solución más completa a los ámbitos de visibilidad así como garantizar mejor la encapsulación tal y como el programador del paquete original ha diseñado.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Java_syntax">Java syntax</a></li>
<li><a href="https://en.wikipedia.org/wiki/Class_invariant">Class invariant</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/</id>
        <title>Conferencia BilboStack 2020</title>
        <updated>2020-01-25T17:00:00+01:00</updated>
        <published>2020-01-25T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bilbostack-2020.png" width="300" height="99" alt="BilboStack 2020" title="BilboStack 2020"  class=""></p>
</div>
<p>Se cumple la 9º edición de la conferencia del ámbito de proyectos de tecnología que una vez más ha sido hospeda en el palacio Euskalduna. Como anteriores ediciones en un formato de dos <em>tracks</em> simultáneos y cuatro presentaciones en cada uno, en una única mañana pero que se alarga durante la tarde con el <em>networking</em> y los pintxos, y da a tiempo a visitar la ciudad si se viene de viaje.</p>
<p>Las entradas fueron lanzadas en varias oleadas que en las primeras se agotaron en pocos minutos, incluso literalmente en unos segundos. Adquirir una entrada en la oleada final ya fue más sencillo. Al igual que el año anterior el precio ha sido muy reducido de 13,5 €.</p>
<p>Si otros años destacaba el desarrollo web, este año ha habido alguna presentación sobre la materia, este año ha habido algunas sobre varios de los temas que son tendencia en el desarrollo, <em>devops</em> junto con sus asuntos relacionados de monitorización y microservicios. Estas fueron principalmente a las que asistí como resumo más adelante.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/euskalduna-1_hu4c45e504cec8a34c92a5e5691b78757c_5019845_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Palacio Euskalduna"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/euskalduna-1_hu4c45e504cec8a34c92a5e5691b78757c_5019845_200x150_fit_q90_box.jpg" width="93" height="150" alt="Palacio Euskalduna" title="Palacio Euskalduna"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/euskalduna-2_hu6dd6b9ae66c35885ada90fef2e0e10d1_3468135_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Palacio Euskalduna"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/euskalduna-2_hu6dd6b9ae66c35885ada90fef2e0e10d1_3468135_200x150_fit_q90_box.jpg" width="200" height="103" alt="Palacio Euskalduna" title="Palacio Euskalduna"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/euskalduna-3_hu0621e2a1bbf10560f9f1df40e252030e_2809504_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Palacio Euskalduna"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/euskalduna-3_hu0621e2a1bbf10560f9f1df40e252030e_2809504_200x150_fit_q90_box.jpg" width="200" height="90" alt="Palacio Euskalduna" title="Palacio Euskalduna"  class="lozad "></a></p>
<figcaption>Palacio Euskalduna</figcaption>
</figure>
</div>
<p>Distribuidos por el recinto había varios <em>photocalls</em> en los que hacerse una foto.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/photocall-1_hu5d8f9a324ff03fc938de3bdfb5db9353_2237275_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Photocalls"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/photocall-1_hu5d8f9a324ff03fc938de3bdfb5db9353_2237275_200x150_fit_q90_box.jpg" width="200" height="98" alt="Photocalls" title="Photocalls"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/photocall-2_hu8c6402ff5204ac50189f5d955c500c55_2531989_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Photocalls"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/photocall-2_hu8c6402ff5204ac50189f5d955c500c55_2531989_200x150_fit_q90_box.jpg" width="69" height="150" alt="Photocalls" title="Photocalls"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/photocall-3_hu3658fee4f5e0d436b2256203604efa6e_2732563_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Photocalls"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/photocall-3_hu3658fee4f5e0d436b2256203604efa6e_2732563_200x150_fit_q90_box.jpg" width="200" height="145" alt="Photocalls" title="Photocalls"  class="lozad "></a></p>
<figcaption>Photocalls</figcaption>
</figure>
</div>
<p>Este año la acreditación ha sido un detalle que esté hecha de algodón reciclado que incluye semillas, se puede plantar, regar y ver que es lo que surge pasado unas semanas. También ha habido una zona amplia para los patrocinadores en los que ubicar sus <em>stands</em>, una oportunidad para conocerlos como posibles futuras oportunidades laborales, recoger varios obsequios que ofrecían y participar en algún sorteo en el tiempo de descanso entre las os primeras conferencias y las dos siguientes últimas.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/acreditacion-1_hu58a26507d6ff4cc6f08d0327354701ef_2580239_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Acreditación"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/acreditacion-1_hu58a26507d6ff4cc6f08d0327354701ef_2580239_200x150_fit_q90_box.jpg" width="200" height="142" alt="Acreditación" title="Acreditación"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/acreditacion-2_hu436118e08834772972721146c66b724f_2015730_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Acreditación"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/acreditacion-2_hu436118e08834772972721146c66b724f_2015730_200x150_fit_q90_box.jpg" width="114" height="150" alt="Acreditación" title="Acreditación"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/acreditacion-3_hu74eac74c4706c2aeb94193f2cfb23956_1715162_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Acreditación"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/acreditacion-3_hu74eac74c4706c2aeb94193f2cfb23956_1715162_200x150_fit_q90_box.jpg" width="117" height="150" alt="Acreditación" title="Acreditación"  class="lozad "></a></p>
<figcaption>Acreditación</figcaption>
</figure>
</div>
<p>Dado que los <em>tracks</em> son simultáneos y las charlas no se graban hay que elegir a que presentaciones nos resultan más atractivas, no siempre es fácil elegir y descartar la opción a la que no asistir.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/bilbostack-hashtag_hucd7bf045bd0d6516d084fbbe11d9bc28_592540_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="BilboStack hashtag"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/bilbostack-hashtag_hucd7bf045bd0d6516d084fbbe11d9bc28_592540_300x200_fit_q90_box.jpg" width="300" height="62" alt="BilboStack hashtag" title="BilboStack hashtag"  class="lozad "></a></p>
<figcaption>BilboStack hashtag</figcaption>
</figure>
</div>
<table class="table">
   <thead class="table-light">
       <th width="140px">Hora</th>
       <th>Sala OE</th>
   </thead>
   <tbody>
       <tr>
           <td>09:00-09:20</td>
           <td>Presentación</td>
       </tr>
       <tr>
           <td>09:30-10:20</td>
           <td>DevOps: el camino de la entrega de valor en software <em>por Luis Fraile Hernández</em></td>
       </tr>
       <tr>
           <td>10:30-11:20</td>
           <td>Monitorización con Prometheus <em>por Laura Morillo-Velarde Rodríguez y Beatriz Martínez</em></td>
       </tr>
       <tr>
           <td>11:30-12:00</td>
           <td>Networking + Café</td>
       </tr>
       <tr>
           <td>12:00-12:50</td>
           <td>¿Cómo de real puede llegar a ser la inteligencia artificial? <em>por Eduardo Matallanas</em></td>
       </tr>
       <tr>
           <td>13:00-13:50</td>
           <td>Otra charla sobre microservicios <em>por Isabel Garrido Cardenas y Sergi González</em></td>
       </tr>
       <tr>
           <td>> 14:00</td>
           <td>Networking + pintxos y poteo</td>
       </tr>
   </tbody>
</table>
<table class="table">
   <thead class="table-light">
       <th width="140px">Hora</th>
       <th>Sala OD</th>
   </thead>
   <tbody>
       <tr>
           <td>09:00-09:20</td>
           <td>Presentación</td>
       </tr>
       <tr>
           <td>09:30-10:20</td>
           <td>Unos estáticos muy dinámicos <em>por Joan León</em></td>
       </tr>
       <tr>
           <td>10:30-11:20</td>
           <td>El poder de las restricciones <em>por Silvia Calvet</em></td>
       </tr>
       <tr>
           <td>11:30-12:00</td>
           <td>Networking + Café</td>
       </tr>
       <tr>
           <td>12:00-12:50</td>
           <td>Implementing corporate Design Systems in React <em>por Ignacio Velázquez</em></td>
       </tr>
       <tr>
           <td>13:00-13:50</td>
           <td>Compassionate Hiring <em>por Berta Devant Pintado</em></td>
       </tr>
       <tr>
           <td>> 14:00</td>
           <td>Networking + pintxos y poteo</td>
       </tr>
   </tbody>
</table>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/cartel_hu9f60ff46072f22862b2af3f3fffc59c5_1802217_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Cartel"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/cartel_hu9f60ff46072f22862b2af3f3fffc59c5_1802217_300x200_fit_q90_box.jpg" width="121" height="200" alt="Cartel" title="Cartel"  class="lozad "></a></p>
<figcaption>Cartel</figcaption>
</figure>
</div>
<p>De las presentaciones a las que asistí recojo las ideas principales que he apuntado, es muy posible que haya alguna omisión importante y no les hagan justicia al nivel de las presentaciones pero hago mi esfuerzo para una año más cumplir con el resumen de este año y que de esta forma quede recogido en el artículo sobre lo que versó estas presentaciones.</p>
<h3 id="presentación">Presentación</h3>
<p>La jornada al igual que el año anterior ha empezado con una presentación sobre la conferencia y los agradecimientos a los patrocinadores por su apoyo asi como unos comentarios de un miembro de Lan Ekintza, agencia el sector público del Ayuntamiento de Bilbao para el desarrollo local, sobre sus motivos de la importancia para la ciudad de eventos como este que ya tienen muchos años de constancia y el interés para empresas importantes que cotizan en bolsa ya existentes con sede en Bilbao y para otras que en un futuro se establezcan en el nuevo Zorrozaurre como nuevo polo empresarial, en estos momentos está en una fase de construcción con algunas obras importantes ya realizadas con la apertura del canal y otras obras que ya se están acometiendo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/bilbostack_hu465021865f3976aa3d304cfc77f53e4f_3062626_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="BilboStack 2020"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/bilbostack_hu465021865f3976aa3d304cfc77f53e4f_3062626_300x200_fit_q90_box.jpg" width="300" height="176" alt="BilboStack 2020" title="BilboStack 2020"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/bilbostack-codigo-conducta_hufe3e53027ec58dc525f278bb336d4fd2_1877108_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="BilboStack 2020"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/bilbostack-codigo-conducta_hufe3e53027ec58dc525f278bb336d4fd2_1877108_300x200_fit_q90_box.jpg" width="297" height="200" alt="BilboStack 2020" title="BilboStack 2020"  class="lozad "></a></p>
<figcaption>BilboStack 2020</figcaption>
</figure>
</div>
<h3 id="devops-el-camino-de-la-entrega-de-valor-en-software-_por-luis-fraile-hernández_">DevOps: el camino de la entrega de valor en software <em>por Luis Fraile Hernández</em></h3>
<p>La cultura o método de <em>devops</em> incluye personas, procesos y productos con el objetivo de habilitar la entrega de valor al negocio y a sus usuarios, rápida y constante resolviendo problemas y no creando otros. Incluye ámbitos como el desarrollo, despliegue, monitorización y operación, requiere planificación. No basta con entregar de cualquier forma, ha de funcionar y tener calidad, en pequeños entregables los defectos se pueden descubrir y validar hipótesis antes y más rápido.</p>
<p>Hay varias estrategias de despliegue:</p>
<ul>
<li><em>blue-green</em>: se despliegan en un entorno nuevo sin eliminar el antiguo.</li>
<li><em>rolling updates</em>: se despliega de forma progresiva entre todas las instancias de servicio.</li>
<li><em>feature togles</em>: la nueva funcionalidad se activa o desactiva mediante una condición.</li>
<li>Es posible emplear varias de las anteriores a la vez ya que no son exclusivas.</li>
</ul>
<p>Estos despliegues progresivos son aplicables al código, requieren también despliegues progresivos en las base de datos empleando los pasos <em>Expand, Migrate, Contract</em>. Un caso es crear una nueva columna, copiar los datos a ella, mantener la versión antigua y nueva y finalmente completada la migración eliminar la columna antigua. Las migraciónes progresivas también son aplicables a las APIs.</p>
<p>La monitorización permite conocer si una funcionalidad se está utilizando y obtener información del funcionamiento interno de la aplicación. La infraestructura se puede convertir en inmutable con tecnologías como contenedores como <a href="https://www.docker.com/">Docker</a> y <a href="https://kubernetes.io/">Kubernetes</a> y tratar como código con tecnologías como <a href="https://www.terraform.io/">Terraform</a>. La gestión del código puede ser usando <em>git flow</em> o <em>trunk based</em> y con un único repositorio que incluya todo para tratarlo como el entregable.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.slideshare.net/lfraile/bilbostack-2020-el-camino-de-l-a-entrega-en-devops">Diapositivas presentación</a></li>
</ul>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/devops_hu4c8d890fdc9373716d30e01f610b05cf_1279823_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="DevOps: el camino de la entrega de valor en software _por Luis Fraile Hernández_"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/devops_hu4c8d890fdc9373716d30e01f610b05cf_1279823_600x450_fit_q90_box.jpg" width="600" height="338" alt="DevOps: el camino de la entrega de valor en software _por Luis Fraile Hernández_" title="DevOps: el camino de la entrega de valor en software _por Luis Fraile Hernández_"  class="lozad "></a></p>
<figcaption>DevOps: el camino de la entrega de valor en software por Luis Fraile Hernández</figcaption>
</figure>
</div>
<h3 id="monitorización-con-prometheus-por-_laura-morillo-velarde-rodríguez-y-beatriz-martínez_">Monitorización con Prometheus por <em>Laura Morillo-Velarde Rodríguez y Beatriz Martínez</em></h3>
<p>La herramienta de monitorización <a href="https://prometheus.io/">Prometheus</a> se está convirtiendo en un estándar, muchas herramientas incluyen exportan métricas en formato <em>prometheus</em>, unas de forma nativa y otras mediante adaptadores. <a href="https://openmetrics.io/">OpenMetrics</a> trata de crear un estándar para la transmisión de métricas en representación en formato de texto y con <a href="https://developers.google.com/protocol-buffers/">Protocol Buffers</a>.</p>
<p>La monitorización de caja negra analiza elementos externos del servicio como tiempo de respuesta, carga de CPU, memoria. La monitorización de caja blanca expone métricas propias de la aplicación. Al analizar las métricas hay que definir unos valores umbrales considerados como el funcionamiento correcto, de las métricas se extraen tendencias conociendo si es incremental o decremental, también se extraen correlaciones un fallo B puede estar causando por un fallo A. En el caso de una API para evaluar el estado de una API se pueden definir umbrales para las métricas de <em>request rate</em>, <em>error rate</em> y <em>duration response time</em>.</p>
<p>Las métricas de aplicación requieren instrumentalizar la aplicación para exponer los valores de los cuales es posible extraer información con valor para negocio. Hay cuatro tipos de métricas:</p>
<ul>
<li><em>Counter</em>: valor que se incrementa o reinicializa pero no se decrementa.</li>
<li><em>Gauge</em>: va tomando valores mayores o menores que el anterior.</li>
<li><em>Histogram</em>: son agrupaciones de los valores que se recogen.</li>
<li><em>Summary</em>: trabajan con percentiles y medias.</li>
</ul>
<p>En base a las métricas un sistema de alertas envía notificaciones cuando se detectan situaciones anómalas. Para un sistema de alertas efectivo hay que tener varias consideraciones. Una de ellas es que cuando lleguen alertas no sean ignoradas, solo han de llegar a las personas interesadas y que cuando les lleguen sea para que sean atendidas con alguna intervención. Si llegan alertas en las que hay que determinar si requieren atención corren el riesgo de que sean ignoradas. Para mayor efectividad las alertas se pueden deduplicar, agrupar, enrutar, inhibir y silenciar, funcionalidades que ofrece <a href="https://prometheus.io/docs/alerting/alertmanager/">Alertmanager</a>.</p>
<p>Los sistemas actuales requieren no solo saber el estado de funcionamiento de cada elemento de la infraestructura, también cuando no funcionan por qué. También permiten reaccionar de forma proactiva para evitar errores antes de que ocurran.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/prometheus_hu31b0e0167ef3e31cbd19df9ae3360292_1905491_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Monitorización con Prometheus por Laura Morillo-Velarde Rodríguez y Beatriz Martínez"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/prometheus_hu31b0e0167ef3e31cbd19df9ae3360292_1905491_600x450_fit_q90_box.jpg" width="600" height="369" alt="Monitorización con Prometheus por Laura Morillo-Velarde Rodríguez y Beatriz Martínez" title="Monitorización con Prometheus por Laura Morillo-Velarde Rodríguez y Beatriz Martínez"  class="lozad "></a></p>
<figcaption>Monitorización con Prometheus por Laura Morillo-Velarde Rodríguez y Beatriz Martínez</figcaption>
</figure>
</div>
<h3 id="descanso">Descanso</h3>
<p>Momento de tomar un café y pasar por los <em>stands</em> de los patrocinadores.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-1_hu496360b432eb7b2389b627e17d0a5b34_2449616_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Stands patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-1_hu496360b432eb7b2389b627e17d0a5b34_2449616_200x150_fit_q90_box.jpg" width="200" height="74" alt="Stands patrocinadores" title="Stands patrocinadores"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-2_hu740424492e81ce718b1e59ce57ee52b5_2904088_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Stands patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-2_hu740424492e81ce718b1e59ce57ee52b5_2904088_200x150_fit_q90_box.jpg" width="200" height="81" alt="Stands patrocinadores" title="Stands patrocinadores"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-3_hub2292a8774272a054c9c7c182cc4822d_2115399_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Stands patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-3_hub2292a8774272a054c9c7c182cc4822d_2115399_200x150_fit_q90_box.jpg" width="200" height="91" alt="Stands patrocinadores" title="Stands patrocinadores"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-4_hu210d2d4d2cdd306dc50c3684fada62ec_3066185_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Stands patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-4_hu210d2d4d2cdd306dc50c3684fada62ec_3066185_200x150_fit_q90_box.jpg" width="200" height="107" alt="Stands patrocinadores" title="Stands patrocinadores"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-5_huc615a28cb3f80763bdbaf48456d2c7cc_2191265_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Stands patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-5_huc615a28cb3f80763bdbaf48456d2c7cc_2191265_200x150_fit_q90_box.jpg" width="200" height="91" alt="Stands patrocinadores" title="Stands patrocinadores"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-6_huf408e0c61a61cb2b425ecbaf6e03b689_2534467_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Stands patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-6_huf408e0c61a61cb2b425ecbaf6e03b689_2534467_200x150_fit_q90_box.jpg" width="200" height="118" alt="Stands patrocinadores" title="Stands patrocinadores"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-7_hu9bec85e5ffb7fd031f78c3826e56a871_2923994_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Stands patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-7_hu9bec85e5ffb7fd031f78c3826e56a871_2923994_200x150_fit_q90_box.jpg" width="200" height="113" alt="Stands patrocinadores" title="Stands patrocinadores"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-8_hu395efcbe77b49d759326cfd97ca9f738_1134116_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Stands patrocinadores"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/patrocinadores-8_hu395efcbe77b49d759326cfd97ca9f738_1134116_200x150_fit_q90_box.jpg" width="79" height="150" alt="Stands patrocinadores" title="Stands patrocinadores"  class="lozad "></a></p>
<figcaption>Stands patrocinadores</figcaption>
</figure>
</div>
<h3 id="implementing-corporate-design-systems-in-react-_por-ignacio-velázquez_">Implementing corporate Design Systems in React <em>por Ignacio Velázquez</em></h3>
<p>Un sistema de diseño o <em>design system</em> es importante para tener consistencia de la imagen de marca en todos los canales de comunicación desde la web a una aplicación móvil, un correo electrónico o un folleto impreso. Incluye colores, tipografía, espaciado. Algunos <em>design systems</em> son:</p>
<ul>
<li><a href="https://material.io/">Material</a> de Google</li>
<li><a href="https://www.microsoft.com/design/fluent/#/">Fluent</a> de Microsoft</li>
<li><a href="https://primer.style/">Primer</a> de GitHub</li>
</ul>
<p>Al desarrollar un <em>design system</em> en una organización es importante ofrecer documentación, dar visibilidad al proyecto e involucrar a toda la empresa de forma que se use en todos los departamentos, ha de mantenerse como cualquier otro desarrollo. En la jerga de los <em>design system</em> se incluyen átomos, moléculas, organismos, plantillas y páginas.</p>
<ul>
<li><a href="http://atomicdesign.bradfrost.com/table-of-contents/">Atomic Design</a></li>
</ul>
<p>Varias herramientas son útiles para las pruebas y el desarrollo de un <em>design system</em>:</p>
<ul>
<li><a href="https://jestjs.io/">Jest</a>: para hacer pruebas de con JavaScript.</li>
<li><a href="https://storybook.js.org/">Storybook</a>: para desarrollar componentes React, Vue o Angular de forma aislada.</li>
<li><a href="https://www.chromaticqa.com/">Chromatic</a>: para probar los cambios visuales.</li>
<li><a href="https://www.browserstack.com/">BrowserStack</a>: para probar en varios dispositivos.</li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/design-systems_hu79f769902a7f24de26ceec4c444fbf52_3422768_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Implementing corporate Design Systems in React por Ignacio Velázquez"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/design-systems_hu79f769902a7f24de26ceec4c444fbf52_3422768_600x450_fit_q90_box.jpg" width="600" height="338" alt="Implementing corporate Design Systems in React por Ignacio Velázquez" title="Implementing corporate Design Systems in React por Ignacio Velázquez"  class="lozad "></a></p>
<figcaption>Implementing corporate Design Systems in React por Ignacio Velázquez</figcaption>
</figure>
</div>
<h3 id="otra-charla-sobre-microservicios-_por-isabel-garrido-cardenas-y-sergi-gonzález_">Otra charla sobre microservicios <em>por Isabel Garrido Cardenas y Sergi González</em></h3>
<p>Se empieza a desarrollar una aplicación en forma de monolito, a medida que es más grande la aplicación y la organización en número de personas se divide en áreas funcionales. El siguiente paso es crear crear APIs con contratos y microservicios que se comunican unos entre otros, quizá sigan compartiendo la base de datos y tienen dependencias. El resultado es un monolito distribuido que genera sus propios problemas de escalabilidad y pruebas.</p>
<p>Para conseguir desacoplar los microservicios y si la consistencia eventual es posible en vez de utilizar una comunicación síncrona y acoplada por API REST o <a href="https://grpc.io/">gRPC</a> hay que utilizar la comunicación desacoplada mediante eventos e implementar código reactivo a esos eventos.</p>
<p>El bus de eventos se convierte en un único punto de fallo con problemas que hay prever:</p>
<ul>
<li>Eventos duplicados</li>
<li>Eventos perdidos</li>
<li>Eventos desordenados</li>
<li>Implementar operaciones idempotentes en eventos</li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/microservicios_hu56fa6572604808dc3f7d36f82c1b52dc_1517543_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Otra charla sobre microservicios por Isabel Garrido Cardenas y Sergi González"><img src="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/images/microservicios_hu56fa6572604808dc3f7d36f82c1b52dc_1517543_600x450_fit_q90_box.jpg" width="600" height="423" alt="Otra charla sobre microservicios por Isabel Garrido Cardenas y Sergi González" title="Otra charla sobre microservicios por Isabel Garrido Cardenas y Sergi González"  class="lozad "></a></p>
<figcaption>Otra charla sobre microservicios por Isabel Garrido Cardenas y Sergi González</figcaption>
</figure>
</div>
<h3 id="acabando">Acabando</h3>
<p>Dicen que en este evento el evento en realidad es el postevento, lo que ocurre a partir de las 14:00 en el <em>networking</em>, pintxo y poteo. No lo conozco por experiencia propia porque no he estado en ninguno, no se me da bien y ya tengo suficiente con dedicar una mañana a la asistencia. En cualquier caso el evento es el momento ideal para saludar a algunos excompañeros de trabajo para saber como les va o como nos va. Este año hubo una charanga animando el <em>networking</em>.</p>
<div class="media">
    <amp-twitter width="650" height="550" data-tweetid="1221092391974768641"></amp-twitter>
    <blockquote placeholder>
<p lang="es" dir="ltr"><a href="https://twitter.com/hashtag/bilbostack20?src=hash&amp;ref_src=twsrc%5Etfw">#bilbostack20</a> sorpresa!!! <a href="https://t.co/6G1QmUHpe1">pic.twitter.com/6G1QmUHpe1</a></p>&mdash; Sergio (@Sergixnet) <a href="https://twitter.com/Sergixnet/status/1221092391974768641?ref_src=twsrc%5Etfw">January 25, 2020</a>
</blockquote>
</div>
<p>En las presentaciones se han mencionado algunas herramientas pero en estas que he estado este año han sido todas bastante teóricas, a los que ya conocen algo del tema que se trata poco les será nuevo y a los que no conocemos el tema hay que indagar acabado el evento para darle algo de sentido a lo expuesto. He recogido algunas ideas que con tiempo será interesante profundizar como el caso de los <em>design systems</em>.</p>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/01/los-permisos-del-sistema-de-archivos-de-gnu-linux/</id>
        <title>Los permisos del sistema de archivos de GNU/Linux</title>
        <updated>2020-01-21T20:15:00+01:00</updated>
        <published>2020-01-17T19:15:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/01/los-permisos-del-sistema-de-archivos-de-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El sistema de permisos de GNU/Linux por defecto es menos capaz que el de Windows basado en listas de control o ACLs pero es más sencillo y suficiente para muchos casos y usuarios. Cada archivo o directorio tiene unos bits de control que determinan los permisos de lectura, escritura y ejecución para el propietario, grupo y el resto de usuarios. Los comandos <em>ls</em>, <em>chmod</em> y <em>chown</em> permiten listar los permisos de los archivos y cambiarlos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>En un sistema multiprogramado como son cualquiera de los actuales modernos que son utilizados por varios usuarios y programas es necesario que tengan algún mecanismo de seguridad y permisos para proteger los recursos. En el caso del sistema de archivos GNU/Linux usa un sistema simple pero suficiente para una buena parte de casos de uso.</p>
<p>En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> implemenan un <a href="https://es.wikipedia.org/wiki/Control_de_Acceso_Discrecional">control de acceso discrecional</a> o DAC en el que los permisos de cada archivo se dividen en lectura, escritura y ejecución, identificados por las letras <em>rwx</em> respectivamente, para el propietario del archivo, el grupo de usuarios al que pertenece y para el resto de usuarios, identificados estos grupos con las letras <em>ugo</em> respectivamente. Para saber si se posee el permiso de lectura, escritura y ejecución se utiliza un bit para cada uno de ellos. Para el conjunto de usuario, grupo y resto de usuarios en total se utilizan 9 bits. Estos 9 bits forman la cadena <em>rwxrwxrwx</em> que para escribirlos de forma numérica y más simple se pueden utilizar base octal, por ejemplo 744 se traduce a binario en 111100100 significando que el usuario tiene permisos para leer, escribir y ejecutar el archivo, dados los tres primeros bits, y el grupo de usuario y resto de usuarios solo tienen el permiso de lectura.</p>
<p>Con el comando para listar el contenido de un directorio <em>ls -lha</em> se muestra el listado en formato largo con la opción <em>-l</em> que incluye los permisos, las unidades de tamaño en formato legible para humanos con la opción <em>-h</em>, con la opción <em>-a</em> incluye los archivos ocultos que son los que empiezan por <em>.</em> y con la opción <em>--group-directories-first</em> los directorios primero.</p>
<p>En los listados del comando <em>ls</em> el primer caracter indica si el archivo es un archivo regular o un directorio que se identifican por la letra <em>d</em> como el directorio <em>Descargas</em>, si fuese una <em>l</em> indicaría que es un enlace como el enlace <em>.steampath</em>. El propietario de los archivos es mi usuario <em>picodotdev</em>, salvo en el caso del directorio superior referenciado con <em>..</em> que es el superusuario <em>root</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">$ ls -lha --group-directories-first&#10;total 376K&#10;drwx------ 39 picodotdev picodotdev 4,0K ene 15 22:27 .&#10;drwxr-xr-x  3 root&nbsp;&nbsp;&nbsp;&nbsp;   root&nbsp;&nbsp;&nbsp;&nbsp;   4,0K nov 28  2018 ..&#10;drwx------ 48 picodotdev picodotdev 4,0K ene 13 19:22 .cache&#10;drwx------ 45 picodotdev picodotdev 4,0K ene 13 23:49 .config&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K ene  6 01:57 Descargas&#10;drwxr-xr-x  3 picodotdev picodotdev 4,0K sep 25 23:00 Documentos&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K dic 19  2018 Escritorio&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K mar 18  2019 Grabaciones&#10;drwxr-xr-x  8 picodotdev picodotdev 4,0K abr 18  2019 .gradle&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K dic 29  2018 Imágenes&#10;drwxr-xr-x  4 picodotdev picodotdev 4,0K nov 29  2018 .java&#10;drwx------  3 picodotdev picodotdev 4,0K nov 28  2018 .local&#10;drwxr-xr-x  4 picodotdev picodotdev 4,0K feb 22  2019 .m2&#10;drwx------  5 picodotdev picodotdev 4,0K nov 28  2018 .mozilla&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K dic 20  2018 Música&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K nov 28  2018 Plantillas&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K nov 28  2018 Público&#10;drwxr-xr-x  5 picodotdev picodotdev 4,0K ene 11 00:58 Software&#10;drwx------  2 picodotdev picodotdev 4,0K may  3  2019 .ssh&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K sep 24 23:20 .steam&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K nov 30  2018 Vídeos&#10;drwxr-xr-x  2 picodotdev picodotdev 4,0K feb  1  2019 .vim&#10;-rw-------  1 picodotdev picodotdev 8,9K ene 15 22:27 .bash_history&#10;-rw-r--r--  1 picodotdev picodotdev   21 jun  4  2018 .bash_logout&#10;-rw-r--r--  1 picodotdev picodotdev   57 jun  4  2018 .bash_profile&#10;-rw-r--r--  1 picodotdev picodotdev  541 nov 28 22:14 .bashrc&#10;-rw-r--r--  1 picodotdev picodotdev   73 dic  1  2018 .gitconfig&#10;-rw-r--r--  1 picodotdev picodotdev  16K dic  1  2018 .git-prompt.sh&#10;lrwxrwxrwx  1 picodotdev picodotdev   35 sep 24 23:19 .steampath -&gt; /home/picodotdev/.steam/sdk32/steam&#10;lrwxrwxrwx  1 picodotdev picodotdev   33 sep 24 23:19 .steampid -&gt; /home/picodotdev/.steam/steam.pid</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ls.sh</span>
    </div>
</div>
<p>Para cambiar los permisos de un archivo se utiliza el comando <em>chmod</em> pudiendo utilizarse de varias formas. El primer caso establece todos los bits dando permisos de lectura, escritura y ejecución al usuario propietario de archivo, y de lectura para los usuarios del grupo y para el resto de usuarios. El segundo caso da permisos de lectura al usuario en el archivo indicado. El tercer caso quita los permisos de escritura al resto de usuarios. El cuarto caso da permisos de ejecución a todos, al propietario del archivo, a los usuarios de su grupo y al resto de usuarios.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ chmod <span class="m">644</span> README.md&#10;$ chmod r+u README.md&#10;$ chmod r-o README.md&#10;$ chmod x-a README.md</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chmod.sh</span>
    </div>
</div>
<p>El comando <em>chown</em> permite cambiar el propietario del archivo. En este caso se establece como propietario del archivo el usuario <em>root</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ chmod root README.md&#10;$ chmod root:root README.md&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chown.sh</span>
    </div>
</div>
<p>En el caso de los directorios tener el permiso de lectura significa poder listar el contenido del directorio (<em>ls</em>), el permiso de escritura poder crear archivos, renombrar y eliminar archivos (por ejemplo con <em>touch</em>, <em>mkdir</em>) y el de ejecución en un directorio otorga acceso al contenido de los archivos (se concede dependiendo de los propios permisos del archivo).</p>
<p>En el permiso de ejecución en vez de una <em>x</em> puede aparecer una <em>s</em> en en los permisos de grupos de usuario y grupo y significa que al ejecutar el archivo en vez de tomar como usuario de ejecución el del usuario o grupo del usuario que lo ejecuta se toma el usuario y grupo del archivo, estos son los <em>setuid</em> y <em>setgid</em>. Si en en el bit de ejecución del grupo otros aparece una <em>t</em> indica que el directorio es <em>sticky</em> y solo el dueño del directorio o el usuario <em>root</em> pueden renombrar o eliminar archivos.</p>
<ul>
<li><code>r</code>: lectura.</li>
<li><code>w</code>: escritura.</li>
<li><code>x</code>: ejecución.</li>
<li><code>u</code>: usuario.</li>
<li><code>g</code>: grupo.</li>
<li><code>o</code>: otros.</li>
<li><code>a</code>: todos (usuario, grupo y otros).</li>
<li><code>+</code>: añadir permisos.</li>
<li><code>-</code>: quitar permisos.</li>
<li><code>d</code>: directorio.</li>
<li><code>l</code>: enlace simbólico.</li>
<li><code>s</code>: <em>setuid</em> y <em>setgid</em>.</li>
<li><code>t</code>: <em>sticky</em>.</li>
</ul>
<p>Estos son algunos ejemplos de permisos en directorios.</p>
<p>El usuario <em>archie</em> tiene acceso al directorio <em>Documents</em>. Puede listar, crear archivos, renombrar y eliminar cualquier archivo en <em>Documents</em> independientemente de los permisos de esos archivos. Su posibilidad de acceder al contenido de los archivos dependen de los permisos del archivo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">drwx------ 6 archie users  4096 Jul  5 17:37 Documents&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>permissions-1.sh</span>
    </div>
</div>
<p>En este caso sin el permiso de lectura en el directorio <em>archie</em> tiene acceso completo pero no puede crear, renombrar ni eliminar archivos. Puede listar los archivos y acceder al contenido de los archivos si los permisos de ese archivo lo permiten.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">dr-x------ 6 archie users  4096 Jul  5 17:37 Documents&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>permissions-2.sh</span>
    </div>
</div>
<p><em>archie</em> no puede listar los archivos del directorio pero si conocer el nombre de un archivo existente puede listarlo, renombrarlo, eliminarlo y acceder a su contenido (si los permisos del archivo lo permiten). También puede creer nuevos archivos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">d-wx------ 6 archie users  4096 Jul  5 17:37 Documents&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>permissions-3.sh</span>
    </div>
</div>
<p><em>archie</em> solo es capaz de acceder a los archivos que conoce (si los permisos de ese archivo lo permiten). No puede listar archivos existentes ni crear, renombrar o eliminar ninguno de ellos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">d--x------ 6 archie users  4096 Jul  5 17:37 Documents&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>permissions-4.sh</span>
    </div>
</div>
<p>Debe tenerse en cuenta que los anteriores son permisos sobre directorios y son independientes de los permisos de los archivos individuales. Cuando se crea un nuevo archivo es el directorio el que cambia, este es el por qué se necesitan permisos en el directorio.</p>
<p>Otro ejemplo, en este caso para un archivo, no un directorio. La primera letra no es una <em>d</em> sino un <em>-</em>, con lo que <em>foobar</em> es un archivo, no un directorio. Los permisos del propietario son <em>rw-</em> de modo que el propietario (<em>archie</em>) tiene la capacidad de leer y escribir pero no de ejecutarlo. El permiso de ejecución no es necesario si los archivos son de texto o datos. Los permisos de grupo son <em>r--</em>, de modo que el grupo tiene la habilidad de leer el archivo pero no de escribir en él de ninguna forma, esencialmente es un archivo de solo lectura para el grupo. Los permisos para el grupo de otros es el mismo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">-rw-r--r-- 1 archie users  5120 Jun 27 08:28 foobar&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>permissions-5.sh</span>
    </div>
</div>
<p>Otros esquemas más flexibles pero más complejos son las <a href="https://wiki.archlinux.org/index.php/Access_Control_Lists">listas de control de acceso</a> o ACL y los sistemas de control de acceso obligatorio o MAC, GNU/Linux también soporta este tipo de seguridades <a href="https://wiki.archlinux.org/index.php/Access_Control_Lists">activando ACL</a> o <a href="https://wiki.archlinux.org/index.php/SELinux">activando SELinux</a>. Las ACL permiten dar permisos específicos a cualquier usuario o grupo para cualquier archivo.</p>
<p>En la <a href="https://wiki.archlinux.org/index.php/File_permissions_and_attributes">wiki de Arch Linux sobre permisos de archivo y atributos</a> se explica detalladamente y con ejemplos el sistema de permisos en GNU/Linux.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Setuid">setuid</a></li>
<li><a href="https://en.wikipedia.org/wiki/Sticky_bit">Sticky bit</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Access_Control_Lists">Access Control Lists</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/</id>
        <title>Tomar capturas de pantalla de páginas web desde la línea de comandos o desde la interfaz gráfica con Firefox</title>
        <updated>2020-01-11T20:30:00+01:00</updated>
        <published>2020-01-10T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El navegador web Firefox tiene una opción con la que poder tomar una captura de pantalla de una página web desde la línea de comandos, que es útil como parte de un proceso automatizado. Firefox también permite tomar capturas de pantalla de una página web desde su interfaz gráfica o desde la consola web.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/firefox.svg" width="200" height="188" alt="Firefox" title="Firefox"  class=""></p>
</div>
<p>Como norma general las pruebas de una aplicación deben estar automatizadas con una herramienta de <em>testing</em>. <a href="https://picodotdev.github.io/blog-bitix/2019/06/teses-unitarios-parametrizados-con-junit/">Para el código Java una herramienta de pruebas es JUnit</a> y <a href="https://picodotdev.github.io/blog-bitix/2018/07/pruebas-funcionales-con-geb-en-una-aplicacion-web-java/">para una aplicación web es Geb</a>. Sin embargo, algunas pruebas que no son de funcionalidad de la aplicación sino en una aplicación web por ejemplo de estilos y de visualización en la pantalla, que la página se muestre correctamente. Para estos casos no queda más que revisar, visualizar y comprobar la corrección visual de la misma, una posibilidad es entrar en la página manualmente mediante su dirección y realizar la comprobación.</p>
<p>Sin embargo, las acciones manuales hay que evitarlas en la medida de lo posible y que sean las menos posibles realizando su automatización ya que consumen mucho tiempo dedicable a tareas de valor. En este caso realizando la automatización se evita abrir el navegador, introducir la URL de la página o navegar hasta ella por cada URL a probar.</p>
<p>Aunque la revisión visual no esté automatizada y dependa de intervención humana al menos evitando las acciones manuales de introducir la URL o navegar hasta ella supone un ahorro de tiempo importante. La correcta visualización de una página puede consistir en revisar una captura de pantalla de la página y la automatización consiste en obtener esa captura de pantalla.</p>
<p>Esta automatización es interesante también ya que guardando los archivos de captura permiten tener un registro del estado de la visualización de una página a lo largo del tiempo y ver los cambios que se han ido realizando.</p>
<h3 id="captura-de-pantalla-desde-la-linea-de-comandos-con-firefox">Captura de pantalla desde la linea de comandos con Firefox</h3>
<p>Para obtener la captura de pantalla el navegador <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> permite desde la línea de comandos cargar una página a partir de su URL y obtener su captura de pantalla guardándola en un archivo <em>jpg</em> o <em>png</em>. Las capturas de pantalla también se pueden tomar en un servidor <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> sin interfaz gráfica con un comando habiendo instalado Firefox previamente para este propósito.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ firefox -P headless -headless --screenshot duckduckgo.png https://duckduckgo.com/&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>firefox-screenshot.sh</span>
    </div>
</div>
<p>El parámetro <em>-P</em> indica el perfil a usar y hay que crear uno para tomar capturas de pantalla al mismo tiempo que está abierto el perfil personal en una ventana gráfica del navegador. Hay varias formas de crear un nuevo perfil en Firefox. Desde la página de configuración <em>about:profiles</em>, con el gestor de perfiles o desde la línea de comandos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/firefox-about-profiles_hufa9635f8e1b0346f619225c53c18abe8_103349_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Perfiles de usuario en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/firefox-about-profiles_hufa9635f8e1b0346f619225c53c18abe8_103349_300x200_fit_box_3.png" width="244" height="200" alt="Perfiles de usuario en Firefox" title="Perfiles de usuario en Firefox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/firefox-gestor-perfiles_hu8ba69a7fa6fe46c9363aa0e5801916cc_33219_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Gestor de perfiles de Firefox"><img src="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/firefox-gestor-perfiles_hu8ba69a7fa6fe46c9363aa0e5801916cc_33219_300x200_fit_box_3.png" width="222" height="200" alt="Gestor de perfiles de Firefox" title="Gestor de perfiles de Firefox"  class="lozad "></a></p>
<figcaption>Perfiles de usuario y gestor de perfiles de Firefox</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ firefox -p&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>firefox-gestor-perfiles.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ firefox -CreateProfile headless&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>firefox-createprofile.sh</span>
    </div>
</div>
<p>Si hay necesidad de tomar varias capturas de pantalla de diferentes URLs de la aplicación o diferentes páginas web, con un script del intérprete de comandos <a href="https://es.wikipedia.org/wiki/Bash">Bash</a> y dada una lista de URLs una por línea en un archivo se realiza el bucle. El parámetro <em>screenshot</em> contiene el nombre de la imagen en el que guardar la captura y a continuación la URL de la que tomar la captura, el parámetro <em>--window-size</em> especifica el ancho del navegador al tomar la captura, cambiar el ancho permite observar como se visualiza la página en diferentes resoluciones de ancho (1366, 1600, 1920, 2560, &hellip;).</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">google,https://www.google.es&#10;duckduckgo,https://duckduckgo.com&#10;ubuntu,https://www.ubuntu.com&#10;redhat,https://www.redhat.com&#10;archlinux,https://www.archlinux.org</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>links.txt</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>cat links.txt <span class="p">|</span> <span class="k">while</span> <span class="nb">read</span> -r LINE&#10;<span class="k">do</span>&#10;  <span class="nv">NAME</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$LINE</span> <span class="p">|</span> cut -d <span class="se">\,</span> -f 1<span class="sb">`</span>&#10;  <span class="nv">URL</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$LINE</span> <span class="p">|</span> cut -d <span class="se">\,</span> -f 2<span class="sb">`</span>&#10;  firefox -P headless -headless --screenshot <span class="s2">&#34;</span><span class="nv">$NAME</span><span class="s2">.png&#34;</span> <span class="nv">$URL</span> --window-size<span class="o">=</span><span class="m">1920</span>&#10;<span class="k">done</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>firefox-screenshot-links.sh</span>
    </div>
</div>
<p>El resultado son las siguientes capturas de pantalla.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/google_hu45b934e7544d9d05a8deffa10a627cd7_50467_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Google"><img src="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/google_hu45b934e7544d9d05a8deffa10a627cd7_50467_300x200_fit_box_3.png" width="300" height="120" alt="Google" title="Google"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/duckduckgo_hu34683831885d8be1d35773589bdb7690_439624_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="DuckDuckGo"><img src="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/duckduckgo_hu34683831885d8be1d35773589bdb7690_439624_300x200_fit_box_3.png" width="100" height="200" alt="DuckDuckGo" title="DuckDuckGo"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/ubuntu_hu770ccb2a2fa4fc0af06b278df92dc312_431155_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ubuntu"><img src="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/ubuntu_hu770ccb2a2fa4fc0af06b278df92dc312_431155_300x200_fit_box_3.png" width="84" height="200" alt="Ubuntu" title="Ubuntu"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/redhat_hu7d9600702af10b4b100108c913311141_1482120_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="RedHat"><img src="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/redhat_hu7d9600702af10b4b100108c913311141_1482120_300x200_fit_box_3.png" width="96" height="200" alt="RedHat" title="RedHat"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/archlinux_hu763c3287d0d16291e76f19c3febbdd9c_479946_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Arch Linux"><img src="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/archlinux_hu763c3287d0d16291e76f19c3febbdd9c_479946_300x200_fit_box_3.png" width="228" height="200" alt="Arch Linux" title="Arch Linux"  class="lozad "></a></p>
<figcaption>Capturas de pantalla realizadas con Firefox en modo headless</figcaption>
</figure>
</div>
<p>Con un gran número de páginas validar visualmente cada una de las páginas mediante una imagen aun con la automatización de tomar la captura consume una buena cantidad de tiempo, para reducir el número de capturas a validar el archivo puede limitarse a unas representativas de la aplicación o unas aleatorias de todo el conjunto, con los comandos <em>sort -R</em> y <em>head -3</em> se toman las 3 primeras líneas aleatorias del archivo, el comando <em>sort</em> las ordena de forma aleatoria y el comando <em>head</em> toma el número de líneas indicado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>cat links.txt <span class="p">|</span> sort -R <span class="p">|</span> head -3 <span class="p">|</span> <span class="k">while</span> <span class="nb">read</span> -r LINE&#10;<span class="k">do</span>&#10;  <span class="nv">NAME</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$LINE</span> <span class="p">|</span> cut -d <span class="se">\,</span> -f 1<span class="sb">`</span>&#10;  <span class="nv">URL</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$LINE</span> <span class="p">|</span> cut -d <span class="se">\,</span> -f 2<span class="sb">`</span>&#10;  firefox -P headless -headless --screenshot <span class="s2">&#34;</span><span class="nv">$NAME</span><span class="s2">.png&#34;</span> <span class="nv">$URL</span> --window-size<span class="o">=</span><span class="m">1920</span>&#10;<span class="k">done</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>firefox-screenshot-links-random-firts.sh</span>
    </div>
</div>
<h3 id="captura-de-pantalla-desde-firefox">Captura de pantalla desde Firefox</h3>
<p>Firefox también permite tomar capturas de pantalla desde la interfaz gráfica, con el botón derecho y la opción del menú emergente <em>Hacer una captura de pantalla</em> de la pantalla completa o de la parte visible en ese momento o también desde el <em>Inspector</em> que se muestra con el botón derecho y la opción <em>Inspeccionar elemento</em> y habilitando la opción <em>Hacer una captura de pantalla de la página completa</em> y si se desea <em>Captura de pantalla al portapapeles</em> con las opciones de los ajustes.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/firefox-ajustes-inspector_hu8525e663c6d118f26df03b7c175e7e2e_175521_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ajustes para mostrar botón de captura en las herramientas del inspector"><img src="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/images/firefox-ajustes-inspector_hu8525e663c6d118f26df03b7c175e7e2e_175521_300x200_fit_box_3.png" width="269" height="200" alt="Ajustes para mostrar botón de captura en las herramientas del inspector" title="Ajustes para mostrar botón de captura en las herramientas del inspector"  class="lozad "></a></p>
<figcaption>Ajustes para mostrar botón de captura en las herramientas del inspector</figcaption>
</figure>
</div>
<p>La consola web de Firefox también permite tomar capturas de pantalla escribiendo el comando <em>:screenshot</em>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode#Taking_screenshots">Firefox Headless mode Taking screenshots</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Tools/Taking_screenshots">Firefox Taking screenshots</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Tools/Taking_screenshots#Taking_screenshots_with_the_web_console">Firefox Taking screenshots with the web console</a></li>
<li><a href="https://support.mozilla.org/en-US/kb/profile-manager-create-remove-switch-firefox-profiles?redirectlocale=en-US&amp;redirectslug=profile-manager-create-and-remove-firefox-profiles">Profile Manager - Create, remove, or switch Firefox profiles</a></li>
<li><a href="https://stackoverflow.com/questions/15396190/read-file-line-by-line-and-perform-action-for-each-in-bash">Read file line by line and perform action for each in bash</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/</id>
        <title>Mejorar el tiempo de carga de una página web usando lazy load</title>
        <updated>2020-01-04T14:30:00+01:00</updated>
        <published>2020-01-04T12:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las páginas grandes y con muchos recursos como imágenes e <em>iframes</em> implementar la carga vaga o <em>lazy load</em> obtienen un gran beneficio, necesitando realizar menos peticiones en la carga inicial, con menos tamaño y cargándose en menos tiempo. Los navegadores han añadido soporte para desde JavaScript proporciona este soporte.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/firefox.svg" width="200" height="188" alt="Firefox" title="Firefox"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/chromium.svg" width="200" height="200" alt="Chromium" title="Chromium"  class=""></p>
</div>
<p>El tiempo de carga de una página web es una métrica importante para una buena experiencia de usuario, es una métrica evaluada por <em>PageSpeed</em> y también de cara al posicionamiento en los buscadores o SEO ya que influye en la fórmula que usa Google para clasificar y posicionar las páginas en la página de resultados de búsqueda, un buen posicionamiento en los buscadores es importante porque significa más visitas a una web que en muchos casos es la mayor fuente de usuarios. Un tiempo de carga alto hace que los usuarios abandonen la página antes de que esté cargada completamente, influyendo en el porcentaje de rebote y el tiempo de visita que se puede medir con <a href="https://www.google.es/intl/es/analytics/">Google Analytics</a>.</p>
<p>Una de las variables que influyen en el tiempo de carga es el número de peticiones y el tamaño de los recursos de esas peticiones que se hacen al servidor para descargar los elementos de la página completa, estos son imágenes, hojas de estilo, archivos de JavaScript, <em>iframes</em>, &hellip; Sin embargo, los navegadores cargan todos los elementos de una página incluso aquellos que están en la parte baja e inicialmente no se ven hasta que el usuario se desplaza hasta visualizarlos. Cargar elementos que no se visualizan es innecesario e ineficiente en el navegador pero también para el servidor que ha de atender a más peticiones.</p>
<p>Los artículos de mi blog como <a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/">Desempaquetado de PlayStation 4 Slim de 1 TB</a> o <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Desempaquetado Intel NUC8i5BEK (Bean Canyon), HyperX Impact (RAM) y Samsung 970 EVO NVMe (SSD)</a>, incluyen numerosas imágenes e <em>iframes</em> de vídeos de <a href="https://www.youtube.com/">Youtube</a> y publicidad de <a href="https://amzn.to/2flFhHA">Amazon</a>, en todas se carga los comentarios de <a href="https://disqus.com/">Disqus</a> y para compartir los artículos con <a href="https://www.sharethis.com/">ShareThis</a> que están al final de la página y hasta que el usuario no ha leído el artículo son innecesarios. Disqus además en concreto para cargarse realiza numerosas peticiones adicionales. Estás páginas son de las más complejas por número de recursos y extensión del artículo que tengo en el blog por lo que he analizado una de ellas antes y después aplicando <em>lazy loading</em> para cargar inicialmente solo los elementos que se visualizan que son aquellos que están en la parte superior de la página.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/playstation-1_hu77a4ff0b97c11f6c29e41756e7cbcd45_1044902_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página PlayStation"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/playstation-1_hu77a4ff0b97c11f6c29e41756e7cbcd45_1044902_300x200_fit_box_3.png" width="229" height="200" alt="Página PlayStation" title="Página PlayStation"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/playstation-2_hu75ad2004fc115c1067d362c617ff81b7_647357_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página PlayStation"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/playstation-2_hu75ad2004fc115c1067d362c617ff81b7_647357_300x200_fit_box_3.png" width="229" height="200" alt="Página PlayStation" title="Página PlayStation"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/intel-nuc-1_hu5156e66a4a552c7d437254e895810ac0_1101855_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página Intel NUC"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/intel-nuc-1_hu5156e66a4a552c7d437254e895810ac0_1101855_300x200_fit_box_3.png" width="229" height="200" alt="Página Intel NUC" title="Página Intel NUC"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/intel-nuc-2_hu9ceb9a4fbca9f78810fd77b4e7f3ee9c_525020_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página Intel NUC"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/intel-nuc-2_hu9ceb9a4fbca9f78810fd77b4e7f3ee9c_525020_300x200_fit_box_3.png" width="229" height="200" alt="Página Intel NUC" title="Página Intel NUC"  class="lozad "></a></p>
<figcaption>Páginas representativas de Blog Bitix</figcaption>
</figure>
</div>
<p>Analizando el número de peticiones, tamaño y tiempo de carga en la página de la PlayStation realizaban 343 peticiones inicialmente, con un tamaño de descarga de 5 MiB en un tiempo de carga según Firefox de 15 segundos. Evaluando esta página con <a href="https://developers.google.com/speed/pagespeed/insights/">PageSpeed</a> un aspecto importante que indica a mejora reducir el número de elementos descargados, además de reducir peticiones y tamaño de la página se descarguen inicialmente los elementos importantes y omitiendo recursos de JavaScript hace que el desempeño sea mejor. El resultado es un menor tiempo de carga.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-pagespeed-playstation-antes_huc588673ba030b79df5ba318272f09e80_380841_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Métricas de carga en PageSpeed página PlayStation antes"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-pagespeed-playstation-antes_huc588673ba030b79df5ba318272f09e80_380841_300x200_fit_box_3.png" width="122" height="200" alt="Métricas de carga en PageSpeed página PlayStation antes" title="Métricas de carga en PageSpeed página PlayStation antes"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-pagespeed-intel-nuc-antes_hu8d651fc4c2a812418c81e4df5b05586b_391200_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Métricas de carga de PageSpeed página Intel NUC antes"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-pagespeed-intel-nuc-antes_hu8d651fc4c2a812418c81e4df5b05586b_391200_300x200_fit_box_3.png" width="118" height="200" alt="Métricas de carga de PageSpeed página Intel NUC antes" title="Métricas de carga de PageSpeed página Intel NUC antes"  class="lozad "></a></p>
<figcaption>Métricas de carga en PageSpeed antes</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-firefox-antes_hu260c66b7ee5f53d44e96a6bc82086d89_9873_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Métricas de carga de Firefox página PlayStation antes"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-firefox-antes_hu260c66b7ee5f53d44e96a6bc82086d89_9873_300x200_fit_box_3.png" width="300" height="12" alt="Métricas de carga de Firefox página PlayStation antes" title="Métricas de carga de Firefox página PlayStation antes"  class="lozad "></a></p>
<figcaption>Métricas de carga en Firefox</figcaption>
</figure>
</div>
<p>La solución es cargar los elementos imágenes, <em>iframes</em>, vídeos y comentarios de Disqus cuando se vayan a visualizar al desplazarse el usuario hasta ellos. Esto reduce notablemente el número de peticiones realizadas inicialmente, el tamaño de descarga y el tiempo de carga. Una librería de JavaScript que permite realizar esta funcionalidad es <a href="https://apoorv.pro/lozad.js/">Lozad</a>, no tiene dependencias, es muy pequeña, es soprendentemente fácil de utilizar en relación con el beneficio que aporta. Aprovecha el soporte de la interfaz <a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver">IntersectionObserver</a> precisamente proporcionada por los navegadores para realizar la carga vaga o <em>lazy load</em> de forma eficiente.</p>
<p>Para las imágenes e <em>iframes</em> hay que añadir una clase a los elementos de HTML y cambiar el atributo <em>src</em> a <em>data-src</em>. Los comentarios de Disqus se cargan con un archivo de JavaScript por lo que hay que retrasar la carga hasta que el elemento HTML que los contiene se visualice y con una función de <em>callback</em> se inicia la inserción de su recurso de JavaScript utilizando <a href="https://jquery.com/">jQuery</a> para cargar insertar en la página dinámicamente recursos JavaScript.</p>
<p>Este es una plantilla que utilizo para generar de forma estática el contenido del blog con <a href="https://gohugo.io/">Hugo</a> en el que las imágenes ilustrativas de los artículos usan el atributo <em>data-src</em> e incluyen la clase de CSS <em>lozad</em>, en el código fuente o utilizando la función Inspeccionar se comprueba el HTML resultado. El otro archivo parte del JavaScript de este blog que implementa la carga vaga de las imágenes, <em>iframes</em> y <em>scritps</em> de Disqus y ShareThis. Para el caso de insertar JavaScript dinámicamente se observa un elemento con una expresión de jQuery y mediante una función <em>callback</em> que Lozad invoca cuando su elemento se visualiza momento en que se realiza la acción de insertar el recurso de JavaScript.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;media&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">figure</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{ $imagescaled1.RelPermalink }&#34;</span> <span class="na">title</span><span class="o">=</span><span class="s">&#34;{ .Params.title1 }&#34;</span> <span class="na">data-gallery</span><span class="o">=</span><span class="s">&#34;data-gallery&#34;</span><span class="p">&gt;&lt;</span><span class="nt">img</span> <span class="na">data-src</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb1.RelPermalink }&#34;</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb1.Width }&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb1.Height }&#34;</span> <span class="na">layout</span><span class="o">=</span><span class="s">&#34;responsive&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;lozad&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{ $imagescaled2.RelPermalink }&#34;</span> <span class="na">title</span><span class="o">=</span><span class="s">&#34;{ .Params.title2 }&#34;</span> <span class="na">data-gallery</span><span class="o">=</span><span class="s">&#34;data-gallery&#34;</span><span class="p">&gt;&lt;</span><span class="nt">img</span> <span class="na">data-src</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb2.RelPermalink }&#34;</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb2.Width }&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb2.Height }&#34;</span> <span class="na">layout</span><span class="o">=</span><span class="s">&#34;responsive&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;lozad&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{ $imagescaled3.RelPermalink }&#34;</span> <span class="na">title</span><span class="o">=</span><span class="s">&#34;{ .Params.title3 }&#34;</span> <span class="na">data-gallery</span><span class="o">=</span><span class="s">&#34;data-gallery&#34;</span><span class="p">&gt;&lt;</span><span class="nt">img</span> <span class="na">data-src</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb3.RelPermalink }&#34;</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb3.Width }&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;{ $imagescaledthumb3.Height }&#34;</span> <span class="na">layout</span><span class="o">=</span><span class="s">&#34;responsive&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;lozad&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">figcaption</span><span class="p">&gt;</span>{ .Params.caption }{ if .Params.source }<span class="p">&lt;</span><span class="nt">br</span><span class="p">/&gt;&lt;</span><span class="nt">small</span><span class="p">&gt;</span>{ i18n &#34;source&#34; }: { .Params.source }<span class="p">&lt;/</span><span class="nt">small</span><span class="p">&gt;</span>{ end }<span class="p">&lt;/</span><span class="nt">figcaption</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">figure</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>figureproc.html</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">require</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span> <span class="s1">&#39;lozad&#39;</span><span class="p">,</span> <span class="s1">&#39;jquery-blueimp-gallery&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">lozad</span><span class="p">,</span> <span class="nx">blueimp</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">function</span> <span class="nx">initLazyload</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">observer</span> <span class="o">=</span> <span class="nx">lozad</span><span class="p">(</span><span class="s1">&#39;.lozad&#39;</span><span class="p">,</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">rootMargin</span><span class="o">:</span> <span class="s1">&#39;50px 0px&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">disqusObserver</span> <span class="o">=</span> <span class="nx">lozad</span><span class="p">(</span><span class="s1">&#39;#disqus_thread&#39;</span><span class="p">,</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">rootMargin</span><span class="o">:</span> <span class="s1">&#39;50px 0px&#39;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">load</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">el</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;//&#39;</span> <span class="o">+</span> <span class="nx">disqus_shortname</span> <span class="o">+</span> <span class="s1">&#39;.disqus.com/&#39;</span> <span class="o">+</span> <span class="nx">disqus_script</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">async</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">cache</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">dataType</span><span class="o">:</span> <span class="s1">&#39;script&#39;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">shareThisObserver</span> <span class="o">=</span> <span class="nx">lozad</span><span class="p">(</span><span class="s1">&#39;div.sharethis-inline-share-buttons&#39;</span><span class="p">,</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">rootMargin</span><span class="o">:</span> <span class="s1">&#39;50px 0px&#39;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">load</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">el</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">url</span><span class="o">:</span> <span class="s1">&#39;//platform-api.sharethis.com/js/sharethis.js#property=5920c4ce1bd0670011e06acd&amp;product=inline-share-buttons&#39;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">async</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">cache</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">dataType</span><span class="o">:</span> <span class="s1">&#39;script&#39;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">observer</span><span class="p">.</span><span class="nx">observe</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">disqusObserver</span><span class="p">.</span><span class="nx">observe</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">shareThisObserver</span><span class="p">.</span><span class="nx">observe</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">...</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">initLazyload</span><span class="p">();</span>&#10;<span class="p">});</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>main.js</span>
    </div>
</div>
<p>Con simplemente esta mejora, que no es complicada de realizar, añadiendo el código anterior y realizando los sencillos cambios en los atributos de imágenes e <em>iframes</em> las métricas en la comparación con página anterior mejoran notablemente pasando apróximadamente de 15 segundos a menos de 4 en un tiempo de carga hasta que el navegador dejan de hacer peticiones.</p>
<table class="table">
    <thead class="table-light">
        <tr>
            <th width="140px">Página</th>
            <th width="140px">Prueba</th>
            <th>Antes</th>
            <th>Después</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>PlayStation</td>
            <td>Firefox</td>
            <td>343 peticiones, 5 MiB, 15s</td>
            <td>104 peticiones, 1.5 MiB, 3.5s</td>
        </tr>
        <tr>
            <td>PlayStation</td>
            <td>PageSpeed</td>
            <td>23</td>
            <td>44</td>
        </tr>
        <tr>
            <td>Intel NUC</td>
            <td>PageSpeed</td>
            <td>9</td>
            <td>38</td>
        </tr>
    </tbody>
</table>
<p>La métrica de PageSpeed mejoran notablemente, es una cifra sobre 100 que aún dista de ser alta debido a que Analytics y AdSense imponen una fuerte penalización por utilizarlos e incluirlos en las páginas. La página <a href="https://webpagetest.org">WebPageTest</a> proporciona algunos datos adicionales y complementarios a los proporcinados por PageSpeed, también es recomendable usarla para medir la variación en los resultados con los cambios realizados con el objetivo de mejorar una página.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-pagespeed-playstation-despues_hub973e372c1d61b2c7366348e15d773e2_317580_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Métricas de carga en PageSpeed página PlayStation después"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-pagespeed-playstation-despues_hub973e372c1d61b2c7366348e15d773e2_317580_300x200_fit_box_3.png" width="143" height="200" alt="Métricas de carga en PageSpeed página PlayStation después" title="Métricas de carga en PageSpeed página PlayStation después"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-pagespeed-intel-nuc-despues_hu48a435e40748cea35dc46412f417e0c3_362243_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Métricas de carga de PageSpeed página Intel NUC después"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-pagespeed-intel-nuc-despues_hu48a435e40748cea35dc46412f417e0c3_362243_300x200_fit_box_3.png" width="125" height="200" alt="Métricas de carga de PageSpeed página Intel NUC después" title="Métricas de carga de PageSpeed página Intel NUC después"  class="lozad "></a></p>
<figcaption>Métricas de carga en PageSpeed después</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-firefox-despues_huc3a78d2ed04602fa241101809a555e40_10225_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Métricas de carga de Firefox página PlayStation después"><img src="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/images/metricas-firefox-despues_huc3a78d2ed04602fa241101809a555e40_10225_300x200_fit_box_3.png" width="300" height="12" alt="Métricas de carga de Firefox página PlayStation después" title="Métricas de carga de Firefox página PlayStation después"  class="lozad "></a></p>
<figcaption>Métricas de carga en Firefox</figcaption>
</figure>
</div>
<p>Los navegadores van a añadir el soporte de carga vaga directamente en las imágenes e <em>iframes</em> con un el <a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading">atributo loading</a> mediante el cual el JavaScript anterior será innecesario para estos elementos.</p>
<p>En definitiva es un pequeño cambio sencillo de realizar y que mejora notablemente la experiencia de usuario, la carga del servidor, es recomendable para el SEO incluso desde el punto de vista de la privacidad de los usuarios.</p>
<p>Otro uso distinto para la carga vaga es lanzar eventos de Analytics, esto lo he empleado para saber si los usuarios llegan al final de los artículos. Con esto es posible obtener datos interesantes sobre cuales son las mejoras páginas o artículos, por ejemplo, para diferencia entre página muy visitada por que esté bien posicionada pero ni interesante para los usuarios porque no llegan al final del artículo o por el contrario páginas con pocas visitas pero que los usuarios las leen hasta el final.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">require</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span> <span class="s1">&#39;lozad&#39;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">lozad</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">function</span> <span class="nx">initAnalytics</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">pageBottomObserver</span> <span class="o">=</span> <span class="nx">lozad</span><span class="p">(</span><span class="s1">&#39;#pageBottom&#39;</span><span class="p">,</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">rootMargin</span><span class="o">:</span> <span class="s1">&#39;50px 0px&#39;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">load</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">el</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">ga</span><span class="p">(</span><span class="s1">&#39;send&#39;</span><span class="p">,</span> <span class="s1">&#39;event&#39;</span><span class="p">,</span> <span class="s1">&#39;page&#39;</span><span class="p">,</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span> <span class="s1">&#39;bottom&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;nonInteraction&#39;</span><span class="o">:</span> <span class="mi">1</span><span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">pageBottomObserver</span><span class="p">.</span><span class="nx">observe</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">initAnalytics</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">...</span>&#10;<span class="p">});</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>app.js</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Img">&lt;img&gt;: The Image Embed element</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/</id>
        <title>Hemeroteca #16</title>
        <updated>2019-12-31T19:30:00+01:00</updated>
        <published>2019-12-27T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Se acaba otro año y en este caso además la década, en el siguiente 2020 harán 10 años ya desde que empecé a escribir artículos técnicos principalmente sobre <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> y Java, algunos artículos de opinión y desempaquetados los productos que compro relacionados con la tecnología. Una década escribiendo uno o dos artículos semanales, no es fácil aguantar durante todo este tiempo y conservar la motivación y tener el tiempo que requieren cada uno de los artículos. Muchos surgen de ideas del trabajo que en muchos casos no puedo aplicar laboralmente, salvo alguna pequeña excepción, por implementarlos en Java por mi preferencia en el caso de los de programación y usar otras tecnologías laboralmente.</p>
<p>Este segundo semestre he escrito algunos artículos menos, 34, frente a los 48 del primer semestre y es que con la <a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/">compra de una PlayStation 4</a> estoy dedicando parte del tiempo que antes dedicaba al blog e investigar tecnología a jugar a algunos videojuegos, aún así esa cantidad de artículos sigue siendo al menos uno por semana que es mi cadencia mínima de publicación que deseo. En total en el 2019 he publicado 82 artículos para llegar a la cifra de 453 artículos en el tiempo de vida de Blog Bitix desde finales del 2013, son muchos más teniendo en cuenta para ser algo que dedico en mi tiempo libre y cada caracter de los artículos requiere teclearlo, corregir las faltas de ortografía, hacer que las frases estén bien construidas sintácticamente y sean fáciles de comprender, cada idea e imagen a recortar y capturar está colocada de forma artesanal y manual, lo único automatizado es generar la versión estática de la web que gracias a <a href="https://gohugo.io/">Hugo</a> junto con <a href="https://pages.github.com/">GitHub Pages</a> y algunos comandos de GNU/Linux me permite centrarme más en solo escribir el contenido.</p>
<p>Pero los artículos no es lo único que he hecho este 2019, he recibido algunas <em>pull request</em> e <em>issues</em> para <a href="https://picodotdev.github.io/blog-bitix/2017/01/script-para-instalar-arch-linux-facil-rapido-desatendido-automatizado-y-personalizable/">Script para instalar Arch Linux fácil, rápido, desatendido, automatizado y personalizable</a> y <a href="https://github.com/picodotdev/alis/">el repositorio en GitHub</a> tiene una buena cantidad de <em>stars</em> y <em>forks</em>, he continuado manteniendo la traducción al español de <a href="https://www.videolan.org/vlc/">VLC</a>, he enviado una actualización con las nuevas cadenas y corregidos algunos errores de la traducción al español para la reciente versión 6.1 de <a href="https://www.virtualbox.org/">VirtualBox</a> y tratado de mejorar la de <a href="https://keepassxc.org/">KeePassXC</a>, algunas mejoras internas para generar el blog, incluido <a href="https://picodotdev.github.io/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/">rediseñarlo para que el contenido esté centrado, más grande horizontalmente y publicidad lateral <em>sticky</em></a>.</p>
<p>Listando los <a href="https://picodotdev.github.io/blog-bitix/2019/">artículos que he escrito durante el año 2019</a> y este semestre, en la categoría de artículos de desempaquetado he escrito sobre la PlayStation 4.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/">Desempaquetado de PlayStation 4 Slim de 1 TB</a></li>
</ul>
<p>Dos de opinión.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/smartcards-en-vez-de-discos-para-una-futura-generacion-de-consolas/">Smartcards en vez de discos para una futura generación de consolas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/12/sobre-los-planes-de-pensiones-analizando-sus-ventajas-fiscales-y-rentabilidad/">Sobre los planes de pensiones, analizando sus ventajas fiscales y rentabilidad</a></li>
</ul>
<p>Una de las temáticas principales de este blog es GNU/Linux, dentro de ella de diversa temática desde programación hasta el entorno de escritorio.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/07/obtener-los-primeros-los-ultimos-o-los-caracteres-anteriores-y-posteriores-de-un-archivo-y-el-numero-de-ocurrencias-con-head-tail-y-grep/">Obtener los primeros, los últimos o los caracteres anteriores y posteriores de un archivo y el número de ocurrencias con head, tail y grep</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/">Administrar secretos y proteger datos sensibles con Vault</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">Generar credenciales de conexión a base de datos bajo demanda con Vault</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/">Utilizar credenciales de conexión a la base de datos generadas por Vault en una aplicación de Spring</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/">Guía de inicio del gestor de terminales y sesiones tmux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/">Microservicios con Spring Cloud, Consul, Nomad y Traefik</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/11/informacion-basica-del-sistema-y-entorno-de-escritorio-desde-la-terminal-de-gnu-linux/">Información básica del sistema y entorno de escritorio desde la terminal de GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/11/cambiar-la-ubicacion-por-defecto-de-los-directorios-de-usuario-en-gnu-linux/">Cambiar la ubicación por defecto de los directorios de usuario en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/">Gestionar biblioteca y convertir entre formatos de libros electrónicos con Calibre</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/">Nube privada para documentos personales con Nextcloud y OnlyOffice</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/">Comando para convertir imágenes JPEG y PNG a WebP</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/">Buscar en el historial desde la barra de direcciones inteligente de Firefox</a></li>
</ul>
<p>La otra temática principal de mi blog es la programación con el lenguaje <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> donde están la mayoría de los artículos que he escrito.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/">¿Donde comprar un ordenador sin Windows o con GNU/Linux?</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/07/los-tipos-de-modulos-de-jmps-anadidos-a-partir-de-java-9/">Los tipos de módulos de JPMS añadidos a partir de Java 9</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/">Recuperar datos eficientemente en GraphQL usando batching con data loaders</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/">Publicación y suscripción de eventos con Guava EventBus en una aplicación Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/implementar-tolerancia-a-fallos-con-resilience4j/">Implementar tolerancia a fallos con Resilience4j</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/">Iniciar una aplicación de Spring Boot en un puerto aleatorio</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/">Ejemplo sencillo de como crear un documento PDF con Java y PDFBox</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/09/la-aplicacion-cliente-de-steam-en-gnu-linux/">La aplicación cliente de Steam en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/09/libreria-editor-de-markdown-javascript-y-procesador-de-markdown-para-generar-html-con-java/">Librería editor de markdown JavaScript y procesador de markdown para generar HTML con Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/09/novedades-de-java-13/">Novedades de Java 13</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/">Ventajas de usar un tipo específico para los identificadores de las entidades en vez de un tipo básico</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/10/cobertura-de-codigo-y-mutation-testing-en-pruebas-unitarias-con-jacoco-y-pit-en-java/">Cobertura de código y mutation testing en pruebas unitarias con JaCoCo y PIT en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/11/interfaz-de-monitorizacion-e-instrumentalizacion-con-jmx-en-aplicaciones-java/">Interfaz de monitorización e instrumentalización con JMX en aplicaciones Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/11/rotar-los-archivos-de-trazas-con-log4j-por-fecha-o-tamano/">Rotar los archivos de trazas con log4j por fecha o tamaño</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/">Extraer información del navegador del usuario en el servidor de una aplicación web Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/">Implementar un segundo factor de autenticación en una aplicación web Java con Spring</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/">Generar documentos, informes y facturas en formato PDF con JasperReports y Java</a></li>
</ul>
<p>Pasado el año está bien hacer un pequeño balance de como ha sido para evaluar si hay algo que se puede hacer para mejorar, en cuanto a las cifras del blog en número de visitas se ha mantenido prácticamente igual al 2018 con ~500K páginas vistas, a pesar de la cifra anualizada no son más de 1.5K al día que no es mucho, hay mucho margen de mejora. Aunque siempre es un punto de motivación normalmente no pienso en escribir artículos que atraigan a más lectores sino antes en lo que me apetece escribir y publicar. Aún escribiendo artículos más avanzados uno de los artículos más visitados es a pesar de su sencillez y simplicidad <a href="https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/">4 formas de hacer un bucle for  en Java</a>, he escrito artículos mucho más complejos que mostrar varias formas de hacer un bucle <em>for</em> pero parece que los artículos sencillos tienen un público más amplio que los artículos más complejos.</p>
<p>He escrito lo que en cada momento lo que me ha apetecido, lógicamente no desdeñando conseguir más visitas pero sin ser esta la principal motivación de escribir algo. Como cada año, para observar las métricas pasados varios, hago públicos los datos de visitas en Analytics, ingresos de AdSense y de afiliación de Amazon. Por si a alguien sin blog, con uno o por comparar le resultan interesantes y quiere hacerse una idea.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/analytics-2019_hu3aadba81fd120c0c2335c999e048002a_85387_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Analytics 2019 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/analytics-2019_hu3aadba81fd120c0c2335c999e048002a_85387_600x450_fit_box_3.png" width="600" height="301" alt="Analytics 2019 de Blog Bitix" title="Analytics 2019 de Blog Bitix"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-2019_hu93d307567eb4898927b97f2f60790f43_39622_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="AdSense 2019 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-2019_hu93d307567eb4898927b97f2f60790f43_39622_600x450_fit_box_3.png" width="600" height="205" alt="AdSense 2019 de Blog Bitix" title="AdSense 2019 de Blog Bitix"  class="lozad "></a></p>
<figcaption>Evolución visitas e ingresos en 2019</figcaption>
</figure>
</div>
<p>En cuanto a ingresos algunos menos 410 € frente a 480 € del año anterior, aún así todos los meses de forma consistente los ingresos están alrededor de entre 20 y 30 € que no está mal.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-ingresos-2019_hu0aa956c9569059650f34c2752c61017b_152870_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ingresos 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-ingresos-2019_hu0aa956c9569059650f34c2752c61017b_152870_300x200_fit_box_3.png" width="113" height="200" alt="Ingresos 2018 de Blog Bitix" title="Ingresos 2018 de Blog Bitix"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-paginas-vistas-2019_hu0aa956c9569059650f34c2752c61017b_145755_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Páginas vistas 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-paginas-vistas-2019_hu0aa956c9569059650f34c2752c61017b_145755_300x200_fit_box_3.png" width="113" height="200" alt="Páginas vistas 2018 de Blog Bitix" title="Páginas vistas 2018 de Blog Bitix"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-clics-2019_hu0aa956c9569059650f34c2752c61017b_132963_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Clics 2018 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-clics-2019_hu0aa956c9569059650f34c2752c61017b_132963_300x200_fit_box_3.png" width="113" height="200" alt="Clics 2018 de Blog Bitix" title="Clics 2018 de Blog Bitix"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-crt-2019_hu551692485b029c60d17a806c35ed45f1_135718_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="CRT 2019 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-crt-2019_hu551692485b029c60d17a806c35ed45f1_135718_300x200_fit_box_3.png" width="113" height="200" alt="CRT 2019 de Blog Bitix" title="CRT 2019 de Blog Bitix"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-cpc-2019_hu551692485b029c60d17a806c35ed45f1_136700_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="CPC 2019 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-cpc-2019_hu551692485b029c60d17a806c35ed45f1_136700_300x200_fit_box_3.png" width="113" height="200" alt="CPC 2019 de Blog Bitix" title="CPC 2019 de Blog Bitix"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-rpm-2019_hu4d0311e47a28d048756f6c372bf1e390_149757_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="RPM 2019 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-rpm-2019_hu4d0311e47a28d048756f6c372bf1e390_149757_300x200_fit_box_3.png" width="113" height="200" alt="RPM 2019 de Blog Bitix" title="RPM 2019 de Blog Bitix"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-tipos-de-puja-2019_hu575030924d3b34d66186c7282c3aa5e6_28921_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Tipos de puja 2019 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-tipos-de-puja-2019_hu575030924d3b34d66186c7282c3aa5e6_28921_300x200_fit_box_3.png" width="269" height="200" alt="Tipos de puja 2019 de Blog Bitix" title="Tipos de puja 2019 de Blog Bitix"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-plataformas-2019_hu1498e501818e09698b427f346bd2eb00_23757_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Plataformas 2019 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/gadsense-plataformas-2019_hu1498e501818e09698b427f346bd2eb00_23757_300x200_fit_box_3.png" width="270" height="200" alt="Plataformas 2019 de Blog Bitix" title="Plataformas 2019 de Blog Bitix"  class="lozad "></a></p>
<figcaption>Métricas de AdSense</figcaption>
</figure>
</div>
<p>En los ingresos por enlaces de afiliado de <a href="https://amzn.to/2flFhHA">Amazon</a> ha habido algunos meses especialmente notables y me sorprende que un solo blog como este le proporcione a Amazon facturar esa cantidad de dinero.</p>
<p>Aparte de la publicidad de AdSense la monetización por afiliación es una gran estrategia para conseguir ventas en un negocio beneficioso para las tres partes el editor que obtiene una recompensa por la venta motivándole a seguir escribiendo artículos que los usuarios consideren buenos como para finalizar en una compra, el usuario que dependiendo del artículo obtiene información objetiva que le disipa las dudas como para realizar con mayores garantías de hacer una buena compra y el vendedor que aumenta su facturación y en caso de que no se produzca la venta coloca enlaces dando su página de comercio electrónico a conocer con los enlaces disponibles para una futura ocasión u otros usuarios.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/amazon-2019_hu1f7631baac4fc4eec3dca222c90f695d_72924_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Facturación e ingresos Amazon"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/amazon-2019_hu1f7631baac4fc4eec3dca222c90f695d_72924_600x450_fit_box_3.png" width="600" height="289" alt="Facturación e ingresos Amazon" title="Facturación e ingresos Amazon"  class="lozad "></a></p>
</figure>
</div>
<p>Esto es todo, ¡buen 2020!</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/christmas-tux-2019_huecfaa36dd6ae7c1b61b7a88cd415ec19_534749_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Christmas Tux 2019"><img src="https://picodotdev.github.io/blog-bitix/2019/12/hemeroteca-16/images/christmas-tux-2019_huecfaa36dd6ae7c1b61b7a88cd415ec19_534749_600x450_fit_q90_box.jpg" width="600" height="338" alt="Christmas Tux 2019" title="Christmas Tux 2019"  class="lozad "></a></p>
<figcaption>¡Buen 2020! <br>Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/articulo-7-de-yo-apoyo-al-software-libre/</id>
        <title>Artículo #7 de Yo apoyo al software libre</title>
        <updated>2019-12-22T11:30:00+01:00</updated>
        <published>2019-12-22T11:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/articulo-7-de-yo-apoyo-al-software-libre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/calibre.png" width="300" height="120" alt="Calibre" title="Calibre"  class=""></p>
</div>
<p>Continuando con la serie de artículos comentando las donaciones que voy realizando a los proyectos de software libre en este caso comentaré otro programa que uso habitualmente. En este caso de trata del programa el <a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/">gestor gestor de libros electrónicos y conversor entre diferentes formatos de libro electrónicos Calibre</a> que que quizá no tiene la interfaz de usuario más atractiva pero es muy útil, funciona realmente bien y permite tener organizada la biblioteca digital.</p>
<p>Lo uso habitualmente para convertir los libros en formato <em>epub</em> a <em>mobi</em> para poder leerlos en el lector de libros electrónicos <a href="https://amzn.to/3Dd5Q8p">Amazon Kindle</a>. El programa <a href="https://calibre-ebook.com/">Calibre</a> es software libre y gratuito pero ofrece la opción de realizar una donación para contribuir al mantenimiento del proyecto que el desarrollador o desarrolladores seguro agradecen para costear sus gastos ayudándoles a realizar nuevas mejoras en el programa.</p>
<p>Hace unos meses se publicó la versión 4.0 del programa y cada semana o dos semanas hay una nueva versión que incluye correcciones y algunas mejoras, aún usando la distribución de <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> como <a href="https://www.archlinux.org/">Arch Linux</a> siendo <em>rolling release</em> y actualizando el sistema cada dos semanas es uno de los pocos programas que habitualmente tengo desactualizado en una versión anterior a la última, eso es resultado de las numerosas versiones que se publican del mismo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/articulo-7-de-yo-apoyo-al-software-libre/images/calibre_hu9c32197af81954eafa56c2f92459cc2d_1940986_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Biblioteca y conversor de libros electrónicos Calibre"><img src="https://picodotdev.github.io/blog-bitix/2019/12/articulo-7-de-yo-apoyo-al-software-libre/images/calibre_hu9c32197af81954eafa56c2f92459cc2d_1940986_300x200_fit_box_3.png" width="292" height="200" alt="Biblioteca y conversor de libros electrónicos Calibre" title="Biblioteca y conversor de libros electrónicos Calibre"  class="lozad "></a></p>
<figcaption>Biblioteca y conversor de libros electrónicos Calibre</figcaption>
</figure>
</div>
<p>La cantidad que he donado no es mucho pero si un porcentaje de los usuarios que lo utilizan realizarán una pequeña donación el proyecto continuará desarrollándose. Muchos programas de software libre utilizados por usuarios e incluso empresas que ganan millones de dólares confían en proyectos que en algunos casos solo están mantenidos por una persona y de forma voluntaria en su tiempo libre sin recibir un sueldo a cambio.</p>
<p>Una donación en la medida que uno pueda o desee es una buena forma de si un programa le es realmente útil devolver algo en compensación de su uso. A continuación el recibo de la donación que he realizado a Calibre.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/articulo-7-de-yo-apoyo-al-software-libre/images/donacion-calibre_hua07f0c6883cb9d3f9b30f28b2d16ce12_117262_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Donación Calibre"><img src="https://picodotdev.github.io/blog-bitix/2019/12/articulo-7-de-yo-apoyo-al-software-libre/images/donacion-calibre_hua07f0c6883cb9d3f9b30f28b2d16ce12_117262_650x450_fit_box_3.png" width="296" height="450" alt="Donación Calibre" title="Donación Calibre"  class="lozad "></a></p>
<figcaption>Donación Calibre</figcaption>
</figure>
</div>
<p>Recuerda que si no es por privacidad y usas un bloqueador de anuncios <a href="https://adblockplus.org/es/faq_basics#disable">desactivándolo en Blog Bitix</a> ayudas a que pueda seguir haciendo estas donaciones aún siendo pequeñas y una parte pequeña de los ingresos que me genera el blog.</p>
<table class="table">
    <thead>
        <tr class="thead-dark">
            <th colspan="4">Donaciones que he realizado hasta la última fecha</th>
        </tr>
        <tr class="thead-light">
            <th>#</th>
            <th>Fecha</th>
            <th>Proyecto</th>
            <th>Donación</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>2015/12</td>
            <td>Free Software Foundation Europe (FSFE)</td>
            <td>40 €</td>
        </tr>
        <tr>
            <td>2</td>
            <td>2016/09</td>
            <td>Wikipedia, Mozilla/Firefox</td>
            <td>10 €, 10 €</td>
        </tr>
        <tr>
            <td>3</td>
            <td>2017/01</td>
            <td>elementaryOS, Libre Office, Arch Linux ARM</td>
            <td>10 €, 10 €, 10 €</td>
        </tr>
        <tr>
            <td>4</td>
            <td>2017/05</td>
            <td>GNOME, VideoLAN (VLC), Arch Linux</td>
            <td>15,31 €, 10 €, 0,31 €</td>
        </tr>
        <tr>
            <td>5</td>
            <td>2018/01</td>
            <td>LineageOS, Replicant</td>
            <td>15 €, 15 €</td>
        </tr>
        <tr>
            <td>6</td>
            <td>2018/12</td>
            <td>Wine</td>
            <td>$20</td>
        </tr>
        <tr>
            <td>7</td>
            <td>2019/12</td>
            <td>Calibre</td>
            <td>$10</td>
        </tr>
        <tr>
            <td>8</td>
            <td>2020/12</td>
            <td>Phoronix, Mozilla/Firefox, GnuPG</td>
            <td>$12, 10 €, 10 €</td>
        </tr>
        <tr>
            <td>9</td>
            <td>2022/01</td>
            <td>KeePassXC</td>
            <td>15 €</td>
        </tr>
        <tr>
            <td colspan="3">Total</td>
            <td>180 €, $42</td>
        </tr>
    </tbody>
</table>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/</id>
        <title>Generar documentos, informes y facturas en formato PDF con JasperReports y Java</title>
        <updated>2019-12-13T13:00:00+01:00</updated>
        <published>2019-12-13T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Para generar documentos PDF sencillos en Java está la librería PDFBox que mediante código permite insertar la información y los elementos del documento. Con PDFBox el documento es generado completamente mediante código, para separar el estilo del documento y la información que contiene y para documentos más complejos está JasperReports que mediante una plantilla hace que si cambia el estilo del documento el código no requiera cambios.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Las aplicaciones en el ámbito de gestión necesitan generar documentos a partir de la información que contienen. Pueden ser para <a href="https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/">exportar datos en un archivo en formato CSV con Apache POI</a> o <a href="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/">documentos PDF sencillos con PDFBox</a>. Los documentos PDF pueden ser de diverso tipo, informes, facturas, cartas, recibos, &hellip; En Java una de las librerías para generar documentos PDF complejos es <a href="https://community.jaspersoft.com/project/jasperreports-library">JasperReports</a>.</p>
<p>Los informes de JasperReports se generan a partir de una plantilla creada con <a href="https://community.jaspersoft.com/project/jaspersoft-studio">JasperReport Studio</a>. JasperReports divide un documento en diferentes bandas en las cuales se puede incluir diferentes elementos como texto, valores, imágenes, &hellip; Las bandas son apartados de información como la cabeceras o detalles, puede estar anidadas y repetirse según los datos de la fuente de datos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/jaspersoft-studio_hubad11cc07d8ec91ef5d7f2e895a88282_221533_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="JasperSoft Studio"><img src="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/jaspersoft-studio_hubad11cc07d8ec91ef5d7f2e895a88282_221533_650x450_fit_box_3.png" width="650" height="252" alt="JasperSoft Studio" title="JasperSoft Studio"  class="lozad "></a></p>
<figcaption>JasperSoft Studio</figcaption>
</figure>
</div>
<p>Los informes con JasperReports tiene varias posibilidades de obtener los datos, una de ellas es proporcionándoselos mediante parámetros y o una colección de <em>beans</em> de cualquier tipo, pero también proporcionándole una conexión a la base de datos relacional y que JasperReports lance consultas SQL para obtener los datos que necesita.</p>
<p>Utilizando los elementos de la paleta como campos de texto e imagen y posicionándolos en el lugar adecuado sobre el informe se crea la plantilla del documento. Para asignar valores a los elementos se inserta una expresión que en este caso permite obtenerlo de los parámetros que se le proporcionen al informe a los cuales con funciones incorporadas se les puede aplicar transformaciones para obtener el valor deseado (de fecha, lógicas, numéricas o de texto).</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/editor-expresiones-parametros_hu6e3ae5956b6feecc6a71ee1f3c08fd30_98590_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Editor de expresiones, parámetros"><img src="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/editor-expresiones-parametros_hu6e3ae5956b6feecc6a71ee1f3c08fd30_98590_200x150_fit_box_3.png" width="162" height="150" alt="Editor de expresiones, parámetros" title="Editor de expresiones, parámetros"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/editor-expresiones-campos_hu1572e50135e5dd49996dab1b862b0fb0_114283_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Editor de expresiones, campos"><img src="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/editor-expresiones-campos_hu1572e50135e5dd49996dab1b862b0fb0_114283_200x150_fit_box_3.png" width="162" height="150" alt="Editor de expresiones, campos" title="Editor de expresiones, campos"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/editor-expresiones-variables_hu7b48ba0e5163212cfe1ab9f9d8e195b5_104222_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Editor de expresiones, variables"><img src="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/editor-expresiones-variables_hu7b48ba0e5163212cfe1ab9f9d8e195b5_104222_200x150_fit_box_3.png" width="162" height="150" alt="Editor de expresiones, variables" title="Editor de expresiones, variables"  class="lozad "></a></p>
<figcaption>Editor de expresiones</figcaption>
</figure>
</div>
<p>El código Java necesario para compilar el archivo de la plantilla del informe, proporcionarle los parámetros y generar el PDF es el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.jasperreports</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JasperCompileManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JasperExportManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JasperFillManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JasperPrint</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.JasperReport</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">net.sf.jasperreports.engine.data.JRBeanCollectionDataSource</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">parameters</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Factura</span> <span class="n">factura</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Factura</span><span class="o">(</span><span class="s">&#34;Compañía S.A.&#34;</span><span class="o">,</span> <span class="s">&#34;picodotdev&#34;</span><span class="o">,</span> <span class="s">&#34;Factura enero 2019&#34;</span><span class="o">,</span> <span class="s">&#34;100000&#34;</span><span class="o">,</span> <span class="s">&#34;00011111111&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;25.00&#34;</span><span class="o">),</span> <span class="s">&#34;1111111&#34;</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;picodotdev&#34;</span><span class="o">,</span> <span class="s">&#34;BASKESXXXX&#34;</span><span class="o">,</span> <span class="s">&#34;ES24-0000-0000-0000-0000-0000&#34;</span><span class="o">,</span> <span class="n">LocalDateTime</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="n">LocalDateTime</span><span class="o">.</span><span class="na">now</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Factura</span><span class="o">&gt;</span> <span class="n">facturas</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">factura</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;factura.jrxml&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JasperReport</span> <span class="n">report</span> <span class="o">=</span> <span class="n">JasperCompileManager</span><span class="o">.</span><span class="na">compileReport</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JRBeanCollectionDataSource</span> <span class="n">dataSource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JRBeanCollectionDataSource</span><span class="o">(</span><span class="n">facturas</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JasperPrint</span> <span class="n">print</span> <span class="o">=</span> <span class="n">JasperFillManager</span><span class="o">.</span><span class="na">fillReport</span><span class="o">(</span><span class="n">report</span><span class="o">,</span> <span class="n">parameters</span><span class="o">,</span> <span class="n">dataSource</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JasperExportManager</span><span class="o">.</span><span class="na">exportReportToPdfFile</span><span class="o">(</span><span class="n">print</span><span class="o">,</span> <span class="s">&#34;factura.pdf&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.jasperreports.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;net.sf.jasperreports:jasperreports:6.11.0&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.lowagie:itext:2.1.7&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>El resultado es este boceto de factura a la que con más tiempo, añadiendo más elementos y modificando los estilos quedará algo más real a lo que son las facturas emitidas por las compañías.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/documento_hu8fdeee7f32d855baa698e807685474a3_53321_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Documento PDF generado con JasperReports"><img src="https://picodotdev.github.io/blog-bitix/2019/12/generar-documentos-informes-y-facturas-en-formato-pdf-con-jasperreports-y-java/images/documento_hu8fdeee7f32d855baa698e807685474a3_53321_650x450_fit_box_3.png" width="650" height="346" alt="Documento PDF generado con JasperReports" title="Documento PDF generado con JasperReports"  class="lozad "></a></p>
<figcaption>Documento PDF generado con JasperReports</figcaption>
</figure>
</div>
<p>En este caso los datos solo se proporcionan mediante parámetros pero JasperReport también es capaz de extraer los datos realizando consultas en a la bases de datos directamente usando una conexión de JDBC y las sentencias SQL adecuadas. En algún caso también es posible insertar en el documento una <a href="https://picodotdev.github.io/blog-bitix/2017/10/visualizar-datos-y-generar-graficas-en-java-con-jfreechart/">gráfica generada con JFreeChart</a> previamente, al informe como parámetros se le puede enviar cualquier tipo de Java que para una gráfica es un <em>InputStream</em>.</p>
<p>Los siguientes enlaces son documentación a una guía de inicio, una guía completa y tutoriales.</p>
<ul>
<li><a href="http://community.jaspersoft.com/documentation/tibco-jaspersoft-studio-user-guide/v60/getting-started-jaspersoft-studio">Getting Started with Jaspersoft Studio</a></li>
<li><a href="http://jasperreports.sourceforge.net/JasperReports-Ultimate-Guide-3.pdf">The JasperReports Ultimate Guide</a></li>
<li><a href="https://www.tutorialspoint.com/jasper_reports/index.htm">JasperReports Tutorial</a></li>
</ul>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JasperReports">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://gist.github.com/rponte/5044469">Example on how to generate a simple pdf report with JasperReports</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/</id>
        <title>Buscar en el historial desde la barra de direcciones inteligente de Firefox</title>
        <updated>2019-12-11T17:00:00+01:00</updated>
        <published>2019-12-11T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/firefox.svg" width="200" height="188" alt="Firefox" title="Firefox"  class=""></p>
</div>
<p>Los navegadores web guardan un historial de todas las páginas a las que se acceden, además de los marcadores que los usuarios creen. Este historial en Firefox se guarda en orden cronológico pudiendo consultar todas las páginas accedidas en el día actual, el de ayer y anteriores fechas. También es posible realizar búsquedas para encontrar una cierta página. En Firefox al historial se accede desde en menú con la opción <em>Historial &gt; Mostrar todo el historial</em>. El historial se muestra en una ventana.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/historial-firefox_huafb4b7f59bbf1e2f6492c5417b522249_48002_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Historial de páginas en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/historial-firefox_huafb4b7f59bbf1e2f6492c5417b522249_48002_650x450_fit_box_3.png" width="650" height="346" alt="Historial de páginas en Firefox" title="Historial de páginas en Firefox"  class="lozad "></a></p>
<figcaption>Historial de páginas en Firefox</figcaption>
</figure>
</div>
<p>Acceder al historial requiere abrir una ventana y luego hacer una búsqueda pero sin necesidad de abrir la ventana del historial desde la barra de direcciones inteligente también pueden hacerse búsquedas, no solo para las páginas del historial sino también entre los marcadores, pestañas abiertas, por títulos de página o por coincidencias en la dirección web. Con ciertos caracteres especiales se determina el comportamiento de la búsqueda.</p>
<ul>
<li><code>^</code>: para buscar coincidencias en el historial de búsqueda.</li>
<li><code>*</code>: para buscar coincidencias en los marcadores.</li>
<li><code>+</code>: para buscar coincidencias en las etiquetas de las páginas.</li>
<li><code>%</code>: para buscar entre las pestañas abiertas actualmente.</li>
<li><code>#</code>: Para buscar coincidencias en usando los títulos de página.</li>
</ul>
<ul>
<li><code>$</code>: para buscar coincidencias en la dirección web.</li>
</ul>
<p>En esta captura de hace una búsqueda por el título de las páginas en el historial.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/barra-de-busqueda-firefox_huf6ad5650de6e3bff9124953c89123401_61128_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Barra de búsqueda inteligente de Firefox"><img src="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/barra-de-busqueda-firefox_huf6ad5650de6e3bff9124953c89123401_61128_650x450_fit_box_3.png" width="650" height="430" alt="Barra de búsqueda inteligente de Firefox" title="Barra de búsqueda inteligente de Firefox"  class="lozad "></a></p>
<figcaption>Barra de búsqueda inteligente de Firefox</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://support.mozilla.org/en-US/kb/address-bar-autocomplete-firefox?redirectlocale=en-US&amp;redirectslug=awesome-bar-search-firefox-bookmarks-history-tabs">Address bar autocomplete in Firefox - Search your bookmarks, history and tabs</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/</id>
        <title>Comando para convertir imágenes JPEG y PNG a WebP</title>
        <updated>2019-12-30T22:00:00+01:00</updated>
        <published>2019-12-08T14:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las velocidades de conexión actuales de 100 Mbps y de 600 Mbps en los hogares permiten no darle tanta importancia al tamaño de una imagen y aunque los dispositivos móviles también tienen unas velocidades de conexión rápidas reducir el tamaño de las imágenes puede significar que una página web cargue algo más rápido. El ahorro está en un 30% y 60% lo que en colecciones grandes de imágenes el ahorro es considerable. WebP proporciona un ahorro de tamaño en las imágenes con una calidad similar que <em>jpg</em> y <em>png</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Para que las imágenes ocupen menos espacio se utilizan formatos como <em>jpg</em> para fotos y <em>png</em> utilizado en imágenes como capturas de pantalla de ordenador. En las imágenes fotográficas los píxeles adyacentes suelen tener el mismo color y formatos como <em>jpg</em> se basan en esto para dividir la imagen en pequeñas baldosas en las que  pueda almacenar la información de menos píxeles, <em>jpg</em> es un formato con pérdida de calidad que sin ser excesiva es aceptable y se ve compensada con un ahorro importante en el tamaño de la imagen. El formato <em>png</em> es un formato sin pérdida de calidad pero con igualmente con reducido tamaño en imágenes de captura de pantalla de ordenador.</p>
<p>Para comprimir aún más el tamaño de las imágenes con la misma calidad apreciable Google ha desarrollado el formato de imágenes <a href="https://en.wikipedia.org/wiki/WebP">WebP</a>. Webp soporta imágenes con pérdida de calidad para ser una alternativa a <em>jpg</em>, sin pérdida de calidad y imágenes con animaciones como alternativa a imágenes <em>png</em> con animación. La reducción en tamaño de WebP sobre <em>jpg</em> y <em>png</em> está en un 30% o 60% dependiendo de la imagen un ahorro de tamaño significativo que es útil para que por ejemplo las páginas web tengan un menor tamaño de descarga y con ello se carguen más rápido si tiene numerosas fotos e imágenes.</p>
<p>Los navegadores modernos como <a href="https://www.google.es/chrome/browser/desktop/">Google Chrome</a>, <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a>, <a href="https://www.microsoft.com/es-es/windows/microsoft-edge/">Microsoft Edge</a> y versiones para Android ya soportan WebP en los formatos con pérdida, sin pérdida y con animaciones.</p>
<p>Una imagen que usé para <a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/">crear imagen miniatura o <em>thumbnail</em></a> tiene un tamaño de 1600 píxeles de ancho y 1067 de alto ocupando 1018 KiB, la imagen en formato <em>png</em> tiene un tamaño de 1426 píxeles por 947 ocupando 78 KiB.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/images/image-1_hu155add02d6c6e28845a8452d31796ba4_1042102_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Fotografía en formato jpg"><img src="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/images/image-1_hu155add02d6c6e28845a8452d31796ba4_1042102_300x200_fit_q90_box.jpg" width="300" height="200" alt="Fotografía en formato jpg" title="Fotografía en formato jpg"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/images/image-2_hufcda4a8a1c5c00c77b1b7b42f2d3b42d_79818_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Captura de pantalla en formato _png_"><img src="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/images/image-2_hufcda4a8a1c5c00c77b1b7b42f2d3b42d_79818_300x200_fit_box_3.png" width="300" height="199" alt="Captura de pantalla en formato _png_" title="Captura de pantalla en formato _png_"  class="lozad "></a></p>
<figcaption>Imágenes en formato JPEG y PNG</figcaption>
</figure>
</div>
<p>Las mismas imágenes comprimidas con WebP ocupan 826 KiB, un 18% menos, para la original en formato <em>jpg</em> y 26 KiB, un 66% menos, para la original en formato <em>png</em>. Las reducciones de tamaño son importantes y teniendo en cuenta que es sin pérdida de calidad apreciable sobre las originales utilizar WebP como formato de imagen permite ahorrar un tamaño importante de descarga en una página web o en espacio de almacenamiento en colecciones grandes de fotografías e imágenes.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/images/image-1.webp" data-gallery="data-gallery" title="Fotografía en formato WebP"><img src="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/images/image-1.webp" width="300" height="200" alt="Fotografía en formato WebP" title="Fotografía en formato WebP"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/images/image-2.webp" data-gallery="data-gallery" title="Captura de pantalla en formato WebP"><img src="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/images/image-2.webp" width="300" height="200" alt="Captura de pantalla en formato WebP" title="Captura de pantalla en formato WebP"  class="lozad "></a></p>
<figcaption>Mismas imágenes en formato WebP</figcaption>
</figure>
</div>
<p><a href="https://www.imagemagick.org">ImageMagick</a> permite convertir las imágenes entre estos formatos. Con este comando se convierten todas las imágenes <em>jpg</em> y <em>png</em> de un directorio a formato WebP de forma masiva.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="k">for</span> f in *.png<span class="p">;</span> <span class="k">do</span> convert -define webp:lossless<span class="o">=</span><span class="nb">true</span> <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">f</span><span class="p">%.*</span><span class="si">}</span><span class="s2">.webp&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;$ <span class="k">for</span> f in *.jpg<span class="p">;</span> <span class="k">do</span> convert -define webp:lossless<span class="o">=</span><span class="nb">false</span> <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">f</span><span class="p">%.*</span><span class="si">}</span><span class="s2">.webp&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>convert-to-webp.sh</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/11/convertir-imagenes-entre-formatos-y.html">Convertir imágenes entre formatos y cambiar tamaño con ImageMagick</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/">Comando para convertir una imagen SVG a PNG y JPG con diferentes tamaños y color de fondo con Inkskape</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/</id>
        <title>Nube privada para documentos personales con Nextcloud y OnlyOffice</title>
        <updated>2019-12-05T12:00:00+01:00</updated>
        <published>2019-12-05T12:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Empresas como Google ofrecen servicios gratuitos que los usuarios pueden utilizar, algunos de ellos a cambio de entregrarles documentos con información personal con la consiguiente potencial pérdida de privacidad. Algunos de estos servicios son sustituibles con alternativas como Nextcloud y OnlyOffice que permiten a sus usuarios ser dueños de su información ya sea utilizando una Raspberry Pi como servidor que debe ser administrada o incluso en la nube con servicios como DigitalOcean o AWS.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/nextcloud.svg" width="200" height="141" alt="Nextcloud" title="Nextcloud"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/onlyoffice.svg" width="200" height="186" alt="OnlyOffice" title="OnlyOffice"  class=""></p>
</div>
<p>Una cuenta de Google da acceso a múltiples servicios gratuitos, útiles y con un servicio más que correcto. Algunas de estos servicios está el de correo electrónico de <a href="https://www.google.com/intl/es/gmail/about/">GMail</a>, la sincronización y unidad de documentos de <a href="https://www.google.es/drive/apps.html">Google Drive</a>, calendario para apuntar citas y recordatorios con <a href="https://www.google.com/calendar/about/">Google Calendar</a>, el acceso a la <em>suite</em> ofimática colaborativa <a href="https://www.google.es/intl/es/docs/about/">Google Docs</a> o fotos con <a href="https://www.google.com/photos/about/">Google Photos</a>. Estos son los servicios que uso de Google por su comodidad.</p>
<p>Los servicios en la nube permiten guardar los documentos e información fuera del dispositivo donde se usen, esto permite tener sincronizados y compartir todos los documentos entre varios dispositivos como el ordenador personal en casa, tener disponibles los documentos en el ordenador del trabajo y en un dispositivo móvil como un <em>smartphone</em> en cualquier lugar. El problema de los servicios en la nube es que no somos realmente propietarios de nuestra información y documentos, son entregados a esos servicios como los de Google, esto genera una pérdida de privacidad sin ser conscientes de los usos que le pueda dar Google. Para proteger nuestra privacidad hay alternativas para disponer de nuestra propia nube que proporcione la mayoría de estos servicios.</p>
<p><a href="https://nextcloud.com/">Nextcloud</a> es un software que permite alojar en nuestro propio servidor nuestros documentos sustituyendo a varios de los servicios de Google. Nextcloud permite almacenar archivos y documentos ofimáticos, fotos, música, calendarios, un visor de PDF, editor de <em>markdown</em>, gestor de tareas o nuestros contactos. Permite complementos con los que añadir las funcionalidad que necesitemos como un reproductor de música o un paquete ofimático con <a href="https://www.onlyoffice.com/es/">OnlyOffice</a> que sustituya a Google Docs.</p>
<p>Una <a href="https://www.raspberrypi.org/">Raspberry Pi 4</a> o una de sus <a href="https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/">7 computadoras alternativas</a> similares es una buena opción como servidor por su pequeño tamaño, bajo consumo, totalmente silencioso con un recomendable disipador pasivo y suficiente para ejecutar con normalidad Nextcloud con los 4 GiB de memoria del modelo con más capacidad. Hay <a href="https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/">otras placas similares</a> o incluso se puede utilizar un <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Intel NUC</a> que permiten más cantidad de memoria y sus procesadores son más capaces. Para una nube privada una Raspberry Pi es interesante por su pequeño tamaño y bajo consumo eléctrico dado que su funcionamiento sería constante.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07TC2BK1X&amp;linkId=6e87726b77e92056e7ac168add1bc747" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07XNVPK8X&amp;linkId=bef0fad42b2cc046799c66f7fa220c0f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B073JWXGNT&amp;linkId=d64d66fda7d25defd2018c4119aa7e46" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B014I8U33I&amp;linkId=df5c52be4ca21b9991d26145edb0b642" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VMXHJ4Q&amp;linkId=39ee0802cdc202ce8259d463b59224ed" title="Amazon" class="lozad"></iframe>
</div>
<p>Usando <a href="https://www.docker.com/">Docker</a> y el <a href="https://github.com/ONLYOFFICE/docker-onlyoffice-nextcloud">repositorio de GitHub</a> es sencillo iniciar el servidor de Nextcloud realizando los siguientes pasos.</p>
<ul>
<li>Instalar Docker.</li>
<li>Descargar o clonar el repositorio de GitHub.</li>
<li>Iniciar con Docker Compose los contenedores de Nextcloud y OnlyOffice.</li>
<li>Acceder <em>http://localhost</em> y realizar la configuración inicial, introducir el usuario y contraseña de administrador.</li>
<li>Ejecutar <em>bash set_configuration.sh</em>.</li>
<li>Añadir el complemento de OnlyOffice.</li>
<li>Acceder a <em>http://localhost</em>.</li>
</ul>
<p>Este archivo de Docker Compose incluye Nextcloud con OnlyOffice sin usar una base de datos externa.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">app-server</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nextcloud:fpm</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">expose</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;80&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;9000&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">app_data:/var/www/html</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">onlyoffice-document-server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">onlyoffice-document-server</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">onlyoffice/documentserver:latest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">expose</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;80&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;443&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">document_data:/var/www/onlyoffice/Data</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">document_log:/var/log/onlyoffice</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">nginx</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-server</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">./nginx.conf:/etc/nginx/nginx.conf</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">app_data:/var/www/html</span><span class="w">&#10;</span><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">document_data</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">document_log</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">app_data</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">mysql_data</span><span class="p">:</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker-compose up&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-configuracion_hu7348f075c395873d91de02a5fb57b540_592428_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de Nextcloud"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-configuracion_hu7348f075c395873d91de02a5fb57b540_592428_300x200_fit_box_3.png" width="300" height="198" alt="Configuración de Nextcloud" title="Configuración de Nextcloud"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-inicio_hu8b8d704537521248ed406d67202f5cb8_498606_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de Nextcluod"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-inicio_hu8b8d704537521248ed406d67202f5cb8_498606_300x200_fit_box_3.png" width="300" height="198" alt="Inicio de Nextcluod" title="Inicio de Nextcluod"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-archivos_hu0e5f45861c65c3026f8a6d9908487425_77402_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivos en Nextcloud"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-archivos_hu0e5f45861c65c3026f8a6d9908487425_77402_300x200_fit_box_3.png" width="300" height="198" alt="Archivos en Nextcloud" title="Archivos en Nextcloud"  class="lozad "></a></p>
<figcaption>Configuración y archivos en Nextcloud</figcaption>
</figure>
</div>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/">OnlyOffice es un paquete ofimático alternativa a Microsoft Office</a> que ofrece un editor de documentos de texto, una hoja de cálculo y una aplicación para realizar presentaciones integrables en Nextcloud. Son aplicaciones con menos opciones que las ofrecidas por Microsoft Office pero suficientes para un uso sencillo, también dispone de una versión como aplicaciones de escritorio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-documento_hu75d514e1af687067042b36db0d8cca97_82529_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Documento con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-documento_hu75d514e1af687067042b36db0d8cca97_82529_300x200_fit_box_3.png" width="300" height="198" alt="Documento con OnlyOffice" title="Documento con OnlyOffice"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-hoja-de-calculo_hu1e880885d1b87bcaeedc67cdcf30656f_90253_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Hola de cálculo con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-hoja-de-calculo_hu1e880885d1b87bcaeedc67cdcf30656f_90253_300x200_fit_box_3.png" width="300" height="198" alt="Hola de cálculo con OnlyOffice" title="Hola de cálculo con OnlyOffice"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-presentacion_huf80b231b0357f81b45055c61fc87e78a_89511_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Presentación con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-presentacion_huf80b231b0357f81b45055c61fc87e78a_89511_300x200_fit_box_3.png" width="300" height="198" alt="Presentación con OnlyOffice" title="Presentación con OnlyOffice"  class="lozad "></a></p>
<figcaption>Ofimática con OnlyOffice y Nextcloud alternativa a Google Docs</figcaption>
</figure>
</div>
<p>Otras utilidades es un reproductor de música, calendario o galería de fotos, hay un complemento para añadir estas funcionalidades.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-pdf_hu9c375447dbaadb6118d44af382ae6dc2_244274_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Visor de documento PDF"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-pdf_hu9c375447dbaadb6118d44af382ae6dc2_244274_300x200_fit_box_3.png" width="300" height="198" alt="Visor de documento PDF" title="Visor de documento PDF"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-calendario_hua3364b511a687c3dd051fba1e58308cd_55308_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Calendario"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-calendario_hua3364b511a687c3dd051fba1e58308cd_55308_300x200_fit_box_3.png" width="300" height="198" alt="Calendario" title="Calendario"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-fotos_hu8fa48cc6dd28b15761dd535ce8c3e54c_529797_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Visor de fotos"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-fotos_hu8fa48cc6dd28b15761dd535ce8c3e54c_529797_300x200_fit_box_3.png" width="300" height="198" alt="Visor de fotos" title="Visor de fotos"  class="lozad "></a></p>
<figcaption>Aplicaciones y complementos</figcaption>
</figure>
</div>
<p>Con <a href="https://en.wikipedia.org/wiki/WebDAV">WebDAV</a> los documentos son accesibles como si fuese una unidad local proporcionando la misma funcionalidad de Google Drive. En GNOME con el explorador de archivos Nautilus es posible conectarse a dispositivo WebDAV, en el caso de Nextcloud la dirección es <em>dav://localhost/remote.php/dav/files/admin</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-webdav_hu654eea6c2f2a8913b74ce780deb20881_51637_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivos en el explorador de archivos Nautilus con WebDAV"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-webdav_hu654eea6c2f2a8913b74ce780deb20881_51637_300x200_fit_box_3.png" width="289" height="200" alt="Archivos en el explorador de archivos Nautilus con WebDAV" title="Archivos en el explorador de archivos Nautilus con WebDAV"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-administracion_hub414e9a557d957a8ac86576d54dc2a39_111099_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Opciones de administración"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-administracion_hub414e9a557d957a8ac86576d54dc2a39_111099_300x200_fit_box_3.png" width="251" height="200" alt="Opciones de administración" title="Opciones de administración"  class="lozad "></a></p>
<figcaption>Archivos en el explorador de archivos Nautilus con WebDAV y opciones de administración</figcaption>
</figure>
</div>
<p>Con las <a href="https://nextcloud.com/install/#">aplicaciones para <em>smatphone</em></a> los documentos quedan accesibles en cualquier lugar teniendo un dispositivo móvil, <em>smartphone</em> o tableta. Tener una nube propia que esté accesible en internet hace necesario tener un dominio propio, añadir seguridad para lo que es necesario configurar Nextcloud de modo que utilice el protocolo seguro que cifre las comunicaciones con TLS, esto requiere obtener <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">un certificado autofirmado</a> al menos o mejor obteniéndolo de <a href="https://letsencrypt.org/">Let’s Encrypt</a>, que proporciona certificados de forma automatizada y gratuita. Otra medida para aumentar la seguridad es utilizar un segundo factor de autenticación o <em>2FA</em>.</p>
<p>Hay <a href="https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/postgres/fpm/docker-compose.yml">ejemplo de archivo de Docker Compose para tener Nextcloud con un certificado</a> creado y renovado de forma automática con Let&rsquo;s Encrypt a través del contenedor <a href="https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion">jrcs/letsencrypt-nginx-proxy-companion</a> y configurando las variables de entorno <em>LETSENCRYPT_HOST</em>, <em>LETSENCRYPT_EMAIL</em> con el dominio propio para Nextcloud y un correo electrónico.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/</id>
        <title>Implementar un segundo factor de autenticación en una aplicación web Java con Spring</title>
        <updated>2019-11-29T18:00:00+01:00</updated>
        <published>2019-11-29T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El segundo factor de autenticación es una medida adicional en la autenticación que proporciona una notable mayor seguridad que utilizar solo un usuario y contraseña. Utilizando Spring y la aplicación para <em>smatphone</em> Google Authenticator se puede implementar en una aplicación Java el segundo factor de autenticación o 2FA con códigos temporales o TOTP.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p>Comúnmente para realizar el proceso de autenticar a un usuario se ha realizado simplemente con el método de usuario y contraseña. Sin embargo, verificar la identidad mediante usuario y contraseña para algunos usuarios no es suficientemente seguro dado que los usuarios pueden elegir contraseñas débiles con pocos caracteres o sin usar una combinación que incluya letras, números y símbolos, pueden elegir contraseñas comunes muy utilizadas fáciles de adivinar con un ataque de diccionario, pueden usar la misma contraseña para varios servicios de modo que si las contraseñas de un servicio son descubiertas cualquier otro servicio que las utilice potencialmente corre un riesgo de seguridad. Usar solo usuario y contraseña no proporciona la suficiente seguridad para ciertos servicios que permiten realizar transacciones que involucra dinero, tratan datos sensibles o son servicios atractivos para ser atacados.</p>
<p>Para que las contraseñas sean seguras las aplicaciones en sus bases de datos <a href="https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/">guardar las contraseñas usando <em>Salted Password Hashing</em></a>, los usuarios por su parte deben utilizar un generador de contraseñas, utilizar una contraseña distinta para cada servicio y <a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">guardalas en una base de datos cifrada como KeePassXC</a> para recordar cada una de ellas. Las contraseñas son algo que se conoce, cualquier persona que conozca la contraseña puede autenticarse, más recientemente una capa adicional de seguridad es requerir algo que se tiene, el segundo factor de autenticación, doble factor de autenticación o 2FA.</p>
<p>La aplicación <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2">Google Authenticator</a> para dispositivos móviles <a href="https://www.android.com/">Android</a> permite utilizarse como segundo factor de autenticación, esta aplicación genera códigos con un tiempo corto de duración que son requeridos en un segundo paso de la autenticación después de introducir el usuario y contraseña. Con un segundo factor de autenticación se requiere algo que se sabe, el usuario y contraseña, y algo que se tiene, el dispositivo móvil que genera códigos con lo que aunque la contraseña quede comprometida no se podría realizar la autenticación sin poseer el segundo factor de autenticación.</p>
<p>Dado que los códigos de verificación tienen un tiempo de vida corto, habitualmente de 30 segundos, y acceder al generador del segundo factor de autenticación requiere acceso físico al dispositivo móvil la combinación de que las credenciales queden comprometidas es significativamente más difícil y por tanto la seguridad aumenta al mismo tiempo. Los principales servicios de internet como <a href="https://www.google.es/">Google</a>, <a href="https://amzn.to/2flFhHA">Amazon</a>, <a href="https://www.paypal.com/">PayPal</a> o <a href="https://twitter.com/">Twitter</a> y otros servicios utilizados por millones de usuarios permiten ya utilizar 2FA, un fallo en su seguridad por la cantidad de usuarios e importante información que registran les supondría una muy mala imagen, pérdida de ingresos, costes, reputación, usuarios o dependiendo de la gravedad del fallo y los datos comprometidos multas millonarias. Cualquiera de estos servicios importantes por el número de usuarios que los utilizan a diario a nivel mundial que deben garantizar gran seguridad ofrecen la posibilidad de <a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/">activar la verificación en dos pasos</a>.</p>
<h3 id="librería-para-implementar-segundo-factor-de-autenticación-en-java">Librería para implementar segundo factor de autenticación en Java</h3>
<p>A través de <a href="https://spring.io/projects/spring-security">Spring Security</a> y la librería <a href="https://github.com/aerogear/aerogear-otp-java">aerogear-otp-java</a> una aplicación Java puede implementar el segundo factor de autenticación o verificación en dos pasos de la misma forma que los servicios de Google, Amazon, PayPal o Twitter, incluso posibilitar de que el requerimiento de solicitar segundo factor de autenticación sea opcional según la preferencia de un usuario o como forma de que los usuarios progresivamente habiliten el 2FA. El primer paso es proporcionar al usuario una clave secreta a través de un código QR que codifica una clave secreta que se utiliza para generar los códigos de verificación, el usuario debe escanearlo con la aplicación Google Authenticator con la cámara para que genere código de 6 dígitos con una validez de 30 segundos en el momento de autenticarse, este paso se realiza en el momento de registrarse o de activar el 2FA si es opcional. Con Google Authenticator el código en vez con la cámara también se puede introducir mediante el teclado si la aplicación se lo proporciona en forma de texto en vez de como imagen QR. La ventaja del código QR es que es más rápido y cómodo.</p>
<p>El primer paso de la autenticación utilizando 2FA es introducir el usuario y contraseña. El segundo paso es introducir el código del segundo factor de autenticación. Introducidos ambos el usuario es redirigido a la página de inicio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-1_hu175ef601d8d42f30e72518b43891e47e_45868_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Autenticación con segundo factor de autenticación"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-1_hu175ef601d8d42f30e72518b43891e47e_45868_200x150_fit_box_3.png" width="119" height="150" alt="Autenticación con segundo factor de autenticación" title="Autenticación con segundo factor de autenticación"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-2_hu9c9348bffc4af6776fabcf5eb81bd349_26010_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Autenticación con segundo factor de autenticación"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-2_hu9c9348bffc4af6776fabcf5eb81bd349_26010_200x150_fit_box_3.png" width="119" height="150" alt="Autenticación con segundo factor de autenticación" title="Autenticación con segundo factor de autenticación"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-3_huae1ec02b78b99a03807b17d0f330701d_21531_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Autenticación con segundo factor de autenticación"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-3_huae1ec02b78b99a03807b17d0f330701d_21531_200x150_fit_box_3.png" width="119" height="150" alt="Autenticación con segundo factor de autenticación" title="Autenticación con segundo factor de autenticación"  class="lozad "></a></p>
<figcaption>Autenticación con segundo factor de autenticación</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/google-authenticator_hu7c66848b0f7ec1a179fb56278c70ceeb_103534_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Aplicación Google Authenticator con varios generadores de códigos temporales"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/google-authenticator_hu7c66848b0f7ec1a179fb56278c70ceeb_103534_300x200_fit_box_3.png" width="113" height="200" alt="Aplicación Google Authenticator con varios generadores de códigos temporales" title="Aplicación Google Authenticator con varios generadores de códigos temporales"  class="lozad "></a></p>
<figcaption>Aplicación Google Authenticator con varios generadores de códigos temporales</figcaption>
</figure>
</div>
<p>Validado el código del 2FA al usuario se le asignan los permisos que le corresponden en el sistema y que le otorgan permisos para realizar acciones, en este caso entrar a la página de inicio.</p>
<h3 id="ejemplo-de-implementación-de-segundo-factor-de-autenticación-en-una-aplicación-java">Ejemplo de implementación de segundo factor de autenticación en una aplicación Java</h3>
<p>La implementación en código contiene las clases que representan una cuenta en el sistema, en <em>InMemoryAccountRepository</em> se crean dos usuarios <em>admin</em> y <em>user</em> con sus contraseñas en el ejemplo en texto plano y los roles que tiene asignados que les otorgarán permisos para realizar acciones en la aplicación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.account</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">AccountRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Account</span> <span class="nf">find</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">);</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AccountRepository.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.account</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Repository</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">InMemoryAccountRepository</span> <span class="kd">implements</span> <span class="n">AccountRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">ADMIN_SECRET</span> <span class="o">=</span> <span class="s">&#34;6YFX5TVT76OHHNMS&#34;</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Account</span><span class="o">&gt;</span> <span class="n">accounts</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">InMemoryAccountRepository</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accounts</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Account</span><span class="o">&gt;();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">init</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Account</span> <span class="n">admin</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Account</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">&#34;admin&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">&#34;{noop}password&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setAuth2fa</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setSecret</span><span class="o">(</span><span class="n">ADMIN_SECRET</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setRoles</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">&#34;ROLE_USER&#34;</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Account</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Account</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">&#34;user&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">&#34;{noop}password&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span><span class="o">.</span><span class="na">setAuth2fa</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span><span class="o">.</span><span class="na">setRoles</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">&#34;ROLE_USER&#34;</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accounts</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">admin</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accounts</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Account</span> <span class="nf">find</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">accounts</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">account</span> <span class="o">-&gt;</span> <span class="n">account</span><span class="o">.</span><span class="na">getUsername</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">username</span><span class="o">)).</span><span class="na">findFirst</span><span class="o">().</span><span class="na">orElse</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>InMemoryAccountRepository.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.account</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Account</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">username</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">password</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">secret</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Boolean</span> <span class="n">auth2fa</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">roles</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getUsername</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">username</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUsername</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">username</span> <span class="o">=</span> <span class="n">username</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getPassword</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">password</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPassword</span><span class="o">(</span><span class="n">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getSecret</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">secret</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSecret</span><span class="o">(</span><span class="n">String</span> <span class="n">secret</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">secret</span> <span class="o">=</span> <span class="n">secret</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Boolean</span> <span class="nf">isAuth2fa</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">auth2fa</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAuth2fa</span><span class="o">(</span><span class="n">Boolean</span> <span class="n">auth2fa</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">auth2fa</span> <span class="o">=</span> <span class="n">auth2fa</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">getRoles</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">roles</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRoles</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">roles</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">roles</span> <span class="o">=</span> <span class="n">roles</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Account.java</span>
    </div>
</div>
<p>La configuración de seguridad en Spring Security indica para cada URL que permisos se requieren. Para acceder a la página de contenido <em>/home</em> de la aplicación se requiere el rol <em>USER</em>, a la página de inicio de sesión <em>/login</em> se permite acceder a los usuario no autenticados donde introducen sus credenciales de usuario y contraseña, una vez validado el usuario y contraseña el usuario autenticado tiene el rol <em>PRE_AUTH_USER</em>, dependiendo de si el usuario en su preferencia usa 2FA o no en el manejador de autenticación exitosa <em>SecondFactorAuthenticationSuccessHandler</em> redirige al usuario a la página <em>/home</em> o la página <em>/code</em> para introducir el código de verificación del segundo factor autenticación. Al usuario autenticado exitosamente de forma completa se le sustituye el permiso <em>PRE_AUTH_USER</em> por los que tenga asignado, en el ejemplo el rol <em>USER</em>.</p>
<p>La verificación del código del segundo paso de autenticación se realiza en la clase <em>CodeController</em> con la clase <em>Totp</em> a partir del código enviado y el código secreto con el cual se generó la imagen de código QR.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Configuration</span>&#10;<span class="nd">@EnableWebSecurity</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WebSecurityConfig</span> <span class="kd">extends</span> <span class="n">WebSecurityConfigurerAdapter</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">UserDetailsService</span> <span class="n">userDetailsService</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">AuthenticationSuccessHandler</span> <span class="n">authenticationSuccessHandler</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">PasswordEncoder</span> <span class="nf">encoder</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">PasswordEncoderFactories</span><span class="o">.</span><span class="na">createDelegatingPasswordEncoder</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">AuthenticationSuccessHandler</span> <span class="nf">authenticationSuccessHandler</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">SecondFactorAuthenticationSuccessHandler</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">HttpSecurity</span> <span class="n">http</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">http</span><span class="o">.</span><span class="na">authorizeRequests</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&#34;/static/**&#34;</span><span class="o">).</span><span class="na">permitAll</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&#34;/code&#34;</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">&#34;PRE_AUTH_USER&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&#34;/home&#34;</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">&#34;USER&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">anyRequest</span><span class="o">().</span><span class="na">authenticated</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">http</span><span class="o">.</span><span class="na">formLogin</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">loginPage</span><span class="o">(</span><span class="s">&#34;/login&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">permitAll</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">successHandler</span><span class="o">(</span><span class="n">authenticationSuccessHandler</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">http</span><span class="o">.</span><span class="na">logout</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">permitAll</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">registerAuthentication</span><span class="o">(</span><span class="n">AuthenticationManagerBuilder</span> <span class="n">auth</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">auth</span><span class="o">.</span><span class="na">userDetailsService</span><span class="o">(</span><span class="n">userDetailsService</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>WebSecurityConfig.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@EnableWebMvc</span>&#10;<span class="nd">@Configuration</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WebMvcConfig</span> <span class="kd">implements</span> <span class="n">WebMvcConfigurer</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addViewControllers</span><span class="o">(</span><span class="n">ViewControllerRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">addViewController</span><span class="o">(</span><span class="s">&#34;/login&#34;</span><span class="o">).</span><span class="na">setViewName</span><span class="o">(</span><span class="s">&#34;login&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">addViewController</span><span class="o">(</span><span class="s">&#34;/code&#34;</span><span class="o">).</span><span class="na">setViewName</span><span class="o">(</span><span class="s">&#34;code&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">addViewController</span><span class="o">(</span><span class="s">&#34;/home&#34;</span><span class="o">).</span><span class="na">setViewName</span><span class="o">(</span><span class="s">&#34;home&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addResourceHandlers</span><span class="o">(</span><span class="n">ResourceHandlerRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">addResourceHandler</span><span class="o">(</span><span class="s">&#34;/static/**&#34;</span><span class="o">).</span><span class="na">addResourceLocations</span><span class="o">(</span><span class="s">&#34;classpath:/static/&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ClassLoaderTemplateResolver</span> <span class="nf">templateResolver</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ClassLoaderTemplateResolver</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ClassLoaderTemplateResolver</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span><span class="o">.</span><span class="na">setPrefix</span><span class="o">(</span><span class="s">&#34;templates/&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span><span class="o">.</span><span class="na">setSuffix</span><span class="o">(</span><span class="s">&#34;.html&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span><span class="o">.</span><span class="na">setTemplateMode</span><span class="o">(</span><span class="s">&#34;HTML&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">result</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">SpringTemplateEngine</span> <span class="nf">templateEngine</span><span class="o">(</span><span class="n">ClassLoaderTemplateResolver</span> <span class="n">templateResolver</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringTemplateEngine</span> <span class="n">templateEngine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringTemplateEngine</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">templateEngine</span><span class="o">.</span><span class="na">addDialect</span><span class="o">(</span><span class="k">new</span> <span class="n">LayoutDialect</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">templateEngine</span><span class="o">.</span><span class="na">setTemplateResolver</span><span class="o">(</span><span class="n">templateResolver</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">templateEngine</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ThymeleafViewResolver</span> <span class="nf">viewResolver</span><span class="o">(</span><span class="n">SpringTemplateEngine</span> <span class="n">engine</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ThymeleafViewResolver</span> <span class="n">viewResolver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ThymeleafViewResolver</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">viewResolver</span><span class="o">.</span><span class="na">setTemplateEngine</span><span class="o">(</span><span class="n">engine</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">viewResolver</span><span class="o">.</span><span class="na">setCache</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">viewResolver</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>WebMvcConfig.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SecondFactorAuthenticationSuccessHandler</span> <span class="kd">implements</span> <span class="n">AuthenticationSuccessHandler</span> <span class="o">{</span>&#10;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">RedirectStrategy</span> <span class="n">redirectStrategy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultRedirectStrategy</span><span class="o">();</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAuthenticationSuccess</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">Authentication</span> <span class="n">authentication</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">handle</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">,</span> <span class="n">authentication</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clearAuthenticationAttributes</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">handle</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">Authentication</span> <span class="n">authentication</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">String</span> <span class="n">targetUrl</span> <span class="o">=</span> <span class="n">getTargetUrl</span><span class="o">(</span><span class="n">authentication</span><span class="o">);</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">isCommitted</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">redirectStrategy</span><span class="o">.</span><span class="na">sendRedirect</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">,</span> <span class="n">targetUrl</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="n">String</span> <span class="nf">getTargetUrl</span><span class="o">(</span><span class="n">Authentication</span> <span class="n">authentication</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">UserDetailsAdapter</span> <span class="n">userDetailsAdapter</span> <span class="o">=</span> <span class="o">(</span><span class="n">UserDetailsAdapter</span><span class="o">)</span> <span class="n">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">getAuthentication</span><span class="o">().</span><span class="na">getPrincipal</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">userDetailsAdapter</span><span class="o">.</span><span class="na">getAccount</span><span class="o">().</span><span class="na">isAuth2fa</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;/code&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Utils</span><span class="o">.</span><span class="na">setAuthentication</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;/home&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">clearAuthenticationAttributes</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpSession</span> <span class="n">session</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getSession</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">session</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">session</span><span class="o">.</span><span class="na">removeAttribute</span><span class="o">(</span><span class="n">WebAttributes</span><span class="o">.</span><span class="na">AUTHENTICATION_EXCEPTION</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRedirectStrategy</span><span class="o">(</span><span class="n">RedirectStrategy</span> <span class="n">redirectStrategy</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">redirectStrategy</span> <span class="o">=</span> <span class="n">redirectStrategy</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="n">RedirectStrategy</span> <span class="nf">getRedirectStrategy</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">redirectStrategy</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>SecondFactorAuthenticationSuccessHandler.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Utils</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setAuthentication</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Authentication</span> <span class="n">authentication</span> <span class="o">=</span> <span class="n">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">getAuthentication</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">UserDetailsAdapter</span> <span class="n">userDetailsAdapter</span> <span class="o">=</span> <span class="o">(</span><span class="n">UserDetailsAdapter</span><span class="o">)</span> <span class="n">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">getAuthentication</span><span class="o">().</span><span class="na">getPrincipal</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">GrantedAuthority</span><span class="o">&gt;</span> <span class="n">authorities</span> <span class="o">=</span> <span class="n">AuthorityUtils</span><span class="o">.</span><span class="na">createAuthorityList</span><span class="o">(</span><span class="n">userDetailsAdapter</span><span class="o">.</span><span class="na">getAccount</span><span class="o">().</span><span class="na">getRoles</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">0</span><span class="o">]));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Authentication</span> <span class="n">newAuth</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UsernamePasswordAuthenticationToken</span><span class="o">(</span><span class="n">authentication</span><span class="o">.</span><span class="na">getPrincipal</span><span class="o">(),</span> <span class="n">authentication</span><span class="o">.</span><span class="na">getCredentials</span><span class="o">(),</span> <span class="n">authorities</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">setAuthentication</span><span class="o">(</span><span class="n">newAuth</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Utils.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserDetailsAdapter</span> <span class="kd">implements</span> <span class="n">UserDetails</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Account</span> <span class="n">account</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">UserDetailsAdapter</span><span class="o">(</span><span class="n">Account</span> <span class="n">account</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">account</span> <span class="o">=</span> <span class="n">account</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Collection</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">GrantedAuthority</span><span class="o">&gt;</span> <span class="nf">getAuthorities</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">AuthorityUtils</span><span class="o">.</span><span class="na">createAuthorityList</span><span class="o">(</span><span class="s">&#34;ROLE_PRE_AUTH_USER&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getUsername</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">account</span><span class="o">.</span><span class="na">getUsername</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getPassword</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">account</span><span class="o">.</span><span class="na">getPassword</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isAccountNonExpired</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isAccountNonLocked</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCredentialsNonExpired</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isEnabled</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Account</span> <span class="nf">getAccount</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">account</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>UserDetailsAdapter.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="nd">@Primary</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserDetailsServiceAdapter</span> <span class="kd">implements</span> <span class="n">UserDetailsService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">AccountRepository</span> <span class="n">accountRepository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">UserDetails</span> <span class="nf">loadUserByUsername</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">UsernameNotFoundException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Account</span> <span class="n">account</span> <span class="o">=</span> <span class="n">accountRepository</span><span class="o">.</span><span class="na">find</span><span class="o">(</span><span class="n">username</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">account</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">UsernameNotFoundException</span><span class="o">(</span><span class="n">username</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">UserDetailsAdapter</span><span class="o">(</span><span class="n">account</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>UserDetailsServiceAdapter.java</span>
    </div>
</div>
<p>El código QR es una imagen generada a partir del código secreto y una información adicional que al usuario le permite identificar la cuenta, hay <em>webs</em> que permiten <a href="https://zxing.org/w/decode.jspx">decodificar una imagen QR</a> para analizar que información incorpora, en esta la información de la cuenta <em>Spring2FA (admin)</em> y el secreto <em>6YFX5TVT76OHHNMS</em> utilizado para generar los códigos temporales. En el HTML devuelto se incluye una imagen con la información embebida en el enlace de la imagen, la imagen se genera por un servicio de Google.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/qr-code-decoder_hub6e902ccd53b26d50ca9243601464eba_47627_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Decodificador de imágenes código QR"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/qr-code-decoder_hub6e902ccd53b26d50ca9243601464eba_47627_300x200_fit_box_3.png" width="300" height="142" alt="Decodificador de imágenes código QR" title="Decodificador de imágenes código QR"  class="lozad "></a></p>
<figcaption>Decodificador de imágenes código QR</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:th</span><span class="o">=</span><span class="s">&#34;http://www.thymeleaf.org&#34;</span> <span class="na">xmlns:layout</span><span class="o">=</span><span class="s">&#34;http://www.ultraq.net.nz/web/thymeleaf/layout&#34;</span> <span class="na">layout:decorate</span><span class="o">=</span><span class="s">&#34;~{layout}&#34;</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;...&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://chart.googleapis.com/chart?chs=200x200&amp;chld=M%7C0&amp;cht=qr&amp;chl=otpauth%3A%2F%2Ftotp%2FSpring2FA%20(admin)%3Fsecret%3D6YFX5TVT76OHHNMS&#34;</span> <span class="p">/&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;...&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>login.html</span>
    </div>
</div>
<p>Las dependencias de librerías son las siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="o">...</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-security&#39;</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;org.thymeleaf:thymeleaf-spring5:3.0.11.RELEASE&#39;</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1&#39;</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;org.jboss.aerogear:aerogear-otp-java:1.0.0&#39;</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Este ejemplo está hecho con la infraestructura que proporciona Spring pero el proceso de autenticación es igualmente implementable con cualquier otro <em>framework</em> o librería.</p>
<p>Muchos de los servicios populares en internet implementan 2FA como medida de proteger las cuentas de los usuarios y la información en esos servicios. Hay bancos que como contraseña de acceso solo tienen un número de seis dígitos con el riesgo que representa sus usuarios por la importancia que tiene la banca en línea de los datos que se trata.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Spring2FA">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/spring-security-two-factor-authentication-with-soft-token">Two Factor Auth with Spring Security</a></li>
<li><a href="https://www.baeldung.com/spring_redirect_after_login">Redirect to Different Pages after Login with Spring Security</a></li>
<li><a href="https://github.com/altfatterz/two-step-login/">Two Step Login Example</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/</id>
        <title>Extraer información del navegador del usuario en el servidor de una aplicación web Java</title>
        <updated>2019-11-24T00:15:00+01:00</updated>
        <published>2019-11-24T00:15:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/11/extraer-informacion-del-navegador-del-usuario-en-el-servidor-de-una-aplicacion-web-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En una aplicación web dependiendo de las características del cliente si es de escritorio, móvil u otro dispositivo y tamaño, lenguaje o <a href="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/">dependiendo de la ubicación mediante su dirección IP</a> puede servirse diferente contenido adaptado a las propiedades del cliente.</p>
<p>La comprobación desde el navegador se realiza con JavaScript, con la propiedad <a href="https://developer.mozilla.org/en-US/docs/Web/API/NavigatorID">window.navigator.userAgent</a> se obtienen propiedades básicas del agente del usuario como navegador, versión y plataforma. Con la librería JavaScript <a href="https://modernizr.com/">Modernizr</a> se obtiene las características que soporta el navegador. Pero el código JavaScript se ejecuta en el cliente y la primera petición de un usuario llega al servidor cuando aún no se ha cargado ninguna página ni código JavaScript, sólo se dispone del agente de usuario, lenguaje preferido y dirección IP con lo que es necesario una librería en el lado de servidor que procese el agente del usuario u otra información que este envíe para actúa en consecuencia.</p>
<p>En la primera petición de un usuario a una aplicación Java con la librería <a href="https://github.com/blueconic/browscap-java">browscap-java</a> es posible procesar el agente del usuario y conocer su navegador y versión, tipo de dispositivo, plataforma y versión. Con esta información la aplicación es capaz adaptar el contenido al cliente, por ejemplo si se trata de una versión antigua de un navegador al que hay que seguir ofreciendo soporte porque algunos usuarios siguen usándolo y para el que hay que devolver un JavaScript especial por no soportar algunas características de navegadores más modernos.</p>
<p>En este ejemplo se hace uso de la librería <em>browscap-java</em> y se imprime en la salida de la aplicación la información que esta proporciona interpretando la cadena del agente del usuario. Se observa que en mi caso uso <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>, <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> en la versión 70 de la versión de escritorio. Los navegadores envían una cabecera del protocolo HTTP, <em>User-Agent</em>, en la que incluyen información y la firma del navegador o agente del usuario. En el servidor para recuperar la cabecera basta con utilizar el método <a href="https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletRequest.html#getHeader-java.lang.String-">HttpServletRequest.getHeader()</a> o usando Spring MVC con la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestHeader.html">@RequestHeader</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picotodtdev.blogbitix.useragent</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Controller</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.GetMapping</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestHeader</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.ResponseBody</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">com.blueconic.browscap.Capabilities</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.blueconic.browscap.UserAgentParser</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.blueconic.browscap.UserAgentService</span><span class="o">;</span>&#10;&#10;<span class="nd">@Controller</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IndexController</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">UserAgentParser</span> <span class="n">userAgentParser</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GetMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ResponseBody</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">index</span><span class="o">(</span><span class="nd">@RequestHeader</span><span class="o">(</span><span class="s">&#34;User-Agent&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">userAgent</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Capabilities</span> <span class="n">capabilities</span> <span class="o">=</span> <span class="n">userAgentParser</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">userAgent</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">browser</span> <span class="o">=</span> <span class="n">capabilities</span><span class="o">.</span><span class="na">getBrowser</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">browserType</span> <span class="o">=</span> <span class="n">capabilities</span><span class="o">.</span><span class="na">getBrowserType</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">browserMajorVersion</span> <span class="o">=</span> <span class="n">capabilities</span><span class="o">.</span><span class="na">getBrowserMajorVersion</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">deviceType</span> <span class="o">=</span> <span class="n">capabilities</span><span class="o">.</span><span class="na">getDeviceType</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">platform</span> <span class="o">=</span> <span class="n">capabilities</span><span class="o">.</span><span class="na">getPlatform</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">platformVersion</span> <span class="o">=</span> <span class="n">capabilities</span><span class="o">.</span><span class="na">getPlatformVersion</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;User-Agent: %s\nBrowser: %s, Type: %s, Version: %s, Device: %s, Platform: %s, PlatformVersion: %s&#34;</span><span class="o">,</span> <span class="n">userAgent</span><span class="o">,</span> <span class="n">browser</span><span class="o">,</span> <span class="n">browserType</span><span class="o">,</span> <span class="n">browserMajorVersion</span><span class="o">,</span> <span class="n">deviceType</span><span class="o">,</span> <span class="n">platform</span><span class="o">,</span> <span class="n">platformVersion</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IndexController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.2.1.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picotodtdev.blogbitix.useragent&#39;</span>&#10;<span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;0.0.1-SNAPSHOT&#39;</span>&#10;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="s1">&#39;11&#39;</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picotodtdev.blogbitix.useragent.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s2">&#34;org.springframework.boot:spring-boot-dependencies:2.2.4.RELEASE&#34;</span><span class="o">))</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.blueconic:browscap-java:1.2.13&#39;</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Accediendo a la dirección del controlador <em>http://localhost:8080</em> se obtienen los siguientes resultados dependiendo de con que navegador se acceda, en estos ejemplos con Firefox de escritorio, con Chrome de escritorio, y con Firefox de Android.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0&#10;Browser: Firefox, Type: Browser, Version: 70, Device: Desktop, Platform: Linux, PlatformVersion: Unknown&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>response-firefox-desktop.txt</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36&#10;Browser: Chrome, Type: Browser, Version: 78, Device: Desktop, Platform: Linux, PlatformVersion: Unknown&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>response-chrome-desktop.txt</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">User-Agent: Mozilla/5.0 (Android 7.0; Mobile; rv:68.0) Gecko/68.0 Firefox/68.0&#10;Browser: Firefox, Type: Browser, Version: 68, Device: Mobile Phone, Platform: Android, PlatformVersion: 7.0&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>response-firefox-android.txt</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaUserAgent">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developer.mozilla.org/es/docs/Web/HTTP/Headers/User-Agent">MDN User-Agent</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent/Firefox">Firefox user agent string reference</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent">Browser detection using the user agent</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/NavigatorID/userAgent">NavigatorID.userAgent</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/11/rotar-los-archivos-de-trazas-con-log4j-por-fecha-o-tamano/</id>
        <title>Rotar los archivos de trazas con log4j por fecha o tamaño</title>
        <updated>2019-11-15T17:00:00+01:00</updated>
        <published>2019-11-15T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/11/rotar-los-archivos-de-trazas-con-log4j-por-fecha-o-tamano/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La librería log4j 2 es configurable para que si se guardan las trazas en un archivo estos se roten en una fecha indicada en una expresión <em>cron</em>, cuando lleguen a un cierto tamaño o cuando se inicie la aplicación. El rotado además de para archivar las trazas de la aplicación y clasificarlas por fecha sirve para evitar que lleguen a consumir todo el espacio de almacenamiento disponible.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una tendencia en el uso de aplicaciones basadas en contenedores o microservicios es que estos sus mensajes de trazas o <em>logs</em> los emitan a la salida estándar del proceso, esto tiene la ventaja de que la aplicación no ha de conocer ni impone ninguna limitación si posteriormente se utiliza alguna herramienta para agregar esos <em>logs</em>. Una combinación es utilizar ELK (<a href="https://www.elastic.co/es/elasticsearch/">Elasticsearch</a> para indexar el texto, <a href="https://www.elastic.co/es/logstash">Logstash</a> para guardar los <em>logs</em>, <a href="https://www.elastic.co/es/kibana">Kibana</a> como interfaz de consulta) pero en un futuro podría cambiarse por otra y la aplicación que emita sus <em>logs</em> en la salida estándar no requeriría ninguna modificación.</p>
<p>Otra posibilidad adicional o como sustituta es guardar los <em>log</em> en un archivo en el sistema de archivos. Sin embargo, hay que estimar la cantidad de información que puede llegar emitir la aplicación para aprovisionar en la máquina espacio suficiente para darles cabida. Para limitar el espacio que pueden llegar a ocupar los <em>logs</em> se pueden rotar los archivos cuando lleguen a cierto tamaño o por fecha. De no imponer un cierto límite a los archivos de <em>log</em> estos pueden llegar a consumir todo el espacio de almacenamiento disponible y ocasionar una caída del servicio de la aplicación.</p>
<p>En la librería <a href="https://logging.apache.org/log4j/2.x/">log4j</a> para realizar <em>logging</em> en Java la política y estrategia de rotación se define con el <a href="https://logging.apache.org/log4j/2.x/manual/appenders.html#RollingFileAppender"><em>Appender</em> de tipo <em>RollingFileAppender</em></a>. Las políticas de rotado definen cuando se realiza el rotado, por fecha, por tamaño o al inicio de la aplicación. La estrategia define cómo se realiza el rotado y que nombre se le da a los archivos rotados, cuantos rotados de archivos se conservan y si los archivos rotados se archivan comprimidos.</p>
<p>En la configuración de <em>RollingFileAppender</em> los parámetros de configuración <em>fileName</em> y <em>filePattern</em> indican en que archivo se generan los <em>logs</em> y que nombre se les da a los archivos rotados y si se comprimen. La política <em>CronTriggeringPolicy</em> permite definir con una expresión <em>cron</em> en que momento y fecha periódica se realiza el rotado, la política <em>SizeBasedTriggeringPolicy</em> rota los archivos cuando lleguen a cierto tamaño especificado por parámetro de configuración en KB, MB o GB. Con la estrategia <em>DefaultRolloverStrategy</em> por defecto se configura cuantos archivos de <em>log</em> se quieren conservar como máximo, una vez llegado al límite el más antiguo se elimina limitando de esta forma el espacio ocupado por los <em>logs</em> de la aplicación.</p>
<p>En el siguiente ejemplo se muestra el archivo de configuración de log4j que emite las trazas a la consola y a un archivo en los que cada día o cuando lleguen a 500 MB son rotados. Al especificar en el parámetro <em>filePattern</em> la extensión <em>gz</em> los archivos rotados se comprimen para que ocupen menos espacio. Como se define en <em>DefaultRolloverStrategy</em> se conservan como máximo 10 archivos rotados, por tanto ocupando un máximo de 5 GiB.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">configuration</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">status</span><span class="p">:</span><span class="w"> </span><span class="l">warn</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">appenders</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">console</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">STDOUT</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">patternLayout</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">Pattern</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;%d{DEFAULT} %X{uuid} %-5level %60.60logger %msg%n&#34;</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">rollingFile</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">RollingFile</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">fileName</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;logs/app.log&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">filePattern</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">patternLayout</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">pattern</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;%d{DEFAULT} %X{uuid} %-5level %60.60logger %msg%n&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">policies</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">cronTriggeringPolicy</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">schedule</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;0 0 * * * ?&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">sizeBasedTriggeringPolicy</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">size</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;500 MB&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">defaultRollOverStrategy</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">max</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;10&#34;</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">loggers</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">root</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">level</span><span class="p">:</span><span class="w"> </span><span class="l">info</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">appenderRef</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="l">STDOUT</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">appenderRef</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ref</span><span class="p">:</span><span class="w"> </span><span class="l">RollingFile</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>log4j2.yaml</span>
    </div>
</div>
<p>Rotar los <em>logs</em> es una buena idea ya que en algunas aplicaciones Java si la aplicación por alguna circunstancia emite a los archivos de <em>log</em> un <em>stacktrace</em> de forma continuada generando una considerable cantidad de información en poco tiempo, si se guarda en el almacenamiento acaba por consumir todo el espacio disponible por muy previsor que se haya sido al aprovisionar el tamaño del espacio de almacenamiento, la aplicación terminará por dejar de prestar su servicio y alguien un sábado a las 3:00 de la noche es posible que deba levantarse de la cama porque ha llegado alguna alerta de monitorización si se es afortunado de disponer de uno para reaccionar cuanto antes y antes de que la aplicación deje de funcionar o peor recibe una llamada de teléfono cuando la aplicación ya se ha dejado de funcionar.</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>