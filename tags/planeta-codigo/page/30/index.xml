<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2022-12-29T21:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/</id>
        <title>Hemeroteca #9</title>
        <updated>2016-07-02T12:00:00+02:00</updated>
        <published>2016-07-01T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>6 meses más y 35 nuevos artículos escritos sobre temas de programación, java, software libre y opinión. No son muchos artículos pero tampoco son artículos breves sobre noticias efímeras, en cada artículo trato de compartir no solo información sino conocimiento en los que además suelo incluir el código completo de un ejemplo totalmente funcional.</strong></p>]]>
        <![CDATA[<p>Como cada seis meses en Blog Bitix hago una recopilación de los artículos que he publicado durante este tiempo, comento sobre que he escrito y comparto cómo ha evolucionado esta bitácora. Durante estas 26 primeras semanas del año he escrito 35 nuevos artículos siguiendo mi ritmo de publicación no muy prolífico pero muy constante al ritmo de uno por semana, algunas publicando dos artículos casi siempre durante el fin de semana.</p>
<p>Los temas de los artículos han sido los habituales programación, GNU/Linux, Java, JavaScript, unos pocos de opinión y algún desempaquetado de producto que he comprado y he usado.</p>
<p>En la categoría de programación están los siguientes:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/">Introducción y ejemplo básico sobre Vert.x</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/">Aplicación web con Spark <em>framework</em> y Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/">Introducción al protocolo HTTP/2</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/">Configurar HTTP/2 en nginx, Apache HTTPD, WildFly o Jetty</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/">Introducción y nuevas características de Java EE 7</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/como-ejecutar-un-proceso-del-sistema-con-java/">Cómo ejecutar un proceso del sistema con Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/como-firmar-correos-electronicos-con-gpg-y-javamail/">Cómo firmar correos electrónicos con GPG y JavaMail</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/aplicacion-de-ejemplo-usando-varias-especificaciones-de-java-ee-7/">Aplicación de ejemplo usando varias especificaciones de Java EE 7</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/usar-twitter-desde-java-con-twitter4j/">Usar Twitter desde Java con twitter4j</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/">El componente Grid de Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/">Extraer elementos de una cadena con una expresión regular</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/05/que-es-el-concepto-de-heap-pollution-en-java/">Qué es el concepto de Heap Pollution en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/05/la-clase-threadlocal-de-java-y-usos-practicos/">La clase ThreadLocal de Java y usos prácticos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/">Incluir información de la versión en el artefacto distribuible con Gradle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/">Ejemplo sencillo de como crear un excel en Java con Apache POI</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/">Ofrecer contenido personalizado al usuario basado en su ubicación</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/06/moment-js-libreria-javascript-para-fechas/">Moment.js, librería JavaScript para fechas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/">Cómo redirigir peticiones de HTTP a HTTPS en Nginx, Apache, Tomcat, Jetty y WildFly</a></li>
</ul>
<p>En la categoría de GNU/Linux y software libre están los siguientes artículos:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/">Cómo recuperar archivos eliminados o de una unidad corrupta en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/">Cifrar unidad USB completamente con dm-crypt y LUKS en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/">Cifrar archivos con EncFS en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/como-eliminar-de-forma-segura-archivos-con-wipe-y-dd-en-gnu-linux/">Cómo eliminar de forma segura archivos con wipe y dd en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/cambiar-el-formato-de-archivos-de-musica-o-audio-en-gnu-linux/">Cambiar el formato de archivos de música o audio en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/cambiar-el-formato-de-archivos-de-video-o-peliculas-en-gnu-linux/">Cambiar el formato de archivos de vídeo o películas en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/">4 opciones ofimáticas alternativas gratuitas a Microsoft Office</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/05/como-realizar-copias-de-seguridad-en-windows-con-freefilesync/">Cómo realizar copias de seguridad en Windows con FreeFileSync</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/">Atajos de teclado básicos de la terminal en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/">Combinación de teclas para copiar y pegar en la terminal</a></li>
</ul>
<p>Un trío de artículos de opinión:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/">Windows 10 y Office 2016 tan fáciles de usar sin licencia como siempre</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/">La siguiente disrupción tecnológica, la convergencia</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/">El lenguaje de programación, <em>framework</em> y librerías importan</a></li>
</ul>
<p>Finalmente, un desempaquetado de una aspiradora que compré, un resumen de las presentaciones a las que asistí de la conferencia BilboStack y el sexto aniversario desde que empecé la bitácora:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/desempaquetado-y-analisis-de-aspiradora-dyson-dc37c-advanced-allergy/">Desempaquetado y análisis de aspiradora Dyson DC37c Advanced Allergy</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/">Conferencia BilboStack 2016</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/">6º aniversario del blog</a></li>
</ul>
<p>Acabo de empezar dos series de artículos una <a href="https://picodotdev.github.io/blog-bitix/series/terminal/">serie sobre la terminal de GNU/Linux</a> y completando con otros cuantos artículos otra serie sobre varios temas de <a href="https://picodotdev.github.io/blog-bitix/series/web/">servidores y desarrollo web</a> que aún tengo pendiente de continuar con algunos más. Además y aunque no he escrito ningún artículo hablando sobre ellos publiqué una nueva actualización del <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">libro PlugIn Tapestry</a> con nuevo contenido y otro tanto revisado y actualizado.</p>
<p>Con algunos artículos he quedado bastante satisfecho como en los que he hablado de Microsoft Windows y Microsoft Office pero también varios sobre Java, Java EE y HTTP/2. Sin embargo, algo que no falla es escribir algo de JavaScript y recibir unos cuantos <em>retweets</em> y favoritos cuando lo publico en Twitter aunque tenga la sensación de no ser lo de lo mejor que haya escrito parece que es lo que más llama la atención posiblemente ya que la mayoría de la gente lo usa de una u otra forma. Por otro lado tengo la sensación de que escribo para Google ya que recibo pocos comentarios seguramente por la forma en la que escribo ya que no suelo personalizar los artículos poniendo información personal o intercalando algunos chistes, más bien me centro en el aspecto técnico del que estoy escribiendo pero tampoco pasa nada, compartir el poco o más conocimiento que tengo y otro que voy aprendiendo ya es suficiente recompensa para mi si además veo que cuanto más tiempo pasa el número de visitas crecen algo me mantiene con motivación para seguir escribiendo y publicando contenido.</p>
<p>En cuanto a como han evolucionado las visitas siempre es motivante ver que con el nuevo contenido añadido y poco a poco las visitas y número de páginas vistas aumentan algo, en cualquier caso siguen siendo pocas con las que seguramente tengan otras bitácoras de temática similar pero también seguramente más que otros cuantas. De casi aproximadamente 7000 sesiones al mes que tenía en enero ahora en junio Analytics me contabiliza unas 11000, en el mismo periodo de tiempo he pasado de 9000 páginas vistas a casi 13500. La mayor parte de esta mejora ha sido por unos pocos artículos que se habrán posicionado bien en los primeros meses del año en el buscador Google fuente de la que provienen la mayor parte de las visitas.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/images/analytics_hua428655850c84d6e227cc12cef1d388e_61923_2560x1440_fit_box_3.png" data-gallery="" title="Evolución de sesiones mensuales en Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/images/analytics_hua428655850c84d6e227cc12cef1d388e_61923_300x200_fit_box_3.png" width="300" height="113" alt="Evolución de sesiones mensuales en Blog Bitix" title="Evolución de sesiones mensuales en Blog Bitix"  class="lozad "></a></p>
<figcaption>Evolución de sesiones mensuales en Blog Bitix</figcaption>
</figure>
</div>
<p>Durante este tiempo en la bitácora he realizado algunos cambios haciendo el tamaño de letra más pequeña de las secciones de referencia y series de artículos así como en las series de artículos numerar los artículos. He añadido publicidad a nivel de página para los dispositivos móviles soportados que desde no hace mucho ofrece Google AdSense. He añadido un buscador con la tecnología de Google para buscar contenido en Blog Bitix y he minimizado el HTML con la intención de que la cantidad de datos descargados al acceder al <em>blog</em> sean unos cuantos kilobytes menos. También he añadido un mensaje para aquellos usuarios que usen AdBlock y lo tengan activado instándolos a considerar que lo desactiven en Blog Bitix ya que la publicidad que incluyo en el <em>blog</em> es amable y poco intrusiva.</p>
<p>Con la publicidad que incluyo y los enlaces de afiliación para Amazon de mayoritariamente libros haré alguna nueva donación a algún proyecto de software libre que use o me resulte de interés. Con las enlaces de Amazon recibí una nueva transferencia de unos 25 € y con la publicidad de AdSense estoy a punto de recibir la correspondiente transferencia de aproximadamente 70 € al superar el límite mínimo, cuando la reciba me plantearé hacer la o las donaciones. No serán muy elevadas pero con ellas espero contribuir y devolver algo al software libre que uso a diario tanto de forma personal como en el trabajo. La primera donación que hice fue <a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/">comprando una par de camisetas a la FSFE</a>.</p>
<p>Tengo muchos artículos escritos pero pendientes de publicar y muchas ideas de artículos que me permitirían seguir escribiendo a mi ritmo de publicación durante más de un año o dos sin ocurrírseme ninguna nueva idea de artículo aunque algunas ideas que he apuntado más tarde las deseche. Más que tiempo para escribir me falta tiempo para editar y publicar los artículos, compaginarlo con el trabajo me absorbe gran parte del tiempo libre que me queda.</p>
<p>Y por mi esto ha sido todo durante estos seis meses pasados. ¡A por los siguientes 6 meses con nuevos artículos!</p>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/</id>
        <title>El lenguaje de programación, framework y librerías importan</title>
        <updated>2016-06-26T12:00:00+02:00</updated>
        <published>2016-06-25T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Para programar hay una abundancia tremenda de lenguajes, librerías, <em>frameworks</em>, tecnologías, etc&hellip; disponibles para desarrollar un proyecto. Esto es muy bueno ya que podremos elegir la combinación de cualquiera de ellas que más se ajuste a las necesidades del proyecto, las que mejor conozcamos ya o según nuestras preferencias en base a sus características incluyendo su comunidad, documentación, si tiene un desarrollo activo, fecha de la última versión u otros motivos que consideremos. El lado malo de esta abundancia es que requiere analizar seguramente no todas pero al menos las más nombradas, más usadas, con mejor documentación o con un mantenimiento activo. Por la cantidad de opciones dicha tarea de análisis requiere tiempo y esfuerzo que no debe abrumarnos considerando que cualquiera de ellas vale.</p>
<p>Algunas personas piensan que las herramientas no son importantes quizá creen que hay tantas que da igual cualquiera de ellas o que solo importan las personas, «lo que hay entre el teclado y la silla». Entre varias herramientas adecuadas ciertamente en un proyecto no serán lo más importante ni usar alguna en concreto es un fin pero eso no quiere decir que no sean importantes. Son importantes porque afectan de forma notable al desarrollo del proyecto, por poner un ejemplo no es lo mismo un lenguaje o <em>framework</em> que evita errores de compilación en producción, un <abbr title="Integrated Development Environment">IDE</abbr> que los detecta según se escribe el código o que permite hacer <em>refactors</em> con más garantías de no introducir errores que un lenguaje en el que necesitas teses que cubran la totalidad del código simplemente para detectarlos, no es lo mismo el número de lineas necesarias o su verbosidad pero es más importante la legibilidad si va a ser mantenido durante mucho tiempo, no es lo mismo elegir una herramienta ampliamente probada que una implementada por nosotros con el tiempo necesario a dedicar a desarrollarla y que probablemente finalmente sea menos flexible que otra existente, no es lo mismo una base de datos relacional que garantiza la integridad de los datos que una base de datos NoSQL sin validación de esquema. Yendo a un extremo creo que nadie considera siquiera usar ensamblador para hacer una aplicación web o usar Java, hasta el momento, para programar un sistema operativo de alto rendimiento que exprima el máximo potencial del hardware. Pero entre algunas opciones equivalentes cualquiera, con matices, nos servirá, por ejemplo, usar el lenguaje <a href="https://secure.php.net/">PHP</a>, <a href="https://dotnet.microsoft.com/">C#</a> o <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> para hacer una aplicación web usando para cada opción los <em>frameworks</em> <a href="https://symfony.com/">Symfony</a>, <a href="https://www.asp.net/mvc">ASP.NET MVC</a> o <a href="https://tapestry.apache.org/">Apache Tapestry</a>. Hay grados de lo adecuado que es una herramienta para una necesidad.</p>
<p>Por otro lado las herramientas consideradas en el inicio de un proyecto no son inmutables durante toda su existencia y cambian en la medida que las necesidades del proyecto cambian. En una <em>startup</em> al principio se necesitará una combinación de herramientas que permita probar la viabilidad del proyecto y evolucionar rápidamente el producto o servicio. Más tarde según se estabiliza el proyecto y crece surgirán nuevas necesidades como mayor fiabilidad, menos errores y escalabilidad tanto en cantidad de código y número de personas trabajando al mismo tiempo en el mismo código fuente.</p>
<p>También suele haber alguna discusión en si utilizar <em>frameworks</em> o no utilizarlos, usarlos evita tener que desarrollar nosotros mismos mucho código, nos ahorrará tiempo, tendremos mayor flexibilidad y menos errores pero usándolos el proyecto tendrá esa dependencia lo que implica que el código se deberá adaptar a él que aún así igual es algo que queremos para estructurar correctamente el código según el marco de trabajo ofrecido. Por otro lado he presenciado comentarios desfavoreciendo el uso de <em>frameworks</em>, la mayoría de programadores no tienen los conocimientos y tiempo de implementar su propia alternativa con la misma calidad y en la mayoría de los casos basta con reutilizar alguna que cubra la necesidad y más importante esté ampliamente probada.</p>
<p>Para mi lo importante es que para cualquier librería o <em>framework</em> que elijamos tengamos en un futuro la posibilidad de reemplazarlo sin estar encadenados a él y sin tener que reescribir el proyecto entero, esto forma parte de las más básicas buenas prácticas de desarrollo, precisamente las aplicaciones que se desarrollan en capas y los <em>frameworks</em> que separan modelo, de vista, de controlador tratan de minimizar ese impacto.</p>
<p>Cada proyecto es distinto y hay que conocer sus requerimientos para seleccionar las herramientas que contribuyan al éxito o a la menor cantidad de dificultades, si se tratan de un proyecto en la plataforma Java probablemente varias herramientas serán las que indico en el artículo <a href="https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/">herramientas para un proyecto Java</a>. Si no está clara la plataforma también puedes echarle un vistazo a <a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">10 razones para seguir usando Java</a> y <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">novedades y nuevas características de Java 8</a>.</p>
<p>La tecnologías, lenguajes, librerías, <em>frameworks</em>, &hellip; son herramientas a usar para conseguir un fin que es hacer realidad el proyecto, producto o servicio con un componente informático, las herramientas no son un fin en si mismo, no son lo más importante, lo más importante es resolver la necesidad de alguien normalmente con restricciones de tiempo y coste, pero desde luego no son irrelevantes y no da igual usar cualquiera. Son las herramientas equivalentes de un fontanero, pintor, carpintero u otros profesionales que tienen cantidad de ellas para realizar multitud de tareas específicas de forma efectiva y rápida junto con su conocimiento y experiencia. Los lenguajes de programación, <em>frameworks</em> y librerías de no ser importantes no existirían tantas incluso varias con diferentes propiedades para la misma necesidad.</p>
]]>
        </content>
        
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/</id>
        <title>Combinación de teclas para copiar y pegar en la terminal</title>
        <updated>2020-06-02T18:15:00+02:00</updated>
        <published>2016-06-24T15:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En vez de usar el botón derecho de ratón y hacer clic sobre el menú desplegable para realizar la acción de copiar y pegar se puede emplear el teclado con una combinación de teclas para realizar estas mismas acciones. Si estas operaciones se realizan frecuentemente la combinación de teclas es más rápido y sencillo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Usar una combinación de teclas para realizar alguna acción es más rápido que usar el ratón. Si se trata de una acción que realizamos frecuentemente podemos ahorrar bastante tiempo. Yo trabajo bastante con la terminal de GNOME y hasta ahora no sabía cómo copiar y pegar con una combinación de teclas del teclado.</p>
<p>Esto no es algo nada vital pero si es algo que usamos frecuentemente puede hacernos más fácil la tarea y ahorrarnos tiempo al igual que conocer y usar los <a href="https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/">atajos de teclado básicos de la terminal en GNU/Linux</a> para realizar otras operaciones comunes en la terminal como desplazarse al principio del símbolo del sistema, al final, a la siguiente o anterior palabra, limpiar la terminal, hacer búsquedas de texto para encontrar coincidencias, ejecutar el comando anterior, buscar en el historial de comandos o gestionar procesos.</p>
<p>La combinación de teclas estandarizada para copiar y pegar en cualquier aplicación tanto en Linux como en Windows es <kbd>Ctrl+c</kbd> para copiar y <kbd>Ctrl+v</kbd> para pegar de y al portapapeles. En la terminal (al menos en la de GNOME) cambia ligeramente y hay que usar <kbd>Ctrl+Shift+c</kbd> para copiar y <kbd>Ctrl+Shift+v</kbd> para pegar el texto en la posición del cursor.</p>
<p>Para copiar el texto deseado hay que usar el ratón para seleccionar el texto pero con la combinación de teclas nos evitaremos pulsar el botón derecho del ratón, desplazarnos hasta la opción <em>Copiar</em> del menú y finalmente hacer clic en él. Para pegar con el ratón la acción está en el mismo menú pero pulsando en la opción <em>Pegar</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/images/gnome-terminal_hud5772c79c509d7016f65842c866d599f_25308_2560x1440_fit_box_3.png" data-gallery="" title="Menú para copiar y pegar en la terminal de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/images/gnome-terminal_hud5772c79c509d7016f65842c866d599f_25308_300x200_fit_box_3.png" width="300" height="172" alt="Menú para copiar y pegar en la terminal de GNOME" title="Menú para copiar y pegar en la terminal de GNOME"  class="lozad "></a></p>
<figcaption>Menú para copiar y pegar en la terminal de GNOME</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<p><a href="http://askubuntu.com/questions/211292/a-terminal-which-provides-select-to-copy-and-right-click-to-paste">A terminal which provides select-to-copy and right-click-to-paste</a></p>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/</id>
        <title>Cómo redirigir peticiones de HTTP a HTTPS en Nginx, Apache, Tomcat, Jetty y WildFly</title>
        <updated>2016-06-18T13:00:00+02:00</updated>
        <published>2016-06-18T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Usar el protocolo seguro HTTPS proporciona confidencialidad en la comunicación entre el navegador del usuario y el servidor, es una forma de mejorar la seguridad y privacidad. Por ello el buscador de Google lo tiene en cuenta como un parámetro que afecta al SEO siendo mejor usar el protocolo seguro. Sin embargo, el usuario puede estar accediendo por el protocolo no seguro a la página web al poner la dirección en la barra de direcciones o hay enlaces hacia nuestro sitio en otros que hacen uso del protocolo HTTP. Si queremos que nuestro sitio sea accedido únicamente usando el protocolo seguro deberemos hacer una redirección en el servidor.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/nginx.svg" width="300" height="64" alt="Nginx" title="Nginx"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache.svg" width="150" height="264" alt="Apache HTTPD" title="Apache HTTPD"  class=""></p>
</div>
<p>Si tenemos una aplicación o una bitácora que hasta el momento era accedido por el protocolo no cifrado <abbr title="Hypertext Transfer Protocol">HTTP</abbr> ahora que Google tiene en cuenta para el <abbr title="Search engine optimization">SEO</abbr> que usar el protocolo seguro es un parámetro que tiene en cuenta el algoritmo de posicionamiento en el buscador quizá queramos redirigir todo el tráfico de HTTP al protocolo cifrado <abbr title="Hypertext Transfer Protocol Secure">HTTPS</abbr>.</p>
<p>Para usar HTTPS deberemos primero <a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">configurar el protocolo TLS/SSL en el servidor web o de aplicaciones</a> usando un certificado SSL que podemos obtener ahora con <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a> de forma gratuita  o <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">generar un certificado</a> nosotros y que sea firmado por una autoridad de confianza. Una vez que el servidor es capaz de servir el tráfico por el protocolo HTTPS estamos en condiciones de realizar la redirección al protocolo cifrado HTTPS en el puerto 443 cuando sea accedido por el protocolo no cifrado HTTP en el puerto 80.</p>
<p>Dependiendo del servidor web o de aplicaciones que usemos la configuración será distinta, incluso lo podemos hacer a nivel de aplicación con la ayuda del <em>framework</em> web si este ofrece algún soporte para ello. A continuación incluiré la configuración necesaria para los servidores web y de aplicaciones más populares como son <a href="https://nginx.org/">Nginx</a>, <a href="https://httpd.apache.org/">Apache HTTPD</a>, <a href="https://tomcat.apache.org/">Tomcat</a>, <a href="https://eclipse.org/jetty/">Jetty</a> y <a href="https://wildfly.org/">WildFly</a> y finalmente el caso haciendo la redirección a nivel de aplicación con el <em>framework</em> <a href="https://tapestry.apache.org/">Apache Tapestry</a> para desarrollar aplicaciones web con el lenguaje Java.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="redirigir-de-http-a-https-en-nginx">Redirigir de HTTP a HTTPS en Nginx</h3>
<p>Usando <a href="https://www.docker.com/">Docker</a> nos resultará más sencillo hacer la prueba que teniendo que instalar el paquete de Nginx en nuestra distribución. Puedes consultar <a href="https://picodotdev.github.io/blog-bitix/series/docker/">varios artículos sobre Docker</a> que he escrito a modo introducción y para empezar a usarlo.</p>
<p>En la sección del servidor que escucha en el puerto HTTP (80) realizamos la redirección permanente con el código de estado 301 hacia el protocolo HTTPS. En la sección del servidor que escucha en el puerto HTTPS (443) activa el uso de TLS/SSL usando varias directivas y sirve los documentos de <em>/usr/share/nginx/html</em> en la ruta <em>/</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="k">server</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="mi">80</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span>  <span class="s">localhost</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">return</span> <span class="mi">301</span> <span class="s">https://</span><span class="nv">$host$request_uri</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">server</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="mi">443</span> <span class="s">ssl</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span>  <span class="s">localhost</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_certificate</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">localhost.pem</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_certificate_key</span>  <span class="s">localhost.key</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_session_timeout</span>  <span class="mi">5m</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_protocols</span>  <span class="s">SSLv2</span> <span class="s">SSLv3</span> <span class="s">TLSv1</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_ciphers</span>  <span class="s">HIGH:!aNULL:!MD5</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_prefer_server_ciphers</span>   <span class="no">on</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">root</span>   <span class="s">/usr/share/nginx/html</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.conf</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm --name nginx -p 80:80 -p 443:443 -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/nginx.conf:/etc/nginx/conf.d/default.conf:ro -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/localhost.key:/etc/nginx/localhost.key:ro -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/localhost.pem:/etc/nginx/localhost.pem:ro nginx&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-nginx.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/images/nginx-https_hue63bd68d6da26158af47489fff3f4633_39049_2560x1440_fit_box_3.png" data-gallery="" title="Redirección de HTTP a HTTPS en Nginx"><img src="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/images/nginx-https_hue63bd68d6da26158af47489fff3f4633_39049_300x200_fit_box_3.png" width="300" height="193" alt="Redirección de HTTP a HTTPS en Nginx" title="Redirección de HTTP a HTTPS en Nginx"  class="lozad "></a></p>
<figcaption>Redirección de HTTP a HTTPS en Nginx</figcaption>
</figure>
</div>
<h3 id="redirigir-de-http-a-https-en-apache-httpd">Redirigir de HTTP a HTTPS en Apache HTTPD</h3>
<p>La configuración para Apache HTTPD es similar simplemente cambian las directivas según su propia configuración. Se activan los módulos para usar TLS/SSL y el que permite hacer reescrituras de las URL.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-apache" data-lang="apache"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nb">LoadModule</span> ssl_module modules/mod_ssl.so&#10;</span></span><span class="line"><span class="cl"><span class="nb">LoadModule</span> rewrite_module modules/mod_rewrite.so&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="nb">ServerName</span> localhost&#10;</span></span><span class="line"><span class="cl">   <span class="nb">RewriteEngine</span> <span class="k">On</span>&#10;</span></span><span class="line"><span class="cl">   <span class="nb">RewriteCond</span> %{HTTPS} <span class="k">off</span>&#10;</span></span><span class="line"><span class="cl">   <span class="nb">RewriteRule</span> (.*) https://%{SERVER_NAME}$1 [R,L] &#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/VirtualHost&gt;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;VirtualHost</span> <span class="s">*:443</span><span class="nt">&gt;</span>&#10;</span></span><span class="line"><span class="cl">   <span class="nb">ServerName</span> localhost&#10;</span></span><span class="line"><span class="cl">   <span class="nb">DocumentRoot</span> <span class="sx">/usr/local/apache2/htdocs</span>&#10;</span></span><span class="line"><span class="cl">   <span class="nb">SSLEngine</span> <span class="k">On</span>&#10;</span></span><span class="line"><span class="cl">   <span class="nb">SSLCertificateFile</span> conf/localhost.crt&#10;</span></span><span class="line"><span class="cl">   <span class="nb">SSLCertificateKeyFile</span> conf/localhost.key&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/VirtualHost&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>httpd.conf</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm --name apache -p 80:80 -p 443:443 -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/localhost.key:/usr/local/apache2/conf/localhost.key:ro -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/localhost.crt:/usr/local/apache2/conf/localhost.crt:ro httpd&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-httpd.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/images/apache-httpd-https_hubf9e456f70a86242ec4ea551d624d414_17136_2560x1440_fit_box_3.png" data-gallery="" title="Redirección de HTTP a HTTPS en Apache HTTPD"><img src="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/images/apache-httpd-https_hubf9e456f70a86242ec4ea551d624d414_17136_300x200_fit_box_3.png" width="300" height="193" alt="Redirección de HTTP a HTTPS en Apache HTTPD" title="Redirección de HTTP a HTTPS en Apache HTTPD"  class="lozad "></a></p>
<figcaption>Redirección de HTTP a HTTPS en Apache HTTPD</figcaption>
</figure>
</div>
<h3 id="redirigir-de-http-a-https-en-tomcat-jetty-y-wildfly">Redirigir de HTTP a HTTPS en Tomcat, Jetty y WildFly</h3>
<p>Es muy habitual que los servidores de aplicaciones como Tomcat, Jetty o WildFly sean accedidos no directamente por el navegador del usuario sino a través de un servidor web como Nginx o Apache haciendo de <em>proxy</em>. Cuando hay un servidor web que actúa de <em>proxy</em> para el servidor de aplicaciones es posible decidir que el establecimiento de la conexión cifrada TLS/SSL del protocolo HTTPS se realice en el servidor web y la comunicación cifrada termine al mismo tiempo en él, la comunicación entre el servidor web y el servidor de aplicaciones se realizaría usando el protocolo HTTP. Esto descarga del servidor de aplicaciones la tarea algo costosa del establecimiento de la conexión cifrada y tener que cifrar el tráfico.</p>
<p>Para el caso de Tomcat, Jetty y WildFly habiendo configurado la posibilidad de usar el protocolo seguro la configuración para hacer la redirección es la misma para los tres, habría que añadir al archivo descriptor <em>web.xml</em> de la aplicación el siguiente fragmento XML. Esto hace que el servidor fuerce la conexión segura para los recursos indicados, en este caso todos al usar el patrón <em>/*</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-XML" data-lang="XML"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;security-constraint&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="nt">&lt;web-resource-collection&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="nt">&lt;web-resource-name&gt;</span>Confidential URLs<span class="nt">&lt;/web-resource-name&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/web-resource-collection&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="nt">&lt;user-data-constraint&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="nt">&lt;transport-guarantee&gt;</span>CONFIDENTIAL<span class="nt">&lt;/transport-guarantee&gt;</span>&#10;</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/user-data-constraint&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nt">&lt;/security-constraint&gt;</span>&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>web.xml</span>
    </div>
</div>
<h3 id="redirigir-de-http-a-https-en-en-una-aplicación-java">Redirigir de HTTP a HTTPS en en una aplicación Java</h3>
<p>Con algún mecanismo propio que empleemos al programar la aplicación (en Java por ejemplo con un filtro) o el <em>framework</em> web que usemos para desarrollar la aplicación web quizá nos ofrezca algún mecanismo para redirigir las peticiones al puerto seguro cuando sea accedida por el puerto inseguro, por ejemplo, para que la redirección la haga la aplicación en vez del servidor con el <em>framework</em> Apache Tapestry basta añadir la siguiente configuración en el módulo de la aplicación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">contributeMetaDataLocator</span><span class="o">(</span><span class="n">MappedConfiguration</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">configuration</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">	<span class="n">configuration</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">MetaDataConstants</span><span class="o">.</span><span class="na">SECURE_PAGE</span><span class="o">,</span> <span class="s">&#34;true&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppModule.java</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/WebServerRedirectHTTPtoHTTPS">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-nginx.sh o ./docker-httpd.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://wiki.apache.org/httpd/RedirectSSL">Redirect Request to SSL</a></li>
<li><a href="https://confluence.atlassian.com/stashkb/redirect-http-requests-to-https-333810132.html">Redirect HTTP Requests to HTTPS (in Tomcat)</a></li>
<li><a href="http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html">Configuring SSL/TLS (in Jetty)</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/</id>
        <title>Atajos de teclado básicos de la terminal en GNU/Linux</title>
        <updated>2016-06-17T18:00:00+02:00</updated>
        <published>2016-06-17T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Aprender las combinaciones de teclas de aquellas aplicaciones que usamos frecuentemente y durante mucho tiempo nos ayuda a hacer las cosas en menos tiempo y de forma más sencilla. Cada aplicación tiene los suyos propios, en este artículo los de la terminal con el intérprete de comandos <em>bash</em> para GNU/Linux.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Si no conoces lo que estás buscando una interfaz gráfica es una buena forma de descubrir cosas, si conoces exactamente lo que buscas y si lo tienes que hacer de forma repetida es tediosa y lenta. La terminal en <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> sigue siendo una poderosa herramienta para realizar multitud de tareas. Entre sus ventajas son realizar la tareas de forma mucho más directa y simple que con una interfaz gráfica o la posibilidad de automatizar tareas repetitivas en un <em>script bash</em> o en un lenguaje de programación como <a href="https://www.python.org/">Python</a>. Entre las desventajas de la línea de comandos está que no suele ser tan intuitiva como una interfaz gráfica. Dadas las ventajas de la terminal o línea de comandos para algunas personas su uso es muy frecuente y en GNU/Linux es común tener que usarla en algún momento, conocer las combinaciones de teclas que podemos usar la tarea será más fácil y la haremos rápidamente.</p>
<p>En el intérprete de la terminal <a href="https://es.wikipedia.org/wiki/Bash">Bash</a> podemos usar las siguientes combinaciones de teclas:</p>
<ul>
<li><kbd>Ctrl+a</kbd>: lleva el cursor al inicio de la línea de comandos.</li>
<li><kbd>Ctrl+e</kbd>: lleva el cursor al final de la línea de comandos.</li>
<li><kbd>Ctrl+l</kbd>: limpia la terminal, similar a lo que hace el comando <code>clear</code>.</li>
<li><kbd>Ctrl+u</kbd>: limpia desde la posición del cursor hasta el inicio de la línea. Si se está al final limpia la línea entera.</li>
<li><kbd>Ctrl+k</kbd>: limpia desde la posición del cursor hasta el final de la línea. Si se está al inicio limpia la línea entera.</li>
<li><kbd>Ctrl+h</kbd>: hace lo mismo que la tecla <code>backspace</code>, borra el caracter inmediatamente anterior a la posición del cursor.</li>
<li><kbd>Ctrl+w</kbd>: borra la palabra inmediatamente antes del cursor.</li>
<li><kbd>Alt+d</kbd> o <kbd>Esc+d</kbd>: borra la palabra siguiente después del cursor.</li>
<li><kbd>Ctrl+p</kbd>: establece la línea de comandos con el último comando introducido.</li>
<li><kbd>Ctrl+r</kbd>: inicia la búsqueda de comandos usados anteriormente, tecleando parte de un comando usos anteriores que hayamos realizado incluyendo las opciones y parámetros. Hecha una búsqueda pulsando de nuevo la combinación de teclas encontraremos coincidencias anteriores.</li>
<li><kbd>Ctrl+c</kbd>: termina el proceso que se esté ejecutando, útil para recuperar el control del sistema.</li>
<li><kbd>Ctrl+d</kbd>: sale de la terminal, similar al comando <code>exit</code>.</li>
<li><kbd>Ctrl+z</kbd>: suspende la ejecución del proceso que se está ejecutando y lo pone en segundo plano, con el comando <code>fg</code> podremos volver a continuar su ejecución.</li>
<li><kbd>Ctrl+t</kbd>: intercambia la posición de los dos caracteres antes del cursor, útil para corregir malos tecleos.</li>
<li><kbd>Esc+t</kbd>: intercambia la posición de las dos palabras antes del cursor, útil para corregir malos tecleos.</li>
<li><kbd>Alt+f</kbd>: mueve el cursor al inicio de la palabra siguiente de la línea, lo mismo que <kbd>Ctrl+right</kbd> en la terminal de GNOME.</li>
<li><kbd>Alt+b</kbd>: mueve el cursor al inicio de la palabra anterior de la línea, lo mismo que <kbd>Ctrl+left</kbd> en la terminal de GNOME.</li>
<li><kbd>Tab</kbd>: autocompleta comandos o rutas de directorios o archivos.</li>
</ul>
<p>Poner comandos en segundo plano es útil si un proceso deja el sistema sin respuesta o queremos introducir otro antes de que termine el primero. Con tres comandos podemos <a href="http://www.tldp.org/LDP/abs/html/x9644.html">manejar los procesos en primer y segundo plano</a>:</p>
<ul>
<li><code>jobs</code>: con este comando podremos ver la lista de procesos en segundo plano, con información de si están detenidos/suspendidos o en ejecución además del identificativo asignado para usar en los comandos <code>fg</code> y <code>bg</code>.</li>
<li><code>fg</code>: pone en primer plano un proceso, si estaba suspendido reanuda su ejecución.</li>
<li><code>bg</code>: continua la ejecución del proceso pero lo deja en segundo plano, si emite contenido a la terminal se mostrará y quizá nos moleste al seguir trabajando.</li>
<li><code>kill</code>: con el identificativo del proceso en segundo plano y un símbolo de porcentaje por delante podemos enviar la señal de terminado del proceso. Ejemplo, <code>kill %1</code>.</li>
<li>Añadiendo un <em>ampersand</em>, <code>&amp;</code>, al final del comando pondremos el comando en ejecución pero en segundo plano directamente.</li>
</ul>
<p>Las anteriores combinaciones de teclas son del intérprete de comandos bash, el emulador de terminal que usemos también incorpora algunas combinaciones de teclas más. En el caso del emulador del terminal de <a href="https://www.gnome.org/">GNOME</a> podemos usar las siguientes combinaciones muy útiles:</p>
<ul>
<li><kbd>Ctrl+Shift+f</kbd>: abre un diálogo para hacer una búsqueda de texto en la salida de la terminal.</li>
<li><kbd>Ctrl+Shift+g</kbd>: busca la siguiente ocurrencia de la búsqueda previa en la terminal.</li>
<li><kbd>Ctrl+Shift+h</kbd>: busca la anterior ocurrencia de la búsqueda previa en la terminal.</li>
<li><kbd>Ctrl+Shift+c</kbd>: copia el texto seleccionado de la terminal al portapapeles.</li>
<li><kbd>Ctrl+Shift+v</kbd>: pega el texto del portapapeles en la línea de comandos.</li>
<li><kbd>Up</kbd>: establece en la línea de comandos el comando anterior del historial, igual que <kbd>Ctrl+p</kbd>.</li>
<li><kbd>Down</kbd>: establece en la línea de comandos el siguiente comando del historial.</li>
<li><kbd>Left Mouse</kbd>: selecciona líneas de texto de la terminal.</li>
<li><kbd>Ctrl+Left Mouse</kbd>: selecciona bloques de texto de la terminal.</li>
</ul>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/images/gnome-terminal_hu0f48c3b3d0e244aa608e0ef5edb0900b_9368_2560x1440_fit_box_3.png" data-gallery="" title="Terminal de GNOME con el intérprete de comandos bash"><img src="https://picodotdev.github.io/blog-bitix/2016/06/atajos-de-teclado-basicos-de-la-terminal-en-gnu-linux/images/gnome-terminal_hu0f48c3b3d0e244aa608e0ef5edb0900b_9368_300x200_fit_box_3.png" width="300" height="193" alt="Terminal de GNOME con el intérprete de comandos bash" title="Terminal de GNOME con el intérprete de comandos bash"  class="lozad "></a></p>
<figcaption>Terminal de GNOME con el intérprete de comandos bash</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://www.howtogeek.com/howto/ubuntu/keyboard-shortcuts-for-bash-command-shell-for-ubuntu-debian-suse-redhat-linux-etc/">Keyboard Shortcuts for Bash (Command Shell for Ubuntu, Debian, Suse, Redhat, Linux, etc)</a></li>
<li><a href="http://www.thegeekstuff.com/2010/05/unix-background-job/">Bg, Fg, &amp;, Ctrl-Z – 5 Examples to Manage Unix Background Jobs</a></li>
<li><a href="http://serverfault.com/questions/430153/block-select-on-a-linux-console">Block select on a Linux console</a></li>
<li><a href="http://www.tldp.org/LDP/abs/html/x9644.html">Job Control Commands</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/</id>
        <title>La siguiente disrupción tecnológica, la convergencia</title>
        <updated>2016-06-11T12:00:00+02:00</updated>
        <published>2016-06-10T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La tecnología no para de avanzar, cada varios meses salen noticias de avances importantes. Algunos avances se convierten en realidad, otros tardan más en llegar, otros llegan pero no triunfan y de otros pasado un tiempo no se vuelve a oír hablar de ellos. Algunos cambios aunque mejoran lo existente son leves sin añadir nuevas posibilidades ni cambian los comportamientos de los usuarios o como interaccionan estos con la tecnología. Otros pocos son disruptivos y cambian de forma significativa el mercado de la tecnología junto con sus usuarios, estos cambios novedosos son capaces de hundir empresas líderes si no saben adaptarse o no los prevén al mismo tiempo que crean nuevos líderes en el mercado.</strong></p>]]>
        <![CDATA[<p>En el mundo de la tecnología cada nuevo procesador, tarjeta gráfica, <abbr title="Solid-State Drive">SSD</abbr> y otros componentes de un dispositivo se presentan prometiendo mejoras significativas en rendimiento y/o consumo de energía habitualmente entre un 20% y 90% sobre la generación anterior. Las mejoras de los componentes aunque significativas no suponen una disrupción en la tecnología, simplemente la hacen más rápida. El caso de los procesadores, tarjetas gráficas o SSD es una muestra, estos nuevos sistemas de almacenamiento aunque suponen una gran mejora sobre los discos duros mecánicos con una mucho mayor tasa de transferencia no modifican de forma disruptiva la tecnología para el usuario, si el ordenador en vez de iniciarse en un minuto y medio tarda 15 segundos aunque el SSD suponga una mejora significativa en el rendimiento de los ordenadores no es más que esperar más o menos tiempo, es una pequeña disrupción para los usuarios aunque grande para los fabricantes.</p>
<p>De las disrupciones que estoy hablando son las cambian significativamente la tecnología, la aparición del ordenador personal y como los aprovechó <a href="https://www.microsoft.com/">Microsoft</a> e <a href="https://www.ibm.com/us-en/">IBM</a> no supo o no pudo, la aparición de las interfaces gráficas cuando solo existía la línea de comandos o estaban basadas en texto e iniciaron el dominio de Microsoft y <a href="https://www.apple.com/">Apple</a> en la informática de consumo, de la aparición de los teléfonos móviles en la que en una época <a href="https://www.nokia.com/es_int/">Nokia</a> era el líder y como con la aparición de los teléfonos inteligentes al no adaptarse o preverlo sucumbió al menos tal y como era, de como <em>3dfx</em> no pudo competir con las <abbr title="Graphics Processor Unit">GPU</abbr> modernas que <a href="https://www.nvidia.com/es-es/">NVIDIA</a> popularizó con gran éxito. Algunas disrupciones importantes no son instantáneas pueden tardar algún lustro pero sin las compañías líderes no las ven venir ni se adaptan cuando quieren darse cuenta ya es demasiado tarde llegando a desaparecer o convertirse en poco relevantes. Algunas tecnologías prometedoras no tienen el éxito esperado como las pantallas de televisión 3D o curvas, un porcentaje grande de otros casos siguen el mismo camino, ¿alguien ha dicho <em>blu-ray</em>?, ¿<em>smartwatch</em>?, &hellip;</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/microsoft.svg" width="300" height="200" alt="Linux" title="Linux"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apple.svg" width="300" height="200"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="300" height="200"  class="lozad "></p>
</figure>
</div>
<p>¿Cuál será la siguiente disrupción? Hacer cábalas sobre futuro es difícil y suele ser más propio del inicio de año pero aquí haré mi apuesta y a ver si acierto. En estos momentos hay varias novedosas que pueden cambiar significativamente el mundo de la tecnología una de ellas es la realidad virtual o la realidad aumentada de las <em>holosens</em> de Microsoft, muy de películas futuristas pero incómodas de usar para el usuario ya que requieren gafas en el caso de la realidad virtual que acaparan la visión y las <em>holosens</em> de Microsoft para la realidad aumentada no veo porque no vayan a seguir el mismo camino que las <a href="https://es.wikipedia.org/wiki/Google_Glass">Google Glass</a>, otro proyecto futurista de realidad aumentada es <a href="https://get.google.com/tango/">Google Tango</a> que será un nuevo ámbito de acción para muchas empresas. De todas la que creo que más temprano que tarde llegará será la convergencia entre dispositivos móviles, tabletas, ordenadores e incluso <em>smart tv</em>.</p>
<p>Con la cada vez más capacidad de los dispositivos móviles que aumenta en un gran porcentaje en cada generación ¿cuando será el momento en que sean capaces de sustituir a otros dispositivos como ordenador y tabletas? Algunos móviles ya tienen 3 y 4GiB de memoria, sus procesadores más núcleos que un ordenador de escritorio, almacenamiento de 64GiB y 128Gib más que suficiente existiendo el almacenamiento en línea y externo para los dispositivos permanentemente conectados. Los procesadores de los dispositivos móviles <a href="https://www.arm.com/">ARM</a> no está muy lejos del rendimiento de los procesadores de escritorio Intel Core ¿cuánto tiempo tardará en aparecer el primer ordenador de escritorio con procesador ARM? ¿<a href="https://www.intel.es">Intel</a> tiene que preocuparse por ARM? Yo creo que sí tiene que preocuparse por la convergencia en la que un procesador <a href="https://wccftech.com/apple-a9xipad-pro-benchmarks/">ARM no tardará mucho en tener suficiente capacidad</a> (y <a href="http://www.extremetech.com/mobile/221881-apples-a9x-goes-head-to-head-against-intels-core-m-in-arm-x86-grudge-match">II</a>) para tareas básicas de escritorio mucho más barato de fabricar y más eficiente energéticamente. Intel hoy lidera la fabricación de procesadores de escritorio, ARM el diseño de procesadores de dispositivos móviles, la disrupción será que los procesadores ARM serán capaces de adentrarse en el escritorio e incluso en los servidores. ¿Apple en algún momento fabricará un <a href="https://www.apple.com/macbook/">MacBook</a> con procesador ARM de los que ya incorpora personalizados en sus dispositivos móviles?</p>
<p>Los ordenadores de escritorio no se pueden transportar, los portátiles no pesan tanto siendo más manejables pero son incómodos y no acarreables en todo momento como los móviles por otro lado en los teléfonos inteligentes es incómodo escribir, copiar, pegar, trabajar con múltiples aplicaciones, navegar por internet y tiene una pantalla del alta resolución pero pequeña, digamos que hay una necesidad de unir ambos mundos que proporcione lo mejor de los dos. El ordenador de escritorio y portátiles de hoy serán irrelevantes salvo para algunos usuarios que requieran potencia extrema al igual que ocurre con las tarjetas gráficas dedicadas para jugadores exigentes, la convergencia hará que tengamos un único dispositivo para lo que hasta ahora utilizábamos varios para los casos de requerir mayor potencia surgirán dársenas o <em>docks</em> que proporcionen mayor capacidad gráfica y más opciones de conectividad. El <em>smartphone</em> sustituirá al ordenador de escritorio cuando podamos conectarlo a una pantalla externa junto con un teclado y ratón, el teléfono inteligente se convertirá en el dispositivo universal. El conector <a href="https://en.wikipedia.org/wiki/USB_Type-C">USB Type-C</a> ya podría proporcionar la conectividad necesaria con pantallas, teclado, ratón y más dispositivos.</p>
<p>Cuando la diferencia entre el ordenador de escritorio y el dispositivo móvil sea poco significativa la convergencia será una realidad, cada año está más cerca no hay más que ver que ya hoy hay móviles con 4GiB de memoria la misma que algunos ordenadores de escritorio y portátiles de gama mediana y baja. Solo falta saber quienes del mercado tecnológico se adaptarán, perecerán, surgirán, perderán su relevancia y cual será el primero en comercializar un producto convergente.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/intel.svg" width="300" height="200" alt="Intel" title="Intel"  class="lozad ">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/arm.svg" width="300" height="200" alt="ARM" title="ARM"  class="lozad "></p>
</figure>
</div>
<p>Intel lo tiene difícil, más <a href="https://www.anandtech.com/show/10288/intel-broxton-sofia-smartphone-socs-cancelled">con las recientes noticas del abandono de sus SoCs móviles</a>, ya que los procesadores ARM son más baratos de fabricar y consumen menos energía lo que los hace más adecuados para los dispositivos móviles, salvo que el histórico Intel se adapte perderá gran parte de su relevancia en el mundo del hardware de cómputo en la misma medida que ARM la gane. Los fabricantes que adaptan los diseños ARM explorarán nuevos campos de mercado que hasta ahora no les era posible acceder. Los mejor posicionados <a href="https://www.qualcomm.com/">Qualcomm</a>, <a href="https://www.samsung.com/es/">Samsung</a> y quizá Nvidia tenga más éxito con sus <a href="https://www.nvidia.es/object/tegra-es.html">procesadores ARM Tegra</a> y en menor medida <a href="https://www.nxp.com/">Freescale</a>, <a href="https://www.ti.com/">Texas Instruments</a>, <a href="https://www.broadcom.com/">Broadcom</a>, y puede que veamos a <a href="https://www.amd.com/es">AMD</a> fabricar de forma masiva procesadores con arquitectura ARM en detrimento de <em>x86-64</em>, &hellip;</p>
<p>Por otro lado, la convergencia requerirá de software que se adapte a cada caso de uso, como dispositivo móvil y teléfono y como ordenador de escritorio y pantallas grandes como la televisión. Microsoft ya ha dado muestras de que está trabajando en la convergencia y si es la primera en hacerla realidad de forma útil para los usuarios seguirá durante alguna década más con su práctico monopolio en el escritorio y ganar una cuota mucho mayor entre los dispositivos móviles que hoy aún se le atraganta en detrimento de Google y <a href="https://www.android.com/">Android</a> y Apple e <a href="https://www.apple.com/es/ios/ios-12/">iOS</a>. Google tiene las partes para iniciar la convergencia con Android en el ámbito móvil, por otro lado está <a href="https://www.chromium.org/chromium-os">Chromimum OS</a> incorporados en sus <a href="https://www.chromium.org/chromium-os">Chromebooks</a> en el ámbito de escritorio y si es capaz de juntar las piezas y no retrasarse frente a sus competidores puede mantener su amplia cuota de mercado en el ámbito móvil y ganarla en el escritorio desafiando la posición de Microsoft. De Apple aún no he oído noticias sobre la convergencia pero también tiene una buena posición con iOS por un lado y <a href="https://www.apple.com/macos/">Mac OS X</a> por el otro pero aunque se adelante a Microsoft y Google los precios de sus productos serán más elevados que lo que más tarde Google o Microsoft fabriquen y vendan con lo que hará que Microsoft no pierda su posición dominante si Google no se la cuestiona. Seguramente <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> irá detrás de la cresta de la ola, <a href="https://www.ubuntu.com/">Ubuntu</a> ya ha dado muestras de la convergencia y está desarrollando <a href="https://www.ubuntu.com/desktop/snappy">Snapy</a> pero probablemente llegue más o mucho más tarde que los actores anteriores.</p>
<p>Esta batalla tecnológica de la convergencia forjará el nuevo equilibrio de fuerzas que se mantendrán durante algún lustro o década en la que esperemos los usuarios seamos en gran parte beneficiados por nuevos productos con nuevas posibilidades a precios asequibles&hellip; hasta una nueva disrupción. Está por ver quienes pierden su posición dominante, quieres la ganan y que nuevos contendientes surgen en este nuevo mercado que transformará el existente. Finalmente, todo esto no es más que una elucubración pero una muy plausible y no lejana de lo que finalmente se produzca.</p>
]]>
        </content>
        
            
                <category term="apple"/>
            
                <category term="gnu-linux"/>
            
                <category term="microsoft"/>
            
                <category term="planeta-codigo"/>
            
                <category term="opinion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/moment-js-libreria-javascript-para-fechas/</id>
        <title>Moment.js, librería JavaScript para fechas</title>
        <updated>2016-06-05T17:00:00+02:00</updated>
        <published>2016-06-05T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/moment-js-libreria-javascript-para-fechas/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/javascript.svg" width="200" height="200" alt="JavaScript" title="JavaScript"  class=""></p>
</div>
<p>Hace un tiempo escribí una serie de artículos mostrando el uso de varias de la librerías de JavaScript, el primer artículo fue sobre una <a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-requirejs.html">introducción sobre RequireJS</a> hasta un <a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/">Ejemplo lista de tareas con Backbone y React</a> pasando por otra serie de herramientas útiles en una aplicación que tiene una parte importante en el navegador como:</p>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/introduccion-y-ejemplo-de-mustache.htmlf">Plantillas con Mustache</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/logging-en-javascript-con-log4javascript.html"><em>Logging</em> log4javascript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/capturar-errores-de-javascript.html">Capturar errores de JavaScript</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/introduccion-y-ejemplo-de-backbonejs.html">Modelos con Backbone</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/04/ejemplo-lista-de-tareas-con-backbone.html">Ejemplo de lista de tareas con Backbone, RESTEasy y Tapestry</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/05/ejemplo-de-pruebas-unitarias-en.html">Pruebas unitarias con Jasmine y Sinon</a></li>
<li>El mismo <a href="https://elblogdepicodev.blogspot.com.es/2013/08/ejemplo-lista-de-tareas-con-marionette.html">ejemplo de lista de tareas con Marionette</a></li>
<li>Una vez más el mismo <a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/">ejemplo de lista de tareas con Backbone y React</a> opción que me gustó más que con <a href="https://marionettejs.com/">Marionette</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/">Internacionalización (i18n) en JavaScript</a></li>
</ul>
<p>En este artículo comentaré otra librería de JavaScript que nos será de utilidad para el trabajo con datos de tipo fecha en el navegador, la librería es <a href="https://momentjs.com/">Moment.js</a>.</p>
<p>La librería Moment.js permite en el lado del cliente formatear fechas según un patrón, manipular fechas añadiendo o restando días, comparar fechas, hacer consultas como si es un año bisiesto o la fecha está usando una zona horaria de verano o según calendario, soporta diferentes lenguajes además de permitirnos trabajar con diferentes zonas horarias y periodos de tiempo. En la propia <a href="http://momentjs.com/">página de inicio del proyecto</a> y la <a href="http://momentjs.com/timezone/">sección de zonas horarias</a> están incluidos diferentes ejemplos de cada una de estas posibilidades. El la <a href="http://momentjs.com/docs/">documentación</a> están explicadas más detalladamente todas las opciones, como usarlo con <a href="https://requirejs.org/">Require.js</a> y el gestor de paquetes <a href="https://bower.io/">Bower</a> o con <a href="https://www.npmjs.com/">npm</a>.</p>
<p>En este artículo no incluiré un ejemplo de código ya que en la página de inicio del proyecto está muy bien explicado, la documentación parece bastante completa.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://momentjs.com/">Moment.js</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/</id>
        <title>Ofrecer contenido personalizado al usuario basado en su ubicación</title>
        <updated>2016-06-06T19:00:00+02:00</updated>
        <published>2016-06-03T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Cuando navegamos por internet el navegador envía mútiple información sobre nosotros y algunas páginas web recopilan esa información y la procesan para ofrecer contenido personalizado que creen nos resultaría de interés. Contenido con mayor relevancia para el usuario mejora la experiencia de usuario y la páginas web mejorarán su ratio de conversión y facturación. La información que proporcionamos sin ser conscientes son las <em>cookies</em>, la dirección IP, el navegador que usamos, el sistema operativo, nuestra resolución de pantalla, la hora a la que accedemos a la página, &hellip; en base a ella y aunque la información está impersonalizada sirve para identificarnos como inequivocamente usuarios. Con la dirección IP y usando una base de datos es posible obtener al menos el país desde el que se accede a una web y muy posiblemente la ciudad.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Un usuario cuando navega por internet proporciona diversa información que las páginas web pueden utilizar para personalizar el contenido que le muestran. La información que el usuario proporciona es el navegador que utiliza, sistema operativo y dirección IP. Con las <em>cookies</em> las páginas web pueden almacenar información en su navegador que persista en varias sesiones. Amazon por ejemplo personaliza el contenido que ve el usuario cuando accede a la página de inicio mostrando diferentes categorías de productos en los que puede estar más interesado, por ejemplo, productos visitados en anteriores sesiones, relacionados o similares. Si el usuario ha visitado un producto con anterioridad es muy posible que esté interesado en comprar ese producto con lo que Amazon se lo muestra de nuevo en la siguiente sesión o le envía un correo electrónico al día siguiente como recordatorio. Una página de eventos, viajes, hoteles, restaurantes, museos, el tiempo, &hellip; puede mostrar información basada en la localización, por ejemplo, si alguien está en Madrid quizá esté interesando dependiendo de la búsqueda que haga en eventos, hoteles o museos en esa ciudad.</p>
<p>En <a href="https://www.archlinux.org/">Arch Linux</a> al igual que en muchas otras distribuciones <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> hay unos comandos y unos paquetes que contienen una base de datos que en base a la dirección IP proporciona el país, ciudad, código postal y coordenadas geográficas de latitud y longitud, son <a href="https://www.archlinux.org/packages/extra/x86_64/geoip/">geoip</a> con información del país y <a href="https://www.archlinux.org/packages/extra/any/geoip-database-extra/">geoip-database-extra</a> para obtener información de la ciudad. La localización de un usuario también puede obtenerse usando una consulta que implique red de datos hacia algún servicio y si el usuario en su navegador lo permite proporcionar la información de su geoposicionamiento, la diferencia es que la petición que haga uso de red añade algo de latencia a la respuesta de la aplicación tampoco requieren pedir permisos al usuario para activar su geoposicionamiento. La información proporcionada por <em>geoip</em> quizá no sea tan exacta en todos los casos que los anteriores métodos pero más que suficiente en la mayoría. En caso de querer la mejor precisión se puede optar primeramente pedir al usuario que comparta su localizacion mediante el navegador, luego o en la primera petición hasta que el usuario comparta su posición por usar la base de datos de <em>geoip</em>, si esta no es exacta aunque seguramente proporcione al menos el país pero no proporciona la ciudad se puede optar por usar algún servicio que implique red.</p>
<p>Instalados los paquetes con las bases de datos de geoposicionamiento en la distribución GNU/Linux su uso desde la línea de comandos es el siguiente, indicando la dirección IP o nombre de dominio de la que queramos conocer su ubicación:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ geoiplookup 85.84.77.93&#10;</span></span><span class="line"><span class="cl">GeoIP Country Edition: ES, Spain&#10;</span></span><span class="line"><span class="cl">GeoIP City Edition, Rev 1: ES, N/A, N/A, N/A, N/A, 40.400002, -3.683300, 0, <span class="m">0</span>&#10;</span></span><span class="line"><span class="cl">GeoIP ASNum Edition: AS12338 Euskaltel S.A.</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>geoiplookup-85.84.77.93.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ geoiplookup 8.8.8.8&#10;</span></span><span class="line"><span class="cl">GeoIP Country Edition: US, United States&#10;</span></span><span class="line"><span class="cl">GeoIP City Edition, Rev 1: US, CA, California, Mountain View, 94040, 37.384499, -122.088097, 807, <span class="m">650</span>&#10;</span></span><span class="line"><span class="cl">GeoIP ASNum Edition: AS15169 Google Inc.</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>geoiplookup-8.8.8.8.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ geoiplookup marca.es&#10;</span></span><span class="line"><span class="cl">GeoIP Country Edition: ES, Spain&#10;</span></span><span class="line"><span class="cl">GeoIP City Edition, Rev 1: ES, 29, Madrid, Madrid, 28001, 40.416500, -3.702600, 0, <span class="m">0</span>&#10;</span></span><span class="line"><span class="cl">GeoIP ASNum Edition: AS9052 Unidad Editorial S.A.</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>geoiplookup-marca.es.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/images/geoiplookup_hu26c3461f4611fa2b2168c7ab64e1d942_22637_2560x1440_fit_box_3.png" data-gallery="" title="Comando para obtener información de geoposicionamiento en base a la dirección IP"><img src="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/images/geoiplookup_hu26c3461f4611fa2b2168c7ab64e1d942_22637_300x200_fit_box_3.png" width="300" height="167" alt="Comando para obtener información de geoposicionamiento en base a la dirección IP" title="Comando para obtener información de geoposicionamiento en base a la dirección IP"  class="lozad "></a></p>
<figcaption>Comando para obtener información de geoposicionamiento en base a la dirección IP</figcaption>
</figure>
</div>
<p>Otra opción es usar otra base de datos de geolocalización para direcciones IP, en vez de instalar un paquete en el sistema y usar el comando <code>geoiplookup</code> y procesar su salida con las bases de datos de <a href="http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz">MaxMind GeoLite2 para paises</a> y <a href="http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz">ciudades</a> dispondremos de una API accessible desde el lenguaje de programación que prefiramos. En este ejemplo usaré Java pero hay <em>bindings</em> para los lenguajes más populares.</p>
<p>Este sería el código para obtener la información de forma más sencilla que lanzar un proceso del sistema y <em>parsear</em> su resultado, además con GeoLite2 la aplicación no necesitará que el sistema tenga un paquete instalado y será más autocontenida. La base de datos de geolocalización se proporciona en un archivo que es posible distribuir con la aplicación.</p>
<p>En el siguiente ejemplo no incluyo la base de datos en el código fuente del proyecto ya que ocupa casi 65MiB. Descargada, descomprimida y ubicada en el directorio <em>src/main/resources</em> la aplicación se iniciar con el comando <code>./gradlew run</code>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javageolocation</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.net.InetAddress</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.maxmind.geoip2.DatabaseReader</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.maxmind.geoip2.model.CityResponse</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.maxmind.geoip2.record.City</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.maxmind.geoip2.record.Country</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.maxmind.geoip2.record.Location</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.maxmind.geoip2.record.Postal</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">com.maxmind.geoip2.record.Subdivision</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Acceder a la base de datos&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">database</span> <span class="o">=</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/GeoLite2-City.mmdb&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DatabaseReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DatabaseReader</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">database</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InetAddress</span> <span class="n">ip</span> <span class="o">=</span> <span class="n">InetAddress</span><span class="o">.</span><span class="na">getByName</span><span class="o">(</span><span class="s">&#34;85.84.77.93&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Hacer la búsqueda&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CityResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">city</span><span class="o">(</span><span class="n">ip</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// País&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Country</span> <span class="n">country</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getCountry</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;ISO Code: %s%n&#34;</span><span class="o">,</span> <span class="n">country</span><span class="o">.</span><span class="na">getIsoCode</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Country: %s%n&#34;</span><span class="o">,</span> <span class="n">country</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Country (zh-CN): %s%n&#34;</span><span class="o">,</span> <span class="n">country</span><span class="o">.</span><span class="na">getNames</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;zh-CN&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Subdivision</span> <span class="n">subdivision</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getMostSpecificSubdivision</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Subdivision Name: %s%n&#34;</span><span class="o">,</span> <span class="n">subdivision</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Subdivision ISO Code: %s%n&#34;</span><span class="o">,</span> <span class="n">subdivision</span><span class="o">.</span><span class="na">getIsoCode</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Ciudad&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">City</span> <span class="n">city</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getCity</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;City: %s%n&#34;</span><span class="o">,</span> <span class="n">city</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Código postal&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Postal</span> <span class="n">postal</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getPostal</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Postal Code: %s%n&#34;</span><span class="o">,</span> <span class="n">postal</span><span class="o">.</span><span class="na">getCode</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Geolocalizacion&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Location</span> <span class="n">location</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getLocation</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Latitude: %s%n&#34;</span><span class="o">,</span> <span class="n">location</span><span class="o">.</span><span class="na">getLatitude</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Longitude: %s%n&#34;</span><span class="o">,</span> <span class="n">location</span><span class="o">.</span><span class="na">getLongitude</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">description</span> <span class="o">=</span> <span class="s1">&#39;JavaGeolocation&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;0.1&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;eclipse&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;idea&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javageolocation.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;com.maxmind.geoip2:geoip2:2.7.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;org.slf4j:slf4j-api:1.7.21&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-api:2.5&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-slf4j-impl:2.5&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-core:2.5&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">wrapper</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Wrapper</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gradleVersion</span> <span class="o">=</span> <span class="s1">&#39;2.13&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/images/geolite2_hufe4ec61157395587d1773854416a9192_41684_2560x1440_fit_box_3.png" data-gallery="" title="Información de geoposicionamiento en base a la dirección IP con GeoLite2"><img src="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/images/geolite2_hufe4ec61157395587d1773854416a9192_41684_300x200_fit_box_3.png" width="300" height="168" alt="Información de geoposicionamiento en base a la dirección IP con GeoLite2" title="Información de geoposicionamiento en base a la dirección IP con GeoLite2"  class="lozad "></a></p>
<figcaption>Información de geoposicionamiento en base a la dirección IP con GeoLite2</figcaption>
</figure>
</div>
<p>GeoLite2 tiene una <a href="https://creativecommons.org/licenses/by-sa/4.0/">licencia Creative Commons Attribution-ShareAlike</a> y no tiene coste, MaxMind proporciona además otras bases de datos más completas pero con un coste, 50$ para la base de datos de paises más 24$ para las actualizaciones y 370$ para la base de datos de ciudades más 100$ para las actualizaciones.</p>
<p>En una aplicación web Java en la interfaz <a href="https://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html">ServletResquest</a> y con el método <a href="http:s//docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html#getRemoteAddr--">getRemoteAddr()</a> obtenemos la dirección IP del usuario, ya solo nos queda <a href="https://picodotdev.github.io/blog-bitix/2016/03/como-ejecutar-un-proceso-del-sistema-con-java/">lanzar un proceso del sistema desde Java</a> que invoque al comando <code>geoiplookup</code> con la dirección IP obtenida o usar la API Java u de otro lenguaje de MaxMind GeoLite2, obtener la salida del proceso, interpretarla y hacer con ella lo que queramos hacer en la aplicación. En una aplicación web adicionalmente somos libres de usar la <a href="https://en.wikipedia.org/wiki/W3C_Geolocation_API">API de geoposicionamiento</a> implementada en los navegadores.</p>
<p>Proporcionar contenido personalizado al usuario probablemente ayuda a mejorar la conversión de un sitio de comercio electrónico y la experiencia del usuario ofreciéndole productos o servicios en los que de alguna forma esté interesado ya sea como en este caso basado en su ubicación, pero como en el caso de Amazon según las visitas anteriores y en otros podría ser en base al sistema operativo o navegador como hace Google cuando accedemos a su buscador indicándonos que nos instalemos <a href="https://www.google.es/chrome/browser/desktop/">Chrome</a> si usamos <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaGeolocation/">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/como-ejecutar-un-proceso-del-sistema-con-java/">Lanzar proceso del sistema con Java</a></li>
<li><a href="https://en.wikipedia.org/wiki/Geolocation_software">Geolocation software</a></li>
<li><a href="https://en.wikipedia.org/wiki/W3C_Geolocation_API">W3C Geolocation API</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/</id>
        <title>Ejemplo sencillo de como crear un Excel o CSV en Java con Apache POI y OpenCSV</title>
        <updated>2018-10-26T13:00:00+02:00</updated>
        <published>2016-05-29T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los archivos Excel y separados por comas o CSV son muy utilizados como formato para intercambiar datos entre aplicaciones o como formato para exportar cantidades grandes de datos de una aplicación. Por su utilidad es probable que tarde o temprano surja en una aplicación la necesidad de crear archivos o exportar datos a estos formatos. Con la librería Apache POI se pueden crear Excel desde Java y con la librería OpenCSV exportar datos a archivos CSV con el formato correcto.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La librería <a href="https://poi.apache.org/">Apache POI</a> nos permite acceder y crear documentos del producto ofimático <a href="https://products.office.com/es-es/">Microsoft Office</a> utilizando el lenguaje de programación Java y otros del ecosistema de la <abbr title="Java Virtual Machine">JVM</abbr>. Los archivos que podemos crear y leer son documentos Word, Excel y Powerpoint.</p>
<p>En casi todas las aplicaciones hay necesidad de exportar los datos que maneja la aplicación a algún tipo de documento, un formato muy utilizado es el PDF sobre todo si el documento está destinado a imprimirse pero que no es el más adecuado si requiere modificaciones posteriores o contiene datos numéricos con cálculos. El formato de Excel también es muy utilizado por sus posibilidades para agrupar los datos, agregar, filtrar, hacer cálculos con funciones matemáticas, financieras o de otro tipo. Aunque si es posible es mejor utilizar un formato de documento abierto para no quitarle libertad al usuario para elegir el software que prefiera, el programa ofimático Microsoft Office sigue estando muy extendido con lo que puede que no tengamos otro remedio que utilizar como formato para exportar los datos uno propietario. En este artículo comentaré como crear un documento excel sencillo usando la librería Apache POI y el lenguaje Java.</p>
<p>Para trabajar con archivos <em>xls</em> de Excel debemos usar las clases <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFWorkbook.html">HSSFWorkbook</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFSheet.html">HSSFSheet</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFRow.html">HSSFRow</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFCell.html">HSSFCell</a> ofrecidas en la API de Apache PIO. Para crear el excel se crea una instancia de <em>HSSFWorkbook</em>, una o varias hojas que se corresponden con las instancias de <em>HSSFSheet</em> y en cada hoja se pueden acceder a las filas y celdas con <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFSheet.html#createRow%28int%29">createRow</a> en la hoja y con <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFRow.html#createCell%28int%29">createCell</a> en la fila. Con el método <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFCell.html#setCellValue%28java.lang.String%29">setCellValue</a> establecemos el valor de la celda, este método está sobrecargado y podemos establecer valores <em>boolean</em>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html">Calendar</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Date.html">Date</a>, <em>double</em>, <a href="https://poi.apache.org/apidocs/org/apache/poi/ss/usermodel/RichTextString.html">RichTextString</a> o <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html">String</a>. Hay otros métodos para cambiar los estilos de la celda con <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFCell.html#setCellStyle%28org.apache.poi.hssf.usermodel.HSSFCellStyle%29">setCellStyle</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFCell.html#setHyperlink%28org.apache.poi.ss.usermodel.Hyperlink%29">setHyperlink</a> para insertar un enlace o <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFCell.html#setCellFormula%28java.lang.String%29">setCellFormula</a> para crear una fórmula que realice algún cálculo con los datos de las celdas.</p>
<p>El siguiente ejemplo crea documento excel con varios datos, aplicando estilos a las cabeceras y una fórmula con el total de los precios de una lista de productos, al final escribe el excel en un archivo. En el archivo de construcción, en este caso de <a href="https://gradle.org/">Gradle</a>, debemos incluir la dependencia de la librería de Apache POI.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundoapachepoi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">DATA</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DATA</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;PlayStation 4 (PS4) - Consola 500GB&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;340.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/PlayStation-4-PS4-Consola-500GB/dp/B013U9CW8A&#34;</span> <span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Raspberry Pi 3 Modelo B (1,2 GHz Quad-core ARM Cortex-A53, 1GB RAM, USB 2.0)&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;41.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Raspberry-Modelo-GHz-Quad-core-Cortex-A53/dp/B01CD5VC92/&#34;</span> <span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Gigabyte Brix - Barebón (Intel, Core i5, 2,6 GHz, 6, 35 cm (2.5\&#34;), Serial ATA III, SO-DIMM) Negro &#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;421.36&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Gigabyte-Brix-Bareb%C3%B3n-Serial-SO-DIMM/dp/B00HFCTUPM/&#34;</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeExcel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readExcel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeCsv</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readCsv</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">writeExcel</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFWorkbook</span> <span class="n">workbook</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFWorkbook</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFSheet</span> <span class="n">sheet</span> <span class="o">=</span> <span class="n">workbook</span><span class="o">.</span><span class="na">createSheet</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">workbook</span><span class="o">.</span><span class="na">setSheetName</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="s">&#34;Hoja excel&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span><span class="o">[]</span> <span class="n">headers</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;Producto&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;Precio&#34;</span><span class="o">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s">&#34;Enlace&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CellStyle</span> <span class="n">headerStyle</span> <span class="o">=</span> <span class="n">workbook</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Font</span> <span class="n">font</span> <span class="o">=</span> <span class="n">workbook</span><span class="o">.</span><span class="na">createFont</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">font</span><span class="o">.</span><span class="na">setBold</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">headerStyle</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="n">font</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CellStyle</span> <span class="n">style</span> <span class="o">=</span> <span class="n">workbook</span><span class="o">.</span><span class="na">createCellStyle</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">style</span><span class="o">.</span><span class="na">setFillForegroundColor</span><span class="o">(</span><span class="n">IndexedColors</span><span class="o">.</span><span class="na">LIGHT_YELLOW</span><span class="o">.</span><span class="na">getIndex</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">style</span><span class="o">.</span><span class="na">setFillPattern</span><span class="o">(</span><span class="n">FillPatternType</span><span class="o">.</span><span class="na">SOLID_FOREGROUND</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFRow</span> <span class="n">headerRow</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">headers</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">header</span> <span class="o">=</span> <span class="n">headers</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFCell</span> <span class="n">cell</span> <span class="o">=</span> <span class="n">headerRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">cell</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">headerStyle</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">cell</span><span class="o">.</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">header</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">DATA</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFRow</span> <span class="n">dataRow</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Object</span><span class="o">[]</span> <span class="n">d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Object</span><span class="o">[])</span> <span class="n">DATA</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">product</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">price</span> <span class="o">=</span> <span class="o">(</span><span class="n">BigDecimal</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">link</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">dataRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">product</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">dataRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">price</span><span class="o">.</span><span class="na">doubleValue</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">dataRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">2</span><span class="o">).</span><span class="na">setCellValue</span><span class="o">(</span><span class="n">link</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFRow</span> <span class="n">dataRow</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">createRow</span><span class="o">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">DATA</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFCell</span> <span class="n">total</span> <span class="o">=</span> <span class="n">dataRow</span><span class="o">.</span><span class="na">createCell</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">total</span><span class="o">.</span><span class="na">setCellType</span><span class="o">(</span><span class="n">CellType</span><span class="o">.</span><span class="na">FORMULA</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">total</span><span class="o">.</span><span class="na">setCellStyle</span><span class="o">(</span><span class="n">style</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">total</span><span class="o">.</span><span class="na">setCellFormula</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;SUM(B2:B%d)&#34;</span><span class="o">,</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">DATA</span><span class="o">.</span><span class="na">size</span><span class="o">()));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">FileOutputStream</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="s">&#34;data.xls&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">workbook</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">file</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-excel.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.holamundoapachepoi.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;org.apache.poi:poi:4.0.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;com.opencsv:opencsv:4.3&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p><a href="https://www.libreoffice.org/">LibreOffice</a> tiene la capacidad de abrir documentos excel, en la siguiente imagen se ve el documento abierto con LibreOffice Calc creado en el ejemplo.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/images/libreoffice_hu99339aedf290de373601f1123cea27b1_73966_2560x1440_fit_box_3.png" data-gallery="" title="Excel generado con Apache POI abierto con LibreOffice"><img src="https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/images/libreoffice_hu99339aedf290de373601f1123cea27b1_73966_300x200_fit_box_3.png" width="278" height="200" alt="Excel generado con Apache POI abierto con LibreOffice" title="Excel generado con Apache POI abierto con LibreOffice"  class="lozad "></a></p>
<figcaption>Excel generado con Apache POI abierto con LibreOffice</figcaption>
</figure>
</div>
<p>Otro formato de datos muy utilizado es el de columnas separadas por comas o CSV. Con la librería <a href="http://opencsv.sourceforge.net/">OpenCSV</a> se pueden escribir archivos bien formados en este formato teniendo en cuenta el caracter separador de las columnas y el entrecomillado de los datos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundoapachepoi</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">DATA</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DATA</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;PlayStation 4 (PS4) - Consola 500GB&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;340.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/PlayStation-4-PS4-Consola-500GB/dp/B013U9CW8A&#34;</span> <span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Raspberry Pi 3 Modelo B (1,2 GHz Quad-core ARM Cortex-A53, 1GB RAM, USB 2.0)&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;41.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Raspberry-Modelo-GHz-Quad-core-Cortex-A53/dp/B01CD5VC92/&#34;</span> <span class="o">},</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Gigabyte Brix - Barebón (Intel, Core i5, 2,6 GHz, 6, 35 cm (2.5\&#34;), Serial ATA III, SO-DIMM) Negro &#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;421.36&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Gigabyte-Brix-Bareb%C3%B3n-Serial-SO-DIMM/dp/B00HFCTUPM/&#34;</span> <span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeExcel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readExcel</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeCsv</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readCsv</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">writeCsv</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CSVWriter</span> <span class="n">writer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CSVWriter</span><span class="o">(</span><span class="k">new</span> <span class="n">FileWriter</span><span class="o">(</span><span class="s">&#34;data.csv&#34;</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DATA</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">row</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Object</span><span class="o">[]</span> <span class="n">d</span> <span class="o">=</span> <span class="o">(</span><span class="n">Object</span><span class="o">[])</span> <span class="n">row</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">product</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">price</span> <span class="o">=</span> <span class="o">(</span><span class="n">BigDecimal</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">link</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span><span class="o">[]</span> <span class="n">line</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span> <span class="n">product</span><span class="o">,</span> <span class="n">price</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">link</span> <span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writer</span><span class="o">.</span><span class="na">writeNext</span><span class="o">(</span><span class="n">line</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-csv.java</span>
    </div>
</div>
<p>En la <a href="http://poi.apache.org/spreadsheet/quick-guide.html">guía de iniciación a las características de los documentos HSSF y XSSF</a> hay ejemplos pequeños sobre varias de las funcionalidades más comunes que necesitaremos al generar documentos. Otra funcionalidad relacionada con la escritura en el formato de estos tipos de archivos es la lectura que también es posible con estas mismas librerías, <a href="https://picodotdev.github.io/blog-bitix/2018/10/ejemplo-sencillo-de-como-leer-datos-de-un-archivo-excel-o-csv-en-java/">Ejemplo sencillo de cómo leer datos de un archivo Excel o CSV en Java</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoApachePOI/">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/">Ejemplo sencillo de como crear un documento PDF con Java y PDFBox</a></li>
<li><a href="http://poi.apache.org/spreadsheet/quick-guide.html">Busy Developers&rsquo; Guide to HSSF and XSSF Features</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/</id>
        <title>Incluir información de la versión en el artefacto distribuible con Gradle</title>
        <updated>2016-05-27T21:00:00+02:00</updated>
        <published>2016-05-27T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Tener trazabilidad entre el código fuente y el código que se está ejecutando en el entorno de producción es importante para saber cual es el origen de alguna excepción o error que se produzca. Con Gradle podemos conseguir esta trazabilidad haciendo unas pocas modificaciones al <em>script</em> de construcción.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gradle.svg" width="200" height="165" alt="Gradle" title="Gradle"  class=""></p>
</div>
<p>Toda aplicación en último término genera un artefacto destinado a ejecutarse en el entorno de producción o un entregable a su destinatario. En Java según el tipo de aplicación el artefacto es un archivo <em>jar</em> ejecutable, un archivo <em>war</em> si es una aplicación web, un archivo <em>zip</em> si proporcionamos el código fuente o la documentación en formato Javadoc de las clases del proyecto. Un aspecto importante que tarde o temprano nos interesará conocer es que versión de la aplicación y por tanto que código está desplegada en el entorno de producción. Con <a href="https://gradle.org/">Gradle</a> no es muy complicado añadir la suficiente información para conseguir esta trazabilidad.</p>
<p>La forma tradicional es dar un número de versión al proyecto, hay diferentes nomenclaturas dependiendo del grado de precisión que necesitemos, suele bastar versión mayor, versión menor, y corrección de errores, los tres números que se van incrementando. Si usamos <a href="https://jenkins.io/">Jenkins</a> para construir los artefactos nos puede interesar conocer el número de <em>build</em> que lo produjo o la fecha de creación. También nos puede interesar conocer el <em>hash</em> del último <em>commit</em> del código fuente del artefacto. Por otro lado puede que queramos que la aplicación nos informe de la versión que se está ejecutando ya que en algunas corporaciones el acceso al entorno de producción está restringido a sus administradores.</p>
<p>Para conseguir esta trazabilidad haremos dos modificaciones al archivo de construcción de Gradle, modificar el nombre del artefacto con el nombre de la <em>build</em> y el <em>hash</em> del <em>commit</em> e incluir en él un archivo <em>properties</em> con la información de la versión con el que la aplicación sea capaz de informar que versión es la que se está ejecutando. El <em>hash</em> del <em>commit</em> de <a href="https://git-scm.com/">Git</a> se obtiene con el comando <code>git log -n 1 --format=%h</code> ejecutando con las facilidades que proporciona <a href="https://www.groovy-lang.org/">Groovy</a>.</p>
<p>El nombre del artefacto se modifica con una clase cuyo método <em>toString()</em> proporciona la versión que podemos asignar a la propiedad <em>version</em> de la clase <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html">Project</a> definida con el archivo de construcción Gradle. Para proporcionar la información de la versión en la aplicación se incluye un archivo al construir el artefacto modificando la tarea <em>jar</em> y generando el archivo con la tarea <em>createBuildInfoFile</em>. Este es el archivo de construcción de Gradle y la clase que contiene la información de la versión que se coloca en el directorio <em>buildSrc</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.gradleversion.build.ProjectVersion</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;idea&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;eclipse&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">version</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProjectVersion</span><span class="o">(</span><span class="nl">major:</span> <span class="mi">1</span><span class="o">,</span> <span class="nl">minor:</span> <span class="mi">0</span><span class="o">,</span> <span class="nl">build:</span> <span class="n">System</span><span class="o">.</span><span class="na">env</span><span class="o">.</span><span class="na">BUILD_NUMBER</span><span class="o">,</span> <span class="nl">hash:</span> <span class="s2">&#34;git log -n 1 --format=%h&#34;</span><span class="o">.</span><span class="na">execute</span><span class="o">().</span><span class="na">text</span><span class="o">.</span><span class="na">trim</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.gradleversion.Main&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">repositories</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">dependencies</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;org.slf4j:slf4j-api:1.7.21&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-api:2.5&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-slf4j-impl:2.5&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-core:2.5&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="nf">wrapper</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Wrapper</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gradleVersion</span> <span class="o">=</span> <span class="s1">&#39;2.13&#39;</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">task</span> <span class="n">createBuildInfoFile</span> <span class="o">&lt;&lt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="s2">&#34;$buildDir/build-info.properties&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Properties</span> <span class="n">props</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">props</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="s1">&#39;version&#39;</span><span class="o">,</span> <span class="n">project</span><span class="o">.</span><span class="na">version</span><span class="o">.</span><span class="na">toString</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">props</span><span class="o">.</span><span class="na">setProperty</span><span class="o">(</span><span class="s1">&#39;timestamp&#39;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Date</span><span class="o">().</span><span class="na">toString</span><span class="o">())</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">props</span><span class="o">.</span><span class="na">store</span><span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">newWriter</span><span class="o">(),</span> <span class="kc">null</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">jar</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">dependsOn</span> <span class="n">createBuildInfoFile</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">manifest</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">attributes</span> <span class="s1">&#39;Main-Class&#39;</span><span class="o">:</span> <span class="n">project</span><span class="o">.</span><span class="na">mainClassName</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">from</span><span class="o">(</span><span class="n">buildDir</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">include</span> <span class="s1">&#39;build-info.properties&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="kn">package</span> <span class="n">io</span><span class="o">.</span><span class="na">github</span><span class="o">.</span><span class="na">picodotdev</span><span class="o">.</span><span class="na">blogbitix</span><span class="o">.</span><span class="na">gradleversion</span><span class="o">.</span><span class="na">build</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">class</span> <span class="nc">ProjectVersion</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">major</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">minor</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">build</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">hash</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">strings</span> <span class="o">=</span> <span class="o">[]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">major</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">major</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">minor</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">minor</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">build</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s2">&#34;b$build&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">hash</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">hash</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">strings</span><span class="o">.</span><span class="na">join</span><span class="o">(</span><span class="s1">&#39;.&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProjectVersion.groovy</span>
    </div>
</div>
<p>En el caso de un artefacto <em>jar</em> Gradle lo genera en <em>build/libs/GradleVersion-1.0.b42.fea4d2f.jar</em>. Ejecutando el <em>jar</em> con <code>java -jar build/libs/GradleVersion-1.0.b42.77c083e.jar</code> cuya clase con el método <em>main</em> informa de la versión leyendo el archivo <em>properties</em> incluído en el <em>jar</em> obtenemos la siguiente salida en la terminal.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.gradleversion</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Properties</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Properties</span> <span class="n">properties</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Properties</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/build-info.properties&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">is</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">properties</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">version</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;version&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">timestamp</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&#34;timestamp&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Versión: %s%n&#34;</span><span class="o">,</span> <span class="n">version</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Timestamp: %s%n&#34;</span><span class="o">,</span> <span class="n">timestamp</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/images/gradle-version_hu820fef011e5609bd46449ae4987fa388_94763_2560x1440_fit_box_3.png" data-gallery="" title="Artefacto distribuible con información de versión"><img src="https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/images/gradle-version_hu820fef011e5609bd46449ae4987fa388_94763_300x200_fit_box_3.png" width="275" height="200" alt="Artefacto distribuible con información de versión" title="Artefacto distribuible con información de versión"  class="lozad "></a></p>
</figure>
</div>
<p>En este caso el artefacto que he usado ha sido un archivo <em>jar</em> si se tratase de una aplicación web y de un archivo <em>war</em> en el archivo de construcción de Grade se puede aplicar esto de forma similar. La aplicación podría devolver la versión como una cabecera <abbr title="HyperText Transfer Protocol">HTTP</abbr> o el en código fuente de <abbr title="HyperText Markup Language">HTML</abbr> como un comentario que genere sus páginas web.</p>
<p>El libro <a href="https://amzn.to/2tzDFla">Gradle in Action</a> proporciona una aplicación más detallada de muchos conceptos de Gradle, otro buen punto de partida es la propia <a href="https://docs.gradle.org/current/userguide/userguide.html">documentación de Gradle</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617291307&amp;linkId=47801f62b1166dbad13b7f366c836d35" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GradleVersion/">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>export BUILD_NUMBER=42 &amp;&amp; ./gradlew build</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html">Herramienta de construcción Gradle</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/04/usar-gradle-mediante-gradle-wrapper.html">Usar Gradle mediante Gradle wrapper</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/">Ejemplo de multiproyecto con Gradle</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/</id>
        <title>4 opciones ofimáticas alternativas gratuitas a Microsoft Office</title>
        <updated>2019-11-22T18:00:00+01:00</updated>
        <published>2016-05-20T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Office es la suite ofimática de Microsoft con un margen de diferencia en la cuota de uso muy amplio sobre la siguiente opción en los sistemas con Windows. Es muy completa que incluye más funciones incluso que la mayoría de usuarios conoce o necesita pero también es una opción más cara que otras alternativas que incluso llegan a ser gratuitas sin tener nada que envidiarle para la mayoría de usuarios y casos de uso.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/microsoft.svg" width="200" height="200" alt="Microsoft" title="Microsoft"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/libreoffice.svg" width="300" height="58" alt="LibreOffice" title="LibreOffice"  class=""></p>
</div>
<p>En el primer artículo de este 2016 comentaba que <a href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/">Windows y Office aún siguen siendo fáciles de usar sin licencia</a>. Licencia que cuesta nada más ni nada menos que unos 125 € para el <a href="https://amzn.to/3cb4v74">hogar y estudiantes</a> y unos 250 € para <a href="https://amzn.to/3sc4aqv">hogar y empresas</a>, por equipo. Y si el equipo se renueva o estropea requiriendo cambiar algunos componentes debe adquirirse una nueva licencia. Dado el coste nada despreciable de la licencia no es de extrañar que tanto Windows como Office sean unos de los productos más usados sin licencia o pirateados.</p>
<p>Dada lo fácil que es usar Windows y Office sin licencia junto con el <a href="https://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.html">impuesto Windows</a> hacen que tengan una cuota de mercado en números prácticamente de monopolio ni hay muestras de que vaya a cambiar a corto plazo. A veces pienso que <a href="https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/">a Microsoft no le importa que uses Windows u Office sin licencia</a> para uso personal. Sin embargo, hay alternativas tanto para Windows como para Office que tienen poco que envidiarle, mucho más baratas o incluso gratuitas y de software libre incluso con un soporte mejor que el que ofrece <a href="https://www.microsoft.com/">Microsoft</a> para su propio software. Lo que no es recomendables usar activadores por ser una fuente de virús informáticos o de troyanos es mejor <a href="https://picodotdev.github.io/blog-bitix/2020/09/como-comprar-una-licencia-y-activar-windows-10-y-office-2019/">comprar una licencia barata de Windows 10 y Microsoft Office</a>.</p>
<ul>
<li><a href="https://amzn.to/333Df5X">Licencia de Windows 10 Home</a> en Amazon.</li>
<li><a href="https://amzn.to/3iZ4dBk">Licencia de Windows 10 Pro</a> en Amazon.</li>
<li><a href="https://amzn.to/369oJfc">Licencia de Microsoft Office 2019</a> en Amazon.</li>
<li><a href="https://www.ebay.es/sch/i.html?_from=R40&amp;_trksid=p2334524.m570.l1313&amp;_nkw=windows&#43;10&#43;home&#43;key&#43;64&#43;bits&amp;_sacat=0&amp;LH_TitleDesc=0&amp;_sop=2&amp;_osacat=0&amp;_odkw=windows&#43;10&#43;home&#43;key&#43;64">Licencia de Windows 10 Home</a> en eBay.</li>
<li><a href="https://www.ebay.es/sch/i.html?_from=R40&amp;_trksid=p2334524.m570.l1313&amp;_nkw=windows&#43;10&#43;professional&#43;digital&#43;key&#43;64&#43;bits&amp;_sacat=0&amp;LH_TitleDesc=0&amp;_sop=2&amp;_osacat=0&amp;_odkw=windows&#43;10&#43;pro&#43;digital&#43;key&#43;64&#43;bits">Licencia de Windows 10 Pro</a> en eBay.</li>
<li><a href="https://www.ebay.es/sch/i.html?_from=R40&amp;_trksid=p2334524.m570.l1313&amp;_nkw=microsoft&#43;office&#43;2019&#43;&#43;key&amp;_sacat=0&amp;LH_TitleDesc=0&amp;_sop=2&amp;_osacat=0&amp;_odkw=microsoft&#43;office&#43;2019&#43;pro&#43;key">Licencia de Microsoft Office 2019</a> en eBay.</li>
</ul>
<p>Las alternativas a Windows son los caros productos de <a href="https://www.apple.com/">Apple</a> muy orientados a gamas altas sobre todo por el precio o alguna de las muchas distribuciones <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> que son prácticamente en su totalidad gratuitas y de software libre, aunque el software libre no tiene por que ser gratuito en la mayoría de los casos lo es.</p>
<p>En este artículo me centraré más en las alternativas a Office que también son varias. Obviando el tema del software libre, Office es una buena y completa suite ofimática con más opciones de la que muchos usuarios necesitarán.</p>
<h3 id="microsoft-office">Microsoft Office</h3>
<p>Microsoft Office incluye Word como procesador de textos, Powerpoint para presentaciones, Excel para hojas de cálculo, Access para bases de datos, Outlook como cliente de correo electrónico, OneNote para tomar notas o Publisher para publicaciones. Solo está disponible para Windows y Mac para el escritorio, y las versiones web para estos y otros sistemas. <a href="https://www.microsoft.com/es-es/microsoft-365/explore-microsoft-365-for-home">Office 365</a> tiene un coste alrededor de 8,80 € por usuario y mes según el plan que incluye más o menos aplicaciones.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/microsoft-office-word_hued8ef3b72921858644a854c3b1324ffa_40429_2560x1440_fit_box_3.png" data-gallery="" title="Microsoft Office Word"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/microsoft-office-word_hued8ef3b72921858644a854c3b1324ffa_40429_200x150_fit_box_3.png" width="200" height="110" alt="Microsoft Office Word" title="Microsoft Office Word"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/microsoft-office-excel_hu39f0ca1f7066a4bb750b82543f03fc4a_58994_2560x1440_fit_box_3.png" data-gallery="" title="Microsoft Office Excel"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/microsoft-office-excel_hu39f0ca1f7066a4bb750b82543f03fc4a_58994_200x150_fit_box_3.png" width="200" height="111" alt="Microsoft Office Excel" title="Microsoft Office Excel"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/microsoft-office-powerpoint_hu2816baad2ecd1c1a3ea7883c966833fa_53636_2560x1440_fit_box_3.png" data-gallery="" title="Microsoft Office Powerpoint"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/microsoft-office-powerpoint_hu2816baad2ecd1c1a3ea7883c966833fa_53636_200x150_fit_box_3.png" width="200" height="111" alt="Microsoft Office Powerpoint" title="Microsoft Office Powerpoint"  class="lozad "></a></p>
<figcaption>Microsoft Office</figcaption>
</figure>
</div>
<h3 id="libreoffice">LibreOffice</h3>
<p>La alternativa libre y gratuita equivalente de Office es <a href="https://www.libreoffice.org/">LibreOffice</a>. Incluye un editor de textos con Writer, hojas de cálculo con Calc, presentaciones con Impress, Draw para crear gráficos y Base para bases de datos sencillas. Sin embargo, la interfaz es el similar al de Office en las ediciones anteriores a la incorporación de <em>ribbon</em> con una estética sin la sensación de estar cuidada. Los menús son largos y encontrar un opción entre las muchas disponibles no es sencillo, al abrir una opción de menú uno se puede sentir intimidado por la longitud del mismo y es algo más difícil encontrar rápidamente la opción buscada entre todas las mostradas. Habrá usuarios que prefieran la interfaz de menús y barras de herramientas, yo soy de los que les gusta más <em>ribbon</em>. Está disponible para Windows, Linux y Mac.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/libreoffice-writer_hu9cba1ad2385911d1b9b85745ef14d342_66983_2560x1440_fit_box_3.png" data-gallery="" title="LibreOffice Writer"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/libreoffice-writer_hu9cba1ad2385911d1b9b85745ef14d342_66983_200x150_fit_box_3.png" width="200" height="112" alt="LibreOffice Writer" title="LibreOffice Writer"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/libreoffice-calc_hudca12bc47e9281c5e1a1d5ed7f4e8975_80819_2560x1440_fit_box_3.png" data-gallery="" title="LibreOffice Calc"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/libreoffice-calc_hudca12bc47e9281c5e1a1d5ed7f4e8975_80819_200x150_fit_box_3.png" width="200" height="102" alt="LibreOffice Calc" title="LibreOffice Calc"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/libreoffice-impress_hu9dd7b9ba5c5111503976899ed8e24a14_89813_2560x1440_fit_box_3.png" data-gallery="" title="LibreOffice Impress"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/libreoffice-impress_hu9dd7b9ba5c5111503976899ed8e24a14_89813_200x150_fit_box_3.png" width="200" height="107" alt="LibreOffice Impress" title="LibreOffice Impress"  class="lozad "></a></p>
<figcaption>LibreOffice</figcaption>
</figure>
</div>
<h3 id="wps-office">WPS Office</h3>
<p>Si nos gusta más la interfaz <em>ribbon</em> sin menús con multitud de opciones y que esté más cuidada en cuanto a diseño que LibreOffice similar a la usada en Microsoft Office, <a href="https://www.wps.com/">WPS Office</a> es una opción muy a tener en cuenta, también puede activarse en modo clásico con menús y barras de herramientas soportando editar varios documentos en tabuladores. Ofrece únicamente los programas básicos de una suite ofimática: editor de textos, hojas de cálculo y presentaciones. Para un uso personal es gratuita con algunas limitaciones al imprimir y exportar documentos a formato PDF pero más que suficiente aún sin todas las opciones solo disponibles en la opción de pago.</p>
<p>Para el ámbito empresarial o con todas sus opciones su licencia tiene un coste mucho más razonable que el de Microsoft Office, 45 € para una licencia de un año y 80 € para la licencia de por vida por usuario.</p>
<p>Está disponible para Windows (XP, Vista, 7, 8, 10) incluso en versiones para los que ni Microsoft Office ya ofrece soporte, Linux, Android e iOS. Su instalador ocupa únicamente unos 80 MiB contra los más de 3 GiB de Office.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/wpsoffice-writer_hu764b11800dd8ab25b46e98956e24c767_87448_2560x1440_fit_box_3.png" data-gallery="" title="WPS Office"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/wpsoffice-writer_hu764b11800dd8ab25b46e98956e24c767_87448_200x150_fit_box_3.png" width="200" height="115" alt="WPS Office" title="WPS Office"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/wpsoffice-spreadsheets_hu300b88b9ee13dcb8049307c6cb78e238_98971_2560x1440_fit_box_3.png" data-gallery="" title="WPS Office"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/wpsoffice-spreadsheets_hu300b88b9ee13dcb8049307c6cb78e238_98971_200x150_fit_box_3.png" width="200" height="105" alt="WPS Office" title="WPS Office"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/wpsoffice-presentation_hub75d47bbe5410f6dfa02f671f9594f61_96057_2560x1440_fit_box_3.png" data-gallery="" title="WPS Office"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/wpsoffice-presentation_hub75d47bbe5410f6dfa02f671f9594f61_96057_200x150_fit_box_3.png" width="200" height="119" alt="WPS Office" title="WPS Office"  class="lozad "></a></p>
<figcaption>WPS Office</figcaption>
</figure>
</div>
<h3 id="google-docs">Google Docs</h3>
<p>Another alternative to Office is <a href="https://www.google.es/intl/es/docs/about/">Google Docs</a>, it does not have all the options that Office has, but for most users it is enough. It is enough to have a Google account to use it, which includes a text editor, spreadsheet, presentation editor and the possibility of creating forms. It runs in the browser, the documents are saved in the Google cloud in the space associated with the account with which it is accessed and although it is possible to work without an internet connection at specific times it is required. By storing the documents in the cloud, we will not lose them if our equipment breaks down, we will be able to access the documents from any of our devices such as a smartphone, edit the same document with two or more people simultaneously or share the documents with other people. . Another advantage due to the fact that it is cloud-based, no software updates are necessary except for the browser. The counterpart of the advantages of storing documents in the cloud is the loss of privacy, Google has the documents and can access them.</p>
<p>For companies, it is offered at a price of € 4 per user per month that includes the Gmail email client, calendars, video calls and 30 GB of storage. It will be € 8 with more storage and retention options for messages.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/googledocs-documento_hu135c38afbabef8694e3240bb2db17fb8_55051_2560x1440_fit_box_3.png" data-gallery="" title="Google Docs"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/googledocs-documento_hu135c38afbabef8694e3240bb2db17fb8_55051_200x150_fit_box_3.png" width="200" height="127" alt="Google Docs" title="Google Docs"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/googledocs-hoja-de-calculo_hu634845f4752449e9466b0f15924fb435_60785_2560x1440_fit_box_3.png" data-gallery="" title="Google Docs"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/googledocs-hoja-de-calculo_hu634845f4752449e9466b0f15924fb435_60785_200x150_fit_box_3.png" width="200" height="127" alt="Google Docs" title="Google Docs"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/googledocs-presentacion_hu223a0e001f4a346baf50abb12abe82ea_84650_2560x1440_fit_box_3.png" data-gallery="" title="Google Docs"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/googledocs-presentacion_hu223a0e001f4a346baf50abb12abe82ea_84650_200x150_fit_box_3.png" width="200" height="127" alt="Google Docs" title="Google Docs"  class="lozad "></a></p>
<figcaption>Google Docs</figcaption>
</figure>
</div>
<h3 id="onlyoffice">OnlyOffice</h3>
<p><a href="https://www.onlyoffice.com/es/">OnlyOffice</a> ofrece también un paquete ofimático básico que se compone de documentos, hojas de cálculo y presentaciones. Tiene una aplicación de escritorio para los principales sistemas operativos y también se puede ejecutar en una nube propia hospedada con <a href="https://nextcloud.com/">Nextcloud</a> conservando la propiedad de los documentos y sin el inconveniente de pérdida de privacidad de Google Docs. Son aplicaciones sin todas las opciones que ofrecen Microsoft Office o LibreOffice pero para un uso básico suficiente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/onlyoffice-documentos_hu5c09b13a1cf720455c6988c5abbc2b8b_64552_2560x1440_fit_box_3.png" data-gallery="" title="OnlyOffice Documentos"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/onlyoffice-documentos_hu5c09b13a1cf720455c6988c5abbc2b8b_64552_200x150_fit_box_3.png" width="200" height="121" alt="OnlyOffice Documentos" title="OnlyOffice Documentos"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/onlyoffice-hojas-de-calculo_hu0c3d99c9233fa37ff218116983367b96_64612_2560x1440_fit_box_3.png" data-gallery="" title="OnlyOffice Hojas de cálculo"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/onlyoffice-hojas-de-calculo_hu0c3d99c9233fa37ff218116983367b96_64612_200x150_fit_box_3.png" width="200" height="121" alt="OnlyOffice Hojas de cálculo" title="OnlyOffice Hojas de cálculo"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/onlyoffice-presentaciones_hu895c492b74f8884e6ca1145603e19f25_69031_2560x1440_fit_box_3.png" data-gallery="" title="OnlyOffice Presentaciones"><img src="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/images/onlyoffice-presentaciones_hu895c492b74f8884e6ca1145603e19f25_69031_200x150_fit_box_3.png" width="200" height="121" alt="OnlyOffice Presentaciones" title="OnlyOffice Presentaciones"  class="lozad "></a></p>
<figcaption>OnlyOffice</figcaption>
</figure>
</div>
<h3 id="otras-alternativas">Otras alternativas</h3>
<p>Alguna otra opción que merece ser comentada es <a href="https://www.calligra.org/">Calligra</a> la <em>suite</em> del <a href="https://www.kde.org/">entorno de escritorio KDE</a>, <a href="https://www.abisource.com/">Abiword</a>, <a href="https://www.lyx.org/">Lyx</a> o <a href="http://www.gnumeric.org/">Gnumeric</a>.</p>
<p>La próxima vez que me pidan reinstalar Windows u Office en vez de instalar la suite ofimática de Microsoft sin licencia creo que instalaré la opción para uso personal de WPS Office, recomendaré usar Google Docs, OnlyOffice o LibreOffice que espero mejore y actualice a los tiempos modernos su interfaz cuando tenga que instalarlo.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/">A Microsoft no le importa que uses Windows u Office sin licencia</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/">Windows 10 y Office 2016 tan fáciles de usar sin licencia como siempre</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.html">El impuesto Windows</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="microsoft"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/la-clase-threadlocal-de-java-y-usos-practicos/</id>
        <title>La clase ThreadLocal de Java y usos prácticos</title>
        <updated>2016-05-14T13:00:00+02:00</updated>
        <published>2016-05-13T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/la-clase-threadlocal-de-java-y-usos-practicos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En Java existe una clase con la que podemos asociar un dato al hilo o <em>thread</em> que ejecuta el código. Podemos usar esta clase para evitar incluir en cada método el parámetro de ese dato si es usado en multitud de métodos simplificando en gran medida el código. En las aplicaciones web este dato puede ser el usuario que se ha autenticado, el dominio por el que se ha accedido a la aplicación, el dispositivo móvil, el idioma del usuario o cualquier otra información que queramos esté disponible de forma global en el hilo de ejecución.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En algunos casos nos encontramos con que un determinado dato lo pasamos como parámetro en sucesivas llamadas a métodos, obligándonos a declararlo en cada uno de ellos. En una aplicación web el dato podría ser el usuario autenticado, el dominio por el que se ha accedido a la aplicación, el dispositivo móvil, el idioma del usuario, su preferencia de divisa o cualquier otra información no relativa al usuario pero que igualmente la aplicación necesita en muchos sitios y usa esta información contextual para variar su funcionalidad. En una aplicación web podemos obtener el dominio por el que es accedido la aplicación con la clase <a href="https://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html">Request</a>, asociando el dato como un atributo de la petición lo tendremos disponible de forma global en la capa de presentación. Sin embargo, este objeto <em>request</em> solo estará disponible en la capa de presentación de la aplicación con la intención de que la capa de lógica de negocio sea independiente de la tecnología o <em>framework</em> web. Para hacer que algún dato global también esté disponible en la capa de lógica de negocio podemos usar la clase <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html">ThreadLocal</a>.</p>
<p>La clase <em>ThreadLocal</em> básicamente asocia un dato con el <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html">Thread</a> que ejecuta el código, teniendo una variable global en la aplicación con la referencia a la clase <em>ThreadLocal</em> podemos acceder al dato desde cualquier punto de la aplicación. Si necesitásemos varios datos tendríamos varias instancias globales de <em>ThreadLocal</em>.</p>
<p>Las variables globales es algo a evitar pero para algunos datos podemos hacer una excepción ya que entendemos que las ventajas son mayores que las desventajas, uno de los mayores peligros de las variables globales es la concurrencia si varios hilos modifican el dato global, como el dato asociado a <em>ThreadLocal</em> es local al hilo no hay peligro, simplemente deberemos asegurarnos de que una vez el hilo de ejecución termine limpiar el dato para que la siguiente petición en una aplicación web que procese ese hilo no use una dato anterior de otra petición.</p>
<p>La clase <em>ThreadLocal</em> es bastante simple tiene un método para establecer el dato con <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#set-T-">set</a>, para obtenerlo con <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#get--"><em>get</em></a>, para eliminarlo con <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#remove--"><em>remove</em></a> y desde Java 8 para establecer el valor inicial con una interfaz funcional <a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Supplier.html">Supplier</a> con el método <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#withInitial-java.util.function.Supplier-">withInitial</a>.</p>
<p>Veamos un ejemplo en el que crearemos un filtro que detecte el dominio por el que se accede a la aplicación y lo deje disponible en una variable <em>ThreadLocal</em> de modo que la aplicación lo tenga disponible desde cualquier capa de la aplicación. Primero crearemos una clase con variables estáticas globales que contendrá la referencia a la instancia <em>ThreadLocal</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.misc</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Globals</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">ThreadLocal</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">HOST</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HOST</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ThreadLocal</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Globals.java</span>
    </div>
</div>
<p>A continuación el filtro que obtiene el dominio de la <em>request</em> y lo deja en el <em>ThreadLocal</em> de forma global. Al usar una clase <em>ThreadLocal</em> es importante limpiar el dato correctamente, en este caso usando un bloque <em>try</em> con su <em>finally</em> para que aunque se produzca una excepción el dato acabe desasociado del <em>thread</em> al finalizar la petición, de lo contrario tendremos una fuga de memoria.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.misc</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">javax.servlet.*</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppFilter</span> <span class="kd">implements</span> <span class="n">Filter</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="n">FilterConfig</span> <span class="n">filterConfig</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">ServletException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">doFilter</span><span class="o">(</span><span class="n">ServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">ServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">FilterChain</span> <span class="n">chain</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ServletException</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Globals</span><span class="o">.</span><span class="na">HOST</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getServerName</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">chain</span><span class="o">.</span><span class="na">doFilter</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Globals</span><span class="o">.</span><span class="na">HOST</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">destroy</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppFilter.java</span>
    </div>
</div>
<p>Finalmente, podemos acceder al dato desde cualquier punto de la aplicación, en este caso desde la capa de presentación en la página <em>Index</em> de una aplicación usando <a href="https://tapestry.apache.org/">Apache Tapestry</a> y desde la capa de lógica de negocio o servicios que es independiente de la capa de presentación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.pages</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Index</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">setupRender</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="c1">// ThreadLocal example&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Host (from page): %s%n&#34;</span><span class="o">,</span> <span class="n">Globals</span><span class="o">.</span><span class="na">HOST</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		&#10;</span></span><span class="line"><span class="cl">	<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.services.dao</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultJooqProductoDAO</span> <span class="kd">implements</span> <span class="n">GenericDAO</span><span class="o">&lt;</span><span class="n">Producto</span><span class="o">&gt;,</span> <span class="n">JooqProductoDAO</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Transactional</span><span class="o">(</span><span class="n">readOnly</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Producto</span> <span class="nf">findById</span><span class="o">(</span><span class="n">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// ThreadLocal example&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Host (from service): %s%n&#34;</span><span class="o">,</span> <span class="n">Globals</span><span class="o">.</span><span class="na">HOST</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">context</span><span class="o">.</span><span class="na">selectFrom</span><span class="o">(</span><span class="n">PRODUCTO</span><span class="o">).</span><span class="na">where</span><span class="o">(</span><span class="n">PRODUCTO</span><span class="o">.</span><span class="na">ID</span><span class="o">.</span><span class="na">eq</span><span class="o">(</span><span class="n">id</span><span class="o">)).</span><span class="na">fetchOneInto</span><span class="o">(</span><span class="n">Producto</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultJooqProductoDAO.java</span>
    </div>
</div>
<p>Con el filtro y las anteriores clases en la consola se imprimirán los mensajes con el dominio por el que ha sido accedida la aplicación, en este caso <em>localhost</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Host (from page): localhost&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">Host (from service): localhost</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En definitiva, en ciertos casos el uso selectivo de <em>ThreadLocal</em> simplifica el código evitando incluir un parámetro en multitud de métodos y si el dato ha de recuperarse de la base de datos evita realizar la misma consulta varias veces haciendo el programa más eficiente.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry/">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://dzone.com/articles/alternatives-to-global-variables">Alternatives to Global Variables </a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/que-es-el-concepto-de-heap-pollution-en-java/</id>
        <title>Qué es el concepto de Heap Pollution en Java</title>
        <updated>2016-05-14T13:15:00+02:00</updated>
        <published>2016-05-07T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/que-es-el-concepto-de-heap-pollution-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Al trabajar con referencias de tipos genéricos, <em>raw</em> y arrays debemos conocer el concepto de <em>Heap Pollution</em> si no queremos que en algún punto del programa Java se produzca una excepción no esperada del tipo <em>ClassCastException</em>. No teniéndolo en cuenta nos encontraremos con un error de los más difíciles de depurar ya que la excepción solo nos dirá donde se produjo no donde se encuentra el código erróneo que lo provocó.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La introducción de los <a href="https://picodotdev.github.io/blog-bitix/2016/04/tutorial-sobre-los-tipos-genericos-de-java/">tipos genéricos al lenguaje Java</a> en la versión 5 hizo posible que pudiesemos parametrizar los tipos y que el compilador hiciese validaciones sobre ellos, también se permitieron eliminar muchos <em>cast</em> que hasta entonces eran necesarios al usar el <em>framework</em> de colecciones. Los tipos genéricos permiten evitar errores en tiempo de compilación, al mismo tiempo la eliminación de los <em>cast</em> hace el código más legible y más fácilmente refactorizable. Sin embargo, para mantener la compatibilidad con versiones anteriores se optó por hacer algunos sacrificios en la implementación de genéricos en pos de otros beneficios. Una situación potencialmente problemática es el denominado <a href="https://en.wikipedia.org/wiki/Heap_pollution">Heap Pollution</a>.</p>
<p>El concepto de <em>Heap Pollution</em> consiste de forma breve (quizá inexacta) en que un tipo genérico contiene un objeto con un tipo que no le corresponde según su tipo genérico, con un ejemplo, que una lista del tipo <em>List&lt;String&gt;</em> contenga un <em>Number</em> entre sus elementos. Que un tipo genérico pueda contener un objeto que no sea de su tipo genérico es detectado en tiempo de compilación con los <em>unchecked warning</em> pero bajo algunas circunstancias se produce en tiempo de ejecución una excepción de tipo <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ClassCastException.html">ClassCastException</a>, si ignoramos las advertencias y nuestro código no es cuidadoso. Esto es posible porque en Java el tipado de los genéricos sólo está disponible en tiempo de compilación lo que significa que no son <em>reified</em>, el tipado genérico no está disponible en tiempo de ejecución como consecuencia del <a href="https://picodotdev.github.io/blog-bitix/2018/03/que-es-y-como-funciona-el-type-erasure-en-java/">proceso conocido como <em>type erasure</em></a>, al trabajar con referencias de tipo <em>raw</em> y genéricas hay que tener cuidado en las asignaciones y las advertencias del compilador.</p>
<p>Veamos en código las circunstancias bajo las cuales se pueden producir <em>Heap Pollution</em>. Un tipo <em>List&lt;String&gt;</em> puede asignarse a un <em>List</em> y luego añadir a esa <em>List</em> un <em>Integer</em> momento en el que el compilador nos avisa con un <em>unchecked warning</em> indicando que no puede validar que la lista <em>raw</em> siendo <em>List</em> un tipo genérico se le está añadiendo una referencia del tipo que debería tener, el compilador nos informa de que esa responsabilidad la tenemos nosotros. También podemos asignar un <em>List</em> a un <em>List&lt;Number&gt;</em>, en este caso el compilador tampoco puede validar que la <em>List</em> sea realmente un <em>List&lt;Number&gt;</em> y lo indica también con un <em>unchecked warning</em>. Ignorando estas advertencias se produce un <em>ClassCastException</em> al acceder al elemento <em>Integer</em> que contiene la <em>List&lt;String&gt;</em> como se comprueba en los teses.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">strings</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Before</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">before</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">strings</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Test</span><span class="o">(</span><span class="n">expected</span> <span class="o">=</span> <span class="n">ClassCastException</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">genericsRaw</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span> <span class="n">objects</span> <span class="o">=</span> <span class="n">strings</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">objects</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">42</span><span class="o">);</span> <span class="c1">// unchecked warning, heap pollution in strings&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">string</span> <span class="o">:</span> <span class="n">strings</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">string</span><span class="o">);</span> <span class="c1">// ClassCastException is thrown&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Test</span><span class="o">(</span><span class="n">expected</span> <span class="o">=</span> <span class="n">ClassCastException</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">genericsRawNumber</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span> <span class="n">objects</span> <span class="o">=</span> <span class="n">strings</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Number</span><span class="o">&gt;</span> <span class="n">numbers</span> <span class="o">=</span> <span class="n">objects</span><span class="o">;</span> <span class="c1">// unchecked warning&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">numbers</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">42</span><span class="o">);</span> <span class="c1">// heap pollution in strings&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">string</span> <span class="o">:</span> <span class="n">strings</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">string</span><span class="o">);</span> <span class="c1">// ClassCastException is thrown&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MainTest-generics.java</span>
    </div>
</div>
<p>Por otra parte en Java los arrays en tiempo de ejecución necesitan conocer el tipo <em>reified</em> que contendrá. Esto unido a que los <em>varargs</em> realmente se transforman en un array, el posible <em>Heap Pollution</em> se da también en los métodos que soportan <em>varargs</em>.</p>
<p>El compilador convierte los <em>varargs</em> de tipos genéricos de la siguiente forma:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">private &lt;T&gt; void add(List&lt;T&gt; list, T... elements) se convierte a&#10;</span></span><span class="line"><span class="cl">private &lt;T&gt; void add(List&lt;T&gt; list, T[] elements) luego a&#10;</span></span><span class="line"><span class="cl">private void add(List list, Object[] elements)&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">private &lt;T&gt; void addFaulty(List&lt;T&gt;... list) se convierte a&#10;</span></span><span class="line"><span class="cl">private void addFaulty(List[] list)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Erasure-varargs.txt</span>
    </div>
</div>
<p>En un método cuyo último argumento es un <em>vararg</em> y de tipo genérico puede producirse <em>Heap Pollution</em> como indica el compilador, si estamos seguros de que no se puede dar este caso en el código del método podemos eliminar la advertencia del compilador añadiendo la anotación <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/SafeVarargs.html">@SafeVarargs</a> en el método. Añadir la anotación solo implica que el compilador eliminará la advertencia pero aún con ella puede seguir produciéndose la excepción <em>ClassCastException</em> si el método no ha sido cuidadoso.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Test</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">warningVarargs</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">add</span><span class="o">(</span><span class="n">strings</span><span class="o">,</span> <span class="s">&#34;Hello&#34;</span><span class="o">,</span> <span class="s">&#34;World!&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Test</span><span class="o">(</span><span class="n">expected</span> <span class="o">=</span> <span class="n">ClassCastException</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">varargs</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;[]</span> <span class="n">array</span> <span class="o">=</span> <span class="k">new</span> <span class="n">List</span><span class="o">[]</span> <span class="o">{</span> <span class="n">strings</span><span class="o">,</span> <span class="n">strings</span> <span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">addFaulty</span><span class="o">(</span><span class="n">strings</span><span class="o">,</span> <span class="n">array</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">a</span> <span class="o">:</span> <span class="n">array</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">s</span> <span class="o">:</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">);</span> <span class="c1">// ClassCastException is thrown&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@SafeVarargs</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">private</span> <span class="kd">final</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">,</span> <span class="n">T</span><span class="o">...</span> <span class="n">elements</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">T</span> <span class="n">x</span> <span class="o">:</span> <span class="n">elements</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">private</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kt">void</span> <span class="nf">addFaulty</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">elements</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// possible heap polltion warning&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Object</span><span class="o">[]</span> <span class="n">array</span> <span class="o">=</span> <span class="n">elements</span><span class="o">;</span> <span class="c1">// valid, no warning&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">x</span> <span class="o">:</span> <span class="n">elements</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">list</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">x</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="mi">42</span><span class="o">);</span> <span class="c1">// heap pollution&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MainTest-varargs.java</span>
    </div>
</div>
<p>Tener en cuenta el <em>Heap Pollution</em> es importante ya que la excepción <em>ClassCastException</em> se produce más tarde y en un punto diferente de donde realmente está el error, mucho más tarde si el tipo genérico es serializado e incluso en otra <abbr title="Java Virtual Machine">JVM</abbr> diferente. Estos errores son de los peores de depurar por la poca información que proporcionan ya que la traza de la excepción solo dice quien la lanzó no donde se introdujo el fallo.</p>
<p>La implementación de los <em>generics</em> en Java viene con la garantía conocida como <em>cast-iron</em> que consiste en que mientras el compilador no produzca una <em>unchecked warning</em> en tiempo de compilación se garantiza que en tiempo de ejecución no se producirá una <em>ClassCastException</em> por los <em>cast</em> introducidos en el proceso de <em>erasure</em>.</p>
<p>Si nos encontramos con una de estas excepciones con los genéricos en una colección una buena alternativa es hacer uso de los métodos <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#checkedCollection-java.util.Collection-java.lang.Class-">Collections.checkedCollection</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#checkedSet-java.util.Set-java.lang.Class-">Collections.checkedSet</a>,  <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#checkedMap-java.util.Map-java.lang.Class-java.lang.Class-">Collections.checkedMap</a> y alguno más similar que evitará que en una colección se produzca <em>Heap Pollution</em>, la excepción <em>ClassCastException</em> se lanzará en el momento de añadir a la colección la referencia que provocaría el <em>Heap Pollution</em>.</p>
<p>Relacionados con casos de combinar genéricos y arrays y <em>ClassCastException</em> en el libro <a href="https://amzn.to/3D93nvU">Java Generics and Collections</a> se definen dos principios a seguir para evitar excepciones: <em>The Principle of Truth in Advertising</em> y <em>The Principle of Indecent Exposure</em>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0596527756&amp;linkId=befd554d504892ac130d115bfc8619b5" title="Amazon" class="lozad"></iframe>
</div>
<p>Salvo que hagamos operaciones complicadas entre genéricos de diferentes tipos no será muy habitual que nos encontremos <em>ClassCastException</em> por <em>Heap Pollution</em>, pero es un concepto interesante conocer, en cualquier caso el compilador nos informará con los <em>unchecked warnings</em>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaHeapPollution">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew test</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/tutorial-sobre-los-tipos-genericos-de-java/">Tutorial sobre los tipos genéricos de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">Novedades y nuevas características de Java 8</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/">Introducción y nuevas características de Java EE 7</a></li>
<li><a href="https://en.wikipedia.org/wiki/Heap_pollution">Heap Pollution</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/</id>
        <title>Extraer elementos de una cadena con una expresión regular</title>
        <updated>2016-05-06T18:00:00+02:00</updated>
        <published>2016-05-06T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Las expresiones regulares son muy útiles para comprobar si una cadena de texto o un subconjunto de ella cumple un determinado patrón. Un uso común de las expresiones regulares es para validar cadenas de texto pero también pueden usarse para obtener coincidencias de la cadena, esto se hace con los grupos de captura.</p>
<p>Por ejemplo, supongamos que tenemos un código de un producto formateado de la siguiente forma <em>123-123456/1</em>, usando guiones y una barra para separar tres grupos de números. Y ahora aparte de validar el formato correcto del código del producto nos interesa obtener los tres grupos de números. En vez de separar la cadena con un <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#split-java.lang.String-">split</a> por el caracter guión y barra de una forma que sería más laboriosa y difícil de mantener si hay algún cambio, vamos a usar los grupos de captura para obtener los tres grupos de números que forman el código.</p>
<p>Los grupos de captura se especifican mediante paréntesis, «(» y «)», en la expresión regular. En el caso del código usaremos la siguiente expresión regular:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">(\d{3})-(\d{6})/(\d{1})&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>regex.txt</span>
    </div>
</div>
<p>En Java con la clase <a href="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html">Pattern</a> y <a href="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html">Matcher</a> podemos hacer las validaciones y obtener los grupos de captura de la usando el método <a href="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html#group-int-">group</a> de la clase Matcher:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaregex</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.regex.Matcher</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.regex.Pattern</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">REGEX</span> <span class="o">=</span> <span class="s">&#34;(\\d{3})-(\\d{6})/(\\d{1})&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DEFAULT_STRING</span> <span class="o">=</span> <span class="s">&#34;123-123456/1&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">?</span> <span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]:</span> <span class="n">DEFAULT_STRING</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pattern</span> <span class="n">pattern</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="n">REGEX</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Matcher</span> <span class="n">matcher</span> <span class="o">=</span> <span class="n">pattern</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="n">string</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">matcher</span><span class="o">.</span><span class="na">matches</span><span class="o">())</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Group count: {}&#34;</span><span class="o">,</span> <span class="n">matcher</span><span class="o">.</span><span class="na">groupCount</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Group #1: {}&#34;</span><span class="o">,</span> <span class="n">matcher</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Group #2: {}&#34;</span><span class="o">,</span> <span class="n">matcher</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Group #3: {}&#34;</span><span class="o">,</span> <span class="n">matcher</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="mi">3</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;The expression \&#34;{}\&#34; does not matches regex.&#34;</span><span class="o">,</span> <span class="n">string</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/images/java-regex_huf44f86e530e876ab3f0fbcfbcc23fcd6_72080_2560x1440_fit_box_3.png" data-gallery="" title="Extracción de valores de una cadena usando una expresión regular"><img src="https://picodotdev.github.io/blog-bitix/2016/05/extraer-elementos-de-una-cadena-con-una-expresion-regular/images/java-regex_huf44f86e530e876ab3f0fbcfbcc23fcd6_72080_300x200_fit_box_3.png" width="300" height="124" alt="Extracción de valores de una cadena usando una expresión regular" title="Extracción de valores de una cadena usando una expresión regular"  class="lozad "></a></p>
<figcaption>Extracción de valores de una cadena usando una expresión regular</figcaption>
</figure>
</div>
<p>Esto simplifica el extraer los valores de un cadena, de una manera menos frágil y más fácil de leer posteriormente el código fuente que usar la función <em>split</em> por uno o varios determinados caracteres, esta es una cadena bastante sencilla si el patrón es más complejo el código usando <em>split</em> puede complicarse notablemente.</p>
<p>La clase Matcher contiene más métodos útiles, por ejemplo, con los métodos <a href="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html#start-int-">start</a> y <a href="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html#end-int-">end</a> nos es posible conocer la posición inicial y final de cada grupo de captura. En el caso del código de este ejemplo ya los conocemos de antemano pero usando alguna expresión que capture un número variable de caracteres como «X+», «X*», «X{n,}» o «{X{n,m}}» nos permitirá conocer las posiciones inicial y final.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRegex">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://stackoverflow.com/questions/237061/using-regular-expressions-to-extract-a-value-in-java">Using Regular Expressions to Extract a Value in Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/09/los-cuantificadores-greedy-reluctant-y-possessive-en-expresiones-regulares/">Los cuantificadores greedy, reluctant y posessive en expresiones regulares</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/02/referencias-a-grupos-de-captura-en-expresiones-regulares-y-reemplazos/">Referencias a grupos de captura en expresiones regulares y reemplazos</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/</id>
        <title>El componente Grid de Apache Tapestry</title>
        <updated>2016-04-30T12:00:00+02:00</updated>
        <published>2016-04-30T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En la mayoría de aplicaciones no solo es habitual sino algo muy usado el mostrar listados de elementos de forma tabular con paginación y columnas ordenables. En estos listados el complejo componente internamente <em>Grid</em> de Apache Tapestry pero a la vez muy sencillo de usar puede marcar una diferencia significativa en el número de líneas de código necesarias a escribir, la flexibilidad, funcionalidad ofrecida, la productividad al hacer la implementación o modificarla comparándolo con lo necesario en otros <em>frameworks</em> web en los que no hay nada comparable de serie.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="400" height="400" alt="Apache Tapstry" title="Apache Tapstry"  class=""></p>
</div>
<p><a href="https://tapestry.apache.org/">Apache Tapestry</a> es uno de los muchos <em>frameworks</em> disponibles en Java para el desarrollo de aplicaciones y páginas web. A diferencia de la mayoría se basa en componentes y proporciona una larga lista de ellos listos para usar de serie, pero también se pueden crear componentes nuevos basados en los propios de Tapestry o los que desarrollemos nosotros muy fácilmente. Los componentes son piezas reusables de código que se pueden reutilizar bien directamente o para formar nuevos componentes y es uno de los motivos por los que en Tapestry se consigue una alta productividad además de otros beneficios como la encapsulación.</p>
<p>Uno de los componentes más complejos pero al mismo tiempo muy simple de usar ofrecidos por el <em>framework</em> es el <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Grid.html">componente Grid</a>. El componente <em>Grid</em> muestra en una tabla un listado de datos ofreciendo las funcionalidades de paginación, ordenación, personalización de columnas, filtrado de columnas, personalización en caso de estar vacío y algunas cosas más. Lo único que debemos tener en cuenta para aprovechar al máximo el componente <em>Grid</em> son los parámetros que declara en su documentación su funcionamiento interno nos es irrelevante, será de los componentes más complejos y no por ello no es más difícil de utilizar basta decir que solo tiene un parámetro requerido y que es lo único imprescindible que es la lista de datos a mostrar.</p>
<p>Aunque el componente tiene un buen número de parámetros para personalizar según queramos su comportamiento basta que hagamos uso únicamente del parámetro <em>source</em> que es la fuente de datos del <em>Grid</em>, puede ser un objeto de tipo <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html">Collection</a> o un <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/grid/GridDataSource.html">GridDataSource</a> que proporciona métodos para hacer la paginación y ordenación eficientemente recuperando de la base de datos o fuente de datos únicamente los registros a mostrar realizando paginación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">t:block</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;listaBlock&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>Lista de productos<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;</span><span class="nt">t:grid</span> <span class="na">source</span><span class="o">=</span><span class="s">&#34;source&#34;</span> <span class="na">row</span><span class="o">=</span><span class="s">&#34;producto&#34;</span> <span class="na">model</span><span class="o">=</span><span class="s">&#34;model&#34;</span> <span class="na">rowsPerPage</span><span class="o">=</span><span class="s">&#34;2&#34;</span> <span class="na">lean</span><span class="o">=</span><span class="s">&#34;true&#34;</span> <span class="na">inPlace</span><span class="o">=</span><span class="s">&#34;true&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;table table-bordered table-condensed&#34;</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">&lt;</span><span class="nt">p:nombreCell</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;admin/producto&#34;</span> <span class="na">context</span><span class="o">=</span><span class="s">&#34;[producto.id, &#39;edicion&#39;]&#34;</span><span class="p">&gt;</span>${producto.nombre}<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">&lt;/</span><span class="nt">p:nombreCell</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">&lt;</span><span class="nt">p:actionCell</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">&lt;</span><span class="nt">t:eventlink</span> <span class="na">event</span><span class="o">=</span><span class="s">&#34;eliminar&#34;</span> <span class="na">context</span><span class="o">=</span><span class="s">&#34;producto.id&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn btn-danger btn-xs&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;color: white;&#34;</span><span class="p">&gt;</span>Eliminar<span class="p">&lt;/</span><span class="nt">t:eventlink</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">&lt;/</span><span class="nt">p:actionCell</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">&lt;</span><span class="nt">p:empty</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>No hay productos.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="p">&lt;/</span><span class="nt">p:empty</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="p">&lt;/</span><span class="nt">t:grid</span><span class="p">&gt;</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">t:block</span><span class="p">&gt;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductoAdmin.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span><span class="lnt">135&#10;</span><span class="lnt">136&#10;</span><span class="lnt">137&#10;</span><span class="lnt">138&#10;</span><span class="lnt">139&#10;</span><span class="lnt">140&#10;</span><span class="lnt">141&#10;</span><span class="lnt">142&#10;</span><span class="lnt">143&#10;</span><span class="lnt">144&#10;</span><span class="lnt">145&#10;</span><span class="lnt">146&#10;</span><span class="lnt">147&#10;</span><span class="lnt">148&#10;</span><span class="lnt">149&#10;</span><span class="lnt">150&#10;</span><span class="lnt">151&#10;</span><span class="lnt">152&#10;</span><span class="lnt">153&#10;</span><span class="lnt">154&#10;</span><span class="lnt">155&#10;</span><span class="lnt">156&#10;</span><span class="lnt">157&#10;</span><span class="lnt">158&#10;</span><span class="lnt">159&#10;</span><span class="lnt">160&#10;</span><span class="lnt">161&#10;</span><span class="lnt">162&#10;</span><span class="lnt">163&#10;</span><span class="lnt">164&#10;</span><span class="lnt">165&#10;</span><span class="lnt">166&#10;</span><span class="lnt">167&#10;</span><span class="lnt">168&#10;</span><span class="lnt">169&#10;</span><span class="lnt">170&#10;</span><span class="lnt">171&#10;</span><span class="lnt">172&#10;</span><span class="lnt">173&#10;</span><span class="lnt">174&#10;</span><span class="lnt">175&#10;</span><span class="lnt">176&#10;</span><span class="lnt">177&#10;</span><span class="lnt">178&#10;</span><span class="lnt">179&#10;</span><span class="lnt">180&#10;</span><span class="lnt">181&#10;</span><span class="lnt">182&#10;</span><span class="lnt">183&#10;</span><span class="lnt">184&#10;</span><span class="lnt">185&#10;</span><span class="lnt">186&#10;</span><span class="lnt">187&#10;</span><span class="lnt">188&#10;</span><span class="lnt">189&#10;</span><span class="lnt">190&#10;</span><span class="lnt">191&#10;</span><span class="lnt">192&#10;</span><span class="lnt">193&#10;</span><span class="lnt">194&#10;</span><span class="lnt">195&#10;</span><span class="lnt">196&#10;</span><span class="lnt">197&#10;</span><span class="lnt">198&#10;</span><span class="lnt">199&#10;</span><span class="lnt">200&#10;</span><span class="lnt">201&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.pages.admin</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.Block</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.ComponentResources</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.SymbolConstants</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Cached</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Component</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Property</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.beaneditor.BeanModel</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.corelib.components.Form</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.grid.GridDataSource</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.ioc.annotations.Inject</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.ioc.annotations.Symbol</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.BeanModelSource</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.TranslatorSource</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.hibernate.Session</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">org.jooq.DSLContext</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.plugintapestry.entities.jooq.tables.pojos.Producto</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.plugintapestry.misc.JooqGridDataSource</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.plugintapestry.misc.Pagination</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">io.github.picodotdev.plugintapestry.services.dao.JooqProductoDAO</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="cm">/**&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> * @tapestrydoc&#10;</span></span></span><span class="line"><span class="cl"><span class="cm"> */</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductoAdmin</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kd">enum</span> <span class="n">Modo</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">ALTA</span><span class="o">,</span> <span class="n">EDICION</span><span class="o">,</span> <span class="n">LISTA</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Inject</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">JooqProductoDAO</span> <span class="n">dao</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Session</span> <span class="n">session</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Inject</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">DSLContext</span> <span class="n">context</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Inject</span>&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Symbol</span><span class="o">(</span><span class="n">SymbolConstants</span><span class="o">.</span><span class="na">TAPESTRY_VERSION</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Property</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">String</span> <span class="n">tapestryVersion</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Inject</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">TranslatorSource</span> <span class="n">translatorSource</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Inject</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">BeanModelSource</span> <span class="n">beanModelSource</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Inject</span>&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Property</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">Block</span> <span class="n">listaBlock</span><span class="o">,</span> <span class="n">edicionBlock</span><span class="o">,</span> <span class="n">botonesEdicionBlock</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Inject</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">ComponentResources</span> <span class="n">resources</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">Form</span> <span class="n">form</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">Modo</span> <span class="n">modo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="nd">@Property</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="n">Producto</span> <span class="n">producto</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">void</span> <span class="nf">onActivate</span><span class="o">(</span><span class="n">Long</span> <span class="n">id</span><span class="o">,</span> <span class="n">Modo</span> <span class="n">modo</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">setModo</span><span class="o">((</span><span class="n">modo</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="n">Modo</span><span class="o">.</span><span class="na">LISTA</span> <span class="o">:</span> <span class="n">modo</span><span class="o">,</span> <span class="o">(</span><span class="n">id</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="kc">null</span> <span class="o">:</span> <span class="n">dao</span><span class="o">.</span><span class="na">findById</span><span class="o">(</span><span class="n">id</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="n">Object</span><span class="o">[]</span> <span class="nf">onPassivate</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="o">(</span><span class="n">producto</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="kc">null</span> <span class="o">:</span> <span class="n">producto</span><span class="o">.</span><span class="na">getId</span><span class="o">(),</span> <span class="o">(</span><span class="n">modo</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="kc">null</span> <span class="o">:</span> <span class="n">modo</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">toLowerCase</span><span class="o">()</span> <span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">void</span> <span class="nf">setupRender</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">(</span><span class="n">modo</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">setModo</span><span class="o">(</span><span class="n">Modo</span><span class="o">.</span><span class="na">LISTA</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">void</span> <span class="nf">onPrepareForSubmitFromForm</span><span class="o">(</span><span class="n">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">(</span><span class="n">id</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="c1">// Si se envía un id se trata de una edición, buscarlo&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="n">producto</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">findById</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">(</span><span class="n">producto</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="n">producto</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producto</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="n">Object</span> <span class="nf">onCanceledFromForm</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">setModo</span><span class="o">(</span><span class="n">Modo</span><span class="o">.</span><span class="na">LISTA</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">ProductoAdmin</span><span class="o">.</span><span class="na">class</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">void</span> <span class="nf">onSuccessFromForm</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">dao</span><span class="o">.</span><span class="na">persist</span><span class="o">(</span><span class="n">producto</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">setModo</span><span class="o">(</span><span class="n">Modo</span><span class="o">.</span><span class="na">LISTA</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">void</span> <span class="nf">onNuevo</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">setModo</span><span class="o">(</span><span class="n">Modo</span><span class="o">.</span><span class="na">ALTA</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">void</span> <span class="nf">onEliminarTodos</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">dao</span><span class="o">.</span><span class="na">removeAll</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">setModo</span><span class="o">(</span><span class="n">Modo</span><span class="o">.</span><span class="na">LISTA</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kt">void</span> <span class="nf">onEliminar</span><span class="o">(</span><span class="n">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">producto</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">findById</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">dao</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">producto</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="n">setModo</span><span class="o">(</span><span class="n">Modo</span><span class="o">.</span><span class="na">LISTA</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">hasProductos</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">getSource</span><span class="o">().</span><span class="na">getAvailableRows</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">GridDataSource</span> <span class="nf">getSource</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="k">new</span> <span class="n">JooqGridDataSource</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">Producto</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getAvailableRows</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">dao</span><span class="o">.</span><span class="na">countAll</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">			&#10;</span></span><span class="line"><span class="cl">			<span class="nd">@Override</span>&#10;</span></span><span class="line"><span class="cl">			<span class="kd">public</span> <span class="n">List</span> <span class="nf">find</span><span class="o">(</span><span class="n">Pagination</span> <span class="n">pagination</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="n">dao</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">pagination</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">			<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">BeanModel</span><span class="o">&lt;</span><span class="n">Producto</span><span class="o">&gt;</span> <span class="nf">getModel</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">BeanModel</span><span class="o">&lt;</span><span class="n">Producto</span><span class="o">&gt;</span> <span class="n">model</span> <span class="o">=</span> <span class="n">beanModelSource</span><span class="o">.</span><span class="na">createDisplayModel</span><span class="o">(</span><span class="n">Producto</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">resources</span><span class="o">.</span><span class="na">getMessages</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">model</span><span class="o">.</span><span class="na">exclude</span><span class="o">(</span><span class="s">&#34;id&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">model</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;action&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">).</span><span class="na">label</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">sortable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">model</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">Block</span> <span class="nf">getBlock</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">switch</span> <span class="o">(</span><span class="n">modo</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">case</span> <span class="n">ALTA</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">case</span> <span class="n">EDICION</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="n">edicionBlock</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">default</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">case</span> <span class="n">LISTA</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">return</span> <span class="n">listaBlock</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">	&#10;</span></span><span class="line"><span class="cl">	<span class="c1">// La anotacion @Cached permite cachar el resultado de un método de forma&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// que solo se evalúe&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// una vez independientemente del número de veces que se llame en la&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// plantilla de visualización.&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nd">@Cached</span>&#10;</span></span><span class="line"><span class="cl">	<span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="nf">getLabels</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;();</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">switch</span> <span class="o">(</span><span class="n">modo</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">case</span> <span class="n">ALTA</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;titulo&#34;</span><span class="o">,</span> <span class="s">&#34;Alta producto&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;guardar&#34;</span><span class="o">,</span> <span class="s">&#34;Crear producto&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">case</span> <span class="n">EDICION</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;titulo&#34;</span><span class="o">,</span> <span class="s">&#34;Modificación producto&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="n">m</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;guardar&#34;</span><span class="o">,</span> <span class="s">&#34;Modificar producto&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">default</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="n">m</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">setModo</span><span class="o">(</span><span class="n">Modo</span> <span class="n">modo</span><span class="o">,</span> <span class="n">Producto</span> <span class="n">producto</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">switch</span> <span class="o">(</span><span class="n">modo</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">case</span> <span class="n">ALTA</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">this</span><span class="o">.</span><span class="na">producto</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producto</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">case</span> <span class="n">EDICION</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">if</span> <span class="o">(</span><span class="n">producto</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">					<span class="n">modo</span> <span class="o">=</span> <span class="n">Modo</span><span class="o">.</span><span class="na">ALTA</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">					<span class="k">this</span><span class="o">.</span><span class="na">producto</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Producto</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">					<span class="k">this</span><span class="o">.</span><span class="na">producto</span> <span class="o">=</span> <span class="n">producto</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">				<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">default</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">			<span class="k">case</span> <span class="n">LISTA</span><span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">this</span><span class="o">.</span><span class="na">producto</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">				<span class="k">break</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">		<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">		<span class="k">this</span><span class="o">.</span><span class="na">modo</span> <span class="o">=</span> <span class="n">modo</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">	<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductoAdmin.java</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/images/grid_hudc57d686362064bded7bede661d43988_23776_2560x1440_fit_box_3.png" data-gallery="" title="Componente Grid de Tapestry"><img src="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/images/grid_hudc57d686362064bded7bede661d43988_23776_300x200_fit_box_3.png" width="300" height="195" alt="Componente Grid de Tapestry" title="Componente Grid de Tapestry"  class="lozad "></a></p>
<figcaption>Componente Grid de Tapestry</figcaption>
</figure>
</div>
<ul>
<li><em>source</em></li>
</ul>
<p>Con los parámetros <em>include</em> y <em>exclude</em> podemos determinar que propiedades de los objetos o <em>beans</em> de la fuente de datos se incluyen en el Grid, con el parámetro <em>add</em> podemos añadir nuevas columnas y personalizarlas con los datos que necesitemos como sería el caso de añadir una columna con un <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Checkbox.html">Checkbox</a> por fila para realizar una selección múltiple o de una columna con botones para realizar acciones. Para ambas cosas en el cuerpo del componente_Grid_definimos subcomponentes con la siguiente nomenclatura <em>&lt;p:[nombreColumna]Cell&gt;</em>, en en ejemplo usando <em>&lt;p:nombreCell&gt;</em> y <em>&lt;p:actionCell&gt;</em>. Las celdas de las columnas por defecto hacen un <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--">toString()</a> de la propiedad del <em>bean</em> de la fila a mostrar, si queremos cambiar este comportamiento como en la columna nombre definimos la etiqueta <em>&lt;p:nombreCell&gt;</em> y dentro incluimos el contenido que deseemos que puede contener otros componentes en este caso el nombre con un enlace.</p>
<ul>
<li><em>include</em></li>
<li><em>exclude</em></li>
<li><em>add</em></li>
<li><em>&lt;p:[nombreColumna]Cell&gt;</em></li>
</ul>
<p>Con el parámetro <em>rowsPerPage</em> podemos cambiar el número de filas por página del <em>Grid</em>, en el ejemplo son 2 pero puede ser la cifra que deseemos y tampoco tiene por que ser una constante, el número de filas a mostrar puede provenir de una expresión y cambiar según alguna lógica. Los parámetros <em>columnIndex</em>, <em>rowIndex</em> y <em>row</em> nos proporcionan información del índice de la columna actual, índice de la fila actual y el objeto actual de la fila respectivamente que podemos usar al personalizar las celdas del <em>Grid</em>. Son parámetros de salida que el <em>Grid</em> se encarga de proporcionarnos según procesa las filas y celdas, en base a ellos podremos implementar alguna funcionalidad.</p>
<ul>
<li><em>rowsPerPage</em></li>
<li><em>columnIndex</em></li>
<li><em>rowIndex</em></li>
<li><em>row</em></li>
</ul>
<p>Los parámetros informales (denominados así para aquellos que le pasamos al <em>Grid</em> que no están declarados explícitamente en su interfaz o contrato y que no proporcionan alguna funcionalidad) son incluidos en la etiqueta <em>table</em> del <abbr title="HyperText Markup Language">HTML</abbr> que genera el <em>Grid</em>. Igualmente el parámetro informal <em>class</em> se incluye tal cual se indica en el atributo en <em>class</em> de la tabla para personalizar los estilos y usando el parámetro <em>rowClass</em> se incluye en cada fila en su etiqueta <em>tr</em> de HTML. Además de estas clases que podemos el componente añade algunas clases más a ciertas filas: <em>t-first</em> para la primera fila, <em>t-last</em> para la última, <em>t-sort-column-ascending</em> y <em>t-sort-column-descending</em> para las columnas que estén ordenadas ascendentemente y descendentemente de forma que con <abbr title="">CSS</abbr> tengamos la posibilidad de cambiar sus estilos.</p>
<ul>
<li><em>class</em></li>
<li><em>rowClass</em></li>
</ul>
<p>Con el parámetro <em>empty</em> definimos un componente <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/Block.html">Block</a> que se usará cuando el <em>Grid</em> no tenga filas que mostrar, lo que es útil para mostrar un mensaje indicando que la tabla no tiene filas como cuando no hay elementos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/images/grid-sin-elementos_hub6bad543fc5977836e7e1055e60375bd_14325_2560x1440_fit_box_3.png" data-gallery="" title="Mensaje de un Grid sin elementos"><img src="https://picodotdev.github.io/blog-bitix/2016/04/el-componente-grid-de-apache-tapestry/images/grid-sin-elementos_hub6bad543fc5977836e7e1055e60375bd_14325_300x200_fit_box_3.png" width="300" height="194" alt="Mensaje de un Grid sin elementos" title="Mensaje de un Grid sin elementos"  class="lozad "></a></p>
<figcaption>Mensaje de un Grid sin elementos</figcaption>
</figure>
</div>
<ul>
<li><em>empty</em></li>
</ul>
<p>Con <em>pagerPosition</em> indicaremos si queremos la barra de paginación situada encima de la tabla, abajo, en ambas posiciones o no queremos.</p>
<ul>
<li><em>pagerPosition</em></li>
</ul>
<p>Por si fuera poco con el parámetro <em>inPlace</em> podemos hacer que la paginación y ordenación funcione usando <abbr title="Asynchronous JavaScript And XML">AJAX</abbr> de modo que no se recargue toda la página en cada pulsación de un enlace. No será necesario que añadamos nada de JavaScript, el componente se encargará de hacer la petición AJAX y con el resultado que sea devuelto actualizar la tabla.</p>
<ul>
<li><em>inPlace</em></li>
</ul>
<p>Finalmente, comentaré el parámetro <em>encoder</em> con el que podemos hacer que el componente <em>Grid</em> funcione cuando se usa dentro de un componente <em>Form</em>. La clase <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/ValueEncoder.html">ValueEncoder</a> transforma un objeto a un <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html">String</a> que lo identifique en el cliente y a partir del identificador del cliente los transforme al objeto cuando se envíe de nuevo al servidor. Podemos indicar el <em>ValueEncoder</em> en cada <em>Grid</em> o definirlo como una configuración del contenedor <abbr title="Inversion of Control">IoC</abbr>.</p>
<p>Hay algún parámetro más como <em>sortModel</em> y <em>paginationModel</em> para mantener la información de ordenación y paginación pero los anteriores son los que más habitualmente usaremos y probablemente con <em>source</em>, <em>include</em>, <em>exclude</em> y <em>add</em> tengamos suficiente para muchos casos.</p>
<p>Es sorprendentemente lo sencillo que es usar el componente <em>Grid</em> para toda la funcionalidad que proporciona. En ciertos casos este componente por si solo puede reducir drásticamente la cantidad de código necesario a escribir en las plantillas que producen HTML y aumentar notablemente la productividad al crear o modificar páginas con listados de elementos. En el artículo <a href="https://elblogdepicodev.blogspot.com.es/2013/06/mantenimiento-crud-en-apache-tapestry.html">Mantenimiento CRUD en Apache Tapestry</a> comento como conseguir un <abbr title="Create, Read, Update and Delete">CRUD</abbr> completo usando el componente <em>Grid</em> entre otras cosas.</p>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/06/mantenimiento-crud-en-apache-tapestry.html">Mantenimiento CRUD en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/tags/tapestry/">Artículos sobre Tapestry en Blog Bitix</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/search/label/tapestry">Artículos sobre Tapestry en El blog de pico.dev</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>