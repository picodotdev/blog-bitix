<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2021-11-25T20:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/</id>
        <title>Conceptos teóricos generales de los procesadores de computadora</title>
        <updated>2021-05-20T22:00:00+02:00</updated>
        <published>2021-05-20T22:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los procesadores es uno de los principales circuitos integrados que posee toda computadora. Es el encargado de ejecutar el código de los programas y gobierna el resto de componentes. A pesar de su pequeño tamaño son elementos con gran complejidad, para aumentar su rendimiento se aplican diferentes técnicas que los procesadores han incorporando de forma paulatina. Al hablar de procesadores hay varios conceptos que es necesario comprender.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/intel.svg" width="300" height="199" alt="Intel" title="Intel"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/amd.svg" width="300" height="71" alt="AMD" title="AMD"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/arm.svg" width="300" height="93" alt="ARM" title="ARM"  class=""></p>
</div>
<p>Los procesadores actuales tienen una capacidad de cómputo en varios órdenes de magnitud a la de tan toso unas décadas antes. Buena parte de ese rendimiento es conseguido a través de la mejora de los procesos litográficos que permiten fabricar transistores cada vez más pequeños. Con transistores más pequeños se mejoran varios aspectos vitales de los procesadores entre ellos se reduce su consumo de energía, permiten añadir más transistores en el mismo espacio físico para implementar cachés más grandes o implementar conceptos que mejoren el rendimiento y finalmente son más baratos de fabricar.</p>
<p>Desde la aparición de los circuitos integrados que sustituyeron a las válvulas de vacío, según la <a href="https://es.wikipedia.org/wiki/Ley_de_Moore">ley de Moore</a> cada dos año en número de transistores que incluye un procesador se duplica, esta ley se ha estado cumpliendo hasta ahora y por consiguiente la potencia de los procesadores. Uno de los primeros microprocesadores de Intel como el 4004 tenía únicamente 2300 transistores a 10 micrómetros, un Intel Core o un Ryzen llegan superan los 2 mil millones de transistores a 7 nanómetros.</p>
<p>Varios de los conceptos teóricos aplicados en los procesadores está destinado a aumentar el rendimiento en monohilo, así ha sido hasta el desarrollo de los procesadores con múltiples núcleos tanto de Intel como de AMD y también de ARM. Desde el año 2010 el aumento de rendimiento de los procesadores también se consigue mediante la inclusión de mayor número de núcleos, para tareas paralelizables. Un amyor número de núcleos consigue un aumento de rendimiento en una proporcion similar a la proporción de aumento de núcleos. Crear procesadores multinúcleo es otra forma de seguir aumentando el rendimiento de forma más sencilla que mejorando aún más el rendimiento en monohilo. Los procesadores actuales van desde los 4 núcleos hasta cantidades como 16 para ordenadores de escritorio y hasta 64 o más para computadoras destinadas a hacer funciones de servidor.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/intel-P4004_hu1fb723fba9f61c17f3c53cbccccca215_25344_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Procesador Intel 4004"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/intel-P4004_hu1fb723fba9f61c17f3c53cbccccca215_25344_200x150_fit_q90_box.jpg" width="200" height="133" alt="Procesador Intel 4004" title="Procesador Intel 4004"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/intel-D8086_hu4a9b2a61e98b62517be5b67531c8a389_24893_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Procesador Intel 8086"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/intel-D8086_hu4a9b2a61e98b62517be5b67531c8a389_24893_200x150_fit_q90_box.jpg" width="200" height="133" alt="Procesador Intel 8086" title="Procesador Intel 8086"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/intel-pentium_hu803c000e0467e06370991e1649bd527c_20884_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Procesador Pentium"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/intel-pentium_hu803c000e0467e06370991e1649bd527c_20884_200x150_fit_q90_box.jpg" width="147" height="150" alt="Procesador Pentium" title="Procesador Pentium"  class="lozad "></a></p>
<figcaption>Procesadores Intel 4004, 8086 y Pentium</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/amd-athlon-xp_hu42da18795932957ce0f9752e49bc4958_40154_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Procesador AMD Athlon XP"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/amd-athlon-xp_hu42da18795932957ce0f9752e49bc4958_40154_200x150_fit_q90_box.jpg" width="150" height="150" alt="Procesador AMD Athlon XP" title="Procesador AMD Athlon XP"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/sun-ultra-sparc-II_hube962f03be0a6bacb52a23d45f2294ed_45508_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Procesador Sun UltraSparc II"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/sun-ultra-sparc-II_hube962f03be0a6bacb52a23d45f2294ed_45508_200x150_fit_q90_box.jpg" width="150" height="150" alt="Procesador Sun UltraSparc II" title="Procesador Sun UltraSparc II"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/risc-v_hub61dde6c275c794a4f05549a96497f1b_38766_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Procesador RISC-V"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/risc-v_hub61dde6c275c794a4f05549a96497f1b_38766_200x150_fit_q90_box.jpg" width="200" height="143" alt="Procesador RISC-V" title="Procesador RISC-V"  class="lozad "></a></p>
<figcaption>Procesadores de AMD, Sun Ultra Sparc y SiFive RISC-V</figcaption>
</figure>
</div>
<p>Los siguientes apartados son una explicación sencilla, básica y resumida de los conceptos que se utilizan en los procesadores de los que se puede. Esta información está ampliada en la wikipedia.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="arquitectura">Arquitectura</h3>
<p>Los computadores siguen una organización definida en el <a href="https://en.wikipedia.org/wiki/Von_Neumann_architecture">modelo de von Neumann</a> en el que una computadora consta de:</p>
<ul>
<li>Una unidad de procesamiento que contiene lógica de aritmética y los registros del procesador.</li>
<li>Una unidad de control que contiene un registro de instrucción y un contador de programa.</li>
<li>Memoria que almacena los datos y las instrucciones del programa.</li>
<li>Almacenamiento externo.</li>
<li>Mecanismos de entrada y salida.</li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/a-basic-computer_hu75cd8774cd27f766d21d6d55373d0054_18807_2560x1440_fit_box.gif" data-gallery="data-gallery" title="Esquema de computadora"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/a-basic-computer_hu75cd8774cd27f766d21d6d55373d0054_18807_300x200_fit_box.gif" width="259" height="200" alt="Esquema de computadora" title="Esquema de computadora"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/von-neumann-architecture.svg" data-gallery="data-gallery" title="Arquitectura de Von Neumann"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/von-neumann-architecture.svg" width="300" height="200" alt="Arquitectura de Von Neumann" title="Arquitectura de Von Neumann"  class="lozad "></a></p>
<figcaption>Esquema de computadora y arquitectura de Von Neumann</figcaption>
</figure>
</div>
<h4 id="componentes-de-un-procesador">Componentes de un procesador</h4>
<p>Los componentes son los siguientes:</p>
<ul>
<li>Caché: es una memoria pequeña comparada con la memoria principal o el almacenamiento secundario pero mucho más rápida que estas.</li>
<li>Unidades funcionales: la unidad de lógica aritmética o ALU permite realizar operaciones del cálculo matemático y binarias, la unidad de coma flotante o FPU permite realizar operaciones en coma flotante. La unidad de predicción de de saltos permite predecir cuál será el resultado de una condición, otras unidades son la unidad de generación de direcciones o AGU, la <em>load–store unit translation lookaside buffer</em> o TLB permite traducir direcciones virtuales a direcciones físicas y es parte de la unidad de gestión de memoria o MMU. El controlador integrado de memoria o IMC gestiona las transferencias entre la memoria principal y el procesador.</li>
<li>Registros: son unas pequeñas zonas de memoria en las que operan las instrucciones del procesador.</li>
<li>Unidad de control: es la encargada de enviar las señales a las otras unidades del procesador.</li>
</ul>
<h4 id="tamaño-de-palabra">Tamaño de palabra</h4>
<p>El tamaño de palabra es la unidad de datos nativa del procesador media en número bits. Los registros del procesador suelen tener tener el mismo tamaño de palabra que el procesador y la máxima cantidad de información que se suele poder transferir desde y a la memoria en una única operación coincide con el tamaño de palabra. Los procesadores x86-64 tiene un tamaño de palabra de 64 bits.</p>
<h4 id="_endianness_"><em>Endianness</em></h4>
<p>La arquitectura de un procesador define cómo se almacenan los datos en memoria, puede ser de dos formas <em>litte-endian</em> o <em>big-endian</em>. En la primera el byte de datos menos significativo se almacena en la dirección de memoria más baja, por el contrario en <em>big-endian</em> el byte más significativo se almacena en la dirección más baja.</p>
<p>Que una arquitectura de procesador elija entre estos dos tipos de <em>endianness</em> no es significativo, simplemente se ha de mantener de forma consistente al almacenar, cargar los datos y transmitirlos a otras computadoras.</p>
<p>En el protocolo IP se utiliza <em>big-endian</em>, por el contrario el la mayoría de procesadores de arquitectura de procesadores como x86, ARM y RISC-V utilizan <em>litte-endian</em>.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Endianness">Endianness</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/big-endian.svg" data-gallery="data-gallery" title="Big endian"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/big-endian.svg" width="300" height="200" alt="Big endian" title="Big endian"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/little-endian.svg" data-gallery="data-gallery" title="Little endian"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/little-endian.svg" width="300" height="200" alt="Little endian" title="Little endian"  class="lozad "></a></p>
<figcaption>Big y little endian</figcaption>
</figure>
</div>
<h4 id="almacenamiento-de-computadora-numa-y-uma">Almacenamiento de computadora, NUMA y UMA</h4>
<p>El significado de las siglas de NUMA son <em>Non-uniform memory access</em> y de UMA son <em>Uniform memory access</em>, en el primer caso el tiempo de acceso  a memoria no es uniforme y depende de la ubicación del la memoria relativa al procesador, en este caso para un procesador es más rápido acceder a su memoria local que a la memoria de otro procesador.</p>
<p>Los procesadores actuales son significativamente más rápidos que la memoria principal por ello suelen tener pequeñas cachés de memoria más rápidas, al mismo tiempo se evita que varios procesadores compitan por el acceso a la memoria principal. Este modelo NUMA mejora el rendimiento pero ocasiona el problema que cuando un procesador requiere los datos de otro ocasiona que los datos han de ser movidos con una penalización en la latencia.</p>
<p>AMD lo implementó el almacenamiento NUMA en los procesadores Opteron con <a href="https://en.wikipedia.org/wiki/HyperTransport">HyperTransport</a> e Intel con <a href="https://en.wikipedia.org/wiki/Intel_QuickPath_Interconnect">QPI</a>.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Non-uniform_memory_access">Non-uniform memory access</a></li>
<li><a href="https://en.wikipedia.org/wiki/Uniform_memory_access">Uniform memory access</a></li>
</ul>
<h4 id="memoria-y-jerarquía-de-memoria">Memoria y jerarquía de memoria</h4>
<p>La memoria contiene los datos y las instrucciones de los programas, el procesador lee los datos de la memoria los carga en las cachés y los registros del procesador, realiza el cálculo deseado y los resultados son almacenados de nuevo en la memoria principal.</p>
<p>Hay cuatro niveles de almacenamiento.</p>
<ul>
<li>Interno: formado por los registros del procesador y sus cachés internas.</li>
<li>Memoria principal: formada por la memoria RAM volátil cuyo contenido se pierde si se apaga la computadora.</li>
<li>Secundaria: es una memoria persistente conectada a la computadora y que conserva los datos aún después de apagar la computadora.</li>
<li>Terciaria:  es una memoria que se puede extraer y conectar del equipo bajo demanda.</li>
</ul>
<p>La memoria se puede diferenciar en las siguientes propiedades:</p>
<ul>
<li>Volatilidad: si persiste al apagado de la computadora.</li>
<li>Mutabilidad: si es posible cambiar su contenido.</li>
<li>Accesibilidad: el modo de lectura permitido si es aleatorio o ha de ser secuencial.</li>
<li>Direccionamiento.</li>
<li>Capacidad: el tamaño de la memoria.</li>
<li>Rendimiento: el tiempo de acceso necesario.</li>
<li>Uso de energía.</li>
<li>Seguridad.</li>
<li>Vulnerabilidad y confiabilidad.</li>
</ul>
<p>La diferencia de velocidad de procesamiento de la CPU y la velocidad de acceso a la memoria principal y secundaria hace que para aumentar el rendimiento de la CPU sea necesario una memoria pequeña pero más rápida que la memoria principal en el procesador. En la jerarquía de memoria en el nivel superior su latencia es inferior, su velocidad de transferencia es mayor pero su tamaño es menor. Si la tasa de aciertos en la caché es alta el procesador aumenta significativamente al no ser penalizado por la latencia de acceso a la memoria principal.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Computer_data_storage">Computer data storage</a></li>
<li><a href="https://en.wikipedia.org/wiki/Memory_hierarchy">Memory hierarchy</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/cache-hierarchy_hu67a35246351b6441699470bb96f7cdc8_11569_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Jerarquía de caché"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/cache-hierarchy_hu67a35246351b6441699470bb96f7cdc8_11569_300x200_fit_box_3.png" width="206" height="200" alt="Jerarquía de caché" title="Jerarquía de caché"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/computer-memory-hierarchy.svg" data-gallery="data-gallery" title="Jerarquía de caché"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/computer-memory-hierarchy.svg" width="300" height="200" alt="Jerarquía de caché" title="Jerarquía de caché"  class="lozad "></a></p>
<figcaption>Jerarquía de caché</figcaption>
</figure>
</div>
<h4 id="memoria-virtual">Memoria virtual</h4>
<p>La memoria principal del sistema es limitada aun siendo de varias decenas de GB. La memoria virtual es una técnica que permite ampliar la memoria del sistema utilizando el siguiente nivel de la jerarquía de memoria , normalmente el almacenamiento persistente de mayor capacidad.</p>
<p>El sistema operativo con ayuda de funciones de gestión de memoria implementadas en el procesador se encarga de mover fuera de la memoria principal la que no se está utilizando y de cargar en la memoria principal la que se necesite.</p>
<h4 id="microcódigo">Microcódigo</h4>
<p>El microcódigo es un software que traduce las instrucciones en operaciones a ejecutar en el <em>chip</em>. Esta traducción de instrucciones permite los desarrolladores de <em>chips</em> flexibilidad en la implementación. Por ejemplo, en una versión mejorada del <em>chip</em> se puede soportar el mismo conjunto de instrucciones que versiones anteriores o soportar diferentes conjuntos de instrucciones en el mismo <em>chip</em>.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Microcode">Microcode</a></li>
</ul>
<h3 id="arquitecturas-de-conjunto-de-instrucciones">Arquitecturas de conjunto de instrucciones</h3>
<p>La arquitectura del conjunto de instrucciones o ISA es el modelo abstracto de una computadora, define los tipos de datos soportados, los registros, el hardware de soporte para la memoria principal y el modelo de entrada y salida. También forma parte el conjunto de instrucciones soportadas y su codificación binaria.</p>
<p>El conjunto de instrucciones es una de las características mas relevantes de un procesador, los programas compilados a código máquina están codificados en forma binarias según las instrucciones de una ISA.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Instruction_set_architecture">Instruction set architecture</a></li>
<li><a href="https://en.wikipedia.org/wiki/Microarchitecture">Microarchitecture</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/mips32-addi.svg" data-gallery="data-gallery" title="Instrucción addi de un procesador MIPS"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/mips32-addi.svg" width="300" height="200" alt="Instrucción addi de un procesador MIPS" title="Instrucción addi de un procesador MIPS"  class="lozad "></a></p>
<figcaption>Instrucción addi de un procesador MIPS</figcaption>
</figure>
</div>
<h4 id="conjuntos-de-instrucciones">Conjuntos de instrucciones</h4>
<p>El conjunto de instrucciones soportados por un procesador depende de su arquitectura. La arquitectura más popular en ordenadores de escritorio es la x86, en los dispositivos móviles como teléfonos inteligentes es ARM, otras arquitecturas alternativas son RISC-V que es una arquitectura abierta sin costes de licencia, otras son MIPS, POWER y Sparc.</p>
<p>Los lenguajes de programación de alto nivel como C traducen los programas a un binario ejecutable por la computadora, Java traduce los programas en la compilación a un <em>bytecode</em> independendiente de la arquitectura del procesador y es en tiempo de ejecución cuando se realiza la traducción del <em>bytecode</em> a las instrucciones que entiende el procesador.</p>
<p>Dos aproximaciones al conjunto de instrucciones son CISC que proporciona un conjunto amplio de instrucciones complejas y RISC que proporciona un conjunto reducido de instrucciones más simples. El equivalente de una instrucción CISC pueden ser varias RISC. Los procesadores CISC tienen la ventaja de hacer que los programas tengan menor tamaño pero hace que los procesadores sean más complejos, por el contrario en los procesadores RISC los programas son más grandes al necesitar más instrucciones pero los procesadores son más sencillos. La diferencia entre un procesador CISC y RISC no es muy significativa con la utilización de microcódigo.</p>
<p>Las instrucciones se agrupan en las siguientes categorías:</p>
<ul>
<li>Establecimiento de datos y operaciones con memoria cómo establecer un registro con un valor y mover datos de un registro a otro.</li>
<li>Operaciones aritméticas y lógicas como sumar, restar, multiplicar o dividir entre los valores de dos registros, realizar operaciones binarias o comprar dos valores.</li>
<li>Control de flujo como saltar a otro punto del programa, salto condicional o llamada a una función.</li>
<li>Instrucciones de coprocesador como cargar o almacenar datos en los registros del procesador.</li>
</ul>
<p>Las instrucciones <em>single instruction multiple data</em> o SIMD operan múltiples datos de forma paralela con una única instrucciones, esto mejora significativamente el rendimiento respecto si hubiera que ejecutar una instrucción por cada dato. Es una forma diferente de conseguir paralelismo.</p>
<p>En la arquitectura x86 las instrucciones MMX, SSE y AVX son variantes de instrucciones SIMD. El primer procesador con instrucciones MMX fabricado por Intel fue el Pentium MMX. El primer procesador de Intel con instrucciones SSE fue el Pentium 3 y el primero con AVX fue a partir de la familia Sandy Bridge.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Complex_instruction_set_computer">Complex instruction set computer</a></li>
<li><a href="https://en.wikipedia.org/wiki/Reduced_instruction_set_computer">Reduced instruction set computer</a></li>
<li><a href="https://en.wikipedia.org/wiki/Advanced_Vector_Extensions">Advanced Vector Extensions</a></li>
<li><a href="https://en.wikipedia.org/wiki/X86">x86 architecture</a></li>
<li><a href="https://en.wikipedia.org/wiki/ARM_architecture">ARM architecture</a></li>
<li><a href="https://en.wikipedia.org/wiki/IBM_POWER_instruction_set_architecture">IBM POWER instruction set architecture</a></li>
<li><a href="https://en.wikipedia.org/wiki/PowerPC">PowerPC</a></li>
<li><a href="https://en.wikipedia.org/wiki/RISC-V">RISC-V</a></li>
<li><a href="https://en.wikipedia.org/wiki/SPARC">SPARC</a></li>
</ul>
<h3 id="ciclo-de-ejecución-del-procesador">Ciclo de ejecución del procesador</h3>
<p>La principal tarea de un procesador es ejecutar instrucciones, para ello el procesador sigue un ciclo de obtener la siguiente instrucción de la memoria principal según el contador del programa, decodificación en la que se determina que instrucción se ejecuta y ejecución en la que se utilizan los diferentes componentes del procesador como la unidad de lógica aritmética.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Instruction_cycle">Instruction cycle</a></li>
</ul>
<h4 id="_pipelining_-de-instrucciones"><em>Pipelining</em> de instrucciones</h4>
<p>Los procesadores tiene varios componentes, para mantenerlos todos en funcionamiento con el objetivo de maximizar el rendimiento las instrucciones se ejecutan en varias etapas. En un momento determinado el procesador posee varias instrucciones en diferentes etapas de ejecución. Cada uno de estos pasos de ejecución es un segmento de ejecución, denominando a estos procesadores como segmentados.</p>
<p>El primer procesador segmentado fabricado por Intel fue el Intel 386 con un <em>pipeline</em> de tres etapas.</p>
<p>Un procesador como los Intel Pentium 4 llegaba a tener un <em>pipeline</em> de ejecución de hasta 31 etapas. El problema es que un <em>pipeline</em> tan largo no mejora el rendimiento cuando se producen saltos al ejecutar instrucciones condicionales y el predictor de bifurcaciones falla en el predicción, en un salto el <em>pipeline</em> se vacía y comienza en la primera etapa con la primera instrucción a la que se ha saltado.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Instruction_pipelining">Instruction pipelining</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/pipeline-4-stage-with-bubble.svg" data-gallery="data-gallery" title="Pipeline de 4 segmentos"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/pipeline-4-stage-with-bubble.svg" width="300" height="200" alt="Pipeline de 4 segmentos" title="Pipeline de 4 segmentos"  class="lozad "></a></p>
<figcaption>Pipeline de 4 segmentos</figcaption>
</figure>
</div>
<h4 id="_hazards_"><em>Hazards</em></h4>
<p>Hay varios peligros en la ejecución paralela que ha de tenerse en cuenta para un buen funcionamiento de los procesadores segmentados. Los riesgos son de tres tipos, de datos, estructurales y de control.</p>
<p>En los riegos de datos una instrucción de lectura posterior a una instrucción de escritura para un dato ha de producirse después, una instrucción de lectura posterior a una de escritura para un dato ha de producirse después y dos instrucciones de escritura sobre el mismo dato ha de producirse en el mismo orden del programa.</p>
<p>Los riesgos estructurales consisten en que dos instrucciones en el <em>pipeline</em> necesiten el mismo recurso como la ALU, en este caso las instrucciones han de esperar.</p>
<p>Los riesgos de control consisten en que se hayan insertado en el <em>pipeline</em> instrucciones que finalmente han de descartarse por una mala predicción en un salto en el programa.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Hazard_%28computer_architecture%29">Hazard (computer architecture)</a></li>
</ul>
<h4 id="ejecución-fuera-de-orden">Ejecución fuera de orden</h4>
<p>La ejecución fuera de orden permite aprovechar los ciclos de CPU que de otra manera no se utilizarían. Con este paradigma, el procesador ejecuta las instrucciones según la disponibilidad de los datos de entrada y las unidades de ejecución, en vez de en el orden original del programa. Esto permite evitar tiempos inactivos esperando a que la instrucción precedente se complete en el caso de que sean independientes.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Out-of-order_execution">Out-of-order execution</a></li>
</ul>
<h4 id="ejecución-especulativa">Ejecución especulativa</h4>
<p>La ejecución especulativa es otra optimización que permite aumentar el rendimiento que consiste en ejecutar instrucciones aún antes de saber si son necesarias.</p>
<p>Los programas incluyen sentencias condicionales, en función de su evaluación el flujo del programa continúa por una rama de la condición u otra, hasta no evaluarse la condición no se sabe porque rama se continúa. La ejecución especulativa ejecuta las instrucciones de ambas ramas descartando los resultados de una cuando se conoce que rama finalmente se ha seguido.</p>
<p>Esta técnica aumenta el rendimiento pero con la cual se han descubierto varios problemas relativos a la seguridad con su <a href="https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/">Explicación del fallo de seguridad Meltdown y Spectre en los microprocesadores Intel</a> que han afectado a los procesadores que la implementaron tanto de Intel, de AMD como de ARM.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Speculative_execution">Speculative execution</a></li>
</ul>
<h3 id="paralelismo">Paralelismo</h3>
<p>Para aumentar el rendimiento los procesadores intentan ejecutar las operaciones de forma paralela.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Parallel_computing">Parallel computing</a></li>
</ul>
<h4 id="_bit_"><em>Bit</em></h4>
<p>Una forma de aumentar el paralelismo es aumentar el tamaño de palabra del procesador. Un procesador con una palabra de 8 bits necesita dos ciclos para realizar la suma de dos números de 16 bits, un procesador de 16 bits solo necesita un ciclo con lo que en la práctica es duplicar el rendimiento del procesador en este tipos de operaciones.</p>
<h4 id="escalar-y-superescalar">Escalar y superescalar</h4>
<p>Un procesador escalar en todo momento solo ejecuta una instrucción, en cambio un procesador superescalar ejecutar múltiples instrucciones usando varias unidades de ejecución. Los procesadores superescalares tienen varias unidades de ejecución del mismo tipo, por ejemplo un procesador superescalar tiene varias unidades ALU o de FPU. El procesador trata de mantener cada una de estas diferentes unidades con instrucciones a ejecutar. Un procesador superescalar con dos ALU es capaz de realizar el doble de operaciones por ciclo de reloj y por tanto supone duplicar el rendimiento en este tipos de operaciones.</p>
<p>El primer procesador superescalar fabricado por Intel fue el Pentium.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Scalar_processor">Scalar processor</a></li>
<li><a href="https://en.wikipedia.org/wiki/Superscalar_processor">Superscalar processor</a></li>
</ul>
<h4 id="multihilo">Multihilo</h4>
<p>Un procesador con procesamiento multihilo o SMT trata de mejorar el rendimiento del procesador superescalar. Cada núcleo físico es visto por el sistema operativo como dos o más núcleos lógicos, cada procesador lógico tiene sus propios registros de control sin embargo las unidades de ejecución son compartidas por los hilos. Cada hilo puede ser detenido o interrumpido de forma independiente al resto de hilos.</p>
<p>El número de hilos que permite un procesador por cada cada núcleo puede ser tan simple como dos, dependiendo de la microarquitectura del procesador pueden ser un número más grande como cuatro u ocho.</p>
<p>El primer procesador con hyper-threading fabricado por fue el Intel Pentium 4.</p>
<p>Los procesadores y sistemas operativos conceden a los programas un tiempo de ejecución en el procesador, transcurrido el tiempo sin interrumpidos y se continua con otro proceso, el proceso no tiene el control de cuando se interrumpe su ejecución, a este estilo de compartir el recurso del procesador se le denomina <a href="https://en.wikipedia.org/wiki/Preemption_%28computing%29">multitarea preemtiva</a>. Incluso con la velocidad de los procesadores de mononucleo en los que solo se ejecutan un solo programa la sensación es que los programas se están ejecutando de forma paralela.</p>
<h4 id="multinúcleo">Multinúcleo</h4>
<p>Un procesador con procesamiento paralelo o SMP incorpora varios núcleos físicos en el mismo procesador. Cada núcleo es independiente y ejecuta un proceso en cada núcleo de forma simultánea. En un procesador mononúcleo la programación simultánea era simulada mediante la apropiación preemptiva junto con la rapidez del procesador para en la ejecución de instrucciones y cambios de contexto de un procesador a otro.</p>
<p>El primer procesador multinúcleo fabricado por Intel fue el Pentium D.</p>
<h4 id="número-de-núcleos">Número de núcleos</h4>
<p>Los primeros procesadores tenían un único núcleo o unidad de cómputo denominados <em>single-core</em>, posteriormente se ha implementado en un mismo procesador varios núcleos denominados <em>multi-core</em>.</p>
<p>Los procesadores <em>multi-core</em> de escritorio consumno están diseñados para ejecutar eficientemente tanto código en serie como en paralelo poniendo gran énfasis en la ejecución de un único hilo, para ello dedican espacio en el procesador para implementar ejecución fuera de orden, pipelines profundos, son superescalares y tienen cachés grandes.</p>
<p>Los procesadores <em>many-core</em> están especializados en ejecutar gran cantidad de operaciones en paralelo, para ello tienen una gran cantidad de núcleos de computación. Si un procesador <em>muti-core</em> tiene unos pocos núcleos al estar limitados el número de ellos por la coherencia de la caché los procesadores <em>many-core</em> se cuentan por miles. Las GPU son un ejemplo del procesador <em>many-core</em>.</p>
<h3 id="seguridad">Seguridad</h3>
<p>Los procesadores incluyen funcionalidades con la colaboración del sistema operativo para que la computación de los programas sea segura, con el objetivo de que un programa no se apropie de toda la capacidad de computación o que la memoria de un programa esté aislada de otros programas.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Trusted_Execution_Technology">Trusted Execution Technology</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/processor-security-rings.svg" data-gallery="data-gallery" title="Anillos de seguridad de un procesador"><img src="https://picodotdev.github.io/blog-bitix/2021/05/conceptos-teoricos-generales-de-los-procesadores-de-computadora/images/processor-security-rings.svg" width="300" height="200" alt="Anillos de seguridad de un procesador" title="Anillos de seguridad de un procesador"  class="lozad "></a></p>
<figcaption>Anillos de seguridad de un procesador</figcaption>
</figure>
</div>
<h4 id="modo-protegido">Modo protegido</h4>
<p>Los procesadores incluyen un modo de ejecución con privilegios especiales que son exclusiva del sistema operativo. Algunas instrucciones solo pueden ser ejecutadas en el modo protegido por seguridad.</p>
<p>El primer procesador con un modo protegido fabricado por Intel fue el 386.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Protected_mode">Protected mode</a></li>
</ul>
<h4 id="cifrado-de-memoria">Cifrado de memoria</h4>
<p>Para minimizar las consecuencias de una fallo de seguridad los procesadores más recientes destinados a la computación en la nube, donde el entorno de computación es compatido aún estando en ciertamedia aislado lógicamente, también incluyen funcionalidades para cifrar completamente la memoria de los datos y programas, de modo que aunque un programa tenga acceso a la memoria de otro la información al estar cifrada no sea legible.</p>
<h3 id="rendimiento-de-procesador">Rendimiento de procesador</h3>
<p>El rendimiento de un procesador se mide en instrucciones por ciclo o IPC, instrucciones por segundo o IPS, operaciones de coma flotante por segundo FLOPS, rendimiento por vatio o PPW.</p>
<p>Una variable que impacta en el rendimiento es el número de transistores con el que está construido el procesador, a mayor número de transistores es posible incluir cachés más grandes, mayor número de núcleos y mayor número de componentes. Sin embargo, un mayor número de transistores implica una mayor cantidad de energía consumida.</p>
<p>Los diseñadores de procesadores han de encontrar un equilibrio óptimo entre número de transistores, tamaño del <em>chip</em>, coste de fabricación, energía consumida y disipada en forma de calor y precio del procesador.</p>
<p>Una mejora de los procesos litográficos que permiten crear transistores de menor tamaño es beneficioso para los procesadores ya que mejoran el número de transistores que se pueden incluir en el procesador en el mismo espacio, hacen los procesadores más pequeños, la energía consumida y el calor disipado es menor y el precio de fabricación del procesador se abarata.</p>
<h3 id="tipos-de-procesadores">Tipos de procesadores</h3>
<p>La CPU es el principal componente de una computadora que se encarga de ejecutar las instrucciones del programa, otro tipo de procesador especializado son las GPU dedicadas al procesamiento de gráficos o en tareas de inteligencia artificial. Las GPU están especializadas en ejecutar gran cantidad de operaciones de forma paralela.</p>
<p>Un <em>system on chip</em> o SoC incluye la mayoría de componentes de un sistema es un único <em>chip</em> en vez de estar separados. Un SoC puede incluir tanto la CPU, la memoria, los puertos de entrada/salida y otros elementos como almacenamiento secundario, la GPU y otros elementos especializados en comunicaciones y procesamiento de datos. Esto les hace más baratos que un sistema en el que los componentes están formados por <em>chips</em> individuales.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Processor_%28computing%29">Processor</a></li>
</ul>
<h3 id="gestión-de-energía">Gestión de energía</h3>
<p>Los procesadores para reducir su consumo de energía y el calor que dispan emplean diferetnes técnicas como variar el voltaje de funcionamiento o la frecuencia de funcionamiento.</p>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/05/el-patron-de-diseno-factory-ventajas-sobre-new-y-diferencias-con-builder/</id>
        <title>El patrón de diseño Factory, ventajas sobre new y diferencias con Builder</title>
        <updated>2021-05-14T16:00:00+02:00</updated>
        <published>2021-05-14T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/05/el-patron-de-diseno-factory-ventajas-sobre-new-y-diferencias-con-builder/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El patrón de diseño <em>Factory</em> es uno de los patrones dedicados a la creación de instancias. El patrón <em>Factory</em> proporciona varias ventajas sobre la palabra reservada <em>new</em> que proporcionan los lenguajes de programación orientada a objetos para la creación de instancias. Es muy utilizado en muchas librerías, en ocasiones también es necesario implementar una clase que implemente este patrón por lo que es muy útil conocer y usar este patrón en las ocasiones que sea adecuado.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El patrón de diseño factoría o <em>Factory</em> es uno de los más empleados en multitud de ocasiones en el código propio y aunque no se implemente al ser usado en multitud de librerías también en muchos casos conviene conocer sus principios y ventajas frente a otros métodos.</p>
<p>El patrón de diseño <em>Factory</em> es uno de patrones ya identificados como útiles en los que su aplicación es adecuada. Los patrones de diseño se clasifican en las áreas funcionales de creacionales dedicados a la creación de objetos, de comportamiento centrados en la comunicación entre objetos, estructurales para mantener de forma sencilla relaciones entre entidades y finalmente los patrones de concurrencia empleados en la aplicación concurrente con múltiples hilos de ejecución.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="las-limitaciones-de-instanciar-objetos-con-la-palabra-reservada-_new_">Las limitaciones de instanciar objetos con la palabra reservada <em>new</em></h3>
<p>Los lenguajes de programación orientada a objetos modelan los conceptos que trata una aplicación mediante clases que define las propiedades del objeto y los métodos que permiten el acceso o modifican el estado del objeto, esto proporciona encapsulación y es uno de los <a href="https://picodotdev.github.io/blog-bitix/2021/03/los-conceptos-de-encapsulacion-herencia-polimorfismo-y-composicion-de-la-programacion-orientada-a-objetos/">conceptos fundamentales de la programación orientada a objetos</a> entre los que también se encuentran el polimorfismo, herencia y composición.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Shape</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">double</span> <span class="nf">getPerimeter</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">abstract</span> <span class="kt">double</span> <span class="nf">getArea</span><span class="o">();</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Shape.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Circle</span> <span class="kd">extends</span> <span class="n">Shape</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">double</span> <span class="n">radious</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Circle</span><span class="o">(</span><span class="kt">double</span> <span class="n">radious</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">radious</span> <span class="o">=</span> <span class="n">radious</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">double</span> <span class="nf">getPerimeter</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">2</span> <span class="o">*</span> <span class="n">Math</span><span class="o">.</span><span class="na">PI</span> <span class="o">*</span> <span class="n">radious</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">double</span> <span class="nf">getArea</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Math</span><span class="o">.</span><span class="na">PI</span> <span class="o">*</span> <span class="n">radious</span> <span class="o">*</span> <span class="n">radious</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Circle.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Square</span> <span class="kd">extends</span> <span class="n">Shape</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">double</span> <span class="n">length</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Square</span><span class="o">(</span><span class="kt">double</span> <span class="n">length</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">length</span> <span class="o">=</span> <span class="n">length</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">double</span> <span class="nf">getPerimeter</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">4</span> <span class="o">*</span> <span class="n">length</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">double</span> <span class="nf">getArea</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">2</span> <span class="o">*</span> <span class="n">length</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Square.java</span>
    </div>
</div>
<p>Las clases son una definición de las entidades de una aplicación en tiempo de compilación, en tiempo de ejecución un programa crea instancias individuales de las clases. En el lenguaje de programación Java para la creación de instancias de objetos se usa la palabra reservada <em>new</em>. Al emplear esta palabra reservada el lenguaje en tiempo de ejecución devuelve una referencia a la instancia creada, habitualmente se asigna la referencia a una variable.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Shape</span> <span class="n">shape1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Square</span><span class="o">(</span><span class="n">2d</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape perimeter: %s%n&#34;</span><span class="o">,</span> <span class="n">shape1</span><span class="o">.</span><span class="na">getPerimeter</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape area: %s%n&#34;</span><span class="o">,</span> <span class="n">shape1</span><span class="o">.</span><span class="na">getArea</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Shape</span> <span class="n">shape2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Circle</span><span class="o">(</span><span class="n">2d</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape perimeter: %s%n&#34;</span><span class="o">,</span> <span class="n">shape2</span><span class="o">.</span><span class="na">getPerimeter</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape area: %s%n&#34;</span><span class="o">,</span> <span class="n">shape2</span><span class="o">.</span><span class="na">getArea</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-new.java</span>
    </div>
</div>
<p>La palabra reservada <em>new</em> o una equivalente es el mecanismo que emplean muchos lenguajes de programación orientados a objetos como Java y C#. Al ser un mecanismo proporcionado por el lenguaje es sencillo de utilizar en la mayoría de ocasiones.</p>
<p>Aunque la palabra reservada <em>new</em> es una opción válida para crear instancias tiene algunas limitaciones que en algunas ocasiones requieren una alternativa.</p>
<p>Una de sus limitaciones es que la palabra reservada <em>new</em> siempre devuelve una instancia del tipo concreto que explícitamente se crea, a veces el tipo concreto de la instancia no se conoce en tiempo de compilación, por ejemplo en tiempo de compilación se sabe que se necesita un <em>Shape</em> pero solo hasta en tiempo de ejecución no se sabe si la instancia a construir es un <em>Square</em> o un <em>Circle</em>.</p>
<p>Otra limitación es que el código que usa <em>new</em> tiene la responsabilidad de crear las instancias, a veces interesa delegar esta responsabilidad en otra clase para no repetirla múltiples veces.</p>
<p>Para evitar las las limitaciones de la palabra <em>new</em> se suele emplear alguno de los patrones creacionales, como el patrón de diseño <em>Factory</em>.</p>
<h3 id="el-patrón-de-diseño-factory">El patrón de diseño Factory</h3>
<p>El patrón <em>Factory</em> es un patrón de diseño creacional que tiene como función crear instancias de objetos sin las limitaciones de la palabra reservada <em>new</em>. El patrón <em>Factory</em> solventa las dos limitaciones comentadas de <em>new</em>, pudiendo crear diferentes tipos de instancias que implementen una interfaz o hereden de una clase común, al mismo tiempo el código de creación de las instancias queda encapsulado en la clase que implementa el patrón <em>Factory</em> abstrayendo al código que lo usa de la responsabilidad de creación de instancias.</p>
<p>La creación de instancias es una de las tareas más comunes que realiza un programa, de modo que habitualmente es necesario implementar una clase factoría o en caso de usar una librería utilizar una factoría implementada por una clase de la librería. Un contenedor de IoC y su inyección de dependencias que también tienen como misión delegar en ellos la creación de instancias requieren implementar una factoría propia que el contenedor invoca.</p>
<p>El patrón <em>Factory</em> es tan simple como una clase con uno o varios métodos que devuelven la instancia que la factoría crea, el método de la factoría puede recibir parámetros. El método factoría puede ser estático si la creación de las instancias depende de únicamente los parámetros que recibe el método o el método puede ser de instancia y estar basado además de los parámetros que recibe en propiedades de la instancia de la factoría.</p>
<p>El patrón <em>Factory</em> hay dos categorías: <em>Factory Method Pattern</em> que se basan en un único método y <em>Abstract Factory Pattern</em> que son una indirección más pudiendo sustituir una implementación de factoría por otra haciendo posible devolver cada una diferentes instancias.</p>
<p>Como muchos patrones de diseño añade cierta complejidad en el diseño de las clases del programa con lo que su uso debe estar justificado con el objetivo de simplificar el código o la necesidad de evitar las limitaciones de la palabra <em>new</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/05/el-patron-de-diseno-factory-ventajas-sobre-new-y-diferencias-con-builder/images/factory-pattern_hu4b0e5b64764ca232fd8a3cd1a9bf2738_28764_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama de clases del patrón de diseño Factory"><img src="https://picodotdev.github.io/blog-bitix/2021/05/el-patron-de-diseno-factory-ventajas-sobre-new-y-diferencias-con-builder/images/factory-pattern_hu4b0e5b64764ca232fd8a3cd1a9bf2738_28764_650x450_fit_box_3.png" width="500" height="240" alt="Diagrama de clases del patrón de diseño Factory" title="Diagrama de clases del patrón de diseño Factory"  class="lozad "></a></p>
<figcaption>Diagrama de clases del patrón de diseño Factory</figcaption>
</figure>
</div>
<h4 id="diferencias-con-el-patrón-de-diseño-_builder_">Diferencias con el patrón de diseño <em>Builder</em></h4>
<p>El patrón de diseño <em>Builder</em> es otro patrón creacional dedicado a la creación de instancias, aunque comparte objetivos las implementación es diferente del patrón <em>Factory</em>.</p>
<p>Una diferencia entre el patrón <em>Factory</em> y el patrón <em>Builder</em> es que el patrón <em>Factory</em> crea la instancia en un único paso con la invocación de un método de la factoría que lo devuelve inmediatamente, el patrón <em>Builder</em> suele requerir la invocación de varios métodos y un método final <em>build</em> que realiza la creación de la instancia con una API fluída.</p>
<p>Los <em>Builder</em> son objetos con estado y requieren crear una instancia de <em>Builder</em>, el patrón <em>Factory</em> no requiere crear una instancia y se puede compartir entre varios objetos que la necesitan.</p>
<p>Por el contrario el patrón <em>Builder</em> proporciona más control sobre los pasos de la creación de la instancia y proporciona más flexibilidad para variar la representación interna de la instancia creada. Otra diferencia es que el <em>Builder</em> crea instancias con diferente composición de objetos.</p>
<h3 id="ejemplo-de-patrón-de-diseño-_factory_">Ejemplo de patrón de diseño <em>Factory</em></h3>
<p>En el siguiente ejemplo de implementación en Java de patrón <em>Factory Method</em>  se observa que el método factoría en función del parámetro se devuelve una instancia u otra empleando una sentencia <em>if-else</em>. Esta factoría además contiene otros dos métodos de factoría específicos para tipos concretos de <em>Shape</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ShapeFactory</span> <span class="o">{</span>&#10;&#10;   <span class="kd">public</span> <span class="kd">static</span> <span class="n">Shape</span> <span class="nf">create</span><span class="o">(</span><span class="n">String</span> <span class="n">type</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">if</span> <span class="o">(</span><span class="n">type</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;square&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="k">new</span> <span class="n">Square</span><span class="o">(</span><span class="n">1</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">type</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;circle&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="k">new</span> <span class="n">Circle</span><span class="o">(</span><span class="n">1</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">throw</span> <span class="k">new</span> <span class="n">IllegalArgumentException</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">}</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="kd">public</span> <span class="kd">static</span> <span class="n">Square</span> <span class="nf">createSquare</span><span class="o">(</span><span class="kt">double</span> <span class="n">length</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="k">new</span> <span class="n">Square</span><span class="o">(</span><span class="n">length</span><span class="o">);</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="kd">public</span> <span class="kd">static</span> <span class="n">Circle</span> <span class="nf">createCircle</span><span class="o">(</span><span class="kt">double</span> <span class="n">radious</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="k">new</span> <span class="n">Circle</span><span class="o">(</span><span class="n">radious</span><span class="o">);</span>&#10;   <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ShapeFactory.java</span>
    </div>
</div>
<p>La sentencia <em>if-else</em> hace que no se cumpla el principio <em>O</em> (<em>Open-closed</em>) de SOLID, si se añade un nuevo tipo requiere modificar el código del método en vez de proporcionar una extensión. Para <a href="https://picodotdev.github.io/blog-bitix/2015/10/como-crear-clases-factoria-sin-usar-if-else/">evitar la sentencia <em>if-else</em> en una factoría</a> hay varias opciones.</p>
<p>Con la incorporación de los <em>default methods</em> en Java el método factoría es posible implementarlo en una interfaz de <em>Shape</em> no requiriendo una clase <em>ShapeFactory</em> dedicada que lo contenga.</p>
<p>El siguiente programa crea una figura según el parámetro indicado que solo se conoce en tiempo de ejecución según el argumento proporcionado al lanzar el programa y una instancia de cada tipo de figura, se observa que la clase <em>Main</em> no utiliza directamente los constructores de ninguna figura.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">shapeType</span> <span class="o">=</span> <span class="n">args</span><span class="o">[</span><span class="n">0</span><span class="o">];</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Shape</span> <span class="n">shape1</span> <span class="o">=</span> <span class="n">ShapeFactory</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">shapeType</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape perimeter: %s%n&#34;</span><span class="o">,</span> <span class="n">shape1</span><span class="o">.</span><span class="na">getPerimeter</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape area: %s%n&#34;</span><span class="o">,</span> <span class="n">shape1</span><span class="o">.</span><span class="na">getArea</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Shape</span> <span class="n">shape2</span> <span class="o">=</span> <span class="n">ShapeFactory</span><span class="o">.</span><span class="na">createSquare</span><span class="o">(</span><span class="n">2d</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape perimeter: %s%n&#34;</span><span class="o">,</span> <span class="n">shape2</span><span class="o">.</span><span class="na">getPerimeter</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape area: %s%n&#34;</span><span class="o">,</span> <span class="n">shape2</span><span class="o">.</span><span class="na">getArea</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Shape</span> <span class="n">shape3</span> <span class="o">=</span> <span class="n">ShapeFactory</span><span class="o">.</span><span class="na">createCircle</span><span class="o">(</span><span class="n">2d</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape perimeter: %s%n&#34;</span><span class="o">,</span> <span class="n">shape3</span><span class="o">.</span><span class="na">getPerimeter</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Shape area: %s%n&#34;</span><span class="o">,</span> <span class="n">shape3</span><span class="o">.</span><span class="na">getArea</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-factory.java</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Software_design_pattern#Creational_patterns">Patrones de diseño creacionales</a></li>
<li><a href="http://www.oodesign.com/factory-pattern.html">Patrón de diseño Factoría</a></li>
<li><a href="https://medium.com/javarevisited/design-patterns-101-factory-vs-builder-vs-fluent-builder-da2babf42113">Software Design Patterns: Factory and Builder in a Nutshell</a></li>
<li><a href="https://dzone.com/articles/everything-you-need-to-know-about-factory-and-buil">Everything You Need to Know About Factory and Builder Design Patterns</a></li>
<li><a href="http://stackoverflow.com/questions/757743/what-is-the-difference-between-builder-design-pattern-and-factory-design-pattern">What is the difference between Builder Design pattern and Factory Design pattern?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/05/herramientas-para-mejorar-una-pagina-web-en-seo-conformidad-estandares-y-rendimiento/</id>
        <title>Herramientas para mejorar una página web en SEO, conformidad estándares y rendimiento</title>
        <updated>2021-05-09T01:00:00+02:00</updated>
        <published>2021-05-09T01:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/05/herramientas-para-mejorar-una-pagina-web-en-seo-conformidad-estandares-y-rendimiento/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Hay múltiples herramientas que permiten evaluar y mejorar un sitio web en la conformidad de estándares web, rendimiento y SEO. Con los resultados de estas herramientas se han de realizar correcciones en el sitio web para mejorar las páginas del sitio web. La conformidad a estándares web, rendimiento, SEO y enlaces rotos son criterios por los que los buscadores clasifican las páginas en las páginas de resultados. Con un mejor posicionamiento es posible mejorar el número de visitas que los buscadores atraen al sitio web y realizando cambios mejorar la experiencia de usuario.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<p>Para todos los sitios web es importante y para algunos la fuente más importante de visitas que recibe un sitio web es a través de búsquedas orgánicas de buscadores como <a href="https://www.google.es/">Google</a> o como <a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/">el buscador DuckDuckGo que respeta tu privacidad</a>.</p>
<p>El número de visitas depende de la calidad del contenido, el número de búsquedas que coincide con ese contenido y la competencia por las palabras clave con otros sitios web o algo tan simple como el título de los artículos.</p>
<p>Sin embargo, otra parte para maximizar el rendimiento de un sitio web se debe a otros factores que los rastreadores e indexadores web utilizan para mostrar en las páginas de resultados de las búsquedas y su posición con otros resultados. Conviene que el HTML y CSS de la página cumpla con los estándares, tenga un buen rendimiento, la estructura de la página y contenido tenga palabras clave o no haya enlaces rotos a otras páginas o recursos en el sitio web.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="evaluar-seo">Evaluar SEO</h3>
<p>El SEO es un arte ya que no hay una medida precisa de qué criterios emplean los buscadores para clasificar las páginas indexadas en las páginas de resultados. Sin embargo, sí hay algunas pautas que sí contribuyen a un mejor posicionamiento.</p>
<p>Incluir palabras clave y conocer la intención de búsqueda de los usuarios para satisfacer su búsqueda con un contenido apropiado. Asignar un título adecuado y preciso teniendo en cuenta la intención de búsqueda del usuario no mejora el SEO pero si mejora el número de clics que los usuarios lo acceden.</p>
<p><a href="https://picodotdev.github.io/blog-bitix/2021/05/que-son-los-datos-estructurados-y-para-que-sirven-con-ejemplos/">Los datos estructurados o enriquecidos web</a> permiten a los buscadores mostrar en la página de resultados las páginas con un formato que destaca sobre el resto, como incluir una imagen o vídeo. Los datos enriquecidos al igual que un buen título mejoran el porcentaje de usuarios que hacen click en el resultado y por tanto ayuda a conseguir más visitas.</p>
<p>La herramienta Google Search Console proporciona métricas de visitas, informa de los errores que se detectan en la indexación o mejoras a realizar en las páginas asi como cuales son las principales palabras clave, artículos, tasa de clics o CTR y posición de las páginas en los resultados. Otros análisis de SEO son evaluar las páginas según las palabras clave y las pálabras clave de la competencia, algunas de estas herramientas son de pago pero ofrecen unas métricas básicas de modo gratuito.</p>
<ul>
<li><a href="https://search.google.com/search-console">Google Search Console</a></li>
<li><a href="https://support.google.com/webmasters/topic/9456557?hl=es&amp;ref_topic=4558844">Ayuda de Search Console</a></li>
<li><a href="https://www.alexa.com/siteinfo/picodotdev.github.io">Alexa</a></li>
<li><a href="https://ahrefs.com/">Ahrefs</a></li>
<li><a href="https://hypestat.com/info/picodotdev.github.io">Hypestat</a></li>
<li><a href="https://moz.com/domain-analysis?site=picodotdev.github.io">moz</a></li>
<li><a href="https://search.google.com/test/rich-results">Evaluar datos enriquecidos de una página</a></li>
</ul>
<h3 id="evaluar-conformidad-a-estándares-web">Evaluar conformidad a estándares web</h3>
<p>La organización <a href="https://www.w3.org/">W3C</a> es la encargada de definir los estándares de la web. Cumplir los estándares es importante ya que de lo contrario es posible que algún navegador o versión de los mismo no muestre correctamente el contenido del sitio web, lo que ocasiona la pérdida de una visitas por una mala experiencia de usuario. Al mismo tiempo en caso de que el contenido de la página no cumpla los estándares los rastreadores quizá no sean capaces de indexar todo el contenido del sitio web o en la clasificación de las páginas de resultados acabe posicionado peor que otros artículos.</p>
<p>La W3C proporciona tres herramientas para evaluar la conformidad de una página a los estándares web para el HTML y <em>feeds</em>. En caso de que el sitio web genere contenido en formato <em>amp</em> promovido por Google hay otra herramienta para evaluar la conformidad. Conociendo los elementos en los que la página no es conforme se han de realizar cambios para solventar los errores.</p>
<ul>
<li><a href="https://validator.w3.org/">Evaluar conformidad contenido HTML</a></li>
<li><a href="https://jigsaw.w3.org/css-validator/">Evaluar conformidad hojas de estilo CSS</a></li>
<li><a href="https://validator.w3.org/feed/check.cgi">Evaluar conformidad <em>feeds</em> de suscripción</a></li>
<li><a href="https://validator.ampproject.org/">Evaluar conformidad de contenido <em>amp</em></a></li>
</ul>
<h4 id="accesibilidad">Accesibilidad</h4>
<p>Otro aspecto de conformidad de estándares que ha de ser tenido en cuenta es hacer que las páginas del sitio web sean accesibles para que el acceder a la páginas no suponga ninguna barrera a ningún usuario incluyendo a aquellos que poseen algún tipo de discapacidad. Algunas pruebas de accesibilidad es incluir un texto alternativo para todas las imágenes de la página web y que el contraste de color de la fuente y de fondo tenga un mínimo de diferencia.</p>
<ul>
<li><a href="https://www.w3.org/WAI/ER/tools/">Herramientas para evaluar la accesibilidad</a></li>
<li><a href="https://www.webaccessibility.com/">Test de accesibilidad de una página</a></li>
</ul>
<h3 id="evaluar-rendimiento">Evaluar rendimiento</h3>
<p>El tiempo que tarda en descargar una página es otro criterio que los buscadores tiene en cuenta para clasificar los resultados. Se considera como positivo para la experiencia de usuario que una página tarde el menor tiempo posible en descargarse por ello los motores de búsqueda lo tienen en cuenta en la indexación. En el tiempo de descarga influyen factores como el tamaño en KiB de la página, número de peticiones y recursos que carga la página.</p>
<p>Estas dos herramientas proporcionan información sobre la página, con resultado proporcionado es posible hacer modificaciones para tratar de mejorar en los puntos con peor evaluación.</p>
<ul>
<li><a href="https://developers.google.com/speed/pagespeed/insights/">PageSpeed</a></li>
<li><a href="https://webspeedtest.cloudinary.com/">Website Speed Test</a></li>
<li><a href="https://gtmetrix.com/">Medir la velocidad de un sitio web</a></li>
</ul>
<h3 id="buscar-enlaces-rotos">Buscar enlaces rotos</h3>
<p>Con el paso de tiempo algunos de los enlaces incluidos en los artículos quedarán rotos al cambiarlos de ubicación el propietario de esos sitios web. Que un sitio web contenga enlaces rotos proporciona una mala experiencia de usuario y posiblemente los buscadores lo tomen como un criterio negativo si el sitio web tiene muchos enlaces rotos.</p>
<p>De forma periódica conviene <a href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/">analizar el sitio web para buscar enlaces o recursos rotos</a>. También hay herramientas para automatizar la búsqueda y con los resultados corregirlos.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/05/que-son-los-datos-estructurados-y-para-que-sirven-con-ejemplos/</id>
        <title>Qué son los datos estructurados y para que sirven con ejemplos</title>
        <updated>2021-05-02T09:00:00+02:00</updated>
        <published>2021-05-02T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/05/que-son-los-datos-estructurados-y-para-que-sirven-con-ejemplos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los datos estructurados son datos que describen los elementos relevantes que contiene la página, facilitan la tarea a los buscadores de analizar el contenido y extraer la información para su indexación y la aparición en las páginas de resultados. Incluir datos estructurados en cada página mejora el SEO y permite que en las páginas de resultados de los buscadores se muestre con un formato enriquecido que destaca sobre el resto de resultados.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<p>Los buscadores rastrean la web en busca de páginas que una vez indexadas les permite mostrarlas en la página de resultados las más relevantes para las palabras clave introducidas al realizar la búsqueda.</p>
<p>Los <a href="https://developers.google.com/search/docs/advanced/sitemaps/overview?hl=es">archivos <em>sitemap.xml</em></a> permiten a los buscadores conocer todas páginas de las que se compone un sitio web. Los rastreadores los descargan cada cierto tiempo, de forma paulatina analizan los enlaces proporcionados en el <em>sitemap.xml</em> y los indexa para mostrarlos como resultados si es un contenido relevante para las búsquedas de los usuarios.</p>
<p>Mostrar los enlaces más relevantes de una búsqueda no es una tarea sencilla, el algoritmo de indexación y del motor de búsqueda han de conocer qué es lo que trata de buscar el usuario y han de conocer cúal es el contenido de cada página. Conocer el contenido de una página no es sencillo ya que las páginas están en formato HTML que ofrece poca ayuda a los buscadores de la información que contienen.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="qué-son-los-datos-estructurados-en-una-página-web">Qué son los datos estructurados en una página web</h3>
<p>Los buscadores hacen el mejor esfuerzo por entender el contenido de las páginas, los datos estructurados facilitan en gran medida el análisis del contenido. Los datos estructurados son un formato estandarizado que permite proporcionar de forma más precisa cuál es el contenido e información de una página. Para los buscadores obtener la información de la página es más sencillo y preciso obtener de los datos estructurados que analizando el texto del contenido HTML sin ninguna estructura.</p>
<p>Además, en las páginas de resultados los buscadores para las páginas que proporcionan datos estructurados son capaces de mostrar los resultados enriquecidos, por ejemplo, incluyendo una imagen, una descripción, una imagen o ciertos datos específicos del dato estructurado como ubicación o fecha.</p>
<p>Los datos estructurados son buenos para el SEO ya que los buscadores conocen mejor el contenido de la página. Por otro lado, los resultados enriquecidos destacan más sobre los que no son consiguiendo que los usuarios hagan más <em>clics</em> en la página de resultados y atrayendo más visitantes a un sitio web.</p>
<p>El siguiente es un ejemplo de contenido que contiene datos como un título o fecha pero que no utiliza ningún formato de datos estructurados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>Apple Spring Forward Event Live Blog<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>Welcome to live coverage of the Apple Spring Forward …<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>See the new flagship Apple Retail Store in West Lake, China.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>March 9, 2015 1:17 PM<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;http://images.apple.com/live/2015-mar-event/images/908d2e_large_2x.jpg&#34;</span> <span class="p">/&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>iPhone is growing at nearly twice the rate of the rest of the smartphone market.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>March 9, 2015 1:13 PM<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;http://images.apple.com/live/2015-mar-event/images/573cb_xlarge_2x.jpg&#34;</span><span class="p">/&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>Coming this April, HBO NOW will be available exclusively in the U.S. on Apple TV and the App Store.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>March 9, 2015 1:08PM<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>It&#39;s $14.99 a month.<span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span> And for a limited time, …<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>no-structured-data.html</span>
    </div>
</div>
<h3 id="formatos-de-datos-estructurados">Formatos de datos estructurados</h3>
<p>Hay varios formatos de datos estructurados, el formato recomendado por Google es utilizar JSON-LD.</p>
<h4 id="json-ld">JSON-LD</h4>
<p><a href="https://json-ld.org/">JSON for Linking Data</a> o JSON-LD es un formato de datos estructurados que se especifica en formato JSON y se incluye en la página normalmente en la cabecera separada del contenido, también se puede incluir en el cuero de la página. La diferencia de este formato es que el contenido no está mezclado con los datos estructurados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;application/ld+json&#34;</span><span class="p">&gt;</span>&#10;  <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;@context&#34;</span><span class="o">:</span><span class="s2">&#34;https://schema.org&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;@type&#34;</span><span class="o">:</span><span class="s2">&#34;LiveBlogPosting&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;@id&#34;</span><span class="o">:</span><span class="s2">&#34;http://techcrunch.com/2015/03/08/apple-watch-event-live-blog&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;about&#34;</span><span class="o">:</span><span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span><span class="s2">&#34;Event&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;startDate&#34;</span><span class="o">:</span><span class="s2">&#34;2015-03-09T13:00:00-07:00&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;name&#34;</span><span class="o">:</span><span class="s2">&#34;Apple Spring Forward Event&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;coverageStartTime&#34;</span><span class="o">:</span><span class="s2">&#34;2015-03-09T11:30:00-07:00&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;coverageEndTime&#34;</span><span class="o">:</span><span class="s2">&#34;2015-03-09T16:00:00-07:00&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;headline&#34;</span><span class="o">:</span><span class="s2">&#34;Apple Spring Forward Event Live Blog&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;description&#34;</span><span class="o">:</span><span class="s2">&#34;Welcome to live coverage of the Apple Spring Forward …&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;liveBlogUpdate&#34;</span><span class="o">:</span><span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;@type&#34;</span><span class="o">:</span><span class="s2">&#34;BlogPosting&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;headline&#34;</span><span class="o">:</span><span class="s2">&#34;Coming this April, HBO NOW will be available exclusively in the U.S. on Apple TV and the App Store.&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;datePublished&#34;</span><span class="o">:</span><span class="s2">&#34;2015-03-09T13:08:00-07:00&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;articleBody&#34;</span><span class="o">:</span> <span class="s2">&#34;It&#39;s $14.99 a month.&lt;br&gt; And for a limited time, …&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;@type&#34;</span><span class="o">:</span><span class="s2">&#34;BlogPosting&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;headline&#34;</span><span class="o">:</span><span class="s2">&#34;iPhone is growing at nearly twice the rate of the rest of the smartphone market.&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;datePublished&#34;</span><span class="o">:</span><span class="s2">&#34;2015-03-09T13:13:00-07:00&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;image&#34;</span><span class="o">:</span><span class="s2">&#34;http://images.apple.com/live/2015-mar-event/images/573cb_xlarge_2x.jpg&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;@type&#34;</span><span class="o">:</span><span class="s2">&#34;BlogPosting&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;headline&#34;</span><span class="o">:</span><span class="s2">&#34;See the new flagship Apple Retail Store in West Lake, China.&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;datePublished&#34;</span><span class="o">:</span><span class="s2">&#34;2015-03-09T13:17:00-07:00&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;video&#34;</span><span class="o">:</span><span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span><span class="s2">&#34;VideoObject&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;thumbnail&#34;</span><span class="o">:</span><span class="s2">&#34;http://images.apple.com/live/2015-mar-event/images/908d2e_large_2x.jpg&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;  <span class="p">}</span>&#10;<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>json-ld.html</span>
    </div>
</div>
<h4 id="microdatos">Microdatos</h4>
<p>El formato <a href="https://www.w3.org/TR/microdata/">HTML Microdata</a> define nuevos atributos HTML para embeber datos simples legibles por computadoras en documentos HTML. Es similar a RDFa pero menos expresivo, simple de aprender y procesar  pero no ofrece el mismo nivel para la internacionalización, por ello en su lugar se suele recomendar usar RDFa o JSON-LD.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">itemid</span><span class="o">=</span><span class="s">&#34;http://techcrunch.com/2015/03/08/apple-watch-event-live-blog&#34;</span> <span class="na">itemscope</span> <span class="na">itemtype</span><span class="o">=</span><span class="s">&#34;https://schema.org/LiveBlogPosting&#34;</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;about&#34;</span> <span class="na">itemscope</span> <span class="na">itemtype</span><span class="o">=</span><span class="s">&#34;https://schema.org/Event&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">span</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;startDate&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T13:00:00-07:00&#34;</span><span class="p">&gt;</span>March 9, 2015 1:17 PM<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;name&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;Apple Spring Forward Event&#34;</span> <span class="p">/&gt;</span>&#10;  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;coverageStartTime&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T11:30:00-07:00&#34;</span> <span class="p">/&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;coverageEndTime&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T16:00:00-07:00&#34;</span> <span class="p">/&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;headline&#34;</span><span class="p">&gt;</span>Apple Spring Forward Event Live Blog<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">p</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;description&#34;</span><span class="p">&gt;</span>Welcome to live coverage of the Apple Spring Forward …<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;liveBlogUpdate&#34;</span> <span class="na">itemscope</span> <span class="na">itemtype</span><span class="o">=</span><span class="s">&#34;https://schema.org/BlogPosting&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">h2</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;headline&#34;</span><span class="p">&gt;</span>See the new flagship Apple Retail Store in West Lake, China.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">span</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;datePublished&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T13:17:00-07:00&#34;</span><span class="p">&gt;</span>March 9, 2015 1:17 PM<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;video&#34;</span> <span class="na">itemscope</span> <span class="na">itemtype</span><span class="o">=</span><span class="s">&#34;https://schema.org/VideoObject&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">&lt;</span><span class="nt">img</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;thumbnail&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;http://images.apple.com/live/2015-mar-event/images/908d2e_large_2x.jpg&#34;</span> <span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;liveBlogUpdate&#34;</span> <span class="na">itemscope</span> <span class="na">itemtype</span><span class="o">=</span><span class="s">&#34;https://schema.org/BlogPosting&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">h2</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;headline&#34;</span><span class="p">&gt;</span>iPhone is growing at nearly twice the rate of the rest of the smartphone market.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">span</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;datePublished&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T13:13:00-07:00&#34;</span><span class="p">&gt;</span>March 9, 2015 1:13 PM<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;image&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;http://images.apple.com/live/2015-mar-event/images/573cb_xlarge_2x.jpg&#34;</span><span class="p">/&gt;</span>&#10;  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;liveBlogUpdate&#34;</span> <span class="na">itemscope</span> <span class="na">itemtype</span><span class="o">=</span><span class="s">&#34;https://schema.org/BlogPosting&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">h2</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;headline&#34;</span><span class="p">&gt;</span>Coming this April, HBO NOW will be available exclusively in the U.S. on Apple TV and the App Store.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">span</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;datePublished&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T13:08:00-07:00&#34;</span><span class="p">&gt;</span>March 9, 2015 1:08PM<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span> <span class="na">itemprop</span><span class="o">=</span><span class="s">&#34;articleBody&#34;</span><span class="p">&gt;</span>It&#39;s $14.99 a month.<span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span> And for a limited time, …<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>microdata.html</span>
    </div>
</div>
<h4 id="rdfa">RDFa</h4>
<p><a href="https://rdfa.info/">RDFa</a> es una extensión de HTML que ayuda a marcar los datos de la página, embebiendo ciertos atributos en las etiquetas HTML.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">vocab</span><span class="o">=</span><span class="s">&#34;https://schema.org/&#34;</span> <span class="na">typeof</span><span class="o">=</span><span class="s">&#34;LiveBlogPosting&#34;</span> <span class="na">resource</span><span class="o">=</span><span class="s">&#34;http://techcrunch.com/2015/03/08/apple-watch-event-live-blog&#34;</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;about&#34;</span> <span class="na">typeof</span><span class="o">=</span><span class="s">&#34;Event&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">span</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;startDate&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T13:00:00-07:00&#34;</span><span class="p">&gt;</span>March 9, 2015 1:17 PM<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;name&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;Apple Spring Forward Event&#34;</span> <span class="p">/&gt;</span>&#10;  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;coverageStartTime&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T11:30:00-07:00&#34;</span> <span class="p">/&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;coverageEndTime&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T16:00:00-07:00&#34;</span> <span class="p">/&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">h1</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;headline&#34;</span><span class="p">&gt;</span>Apple Spring Forward Event Live Blog<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">p</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;description&#34;</span><span class="p">&gt;</span>Welcome to live coverage of the Apple Spring Forward …<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;liveBlogUpdate&#34;</span> <span class="na">typeof</span><span class="o">=</span><span class="s">&#34;BlogPosting&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">h2</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;headline&#34;</span><span class="p">&gt;</span>See the new flagship Apple Retail Store in West Lake, China.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">span</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;datePublished&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T13:17:00-07:00&#34;</span><span class="p">&gt;</span>March 9, 2015 1:17 PM<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;video&#34;</span> <span class="na">typeof</span><span class="o">=</span><span class="s">&#34;VideoObject&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">&lt;</span><span class="nt">img</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;thumbnail&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;http://images.apple.com/live/2015-mar-event/images/908d2e_large_2x.jpg&#34;</span> <span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;liveBlogUpdate&#34;</span> <span class="na">typeof</span><span class="o">=</span><span class="s">&#34;BlogPosting&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">h2</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;headline&#34;</span><span class="p">&gt;</span>iPhone is growing at nearly twice the rate of the rest of the smartphone market.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">span</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;datePublished&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T13:13:00-07:00&#34;</span><span class="p">&gt;</span>March 9, 2015 1:13 PM<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;image&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;http://images.apple.com/live/2015-mar-event/images/573cb_xlarge_2x.jpg&#34;</span><span class="p">/&gt;</span>&#10;  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;liveBlogUpdate&#34;</span> <span class="na">typeof</span><span class="o">=</span><span class="s">&#34;BlogPosting&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">h2</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;headline&#34;</span><span class="p">&gt;</span>Coming this April, HBO NOW will be available exclusively in the U.S. on Apple TV and the App Store.<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">span</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;datePublished&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;2015-03-09T13:08:00-07:00&#34;</span><span class="p">&gt;</span>March 9, 2015 1:08PM<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span> <span class="na">property</span><span class="o">=</span><span class="s">&#34;articleBody&#34;</span><span class="p">&gt;</span>It&#39;s $14.99 a month.<span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span> And for a limited time, …<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>rdfa.html</span>
    </div>
</div>
<h3 id="tipos-de-datos-estructurados">Tipos de datos estructurados</h3>
<p>Hay múltiples tipos de datos estructurados según el contenido de la página. Por ejemplo, si el contenido de una página trata sobre un producto un dato es la imagen del producto, su nombre y descripción, su precio o su valoración. En el caso de un evento, por ejemplo un evento deportivo o concierto, sus datos específicos son la ubicación en la que tiene lugar, su hora de comienzo y final, además de también los participantes en el evento una su descripción.</p>
<p>Algunos datos son compartidos por múltiples tipos de datos estructurados, como un nombre o una descripción otros son específicos según el tipo de datos estructurados y contenido de la página. También algunos datos estructurados son comunes a todas las páginas como el autor del contenido o la organización que lo publica.</p>
<p>En la página <a href="https://schema.org/">schema.org</a> está documentados los tipos de datos estructurados y que datos tiene cada uno. Algunas propiedades son obligatorias otras son opcionales.</p>
<p>Algunos tipos de datos estructurados son:</p>
<ul>
<li>Trabajos creativos: libro, película, música, receta, series de televisión, &hellip;</li>
<li>Objetos embebidos no de texto: objeto de audio, imagen, vídeo, &hellip;</li>
<li>Evento como un espectáculo deportivo o musical.</li>
<li>Organización, como empresas.</li>
<li>Persona</li>
<li>Lugares, negocios locales, restaurantes, comercios, museos, &hellip;</li>
<li>Productos, ofertas, &hellip;</li>
<li>Análisis de productos</li>
<li>Acciones</li>
</ul>
<h3 id="ejemplo-de-datos-estructurados">Ejemplo de datos estructurados</h3>
<p>Hay múltiples formas de incluir los datos estructurados en una página web. Una de ellas es embebiendo en el HTML los datos estructurados añadiendo ciertos atributos a etiquetas HTML.</p>
<p>Para separar el contenido HTML de los datos estructurados se puede utilizar <em>json-ld</em>, es la forma que recomienda Google para incluir datos estructurados en una página. Los datos estructurados <em>json-ld</em> se suelen incluir en la cabecera de la página en formato JSON.</p>
<p>El el caso de mi blog en el que publico artículos el dato estructurado adecuado para cada publicación es <a href="https://schema.org/BlogPosting">BlogPosting</a>. Este tipo de dato estructurado tiene un título del artículo, una imagen que represente el contenido del artículo, una descripción, fecha de publicación y fecha de última actualización entre otros datos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;es&#34;</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;&#10;...&#10;&#10;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;application/ld+json&#34;</span><span class="p">&gt;</span>&#10;<span class="p">{</span>&#10;  <span class="s2">&#34;@context&#34;</span><span class="o">:</span> <span class="s2">&#34;https://schema.org&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span> <span class="s2">&#34;BlogPosting&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;mainEntityOfPage&#34;</span><span class="o">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span> <span class="s2">&#34;WebPage&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;@id&#34;</span><span class="o">:</span> <span class="s2">&#34;https://picodotdev.github.io/blog-bitix/2021/01/analitica-web-con-matomo-como-alternativa-a-google-analytics/&#34;</span>&#10;  <span class="p">},</span>&#10;  <span class="s2">&#34;headline&#34;</span><span class="o">:</span> <span class="s2">&#34;Analítica web con Matomo como alternativa a Google Analytics&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;image&#34;</span><span class="o">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span> <span class="s2">&#34;ImageObject&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;url&#34;</span><span class="o">:</span> <span class="s2">&#34;https://picodotdev.github.io/blog-bitix/assets/images/structured-data/matomo-750.png&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;  <span class="s2">&#34;datePublished&#34;</span><span class="o">:</span> <span class="s2">&#34;2021-01-15T17:00:00+01:00&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;dateModified&#34;</span><span class="o">:</span> <span class="s2">&#34;2021-01-15T17:00:00+01:00&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;inLanguage&#34;</span><span class="o">:</span> <span class="s2">&#34;es&#34;</span><span class="p">,</span>&#10;  &#10;  <span class="s2">&#34;wordCount&#34;</span><span class="o">:</span> <span class="s2">&#34;1181&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;license&#34;</span><span class="o">:</span> <span class="s2">&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;author&#34;</span><span class="o">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span> <span class="s2">&#34;Person&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;name&#34;</span><span class="o">:</span> <span class="s2">&#34;picodotdev&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;description&#34;</span><span class="o">:</span> <span class="s2">&#34;Ingeniero de software. I ♥ Java, GNU/Linux and libre software.&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;url&#34;</span><span class="o">:</span> <span class="s2">&#34;https://twitter.com/picodotdev/&#34;</span>&#10;  <span class="p">},</span>&#10;  <span class="s2">&#34;publisher&#34;</span><span class="o">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span> <span class="s2">&#34;Organization&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;name&#34;</span><span class="o">:</span> <span class="s2">&#34;Blog Bitix&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;logo&#34;</span><span class="o">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;@type&#34;</span><span class="o">:</span> <span class="s2">&#34;ImageObject&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;url&#34;</span><span class="o">:</span> <span class="s2">&#34;https://picodotdev.github.io/blog-bitix/assets/images/structured-data/blogbitix-750.png&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;  <span class="p">},</span>&#10;  <span class="s2">&#34;description&#34;</span><span class="o">:</span> <span class="s2">&#34;Matomo es una alternativa a Google Analytics con funciones similares que cubren las necesidades de la mayoría de sitios web. Es software libre con algunas funciones &lt;em&gt;premium&lt;/em&gt; que requieren comprar una licencia anual de uso. Matomo se puede hospedar &lt;em&gt;on-premise&lt;/em&gt; que requiere administrar esa infraestructura o en la nube ofrecida por la propia Matomo. En el artículo muestro en un ejemplo como empezar a usar Matomo en un sitio web con Docker.&#34;</span>&#10;<span class="p">}</span>&#10;<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;application/ld+json&#34;</span><span class="p">&gt;</span>&#10;<span class="p">{</span>&#10;  <span class="s2">&#34;@context&#34;</span><span class="o">:</span> <span class="s2">&#34;https://schema.org&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span> <span class="s2">&#34;Organization&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;name&#34;</span><span class="o">:</span> <span class="s2">&#34;Blog Bitix&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;description&#34;</span><span class="o">:</span> <span class="s2">&#34;Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;url&#34;</span><span class="o">:</span> <span class="s2">&#34;https://picodotdev.github.io/blog-bitix/&#34;</span><span class="p">,</span>&#10;  <span class="s2">&#34;logo&#34;</span><span class="o">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;@type&#34;</span><span class="o">:</span> <span class="s2">&#34;ImageObject&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;url&#34;</span><span class="o">:</span> <span class="s2">&#34;https://picodotdev.github.io/blog-bitix/assets/images/structured-data/blogbitix-750.png&#34;</span>&#10;  <span class="p">}</span>&#10;<span class="p">}</span>&#10;<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;&#10;...&#10;&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;  ...&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>json-ld-blogbitix.html</span>
    </div>
</div>
<h3 id="herramienta-para-validar-los-datos-estructurados">Herramienta para validar los datos estructurados</h3>
<p>Una vez incluidos los datos estructurados es recomendable validarlos, esto permite conocer con exactitud qué está extrayendo un buscador. Google ofrece una <a href="https://search.google.com/structured-data/testing-tool/">herramienta de prueba de datos estructurados</a>, basta con proporcionar la URL de la página y en el resultado se muestran los distintos tipos de datos estructurados que ha extraído de la página y sus propiedades. Para uno de los artículos del <em>blog</em>, <a href="https://picodotdev.github.io/blog-bitix/2021/01/analitica-web-con-matomo-como-alternativa-a-google-analytics/">Analítica web con Matomo como alternativa a Google Analytics</a>, la herramienta de análisis de Google muestra como resultado tipos de datos estructurados que reconoce que están incluídos en la cabecera de la página.</p>
<ul>
<li><a href="https://search.google.com/structured-data/testing-tool/u/0/#url=https%3A%2F%2Fpicodotdev.github.io%2Fblog-bitix%2F2021%2F01%2Fanalitica-web-con-matomo-como-alternativa-a-google-analytics%2F">Herramienta de prueba de datos estructurados de una página de Blog Bitix</a></li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developers.google.com/search/docs/guides/intro-structured-data">Cómo funcionan los datos estructurados</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="web"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/</id>
        <title>Guía de instalación y uso básico de FreeBSD</title>
        <updated>2021-04-30T16:30:00+02:00</updated>
        <published>2021-04-30T16:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Aún con su reducida cuota de uso las distribuciones GNU/Linux son conocidas por muchas personas como alternativa a los sistemas operativos comerciales Windows de Microsoft y macOS de Apple para propósitos de entorno de escritorio. Las distribuciones BSD también son conocidas, cualquier usuario de GNU/Linux con seguridad las conoce. FreeBSD es una abanderada de las BSD, aún así no son tantos los usuarios que deciden instalarla como su sistema operativo de uso cotidiano. Es fácil y rápido de instalar y a un usuario de GNU/Linux e incluso macOS el cambio al nuevo sistema resulta conocido ya que el entorno de escritorio y muchos comandos son exactamente los mismos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/freebsd.svg" width="200" height="196" alt="FreeBSD" title="FreeBSD"  class=""></p>
</div>
<p>La cuota de uso entre los diferentes sistemas operativos para computadoras de escritorio está dominada con más de un 80% por el sistema operativo <a href="https://www.microsoft.com/es-es/windows/">Windows</a> de <a href="https://www.microsoft.com/">Microsoft</a>, un sistema operativo comercial con una licencia de uso privativo dirigido a ser fácil de usar incluso para usuarios sin ser expertos en informática. El éxito de Windows se debe a que es la opción preinstalada por la mayoría de ordenadores y portátiles a la venta, posee el paquete ofimático <a href="https://products.office.com/es-es/">Office</a> también de Microsoft imprescindible en muchos puestos de trabajo, se puede usar sin licencia con algunas limitaciones o se puede <a href="https://picodotdev.github.io/blog-bitix/2020/09/como-comprar-una-licencia-y-activar-windows-10-y-office-2019/">comprar una licencia de Windows 10 completamente válida</a> a un precio significativamente más reducido que el oficial.</p>
<p>El siguiente sistema operativo de escritorio más usado es <a href="https://www.apple.com/macos/">macOS</a> de <a href="https://www.apple.com/">Apple</a>, un sistema operativo comercial con licencia privativa exclusivo de las computadoras <em>Mac</em>. Los <em>Mac</em> se consideran ordenadores que suelen incorporar las últimas tecnologías y cuidando más diseño que las que se encuentran en ordenadores con Windows, sin embargo, la exclusividad se ve reflejada en un significativo precio comparado con PC de características equivalentes. A pesar del precio son computadoras con cierta popularidad, deseadas y vendidas.</p>
<p>La tercera opción son alguna de <a href="https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/">las distribuciones de GNU/Linux</a> siendo una de las más populares <a href="https://www.ubuntu.com/">Ubuntu</a>. Las distribuciones y sistema operativo GNU/Linux se caracterizan por tener una licencia de software libre basada en <a href="https://www.gnu.org/licenses/gpl-3.0.html">la GPL</a> y ser generalmente gratuitas incluyendo la práctica totalidad de los programas. Las distribuciones GNU/Linux actualmente son tan fáciles de instalar y usar que los sistemas operativos Windows o <em>macOS</em>, incluyendo ser compatible con la mayoría del hardware. Sin embargo, dado que no hay tantas empresas que vendan y distribuyan equipos con algún GNU/Linux preinstalado no tiene en el escritorio una cuota tan alta como las anteriores, dos empresas que distribuyen GNU/Linux en sus equipos son <a href="https://slimbook.es/">Slimbook</a> y <a href="https://www.vantpc.es/">Vant</a>. En el área de los servidores y computación en la nube, por el contrario, GNU/Linux sí es la opción que domina el mercado, por su licencia, flexibilidad, fiabilidad y potencia.</p>
<p>La cuarta opción mucho menos conocida y usada son alguna de las distribuciones BSD. Las distribuciones BSD también tienen una licencia de software libre incluso más permisiva que la licencia GPL. La mayor permisividad de las licencias BSD la hace atractiva para algunas empresas, que al contrario de la licencia GPL con la licencia BSD no están obligadas a distribuir el código fuente de los programas lo que les permite proteger sus desarrollos de competidores. Es utilizada por empresas como <a href="https://www.netflix.com/es/">Netflix</a>, <a href="https://www.sony.es/">Sony</a> en las consolas <a href="https://www.playstation.com/es-es/">PlayStation</a> e incluso macOS está basado en partes de BSD. Aunque las licencias BSD permiten usar el software sin obligar a colaborar en el desarrollo de su software se ven beneficiadas por colaboraciones puntuales dado que las empresas están interesadas en mejorar el software en el basan su negocio.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="la-distribución-freebsd">La distribución FreeBSD</h3>
<p>Entre las distribuciones BSD una popular es <a href="https://www.freebsd.org/es/">FreeBSD</a>, que es posible utilizar con propósitos de computadora de escritorio, su uso también está destinado a software de servidor que es conocida por su pila TCP/IP de gran rendimiento para comunicación por red.</p>
<p>El mérito de las distribuciones BSD como FreeBSD es ciertamente notable, aunque no tienen la popularidad ni el apoyo por parte de las empresas ni disponer del mismo número de desarrolladores dedicado a su mejora de las distribuciones GNU/Linux consigue proporcionar un sistema operativo de gran calidad con funcionalidades equivalentes a las existentes GNU/Linux o incluso más innovadoras con un modelo de desarrollo diferente de GNU/Linux.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/07/las-diferencias-entre-gnu-linux-bsd-y-sus-distribuciones/">Las diferencias entre GNU/Linux, BSD y sus distribuciones</a></li>
</ul>
<p>Es perfectamente capaz de realizar las tareas comunes con el propósito de ordenador de escritorio. Posee programas de navegadores web, multimedia como vídeo y audio, ofimática, visor de documentos e imágenes y una colección formada por más de 36000 paquetes de software compatibles. Otras funciones de software que posee son <a href="https://docs.freebsd.org/en/books/handbook/virtualization">virtualización</a>, <a href="https://docs.freebsd.org/en/books/handbook/jails">Jails</a> para crear procesos separados del resto del sistema que es la base de <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">los contenedores de Docker</a>, <a href="https://en.wikipedia.org/wiki/DTrace">DTrace</a> también desarrollada originalmente por <a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</a>, <a href="https://www.winehq.org/">WINE</a> para ejecutar programas de Windows y la posibilidad de agregar <a href="https://docs.freebsd.org/en/books/handbook/linuxemu">compatibilidad binaria con Linux</a> lo que hace posible utilizar programas cuando no están disponibles de forma nativa.</p>
<p>La mayor dificultad de usar FreeBSD es en que sea compatible con todo el hardware de la computadora, si bien la compatibilidad con el hardware en GNU/Linux actualmente no es un problema en FreeBSD dado el mayor limitado de desarrolladores que tiene el interés de las compañía en ofrecer soporte para su hardware puede presentar algún problema de compatibilidad.</p>
<p>Las novedades de destacadas de FreeBSD 13 publicada en abril de 2021 es el soporte de la arquitectura de procesadores <em>arm64</em> al mismo nivel que la arquitectura de procesadores <em>amd64</em>, actualización de paquetes de compiladores, eliminación de algunos programas obsoletos de GNU, soporte en el <em>kernel</em> de TLS y otras mejoras de menor relevancia.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/freebsd.svg" width="200" height="150" alt="FreeBSD" title="FreeBSD"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/beastie.svg" width="200" height="150" alt="Beastie" title="Beastie"  class="lozad "></p>
<figcaption>Logotipo y mascota de FreeBSD</figcaption>
</figure>
</div>
<h4 id="el-sistema-de-archivos-zfs-qué-lo-hace-diferente">El sistema de archivos ZFS, ¿qué lo hace diferente?</h4>
<p>Una de las opciones como sistema de archivos es la posibilidad de utilizar ZFS. La licencia BSD permite utilizar más fácilmente el avanzado sistema de archivos ZFS desarrollado originalmente por <a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/">la difunta Sun Microsystems</a>.</p>
<p>Lo que hace diferente a ZFS es que combina el rol de gestor de volúmenes con el rol de sistema de archivos. El sistema de archivos ZFS es consciente de la estructura subyacente de discos. Al contrario que los sistemas de archivos tradicionales que solo pueden crearse en un único disco de almacenamiento, esto obliga a que si hay dos discos sea necesario crear dos sistemas de archivos diferentes.</p>
<p>La combinación de ZFS como gestor de volúmenes y sistema de archivos permite la creación de varios sistemas de archivos todos compartiendo un conjunto de almacenamiento disponible. Una de las mayores ventajas de ZFS de la disposición física de los discos es que los sistemas de archivos existentes pueden ser agrandados automáticamente al añadir discos adicionales al conjunto. Este nuevo espacio queda disponible para todos los sistemas de archivos. También tiene propiedades que pueden ser aplicadas a cada sistema de archivos en vez de crear un único sistema de archivos monolítico.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/openzfs.svg" width="200" height="150" alt="OpenZFS" title="OpenZFS"  class="lozad "></p>
<figcaption>OpenZFS</figcaption>
</figure>
</div>
<h3 id="guía-de-instalación">Guía de instalación</h3>
<p>El primer paso de la instalación es descargar la última de las imágenes de medio de instalación disponibles, ya sea la versión de menor tamaño para realizar la instalación por red o la más completa sin necesidad de descargar nada adicionalmente desde la <a href="https://www.freebsd.org/where/">página de descargas de FreeBSD</a>. En caso de duda en la instalación tiene disponible un <a href="https://docs.freebsd.org/en/books/handbook/">manual completo de la instalación y uso</a> o como documentación de referencia.</p>
<p>En este caso como primera toma de contacto con FreeBSD realizo la instalación en una máquina virtual con <a href="https://www.virtualbox.org/">VirtualBox</a> que está disponible también para Windows como macOS que permite probarla sin necesidad de eliminar el sistema existente en la computadora. En la definición de la máquina virtual se especifican las características de la máquina virtualizada desde el tamaño de memoria, almacenamiento de disco o tipo de BIOS, adicionalmente se proporciona la imagen del medio de instalación y se inserta en la unidad DVD virtual de la máquina.</p>
<p>El siguiente <a href="https://www.virtualbox.org/ticket/19910">error de VirtualBox impide iniciar FreeBSD en modo UEFI</a>, hasta que no sea resuelto requiere iniciar el sistema como BIOS, para la prueba el tipo de sistema BIOS o UEFI no tiene relevancia.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/virtualbox-freebsd_hu32b1bbdb557266d42cb574a4337dc8b4_133679_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de máquina virtual con VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/virtualbox-freebsd_hu32b1bbdb557266d42cb574a4337dc8b4_133679_300x200_fit_box_3.png" width="259" height="200" alt="Configuración de máquina virtual con VirtualBox" title="Configuración de máquina virtual con VirtualBox"  class="lozad "></a></p>
<figcaption>Configuración de máquina virtual con VirtualBox</figcaption>
</figure>
</div>
<p>La instalación de FreeBSD utiliza un asistente que guía y hace la instalación sencilla, rápida y fiable. Descargado el medio de instalación e iniciado el sistema desde él se presenta un menú de opciones que permiten iniciar la instalación. En los diferentes pasos del asistente se van introduciendo las preferencias de configuración desde la disposición del teclado, particionado del sistema de almacenamiento, copiado de archivos del sistema base, establecimiento de contraseña del usuario <em>root</em>, configuración de red, zona horaria y usuarios adicionales.</p>
<p>Inicio de la instalación.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-1_hu7212a89f790981ae87f2fe0753343803_6265_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-1_hu7212a89f790981ae87f2fe0753343803_6265_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-2_hu906318909643a300a5779a0bf877962a_4028_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-2_hu906318909643a300a5779a0bf877962a_4028_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-3_hu554ab2f7ce3c7381878ae69956f2dcfb_8603_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-3_hu554ab2f7ce3c7381878ae69956f2dcfb_8603_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-4_hu34e1fdf110472532390713092768e5ce_8771_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-4_hu34e1fdf110472532390713092768e5ce_8771_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-5_hu66e401d2aa6084fad1638162df023955_8568_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-5_hu66e401d2aa6084fad1638162df023955_8568_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-6_hu09df91305c856ad0993ef44378aef1d4_4229_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-6_hu09df91305c856ad0993ef44378aef1d4_4229_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-7_hu6af7cb70c9bc59e8698d32af3b938b8f_6484_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-7_hu6af7cb70c9bc59e8698d32af3b938b8f_6484_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-8_hu6ef65e0211dc7edc452e52f103c4bba4_6215_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-8_hu6ef65e0211dc7edc452e52f103c4bba4_6215_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-9_hu87884b55ad29dcefdf14d2574fa057af_8063_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-9_hu87884b55ad29dcefdf14d2574fa057af_8063_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-10_huf1f21f5d40e16b556451bd79e2d169ac_7326_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-10_huf1f21f5d40e16b556451bd79e2d169ac_7326_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-11_hu374be8d6642d27ead820ef52e931d59e_3533_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-11_hu374be8d6642d27ead820ef52e931d59e_3533_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-12_hub76528d1fb52dc47910a470cb6357524_8041_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-12_hub76528d1fb52dc47910a470cb6357524_8041_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-13_hub5f920251f60dd5b75a07b4370161dcd_4401_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/instalacion-freebsd-13_hub5f920251f60dd5b75a07b4370161dcd_4401_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de la instalación de FreeBSD" title="Inicio de la instalación de FreeBSD"  class="lozad "></a></p>
<figcaption>Inicio de la instalación de FreeBSD</figcaption>
</figure>
</div>
<p>El siguiente paso es automático, consiste en la copia de los archivos base del sistema.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-1_hu7c9c5212a146fcd4da1874b8afe773f6_4970_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Copia de archivos base de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-1_hu7c9c5212a146fcd4da1874b8afe773f6_4970_200x150_fit_box_3.png" width="200" height="111" alt="Copia de archivos base de FreeBSD" title="Copia de archivos base de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-2_hu85249a26869fcd519a3393054ba4422f_4915_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Copia de archivos base de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-2_hu85249a26869fcd519a3393054ba4422f_4915_200x150_fit_box_3.png" width="200" height="111" alt="Copia de archivos base de FreeBSD" title="Copia de archivos base de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-3_hu2a8e7bff5327af24c1d796fd1515a89b_4839_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Copia de archivos base de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-3_hu2a8e7bff5327af24c1d796fd1515a89b_4839_200x150_fit_box_3.png" width="200" height="111" alt="Copia de archivos base de FreeBSD" title="Copia de archivos base de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-4_hu01c7fc69c25b52089d79343322ed4b3d_5397_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Copia de archivos base de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-4_hu01c7fc69c25b52089d79343322ed4b3d_5397_200x150_fit_box_3.png" width="200" height="111" alt="Copia de archivos base de FreeBSD" title="Copia de archivos base de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-5_hue0c4cb636d29cae02072a83eb8675fcd_5389_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Copia de archivos base de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-5_hue0c4cb636d29cae02072a83eb8675fcd_5389_200x150_fit_box_3.png" width="200" height="111" alt="Copia de archivos base de FreeBSD" title="Copia de archivos base de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-6_hufc9811253542095e6b9321ec5fc5f418_5414_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Copia de archivos base de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-6_hufc9811253542095e6b9321ec5fc5f418_5414_200x150_fit_box_3.png" width="200" height="111" alt="Copia de archivos base de FreeBSD" title="Copia de archivos base de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-7_hud92aff9626f60a3d586c3bd42fb8d10d_5330_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Copia de archivos base de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-7_hud92aff9626f60a3d586c3bd42fb8d10d_5330_200x150_fit_box_3.png" width="200" height="111" alt="Copia de archivos base de FreeBSD" title="Copia de archivos base de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-8_hua12d6696355d295139774a890b9a4fff_5378_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Copia de archivos base de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/progreso-instalacion-freebsd-8_hua12d6696355d295139774a890b9a4fff_5378_200x150_fit_box_3.png" width="200" height="111" alt="Copia de archivos base de FreeBSD" title="Copia de archivos base de FreeBSD"  class="lozad "></a></p>
<figcaption>Copia de archivos base de FreeBSD</figcaption>
</figure>
</div>
<p>A continuación se sigue con la configuración básica del sistema para la conectividad de red, usuarios, fecha y servicios demonio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-1_hu865c01dcbc5ae2c9714bac9c0a2eccf8_4235_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-1_hu865c01dcbc5ae2c9714bac9c0a2eccf8_4235_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-2_huf53fecf1377a1f09be5aaac94a646a67_3666_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-2_huf53fecf1377a1f09be5aaac94a646a67_3666_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-3_hueb639bb4871204c9dab99acad0845a0f_3680_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-3_hueb639bb4871204c9dab99acad0845a0f_3680_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-4_hue8bfd8c3eecc611ad997e7cb69fc56ee_3661_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-4_hue8bfd8c3eecc611ad997e7cb69fc56ee_3661_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-5_hu88c67c073e1480223ad4bd3b06243bf4_4148_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-5_hu88c67c073e1480223ad4bd3b06243bf4_4148_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-6_huc2f95f8c6e69f7a19f7d3d7275ccc3c0_5090_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-6_huc2f95f8c6e69f7a19f7d3d7275ccc3c0_5090_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-7_hu593080d19c3f10fc571ce8b43ddf0f2d_7442_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-7_hu593080d19c3f10fc571ce8b43ddf0f2d_7442_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-8_hu599d1a9416b78d389a5d4b8e93c4f553_6770_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-8_hu599d1a9416b78d389a5d4b8e93c4f553_6770_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-9_hu6299e7d8892219a488c6bc8e28776605_6984_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-9_hu6299e7d8892219a488c6bc8e28776605_6984_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-10_hu10172274c45fe6491f0ccfbdc2460ed8_5442_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-10_hu10172274c45fe6491f0ccfbdc2460ed8_5442_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-11_hu5098b5b05600ad22a73d52d60d36970f_3333_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-11_hu5098b5b05600ad22a73d52d60d36970f_3333_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-12_hue621a0b9e3f9e71b62983600aa3249e6_7307_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-12_hue621a0b9e3f9e71b62983600aa3249e6_7307_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-13_hu67f7065452d3a9ffd81faf605a521e70_10225_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/configuracion-freebsd-13_hu67f7065452d3a9ffd81faf605a521e70_10225_200x150_fit_box_3.png" width="200" height="111" alt="Configuración de FreeBSD" title="Configuración de FreeBSD"  class="lozad "></a></p>
<figcaption>Configuración de FreeBSD</figcaption>
</figure>
</div>
<p>Se ha de establecer la contraseña del usuario <em>root</em> que otorga permisos de superusuario. También se da la oportunidad de crear los usuarios en el sistema.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/root-password-freebsd_hu93e4cfb29f98e409061bebf208829aff_3040_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Contraseña de superusuario en FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/root-password-freebsd_hu93e4cfb29f98e409061bebf208829aff_3040_200x150_fit_box_3.png" width="200" height="111" alt="Contraseña de superusuario en FreeBSD" title="Contraseña de superusuario en FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/usuarios-freebsd-1_hufade51a88785e5942863e1c1e5bf190f_3601_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Creación de usuarios en FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/usuarios-freebsd-1_hufade51a88785e5942863e1c1e5bf190f_3601_200x150_fit_box_3.png" width="200" height="111" alt="Creación de usuarios en FreeBSD" title="Creación de usuarios en FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/usuarios-freebsd-2_hu7edac7d8cf7fe1bee82291761b29bc33_7859_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Creación de usuarios en FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/usuarios-freebsd-2_hu7edac7d8cf7fe1bee82291761b29bc33_7859_200x150_fit_box_3.png" width="200" height="111" alt="Creación de usuarios en FreeBSD" title="Creación de usuarios en FreeBSD"  class="lozad "></a></p>
<figcaption>Contraseña de superusuario y creación de usuarios en FreeBSD</figcaption>
</figure>
</div>
<p>Las últimas pantalla indican la finalización de la instalación.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/finalizacion-instalacion-1_hua8f120f8dec2374b3a1950d4f439e385_8918_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Finalización de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/finalizacion-instalacion-1_hua8f120f8dec2374b3a1950d4f439e385_8918_200x150_fit_box_3.png" width="200" height="111" alt="Finalización de la instalación de FreeBSD" title="Finalización de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/finalizacion-instalacion-2_hu6a4b2d6550f802a83e19fe12928c6910_4623_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Finalización de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/finalizacion-instalacion-2_hu6a4b2d6550f802a83e19fe12928c6910_4623_200x150_fit_box_3.png" width="200" height="111" alt="Finalización de la instalación de FreeBSD" title="Finalización de la instalación de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/finalizacion-instalacion-3_hu17f9f822a4c99352e2c17acb8331a625_4010_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Finalización de la instalación de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/finalizacion-instalacion-3_hu17f9f822a4c99352e2c17acb8331a625_4010_200x150_fit_box_3.png" width="200" height="111" alt="Finalización de la instalación de FreeBSD" title="Finalización de la instalación de FreeBSD"  class="lozad "></a></p>
<figcaption>Finalización de la instalación de FreeBSD</figcaption>
</figure>
</div>
<h4 id="primer-inicio-en-freebsd">Primer inicio en FreeBSD</h4>
<p>Completada la instalación al reiniciar el sistema se presenta la pantalla del cargador de arranque y posteriormente la de inicio de sesión en modo texto a partir de la cual es posible instalar programas adicionales y un entorno de escritorio con interfaz gráfica.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/cargador-arranque-freebsd_hu2e4546020df6c6ae4fd4c9efab81aa48_6267_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en modo texto de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/cargador-arranque-freebsd_hu2e4546020df6c6ae4fd4c9efab81aa48_6267_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de sesión en modo texto de FreeBSD" title="Inicio de sesión en modo texto de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/inicio-sesion-texto-freebsd-1_hu758734cbcd91618808d7d98d2ca3a457_10136_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en modo texto de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/inicio-sesion-texto-freebsd-1_hu758734cbcd91618808d7d98d2ca3a457_10136_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de sesión en modo texto de FreeBSD" title="Inicio de sesión en modo texto de FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/inicio-sesion-texto-freebsd-2_hub71f66c09b9e21ccf21474f0658e66f3_9350_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en modo texto de FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/inicio-sesion-texto-freebsd-2_hub71f66c09b9e21ccf21474f0658e66f3_9350_200x150_fit_box_3.png" width="200" height="111" alt="Inicio de sesión en modo texto de FreeBSD" title="Inicio de sesión en modo texto de FreeBSD"  class="lozad "></a></p>
</figure>
</div>
<h4 id="instalación-de-entorno-de-escritorio">Instalación de entorno de escritorio</h4>
<p>La instalación del entorno de escritorio requiere instalar el servidor gráfico y el entorno de escritorio deseado. Los entornos de escritorio disponibles son los mismos que están disponibles en GNU/Linux entre ellos <a href="https://www.gnome.org/">GNOME</a>, <a href="https://www.kde.org/">KDE</a> y <a href="https://xfce.org/">XFCE</a> con lo que la experiencia de usuario es en gran medida la misma que en una distribución GNU/Linux, la mayor diferencia es que las versión del entorno de escritorio de FreeBSD disponible sea la versión anterior o tarde más tiempo en estar disponible desde su publicación.</p>
<p>A partir de la consola de inicio de sesión en modo texto hay que instalar los paquete del servidor gráfico <a href="https://www.x.org/wiki/">Xorg</a>, el paquete del entorno de escritorio deseado y cambiar un archivo de configuración si se desea iniciar el entorno de escritorio al inicio del sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pkg install xorg</span>&#10;<span class="c1"># pw groupmod video -m freebsd || pw groupmod wheel -m freebsd</span>&#10;<span class="c1"># pkg install gnome3</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pkg-gnome.sh</span>
    </div>
</div>
<p>Para iniciar el gestor de sesión GNOME en el inicio del sistema hay que cambiar la configuración en los archivos <em>/etc/rc.conf</em> y <em>~/.xinitrc</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">dbus_enable=&#34;YES&#34;&#10;gdm_enable=&#34;YES&#34;&#10;gdm_lang=&#34;es_ES.UTF-8&#34;&#10;gnome_enable=&#34;YES&#34;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>rc-gnome.conf</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">exec /usr/local/bin/gnome-session&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>xinitrc.conf</span>
    </div>
</div>
<p>Para establecer como idioma el español se requiere añadir la siguiente configuración en el archivo <em>/usr/local/etc/gdm/locale.conf</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">LANG=&#34;es_ES.UTF-8&#34;&#10;LC_CTYPE=&#34;es_ES.UTF-8&#34;&#10;LC_MESSAGES=&#34;es_ES.UTF-8&#34;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>locale.conf</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/gnome-freebsd-1_hu199b3fb920010271f55514cba9e8ee93_13452_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="GNOME en FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/gnome-freebsd-1_hu199b3fb920010271f55514cba9e8ee93_13452_200x150_fit_box_3.png" width="200" height="150" alt="GNOME en FreeBSD" title="GNOME en FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/gnome-freebsd-2_hu3fb0d08f1678df887aa433b87f3258dd_584247_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="GNOME en FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/gnome-freebsd-2_hu3fb0d08f1678df887aa433b87f3258dd_584247_200x150_fit_box_3.png" width="200" height="150" alt="GNOME en FreeBSD" title="GNOME en FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/gnome-freebsd-3_huc7bc7fe3f990d0a956a802d8870c9d5f_67920_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="GNOME en FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/gnome-freebsd-3_huc7bc7fe3f990d0a956a802d8870c9d5f_67920_200x150_fit_box_3.png" width="200" height="150" alt="GNOME en FreeBSD" title="GNOME en FreeBSD"  class="lozad "></a></p>
<figcaption>GNOME en FreeBSD</figcaption>
</figure>
</div>
<h3 id="uso-básico">Uso básico</h3>
<p>FreeBSD proporciona una colección de programas básicos de línea de comandos incorporados en el sistema, al contrario que en GNU/Linux estos programas están desarrollados por los mismos desarrolladores del núcleo del sistema operativo y se actualizan como una unidad en cada versión en vez de individualmente.</p>
<p>Instalado el sistema dos tareas básicas son la instalación de programas adicionales y la actualización del sistema para obtener nuevas versiones de los programas, correcciones de errores y actualizaciones de seguridad.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/uname-freebsd_hu422ea38d79f1619ea04a68239cf2210c_312778_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Comando uname en FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/uname-freebsd_hu422ea38d79f1619ea04a68239cf2210c_312778_300x200_fit_box_3.png" width="267" height="200" alt="Comando uname en FreeBSD" title="Comando uname en FreeBSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/df-freebsd_hu40fb3d33aaf41cb4833baee97a9765af_347157_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Comando df en FreeBSD"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/df-freebsd_hu40fb3d33aaf41cb4833baee97a9765af_347157_300x200_fit_box_3.png" width="267" height="200" alt="Comando df en FreeBSD" title="Comando df en FreeBSD"  class="lozad "></a></p>
<figcaption>Comandos uname y df en FreeBSD</figcaption>
</figure>
</div>
<h4 id="obtener-permisos-de-superusuario-_root_">Obtener permisos de superusuario <em>root</em></h4>
<p>Por seguridad algunas tareas administrativas y de edición de archivos de configuración requieren permisos de superusuario <em>root</em>. Esto es posible iniciando sesión en el sistema como el usuario <em>root</em> o obteniendo los privilegios de superusuario con el programa <em>su</em> o <em>sudo</em>.</p>
<p>Hay un único superusuario en el sistema cuyo nombre de usuario es <em>root</em>, este usuario tiene permisos para realizar cualquier acción en el sistema. La contraseña es necesaria para iniciar sesión, es la proporcionada en la instalación del sistema, y se solicita al obtener privilegios de superusuario en la línea de comandos con el comando <em>su</em>. El resto de usuarios distintos a <em>root</em> son usuarios regulares, para que un usuario regular obtenga privilegios de supersusaurio se ha de utilizar el comando <em>su</em> pertenecer al grupo <em>wheel</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pw groupmod whell -M freebsd</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pw-add-user-to-wheel.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ su -&#10;<span class="c1">#</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>su.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/su_hu4b8d9e5441972a95b55ffa0dabb5edba_299404_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Obtener privilegios de superusuario"><img src="https://picodotdev.github.io/blog-bitix/2021/04/guia-de-instalacion-y-uso-basico-de-freebsd/images/su_hu4b8d9e5441972a95b55ffa0dabb5edba_299404_300x200_fit_box_3.png" width="267" height="200" alt="Obtener privilegios de superusuario" title="Obtener privilegios de superusuario"  class="lozad "></a></p>
<figcaption>Obtener privilegios de superusuario</figcaption>
</figure>
</div>
<h4 id="instalación-de-paquetes">Instalación de paquetes</h4>
<p>La finalidad de cualquier sistema operativo es permitir realizar tareas productivas en él a través de los programas. Para usar un programa es necesario instalarlo previamente en el sistema.</p>
<p>FreeBSD diferencia los programas de dos formas en como están distribuidos, los paquetes con binarios precompilados para su fácil y rápida instalación y los <em>ports</em> que requieren la compilación a partir del código fuente. En este sentido los paquetes de de FreeBSD son similares a los de los repositorios oficiales <a href="https://www.archlinux.org/">Arch Linux</a> y los <em>ports</em> al <a href="https://aur.archlinux.org/">repositorio AUR</a> que requieren igualmente ser compilados a partir del código fuente.</p>
<p>La instalación de un paquete se realiza con el comando <em>pkg</em> para buscar su nombre e instalarlo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pkg search gnome</span>&#10;<span class="c1"># pkg search firefox</span>&#10;<span class="c1"># pkg search libreoffice</span>&#10;<span class="c1"># pkg search gimp</span>&#10;<span class="c1"># pkg search vlc</span>&#10;<span class="c1"># pkg search vim</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pkg-search.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pkg install libreoffice</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pkg-install.sh</span>
    </div>
</div>
<h4 id="actualización-del-sistema">Actualización del sistema</h4>
<p>Una vez realizada la instalación en el futuro se publicarán nuevas versiones de los programas. Para mantener el sistema actualizado hay que ejecutar de forma periódica un comando de actualización.</p>
<ul>
<li><a href="https://docs.freebsd.org/en/books/handbook/cutting-edge/">Updating and Upgrading FreeBSD</a></li>
</ul>
<p>La actualización de parches de seguridad de FreeBSD se realiza con los siguientes dos comandos. El sistema base del sistema operativo de FreeBSD se actualiza independientemente de los programas instalados como paquetes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># freebsd-update fetch</span>&#10;<span class="c1"># freebsd-update install</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>freebsd-update.sh</span>
    </div>
</div>
<p>El siguiente comando permite revertir la actualización en caso de algún error.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># freebsd-update rollback</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>freebsd-update-rollback.sh</span>
    </div>
</div>
<p>Para actualizar a versiones mayores se realiza con el siguiente comando en el que se indica la versión a la que actualizar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># freebsd-update -r 13.0-RELEASE upgrade</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>freebsd-update-upgrade.sh</span>
    </div>
</div>
<p>Los paquetes se actualizan independientemente del sistema base de FreeBSD con el siguiente comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pkg upgrade</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pkg-upgrade.sh</span>
    </div>
</div>
<p>En caso de una actualización a una versión mayor de FreeBSD se requiere una reinstalación de todos los paquetes y <em>ports</em> con los siguientes comandos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pkg-static upgrade -f</span>&#10;<span class="c1"># portmaster -af</span>&#10;<span class="c1"># freebsd-update install</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>freebsd-pkg-upgrade.sh</span>
    </div>
</div>
<h3 id="obtener-más-ayuda">Obtener más ayuda</h3>
<p>La cuota de uso de GNU/Linux no es muy grande en el escritorio pero tiene un grupo de usuarios muy activo que comparte gran cantidad de información, es difícil no encontrar una respuesta a una duda o problema y es fácil obtener respuesta a una pregunta.</p>
<p>El grupo de usuario de FreeBSD es más reducido y por tanto encontrar respuestas a algo concreto no muy común es más difícil, aún siendo un grupo de usuarios más reducido se caracteriza por recibir calurosamente a los nuevos usuarios de FreeBSD. Una buena forma de obtener respuestas y soporte son los foros de usuario y las listas de distribución. Aunque no hay tantos canales de YouTube y artículos en <em>blogs</em> es posible encontrar información sobre FreeBSD a través de los buscadores.</p>
<ul>
<li><a href="https://forums.freebsd.org/">Foros de FreeBSD</a></li>
<li><a href="https://www.freebsd.org/community/mailinglists/">Listas de distribución</a></li>
<li><a href="https://www.bsdnow.tv/">BSD Now</a> un <em>podcast</em> semanal sobre las distribuciones BSD</li>
</ul>
<h4 id="libros">Libros</h4>
<p>También hay algunos libros dedicados en exclusiva a FreeBSD como <a href="https://amzn.to/3nLLi0h">Absolute Freebsd: The Complete Guide To FreeBSD</a>, <a href="https://amzn.to/3nCspgc">Design and Implementation of the FreeBSD Operating System</a>, <a href="https://amzn.to/3e3an3p">FreeBSD Device Drivers: A Guide for the Intrepid</a>, <a href="https://amzn.to/3e4mU6t">FreeBSD Mastery: ZFS</a> y <a href="https://amzn.to/2RaJ26j">FreeBSD Mastery: Advanced ZFS</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1593278926&amp;linkId=216b756ebdf87a0f408fad2b0afff135" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321968972&amp;linkId=50dcb39bc5e8af2cab746da01ed6e334" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1593272049&amp;linkId=aaf4e00ebd5d4bc04741808aa8ce37e3" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1642350001&amp;linkId=0b5660627ebcf9e436d57e63a3329bcf" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=164235001X&amp;linkId=c56abbe62b62e123f679e7cb762e6f34" title="Amazon" class="lozad"></iframe>
</div>
<p>Eso es todo lo básico para empezar a usar FreeBSD, si alguién lee este artículo y usa FreeBSD u otra distribución BSD como sistema principal o en el trabajo me encantaría conocer más detalles así que si quieres puedes dejar un comentario, también si a alguien que acceda al artículo y lo lea seguro que le resulta interesante como forma de animarse a probar este sistemas operativo de la familia UNIX.</p>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/04/crear-de-forma-sencilla-un-cliente-de-un-servicio-rest-o-http-con-retrofit/</id>
        <title>Crear de forma sencilla un cliente de un servicio REST o HTTP con Retrofit</title>
        <updated>2021-04-23T21:30:00+02:00</updated>
        <published>2021-04-23T21:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/04/crear-de-forma-sencilla-un-cliente-de-un-servicio-rest-o-http-con-retrofit/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La implementación de un servicio REST o HTTP es solo una parte, el otro lado es crear un cliente de ese u otro servicio que permita invocarlo, proporcionar parámetros y obtener las respuestas. Con la librería Retrofit implementar un cliente de un servicio en Java es una tarea bastante sencilla sencilla que utiliza una simple interfaz a la que se le añaden varias anotaciones que le indican a Retrofit cómo construir una implementación a partir de la interfaz. El código que hace uso de la clase que implementa la interfaz del servicio con Retrofit no es diferente de usar una clase que implementa una interfaz.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En el lenguaje de programación Java hay varias librerías que permiten hacer peticiones a un servicio que utilice el protocolo HTTP. Varias de las librerías más conocidas son <a href="https://square.github.io/okhttp/">OkHttp</a>, <a href="https://hc.apache.org/">Apache HttpComponents</a> e incluso <a href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/">en el JDK en la versión 11 se ha incorporado un cliente HTTP que soporta HTTP/2</a>.</p>
<p>Estas librerías cumplen su función y ofrecen total flexibilidad en su uso, sin embargo, requieren hacer las peticiones HTTP de forma explícita lo que supone un código repetitivo y tedioso incluyendo hacer las <a href="https://picodotdev.github.io/blog-bitix/2019/02/convertir-un-json-a-objetos-y-objetos-a-json-con-json-b-gson-y-jackson-en-java/">conversiones de objetos a JSON y de JSON a objetos Java</a> en las peticiones y respuestas.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="la-librería-retrofit-para-crear-un-cliente-de-un-servicio-rest-o-http">La librería Retrofit para crear un cliente de un servicio REST o HTTP</h3>
<p><a href="https://square.github.io/retrofit/">Retrofit</a> es una librería que simplifica en gran medida el construir clientes HTTP de una API REST o realizar un cliente de un servicio REST. Con Retrofit basta con crear una interfaz Java que represente el servicio y decorarla con las anotaciones que proporciona Retrofit. También es posible utilizar Retrofit para <a href="https://picodotdev.github.io/blog-bitix/2017/11/que-es-graphql-y-ejemplo-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/">servicios implementados con GraphQL</a> que aunque no están basados en REST si utilizan el protocolo HTTP.</p>
<p>Retrofit utiliza como librería para realizar las peticiones OkHttp y es compatible con varias librerías para realizar las conversiones de datos de JSON a objetos y de objetos a JSON, entre ellas <a href="https://github.com/FasterXML/jackson">Jackson</a>, <a href="https://github.com/google/gson">Gson</a> y JSON-B. También soporta realizar las peticiones de forma síncrona o asíncrona.</p>
<p>Esta es una interfaz de Java que representa un sencillo servicio REST de una petición <em>GET</em>. Las anotaciones instruyen a Retrofit como a partir de esta interfaz crear el cliente del servicio REST, al proporcionar esta interfaz Retrofit devuelve una instancia de la interfaz que al invocar a los métodos internamente realiza las peticiones HTTP.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaretrofit</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">retrofit2.Call</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">retrofit2.http.GET</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">retrofit2.http.Header</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">retrofit2.http.Path</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">retrofit2.http.Query</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Service</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GET</span><span class="o">(</span><span class="s">&#34;/message/{name}&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Call</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">message</span><span class="o">(</span><span class="nd">@Header</span><span class="o">(</span><span class="s">&#34;Accept-Language&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">acceptLanguage</span><span class="o">,</span> <span class="nd">@Path</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="nd">@Query</span><span class="o">(</span><span class="s">&#34;random&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">random</span><span class="o">);</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Service.java</span>
    </div>
</div>
<p>Al proporcionar a Retrofit la interfaz este crea una instancia que implementa la interfaz pero que internamente implementa el cliente HTTP del servicio. Aparte de la interfaz para obtener la instancia del servicio se ha de proporcionar la URL base donde se ubica el servicio asi como otros objetos relacionados como interceptores.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">MeterRegistry</span> <span class="n">registry</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Service</span> <span class="nf">buildService</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">addNetworkInterceptor</span><span class="o">(</span><span class="n">buildLoggingInterceptor</span><span class="o">())</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">eventListener</span><span class="o">(</span><span class="n">OkHttpMetricsEventListener</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="n">registry</span><span class="o">,</span> <span class="s">&#34;okhttp.requests&#34;</span><span class="o">).</span><span class="na">build</span><span class="o">())</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Retrofit</span> <span class="n">retrofit</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Retrofit</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">client</span><span class="o">(</span><span class="n">client</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">addConverterFactory</span><span class="o">(</span><span class="n">ScalarsConverterFactory</span><span class="o">.</span><span class="na">create</span><span class="o">())</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">baseUrl</span><span class="o">(</span><span class="s">&#34;http://localhost:8080/&#34;</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">retrofit</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">Service</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-buildService.java</span>
    </div>
</div>
<h4 id="anotaciones-de-retrofit">Anotaciones de Retrofit</h4>
<p>Las anotaciones de Retrofit en la interfaz de Java describen el servicio como variables en el <em>path</em> de la URL, parámetros, para realizar conversiones a JSON o el método HTTP a invocar o cabeceras HTTP.</p>
<ul>
<li><em>HTTP</em>, <em>GET</em>, <em>POST</em>, <em>PUT</em>, <em>PATCH</em>, <em>DELETE</em>, <em>OPTIONS</em> y <em>HEAD</em>: estas anotaciones indican el método HTTP que se realiza.</li>
<li><em>Path</em>, <em>Query</em>: la anotación <em>Path</em> sustituye una variable en el <em>path</em> de la URL por el valor del argumento anotado. La anotación <em>Query</em> añade un argumento en la <em>query</em> de la URL.</li>
<li><em>Headers</em>, <em>Header</em>: la anotación <em>Headers</em> permite especificar una colección de cabeceras HTTP a incluir en la petición. La anotación <em>Header</em> añade una cabecera a partir del valor de un argumento en la firma del método.</li>
<li><em>Body</em>: la anotación <em>Body</em> transforma el argumento como los datos a incluir como JSON en cuerpo de la petición utilizando la librería que implementa la conversión de objetos a JSON.</li>
</ul>
<h4 id="aplicar-funcionalidades-transversales-con-interceptores">Aplicar funcionalidades transversales con interceptores</h4>
<p>Algunas funcionalidades comunes al crear un cliente de un servicio REST son obtener trazas de las peticiones que se están realizando, realizar autenticación, generar métricas o <a href="https://picodotdev.github.io/blog-bitix/2019/04/trazabilidad-en-microservicios-con-spring-cloud-sleuth/">trazabilidad con Sleuth</a>. Estas son funcionalidades transversales a todos los métodos de la interfaz del servicio REST que se implementan usando interceptores.</p>
<p>Un interceptor es una clase que implementa una interfaz de la librería OkHttp que es invocada al realizarse una petición HTTP. OkHttp soporta métricas añadiendo un <em>EventListener</em> al construir la instancia del cliente de OkHttp.</p>
<p>OkHttp proporciona una implementación de interceptor que emite trazas cuando se realiza una petición útil para observar en el <em>log</em> qué peticiones se están realizando y que códigos de estado se están devolviendo. Esta es una implementación propia de un interceptor para emitir las trazas que se realizan con el cliente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Interceptor</span> <span class="nf">buildLoggingInterceptor</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">chain</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="n">chain</span><span class="o">.</span><span class="na">request</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">long</span> <span class="n">t1</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Sending request %s on %s%n%s&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">url</span><span class="o">(),</span> <span class="n">chain</span><span class="o">.</span><span class="na">connection</span><span class="o">(),</span> <span class="n">request</span><span class="o">.</span><span class="na">headers</span><span class="o">()));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">chain</span><span class="o">.</span><span class="na">proceed</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">long</span> <span class="n">t2</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Received response for %s in %.1fms%n%s&#34;</span><span class="o">,</span> <span class="n">response</span><span class="o">.</span><span class="na">request</span><span class="o">().</span><span class="na">url</span><span class="o">(),</span> <span class="o">(</span><span class="n">t2</span> <span class="o">-</span> <span class="n">t1</span><span class="o">)</span> <span class="o">/</span> <span class="n">1e6d</span><span class="o">,</span> <span class="n">response</span><span class="o">.</span><span class="na">headers</span><span class="o">()));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">response</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-interceptor.java</span>
    </div>
</div>
<h3 id="servicio-de-ejemplo-con-retrofit">Servicio de ejemplo con Retrofit</h3>
<p>Un controlador como el siguiente de un servicio REST definido con <a href="https://projects.spring.io/spring-framework/">Spring Framework</a> sencillo que únicamente devuelve un mensaje en función de los parámetros recibidos a través de una en la petición, una variable en el <em>path</em> de la petición y un parámetro en la <em>query</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaretrofit</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@RestController</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">RestService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">MESSAGES</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">MESSAGES</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">MESSAGES</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;es-ES;default&#34;</span><span class="o">,</span> <span class="s">&#34;¡Hola mundo!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">MESSAGES</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;es-ES;hello&#34;</span><span class="o">,</span> <span class="s">&#34;¡Hola %s!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">MESSAGES</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;en-GB;default&#34;</span><span class="o">,</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">MESSAGES</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;en-GB;hello&#34;</span><span class="o">,</span> <span class="s">&#34;Hello %s&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GetMapping</span><span class="o">(</span><span class="n">path</span> <span class="o">=</span> <span class="o">{</span> <span class="s">&#34;/message/&#34;</span><span class="o">,</span> <span class="s">&#34;/message/{name}&#34;</span> <span class="o">})</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">message</span><span class="o">(</span><span class="nd">@RequestHeader</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&#34;Accept-Language&#34;</span><span class="o">,</span> <span class="n">defaultValue</span> <span class="o">=</span> <span class="s">&#34;en-GB&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">locale</span><span class="o">,</span> <span class="nd">@PathVariable</span><span class="o">(</span><span class="n">required</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span> <span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="nd">@RequestParam</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;random&#34;</span><span class="o">,</span> <span class="n">required</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span> <span class="n">String</span> <span class="n">random</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Random: %s%n&#34;</span><span class="o">,</span> <span class="n">random</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">name</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">name</span><span class="o">.</span><span class="na">isBlank</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">key</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s;default&#34;</span><span class="o">,</span> <span class="n">locale</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">message</span> <span class="o">=</span> <span class="n">MESSAGES</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">MESSAGES</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;en-GB;default&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">key</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s;hello&#34;</span><span class="o">,</span> <span class="n">locale</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">MESSAGES</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">MESSAGES</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;en-GB;default&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">message</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">value</span><span class="o">,</span> <span class="n">name</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">message</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>RestService.java</span>
    </div>
</div>
<p>El cliente del servicio construido por Retrofit se realiza a partir de la definición de la interfaz, el cliente es un objeto que implementa esa interfaz y en código Java no de su uso es simplemente invocar sus métodos y proporcionar los parámetros. La implementación del cliente contiene el código necesario para transformar las invocaciones de los métodos de la interfaz en peticiones al servicio REST.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaretrofit</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Service</span> <span class="n">service</span> <span class="o">=</span> <span class="n">buildService</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">r1</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">message</span><span class="o">(</span><span class="s">&#34;es-ES&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">,</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">()).</span><span class="na">execute</span><span class="o">().</span><span class="na">body</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">r2</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">message</span><span class="o">(</span><span class="s">&#34;es-ES&#34;</span><span class="o">,</span> <span class="s">&#34;Java&#34;</span><span class="o">,</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">()).</span><span class="na">execute</span><span class="o">().</span><span class="na">body</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">r3</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">message</span><span class="o">(</span><span class="s">&#34;en-GB&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">,</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">()).</span><span class="na">execute</span><span class="o">().</span><span class="na">body</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">r4</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">message</span><span class="o">(</span><span class="s">&#34;en-GB&#34;</span><span class="o">,</span> <span class="s">&#34;Java&#34;</span><span class="o">,</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">()).</span><span class="na">execute</span><span class="o">().</span><span class="na">body</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Result: %s%n&#34;</span><span class="o">,</span> <span class="n">r1</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Result: %s%n&#34;</span><span class="o">,</span> <span class="n">r2</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Result: %s%n&#34;</span><span class="o">,</span> <span class="n">r3</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Result: %s%n&#34;</span><span class="o">,</span> <span class="n">r4</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Esta es la salida del programa en la consola donde se ven las trazas del interceptor de OkHttp con los datos de la petición y las respuesta del servicio junto con el mensaje de respuesta del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Sending request http://localhost:8080/message/?random=520983c7-79d9-4956-aceb-b0dad5c8902c on Connection{localhost:8080, proxy=DIRECT hostAddress=localhost/127.0.0.1:8080 cipherSuite=none protocol=http/1.1}&#10;Accept-Language: es-ES&#10;Host: localhost:8080&#10;Connection: Keep-Alive&#10;Accept-Encoding: gzip&#10;User-Agent: okhttp/3.14.9&#10;&#10;Random: 520983c7-79d9-4956-aceb-b0dad5c8902c&#10;Received response for http://localhost:8080/message/?random=520983c7-79d9-4956-aceb-b0dad5c8902c in 94,6ms&#10;Content-Type: text/plain;charset=UTF-8&#10;Content-Length: 13&#10;Date: Fri, 23 Apr 2021 17:46:41 GMT&#10;Keep-Alive: timeout=60&#10;Connection: keep-alive&#10;&#10;Sending request http://localhost:8080/message/Java?random=d4cca45d-4a45-40ca-9872-fc2c344f1572 on Connection{localhost:8080, proxy=DIRECT hostAddress=localhost/127.0.0.1:8080 cipherSuite=none protocol=http/1.1}&#10;Accept-Language: es-ES&#10;Host: localhost:8080&#10;Connection: Keep-Alive&#10;Accept-Encoding: gzip&#10;User-Agent: okhttp/3.14.9&#10;&#10;Random: d4cca45d-4a45-40ca-9872-fc2c344f1572&#10;Received response for http://localhost:8080/message/Java?random=d4cca45d-4a45-40ca-9872-fc2c344f1572 in 3,7ms&#10;Content-Type: text/plain;charset=UTF-8&#10;Content-Length: 12&#10;Date: Fri, 23 Apr 2021 17:46:41 GMT&#10;Keep-Alive: timeout=60&#10;Connection: keep-alive&#10;&#10;Sending request http://localhost:8080/message/?random=e802c2e7-9f5c-4908-8fe6-22b3c8069192 on Connection{localhost:8080, proxy=DIRECT hostAddress=localhost/127.0.0.1:8080 cipherSuite=none protocol=http/1.1}&#10;Accept-Language: en-GB&#10;Host: localhost:8080&#10;Connection: Keep-Alive&#10;Accept-Encoding: gzip&#10;User-Agent: okhttp/3.14.9&#10;&#10;Random: e802c2e7-9f5c-4908-8fe6-22b3c8069192&#10;Received response for http://localhost:8080/message/?random=e802c2e7-9f5c-4908-8fe6-22b3c8069192 in 2,2ms&#10;Content-Type: text/plain;charset=UTF-8&#10;Content-Length: 12&#10;Date: Fri, 23 Apr 2021 17:46:41 GMT&#10;Keep-Alive: timeout=60&#10;Connection: keep-alive&#10;&#10;Sending request http://localhost:8080/message/Java?random=16fc8a5f-b9ab-4b26-8049-81a4e7901820 on Connection{localhost:8080, proxy=DIRECT hostAddress=localhost/127.0.0.1:8080 cipherSuite=none protocol=http/1.1}&#10;Accept-Language: en-GB&#10;Host: localhost:8080&#10;Connection: Keep-Alive&#10;Accept-Encoding: gzip&#10;User-Agent: okhttp/3.14.9&#10;&#10;Random: 16fc8a5f-b9ab-4b26-8049-81a4e7901820&#10;Received response for http://localhost:8080/message/Java?random=16fc8a5f-b9ab-4b26-8049-81a4e7901820 in 2,7ms&#10;Content-Type: text/plain;charset=UTF-8&#10;Content-Length: 10&#10;Date: Fri, 23 Apr 2021 17:46:41 GMT&#10;Keep-Alive: timeout=60&#10;Connection: keep-alive&#10;&#10;Result: ¡Hola mundo!&#10;Result: ¡Hola Java!&#10;Result: Hello World!&#10;Result: Hello Java!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En el archivo de construcción hay que incluir la dependencia de Retrofit.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.4.5&#39;</span><span class="o">))</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator&#39;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.squareup.retrofit2:retrofit:2.9.0&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.squareup.retrofit2:converter-scalars:2.9.0&#39;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;io.micrometer:micrometer-core:1.6.6&#39;</span>&#10;<span class="o">}</span>&#10;&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javaretrofit.Main&#39;</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>El código que utiliza el cliente realiza peticiones HTTP de modo que al hacer pruebas unitarias es necesario utilizar un <a href="https://picodotdev.github.io/blog-bitix/2021/07/servidor-mock-para-imitar-peticiones-y-respuestas-de-servicios-http-con-wiremock/">servidor <em>mock</em> para devolver las respuestas simuladas del servicio real a las peticiones HTTP</a> sin necesidad de que este esté disponible, esto elimina dependencias del entorno de pruebas haciéndolo más sencillo, también el servidor <em>mock</em> permite el desarrollo sin necesidad del servicio real.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRetrofit">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/</id>
        <title>Herramientas de reconocimiento de texto en imágenes con OCR</title>
        <updated>2021-04-16T16:30:00+02:00</updated>
        <published>2021-04-16T16:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Un programa de reconocimiento de caracteres o OCR permite obtener el texto de una imagen o fotografía tomada con la cámara de un teléfono inteligente, captura de pantalla, <em>scanner</em> u otro medio. Al programa OCR se le proporciona la imagen y este genera como resultado el texto reconocido, si la imagen es de buena calidad el reconocimiento de caracteres es bastante preciso. Hay programas OCR de línea de comandos, con interfaz gráfica, en línea sin necesidad de instalar software y también es posible realizar OCR desde en un programa con un lenguaje de programación como Java.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El problema de reconocimiento de caracteres es una tarea simple para un humano pero no es una tarea sencilla para una computadora que no posee la inteligencia y experiencia de un humano sino simplemente la que los programadores le han dotado dentro de sus posibilidades. La ventaja de usar una computadora, al igual que en muchas otras tareas posibles con una computadora, es que con el software adecuado es capaz de hacer el reconocimiento de caracteres de manera mucho más rápida y bastante efectiva aunque requiera cierto trabajo de revisión y edición posterior del texto obtenido. La <a href="https://picodotdev.github.io/blog-bitix/2021/02/herramientas-para-convertir-texto-a-audio-de-voz-natural/">conversión de texto a voz natural</a> es otra tarea simple para un humano pero difícil para una computadora si el resultado deseado ha de ser natural o difícilmente indistinguible de la entonación de un humana.</p>
<p>El texto de una imagen no es extraíble de forma directa ya que por el formato de las imágenes el texto es visiblemente únicamente por la disposición de los pixeles. Para extraer el texto es necesario aplicar un algoritmo que utilizando varias heurísticas es capaz de reconocer el texto de la imagen, el software de reconocimiento de caracteres se le denomina <em>Optical Character Recognition</em> o OCR.</p>
<p>El reconocimiento de caracteres en una imagen es útil y necesario cuando el texto está insertado en una imagen o fotografía, por ejemplo cuando se toma una fotografía de un coche con su número de matrícula o cuando se toma una fotografía de una página de un libro y se quiere extraer el texto de la imagen, los teléfonos inteligentes con cámara son capaces de sustituir para usos básicos a dispositivos hardware como escáneres ópticos.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="programas-de-reconocimiento-de-caracteres-con-ocr">Programas de reconocimiento de caracteres con OCR</h3>
<p>Para extraer el texto de una imagen es necesario un programa OCR, un programa OCR es un software especializado en reconocer patrones de caracteres en una imagen aún cuando los caracteres y texto de la imagen tiene cierta distorsión, baja calidad o defectos. Por supuesto, a mejor calidad de la imagen origen el programa OCR es capaz de ser más preciso en el reconocimiento del texto. Aunque los programas OCR no son siempre perfectos son bastante fiables con una imagen de buena calidad y son capaces de extraer el texto con un éxito cercano al cien por cien.</p>
<p>Los usos de OCR son múltiples, como digitalización de libros, páginas de un libro, periódico, documento, reconocimiento de matrículas de vehículos o direcciones postales entre otros muchos usos.</p>
<p>Hay programas OCR que se invocan desde la línea de comandos, programas con interfaz gráfica y herramientas en línea sin necesidad de programas adicionales.</p>
<h4 id="reconocimiento-de-caracteres-desde-línea-de-comandos">Reconocimiento de caracteres desde línea de comandos</h4>
<p>La ventaja de una herramienta de línea de comandos es que permite automatizar la tarea de extracción de texto de un conjunto de imágenes, o también permite hacer la tarea más rápido sin necesidad de usar de forma interactiva con una aplicación de interfaz gráfica.</p>
<p>En el sistema operativo <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> una herramienta de OCR es <a href="https://github.com/tesseract-ocr/tesseract">tesseract</a>. Basta con instalar el paquete de distribución para usarlo, en este caso también es posible instalar un diccionario con las palabras del idioma para un mejor reconocimiento del texto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -S tesseract tesseract-data-eng tesseract-data-spa&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-install.sh</span>
    </div>
</div>
<p>Su uso desde la línea de comandos es el siguiente, se ha de proporcionar la imagen origen y el identificador del idioma en su código de tres letras. El comando no perite especificar un rectángulo de la imagen donde se desea reconocer el texto con lo que es necesario recorgar la imagen al área deseada con una herramienta de manipulación de imágenes como <a href="https://www.gimp.org/">GIMP</a>. El resultado se genera en un archivo de nombre <em>output.txt</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ tesseract image.jpg output -l spa&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tesseract.sh</span>
    </div>
</div>
<p>Para el ejemplo he usado la siguiente imagen tomada con la cámara de fotos del móvil a partir de una página de un libro electrónico. El mismo caso es posible aplicarlo a la fotografía tomada de un periódico o de un documento puesto en una pared, lo importante es que que la imagen tenga la mejor calidad posible en cuanto a definición de caracteres, si es una fotografía que esté bien enfocada y sin brillos para que todo el texto sea reconocible. El reconocimiento del texto se realiza con efectividad mientras los caracteres tengan el formato tipográfico impreso en vez de escritura realizada a mano. Aún teniendo la imagen una leve rotación el texto se sigue reconociendo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/image-1_huf50b1b388f7ef31aacae5ba86c026a4e_1190912_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen original con texto"><img src="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/image-1_huf50b1b388f7ef31aacae5ba86c026a4e_1190912_300x250_fit_q90_box.jpg" width="179" height="250" alt="Imagen original con texto" title="Imagen original con texto"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/image-2_hu3673d89bfe730e92bf67a0c97d5ad7b7_1128608_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen rotada con texto horizontal"><img src="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/image-2_hu3673d89bfe730e92bf67a0c97d5ad7b7_1128608_300x250_fit_q90_box.jpg" width="181" height="250" alt="Imagen rotada con texto horizontal" title="Imagen rotada con texto horizontal"  class="lozad "></a></p>
<figcaption>Imagen original y rotada con texto horizontal</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/image-3_hu57982401b3b19b54a02579dc8d1c81d4_549098_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen recortada al área deseada"><img src="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/image-3_hu57982401b3b19b54a02579dc8d1c81d4_549098_650x450_fit_q90_box.jpg" width="325" height="450" alt="Imagen recortada al área deseada" title="Imagen recortada al área deseada"  class="lozad "></a></p>
<figcaption>Imagen recortada al área deseada</figcaption>
</figure>
</div>
<p>El texto es reconocido con bastante efectividad, el formato no es completamente fiel al original y algunos signos de puntuación pequeños no son reconocidos, sin embargo si la tarea es extrael el texto de un soporte la herramienta es bastante efectiva aunque requiera un revisión y edición posterior.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Pasaron por debajo de un arco e Igor se puso a abrir una&#10;puerta que tenía muchas más tachuelas de lo que era respetable.&#10;Así llegaron a un pasillo.&#10;&#10;—¿Estás segura de que quieres venir? —le preguntó Vimes a&#10;Jovial—. Es una vampira.&#10;&#10;—Los vampiros no me preocupan, señor.&#10;&#10;—Qué suerte tienes. —Vimes miró a Pelele, que estaba en&#10;silencio. El hombre parecía agobiado—. Dile a nuestro amigo&#10;aquí presente que no lo necesitamos y que puede esperarnos en&#10;el carruaje, el cabrón con suerte —dijo—. Pero no traduzcas eso&#10;último.&#10;&#10;Igor abrió una puerta interior mientras Pelele se alejaba casi&#10;corriendo por el pasillo.&#10;&#10;—Zu eccelentízima eccelencia...&#10;&#10;—Ah, sir Samuel —dijo lady Margolotta—. Entre, por favor.&#10;Sé que no le gusta ser una excelencia. Esto se le hace muy&#10;pesado, ¿verdad? Pero se tiene que hacer, ¿no?&#10;&#10;Aquello no era lo que él había esperado. En teoría los&#10;vampiros no llevaban perlas, ni jerséis de color rosa. Y en el&#10;mundo de Vimes tampoco llevaban zapatos cómodos y sin tacón.&#10;Ni tenían una sala de estar en la que hasta el último mueble&#10;estaba tapizado con tela de chintz.&#10;&#10;Lady Margolotta parecía la típica madre, aunque tal vez la&#10;típica madre de alguien que hubiera tenido una educación cara y&#10;un poni llamado Saltitos. Se movía como alguien muy&#10;acostumbrado a su propio cuerpo, y en general tenía un aspecto&#10;que Vimes había oído describir como de «mujer de cierta edad».&#10;Nunca había estado muy seguro de qué edad era aquella.&#10;&#10;Pero... había ciertos detalles raros. Lady Margolotta llevaba&#10;murciélagos bordados en el jersey de color rosa, y el dibujo del&#10;chintz de los muebles se parecía un poco a... murciélagos. El&#10;perrito con un lazo alrededor del cuello que había tumbado y&#10;encogido sobre un cojín tenía más aspecto de rata que de perro.&#10;Vimes no estaba seguro de que esto último fuera raro, sin&#10;embbrgo ya que los perros de aquella naturaleza siempre solían&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>output.txt</span>
    </div>
</div>
<h4 id="reconocimiento-de-texto-con-un-programa-con-interfaz-gráfica">Reconocimiento de texto con un programa con interfaz gráfica</h4>
<p>Para usos esporádicos, realizar de forma más intuitiva o con alguna funcionalidad adicional también hay disponibles programas con interfaz gráfica.</p>
<p>Una herramienta con interfaz gráfica en GNU/Linux es <a href="https://github.com/manisandro/gImageReader">gImageReader</a>. Es un programa que utiliza el reconocimiento de caracteres de <em>tesseract</em> que como funcionalidad adicional permite seleccionar el área o áreas de la imagen de las que se desea reconocer el texto.</p>
<p>El reconocimiento de texto se realiza de forma rápida y se proporciona en forma de texto que se puede copiar y pegar en otro programa o documento. Es posible seleccionar las diferentes áreas de la imagen en las que realizar el reconocimiento de texto. También es posible realizar cierta edición en la imagen para rotarla y que las líneas de texto estén lo más horizontales posible, también es posible instalar un diccionario del idioma del texto para en las palabras en las que haya errores de reconocimiento utilizando un diccionario sean corregidos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/gimagereader-1_hu3bcdbab8fb805b488c42952b17312ea1_1168581_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Programa con interfaz gráfica para OCR en GNU/Linux"><img src="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/gimagereader-1_hu3bcdbab8fb805b488c42952b17312ea1_1168581_650x450_fit_box_3.png" width="561" height="450" alt="Programa con interfaz gráfica para OCR en GNU/Linux" title="Programa con interfaz gráfica para OCR en GNU/Linux"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/gimagereader-2_hu9a1a7e9b8625fc708b4bf329fd7084fa_1289849_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Programa con interfaz gráfica para OCR en GNU/Linux"><img src="https://picodotdev.github.io/blog-bitix/2021/04/herramientas-de-reconocimiento-de-texto-en-imagenes-con-ocr/images/gimagereader-2_hu9a1a7e9b8625fc708b4bf329fd7084fa_1289849_650x450_fit_box_3.png" width="561" height="450" alt="Programa con interfaz gráfica para OCR en GNU/Linux" title="Programa con interfaz gráfica para OCR en GNU/Linux"  class="lozad "></a></p>
<figcaption>Programa con interfaz gráfica para OCR en GNU/Linux</figcaption>
</figure>
</div>
<h4 id="herramientas-en-línea-de-reconocimiento-de-texto-sin-instalar-software">Herramientas en línea de reconocimiento de texto sin instalar software</h4>
<p>También hay disponibles herramientas en internet que proporcionan la funcionalidad de reconocimiento de texto proporcionando la imagen de la que se quiere reconocer el texto. Por privacidad y seguridad, la imagen proporcionada a estas herramientas en línea no ha de contener información personal o con información privada importante es más conveniente instalar la herramienta de línea de comandos o con interfaz gráfica anteriores.</p>
<p>Dos herramientas en línea de OCR que aceptan diferentes formatos de imagen son:</p>
<ul>
<li><a href="https://www.newocr.com/">Free Online OCR</a></li>
<li><a href="https://onlineocr.org/">Online OCR</a>.</li>
</ul>
<h3 id="ocr-con-java">OCR con Java</h3>
<p>Para automatizar el reconocimiento de caracteres en un programa propio hay una librería que permite invocar la funcionalidad de <em>tesseract</em> desde un programa implementado con el lenguaje de programación Java.</p>
<p>La librería requiere instalar el paquete de <em>tesseract</em> en el sistema o en <a href="https://www.microsoft.com/es-es/windows/">Windows</a> extraer y cargar su librería <em>dll</em> incluída en el propio archivo <em>jar</em> de la librería. También para mayor efectividad requiere descargar los <a href="https://github.com/tesseract-ocr/tessdata_best">modelos entrenados para mayor efectividad</a> o los <a href="https://github.com/tesseract-ocr/tessdata_fast">modelos para mayor rapided</a> según el idioma para los caracteres del texto.</p>
<p>Por defecto, la librería procesa la imagen entera, sin embargo al igual que en la aplicación con interfaz gráfica es posible aplicar el reconocimiento de texto a un área especifica de la imagen usando un objeto <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/Rectangle.html">java.awt.Rectangle</a> al invocar el método sobrecargado <em>doOCR</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javatesseract</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.awt.*</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.awt.image.BufferedImage</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">net.sourceforge.tess4j.Tesseract</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Tesseract</span> <span class="n">tesseract</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Tesseract</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tesseract</span><span class="o">.</span><span class="na">setLanguage</span><span class="o">(</span><span class="s">&#34;spa&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tesseract</span><span class="o">.</span><span class="na">setDatapath</span><span class="o">(</span><span class="s">&#34;src/main/resources/tesseract&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tesseract</span><span class="o">.</span><span class="na">setOcrEngineMode</span><span class="o">(</span><span class="n">1</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BufferedImage</span> <span class="n">image</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&#34;/image.jpg&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">tesseract</span><span class="o">.</span><span class="na">doOCR</span><span class="o">(</span><span class="n">image</span><span class="o">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="o">(</span><span class="n">275</span><span class="o">,</span> <span class="n">375</span><span class="o">,</span> <span class="n">1287</span> <span class="o">-</span> <span class="n">275</span><span class="o">,</span> <span class="n">1796</span> <span class="o">-</span> <span class="n">375</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>En el archivo de construcción del programa se ha de añadir la dependencia sobre la librería Java.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;net.sourceforge.tess4j:tess4j:4.5.4&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javatesseract.Main&#39;</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaTesseract">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.howtogeek.com/682389/how-to-do-ocr-from-the-linux-command-line-using-tesseract/">How to Do OCR from the Linux Command Line Using Tesseract</a></li>
<li><a href="https://wiki.gnome.org/action/show/Apps/OCRFeeder?action=show&amp;redirect=OCRFeeder">OCRFeeder</a></li>
<li><a href="https://www.gnu.org/software/ocrad/">Ocrad - The GNU OCR</a></li>
<li><a href="https://www.archlinux.org/packages/community/x86_64/gocr/">GOCR: open-source character recognition</a></li>
<li><a href="https://www.javacodegeeks.com/2020/08/ocr-in-java-with-tess4j.html">OCR in Java with Tess4J</a></li>
<li><a href="https://www.baeldung.com/java-ocr-tesseract">Optical Character Recognition with Tesseract</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/04/las-clases-y-librerias-basicas-de-java-para-bases-de-datos-relacionales/</id>
        <title>Las clases y librerías básicas de Java para bases de datos relacionales</title>
        <updated>2021-04-09T19:00:00+02:00</updated>
        <published>2021-04-09T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/04/las-clases-y-librerias-basicas-de-java-para-bases-de-datos-relacionales/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las aplicaciones suelen delegar el guardado del estado y de los datos que tratan en sistemas especializados en almacenar datos. Las bases de datos relacionales son sistemas que han probado su eficacia y utilizad durante las últimas décadas de la computación. Aún con la aparición de múltiples bases de datos NoSQL alternativas las bases de datos relacionales se seguirán utilizando o incluso combinando diferentes tipos de bases de datos en un mismo sistema. Java proporciona desde sus primeras versiones el paquete <em>java.sql</em> con varias clases para el acceso a bases de datos relacionales, aunque el acceso a las bases de datos relacionales se suele utilizar a través de librerías es útil conocer estas clases de Java que constituyen los conceptos fundamentales de acceso a base de datos y que las librerías internamente son las que usan.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La mayoría de las aplicaciones usan una base de datos para guardar persistir, consultar datos o guardar el estado de la aplicación. Las bases de datos son los sistemas especializados en guardar la información de las aplicaciones.</p>
<p>Dentro de la categoría de bases de datos las relacionales son unas de las más utilizadas por sus propiedades <a href="https://es.wikipedia.org/wiki/ACID">ACID</a> y el potente lenguaje de consultas SQL. Las bases de datos relacionales siguen siendo adecuadas para muchos usos y propósitos aún con la aparición de las bases de datos NoSQL también útiles cuando existe ciertos requerimientos.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="clases-del-jdk-para-acceso-a-base-de-datos-relacionales">Clases del JDK para acceso a base de datos relacionales</h3>
<p>Java ofrece soporte para las bases de datos relacionales desde prácticamente las primeras versiones del JDK hasta día de hoy incorporando un conjunto de clases en el paquete <em>java.sql</em> en la denominada API en Java de <a href="https://en.wikipedia.org/wiki/Java_Database_Connectivity">Java Database Connectivity</a> o JDBC.</p>
<p>Las principales clases de la API de JDBC son las clases <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.sql/java/sql/Statement.html">Statement</a> y <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.sql/java/sql/PreparedStatement.html">PreparedStatement</a> que representan la sentencia SQL ya sea de inserción, actualización, eliminación o consulta así como las sentencias DDL para la creación de tablas, índices, campos o procedimientos almacenados. Normalmente se utiliza la clase <em>PreparedStatement</em> ya que tiene beneficios en cuanto a rendimiento al ejecutarse de forma repetida y utilizada correctamente permite evitar el grave problema de seguridad de <em>SQL injection</em> común en las aplicaciones que construyen de forma dinámica con concatenaciones sentencias SQL utilizando datos procedentes de fuentes no confiables como parámetros de una petición HTTP, de JSON u otras fuentes externas a la aplicación.</p>
<p>La clase <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.sql/java/sql/ResultSet.html">ResultSet</a> es la clase que proporciona el acceso a los datos cuando se ejecuta una sentencia SQL de consulta, la clase se itera en los resultados y se obtienen los datos según los nombres o índices asignados en la consulta para las columnas.</p>
<p>La clase <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.sql/java/sql/Connection.html">Connection</a> representa una conexión a una base de datos, hay que crear una conexión ya que las bases de datos trabajan con una arquitectura de cliente y servidor, la aplicación actúa de cliente y la base de datos actúa de servidor. A través de la clase <em>Connection</em> se inicia una transacción y finaliza con el <em>commit</em> o el <em>rollback</em>. Para crear la conexión de la base de datos se proporcionan las credenciales de usuario y contraseña.</p>
<p>Las bases de datos relacionales soportan transacciones para proporcionar las propiedades ACID para lo que se utilizan las transacciones. Atomicidad donde un grupo de operaciones individuales se ejecutan todas o ninguna, consistencia mediante la cual los cambios son válidos según las reglas incluyendo restricciones, cambios en cascada, y disparadores, aislamiento donde los cambios de una transacción no se ven afectados por los cambios realizados en otras transacciones concurrentes y finalmente durabilidad que garantiza que en caso de completarse la transacción perdura en el tiempo aún cuando el sistema sufra un fallo posterior.</p>
<p>Crear una conexión a una base de datos es costoso, para evitar incurrir en este tiempo de creación y destrucción de conexiones o limitar el número de conexiones que una aplicación utiliza como máximo las aplicaciones utilizan un <em>pool</em> de conexiones. Las conexiones se crean al iniciar la aplicación o bajo demanda según se van necesitando más hasta el límite máximo definido. Cuando la aplicación necesita una conexión la obtiene de forma rápida del <em>pool</em> de conexiones y cuando termina de utilizarla la devuelve al <em>pool</em> de conexiones para que sea reutilizada en posteriores usos.</p>
<p>Cada base de datos utiliza un protocolo diferente de comunicación con los clientes por lo que es necesario un componente que abstrae de las peculiaridades de cada base de datos y proporcione un marco común de trabajo independiente de cada base de datos. Cada base de datos requiere de un <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.sql/java/sql/Driver.html">Driver</a> compatible también con la versión de la base de datos. Generalmente, son los desarrolladores de la propia base de datos los que proporcionan un <em>driver</em> específico adecuado para el acceso a la base de datos desde Java que cumple con las APIs de JDBC.</p>
<p>En el <a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/index.html">tutorial sobre SQL con Java</a> se explican los conceptos básicos y fundamentales para usar bases de datos relacionales.</p>
<h3 id="ejemplo-de-conexión-y-consulta-a-un-base-de-datos-relacional-con-la-api-de-java">Ejemplo de conexión y consulta a un base de datos relacional con la API de Java</h3>
<p>En este ejemplo de código se muestra el uso de las clases fundamentales de Java para usar una base de datos relacional. El primer paso es establecer una conexión con la base de datos, en este caso usando la base de datos H2 en memoria.</p>
<p>Posteriormente se ejecuta una sentencia DDL para crear una tabla, se insertan varias filas con la sentencia <em>insert</em> y se obtienen los datos de la tabla con una sentencia <em>select</em>. Después de las inserciones se realiza un <em>commit</em> que completa una transacción en la base de datos, si en vez del <em>commit</em> se hiciese un <em>rollback</em> al obtener los datos con la consulta posterior la tabla aparecería vacía.</p>
<p>Las clases <em>Connection</em>, <em>Statemente</em>, <em>PreparedStatement</em> y <em>ResultSet</em> al finalizar su uso hay que invocar su método <em>close</em> para liberar los recursos que tienen reservados, especialmente en el caso de las conexiones ya que son un recurso limitado. Estas clases implementan la interfaz <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/AutoCloseable.html">AutoCloseable</a> con lo que son adecuadas para las sentencias <em>try-with-resources</em> de Java.</p>
<h4 id="establecer-la-conexión-a-la-base-de-datos">Establecer la conexión a la base de datos</h4>
<p>Por defecto después de cada sentencia Java emite un <em>commit</em>, esto no es lo deseado en el caso de querer agrupar la ejecución de varias sentencias en una transacción, para evitarlo hay que usar la opción <em>setAutoCommit</em> a <em>false</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blgbitix.javasql</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.sql.Connection</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.sql.DriverManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.sql.PreparedStatement</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.sql.ResultSet</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.sql.Statement</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.text.DecimalFormat</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Locale</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DriverManager</span><span class="o">.</span><span class="na">drivers</span><span class="o">().</span><span class="na">forEach</span><span class="o">(</span><span class="n">d</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Driver: %s%n&#34;</span><span class="o">,</span> <span class="n">d</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">(</span><span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">&#34;jdbc:h2:mem:database&#34;</span><span class="o">,</span> <span class="s">&#34;sa&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">connection</span><span class="o">.</span><span class="na">setAutoCommit</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-1.java</span>
    </div>
</div>
<h4 id="ejecutar-una-sentencia-con-_statement_">Ejecutar una sentencia con <em>Statement</em></h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">Statement</span> <span class="n">statement</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">createStatement</span><span class="o">();</span>&#10;<span class="n">statement</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="s">&#34;CREATE TABLE product(id INT IDENTITY NOT NULL PRIMARY KEY, name VARCHAR(255), price DECIMAL(20, 2))&#34;</span><span class="o">);</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-2.java</span>
    </div>
</div>
<h4 id="ejecutar-una-sentencia-con-_preparedstatement_">Ejecutar una sentencia con <em>PreparedStatement</em></h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">PreparedStatement</span> <span class="n">preparedStatement</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="s">&#34;INSERT INTO product (name, price) values (?, ?)&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;id&#34;</span> <span class="o">});</span>&#10;&#10;<span class="n">preparedStatement</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="s">&#34;PlayStation 5&#34;</span><span class="o">);</span>&#10;<span class="n">preparedStatement</span><span class="o">.</span><span class="na">setBigDecimal</span><span class="o">(</span><span class="n">2</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;499.99&#34;</span><span class="o">));</span>&#10;<span class="n">preparedStatement</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>&#10;&#10;<span class="n">ResultSet</span> <span class="n">resultSet1</span> <span class="o">=</span> <span class="n">preparedStatement</span><span class="o">.</span><span class="na">getGeneratedKeys</span><span class="o">();</span>&#10;<span class="k">while</span> <span class="o">(</span><span class="n">resultSet1</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Primary key: %s%n&#34;</span><span class="o">,</span> <span class="n">resultSet1</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="n">1</span><span class="o">));</span>&#10;<span class="o">}</span>&#10;<span class="n">resultSet1</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;&#10;<span class="n">preparedStatement</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="s">&#34;Xbox Series X&#34;</span><span class="o">);</span>&#10;<span class="n">preparedStatement</span><span class="o">.</span><span class="na">setBigDecimal</span><span class="o">(</span><span class="n">2</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;499.99&#34;</span><span class="o">));</span>&#10;<span class="n">preparedStatement</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>&#10;&#10;<span class="n">ResultSet</span> <span class="n">resultSet2</span> <span class="o">=</span> <span class="n">preparedStatement</span><span class="o">.</span><span class="na">getGeneratedKeys</span><span class="o">();</span>&#10;<span class="k">while</span> <span class="o">(</span><span class="n">resultSet2</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Primary key: %s%n&#34;</span><span class="o">,</span> <span class="n">resultSet2</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="n">1</span><span class="o">));</span>&#10;<span class="o">}</span>&#10;<span class="n">resultSet2</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;&#10;<span class="n">connection</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-3.java</span>
    </div>
</div>
<h4 id="ejecutar-una-consulta">Ejecutar una consulta</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">PreparedStatement</span> <span class="n">preparedStatement</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="s">&#34;SELECT id, name, price FROM product&#34;</span><span class="o">);</span>&#10;&#10;<span class="n">ResultSet</span> <span class="n">resultSet</span> <span class="o">=</span> <span class="n">preparedStatement</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>&#10;<span class="k">while</span> <span class="o">(</span><span class="n">resultSet</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Product (id: %s, name: %s, price: %s)%n&#34;</span><span class="o">,</span> <span class="n">resultSet</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="n">1</span><span class="o">),</span> <span class="n">resultSet</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">2</span><span class="o">),</span> <span class="n">DecimalFormat</span><span class="o">.</span><span class="na">getCurrencyInstance</span><span class="o">(</span><span class="k">new</span> <span class="n">Locale</span><span class="o">(</span><span class="s">&#34;es&#34;</span><span class="o">,</span> <span class="s">&#34;ES&#34;</span><span class="o">)).</span><span class="na">format</span><span class="o">(</span><span class="n">resultSet</span><span class="o">.</span><span class="na">getBigDecimal</span><span class="o">(</span><span class="n">3</span><span class="o">)));</span>&#10;<span class="o">}</span>&#10;<span class="n">resultSet</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-4.java</span>
    </div>
</div>
<h4 id="cerrar-la-conexión-de-forma-explícita">Cerrar la conexión de forma explícita</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">connection</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-5.java</span>
    </div>
</div>
<h4 id="resultado">Resultado</h4>
<p>El resultado del programa en la terminal es el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Driver: org.h2.Driver&#10;Primary key: 1&#10;Primary key: 2&#10;Product (id: 1, name: PlayStation 5, price: 499,99 €)&#10;Product (id: 2, name: Xbox Series X, price: 499,99 €)</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<h4 id="dependencia-con-el-_driver_-de-la-base-de-datos">Dependencia con el <em>driver</em> de la base de datos</h4>
<p>En el archivo de construcción hay quu añadir la dependencia que contiene el <em>driver</em> para la base de datos a conectarse.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.h2database:h2:1.4.200&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blgbitix.javasql.Main&#39;</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<h3 id="el-problema-de-seguridad-de-_sql-injection_">El problema de seguridad de <em>SQL injection</em></h3>
<p>El problema de seguridad de <em>SQL injection</em> es un grave problema de seguridad que afecta a las aplicaciones que construyen sentencias de forma dinámica a partir de datos provenientes de origen no confiable. Un origen no confiable es cualquier dato proveniente de forma externa a la aplicación, en el caso de las aplicaciones web o servicios REST es un parámetro de la petición o un dato de un JSON.</p>
<p>El <em>SQL injection</em> es un grave problema de seguridad ya que permite al atacante tener acceso a datos de la base de datos, obtener acceso con una cuenta de otro usuario o realizar operaciones sobre los datos de forma no autorizada. El problema se produce en la construcción de forma dinámica de la sentencia SQL mediante la concatenación de cadenas y datos de origen no confiable.</p>
<p>Las siguientes sentencias SQL sufren del problema de <em>SQL injection</em>, en la primera un atacante puede obtener un dato de cualquier columna de la tabla y con la segunda ejecutar una sentencia en este caso para eliminar todas las filas de cualquier tabla.</p>
<p>En la primera cambiando el valor de <em>column</em> se obtiene el dato de cualquier columna de la tabla, por ejemplo el campo <em>password</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s2">&#34;SELECT id, &#34;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="k">column</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">&#34; FROM users WHERE user_id = &#34;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">userId</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="s2">&#34;SELECT id, password FROM users WHERE user_id = 1</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sql-injection-1.sql</span>
    </div>
</div>
<p>En esta sentencia se finaliza la sentencia original con <em>;</em> y se inicia otra lo que provoca la eliminación de una tabla, con un valor para <em>user_id</em> especialmente construido para ejecutar la sentencia maliciosa de eliminación de la tabla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="s2">&#34;SELECT * FROM users WHERE user_id = &#34;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">userId</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="s2">&#34;SELECT * FROM users WHERE user_id = 105; DROP TABLE users;&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sql-injection-2.sql</span>
    </div>
</div>
<p>La solución al problema de seguridad de <em>SQL injection</em> en Java es no construir la sentencia de forma dinámica mediante concatenación de cadenas utilizando la clase <em>PreparedStatement</em> con argumentos para los datos que se inserten en la sentencia SQL.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">PreparedStatement</span> <span class="n">preparedStatement</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="s">&#34;SELECT * FROM users WHERE user_id = ?&#34;</span><span class="o">});</span>&#10;<span class="n">preparedStatement</span><span class="o">.</span><span class="na">setInt</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">);</span>&#10;<span class="n">preparedStatement</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sql-injection-prepared-statement.java</span>
    </div>
</div>
<h3 id="librerías-de-persistencia-en-java">Librerías de persistencia en Java</h3>
<p>Habitualmente no se utilizan directamente las clases de la API de Java sino que se utilizan otras librerías de más alto nivel. Una de las más conocidas es <a href="https://hibernate.org/">Hibernate</a>, es un ORM que proporciona acceso a los datos con una correspondencia entre el modelo relacional de las bases de datos y el modelo de objetos de Java. La aplicación trabaja con objetos y relaciones entre los objetos e Hibernate se encarga de transformar esos objetos en el modelo relacional de la base de datos, la aplicación no ejecuta sentencias SQL de forma directa sino que es Hibernate el encargado de emitir las sentencias adecuadas según los cambios realizados en los datos. Es la implementación más utilizada de ORM en Java para la especificación JPA.</p>
<ul>
<li><a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry">Aplicación de ejemplo con Hibernate, jOOQ y Liquibase</a></li>
</ul>
<p><a href="https://spring.io/projects/spring-data">Spring Data</a> es una capa de abstracción para el acceso a datos ya sean de un modelo relacional, de bases de datos NoSQL o algunos otros sistemas de datos. Spring Data hace más sencillo el acceso a los datos utilizando de forma subyacente JDBC o JPA. Spring Data proporciona algunas clases e interfaces que la aplicación implementa.</p>
<p><a href="https://www.jooq.org/">jOOQ</a> también es otra librería de acceso a bases de datos relacionales, proporciona DSL para la construcción de sentencias SQL mediante un API Java. A diferencia de JPA con su lenguaje JPQL, jOOQ soporta características avanzadas del lenguaje SQL como <a href="https://www.jooq.org/doc/latest/manual/sql-building/column-expressions/window-functions/"><em>windows functions</em></a>. Otra ventaja de jOOQ es que al utilizar su DSL el compilador de Java realiza validación de tipos y comprobaciones en la sintaxis de la construcción de la SQL.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ</a></li>
</ul>
<p>Algunas aplicaciones combinan el uso de varias de estas librerías en la misma aplicación según el caso, por ejemplo utilizando Hibernate para el modelo de escritura y jOOQ o Spring Data para el modelo de lectura. También es posible utilizar jOOQ para generar las sentencias SQL y posteriormente ejecutarlas con Hibernate o Spring Data.</p>
<p><a href="https://www.liquibase.org/">Liquibase</a> es otra librería de utilidad que permite lanzar <em>scripts</em> de migración con sentencias SQL para realizar cambios en la base de datos como modificar el esquema de tablas, insertar, actualizar o eliminar datos. Es necesario si los cambios en el código en una nueva versión de la aplicación requiere cambios en el esquema de la base de datos.</p>
<p>Estas no son las únicas librerías existentes pero sí son de las más conocidas y utilizadas.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hibernate.svg" width="200" height="150" alt="Hibernate" title="Hibernate"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="150" alt="Spring" title="Spring"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/jooq.png" width="200" height="150" alt="jOOQ" title="jOOQ"  class="lozad "></p>
</figure>
</div>
<h3 id="bases-de-datos-relacionales">Bases de datos relacionales</h3>
<p>Las bases de datos de software libre más utilizadas son <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://mariadb.org/">MariaDB</a> y <a href="https://www.mysql.com/">MySQL</a> que rivalizan con la base de datos <a href="https://www.oracle.com/database/">Oracle</a> comercial. PostgreSQL es adecuada incluso para organizaciones y proyectos de gran tamaño.</p>
<p>Otras bases de datos relevantes son <a href="https://www.h2database.com/html/main.html">H2</a> una base de datos implementada en Java con características avanzadas que es posible utilizar para los teses de integración al no requerir de un servidor y ser posible ejecutarla en memoria. Para realizar las <a href="https://picodotdev.github.io/blog-bitix/2020/06/pruebas-de-integracion-con-testcontainers-ejemplo-de-jpa-con-la-base-de-datos-postgresql/">pruebas de integración utilizando la misma base de datos que en producción</a> es posible utilizar <a href="https://www.testcontainers.org/">Testcontainers</a> que utiliza <a href="https://www.docker.com/">Docker</a> para iniciar una instancia de la base de datos en un contenedor.</p>
<p>La conexión a la base de datos por seguridad requiere de un usuario y contraseña que la aplicación ha de conocer, para aún mayor seguridad es posible <a href="https://picodotdev.github.io/blog-bitix/2019/08/utilizar-credenciales-de-conexion-a-la-base-de-datos-generadas-por-vault-en-una-aplicacion-de-spring/">generar las credenciales de conexión a la base de datos de forma dinámica por Vault en una aplicación de Spring</a>.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="150" alt="PostgreSQL" title="PostgreSQL"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/mariadb.svg" width="200" height="150" alt="MariaDB" title="MariaDB"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/mysql.svg" width="200" height="150" alt="MySQL" title="MySQL"  class="lozad "></p>
</figure>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaSql">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción y características de Docker</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/04/programas-basados-en-consola-con-java-usando-lanterna/</id>
        <title>Programas basados en consola con Java usando Lanterna</title>
        <updated>2021-04-04T00:00:00+02:00</updated>
        <published>2021-04-04T00:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/04/programas-basados-en-consola-con-java-usando-lanterna/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Todavía hoy en día la terminal no ha desaparecido, y no lo hará, aún habiendo pasado ya algunas décadas de la aparición de las interfaces gráficas. Algunas ventajas de la terminal es que conociendo los comandos es más fácil realizar una tarea que con un programa basado en una ventana con botones que hay que pulsar usando el ratón, además las tareas usando comandos se pueden automatizar con <em>scripts</em> y combinar varios donde la entrada de uno sea la salida de otros dando lugar a funcionalidades mucho más complejas que las que realizan los comandos individualmente. También los comandos son más eficientes al no requerir tantos recursos del sistema. Por todo ello los comandos y programas basados en la consola o terminal no van a desaparecer.</p>
<p>En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> la terminal es una parte importante del sistema con la que es posible realizar muchas de las tareas, es más fácil y habitual para tareas repetitivas. <a href="https://invisible-island.net/ncurses/announce.html">ncurses</a> es una librería para desarrollar programas basados en texto pero simulando una interfaz gráfica. Se pueden crear ventanas, botones, mensajes de texto, paneles, gestores de disposición o <em>layouts</em>, etiquetas, cajas de texto, selectores, botones <em>check</em> y <em>radio</em>, diálogos, etc&hellip;</p>
<p>En Java está la librería <a href="https://github.com/mabe02/lanterna">Lanterna</a> que proporciona similar funcionalidad que ncurses, y quizá más, sirve para el mismo propósito pero con una implementación completamente basada en Java y sin necesidad de recurrir a código nativo. En la <a href="https://github.com/mabe02/lanterna/blob/master/docs/contents.md">documentación de Lanterna</a> hay varios ejemplos y guías de las <a href="https://mabe02.github.io/lanterna/apidocs/3.1/">clases principales que forman la API</a>.</p>
<p>Un ejemplo de uso posible para Lanterna es realizar un instalador basado en texto para el <a href="https://picodotdev.github.io/blog-bitix/2017/01/script-para-instalar-arch-linux-facil-rapido-desatendido-automatizado-y-personalizable/"><em>script</em> de instalación de Arch Linux</a> que implementé y mantengo desde hace un tiempo. Con Lanterna es posible crear el instalador o configurador para la instalación desatendida y automatizada que junto con <a href="https://picodotdev.github.io/blog-bitix/2018/03/la-herramienta-jlink-para-generar-runtimes-de-java-incluyendo-exclusivamente-los-modulos-que-usa-una-aplicacion/">jlink para crear un <em>runtime</em> distribuible de Java</a> es posible ejecutar sin necesidad de instalar Java previamente en el sistema y utilizando la imagen que proporciona Arch Linux sin necesidad de modificarla.</p>
<p>El siguiente código muestra lo que podría ser la pantalla inicial de este instalador usando Lanterna.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.lanterna</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.SGR</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.TerminalSize</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.TextColor</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.graphics.SimpleTheme</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.BasicWindow</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.BorderLayout</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.Button</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.DefaultWindowManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.EmptySpace</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.GridLayout</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.Label</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.MultiWindowTextGUI</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.Panel</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.gui2.Window</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.screen.Screen</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.screen.TerminalScreen</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.terminal.DefaultTerminalFactory</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.googlecode.lanterna.terminal.Terminal</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Terminal</span> <span class="n">terminal</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTerminalFactory</span><span class="o">().</span><span class="na">createTerminal</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Screen</span> <span class="n">screen</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TerminalScreen</span><span class="o">(</span><span class="n">terminal</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">screen</span><span class="o">.</span><span class="na">startScreen</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Panel</span> <span class="n">titlePanel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panel</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">titlePanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">Label</span><span class="o">(</span><span class="s">&#34; &#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">titlePanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">Label</span><span class="o">(</span><span class="s">&#34; Arch Linux Installation&#34;</span><span class="o">).</span><span class="na">addStyle</span><span class="o">(</span><span class="n">SGR</span><span class="o">.</span><span class="na">BOLD</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Panel</span> <span class="n">buttonsPanel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panel</span><span class="o">(</span><span class="k">new</span> <span class="n">GridLayout</span><span class="o">(</span><span class="n">2</span><span class="o">).</span><span class="na">setHorizontalSpacing</span><span class="o">(</span><span class="n">1</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">buttonsPanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">Button</span><span class="o">(</span><span class="s">&#34;Continue&#34;</span><span class="o">,</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="n">0</span><span class="o">)));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">buttonsPanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">Button</span><span class="o">(</span><span class="s">&#34;Exit&#34;</span><span class="o">,</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="n">0</span><span class="o">)));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">buttonsPanel</span><span class="o">.</span><span class="na">setLayoutData</span><span class="o">(</span><span class="n">GridLayout</span><span class="o">.</span><span class="na">createLayoutData</span><span class="o">(</span><span class="n">GridLayout</span><span class="o">.</span><span class="na">Alignment</span><span class="o">.</span><span class="na">END</span><span class="o">,</span> <span class="n">GridLayout</span><span class="o">.</span><span class="na">Alignment</span><span class="o">.</span><span class="na">CENTER</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="kc">false</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Panel</span> <span class="n">contentPanel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panel</span><span class="o">(</span><span class="k">new</span> <span class="n">GridLayout</span><span class="o">(</span><span class="n">1</span><span class="o">).</span><span class="na">setLeftMarginSize</span><span class="o">(</span><span class="n">1</span><span class="o">).</span><span class="na">setRightMarginSize</span><span class="o">(</span><span class="n">1</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentPanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">EmptySpace</span><span class="o">(</span><span class="k">new</span> <span class="n">TerminalSize</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">1</span><span class="o">)));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentPanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">Label</span><span class="o">(</span><span class="s">&#34;Welcome to Arch Linux Install Script.\n\nThis automated, unnatended and configurable script\nwill install Arch Linux on your system.&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentPanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">EmptySpace</span><span class="o">(</span><span class="k">new</span> <span class="n">TerminalSize</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">1</span><span class="o">)));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentPanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">Label</span><span class="o">(</span><span class="s">&#34;Warning!\n\nThis script deletes all partitions of the persistent\nstorage and continuing all your data in it will be lost.&#34;</span><span class="o">).</span><span class="na">setForegroundColor</span><span class="o">(</span><span class="n">TextColor</span><span class="o">.</span><span class="na">ANSI</span><span class="o">.</span><span class="na">RED</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">contentPanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="k">new</span> <span class="n">EmptySpace</span><span class="o">(</span><span class="k">new</span> <span class="n">TerminalSize</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">1</span><span class="o">)));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">buttonsPanel</span><span class="o">.</span><span class="na">setLayoutData</span><span class="o">(</span><span class="n">GridLayout</span><span class="o">.</span><span class="na">createLayoutData</span><span class="o">(</span><span class="n">GridLayout</span><span class="o">.</span><span class="na">Alignment</span><span class="o">.</span><span class="na">END</span><span class="o">,</span> <span class="n">GridLayout</span><span class="o">.</span><span class="na">Alignment</span><span class="o">.</span><span class="na">CENTER</span><span class="o">,</span><span class="kc">false</span><span class="o">,</span><span class="kc">false</span><span class="o">)).</span><span class="na">addTo</span><span class="o">(</span><span class="n">contentPanel</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Panel</span> <span class="n">mainPanel</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Panel</span><span class="o">(</span><span class="k">new</span> <span class="n">BorderLayout</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainPanel</span><span class="o">.</span><span class="na">addComponent</span><span class="o">(</span><span class="n">titlePanel</span><span class="o">,</span> <span class="n">BorderLayout</span><span class="o">.</span><span class="na">Location</span><span class="o">.</span><span class="na">TOP</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BasicWindow</span> <span class="n">mainWindow</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicWindow</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainWindow</span><span class="o">.</span><span class="na">setHints</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">Window</span><span class="o">.</span><span class="na">Hint</span><span class="o">.</span><span class="na">FULL_SCREEN</span><span class="o">,</span> <span class="n">Window</span><span class="o">.</span><span class="na">Hint</span><span class="o">.</span><span class="na">NO_DECORATIONS</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainWindow</span><span class="o">.</span><span class="na">setTheme</span><span class="o">(</span><span class="k">new</span> <span class="n">SimpleTheme</span><span class="o">(</span><span class="n">TextColor</span><span class="o">.</span><span class="na">ANSI</span><span class="o">.</span><span class="na">WHITE</span><span class="o">,</span> <span class="n">TextColor</span><span class="o">.</span><span class="na">ANSI</span><span class="o">.</span><span class="na">BLUE</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainWindow</span><span class="o">.</span><span class="na">setComponent</span><span class="o">(</span><span class="n">mainPanel</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BasicWindow</span> <span class="n">window</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicWindow</span><span class="o">(</span><span class="s">&#34;Arch Linux Installation&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">window</span><span class="o">.</span><span class="na">setHints</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">Window</span><span class="o">.</span><span class="na">Hint</span><span class="o">.</span><span class="na">CENTERED</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">window</span><span class="o">.</span><span class="na">setComponent</span><span class="o">(</span><span class="n">contentPanel</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">MultiWindowTextGUI</span> <span class="n">gui</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MultiWindowTextGUI</span><span class="o">(</span><span class="n">screen</span><span class="o">,</span> <span class="k">new</span> <span class="n">DefaultWindowManager</span><span class="o">(),</span> <span class="k">new</span> <span class="n">EmptySpace</span><span class="o">(</span><span class="n">TextColor</span><span class="o">.</span><span class="na">ANSI</span><span class="o">.</span><span class="na">BLUE</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gui</span><span class="o">.</span><span class="na">addWindow</span><span class="o">(</span><span class="n">mainWindow</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gui</span><span class="o">.</span><span class="na">addWindow</span><span class="o">(</span><span class="n">window</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gui</span><span class="o">.</span><span class="na">waitForWindowToClose</span><span class="o">(</span><span class="n">mainWindow</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">gui</span><span class="o">.</span><span class="na">setActiveWindow</span><span class="o">(</span><span class="n">window</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;com.googlecode.lanterna:lanterna:3.1.1&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.lanterna.Main&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="s1">&#39;11&#39;</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/04/programas-basados-en-consola-con-java-usando-lanterna/images/lanterna_hu24edf9756fc7ba259961f103685e76b6_38126_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Hola Mundo con Lanterna"><img src="https://picodotdev.github.io/blog-bitix/2021/04/programas-basados-en-consola-con-java-usando-lanterna/images/lanterna_hu24edf9756fc7ba259961f103685e76b6_38126_650x450_fit_box_3.png" width="610" height="450" alt="Hola Mundo con Lanterna" title="Hola Mundo con Lanterna"  class="lozad "></a></p>
<figcaption>Hola Mundo con Lanterna</figcaption>
</figure>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Lanterna">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew distZip &amp;&amp; unzip -o -d app/build/distributions/ app/build/distributions/app.zip &amp;&amp; ./app/build/distributions/app/bin/app</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/">Formatear con color sentencias SQL o código fuente en la terminal con Java y Jansi</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/">Convertir texto o imagen a arte de caracteres ASCII</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/</id>
        <title>Convertir texto o imagen a arte de caracteres ASCII</title>
        <updated>2021-03-27T00:00:00+01:00</updated>
        <published>2021-03-27T00:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El arte ASCII es utilizar caracteres para obtener una composición que simula una imagen o dibujo. Es posible convertir texto a arte de caracteres ASCII o una imagen en formato <em>svg</em>, <em>jpeg</em> o <em>png</em> a texto. En GNU/Linux hay herramientas de línea de comandos que permiten crear arte ASCII tanto para texto como para imágenes. En internet también hay disponibles páginas que ofrecen el servicio de generar arte ASCII sin necesidad de instalar ningún software en la propia computadora.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Con la combinación adecuada de caracteres y varias líneas de texto es posible crear composiciones artísticas de texto, formando un arte ASCII basado en múltiples caracteres. El arte ASCII permite crear dibujos o convertir una frase en un texto en forma de dibujo.</p>
<p>El arte ASCII es adecuado para ser mostrado en interfaces basadas en texto como la terminal del sistema operativo. En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> hay utilidades de línea de comandos que permiten crear arte ASCII, también hay páginas web que proporcionan la funcionalidad sin necesidad de instalar ningún software en el sistema.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="texto-a-arte-de-caracteres-ascii">Texto a arte de caracteres ASCII</h3>
<p>La herramienta <a href="http://www.figlet.org/">figlet</a> de linea de comandos permite convertir una frase a arte ASCII, es posible configurarla con diferentes estilos de fuente que producen resultados diferentes en el arte ASCII. Utilizando caracteres de escape de la terminal es posible añadir colores, <a href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/">Jansi es una librería Java que permite añadir colores a texto emitido en la terminal</a>.</p>
<p>Además de instalar el paquete de <em>figlet</em> en la distribución de GNU/Linux hay que descargar los <a href="http://www.figlet.org/fontdb.cgi">archivos de las fuentes</a> para generar el arte ASCII con el estilo deseado. La fuente se indica en el comando con el parámetro <em>-f</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ figlet -w <span class="m">240</span> <span class="s2">&#34;Blog Bitix&#34;</span>&#10;$ figlet -f ~/Descargas/alphabet.flf -w <span class="m">240</span> <span class="s2">&#34;Blog Bitix&#34;</span>&#10;$ figlet -f ~/Descargas/3-d.flf -w <span class="m">240</span> <span class="s2">&#34;Blog Bitix&#34;</span>&#10;$ figlet -f ~/Descargas/lean.flf -w <span class="m">240</span> <span class="s2">&#34;Blog Bitix&#34;</span>&#10;$ figlet -f ~/Descargas/slant.flf -w <span class="m">240</span> <span class="s2">&#34;Blog Bitix&#34;</span>&#10;$ figlet -f ~/Descargas/univers.flf -w <span class="m">240</span> <span class="s2">&#34;Blog Bitix&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>figlet.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Font: standard&#10; ____  _&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ____  _ _   _&#10;| __ )| | ___   __ _| __ )(_| |_(___  __&#10;|  _ \| |/ _ \ / _` |  _ \| | __| \ \/ /&#10;| |_) | | (_) | (_| | |_) | | |_| |&gt;  &lt;&#10;|____/|_|\___/ \__, |____/|_|\__|_/_/\_\&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   |___/&#10;&#10;Font: alphabet&#10;BBBB  l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  BBBB&nbsp;&nbsp;&nbsp;&nbsp;  t&#10;B   B l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  B   B ii  t  ii&#10;BBBB  l ooo ggg  BBBB&nbsp;&nbsp;&nbsp;&nbsp; ttt&nbsp;&nbsp;&nbsp;&nbsp;x x&#10;B   B l o o g g  B   B ii  t  ii  x&#10;BBBB  l ooo ggg  BBBB  ii  tt ii x x&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  g&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ggg&#10;&#10;Font: 3-d&#10; ******&nbsp;&nbsp;&nbsp;&nbsp;**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;******   **   **   **&#10;/*////**  /**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   *****   /*////** //   /**  //&#10;/*   /**  /**  ******  **///**  /*   /**  ** ****** ** **   **&#10;/******   /** **////**/**  /**  /******  /**///**/ /**//** **&#10;/*//// ** /**/**   /**//******  /*//// **/**  /**  /** //***&#10;/*&nbsp;&nbsp;&nbsp;&nbsp;/** /**/**   /** /////**  /*&nbsp;&nbsp;&nbsp;&nbsp;/**/**  /**  /**  **/**&#10;/*******  ***//******   *****   /******* /**  //** /** ** //**&#10;///////  ///  //////   /////&nbsp;&nbsp;&nbsp;&nbsp;///////  //&nbsp;&nbsp;&nbsp;&nbsp;//  // //   //&#10;&#10;Font: lean&#10;&nbsp;&nbsp;&nbsp;&nbsp;_/_/_/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  _/_/_/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;  _/&#10;   _/&nbsp;&nbsp;&nbsp;&nbsp;_/  _/&nbsp;&nbsp;&nbsp;&nbsp;_/_/&nbsp;&nbsp;&nbsp;&nbsp;  _/_/_/&nbsp;&nbsp;&nbsp;&nbsp;  _/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;  _/_/_/_/&nbsp;&nbsp;&nbsp;&nbsp;  _/&nbsp;&nbsp;&nbsp;&nbsp;_/&#10;  _/_/_/&nbsp;&nbsp;&nbsp;&nbsp;_/  _/&nbsp;&nbsp;&nbsp;&nbsp;_/  _/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;  _/_/_/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;  _/&nbsp;&nbsp;&nbsp;&nbsp;_/_/&#10; _/&nbsp;&nbsp;&nbsp;&nbsp;_/  _/  _/&nbsp;&nbsp;&nbsp;&nbsp;_/  _/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;  _/&nbsp;&nbsp;&nbsp;&nbsp;_/  _/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;  _/  _/&nbsp;&nbsp;&nbsp;&nbsp;_/&#10;_/_/_/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;_/_/&nbsp;&nbsp;&nbsp;&nbsp;  _/_/_/&nbsp;&nbsp;&nbsp;&nbsp;  _/_/_/&nbsp;&nbsp;&nbsp;&nbsp;_/&nbsp;&nbsp;&nbsp;&nbsp;  _/_/  _/  _/&nbsp;&nbsp;&nbsp;&nbsp;_/&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _/&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_/_/&#10;&#10;Font: slant&#10;&nbsp;&nbsp;&nbsp;&nbsp;____  __&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ____  _ __  _&#10;   / __ )/ /___  ____ _   / __ )(_) /_(_)  __&#10;  / __  / / __ \/ __ `/  / __  / / __/ / |/_/&#10; / /_/ / / /_/ / /_/ /  / /_/ / / /_/ /&gt;  &lt;&#10;/_____/_/\____/\__, /  /_____/_/\__/_/_/|_|&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  /____/&#10;&#10;Font: univers&#10;88888888ba   88&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   88888888ba   88&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   88&#10;88&nbsp;&nbsp;&nbsp;&nbsp;  &#34;8b  88&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   88&nbsp;&nbsp;&nbsp;&nbsp;  &#34;8b  &#34;&#34;&nbsp;&nbsp;&nbsp;&nbsp;,d&nbsp;&nbsp;&nbsp;&nbsp; &#34;&#34;&#10;88&nbsp;&nbsp;&nbsp;&nbsp;  ,8P  88&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   88&nbsp;&nbsp;&nbsp;&nbsp;  ,8P&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;88&#10;88aaaaaa8P&#39;  88   ,adPPYba,&nbsp;&nbsp;&nbsp;&nbsp;,adPPYb,d8&nbsp;&nbsp;&nbsp;&nbsp; 88aaaaaa8P&#39;  88  MM88MMM  88  8b,&nbsp;&nbsp;&nbsp;&nbsp; ,d8&#10;88&#34;&#34;&#34;&#34;&#34;&#34;8b,  88  a8&#34;&nbsp;&nbsp;&nbsp;&nbsp; &#34;8a  a8&#34;&nbsp;&nbsp;&nbsp;&nbsp;`Y88&nbsp;&nbsp;&nbsp;&nbsp; 88&#34;&#34;&#34;&#34;&#34;&#34;8b,  88&nbsp;&nbsp;&nbsp;&nbsp;88&nbsp;&nbsp;&nbsp;&nbsp; 88   `Y8, ,8P&#39;&#10;88&nbsp;&nbsp;&nbsp;&nbsp;  `8b  88  8b&nbsp;&nbsp;&nbsp;&nbsp;   d8  8b&nbsp;&nbsp;&nbsp;&nbsp;   88&nbsp;&nbsp;&nbsp;&nbsp; 88&nbsp;&nbsp;&nbsp;&nbsp;  `8b  88&nbsp;&nbsp;&nbsp;&nbsp;88&nbsp;&nbsp;&nbsp;&nbsp; 88&nbsp;&nbsp;&nbsp;&nbsp; )888(&#10;88&nbsp;&nbsp;&nbsp;&nbsp;  a8P  88  &#34;8a,   ,a8&#34;  &#34;8a,   ,d88&nbsp;&nbsp;&nbsp;&nbsp; 88&nbsp;&nbsp;&nbsp;&nbsp;  a8P  88&nbsp;&nbsp;&nbsp;&nbsp;88,&nbsp;&nbsp;&nbsp;&nbsp;88   ,d8&#34; &#34;8b,&#10;88888888P&#34;   88   `&#34;YbbdP&#34;&#39;&nbsp;&nbsp;&nbsp;&nbsp;`&#34;YbbdP&#34;Y8&nbsp;&nbsp;&nbsp;&nbsp; 88888888P&#34;   88&nbsp;&nbsp;&nbsp;&nbsp;&#34;Y888  88  8P&#39;&nbsp;&nbsp;&nbsp;&nbsp; `Y8&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   aa,&nbsp;&nbsp;&nbsp;&nbsp;,88&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#34;Y8bbdP&#34;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>figlet.txt</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/figlet_hu035957f211688b4f3b03f9f72c1e31ee_99005_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/figlet_hu035957f211688b4f3b03f9f72c1e31ee_99005_650x450_fit_box_3.png" width="301" height="450"  class="lozad "></a></p>
<figcaption>Texto convertido a arte de caracteres ASCII</figcaption>
</figure>
</div>
<h3 id="imagen-a-arte-de-caracteres-ascii">Imagen a arte de caracteres ASCII</h3>
<p>También es posible convertir una imagen a arte ASCII, en el caso de las imágenes el resultado ha de tener un número adecuado de líneas y columnas para producir resultados con la suficiente definición para obtener resultados fieles a la imagen original.</p>
<p>La herramienta <a href="https://csl.name/jp2a/">jp2a</a> permite convertir una imagen a arte ASCII. Basta con indicar la imagen fuente y personalizar las opciones del resultado como la anchura de caracteres con la opción <em>&ndash;width</em>. Utilizando las tuberías del intérprete de comandos es posible combinar el resultado de un comando que procese o transforme la imagen y se la proporcione como entrada a <em>jp2a</em>, en este caso para utilizar formatos no soportado por <em>jp2a</em> convirtiéndolo previamente a uno soportado permite obtener el arte ASCII.</p>
<p>La herramienta <em>jp2a</em> combinada con el <a href="https://picodotdev.github.io/blog-bitix/2016/04/cambiar-el-formato-de-archivos-de-video-o-peliculas-en-gnu-linux/">extraer un fotograma de una película</a> permite generar el arte ASCII de un momento de una película.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ jp2a --width<span class="o">=</span><span class="m">80</span> --invert ~/Descargas/blogbitix-750.png&#10;$ jp2a --width<span class="o">=</span><span class="m">80</span> --invert ~/Descargas/blogbitix-750.jpg&#10;&#10;$ convert ~/Descargas/archlinux.svg jpg:- <span class="p">|</span> jp2a --width<span class="o">=</span><span class="m">80</span> --invert -&#10;$ convert ~/Descargas/linux.svg jpg:- <span class="p">|</span> jp2a --width<span class="o">=</span><span class="m">80</span> --invert -&#10;$ convert ~/Descargas/gnu.svg jpg:- <span class="p">|</span> jp2a --width<span class="o">=</span><span class="m">80</span> --invert -&#10;$ convert ~/Descargas/gnome.svg jpg:- <span class="p">|</span> jp2a --width<span class="o">=</span><span class="m">80</span> --invert -</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>jp2a.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span><span class="lnt">135&#10;</span><span class="lnt">136&#10;</span><span class="lnt">137&#10;</span><span class="lnt">138&#10;</span><span class="lnt">139&#10;</span><span class="lnt">140&#10;</span><span class="lnt">141&#10;</span><span class="lnt">142&#10;</span><span class="lnt">143&#10;</span><span class="lnt">144&#10;</span><span class="lnt">145&#10;</span><span class="lnt">146&#10;</span><span class="lnt">147&#10;</span><span class="lnt">148&#10;</span><span class="lnt">149&#10;</span><span class="lnt">150&#10;</span><span class="lnt">151&#10;</span><span class="lnt">152&#10;</span><span class="lnt">153&#10;</span><span class="lnt">154&#10;</span><span class="lnt">155&#10;</span><span class="lnt">156&#10;</span><span class="lnt">157&#10;</span><span class="lnt">158&#10;</span><span class="lnt">159&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   l&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  coo.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :oooo.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;oooool.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ,oooooool.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .oooooooool&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...;ooooooool.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;ool:;:looooool.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#39;oooooooooooooool.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ,oooooooooooooooool.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;oooooooooooooooooool.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;oooooooooooooooooooool.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   :ooooooool&#39;.  .:ooooooooo.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  cooooooooc&nbsp;&nbsp;&nbsp;&nbsp;   &#39;ooooooooo&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.cooooooooo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,ooooooooo;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .looooooooo:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .ooooooc:;:;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .loooooooooo:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .ooooooool;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;oooooooooc;,.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#39;;:loooooool,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,ooool:,..&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.&#39;;looooc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ;ol:&#39;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .;col.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#39;&#39;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .,.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.ld.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :. ..&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;  ..&#39;&#39;..&nbsp;&nbsp;&nbsp;&nbsp;..  ..&nbsp;&nbsp;&nbsp;&nbsp;..&nbsp;&nbsp;&nbsp;&nbsp;&#39;kk.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; o.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10; ,kxdxkkx&#39; ;kkokko,okkkkkko.&#39;kdokkkkxc.  o. &#39;. .,.,,,,;.  ,.&nbsp;&nbsp;&nbsp;&nbsp;  :  ,.   .&#39;&nbsp;&nbsp;&nbsp;&nbsp;&#10; ,ccllckkd ;kkl. &#39;kko&#39;. .,. &#39;kkc   .xko  o. ;. ,c&nbsp;&nbsp;&nbsp;&nbsp;  c. :&#39;&nbsp;&nbsp;&nbsp;&nbsp; .o   ;, &#39;:&nbsp;&nbsp;&nbsp;&nbsp; &#10;okkc,;okkd ;kk&#39;  ckk.&nbsp;&nbsp;&nbsp;&nbsp;   &#39;kk.&nbsp;&nbsp;&nbsp;&nbsp;xko  o. ;. ,;&nbsp;&nbsp;&nbsp;&nbsp;  :. :&#39;&nbsp;&nbsp;&nbsp;&nbsp; .o&nbsp;&nbsp;&nbsp;&nbsp;&#39;o,&nbsp;&nbsp;&nbsp;&nbsp;  &#10;xko   .kkd ;kk&#39;  &#39;kkl.   .. &#39;kk.&nbsp;&nbsp;&nbsp;&nbsp;dko  o  ;. ,,&nbsp;&nbsp;&nbsp;&nbsp;  c. :&#39;&nbsp;&nbsp;&nbsp;&nbsp; .l   .:.;&#39;&nbsp;&nbsp;&nbsp;&nbsp; &#10;.dkkdxkoxd ;kk&#39;   .okkxdkkd.&#39;kk.&nbsp;&nbsp;&nbsp;&nbsp;dko  o  :. ;,&nbsp;&nbsp;&nbsp;&nbsp;  c. &#39;c.  .&#39;;l  ;&#39;   .;&nbsp;&nbsp;&nbsp;&nbsp;&#10;  .:c;.&#39;,. .,.&nbsp;&nbsp;&nbsp;&nbsp;   ,cc:.  .:,&nbsp;&nbsp;&nbsp;&nbsp; c:.  .  .  ..&nbsp;&nbsp;&nbsp;&nbsp;  &#39;   .:ll; ., ..&nbsp;&nbsp;&nbsp;&nbsp; ..   &#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .,:cllc:,.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .lONMMMMMMMMMWXk:.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .OMMMMMMMMMMMMWkkKWWx.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.XMMMMMMMMMMMMMN0KNWMMN;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dMMMMMMMMMMMMMMMMMMMMMMW;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XMMMWNWMMMMMMMMMNXWMMMMMX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .MMNkxx0XMMMM0oc:lx0NMMMMMc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .MX.&#39;,..kMMMc  ,,. ,NMMMMMx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .WO,WOk.:WNX  OMKO. dMMMMMd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XN&#39;0WK;:lco,.OMMN&#39; xMMMMMd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0MO&#39;c&#39;&#39;&#39;..&#39;&#39;..;:&#39;.:WMMMMMX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xXl&#39;............,,&#39;KMMMMMMc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lXl,.........,,,&#39;&#39;:NMMKKNMN.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:Mdll;,,,,,,,&#39;,,&#39;&#39;&#39;kMMXxd0MO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OMc.;lc:;;;;;,.&nbsp;&nbsp;&nbsp;&nbsp;.0MMMNWMMO.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .OMX.  .;::;,.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kMMMMMMMX&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cNMk.&nbsp;&nbsp;&nbsp;&nbsp; ...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;KMMMMMMMWl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .0MMx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .NMMMMMMMMK.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  oWMMK&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ;WMMMMMMMMWc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kMMMNo;.&nbsp;&nbsp;&nbsp;&nbsp;  .&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;..&#39;,;;,.lMMWWMMMMMM0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kMWMWl.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .&#39;;.oMMNXNMMMMMK.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   xMNNMl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ..oMMWNWWMMMMX.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  :MNNWc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   kWXNWKWMMMMX.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .NNNW:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,MMMMWKMMMMMO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.XMWMO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  XMMMMNMMMMMMc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .XMXWM;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  kMMMMWMMMMMMX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .NMMKNN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  xMMMXXMMMMMMM&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  xMMMNKX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  kMMWKWMMMMMMM&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#39;xc:o0K.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  KWNNWWNNXKWMO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .......c0d.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ....lMMMMMMMMX0d.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;........&#39;kW0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#39;..&#39;dMMMMMMMWx...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;  ....,,...........cNMNd.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .&#39;:..&#39;cd0XXXKk:....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;.&#39;..................;KMMM0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .;c&#39;..&#39;,::::;&#39;......&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;.&#39;...................&#39;xWMMMc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .:l,..................&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;.,.....................lX0x&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  oKo;.....................&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;.,......................&#39;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .cXMKl,......................&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;.........................,:&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .&#39;:dKMMMMkc&#39;....................&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;.........................&#39;:kN0kxxkO0KNMMMMMMMMNo:&#39;..............&#39;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;..,;;;;,,,&#39;&#39;&#39;...........&#39;,coNMMMMMMMMMMMMMMMMMKo:,&#39;........&#39;,;,&#39;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;  ...&#39;,;::cccc;,,&#39;&#39;&#39;&#39;&#39;&#39;,:cox0kddooolllccclodxOOol:;,,,,,;:c:;.....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;........&#39;,;::ccccccll:,..................&#39;&#39;;oolllclll:&#39;.....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...........&#39;,,,&#39;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ........&#39;,,,,&#39;.....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .,ccccllllllll,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.;::::::;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,;;,&#39;  .:;&#39;;loc::l:;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#39;,;;,,,. .&#39;.&#39;&#39;&#39;,&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp; ,:;. .cKXNXollc;;o;.,&#39; .&#39;&#39;lo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  c,&#39;&#39;..;;ldcddxkKkko .;:&#39;&nbsp;&nbsp;&nbsp;&nbsp; &#10;   ;l&#39; .0WMMd.;:,,,,&#39;&#39;,,,,,&#39;&#39;&#39;,&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .&#39;.....&#39;&#39;...&#39;&#39;&#39;:;:XNKo &#39;c,   &#10;  :;  xWMK;.&#39;c,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .;;&#39;:0MK: ,c  &#10; :,  cMMX; c,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&nbsp;&nbsp;&nbsp;&nbsp;  .&#39;........&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  :,;NMX. &#39;c &#10;,c  :MMW..o.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .:;. .&#39;:clc;&#39;.,:&#39; .dl .,cc:&#39;  &#39;,.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;&#39;:MMX  :,&#10;o   oMMK.o.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.:, &#39;l0WMMMMMMMNo.,ldxOlkXXMMMNOc.&#39;;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ;,NMX,  l&#10;l  .0MMo.o&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:; ;0MMMMMMMMMMMMMWd   ,c ,k0MMMMMNo.,:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ; kMW:  o&#10;l  .OMMk.d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ;c.&#39;0MMMMMMMMMMMMMMWNO&nbsp;&nbsp;&nbsp;&nbsp;:  ,0MMMMMMMX:.;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:.KMN:  o&#10;o   cWMK&#39;l;&nbsp;&nbsp;&nbsp;&nbsp;   ;c..xWMMMWN0xolloddl,. &#39;:.   &#39;&#39;&#39;&#39;;lNOkKNMM0&#39;&#39;,.&nbsp;&nbsp;&nbsp;&nbsp; .,cWMK,  d&#10;l&#39; .:0MM; ;l&#39;  .:c&#39;,kWNx;..&nbsp;&nbsp;&nbsp;&nbsp;  &#39;l.&nbsp;&nbsp;&nbsp;&nbsp;. .&#39;,&#39;;o.&nbsp;&nbsp;&nbsp;&nbsp;o.   &#39;dWWd.&#39;,&#39;..;,.xMMd. .d&#10;.d  .xWMWN, &#39;,&#39;::oKNd,&nbsp;&nbsp;&nbsp;&nbsp;   .d;0Mk&nbsp;&nbsp;&nbsp;&nbsp; .co.  ,l; ;Kd.&#39;,&nbsp;&nbsp;&nbsp;&nbsp;.OMW0o:.,,;NMMNc  o&#39;&#10; ,c  c0MMMWNNodNMM0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,d. dc ....,.  &#39;.&nbsp;&nbsp;&nbsp;&nbsp; K0.. ;&nbsp;&nbsp;&nbsp;&nbsp;  dMMMM0NMMMMWd. :, &#10;  &#39;c  &#39;oNWMMMMMMM0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;..&nbsp;&nbsp;&nbsp;&nbsp;  ..&#39;&#39;;k   l.&nbsp;&nbsp;&nbsp;&nbsp;O,,;::&nbsp;&nbsp;&nbsp;&nbsp;   kMMMMMWW0d.. c&#39;  &#10;   .l; ..,KxMNWW0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .&nbsp;&nbsp;&nbsp;&nbsp;dkkMMK,.   .&nbsp;&nbsp;&nbsp;&nbsp;oONMNx.&nbsp;&nbsp;&nbsp;&nbsp;  .0MXKdd&#39;.  ;c.   &#10;&nbsp;&nbsp;&nbsp;&nbsp; .:;.   &#39;,oK.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&nbsp;&nbsp;&nbsp;&nbsp;.,&#39;dOo.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  :K0x;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lX,  .&#39;,;.&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,;;;;;O;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.. ..&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  o:;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .k:,&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .O&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lK;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::d;:,.&nbsp;&nbsp;&nbsp;&nbsp;  :l,.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; co&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ,d; ,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;,,,,.&nbsp;&nbsp;&nbsp;&nbsp;  :0. .,,,,,&#39;&#39;&#39;:d,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :o;&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  :xo:. .,:;.&nbsp;&nbsp;&nbsp;&nbsp;,c::::.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .:d.   .,:cccK.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xXl.;;,.  &#39;,..&nbsp;&nbsp;&nbsp;&nbsp;  .d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cx;,,codW:.   x;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..&nbsp;&nbsp;&nbsp;&nbsp;  .  xk,cc&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;&nbsp;   k&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;l;&#39;;&#39; .W.&nbsp;&nbsp;&nbsp;&nbsp;o:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.&#39;  .&nbsp;&nbsp;&nbsp;&nbsp;   ..&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .o;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.W.&nbsp;&nbsp;&nbsp;&nbsp;.xc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.:cc.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.N.&nbsp;&nbsp;&nbsp;&nbsp; ,O&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .d.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .&#39;&#39;ll.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0;&nbsp;&nbsp;&nbsp;&nbsp;  clk.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.O.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,lk.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .lcc;;;:::cldxk0xl.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  x.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;....&nbsp;&nbsp;&nbsp;&nbsp;   o;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .x.&nbsp;&nbsp;&nbsp;&nbsp;   .lcol,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ..&#39;,,,,,d.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .o;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;lKc  .&nbsp;&nbsp;&nbsp;&nbsp;   &#39;dXKkkNK:&#39;..&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,c.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lX&#39;:OX&#39;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ol&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ,,&nbsp;&nbsp;&nbsp;&nbsp;   lXl0MMWo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .  x&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..&nbsp;&nbsp;&nbsp;&nbsp;  .:ONk0K&#39;&nbsp;&nbsp;&nbsp;&nbsp;   l:;cl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .kK.xWXl  cONWNl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  :d;. ;WMX.OMMMMMO&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .   x:NMNXMMMMMMMWKc.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   . .dNNKWXd0WMKl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .o;&#39;cc..,,.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .&#39;,,&#39;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ..&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .ckXMMMMMMMNk.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ,OWMMWO.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.kMMMMMMMMMMMMMO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  lMMMMMMMK&nbsp;&nbsp;&nbsp;&nbsp;   oWMMMMMMMMMMMMMMd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,c:.&nbsp;&nbsp;&nbsp;&nbsp; .WMMMMMMMN&nbsp;&nbsp;&nbsp;&nbsp;  kMMMMMMMMMMMMMMMK.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  dWMMMW;&nbsp;&nbsp;&nbsp;&nbsp;,MMMMMMMMO&nbsp;&nbsp;&nbsp;&nbsp; lMMMMMMMMMMMMMMMK.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lMMMMMMN.   .NMMMMMMW,&nbsp;&nbsp;&nbsp;&nbsp; XMMMMMMMMMMMMMWo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; oMMMMMMM;&nbsp;&nbsp;&nbsp;&nbsp;lMMMMMMc&nbsp;&nbsp;&nbsp;&nbsp; .MMMMMMMMMMMMMO.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .,.&nbsp;&nbsp;&nbsp;&nbsp;.XMMMMMM,&nbsp;&nbsp;&nbsp;&nbsp; lWMMK,&nbsp;&nbsp;&nbsp;&nbsp;   KMMMMMMMMMWO,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,XMMM0.   .KMMMMK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .XMMMMMW0l.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NMMMMMK&nbsp;&nbsp;&nbsp;&nbsp; cKW0.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,clc,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OMMMMMMc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.0MMMMMx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.,cdk0XNWMMMMMMWNKko;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  :0MMMc&nbsp;&nbsp;&nbsp;&nbsp;   .:d0NMMMMMMMMMMMMMMMMMMMMMM0:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.&#39;.&nbsp;&nbsp;&nbsp;&nbsp; &#39;oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  cKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#39;XMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKl.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;MMMMMMMMMMMMMMMMMMMMMMMMMMMMWOl.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;MMMMMMMMMMMMMMMMMMMMMMMMMWk;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; KMMMMMMMMMMMMMMMMMMMMMNx;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;MMMMMMMMMMMMMMMMMMMO,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  dMMMMMMMMMMMMMMMMK.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#39;lx0XNWNXOc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   oMMMMMMMMMMMMMMM.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,NMMMMMMMMMMMl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;NMMMMMMMMMMMMM,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; oMMMMMMMMMMMW.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .xMMMMMMMMMMMMWo.&nbsp;&nbsp;&nbsp;&nbsp;  .KMMMMMMMMMMW:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .OMMMMMMMMMMMMM0o:,;dNMMMMMMMMMMN,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;OMMMMMMMMMMMMMMMMMMMMMMMMMMMk.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   .l0MMMMMMMMMMMMMMMMMMMMMWk.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .:xXMMMMMMMMMMMMMMWOc.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  .,coxkO00Oxo:&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;   ;oxkxdc.  co&#39;&nbsp;&nbsp;&nbsp;&nbsp; oo&#39;   .cdkkdc.&nbsp;&nbsp;&nbsp;&nbsp;;ooc&nbsp;&nbsp;&nbsp;&nbsp;.ooo   ;ooooooo&#39;  .:.,&#39;.:&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp; oWMXxoox0.  0MMd   .MMc  dWM0od0MMd   KMMM;   KMMM,  dMMKkkkk,   : :&#39;,;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;lMMk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0MMMX&#39; .MMc oMMl&nbsp;&nbsp;&nbsp;&nbsp;oMMl .WMWMX  oMMMMl  dMM:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;OMM&#39;  &#39;dddd  0M0xMWc.MMc 0MM.&nbsp;&nbsp;&nbsp;&nbsp;.MMO ,MMdKMl.WMdMMk  dMMNXXX,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;xMM:  .odWM. 0Mk ,XMXMMc OMM&#39;&nbsp;&nbsp;&nbsp;&nbsp;,MMx lMM,,MNKMO KMX  dMMd,,,.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;.WMNc.  &#39;WM. 0Mk  .OMMMc &#39;WMK&#39;  ,KMN. OMW. xMMN. xMM. dMMo.....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp; .dXMMWMMWO  0Mk&nbsp;&nbsp;&nbsp;&nbsp;:NMc  .xNMMMMNk.  NMK  .NMc  cMM: dMMMMMMMd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>jp2a.txt</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/jp2a-archlinux_hufa78db7286ea68380bcd19c44a390a25_51670_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Logotipo de Arch Linux convertido a arte de caracteres ASCII con jp2a"><img src="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/jp2a-archlinux_hufa78db7286ea68380bcd19c44a390a25_51670_200x150_fit_box_3.png" width="128" height="150" alt="Logotipo de Arch Linux convertido a arte de caracteres ASCII con jp2a" title="Logotipo de Arch Linux convertido a arte de caracteres ASCII con jp2a"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/jp2a-linux_hu941a9e990a78b4605de9cf15b58287c0_88888_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Logotipo de Linux convertido a arte de caracteres ASCII con jp2a"><img src="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/jp2a-linux_hu941a9e990a78b4605de9cf15b58287c0_88888_200x150_fit_box_3.png" width="128" height="150" alt="Logotipo de Linux convertido a arte de caracteres ASCII con jp2a" title="Logotipo de Linux convertido a arte de caracteres ASCII con jp2a"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/jp2a-gnome_hu7db3540cf064f583661be03a0e99708a_86965_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Logotipo de GNOME convertido a arte de caracteres ASCII con jp2a"><img src="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/jp2a-gnome_hu7db3540cf064f583661be03a0e99708a_86965_200x150_fit_box_3.png" width="128" height="150" alt="Logotipo de GNOME convertido a arte de caracteres ASCII con jp2a" title="Logotipo de GNOME convertido a arte de caracteres ASCII con jp2a"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/jp2a-gnu_hud3a1beaafe768dd84689b6b826d668c1_93921_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Logotipo de GNU convertido a arte de caracteres ASCII con jp2a"><img src="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/images/jp2a-gnu_hud3a1beaafe768dd84689b6b826d668c1_93921_200x150_fit_box_3.png" width="128" height="150" alt="Logotipo de GNU convertido a arte de caracteres ASCII con jp2a" title="Logotipo de GNU convertido a arte de caracteres ASCII con jp2a"  class="lozad "></a></p>
<figcaption>Varios logotipos convertidos a arte de caracteres ASCII con jp2a</figcaption>
</figure>
</div>
<h3 id="páginas-web-de-conversión-a-arte-de-caracteres-ascii">Páginas web de conversión a arte de caracteres ASCII</h3>
<p>No es necesario instalar aplicaciones para generar tanto un texto en arte ASCII como convertir una imagen a arte ASCII, hay algunas páginas que ofrecen estas funcionalidades simplemente introduciendo el texto a convertir a arte ASCII como proporcionando la imagen a convertir a arte ASCII.</p>
<p>El resultado es un conjunto de caracteres que forman el arte ASCII. El propio <a href="https://picodotdev.github.io/blog-bitix/2017/12/el-buscador-que-respeta-tu-privacidad-duckduckgo/">buscador DuckDuckGo</a> es capaz de generar el arte ASCII de <em>figlet</em> con la fuente <em>standard</em>, la página <a href="https://onlineasciitools.com/convert-text-to-ascii-art">Online Ascii Tools</a> permite convertir un texto a arte ASCII seleccionando la fuente o incluyendo <a href="https://textfancy.com/ascii-art/">una colección de arte ASCII</a> y la página <a href="https://ascii-generator.site/">ASCII Generator</a> permite convertir una imagen a arte ASCII.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://textkool.com/en/ascii-art-generator?hl=default&amp;vl=default&amp;font=Red%20Phoenix&amp;text=Your%20text%20here%20">TextKool</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/</id>
        <title>Análisis de la serie de juegos de plataformas Trine</title>
        <updated>2021-03-20T09:00:00+01:00</updated>
        <published>2021-03-20T09:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La serie de juegos Trine destacan por su nivel artístico gráfico y como juego de plataformas con puzles, incluso el primer Trine destaca en esto. Los juegos están basados en las aventuras de tres personajes un caballero, un mago y una ladrona cuya historia es narrada antes de cada nivel y está completamente doblada al español. El objetivo es llegar al final de cada nivel empleando una combinación de habilidades de cada personaje pero para darle más diversión al juego es posible completarlo con varios niveles de dificultad o como objetivos adicionales encontrar todo los orbes de experiencia, algunos de los cuales están un poco escondidos.</strong></p>]]>
        <![CDATA[<p><a href="https://www.igdb.com/games/trine-enchanted-edition">Trine: Enchanted Edition</a> es un juego de plataformas desarrollado por <a href="https://www.igdb.com/companies/frozenbyte">Frozenbyte</a> en el año 2009 y remasterizado en el 2014, con posterioridad se ha publicado varios más que continúan la historia del primero, <a href="https://www.igdb.com/games/trine-2-complete-story">Trine 2: Complete Story</a> (2013), <a href="https://www.igdb.com/games/trine-3-the-artifacts-of-power">Trine 3: The Artifacts of Power</a> (2015) y <a href="https://www.igdb.com/games/trine-4-the-nightmare-prince">Trine 4: The Nightmare Prince</a> (2019). Estos juegos están disponibles tanto para consola como para PC.</p>
<p>Cada juego de la colección de Trine tiene algunas pequeñas diferencias aún siendo los conceptos básicos del original los mismos en todos, el más diferente es Trine 3 que adopta un modo de juego más en tres dimensiones y con más libertad de movimientos. Son juegos principalmente de plataformas, de aventuras, resolver puzles y con un pequeño componente de rol de elegir habilidades en cada personaje u objetos. Los juegos de Trine destacan por su apartado gráfico y banda sonora que incluso el primero de la colección tiene un nivel de detalles gráficos notable.</p>
<p>Debido a que son juegos ya con varios años en las diferentes tiendas digitales en cada plataforma se encuentra a un precio de unos pocos euros, los tres primeros se distribuyen como una colección siendo aún así bastante baratos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1_hu3ee9a6248cecf9e8058b007c52dde693_337463_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1_hu3ee9a6248cecf9e8058b007c52dde693_337463_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2_hu2f2e17f458d52571f8d5b574dfdfaa13_571898_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2_hu2f2e17f458d52571f8d5b574dfdfaa13_571898_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3_hu4113b09df7e4619cc99e1ff8fc5d6623_560681_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3_hu4113b09df7e4619cc99e1ff8fc5d6623_560681_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-menu-1_hu8d0406f1e740d02695f22b3c8d8e2c20_401147_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-menu-1_hu8d0406f1e740d02695f22b3c8d8e2c20_401147_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-menu-1_hu99ec00029889e899a61de3665e0b168d_406219_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-menu-1_hu99ec00029889e899a61de3665e0b168d_406219_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3-menu-1_hua27ce57a929f6e6111133d895073116e_363685_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3-menu-1_hua27ce57a929f6e6111133d895073116e_363685_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-menu-2_hu8561abf5595b4d1b5050d8d7f7882465_365124_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-menu-2_hu8561abf5595b4d1b5050d8d7f7882465_365124_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-menu-2_hud64e39fcf7d195da183126495a09aae5_407183_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-menu-2_hud64e39fcf7d195da183126495a09aae5_407183_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3-menu-2_hu6c38cc5cdaa7b2cf51e6de0523c51df3_404072_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla inicial y menú"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3-menu-2_hu6c38cc5cdaa7b2cf51e6de0523c51df3_404072_200x150_fit_q90_box.jpg" width="200" height="113" alt="Pantalla inicial y menú" title="Pantalla inicial y menú"  class="lozad "></a></p>
<figcaption>Pantalla inicial y menú</figcaption>
</figure>
</div>
<div class="alert alert-warning">
    <h2>Anticipación del juego</h2>
    <p>Este artículo contiene información de estrategias para completar más fácilmente el juego, parte de la diversión de un juego es descubrir y superar los retos que se plantean por uno mismo. Sin embargo, algunos juegos son difíciles sin una pequeña ayuda que obliga a tener que dedicarles mucho más tiempo o a recomenzarlos.</p>
    <p>En algunos juegos el argumento es una de las partes más importantes. El texto del artículo no contiene información acerca del argumento del juego, de la mitad o del final, ni hace ningún <i>spoiler</i> por lo que lo puedes leer sin riesgo de conocer alguna parte del argumento de forma anticipada. Sin embargo, algunos enlaces del artículo a otras páginas y vídeos sí pueden contener información del argumento de modo que recomiendo consultar solo las partes del juego una vez superadas.</p>
</div>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="el-juego">El juego</h3>
<p>Los juegos en toda la saga narran la historia de tres personajes Pontius un caballero, Amadeus un mago y Zoya una ladrona. Al inicio de cada nivel hay una narración que sirve como hilo conductor del juego e incluso dentro de los niveles los personajes conversan haciendo algún comentario con un toque de humor, los juegos Trine poseen un buen doblaje al español.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-inicio_hu2bed8fdef08d0da75f51f28eac97ebd7_321521_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Inicio de nivel en Trine 1"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-inicio_hu2bed8fdef08d0da75f51f28eac97ebd7_321521_300x200_fit_q90_box.jpg" width="300" height="169" alt="Inicio de nivel en Trine 1" title="Inicio de nivel en Trine 1"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-inicio_hu453e694bda57e695b9189f89984604ad_365732_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Inicio de nivel en Trine 2"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-inicio_hu453e694bda57e695b9189f89984604ad_365732_300x200_fit_q90_box.jpg" width="300" height="169" alt="Inicio de nivel en Trine 2" title="Inicio de nivel en Trine 2"  class="lozad "></a></p>
<figcaption>Inicios de nivel en Trine 1 y 2</figcaption>
</figure>
</div>
<p>El juego consiste en llegar al final de cada uno de los niveles, recoger los orbes de experiencia y abrir los cofres del tesoro. La dificultad radica en que algunos orbes y cofres están un poco escondidos con lo que es necesario fijarse bien en cada sección del nivel para descubrirlos, también en que algunas secciones requieren de la combinación de los personajes y emplear sus habilidades para continuar a la siguiente sección.</p>
<p>Recoger los orbes de experiencia otorgan puntos de habilidad para emplearlos en ganar habilidades en los personajes. En cada uno de los juegos las habilidades varían, por ejemplo, en Trine los personajes tienen tres habilidades cada uno con varios niveles y un inventario de objetos. En Trine 2 los personajes no tienen inventario y las habilidades están organizadas en un árbol.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-habilidades-1_hu9967e592d26640171b30b7eab7be922c_529361_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Habilidades de personajes en Trine 1"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-habilidades-1_hu9967e592d26640171b30b7eab7be922c_529361_200x150_fit_q90_box.jpg" width="200" height="113" alt="Habilidades de personajes en Trine 1" title="Habilidades de personajes en Trine 1"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-habilidades-2_hu93cb1593a4ffa15a257f671e8c364da0_521159_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Habilidades de personajes en Trine 1"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-habilidades-2_hu93cb1593a4ffa15a257f671e8c364da0_521159_200x150_fit_q90_box.jpg" width="200" height="113" alt="Habilidades de personajes en Trine 1" title="Habilidades de personajes en Trine 1"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-habilidades_hube89d6eaa5d0b9562be16714758a3fd5_520599_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Habilidades de personajes en Trine 2"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-habilidades_hube89d6eaa5d0b9562be16714758a3fd5_520599_200x150_fit_q90_box.jpg" width="200" height="113" alt="Habilidades de personajes en Trine 2" title="Habilidades de personajes en Trine 2"  class="lozad "></a></p>
<figcaption>Habilidades de personajes en Trine 1 y 2</figcaption>
</figure>
</div>
<p>En algunos niveles se encuentran varios enemigos, en Trine son esqueletos y en Trine 2 son duendes. En algunos niveles hay jefes enemigos que para eliminarlos hay que emplear una táctica según su comportamiento, variedad de ataques o descubrir sus puntos vulnerables para hacerles daño.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-jefe_hucc8b07dbfb738154250d5d04b7fa9979_373008_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Jefe enemigo de Trine 1"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-jefe_hucc8b07dbfb738154250d5d04b7fa9979_373008_300x200_fit_q90_box.jpg" width="300" height="169" alt="Jefe enemigo de Trine 1" title="Jefe enemigo de Trine 1"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-jefe_huc27cd954fb8e13cdc5f4ce8e61e91a91_429949_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Jefe enemigo de Trine 2"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-jefe_huc27cd954fb8e13cdc5f4ce8e61e91a91_429949_300x200_fit_q90_box.jpg" width="300" height="169" alt="Jefe enemigo de Trine 2" title="Jefe enemigo de Trine 2"  class="lozad "></a></p>
<figcaption>Jefes enemigos de Trine 1 y 2</figcaption>
</figure>
</div>
<p>Posee varios niveles de dificultad que hacen que los enemigos tengan más vida, los personajes reciban más daño al sufrir heridas o al llegar a ciertos puntos de control los personajes no se curen completamente y sus resurrecciones estén limitadas. En caso de que los tres personajes mueran se ha de reiniciar el nivel desde el principio en el modo <em>hardcore</em>, si un personaje muere al llegar a ciertos puntos de control los personajes muertos reviven y se puede continuar. Aunque los personajes puedan resucitar obliga a llegar hasta el siguiente punto de control sin los personajes restantes lo que dificulta continuar avanzando al no poder emplear las habilidades de los personajes muertos.</p>
<p>El juego soporta un modo cooperativo entre varios jugadores que pueden jugar simultáneamente en la misma partida con varios mandos. Se hace uso de físicas para interactuar con los objetos objetos, utiliza la tecnología <a href="https://en.wikipedia.org/wiki/PhysX">Nvidia PhysX</a> que da más realismo en el comportamiento físico de los objetos. Los tiempos de carga son más bajos que en otros juegos debido a que el juego no requiere grandes recursos.</p>
<h4 id="diferencias-entre-los-juegos-de-la-serie-trine">Diferencias entre los juegos de la serie Trine</h4>
<p>Los juegos de Trine en realidad no son juegos completamente distintos sino que más bien cada uno de ellos es una nueva colección de niveles con algunos aspectos cambiados de los personajes.</p>
<p>Mientras que en Trine 1 y Trine 2 el aspecto del juegos es más bien en dos dimensiones o 2D o 2.5D en Trine 3 es el primer juego de la serie con una jugabilidad en 3D. Trine 4 recupera el estilo de juego de los dos primeros 2D.</p>
<p>En Trine hay 16 niveles con unos 25 orbes de experiencia por nivel, en Trine 2 hay 20 niveles y un número mayor de orbes de experiencia que puede llegar a los 75. En Trine hay una barra de magia que desaparece en Trine 2.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-niveles_hu284e793ec5903ac14b67ab9c8e249ba3_348670_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Niveles de Trine 1"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-niveles_hu284e793ec5903ac14b67ab9c8e249ba3_348670_200x150_fit_q90_box.jpg" width="200" height="113" alt="Niveles de Trine 1" title="Niveles de Trine 1"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-niveles_hufb27b8b0ee7bdab8a34bfe351516a96d_339103_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Niveles de Trine 2"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-niveles_hufb27b8b0ee7bdab8a34bfe351516a96d_339103_200x150_fit_q90_box.jpg" width="200" height="113" alt="Niveles de Trine 2" title="Niveles de Trine 2"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3-niveles_huec13dbfef08d38904729406c615b888e_375759_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Niveles de Trine 3"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3-niveles_huec13dbfef08d38904729406c615b888e_375759_200x150_fit_q90_box.jpg" width="200" height="113" alt="Niveles de Trine 3" title="Niveles de Trine 3"  class="lozad "></a></p>
<figcaption>Niveles de Trine 1, 2 y 3</figcaption>
</figure>
</div>
<h3 id="objetivos-del-juego">Objetivos del juego</h3>
<p>El juego básicamente es un juego de plataformas en el que en alguno puntos hay que resolver sencillos puzles con las habilidades combinadas de los personajes. Si la solución para resolver un puzle es demasiado complicada es que esa forma de resolverlo no es la que pensaron los desarrolladores, dados los diferentes personajes y sus habilidades hay múltiples formas válidas de resolver cada puzle. Otro objetivo del juego es recoger todos los orbes de experiencia y encontrar los cofres de tesoro, algunos están un poco escondidos con lo que es necesario fijarse bien en cada una de las secciones de los niveles, después de los primeros niveles se va conociendo que sitios son susceptibles de tener alguna zona oculta a explorar.</p>
<p>El juego posee varios niveles de dificultad y un modo <em>hardcore</em>, para conseguir todos los objetivos del juego hay que completar cada nivel en el mayor nivel de dificultad y en el modo <em>hardcore</em>.</p>
<h3 id="arte-gráfico-y-banda-sonora">Arte gráfico y banda sonora</h3>
<p>Los juegos de Trine destacan por su nivel artístico lleno de detalles, colores vivos, brumas y efectos de luz que los hacen interesantes para disfrutar de su aspecto gráfico. El hecho de que para encontrar los orbes y tesoros haya que fijarse en cada una de las secciones refuerzan el disfrutar del aspecto artístico y ser consciente del mismo.</p>
<p>Incluso el primer Trine tiene unos detalles gráficos muy notables, mejorados en Trine 2 y que en la versión de Trine 4 alcanzan su mayor esplendor. Además del aspecto gráfico el juego se complementa con una banda sonora destacable y variada, combinado con su jugabilidad hacen del juego una muy buena experiencia.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-arte-grafico-1_hu8533d67bad540a4b7709182caceae666_382006_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Arte gráfico de Trine 1"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-arte-grafico-1_hu8533d67bad540a4b7709182caceae666_382006_300x200_fit_q90_box.jpg" width="300" height="169" alt="Arte gráfico de Trine 1" title="Arte gráfico de Trine 1"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-arte-grafico-2_hu660e8ac5b6d17d2d6fd6bc39ec97045d_345834_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Arte gráfico de Trine 1"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-1-arte-grafico-2_hu660e8ac5b6d17d2d6fd6bc39ec97045d_345834_300x200_fit_q90_box.jpg" width="300" height="169" alt="Arte gráfico de Trine 1" title="Arte gráfico de Trine 1"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-arte-grafico-1_hu9bbc5d815aa1a06b06877b2b96b605bc_450623_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Arte gráfico de Trine 2"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-arte-grafico-1_hu9bbc5d815aa1a06b06877b2b96b605bc_450623_300x200_fit_q90_box.jpg" width="300" height="169" alt="Arte gráfico de Trine 2" title="Arte gráfico de Trine 2"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-arte-grafico-2_huf6840cc35f06cf729430e7765e471ae8_420149_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Arte gráfico de Trine 2"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-2-arte-grafico-2_huf6840cc35f06cf729430e7765e471ae8_420149_300x200_fit_q90_box.jpg" width="300" height="169" alt="Arte gráfico de Trine 2" title="Arte gráfico de Trine 2"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3-arte-grafico-1_hu5cd54655ebb6f4890c4ee32751df0e5a_91732_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Arte gráfico de Trine 3"><img src="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/images/trine-3-arte-grafico-1_hu5cd54655ebb6f4890c4ee32751df0e5a_91732_300x200_fit_q90_box.jpg" width="300" height="169" alt="Arte gráfico de Trine 3" title="Arte gráfico de Trine 3"  class="lozad "></a></p>
<figcaption>Arte gráfico de Trine 1, 2 y 3</figcaption>
</figure>
</div>
<p>A lo largo de las diferentes versiones y con el paso de los años el arte gráfico ha mejorado en algunos aspectos pero incluso en la versión de <em>Trine 1: Enchanted Edition</em> el aspecto gráfico en la <a href="https://www.playstation.com/es-es/ps4/">PlayStation 4</a> es admirable.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/mMXGE9bgfpg" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="historia">Historia</h3>
<p>El juego se desarrolla con una pequeña historia lineal como hilo conductor al inicio de cada nivel que dan sentida a las aventuras de los personajes y niveles. No es una historia muy elaborada ni diferentes lineas argumentales pero completa con su papel en el juego con suficiencia. En estos vídeos están los inicios de las historias.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/ax3xJ961Ll8" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/DF4GvTz-mlM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/H1mUQehIXcY" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/2ukNLC2DPBI" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="banda-sonora-original">Banda sonora original</h3>
<p>La banda sonora enriquece el juego estando a la altura del arte gráfico, completa el juego en el aspecto del audio.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/RkyhqPjVE0w" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/8fkSw8Auv3I" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/L5MUYw5G99g" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/kfo1G8EjqB8" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="ubicación-de-los-orbes-de-experiencia-y-cofres">Ubicación de los orbes de experiencia y cofres</h3>
<p>Algunos de los orbes de experiencia y los cofres del tesoro están escondidos, con la experiencia de juego uno se fija donde pueden estar y encontrarlos requiere explorar de forma completa los rincones escondidos de cada sección. Aún así quizá alguno se resista el encontrarlo, algunos niveles son un poco largos con lo que intentar encontrarlos requiere tiempo y aún así cuesta recogerlos todos, en caso de querer obtenerlos todos en YouTube hay vídeos donde se muestra la ubicación de cada uno de ellos.</p>
<p>En los siguientes enlaces se pueden ver todos los orbes, objetos coleccionables y cofres en los diferentes niveles.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=EoyWNs8CNi8&amp;list=PLZo48CcL6RpS5JrGhzLzuIQMctrRUgtdY&amp;index=16">Localización de los objetos en Trine 1</a></li>
<li><a href="https://www.youtube.com/watch?v=7gQQwqPVpLo&amp;list=PL37676FCB9427A9BB">Localización de los objetos en Trine 2</a></li>
<li><a href="https://www.youtube.com/watch?v=txPiKO7XFxE&amp;list=PLRdic7wFhHbX6nt2X-VIAAF43Fr_zuC5w">Localización de los objetos en Trine 3</a></li>
<li><a href="https://www.youtube.com/watch?v=3-HBLUKONqg&amp;list=PLRYiNkjGrK9PdE3R0Te7p-GcHKCa-h4vd">Localización de los objetos en Trine 4</a></li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/EoyWNs8CNi8" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/7gQQwqPVpLo" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/txPiKO7XFxE" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/3-HBLUKONqg" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
]]>
        </content>
        
            
                <category term="juegos"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/novedades-de-java-16/</id>
        <title>Novedades de Java 16</title>
        <updated>2021-03-18T19:00:00+01:00</updated>
        <published>2021-03-18T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/novedades-de-java-16/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En Java 16 los cambios en el lenguaje no son tan notables que en versiones anteriores, aún así  el calendario se sigue manteniendo y en cada versión se incluyen mejoras incrementales destacables. Se publica la versión final y lista para producción de algunas características y se añaden nuevas en forma de vista previa.</strong></p>]]>
        <![CDATA[<p>Las nuevas versiones se van sucediendo de forma periódica y puntual según la cadencia de seis meses del adoptado calendario de publicación. En esta ocasión la versión 16 de Java publicada el 16 de marzo de 2021, que incluye mejoras incrementales destacando soporte para nuevas plataformas, inclusión de forma final de características que anteriormente estaban marcadas como vista previa y algunas nuevas características destacables que entran en forma de vista previa y nuevas revisiones de vistas previas anteriores.</p>
<p>La versión 16 de Java será la última antes de la siguiente versión de soporte a largo plazo o LTS, la versión 17 será una versión LTS que sucederá a la anterior LTS publicada de Java 11. La versión 11 fue publicada en septiembre de 2018 y la 17 será publicada en septiembre de 2021.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="introducción">Introducción</h3>
<p>No hay cambios importantes en el lenguaje, el más destacado es la inclusión de <em>pattern matching</em> para el operador <em>instanceof</em>, la incorporación de forma final de los <em>Records</em>, soporte para las plataformas Windows/AArch64, distribuciones como Alpine basadas en <em>musl</em> y soporte para la comunicación mediante canales <em>Unix-Domain Socket</em>.</p>
<p>En los cambios que entran en modo vista previa destacan la Vector API que permite la computación en paralelo aprovechando las instrucciones vectoriales en los procesadores como AVX en x86 y Neon en ARM para acelerar las operaciones de una instrucción múltiples datos o SIMD. Aparte de los destacados hay números cambios más realizados en las APIs de las clases y el añadido de algunas funcionalidades menores, que en las notas de publicación están documentados.</p>
<ul>
<li><a href="https://openjdk.java.net/projects/jdk/16/">Características de Java 16</a></li>
<li><a href="https://www.oracle.com/java/technologies/javase/16-all-relnotes.html">Notas de publicación de Java 16</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/16/docs/api/">Documentación Javadoc de Java 16</a></li>
<li><a href="https://blogs.oracle.com/javamagazine/java-champion-favorite-java16-records-vector-arm64-github">JavaMagazine: From the vector API to records to elastic metaspace, there’s a lot packed into Java 16</a></li>
</ul>
<p>Las mejoras incluídas en esta versión son:</p>
<ul>
<li>338: <a href="https://openjdk.java.net/jeps/338">Vector API (Incubator)</a></li>
<li>347: <a href="https://openjdk.java.net/jeps/347">Enable C++14 Language Features</a></li>
<li>357: <a href="https://openjdk.java.net/jeps/357">Migrate from Mercurial to Git</a></li>
<li>369: <a href="https://openjdk.java.net/jeps/369">Migrate to GitHub</a></li>
<li>376: <a href="https://openjdk.java.net/jeps/376">ZGC: Concurrent Thread-Stack Processing</a></li>
<li>380: <a href="https://openjdk.java.net/jeps/380">Unix-Domain Socket Channels</a></li>
<li>386: <a href="https://openjdk.java.net/jeps/386">Alpine Linux Port</a></li>
<li>387: <a href="https://openjdk.java.net/jeps/387">Elastic Metaspace</a></li>
<li>388: <a href="https://openjdk.java.net/jeps/388">Windows/AArch64 Port</a></li>
<li>389: <a href="https://openjdk.java.net/jeps/389">Foreign Linker API (Incubator)</a></li>
<li>390: <a href="https://openjdk.java.net/jeps/390">Warnings for Value-Based Classes</a></li>
<li>392: <a href="https://openjdk.java.net/jeps/392">Packaging Tool</a></li>
<li>393: <a href="https://openjdk.java.net/jeps/393">Foreign-Memory Access API (Third Incubator)</a></li>
<li>394: <a href="https://openjdk.java.net/jeps/394">Pattern Matching for instanceof</a></li>
<li>395: <a href="https://openjdk.java.net/jeps/395">Records</a></li>
<li>396: <a href="https://openjdk.java.net/jeps/396">Strongly Encapsulate JDK Internals by Default</a></li>
<li>397: <a href="https://openjdk.java.net/jeps/397">Sealed Classes (Second Preview)</a></li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/L0tOTN7Dkso" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="nuevas-características">Nuevas características</h3>
<h4 id="habilitar-características-de-c14">Habilitar características de C++14</h4>
<p>Hasta el JDK 15, las características usadas por el código C++ en el JDK ha estado limitado a los estándares de C++98/02. Con el JDK 11, el código fué actualizado para soportar nuevas versiones del estándar C++, aunque hasta ahora no han sido usadas nuevas características. Esto incluye poder construirse con versiones recientes de varios compiladores que soportan características de C++11/14.</p>
<p>Ahora se permiten formalmente cambios en el código C++ del JDK para aprovechar las características del lenguaje C++14.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/C%2B%2B14">C++14 wikipedia</a></li>
<li><a href="https://isocpp.org/wiki/faq/cpp14">C++14</a></li>
</ul>
<h4 id="migración-de-mercurial-a-git">Migración de Mercurial a Git</h4>
<p>Se migra como herramienta de control de versiones de <a href="https://www.mercurial-scm.org/">Mercurial</a> a <a href="https://git-scm.com/">Git</a>. Esto incluye todos los repositorio de los proyectos de OpenJDK preservando el historial, incluyendo las etiquetas y formateando los mensajes de <em>commits</em> según las convenciones de Git.</p>
<h4 id="migración-a-github">Migración a GitHub</h4>
<p>Relacionada con la migración de Mercurial a Git es la migración a la plataforma <a href="https://github.com/">GitHub</a> como proveedor de hospedaje para los repositorios. Los diferentes proyectos del OpenJDK están accesibles en GiHub.</p>
<ul>
<li><a href="https://github.com/openjdk/">OpenJDK GitHub</a></li>
</ul>
<p>Los beneficios de esta migración son tiempos más reducidos en el clonado y obtención de cambios, mayor disponibilidad de los repositorios, posibilidad de interactuar con los repositorios mediante listas de correo, herramientas de línea de comandos y navegadores web.</p>
<p>Usar un proveedor de hospedaje externo libera a los contribuidores de implementar y administrar el servicio. Las tres razones principales de usar un proveedor externo son el rendimiento, acceso a una API para automatizar las tareas y acceso a una mayor comunidad que proporcione incorpore nuevos contribuidores.</p>
<p>La razón de usar GitHub es que destaca en las tres razones principales de usar un proveedor externo.</p>
<h4 id="zgc-procesado-concurrente-de-pila-del-_thread_">ZGC: procesado concurrente de pila del <em>thread</em></h4>
<p>El recolector de basura ZGC tiene como objetivo hacer que las pausas de recolección de basura sean una cosa del pasado. Muchas de las operaciones del recolector de basura ya se han hecho ya escalables al tamaño de la memoria y del <em>metaespace</em>.</p>
<p>Las únicas tareas que son realizadas en puntos seguros del recolector de basura son un subconjunto de procesado raíz. Una de ellas son las pilas de trazas de excepciones. Estas tareas de procesado raíz son problemáticas escalan con el número de hilos, en sistemas con muchos hilos estas tareas se convierten en un problema.</p>
<p>Para conseguir el objetivo de que las pausas seguras del recolector de basura no excedan de un milisegundo, incluso en máquinas grandes, se ha de mover este procesado por hilo incluyendo la inspección de la pila de trazas a una fase concurrente.</p>
<p>Después de los cambios nada significativo se hará dentro de las pausas seguras del recolector de basura.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/el-recolector-de-basura-de-java-que-hace-y-como-funciona-en-cada-version/">El recolector de basura de Java, qué hace y cómo funciona en cada versión</a></li>
</ul>
<h4 id="canales-de-comunicación-unix">Canales de comunicación Unix</h4>
<p>Se ha añadido soporte para la comunicación mediante <em>sockets</em> Unix a las APIs del paquete <a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/package-summary.html">java.nio.channels</a>. Los <em>sockets</em> Unix con una forma de comunicación entre procesos o IPC en la misma máquina. Son similares a los <em>sockets</em> TCP/IP en la mayoría de aspectos excepto que son resueltos por nombres del sistema de archivos en vez de direcciones IP y números de puertos. La comunicación mediante <em>sockets</em> Unix es más segura y eficiente que las conexiones TCP/IP.</p>
<ul>
<li>Las comunicaciones son para procesos en el mismo sistema, las aplicaciones que no tiene intención de aceptar conexiones remotas pueden mejorar la seguridad con los <em>sockets</em> Unix.</li>
<li>Los <em>sockets</em> Unix están protegidos por los mecanismo de seguridad del sistema de archivos.</li>
<li>Los <em>sockets</em> Unix son más rápidos de establecer y ofrecen mayor tasa de transferencia.</li>
</ul>
<p>Los <em>sockets</em> Unix son una característica implementada en la mayoría de sistemas Unix y son soportados en Windows 10 y Windows Server 2019.</p>
<p>Los elementos de la API son <a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/UnixDomainSocketAddress.html">java.net.UnixDomainSocketAddress</a>, <a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/net/StandardProtocolFamily.html">java.net.StandardProtocolFamily</a>, <a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/SocketChannel.html">SocketChannel</a> y <a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/nio/channels/ServerSocketChannel.html">ServerSocketChannel</a>.</p>
<p>Más detalles en <a href="https://inside.java/2021/02/03/jep380-unix-domain-sockets-channels/">JEP-380: Unix domain socket channels</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/novedades-de-java-16/images/unix-sockets_hu4da9fcbe4c523ba10cac3597857560ec_33429_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Unix Sockets"><img src="https://picodotdev.github.io/blog-bitix/2021/03/novedades-de-java-16/images/unix-sockets_hu4da9fcbe4c523ba10cac3597857560ec_33429_650x450_fit_q90_box.jpg" width="650" height="371" alt="Unix Sockets" title="Unix Sockets"  class="lozad "></a></p>
<figcaption>Unix Sockets</figcaption>
</figure>
</div>
<h4 id="portado-a-alpine-linux">Portado a Alpine Linux</h4>
<p>Se ha portado el JDK a Alpine Linux y otras distribuciones que usan <a href="https://www.musl-libc.org/">musl</a> como librería C en las arquitecturas x64 y AArch64. <em>musl</em> es una implementación para los sistemas basados en Linux de la librería estándar con su funcionalidad descrita en los estándares de ISO C y POSIX. Varias distribuciones Linux incluyendo <a href="https://www.alpinelinux.org/">Alpine Linux</a> y <a href="https://openwrt.org/">OpenWrt</a> están basadas en <em>musl</em>, mientras que otras proporcionan soporte de forma opcional como <a href="https://www.archlinux.org/">Arch Linux</a>.</p>
<p>La distribución Alpine Linux es una distribución ampliamente adoptada en los entornos en la nube, microservicios y contenedores debido a su pequeño tamaño de imagen. La imagen base de Alpine Linux por ejemplo es de unos 6 MB lo que la hace atractiva por sus tiempos de arranque, ancho de banda más bajos y mayor seguridad al incluir menos componentes. Habilitar Java para funcionar en estos entornos permite ejecutar de forma nativa <a href="https://tomcat.apache.org/">Tomcat</a>, <a href="https://eclipse.org/jetty/">Jetty</a>, <a href="https://spring.io/">Spring</a> y otros <em>frameworks</em> populares.</p>
<p>Complementandlo con <em>jlink</em> para reducir el tamaño en tiempo de ejecución del JDK un usuario puede crear imágenes más pequeñas. Por ejemplo, si la aplicación depende solo del módulo <em>java.base</em> entonces una imagen de <a href="https://www.docker.com/">Docker</a> con Alpine Linux y un <em>runtime</em> de Java con solo ese módulo y la máquina virtual de servidor cabe en tan solo 38 MB.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/04/imagenes-de-docker-con-alpine-linux/">Imágenes de Docker con Alpine Linux</a></li>
</ul>
<h4 id="metaspace-elásctico">Metaspace elásctico</h4>
<p>La memoria no usada de <em>metaespace</em> es retornada al sistema operativo con más rapidez reduciendo el tamaño del <em>metaspace</em> y simplificando el código de <em>metaspace</em> con la intención de reducir los costes de mantenimiento.</p>
<h4 id="portado-a-windowsaarch64">Portado a Windows/AArch64</h4>
<p>Con la disponibilidad del nuevo hardware de consumo y servidor basado en la arquitectura AArch64 (ARM64), Windows/AArch64 se ha convertido en una plataforma importante debido a la demanda de los usuarios. Se ha portado el JDK a Windows/AArch64 continuando el trabajo anterior para la portabilidad de Linux/AArch64 (JEP 237) y en un futuro se hará lo equivalente para macOS.</p>
<h4 id="mensajes-de-advertencias-para-clases-valor">Mensajes de advertencias para clases valor</h4>
<p>Las clases envoltorio o <em>wrapper</em> de los tipos primitivos se designan como <a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/doc-files/ValueBased.html">clases valor</a>, ahora se emiten nuevos mensajes de advertencia en sus constructores marcados como <em>deprecated</em> desde Java 9 y candidatos a ser eliminados en futuras versiones.</p>
<p>Las clases <em>wrapper</em> de primitivos incluyen las <em>Integer</em>, <em>Float</em>, <em>Double</em>, etc., estas clases satisfacen la mayor parte de los requerimientos de las clases valor con la excepción de que exponen los constructores marcados como obsoletos.</p>
<p>Esto es un objetivo para el <a href="https://openjdk.java.net/projects/valhalla/">proyecto Valhalla</a> de implementar clases primitivas que mejoran el modelo de programación de Java.</p>
<ul>
<li><a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/doc-files/ValueBased.html">Value-based Classes</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/16/docs/api/https">Integer(int value)</a></li>
</ul>
<h4 id="_packaging-tool_"><em>Packaging Tool</em></h4>
<p>Se proporciona una herramienta para empaquetar aplicaciones Java que genera instaladores nativos para las diferentes plataformas. La herramienta <em>jpackage</em> fue incorporada en Java 14 y ahora pasa a considerarse con la categoría de listo para producción, su API está en el <a href="https://docs.oracle.com/en/java/javase/16/docs/api/jdk.jpackage/module-summary.html">jdk.jpackage</a>.</p>
<p>Soporta los formatos de empaquetado nativos de la plataforma para tener una experiencia de instalación natural. Estos formatos incluyen archivos <em>msi</em> y <em>exe</em> en windows, <em>pkg</em> y <em>dmg</em> en macOS, <em>deb</em> y <em>rpm</em> en Linux. Permite especificar en tiempo de empaquetado parámetros a usar en tiempo de ejecución. Se puede invocar de forma directa desde la línea de comandos y de forma programática mediante su API.</p>
<h4 id="_pattern-matching_-para-_instanceof_"><em>Pattern Matching</em> para <em>instanceof</em></h4>
<p>Se mejora el soporte del lenguaje para soportar <em>pattern matching</em> en el operador <em>instanceof</em>. Esto evita la necesidad de realizar <em>cast</em> de forma explícita simplificando el código, más legible y seguro.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="c1">// Antes&#10;</span><span class="c1"></span><span class="k">if</span> <span class="o">(</span><span class="n">obj</span> <span class="k">instanceof</span> <span class="n">String</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">String</span> <span class="n">s</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">obj</span><span class="o">;</span>&#10;   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>&#10;<span class="o">}</span>&#10;&#10;<span class="c1">// Ahora, con pattern matching&#10;</span><span class="c1"></span><span class="k">if</span> <span class="o">(</span><span class="n">obj</span> <span class="k">instanceof</span> <span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>&#10;<span class="o">}</span>&#10;<span class="k">if</span> <span class="o">(</span><span class="n">obj</span> <span class="k">instanceof</span> <span class="n">String</span> <span class="n">s</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="s">&#34;jdk&#34;</span><span class="o">))</span> <span class="o">{</span>&#10;   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>instanceof-pattern-matching-1.java</span>
    </div>
</div>
<p>El uso de <em>pattern matching</em> reduce la necesidad de hacer <em>cast</em> de forma explícita siendo particularmente útil en los métodos de igualdad con <em>equals</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="c1">// Antes&#10;</span><span class="c1"></span><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">Point</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;   <span class="n">Point</span> <span class="n">other</span> <span class="o">=</span> <span class="o">(</span><span class="n">Point</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;   <span class="k">return</span> <span class="n">x</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">x</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">y</span><span class="o">;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="c1">// Ahora, con pattern matching&#10;</span><span class="c1"></span><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="k">return</span> <span class="o">(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">Point</span> <span class="n">other</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">&amp;&amp;</span> <span class="n">x</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">x</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">==</span> <span class="n">other</span><span class="o">.</span><span class="na">y</span><span class="o">;</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>instanceof-pattern-matching-2.java</span>
    </div>
</div>
<h4 id="_records_"><em>Records</em></h4>
<p>Las clases <em>Record</em>  son un nuevo tipo de clases en el lenguaje Java, ayudan a modelar agregados de datos con menos ceremonia que las clases normales. Son clases que actúan como contenedores para datos inmutables, pueden ser considerados como tuplas. La declaración de un <em>record</em> mayormente consiste en la declaración de su estado. No es su objetivo resolver los problemas de las clases mutables que usan las convenciones de nombres de los JavaBeans.</p>
<p>Se publicaron como primera vista previa en Java 14 y una segunda versión en Java 15.</p>
<p>Las siguientes dos versiones de la clase <em>Point</em> son equivalentes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="n">record</span> <span class="nf">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>records-1.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Point</span> <span class="o">{</span>&#10;   <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">x</span><span class="o">;</span>&#10;   <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">y</span><span class="o">;</span>&#10;&#10;   <span class="n">Point</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">this</span><span class="o">.</span><span class="na">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">this</span><span class="o">.</span><span class="na">y</span> <span class="o">=</span> <span class="n">y</span><span class="o">;</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="kt">int</span> <span class="nf">x</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">x</span><span class="o">;</span> <span class="o">}</span>&#10;   <span class="kt">int</span> <span class="nf">y</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="n">y</span><span class="o">;</span> <span class="o">}</span>&#10;&#10;   <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">Point</span><span class="o">))</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Point</span> <span class="n">other</span> <span class="o">=</span> <span class="o">(</span><span class="n">Point</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">other</span><span class="o">.</span><span class="na">x</span> <span class="o">==</span> <span class="n">x</span> <span class="o">&amp;&amp;</span> <span class="n">other</span><span class="o">.</span><span class="na">y</span> <span class="o">==</span> <span class="n">y</span><span class="o">;</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hash</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Point[x=%d, y=%d]&#34;</span><span class="o">,</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>&#10;   <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>records-2.java</span>
    </div>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/tLHUqXeiC4w" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="encapsulación-fuerte-del-clases-internas-del-jdk-por-defecto">Encapsulación fuerte del clases internas del JDK por defecto</h4>
<p>Se cambia el comportamiento por defecto de la encapsulación de permitido a fuerte para las clases internas del JDK aunque siguiendo posible relajar el comportamiento de la encapsulación con la opción de línea de comandos <em>&ndash;illegal-access=permit</em>, la encapsulación fuerte hace una excepción para ciertas clases internas como <em>sun.misc.Unsafe</em>  que siguen siendo posible utilizarlas. Esto permite continuar con la encapsulación y mantenibilidad del JDK que era el objetivo del proyecto <em>Jigsaw</em> materializado en la incorporación de los módulos en Java 9. Se promueve el uso de APIs estándares para actualizaciones a futuras versiones sin problemas.</p>
<p>A lo largo de los años los desarrolladores han estado usando clases internas del JDK de los paquetes <em>java.*</em>, <em>sun.*</em>. Nunca se ha aconsejado pero nada impedía su uso hasta la aparición de los módulos. El uso de las clases de estos paquetes supone un problema de seguridad y mantenibilidad en el JDK pero impedir de forma drástica su uso haría que muchas librerías y aplicaciones que las usan dejasen de funcionar.</p>
<p>Ahora se encapsula de forma más fuerte las API internas que aplica tanto en tiempo de compilación como de ejecución, incluyendo los intentos del código de acceder a elementos mediante <em>reflection</em>.</p>
<h3 id="nuevas-características-en-vista-previa">Nuevas características en vista previa</h3>
<h4 id="vector-api">Vector API</h4>
<p>El objetivo es proporcionar una API para aprovechar las instrucciones vectoriales hardware de las arquitecturas de CPU que permiten conseguir un mejor rendimiento a las computaciones equivalentes escalares. Las instrucciones vectoriales son conocidas como <a href="https://en.wikipedia.org/wiki/SIMD">Single Instruction Multiple Data</a> (SIMD) que permiten mayor paralelismo al aplicar la misma operación a múltiples datos en un único ciclo de reloj de la CPU.</p>
<p>Su objetivo es proporcionar una API clara y concisa, agnóstica de la plataforma, de alto rendimiento para las arquitecturas x64 y AArch64 y con soporte de degradado en caso de no estar las instrucciones disponibles.</p>
<p>La API de vectorial es muy útil para funcionalidases como procesado de imágenes, procesado de sonido, gráficos inteligencia artificial que necesitan realizar la misma operación sobre muchos datos.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/HARDCbSog0c" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="foreign-linker-api">Foreign Linker API</h4>
<p>El objetivo es ofrecer una API con tipado estático y código Java para acceso a código nativo. Junto con <em>Foreign-Memory Access API</em> simplifica considerablemente el proceso propenso a errores de enlazado a una librería nativa.</p>
<p>Sus objetivos son facilidad de uso reemplazando JNI con un modelo de desarrollo superior basado puramente en Java, soportar C en las plataformas x64 y AArch64, soportar otras plataformas como 32-bit x86 y otros lenguajes distintos de C como C++ o Fortran y ofrecer un alto rendimiento comparable o mejor que JNI.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/03/ejemplo-de-jni-usar-codigo-en-c-desde-java/">Ejemplo de JNI, usar código en C desde Java</a></li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/DjiKlOE9ibY" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="foreign-memory-access-api">Foreign-Memory Access API</h4>
<p>Su objetivo es proporcionar a los programas Java una forma segura y eficiente de acceder a memoria fuera de la memoria de la máquina virtual de Java.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/Edls8HIREk4" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="_sealed-classes_"><em>Sealed Classes</em></h4>
<p>Las clases selladas o <em>sealed classes</em> permiten al autor de la clase o interfaz controlar que código es responsable de implementarlo. Proporcionan una forma de restringir el uso de la superclase distinta de los modificadores de acceso. En un futuro puede ser la base para implementar <em>pattern matching</em> para un análisis exhaustivo de patrones.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/">Los modificadores de acceso de clases, propiedades y métodos en Java</a></li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">abstract</span> <span class="n">sealed</span> <span class="kd">class</span> <span class="nc">Shape</span> <span class="n">permits</span> <span class="n">Circle</span><span class="o">,</span> <span class="n">Rectangle</span><span class="o">,</span> <span class="n">Square</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Circle</span> <span class="kd">extends</span> <span class="n">Shape</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Rectangle</span> <span class="kd">extends</span> <span class="n">Shape</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Square</span> <span class="kd">extends</span> <span class="n">Shape</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sealed-classes.java</span>
    </div>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/</id>
        <title>Repositorio de artefactos privado con Nexus</title>
        <updated>2021-03-12T18:00:00+01:00</updated>
        <published>2021-03-12T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los repositorios de software almacenan los artefactos, son utilizados por las herramientas de construcción que los descargan y almacenan de forma local para posteriores usos las dependencias que los proyectos declaran en el archivo de construcción. Los desarrolladores de los artefactos publican en los repositorios de software las nuevas versiones. Nexus es un repositorio de software con soporte para repositorios de software de varios tipos, Maven para Java, imágenes de Docker, paquetes npm para JavaScript además de artefactos para los lenguajes Python y Go.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/nexus.svg" width="200" height="227" alt="Sonatype Nexus" title="Sonatype Nexus"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>Los proyectos de software son complejos, las librerías permiten crear módulos de las aplicaciones y reutilizar código ya implementado sin tener que implementar la misma funcionalidad en cada proyecto. Todos los lenguajes de una forma u otra permiten reutilizar librerías. En Java las librerías son archivos <em>jar</em>, en Docker imágenes de contenedores y en JavaScript paquetes <em>npm</em>.</p>
<p>Para reutilizar las librerías los proyectos declaran las librerías de las que dependen, la herramienta de construcción se encargan de descargarlas y almacenarlas en un repositorio local para evitar una nueva descargacon su transferencia de red en usos posteriores. En Java las herramientas de construcción <a href="https://gradle.org/">Gradle</a> y <a href="https://maven.apache.org/">Maven</a> automatizan la descarga y enlazado de las dependencias declaradas con el código del proyecto. Para JavaScript una herramienta de dependencias es <a href="https://www.npmjs.com/">npm</a>.</p>
<p>Las librerías requieren de la funcionalidad de un repositorio de librerías o artefactos que permite descargarlas cuando un proyecto las declare como dependencias. En Java el repositorio más popular es <a href="https://search.maven.org/">Maven Central</a>, las imágenes para iniciar un contenedor de Docker también tienen su propio repositorio de imágenes de Docker con <a href="https://registry.hub.docker.com/">Docker Hub</a> o el repositorio de librerías JavaScript que utiliza  npm.</p>
<p>Los repositorios anteriores son públicos donde los desarrolladores suben sus artefactos cada vez que publican una nueva versión de sus librerías o <em>frameworks</em>. Una organización en sus proyectos utiliza numerosas dependencias de los repositorios oficiales de cada lenguaje o herramienta pero también con seguridad desarrollará sus propias librerías que necesita compartir en diferentes proyectos de forma interna sin compartirlos en los repositorios públicos.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="repositorio-de-artefactos-con-nexus">Repositorio de artefactos con Nexus</h3>
<p><a href="https://www.sonatype.com/nexus/repository-oss">Nexus</a> es un software que ofrece la funcionalidad de repositorio de artefactos. Permite a una organización compartir de forma privada los artefactos entre los diferentes proyectos. Soporta diferentes tipos de repositorios según el tipo de artefactos, librerías <em>jar</em> para Java, paquetes npm para JavaScript, imágenes de contenedores para Docker, paquetes de <a href="https://www.python.org/">Python</a> y <a href="https://golang.org/">Go</a>.</p>
<p>Nexus OSS es la versión de código abierto que permite su uso sin coste, la versión <a href="https://www.sonatype.com/nexus/repository-pro">Nexus Pro</a> tiene características empresariales como autenticación SSO.</p>
<ul>
<li><a href="https://www.sonatype.com/nexus/repository-oss-vs-pro-features">Comparación de caracterśiticas entre Nexus Repository OSS y Pro</a></li>
</ul>
<p><a href="https://github.com/features/packages">Github Packages</a> permite hacer las funcionalidades de repositorio de artefactos pero no soporta todos los tipos de artefactos de todos los lenguajes. <a href="https://cloud.google.com/artifact-registry/">Google Artifact Registry</a> también ofrece un servicio para almacenar los artefactos resultado de compilación, <a href="https://amzn.to/2flFhHA">Amazon</a> con <a href="https://aws.amazon.com/es/codeartifact/">AWS CodeArtifact</a> también tiene su servicio administrado de artefactos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus_hu569344ef3b9d3bc3d0c279ec1f5120cc_72589_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Nexus"><img src="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus_hu569344ef3b9d3bc3d0c279ec1f5120cc_72589_650x450_fit_q90_box.jpg" width="650" height="329" alt="Nexus" title="Nexus"  class="lozad "></a></p>
<figcaption>Arquitectura de un repositorio de artefactos con Nexus</figcaption>
</figure>
</div>
<h3 id="ejemplo-de-repositorio-con-nexus">Ejemplo de repositorio con Nexus</h3>
<p>Nexus ofrece una imagen de Docker que permite iniciar el servidor de Nexus de forma fácil como un contenedor. El siguiente <em>script</em> lo inicia en el puerto 8081 y en el puerto adicional 8082 para el repositorio de Docker.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run -it --rm -p 8081:8081 -p 8082:8082 --name nexus sonatype/nexus3&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-run.sh</span>
    </div>
</div>
<p>El usuario administrador es <em>admin</em> y la contraseña aleatoria generada al inicio del contenedor se almacena en el archivo <em>/nexus-data/admin.password</em> del sistema de archivos del contenedor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID   IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  NAMES&#10;6b7d7495ad0c   sonatype/nexus3   <span class="s2">&#34;sh -c </span><span class="si">${</span><span class="nv">SONATYPE_DI</span><span class="p">…</span><span class="si">}</span><span class="s2">&#34;</span>   <span class="m">50</span> seconds ago   Up <span class="m">49</span> seconds   0.0.0.0:8081-8082-&gt;8081-8082/tcp   nexus&#10;$ docker <span class="nb">exec</span> -it 6b7d7495ad0c bash&#10;<span class="c1"># cat /nexus-data/admin.password</span>&#10;41693644-b54a-4aef-9cf0-cb151e9ef440</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-exec.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-1_huc7edf825174dcec70e5916a8a54c0462_228021_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nexus"><img src="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-1_huc7edf825174dcec70e5916a8a54c0462_228021_300x250_fit_box_3.png" width="300" height="220" alt="Nexus" title="Nexus"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-2_hu95533abba5813823a079eb0bef34dbea_126802_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nexus"><img src="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-2_hu95533abba5813823a079eb0bef34dbea_126802_300x250_fit_box_3.png" width="300" height="221" alt="Nexus" title="Nexus"  class="lozad "></a></p>
<figcaption>Nexus</figcaption>
</figure>
</div>
<h4 id="publicar-un-artefacto-a-un-repositorio-maven-local">Publicar un artefacto a un repositorio Maven local</h4>
<p>Usando Gradle o Maven las dependencias de un proyecto se cachean en un directorio local del directorio de inicio del usuario, <em>~/.gradle</em> o <em>~/.m2</em>. Al desarrollar es posible publicar una versión de una librería en estos repositorios de caché. Para publicar un artefacto en un repositorio de Maven con Gradle se utiliza el <em>plugin</em> <a href="https://docs.gradle.org/current/userguide/publishing_maven.html">Maven Publish</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew publishToMavenLocal&#10;$ ./gradlew publishLibraryPublicationToMavenLocal&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-publishToMavenLocal.sh</span>
    </div>
</div>
<h4 id="publicar-un-artefacto-a-un-repositorio-maven-en-nexus-con-gradle">Publicar un artefacto a un repositorio Maven en Nexus con Gradle</h4>
<p>Gradle ofrece el <em>plugin</em> <em>Maven Publish</em> para publicar artefactos en repositorios de Maven. Hay que configurar y definir los artefactos y los repositorios en los que se puede publicar. El <em>plugin</em> añade varias tareas de Gradle con las que elegir de forma específica que artefacto publicar, en que repositorio, el grupo del artefacto, su nombre y versión.</p>
<p>Este es un archivo de construcción de Gradle con un repositorio Maven de Nexus en el que publicar los artefactos de la librería.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java-library&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;maven-publish&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">maven</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">url</span> <span class="s2">&#34;http://localhost:8081/repository/maven-releases/&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">tasks</span><span class="o">.</span><span class="na">named</span><span class="o">(</span><span class="s1">&#39;test&#39;</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">useJUnitPlatform</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">publishing</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">publications</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">library</span><span class="o">(</span><span class="n">MavenPublication</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">groupId</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">artifactId</span> <span class="o">=</span> <span class="s1">&#39;java-library&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">from</span> <span class="n">components</span><span class="o">.</span><span class="na">java</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">maven</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;nexus&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">allowInsecureProtocol</span> <span class="o">=</span> <span class="kc">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">url</span> <span class="s2">&#34;http://localhost:8081/repository/maven-releases/&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">credentials</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">username</span> <span class="s1">&#39;admin&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">password</span> <span class="s1">&#39;admin&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build-library.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">$</span> <span class="o">./</span><span class="n">gradlew</span> <span class="n">publishLibraryPublicationToNexusRepository</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-publishToNexusRepository.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-maven_hue5e65df069eb6a6c39948e78d6e6afb4_207191_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Librería de Java publicada en repositorio Nexus"><img src="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-maven_hue5e65df069eb6a6c39948e78d6e6afb4_207191_300x250_fit_box_3.png" width="300" height="221" alt="Librería de Java publicada en repositorio Nexus" title="Librería de Java publicada en repositorio Nexus"  class="lozad "></a></p>
<figcaption>Librería de Java publicada en repositorio Nexus</figcaption>
</figure>
</div>
<p>Una vez publicado el artefacto otro proyecto puede declararlo como una dependencia en la sección <em>dependencies</em> y añadir el repositorio de Maven donde buscar dependencias en la sección <em>repositories</em>. Al ejecutar el programa Gradle descarga la dependencia y la añade al proyecto como cualquier dependencia del repositorio de <em>mavenCentral</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">maven</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">allowInsecureProtocol</span> <span class="o">=</span> <span class="kc">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">url</span> <span class="s2">&#34;http://localhost:8081/repository/maven-releases/&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;io.github.picodotdev:java-library:1.0&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.nexus.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">tasks</span><span class="o">.</span><span class="na">named</span><span class="o">(</span><span class="s1">&#39;test&#39;</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">useJUnitPlatform</span><span class="o">()</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build-application.gradle</span>
    </div>
</div>
<p>El programa trata las clases de la librería del repositorio de Nexus como cualquier otra clase de una librería de Maven Central.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.nexus.library</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Library</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">someLibraryMethod</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Library.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.nexus.application</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.nexus.library.Library</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getGreeting</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Main: &#34;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">Main</span><span class="o">().</span><span class="na">getGreeting</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Library: &#34;</span> <span class="o">+</span> <span class="k">new</span> <span class="n">Library</span><span class="o">().</span><span class="na">someLibraryMethod</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew run&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Main: Hello World!&#10;Library: true&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<h4 id="publicar-una-imagen-docker-a-un-repositorio-repositorio-en-nexus">Publicar una imagen Docker a un repositorio repositorio en Nexus</h4>
<p>Para usar el repositorio de imágenes de Docker en Nexus es necesario crear un repositorio y configurar Nexus para que se ubique en un puerto diferente del del puerto estándar. En este caso el contenedor de Docker de Nexus además del puerto 8081 se inicia en el puerto 8082.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-repository-1_hu657d2e832a4c53f89ae0a12b91c0a55b_113775_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Repositorios de Nexus"><img src="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-repository-1_hu657d2e832a4c53f89ae0a12b91c0a55b_113775_200x150_fit_box_3.png" width="200" height="148" alt="Repositorios de Nexus" title="Repositorios de Nexus"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-repository-2_hu8fce64f8a363011a1409c34c1f35f68c_165640_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Repositorios de Nexus"><img src="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-repository-2_hu8fce64f8a363011a1409c34c1f35f68c_165640_200x150_fit_box_3.png" width="200" height="148" alt="Repositorios de Nexus" title="Repositorios de Nexus"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-repository-3_hu1b8b3d384a6ce39656185efac36bc458_191429_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Repositorios de Nexus"><img src="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-repository-3_hu1b8b3d384a6ce39656185efac36bc458_191429_200x150_fit_box_3.png" width="200" height="148" alt="Repositorios de Nexus" title="Repositorios de Nexus"  class="lozad "></a></p>
<figcaption>Repositorios de Nexus</figcaption>
</figure>
</div>
<p>Para subir una imagen de un contenedor al repositorio hay que crear su <em>tag</em> y realizar la subida de la imagen. <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Crear una imagen de Docker con un Dockerfile</a> genera una imagen de un contenedor en el repositorio local, una vez se ha generado se le añade la etiqueta y se sube al repositorio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker images&#10;REPOSITORY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TAG&nbsp;&nbsp;&nbsp;&nbsp;   IMAGE ID&nbsp;&nbsp;&nbsp;&nbsp;   CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SIZE&#10;busybox&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   latest&nbsp;&nbsp;&nbsp;&nbsp;a9d583973f65   <span class="m">2</span> days ago&nbsp;&nbsp;&nbsp;&nbsp; 1.23MB&#10;sonatype/nexus3   latest&nbsp;&nbsp;&nbsp;&nbsp;f07af611e0df   <span class="m">8</span> days ago&nbsp;&nbsp;&nbsp;&nbsp; 662MB&#10;$ docker tag a9d583973f65 localhost:8082/repository/docker/busybox:latest&#10;$ docker images&#10;REPOSITORY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TAG&nbsp;&nbsp;&nbsp;&nbsp;   IMAGE ID&nbsp;&nbsp;&nbsp;&nbsp;   CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SIZE&#10;busybox&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;latest&nbsp;&nbsp;&nbsp;&nbsp;a9d583973f65   <span class="m">2</span> days ago&nbsp;&nbsp;&nbsp;&nbsp; 1.23MB&#10;localhost:8082/repository/docker/busybox   latest&nbsp;&nbsp;&nbsp;&nbsp;a9d583973f65   <span class="m">2</span> days ago&nbsp;&nbsp;&nbsp;&nbsp; 1.23MB&#10;sonatype/nexus3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;latest&nbsp;&nbsp;&nbsp;&nbsp;f07af611e0df   <span class="m">8</span> days ago&nbsp;&nbsp;&nbsp;&nbsp; 662MB&#10;$ docker login localhost:8082&#10;Username: admin&#10;Password:&#10;Login Succeeded&#10;$ docker push localhost:8082/repository/docker/busybox:latest&#10;The push refers to repository <span class="o">[</span>localhost:8082/repository/docker/busybox<span class="o">]</span>&#10;2983725f2649: Pushed &#10;latest: digest: sha256:410a07f17151ffffb513f942a01748dfdb921de915ea6427d61d60b0357c1dcd size: <span class="m">527</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-push.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-docker_hu243d7fe2cb9df4b89918e164bf9a2faf_108779_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Imagen de Docker publicada en repositorio Nexus"><img src="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/images/nexus-docker_hu243d7fe2cb9df4b89918e164bf9a2faf_108779_300x250_fit_box_3.png" width="300" height="221" alt="Imagen de Docker publicada en repositorio Nexus" title="Imagen de Docker publicada en repositorio Nexus"  class="lozad "></a></p>
<figcaption>Imagen de Docker publicada en repositorio Nexus</figcaption>
</figure>
</div>
<p>Una vez la imagen del contenedor se ha subido se puede utilizar especificando la URL del repositorio de imágenes. Para comprobar que la imagen se descarga del repositorio de Nexus primero se elimina de la caché local.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker rmi localhost:8082/repository/docker/busybox:latest&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-rmi.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker pull localhost:8082/repository/docker/busybox:latest&#10;$ docker run -it --rm localhost:8082/repository/docker/busybox:latest&#10;/ <span class="c1"># date</span>&#10;Fri Mar <span class="m">12</span> 19:12:56 UTC <span class="m">2021</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-pull.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Nexus">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://help.sonatype.com/repomanager3/formats/docker-registry/docker-authentication">Docker Authentication</a></li>
<li><a href="https://help.sonatype.com/repomanager3/formats/docker-registry/pushing-images">Pushing Images</a></li>
<li><a href="https://docs.github.com/en/packages/guides">GitHub Packages</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/</id>
        <title>Acceso simple y seguro a sistemas remotos con Boundary</title>
        <updated>2021-03-05T15:00:00+01:00</updated>
        <published>2021-03-05T15:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Boundary es otra herramienta de HashiCorp dedicada a la seguridad. Vault está centrada en el almacenamiento de secretos, Boundary está centrada en otro aspecto de la seguridad que es el acceso a sistemas remotos. Una herramienta mejor adaptada y teniendo en cuenta las propiedades dinámicas de los sistemas actuales. Es una alternativa a los métodos de VPN, bastión y <em>firewall</em> que se utilizan para permitir estos accesos remotos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-boundary.svg" width="200" height="210" alt="HashiCorp Boundary" title="HashiCorp Boundary"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>El acceso de forma remota a sistemas es necesario y útil más cuando las máquinas ya no son máquinas físicas sino que están en centros de datos en diferentes ubicaciones en el mundo e incluso son máquinas lógicas como las máquinas virtuales ejecutadas en la computación de la nube.</p>
<p>El acceso a las máquinas no solo se requiere para las aplicaciones de forma automatizada sino que en algunas situaciones se requiere acceso manual para realizar tareas administrativas o conexión con clientes específicos como escritorio remoto o clientes de bases de datos.</p>
<p>Permitir el acceso remoto es necesario, sin embargo, requiere seguridad de forma que únicamente los usuarios autorizados accedan únicamente a los sistemas autorizados.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="funcionamiento-acceso-remoto-tradicional">Funcionamiento acceso remoto tradicional</h3>
<p>La forma habitual de proporcionar acceso remoto a sistemas de una red privada es mediante una VPN o a través de un sistema intermediario denominado bastión. Estos conceptos proporcionan acceso remoto en ciertos aspectos de forma segura pero no están exentas de problemas e inconvenientes.</p>
<p>El primer problema es que una vez conectado a una VPN o un bastión se tiene acceso a cualquier ordenador de la red privada a la que uno se ha conectado. Un usuario que necesite acceso a una máquina potencialmente tiene conectividad con otros sistemas en esa red, lo que es riesgo de seguridad por permitir la posibilidad de accesos a sistemas no autorizados.</p>
<p>El segundo problema es que las infraestructuras actuales de computación en la nube no son estáticas sino que son dinámicas en las que los sistemas cambian de dirección IP o se crean y destruyen instancias.</p>
<p>Mediante un <em>firewall</em> ubicado entre el bastión y el sistema de acceso remoto es posible limitar a que sistemas de la red es posible conectarse. Sin embargo, un <em>firewall</em> constituye un elemento más a administrar que añade más complejidad en la infraestructura.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-workflow_hu2f4d93802e25afa09320a79a8acbf31f_141260_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Boundary"><img src="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-workflow_hu2f4d93802e25afa09320a79a8acbf31f_141260_650x450_fit_box_3.png" width="650" height="229" alt="Boundary" title="Boundary"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-use-cases_hu45b28899952f60fced4840107d75c409_88910_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Casos de uso de Boundary"><img src="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-use-cases_hu45b28899952f60fced4840107d75c409_88910_605x450_fit_box_3.png" width="605" height="286" alt="Casos de uso de Boundary" title="Casos de uso de Boundary"  class="lozad "></a></p>
<figcaption>Boundary</figcaption>
</figure>
</div>
<h3 id="acceso-remoto-con-boundary">Acceso remoto con Boundary</h3>
<p>Para tratar de solventar los problemas de acceso remoto con VPN, bastión y <em>firewall</em>, simplificar la infraestructura y una administración de más alto nivel lógico de usuarios, permisos y sistemas HashiCorp ha publicado otra herramienta dedicada a la seguridad específica para el acceso remoto.</p>
<p><a href="https://www.boundaryproject.io/">Boundary</a> es una herramienta adaptada a los entornos modernos de computación en la nube y dinámicos agnóstica de la infraestructura y de las aplicaciones utilizadas por los clientes remotos. Su funcionamiento es similar al de un bastión con una diferencia importante de que Boundary es el que realiza la conexión a los equipos remotos y no la aplicación cliente.</p>
<p>Boundary gestiona el inventario de <em>hosts</em>, usuarios, grupos y roles y permisos con los que es capaz de permitir o denegar el acceso únicamente a los <em>hosts</em> permitidos y denegar el acceso a los hosts para los que no se dispone acceso. Funciona en modo cliente y servidor, el servidor hace de bastión y es el que realmente se conecta al sistema remoto, en el modo cliente proporciona a la aplicación cliente conexión con el servidor, a diferencia de un sistema con un bastión o VPC la aplicación cliente no se conecta con el sistema remoto sino que únicamente se conecta al servidor de Boundary.</p>
<p>Boundary es un único binario tanto cuando actúa en modo servidor como en modo cliente, dispone una interfaz de línea de comandos y una interfaz web. En las primeras versiones no están todas la <a href="https://www.boundaryproject.io/docs/roadmap">funcionalidades planificadas en el <em>roadmap</em></a>, a medida que madure el servicio ganará en funcionalidades y utilidad. Integrando Boundary con <a href="https://www.consul.io/">Consul</a> tendrá acceso al inventario de servicios y <em>hosts</em>. Integrando Boundary con <a href="https://www.vaultproject.io/">Vault</a> en el momento de acceso al sistema remoto Vault será capaz de crear credenciales de forma dinámica y efímeras.</p>
<p>En su modo servidor requiere de una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a> que inicia como un contenedor de <a href="https://www.docker.com/">Docker</a>. La consola de administración se inicia en el puerto <em>9200</em> y el usuario y contraseña se emite en la salida de la terminal al iniciar la herramienta.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-console-1_hu439945904a4816b0a917f80cda7b1ddf_55235_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Consola de administración de Boundary"><img src="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-console-1_hu439945904a4816b0a917f80cda7b1ddf_55235_300x200_fit_box_3.png" width="300" height="199" alt="Consola de administración de Boundary" title="Consola de administración de Boundary"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-console-2_hu90c9765d4f1a8c1f38c528ef0fa6de88_69361_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Consola de administración de Boundary"><img src="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-console-2_hu90c9765d4f1a8c1f38c528ef0fa6de88_69361_300x200_fit_box_3.png" width="300" height="199" alt="Consola de administración de Boundary" title="Consola de administración de Boundary"  class="lozad "></a></p>
<figcaption>Consola de administración de Boundary</figcaption>
</figure>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/tUMe7EsXYBQ" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="conceptos">Conceptos</h4>
<p>Boundary tiene varios conceptos de dominio, por un lado está el catálogo o inventario de <em>hosts</em>, un conjunto de <em>hosts</em> agrupados en un <em>host set</em> y estos a su vez en un <em>host catalog</em>. Por otro lado, están los usuarios, grupo y roles. Finalmente los <em>targets</em> son la abstracción del elemento al que se quiere realizar una conexión, el <em>target</em> se traduce en un <em>host</em>. Finalmente, todos estos elementos se agrupan en ámbitos o <em>scopes</em> y proyectos o <em>projects</em>.</p>
<p>En una organización con unas cuantas decenas de sistemas y usuarios, la gestión de este inventario se vuelve ciertamente complicado.</p>
<h3 id="clientes-soportados">Clientes soportados</h3>
<p>Boundary incorpora varios clientes en su modo de funcionamiento como cliente. Estos son:</p>
<ul>
<li><em>ssh</em>: por defecto es el cliente SSH local (<em>ssh</em>)</li>
<li><em>postgres</em>: por defecto el del cliente oficial de línea de comandos de Postgres (<em>psql</em>)</li>
<li><em>rdp</em>: por defecto es el cliente de Windows RDP (<em>mstsc</em>)</li>
<li><em>http</em>: por defecto es <em>curl</em></li>
<li><em>kube</em>: por defecto es <em>kubectl</em></li>
</ul>
<p>Boundary soportar estos clientes de forma nativa sin embargo es agnóstico de la herramienta cliente, con la opción <em>exec</em> es posible utilizar cualquier herramienta que se conecte con un sistema remoto.</p>
<ul>
<li><a href="https://www.boundaryproject.io/docs/getting-started/connect-to-target">Connect to Your First Target</a></li>
</ul>
<h3 id="ejemplo-de-conexión-ssh-con-boundary">Ejemplo de conexión SSH con Boundary</h3>
<p>En el siguiente ejemplo muestro como conectarse a un <em>host</em> a través de Boundary con SSH. En el mismo ejemplo muestro como usar Boundary con autenticación con claves SSH y como usar Boundary con Vault que generar un OTP para realizar la misma conexión sin usar claves SSH y únicamente con credenciales temporales. En este ejemplo el <em>host</em> remoto es una <a href="https://picodotdev.github.io/blog-bitix/2021/02/guia-de-instalacion-de-gnu-linux-para-la-raspberry-pi/">Raspberry Pi con sistema operativo Raspberry Pi OS instalado</a> y con el servicio de SSH iniciado.</p>
<p>En este ejemplo el servidor de Boundary y Vault están en la misma máquina. Los pasos del ejemplo para usar Boundary y SSH, los pasos que involucran ORP son opcionales si se usan claves SSH:</p>
<ul>
<li>Iniciar el servidor de Boundary.</li>
<li>Configurar el servidor SSH para que valide los OTP conectándose a Vault.</li>
<li>Iniciar Vault y permitir su acceso al <em>host</em> remoto para validar los OTP.</li>
<li>Realizar la conexión SSH con Boundary desde la máquina local a la máquina remota.</li>
</ul>
<p>Iniciar el servidor Boundary es sencillo, basta <a href="https://picodotdev.github.io/blog-bitix/2021/01/que-es-la-variable-path-del-sistema-y-como-cambiarla-en-gnu-linux/">instalar el binario de Boundary en el PATH del sistema</a> e <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">instalar el gestor de contenedores Docker</a> previamente. Al iniciar el servidor de Boundary este descarga la imagen de Postgres e inicia su contenedor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo systemctl start docker.service&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>start-docker.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev -dev-listen-address <span class="s2">&#34;0.0.0.0:8200&#34;</span>&#10;<span class="o">==</span>&gt; Vault server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://0.0.0.0:8200&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://0.0.0.0:8201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Go Version: go1.15.8&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;0.0.0.0:8200&#34;</span>, cluster address: <span class="s2">&#34;0.0.0.0:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Recovery Mode: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: inmem&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.5.7&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: 81d55e35dbbe844a6feb4f52a9a3d072c052d228+CHANGES&#10;&#10;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;and starts unsealed with a single unseal key. The root token is already&#10;authenticated to the CLI, so you can immediately begin using Vault.&#10;&#10;You may need to <span class="nb">set</span> the following environment variable:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://0.0.0.0:8200&#39;</span>&#10;&#10;The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;seal/unseal the Vault or re-authenticate.&#10;&#10;Unseal Key: oqt+hwz0gOD9nxz8gc9C79B0M6mDx7rsbJelYZDsg5I<span class="o">=</span>&#10;Root Token: s.PAPTxv16g0o9amLr82NYcxBT&#10;&#10;Development mode should NOT be used in production installations!&#10;&#10;<span class="o">==</span>&gt; Vault server started! Log data will stream in below:&#10;&#10;2021-03-05T15:07:47.964+0100 <span class="o">[</span>INFO<span class="o">]</span>  proxy environment: <span class="nv">http_proxy</span><span class="o">=</span> <span class="nv">https_proxy</span><span class="o">=</span> <span class="nv">no_proxy</span><span class="o">=</span>&#10;2021-03-05T15:07:47.964+0100 <span class="o">[</span>WARN<span class="o">]</span>  no <span class="sb">`</span>api_addr<span class="sb">`</span> value specified in config or in VAULT_API_ADDR<span class="p">;</span> falling back to detection <span class="k">if</span> possible, but this value should be manually <span class="nb">set</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>start-vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ boundary <span class="nv">dev</span>&#10;<span class="o">==</span>&gt; Boundary server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[</span>Controller<span class="o">]</span> AEAD Key Bytes: A7NiMQ0fNlBiCpFxMxg21k8TAdSNcui/okJGxBg6eZs<span class="o">=</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[</span>Recovery<span class="o">]</span> AEAD Key Bytes: H4U5vaCh1ZmgrRJXhlljvOqkLDzU9ZNy4Cn9Z4+a7Bo<span class="o">=</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">[</span>Worker-Auth<span class="o">]</span> AEAD Key Bytes: rWZi4UxADHAlsqbhemdM6YIIyFG9+AuqIcCbAOZILtQ<span class="o">=</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">[</span>Recovery<span class="o">]</span> AEAD Type: aes-gcm&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">[</span>Root<span class="o">]</span> AEAD Type: aes-gcm&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[</span>Worker-Auth<span class="o">]</span> AEAD Type: aes-gcm&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp; Controller Public Cluster Addr: 127.0.0.1:9201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dev Database Container: confident_mcnulty&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Dev Database Url: postgres://postgres:password@localhost:49153/boundary?sslmode<span class="o">=</span>disable&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Generated Admin Login Name: admin&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Generated Admin Password: password&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Generated Auth Method Id: ampw_1234567890&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Generated Host Catalog Id: hcst_1234567890&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Generated Host Id: hst_1234567890&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Generated Host Set Id: hsst_1234567890&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Generated Org Scope Id: o_1234567890&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Generated Project Scope Id: p_1234567890&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generated Target Id: ttcp_1234567890&#10;  Generated Unprivileged Login Name: user&#10;&nbsp;&nbsp;&nbsp;&nbsp;Generated Unprivileged Password: password&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:9200&#34;</span>, cors_allowed_headers: <span class="s2">&#34;[]&#34;</span>, cors_allowed_origins: <span class="s2">&#34;[*]&#34;</span>, cors_enabled: <span class="s2">&#34;true&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, purpose: <span class="s2">&#34;api&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Listener 2: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:9201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, purpose: <span class="s2">&#34;cluster&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Listener 3: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:9202&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, purpose: <span class="s2">&#34;proxy&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version: Boundary v0.1.7&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version Sha: bc565922fbd3a18c9f6a22cd2e80a93df0d7cd45&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Worker Public Proxy Addr: 127.0.0.1:9202&#10;&#10;<span class="o">==</span>&gt; Boundary server started! Log data will stream in below:&#10;&#10;2021-03-05T15:08:05.051+0100 <span class="o">[</span>INFO<span class="o">]</span>  worker: connected to controller: <span class="nv">address</span><span class="o">=</span>127.0.0.1:9201&#10;2021-03-05T15:08:05.054+0100 <span class="o">[</span>INFO<span class="o">]</span>  controller: worker successfully authed: <span class="nv">name</span><span class="o">=</span>dev-worker&#10;2021-03-05T15:08:05.059+0100 <span class="o">[</span>WARN<span class="o">]</span>  worker: got no controller addresses from controller<span class="p">;</span> possibly prior to first status save, not persisting</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>start-boudary.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps -a&#10;CONTAINER ID   IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;   STATUS&nbsp;&nbsp;&nbsp;&nbsp;   PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NAMES&#10;e48475a774bb   postgres:11   <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">2</span> hours ago   Up <span class="m">2</span> hours   0.0.0.0:49153-&gt;5432/tcp   confident_mcnulty</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps.sh</span>
    </div>
</div>
<h4 id="conexión-ssh-a-sistema-remoto">Conexión SSH a sistema remoto</h4>
<p>Realizando la conexión directamente al <em>host</em> remoto con SSH se realiza con el siguiente comando, esta es la forma tradicional de hacerlo usando claves SSH.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ ssh pi@192.168.1.101&#10;Linux raspberrypi 5.10.11+ <span class="c1">#1399 Thu Jan 28 12:02:28 GMT 2021 armv6l</span>&#10;&#10;The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>&#10;the exact distribution terms <span class="k">for</span> each program are described in the&#10;individual files in /usr/share/doc/*/copyright.&#10;&#10;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent&#10;permitted by applicable law.&#10;Last login: Thu Feb <span class="m">25</span> 21:21:31 <span class="m">2021</span> from 192.168.1.7&#10;<span class="o">[</span>pi@raspberrypi ~<span class="o">]</span>$</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh.sh</span>
    </div>
</div>
<p>Utilizando Boundary como intermediario estos son los comandos. Primero hay que realizar la autenticación en Boundary y luego usar Boundary para que establezca la conexión SSH con el <em>host</em> destino, previamente hay es necesario haber configurado los recursos en Boundary.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ boundary authenticate password -auth-method-id<span class="o">=</span>ampw_1234567890 -login-name<span class="o">=</span>admin -password<span class="o">=</span>password&#10;Authentication information:&#10;  Account ID:&nbsp;&nbsp;&nbsp;&nbsp;  apw_cxGWZ0KOIc&#10;  Auth Method ID:  ampw_1234567890&#10;  Expiration Time: Fri, <span class="m">12</span> Mar <span class="m">2021</span> 15:21:11 CET&#10;  Token:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   at_1PE5BRB96M_s18pNSYQHzzoZmPD8eyuUyEpqiZw5VFBvAPN7bs2MUamBpdY316whSfZthEVw3KED7khERfPxRTKAm8TH14vNAWW7UrCamxSgYToYBQ3x7kxJHPfeZdtEwhfwx7NZ8TWaXVL2gdppJ4sZ&#10;  User ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u_1234567890&#10;$ <span class="nb">export</span> <span class="nv">BOUNDARY_TOKEN</span><span class="o">=</span><span class="s2">&#34;at_1PE5BRB96M_s18pNSYQHzzoZmPD8eyuUyEpqiZw5VFBvAPN7bs2MUamBpdY316whSfZthEVw3KED7khERfPxRTKAm8TH14vNAWW7UrCamxSgYToYBQ3x7kxJHPfeZdtEwhfwx7NZ8TWaXVL2gdppJ4sZ&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>boundary-authentication.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ boundary connect ssh -target-id ttcp_23T9SbQ7ce -username pi -- -i <span class="s2">&#34;~/.ssh/pico.dev@gmail.com&#34;</span>&#10;Linux raspberrypi 5.10.11+ <span class="c1">#1399 Thu Jan 28 12:02:28 GMT 2021 armv6l</span>&#10;&#10;The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>&#10;the exact distribution terms <span class="k">for</span> each program are described in the&#10;individual files in /usr/share/doc/*/copyright.&#10;&#10;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent&#10;permitted by applicable law.&#10;Last login: Fri Mar  <span class="m">5</span> 15:12:56 <span class="m">2021</span> from 192.168.1.4&#10;<span class="o">[</span>pi@raspberrypi ~<span class="o">]</span>$ </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-boundary-1.sh</span>
    </div>
</div>
<p>Utilizar Boundary como intermediario requiere configurar la herramienta para que tenga un inventario de <em>host</em> a los cuales es posible conectarse y usuarios con sus permisos. En el ejemplo utilizo una Raspberry Pi como <em>host</em> al que realizar la conexión en la dirección IP <em>192.168.1.101</em>. Para utilizar la linea de comandos de Boundary hay que autenticarse y establecer la variable de entorno <em>BOUNDARY_TOKEN</em>.</p>
<p>Las operaciones de estos comandos para crear los recursos están disponibles también para realizarlas desde su consola web de administración.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-host-catalog_hu3235fc6497f0f2f8d98a146c111fece0_87274_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Crear recursos de Boundary"><img src="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-host-catalog_hu3235fc6497f0f2f8d98a146c111fece0_87274_300x200_fit_box_3.png" width="300" height="199" alt="Crear recursos de Boundary" title="Crear recursos de Boundary"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-targets_hu69bed4a0b9e08a5db2c473e5d06f4cef_75202_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Crear recursos de Boundary"><img src="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-targets_hu69bed4a0b9e08a5db2c473e5d06f4cef_75202_300x200_fit_box_3.png" width="300" height="199" alt="Crear recursos de Boundary" title="Crear recursos de Boundary"  class="lozad "></a></p>
<figcaption>Crear recursos de Boundary</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span><span class="lnt">135&#10;</span><span class="lnt">136&#10;</span><span class="lnt">137&#10;</span><span class="lnt">138&#10;</span><span class="lnt">139&#10;</span><span class="lnt">140&#10;</span><span class="lnt">141&#10;</span><span class="lnt">142&#10;</span><span class="lnt">143&#10;</span><span class="lnt">144&#10;</span><span class="lnt">145&#10;</span><span class="lnt">146&#10;</span><span class="lnt">147&#10;</span><span class="lnt">148&#10;</span><span class="lnt">149&#10;</span><span class="lnt">150&#10;</span><span class="lnt">151&#10;</span><span class="lnt">152&#10;</span><span class="lnt">153&#10;</span><span class="lnt">154&#10;</span><span class="lnt">155&#10;</span><span class="lnt">156&#10;</span><span class="lnt">157&#10;</span><span class="lnt">158&#10;</span><span class="lnt">159&#10;</span><span class="lnt">160&#10;</span><span class="lnt">161&#10;</span><span class="lnt">162&#10;</span><span class="lnt">163&#10;</span><span class="lnt">164&#10;</span><span class="lnt">165&#10;</span><span class="lnt">166&#10;</span><span class="lnt">167&#10;</span><span class="lnt">168&#10;</span><span class="lnt">169&#10;</span><span class="lnt">170&#10;</span><span class="lnt">171&#10;</span><span class="lnt">172&#10;</span><span class="lnt">173&#10;</span><span class="lnt">174&#10;</span><span class="lnt">175&#10;</span><span class="lnt">176&#10;</span><span class="lnt">177&#10;</span><span class="lnt">178&#10;</span><span class="lnt">179&#10;</span><span class="lnt">180&#10;</span><span class="lnt">181&#10;</span><span class="lnt">182&#10;</span><span class="lnt">183&#10;</span><span class="lnt">184&#10;</span><span class="lnt">185&#10;</span><span class="lnt">186&#10;</span><span class="lnt">187&#10;</span><span class="lnt">188&#10;</span><span class="lnt">189&#10;</span><span class="lnt">190&#10;</span><span class="lnt">191&#10;</span><span class="lnt">192&#10;</span><span class="lnt">193&#10;</span><span class="lnt">194&#10;</span><span class="lnt">195&#10;</span><span class="lnt">196&#10;</span><span class="lnt">197&#10;</span><span class="lnt">198&#10;</span><span class="lnt">199&#10;</span><span class="lnt">200&#10;</span><span class="lnt">201&#10;</span><span class="lnt">202&#10;</span><span class="lnt">203&#10;</span><span class="lnt">204&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ boundary scopes create -name bitix-scope -description <span class="s2">&#34;Example Bitix scope&#34;</span>&#10;&#10;Scope information:&#10;  Created Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:24:33 CET&#10;  Description:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Example Bitix scope&#10;  ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  o_PuL7bdpoKw&#10;  Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bitix-scope&#10;  Updated Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:24:33 CET&#10;  Version:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span>&#10;&#10;  Scope <span class="o">(</span>parent<span class="o">)</span>:&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;global&#10;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  global&#10;&nbsp;&nbsp;&nbsp;&nbsp;Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  global&#10;&#10;  Authorized Actions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">read</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;update&#10;&nbsp;&nbsp;&nbsp;&nbsp;delete&#10;$ boundary scopes create -name bitix-project -description <span class="s2">&#34;Example Bitix project&#34;</span> -scope-id<span class="o">=</span>o_PuL7bdpoKw&#10;&#10;Scope information:&#10;  Created Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:26:54 CET&#10;  Description:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Example Bitix project&#10;  ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  p_MPpTkaalUm&#10;  Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bitix-project&#10;  Updated Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:26:54 CET&#10;  Version:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span>&#10;&#10;  Scope <span class="o">(</span>parent<span class="o">)</span>:&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;o_PuL7bdpoKw&#10;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bitix-scope&#10;&nbsp;&nbsp;&nbsp;&nbsp;Parent Scope ID:   global&#10;&nbsp;&nbsp;&nbsp;&nbsp;Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  org&#10;&#10;  Authorized Actions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">read</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;update&#10;&nbsp;&nbsp;&nbsp;&nbsp;delete&#10;$ boundary host-catalogs create static -name bitix-host-catalog -description <span class="s2">&#34;Bitix host-catalog&#34;</span> -scope-id<span class="o">=</span>p_MPpTkaalUm&#10;&#10;Host Catalog information:&#10;  Created Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:30:22 CET&#10;  Description:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bitix host-catalog&#10;  ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  hcst_8t06PaPJHK&#10;  Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bitix-host-catalog&#10;  Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static&#10;  Updated Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:30:22 CET&#10;  Version:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span>&#10;&#10;  Scope:&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p_MPpTkaalUm&#10;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bitix-project&#10;&nbsp;&nbsp;&nbsp;&nbsp;Parent Scope ID:   o_PuL7bdpoKw&#10;&nbsp;&nbsp;&nbsp;&nbsp;Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  project&#10;&#10;  Authorized Actions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">read</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;update&#10;&nbsp;&nbsp;&nbsp;&nbsp;delete&#10;&#10;  Authorized Actions on Host Catalog<span class="se">\&#39;</span>s Collections:&#10;&nbsp;&nbsp;&nbsp;&nbsp;host-setss:&#10;&nbsp;&nbsp;&nbsp;&nbsp;  create&#10;&nbsp;&nbsp;&nbsp;&nbsp;  list&#10;&nbsp;&nbsp;&nbsp;&nbsp;hostss:&#10;&nbsp;&nbsp;&nbsp;&nbsp;  create&#10;&nbsp;&nbsp;&nbsp;&nbsp;  list&#10;$ boundary host-sets create static -name<span class="o">=</span>raspberrypi -description<span class="o">=</span><span class="s2">&#34;Raspberry Pi host set&#34;</span> -host-catalog-id<span class="o">=</span>hcst_8t06PaPJHK &#10;&#10;Host Set information:&#10;  Created Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:58:01 CET&#10;  Description:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Raspberry Pi host <span class="nb">set</span>&#10;  Host Catalog ID:&nbsp;&nbsp;&nbsp;&nbsp; hcst_8t06PaPJHK&#10;  ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  hsst_e6BJkM7PqR&#10;  Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raspberrypi&#10;  Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static&#10;  Updated Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:58:01 CET&#10;  Version:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span>&#10;&#10;  Scope:&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p_MPpTkaalUm&#10;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bitix-project&#10;&nbsp;&nbsp;&nbsp;&nbsp;Parent Scope ID:   o_PuL7bdpoKw&#10;&nbsp;&nbsp;&nbsp;&nbsp;Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  project&#10;&#10;  Authorized Actions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">read</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;update&#10;&nbsp;&nbsp;&nbsp;&nbsp;delete&#10;&nbsp;&nbsp;&nbsp;&nbsp;add-hosts&#10;&nbsp;&nbsp;&nbsp;&nbsp;set-hosts&#10;&nbsp;&nbsp;&nbsp;&nbsp;remove-hosts&#10;$ boundary hosts create static -name raspberrypi -description <span class="s2">&#34;Static host for Raspberry Pi&#34;</span> -address <span class="s2">&#34;192.168.1.101&#34;</span> -host-catalog-id<span class="o">=</span>hcst_8t06PaPJHK&#10;&#10;Host information:&#10;  Created Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:38:18 CET&#10;  Description:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Static host <span class="k">for</span> Raspberry Pi&#10;  Host Catalog ID:&nbsp;&nbsp;&nbsp;&nbsp; hcst_8t06PaPJHK&#10;  ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  hst_2eN5yaTE41&#10;  Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raspberrypi&#10;  Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static&#10;  Updated Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:38:18 CET&#10;  Version:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span>&#10;&#10;  Scope:&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p_MPpTkaalUm&#10;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bitix-project&#10;&nbsp;&nbsp;&nbsp;&nbsp;Parent Scope ID:   o_PuL7bdpoKw&#10;&nbsp;&nbsp;&nbsp;&nbsp;Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  project&#10;&#10;  Authorized Actions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">read</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;update&#10;&nbsp;&nbsp;&nbsp;&nbsp;delete&#10;&#10;  Attributes:&#10;&nbsp;&nbsp;&nbsp;&nbsp;address:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   192.168.1.101&#10;$ boundary host-sets add-hosts --host<span class="o">=</span>hst_2eN5yaTE41 -id<span class="o">=</span>hsst_e6BJkM7PqR&#10;&#10;Host Set information:&#10;  Created Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:58:01 CET&#10;  Description:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Raspberry Pi host <span class="nb">set</span>&#10;  Host Catalog ID:&nbsp;&nbsp;&nbsp;&nbsp; hcst_8t06PaPJHK&#10;  ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  hsst_e6BJkM7PqR&#10;  Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raspberrypi&#10;  Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static&#10;  Updated Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fri, <span class="m">05</span> Mar <span class="m">2021</span> 16:01:36 CET&#10;  Version:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">2</span>&#10;&#10;  Scope:&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p_MPpTkaalUm&#10;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bitix-project&#10;&nbsp;&nbsp;&nbsp;&nbsp;Parent Scope ID:   o_PuL7bdpoKw&#10;&nbsp;&nbsp;&nbsp;&nbsp;Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  project&#10;&#10;  Authorized Actions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">read</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;update&#10;&nbsp;&nbsp;&nbsp;&nbsp;delete&#10;&nbsp;&nbsp;&nbsp;&nbsp;add-hosts&#10;&nbsp;&nbsp;&nbsp;&nbsp;set-hosts&#10;&nbsp;&nbsp;&nbsp;&nbsp;remove-hosts&#10;&#10;  Host IDs:&#10;&nbsp;&nbsp;&nbsp;&nbsp;hst_2eN5yaTE41&#10;$ boundary targets create tcp -name raspberrypi -description <span class="s2">&#34;Raspberry Pi target&#34;</span> -default-port<span class="o">=</span><span class="m">22</span> -scope-id<span class="o">=</span>p_MPpTkaalUm&#10;&#10;Target information:&#10;  Created Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:42:04 CET&#10;  Description:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Raspberry Pi target&#10;  ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ttcp_23T9SbQ7ce&#10;  Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   raspberrypi&#10;  Session Connection Limit:   <span class="m">1</span>&#10;  Session Max Seconds:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">28800</span>&#10;  Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   tcp&#10;  Updated Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:42:04 CET&#10;  Version:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&#10;&#10;  Scope:&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   p_MPpTkaalUm&#10;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bitix-project&#10;&nbsp;&nbsp;&nbsp;&nbsp;Parent Scope ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  o_PuL7bdpoKw&#10;&nbsp;&nbsp;&nbsp;&nbsp;Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; project&#10;&#10;  Authorized Actions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">read</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;update&#10;&nbsp;&nbsp;&nbsp;&nbsp;delete&#10;&nbsp;&nbsp;&nbsp;&nbsp;add-host-sets&#10;&nbsp;&nbsp;&nbsp;&nbsp;set-host-sets&#10;&nbsp;&nbsp;&nbsp;&nbsp;remove-host-sets&#10;&nbsp;&nbsp;&nbsp;&nbsp;authorize-session&#10;$ boundary targets add-host-sets -host-set<span class="o">=</span>hsst_e6BJkM7PqR -id<span class="o">=</span>ttcp_23T9SbQ7ce&#10;&#10;Target information:&#10;  Created Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:42:04 CET&#10;  Description:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Raspberry Pi target&#10;  ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ttcp_23T9SbQ7ce&#10;  Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   raspberrypi&#10;  Session Connection Limit:   <span class="m">1</span>&#10;  Session Max Seconds:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">28800</span>&#10;  Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   tcp&#10;  Updated Time:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Fri, <span class="m">05</span> Mar <span class="m">2021</span> 15:59:03 CET&#10;  Version:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">2</span>&#10;&#10;  Scope:&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   p_MPpTkaalUm&#10;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bitix-project&#10;&nbsp;&nbsp;&nbsp;&nbsp;Parent Scope ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  o_PuL7bdpoKw&#10;&nbsp;&nbsp;&nbsp;&nbsp;Type:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; project&#10;&#10;  Authorized Actions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">read</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;update&#10;&nbsp;&nbsp;&nbsp;&nbsp;delete&#10;&nbsp;&nbsp;&nbsp;&nbsp;add-host-sets&#10;&nbsp;&nbsp;&nbsp;&nbsp;set-host-sets&#10;&nbsp;&nbsp;&nbsp;&nbsp;remove-host-sets&#10;&nbsp;&nbsp;&nbsp;&nbsp;authorize-session&#10;&#10;  Host Sets:&#10;&nbsp;&nbsp;&nbsp;&nbsp;Host Catalog ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  hcst_8t06PaPJHK&#10;&nbsp;&nbsp;&nbsp;&nbsp;ID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   hsst_e6BJkM7PqR</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>boundary-configuration.sh</span>
    </div>
</div>
<p>Una de las funcionalidades que proporciona Boundary es trazabilidad en el <em>log</em> se muestran los inicio de las conexiones y su finalización, permite ver las conexiones abiertas y forzar el cierre de una conexión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">2021-03-05T16:31:06.880+0100 [INFO]  controller.worker-handler: authorized connection: session_id=s_S91yFIr4qi connection_id=sc_tg5qgexhhe connections_left=0&#10;2021-03-05T16:31:06.888+0100 [INFO]  controller.worker-handler: connection established: session_id=s_S91yFIr4qi connection_id=sc_tg5qgexhhe client_tcp_address=127.0.0.1 client_tcp_port=40058 endpoint_tcp_address=192.168.1.101 endpoint_tcp_port=22&#10;2021-03-05T16:31:09.001+0100 [INFO]  controller.worker-handler: connection closed: connection_id=sc_tg5qgexhhe&#10;2021-03-05T16:33:29.299+0100 [INFO]  controller.worker-handler: session activated: session_id=s_7yPhGF7hHz target_id=ttcp_23T9SbQ7ce user_id=u_1234567890 host_set_id=hsst_e6BJkM7PqR host_id=hst_2eN5yaTE41&#10;2021-03-05T16:33:29.305+0100 [INFO]  controller.worker-handler: authorized connection: session_id=s_7yPhGF7hHz connection_id=sc_u5dxQjveKv connections_left=0&#10;2021-03-05T16:33:29.314+0100 [INFO]  controller.worker-handler: connection established: session_id=s_7yPhGF7hHz connection_id=sc_u5dxQjveKv client_tcp_address=127.0.0.1 client_tcp_port=40078 endpoint_tcp_address=192.168.1.101 endpoint_tcp_port=22&#10;2021-03-05T16:33:32.302+0100 [INFO]  controller.worker-handler: connection closed: connection_id=sc_u5dxQjveKv&#10;2021-03-05T16:33:34.745+0100 [INFO]  controller.worker-handler: session activated: session_id=s_xmwSyOuFgW target_id=ttcp_23T9SbQ7ce user_id=u_1234567890 host_set_id=hsst_e6BJkM7PqR host_id=hst_2eN5yaTE41&#10;2021-03-05T16:33:34.757+0100 [INFO]  controller.worker-handler: authorized connection: session_id=s_xmwSyOuFgW connection_id=sc_XkYBKBV1J0 connections_left=0&#10;2021-03-05T16:33:34.772+0100 [INFO]  controller.worker-handler: connection established: session_id=s_xmwSyOuFgW connection_id=sc_XkYBKBV1J0 client_tcp_address=127.0.0.1 client_tcp_port=40088 endpoint_tcp_address=192.168.1.101 endpoint_tcp_port=22</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>boundary.log</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-sessions_hu47a87baa44953f42b9aa3bbaa41c3074_139386_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Conexiones realizadas con Boundary"><img src="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/images/boundary-sessions_hu47a87baa44953f42b9aa3bbaa41c3074_139386_300x200_fit_box_3.png" width="300" height="199" alt="Conexiones realizadas con Boundary" title="Conexiones realizadas con Boundary"  class="lozad "></a></p>
<figcaption>Conexiones realizadas con Boundary</figcaption>
</figure>
</div>
<h3 id="autenticación-con-ssh">Autenticación con SSH</h3>
<p>La autenticaión de SSH usando Boudary no cambia, se solicita la contraseña del usuario con el que se realiza la conexión, la clave pública en caso de que el servidor se haya configurado con clave pública y privada o incluso un segundo factor de autenticación.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/autenticacion-mediante-clave-publica-y-privada-con-ssh/">Autenticación mediante clave pública y privada con SSH</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/">Autenticación con segundo factor de autenticación en SSH</a></li>
</ul>
<h4 id="segundo-factor-de-autenticación-con-vault">Segundo factor de autenticación con Vault</h4>
<p>Vault permite generar contraseñas de un solo uso y configurando SSH validar los OTP proporcionados en la conexión. La ventaja de usar OTP es que no es necesario distribuir las claves públicas en cada una de las máquinas en las que se quiera realizar la conexión SSH. Hay que cambiar los archivos de configuración <em>/etc/pam.d/sshd</em>, <em>/etc/ssh/sshd_config</em>, <em>/etc/vault-ssh-helper.d/config.hcl</em> y reiniciar el servicio de SSH, estos cambios permiten al servidor SSH validar los <em>tokens</em> proporcionados conectándose con Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ssh pi@192.168.1.101&#10;$ wget https://releases.hashicorp.com/vault-ssh-helper/0.2.1/vault-ssh-helper_0.2.1_linux_amd64.zip&#10;$ wget https://releases.hashicorp.com/vault-ssh-helper/0.2.1/vault-ssh-helper_0.2.1_linux_arm.zip&#10;$ sudo unzip -q vault-ssh-helper_0.2.1_linux_arm.zip -d /usr/local/bin&#10;$ sudo chmod <span class="m">0755</span> /usr/local/bin/vault-ssh-helper&#10;$ sudo chown root:root /usr/local/bin/vault-ssh-helper&#10;$ sudo mkdir /etc/vault-ssh-helper.d/&#10;&#10;$ sudo tee /etc/vault-ssh-helper.d/config.hcl <span class="s">&lt;&lt;EOF&#10;</span><span class="s">vault_addr = &#34;http://192.168.1.4:8200&#34;&#10;</span><span class="s">tls_skip_verify = false&#10;</span><span class="s">ssh_mount_point = &#34;ssh&#34;&#10;</span><span class="s">allowed_roles = &#34;*&#34;&#10;</span><span class="s">EOF</span>&#10;&#10;$ vault-ssh-helper -verify-only -dev -config /etc/vault-ssh-helper.d/config.hcl&#10;<span class="o">==</span>&gt; WARNING: Dev mode is enabled!&#10;<span class="o">[</span>INFO<span class="o">]</span> using SSH mount point: ssh&#10;<span class="o">[</span>INFO<span class="o">]</span> using namespace: us&#10;<span class="o">[</span>INFO<span class="o">]</span> vault-ssh-helper verification successful!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install-ssh-helper.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo vim /etc/pam.d/sshd&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">#@include common-auth&#10;auth requisite pam_exec.so quiet expose_authtok log=/var/log/vault-ssh.log /usr/local/bin/vault-ssh-helper -dev -config=/etc/vault-ssh-helper.d/config.hcl&#10;auth optional pam_unix.so not_set_pass use_first_pass nodelay</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo vim /etc/ssh/sshd_config&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd_config.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">ChallengeResponseAuthentication yes&#10;UsePAM yes&#10;PasswordAuthentication no</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd_config</span>
    </div>
</div>
<p>Para validar el OTP el servidor SSH a través del módulo de autenticación PAM le pide a Vault que lo valide, para ello necesita conectividad de red, si es necesario activando la regla del <em>firewall</em> para permitir el tráfico de red para el puerto <em>8200</em> que utiliza Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo ufw allow 8200/tcp&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-configuration-firewall.sh</span>
    </div>
</div>
<p>También hay que configurar Vault con las políticas y permisos para permitir a un usuario autenticado generar los OTP de autenticación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;$ vault secrets <span class="nb">enable</span> ssh&#10;$ vault write ssh/roles/otp_ssh <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">key_type</span><span class="o">=</span>otp <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">default_user</span><span class="o">=</span>pi <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">cidr_list</span><span class="o">=</span>192.168.1.0/24</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-configuration.sh</span>
    </div>
</div>
<p>El comando para generar el OTP e iniciar la conexión es el siguiente. Este comando realiza dos acciones, generar el OTP e iniciar la conexión SSH, el OTP hay que copiarlo y pegarlo de forma manual en la solicitud de contraseña que corresponde con el OTP generado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ vault ssh -role otp_ssh -mode otp -strict-host-key-checking<span class="o">=</span>no pi@192.168.1.101&#10;Vault could not locate <span class="s2">&#34;sshpass&#34;</span>. The OTP code <span class="k">for</span> the session is displayed&#10;below. Enter this code in the SSH password prompt. If you install sshpass,&#10;Vault can automatically perform this step <span class="k">for</span> you.&#10;OTP <span class="k">for</span> the session is: 31233d29-e822-6891-6a34-9a101fb2e344&#10;Password:&#10;Linux raspberrypi 5.10.11+ <span class="c1">#1399 Thu Jan 28 12:02:28 GMT 2021 armv6l</span>&#10;&#10;The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>&#10;the exact distribution terms <span class="k">for</span> each program are described in the&#10;individual files in /usr/share/doc/*/copyright.&#10;&#10;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent&#10;permitted by applicable law.&#10;Last login: Fri Mar  <span class="m">5</span> 15:12:56 <span class="m">2021</span> from 192.168.1.4&#10;<span class="o">[</span>pi@raspberrypi ~<span class="o">]</span>$ </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-vault-otp-1.sh</span>
    </div>
</div>
<p>Generar el OTP y realizar la conexión se puede realizar en dos pasos separados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ vault write ssh/creds/otp_ssh <span class="nv">username</span><span class="o">=</span>pi <span class="nv">ip</span><span class="o">=</span>192.168.1.101&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;lease_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   ssh/creds/otp_ssh/7vB38cBFRWl883ePHusCBAMI&#10;lease_duration&nbsp;&nbsp;&nbsp;&nbsp; 768h&#10;lease_renewable&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;ip&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 192.168.1.101&#10;key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;93e489c2-c30c-6e4e-f22c-96e719d41fd3&#10;key_type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   otp&#10;port&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">22</span>&#10;username&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   pi&#10;<span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ ssh pi@192.168.1.101&#10;Password:&#10;Linux raspberrypi 5.10.11+ <span class="c1">#1399 Thu Jan 28 12:02:28 GMT 2021 armv6l</span>&#10;&#10;The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>&#10;the exact distribution terms <span class="k">for</span> each program are described in the&#10;individual files in /usr/share/doc/*/copyright.&#10;&#10;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent&#10;permitted by applicable law.&#10;Last login: Fri Mar  <span class="m">5</span> 15:12:56 <span class="m">2021</span> from 192.168.1.4&#10;<span class="o">[</span>pi@raspberrypi ~<span class="o">]</span>$ </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-vault-otp-2.sh</span>
    </div>
</div>
<p>Usando Vault la conexión se realiza entre la máquina local y la máquina destino, usando Boundary como intermediario el comando es el mismo que al usar una clave SSH pero al iniciar la conexión se solicita la contraseña OTP.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ boundary connect ssh -target-id ttcp_23T9SbQ7ce -username pi&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-boundary-2.sh</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://learn.hashicorp.com/tutorials/boundary/getting-started-install?in=boundary/getting-started">Boundary Quick Start Guide</a></li>
<li><a href="https://learn.hashicorp.com/tutorials/vault/ssh-otp">SSH Secrets Engine: One-Time SSH Password</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/</id>
        <title>Cifrado y descifrado como servicio con Vault</title>
        <updated>2021-02-26T16:00:00+01:00</updated>
        <published>2021-02-26T16:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Implementar la seguridad en una aplicación no es sencillo, cuando un sistema se compone de múltiples aplicaciones los posibles fallos de seguridad se multiplican. Vault es una herramienta que permite centralizar y delegar varios aspectos de las aplicaciones relativos a la seguridad, uno de ellos es el cifrado y descifrado de los datos para su almacenamiento y recuperación de una base de datos. Entre sus funcionalidades Vault ofrece como servicio el cifrado y descifrado de datos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>La seguridad en una aplicación involucra a los datos, tanto en la transmisión entre aplicaciones como en el almacenamiento a ambos se les conoce por la seguridad de los datos en tránsito o <em>transit</em> y por la seguridad en persistencia o <em>rest</em>. La seguridad de los datos en tránsito se consigue utilizando protocolos de comunicación seguros como TLS y la seguridad de los datos en persistencia se consigue cifrando los datos ya sea a nivel de sistema de archivos, base de datos o datos específicos aplicando un algoritmo de cifrado.</p>
<p>No es fácil implementar la seguridad, por un lado hay que utilizar algoritmos de cifrado considerados seguros, en un sistema grande en el que hay múltiples aplicaciones que utilizan potencialmente diferentes lenguajes de programación y librerías han de tener soporte para esos algoritmos de cifrado. Por otro lado, al tener múltiples aplicaciones requiere que cada una de ellas mantenga seguras las claves privadas en las que se fundamenta la seguridad de cifrado y descifrado, con múltiples aplicaciones los posibles puntos vulnerables son varios.</p>
<p>La seguridad de los datos es muy importante, ciertos datos personales sensibles y que permiten identificar a personas están protegidos por leyes. El no cumplimiento de las leyes implica potencialmente a una empresa recibir importantes multas o descrédito que afecte a la viabilidad del negocio o suponga una reducción de facturación. Algunos datos candidatos a ser cifrados o transformados al guardarse en base de datos son, datos personales e identificativos como nombre y apellidos, DNI, dirección, tarjetas de crédito, bancarios u otros datos que estén regulados por las leyes de protección de datos.</p>
<p>Los datos protegidos incluso no es deseable que sean accesibles por cualesquiera trabajadores de la propia empresa, solo debería tener acceso a ellos aquellos trabajadores que los necesitan para desempeñar su trabajo y ofrecer el servicio que proporciona la empresa. Para el desarrollo de una aplicación los programadores necesitan una base de datos con el mismo esquema de la base de datos de producción y un conjunto de datos, una opción es <a href="https://picodotdev.github.io/blog-bitix/2020/05/copia-de-seguridad-restauracion-y-carga-de-datos-en-postgresql-y-mysql/">obtener una copia de la base de datos</a> de producción, sin embargo, obtener una copia de la base de datos de producción otorga acceso a los programadores acceso a los datos, al hacer la copia es posible aplicar un proceso que ofusque los datos sin embargo esto sigue sin solventar el problema de mantener seguros los datos en la propia base de datos de producción o sus réplicas. Si algunos datos se guardan cifrados aunque se tenga acceso a la base de datos los datos cifrados siguen protegidos.</p>
<p>Una de las funcionalidades que ofrece <a href="https://www.vaultproject.io/">Vault</a> de <a href="https://www.hashicorp.com/">HashiCorp</a> es ofrecer el cifrado y descifrado como servicio. Este artículo está basado en la <a href="https://learn.hashicorp.com/tutorials/vault/eaas-spring-demo?in=vault/encryption-as-a-service">guía de Vault sobre la funcionalidad de cifrado y descifrado</a>.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="vault-como-servicio-de-cifrado-y-descifrado">Vault como servicio de cifrado y descifrado</h3>
<p>Vault es una herramienta dedicada a la seguridad de la empresa HashiCorp. Tiene diferentes funcionalidades como servir de almacenamiento de secretos en su base de datos de claves y valores, <a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">generar credenciales de acceso bajo demanda a recursos como bases de datos</a> entre otras como cifrado y descifrado como servicio. En todas estás funcionalidades diversos aspectos de la seguridad se centralizan en un único componente del sistema.</p>
<p>Las claves de cifrado únicamente se almacenan en Vault, por otro lado las aplicaciones no han de mantener credenciales para el acceso a una base de datos sino que es Vault el que crea las credenciales válidas únicamente por un periodo de tiempo corto con posibilidad de renovación. Esto aumenta la seguridad ya que una aplicación no ha de mantener unas credenciales para la base de datos válidas por un tiempo indefinido, al mismo tiempo las claves de cifrado están centralizadas en vez estar incluidas en cada aplicación. En caso necesario Vault es capaz de revocar las credenciales de cualquier aplicación.</p>
<p>Vault ofrece dos servicios para proteger los datos, el servicio de cifrado y descifrado está disponible en Vault y el de transformación requiere la versión <em>Enterprise</em>.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/HVK-a8SKqvc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/DOw0Y6ig1i4" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="servicio-de-cifrado-y-descifrado">Servicio de cifrado y descifrado</h4>
<p>El servicio de cifrado y descifrado de Vault consisten simplemente en aplicar un algoritmo de cifrado a un dato en texto plano y devolverlo cifrado y realizar la operación contraria aplicar el algoritmo de descifrado a un dato cifrado y devolverlo en texto plano. Además de mantener las claves de cifrado con la posibilidad rotarlas, es decir, crear nuevas claves.</p>
<p>El proceso de cifrado de Vault transforma el dato original en un valor que no tiene ningún sentido sin aplicar el proceso de descifrado. El formato del dato original se pierde, esto es, si el dato original es un número de teléfono con el formato <em>(+34) 666554433</em> el dato cifrado es una secuencia de caracteres de cierta longitud con otro formato. Esta pérdida de formato es un inconveniente al guardar el dato en la base de datos para solventarlo Vault ofrece el servicio de transformación.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/images/vault-encryption_hua0680acd84a53d760197920946a57315_65049_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Uso del servicio de cifrado y descifrado de Vault"><img src="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/images/vault-encryption_hua0680acd84a53d760197920946a57315_65049_650x450_fit_box_3.png" width="650" height="242" alt="Uso del servicio de cifrado y descifrado de Vault" title="Uso del servicio de cifrado y descifrado de Vault"  class="lozad "></a></p>
<figcaption>Uso del servicio de cifrado y descifrado de Vault</figcaption>
</figure>
</div>
<h4 id="servicio-de-transformación">Servicio de transformación</h4>
<p>En vez de cifrado Vault también ofrece un servicio de transformación que permite obtener un dato ofuscado pero que conserva el mismo formato y longitud que el original. Que el dato tenga el formato original es importante en una base de datos relacional ya que la longitud y formato de la columna para guardarlo será el mismo que el original, en el caso de un dato cifrado el campo se ha ade adaptar al resultado cifrado lo que no es deseable.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">$ vault secrets enable transform&#10;...&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-transform.sh</span>
    </div>
</div>
<p>En este ejemplo se codifica y descodifica un número de tarjeta de crédito conservando el formato.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">$ vault write transform/encode/payments value=1111-2222-3333-4444&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;encoded_value&nbsp;&nbsp;&nbsp;&nbsp;9300-3376-4943-8903</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-transform-encode.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">$ vault write transform/decode/payments value=9300-3376-4943-8903&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;decoded_value&nbsp;&nbsp;&nbsp;&nbsp;1111-2222-3333-4444</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-transform-decode.sh</span>
    </div>
</div>
<h4 id="proveedor-de-claves">Proveedor de claves</h4>
<p>En un caso de uso en el que es necesario cifrar volúmenes de datos grandes, como <em>blobs</em> de 1 GB, requiere codificar en <em>base64</em> y enviar a Vault por red y obtener la respuesta de tal volumen de datos, esto no es deseable para obtener el mejor rendimiento. En vez de enviar los datos se pueden cifrar los datos localmente con la clave obtenida de Vault. La idea es permitir a la aplicación cifrar y descifrar los datos sin necesidad de llamadas y retornos a Vault con grandes volúmenes de datos.</p>
<p>La respuesta para obtener la clave de cifrado contiene la clave de datos tanto en texto plano como en forma cifrada. Con la clave de datos en texto plano se pueden cifrar los datos y almacenar la clave de datos cifrada junto a los datos. Al necesitar descifrar los datos se solicita a Vault descifrar la clave de datos cifrada para obtener la clave de datos en texto plano permitiendo de esta forma descifrar los datos localmente. Esto es, una vez que el <em>blob</em> está cifrado no es necesario almacenar la clave de datos, solo se necesita almacenar la versión cifrada de la misma.</p>
<p>Esta idea permite cifrar y descifrar grandes volúmenes de datos a la aplicación sin realizar comunicaciones de red costosas con Vault. En este caso Vault no proporciona el servicio de cifrado y descifrado sino que lo hace la aplicación, sin embargo, Vault administra la gestión de las claves usadas por la aplicación que no ha de mantener ninguna clave privada.</p>
<h3 id="ejemplo-de-cifrado-y-descifrado-de-datos">Ejemplo de cifrado y descifrado de datos</h3>
<p>Vault dispone tres métodos de acceso a sus funcionalidades entre ellas el servicio de cifrado y descifrado. Los tres métodos son mediante línea de comandos, mediante API REST o mediante la consola web de administración. En este ejemplo solo se muestra la versión de línea de comandos, la opción mediante API REST es posible probarla mediante una herramienta de linea de comandos como <em>curl</em>.</p>
<p>El primer paso es iniciar Vault, en este caso por simplicidad en modo desarrollo y habilitar el <em>transit engine</em> que proporciona el servicio de cifrado y descifrado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev&#10;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-start.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault secrets <span class="nb">enable</span> transit&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-enable-transit.sh</span>
    </div>
</div>
<p>El siguiente paso es obtener una clave, Vault la devuelve en texto plano o <em>plaintext</em> y cifrada o <em>ciphertext</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault write -f transit/keys/app&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-create-key.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault write -f transit/datakey/plaintext/app&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   │&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   │&#10;ciphertext&nbsp;&nbsp;&nbsp;&nbsp; vault:v1:l5Y2HZn+LLq6O5ttSlquXo+x2OMzNH/7ReLpgi47DOWeIGUXmdxHBkk0OtqJe4hqmpyz5QCSx99kwyZu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   │&#10;key_version&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   │&#10;plaintext&nbsp;&nbsp;&nbsp;&nbsp;  k0n6o+vBAy0g2IFGqoRi5G4t1pMypljY9G4+wWewrEg<span class="o">=</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-key.sh</span>
    </div>
</div>
<p>Una vez creada la clave, se solicita a Vault cifrar y descifrar datos. Los datos han de proporcionase en codificados en <em>base64</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault write transit/encrypt/app <span class="nv">plaintext</span><span class="o">=</span><span class="k">$(</span>base64 <span class="o">&lt;&lt;&lt;</span> <span class="s2">&#34;4111 1111 1111 1111&#34;</span><span class="k">)</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;ciphertext&nbsp;&nbsp;&nbsp;&nbsp; vault:v1:kYVkH1OxTEai1zjO+uQ9FKiHanlbaQ2bF5b5GYwUiEef5d31ProquZ5grVJfDWrc&#10;key_version&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&#10;&#10;$ vault write transit/decrypt/app <span class="nv">ciphertext</span><span class="o">=</span><span class="s2">&#34;vault:v1:kYVkH1OxTEai1zjO+uQ9FKiHanlbaQ2bF5b5GYwUiEef5d31ProquZ5grVJfDWrc&#34;</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;plaintext&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">NDExMSAxMTExIDExMTEgMTExMQo</span><span class="o">=</span>&#10;&#10;$ base64 --decode <span class="o">&lt;&lt;&lt;</span> <span class="s2">&#34;NDExMSAxMTExIDExMTEgMTExMQo=&#34;</span>&#10;<span class="m">4111</span> <span class="m">1111</span> <span class="m">1111</span> <span class="m">1111</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-encrypt-decrypt.sh</span>
    </div>
</div>
<p>Algunas aplicaciones para aumentar la seguridad y evitar usar una única clave que en el tiempo quede comprometida Vault proporciona la opción de generar una nueva versión de la misma, la clave antigua sigue siendo válida pero los datos serán cifrados con la última versión. Una vez todos los datos hayan sido cifrados con una versión más reciente las versiones antiguas se pueden deshabilitar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault write -f transit/keys/app/rotate&#10;$ vault write transit/encrypt/app <span class="nv">plaintext</span><span class="o">=</span><span class="k">$(</span>base64 <span class="o">&lt;&lt;&lt;</span> <span class="s2">&#34;4111 1111 1111 1111&#34;</span><span class="k">)</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;ciphertext&nbsp;&nbsp;&nbsp;&nbsp; vault:v2:aVuvvlcyPX5J4sPYXFWHL53sIDx3HP9oBBTNjhY6NyshliMZzw8g8Ir9+BRpI8FJ&#10;key_version&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">2</span>&#10;&#10;$ vault write transit/encrypt/app <span class="nv">plaintext</span><span class="o">=</span><span class="k">$(</span>base64 <span class="o">&lt;&lt;&lt;</span> <span class="s2">&#34;4111 1111 1111 1111&#34;</span><span class="k">)</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;ciphertext&nbsp;&nbsp;&nbsp;&nbsp; vault:v2:8coGwMB2WZsWb8Ogm4Fi8zGgzJq45V+VgYXYaMLHoVSCv9IJXs7Js6Jp5bqDGTUV&#10;key_version&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">2</span>&#10;&#10;$ vault write transit/decrypt/app <span class="nv">ciphertext</span><span class="o">=</span><span class="s2">&#34;vault:v2:8coGwMB2WZsWb8Ogm4Fi8zGgzJq45V+VgYXYaMLHoVSCv9IJXs7Js6Jp5bqDGTUV&#34;</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;plaintext&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">NDExMSAxMTExIDExMTEgMTExMQo</span><span class="o">=</span>&#10;&#10;$ base64 --decode <span class="o">&lt;&lt;&lt;</span> <span class="s2">&#34;NDExMSAxMTExIDExMTEgMTExMQo=&#34;</span>&#10;<span class="m">4111</span> <span class="m">1111</span> <span class="m">1111</span> <span class="m">1111</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-rotate-key.sh</span>
    </div>
</div>
<h3 id="ejemplo-aplicación-con-spring">Ejemplo aplicación con Spring</h3>
<p><a href="https://spring.io/">Spring</a> proporciona clases de soporte para el acceso al servicio de Vault. Tanto para la configuración de acceso a Vault como para usar sus servicios mediante una API de clases Java sin tener que recurrir a la API REST de Vault directamente. La clase <a href="https://docs.spring.io/spring-vault/docs/current/api/org/springframework/vault/core/VaultOperations.html">VaultOperations</a> contiene las referencias de clases para el acceso a las API de Vault, para el caso de el servicio de cifrado y descifrado con la clase <a href="https://docs.spring.io/spring-vault/docs/current/api/org/springframework/vault/core/VaultTransitOperations.html">VaultTransitOperations</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/images/vault-encryption-java_hudea10222b8f8a519c16c06b964997b0f_48852_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Uso del servicio de cifrado y descifrado de Vault en una aplicación Java"><img src="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/images/vault-encryption-java_hudea10222b8f8a519c16c06b964997b0f_48852_650x450_fit_box_3.png" width="650" height="251" alt="Uso del servicio de cifrado y descifrado de Vault en una aplicación Java" title="Uso del servicio de cifrado y descifrado de Vault en una aplicación Java"  class="lozad "></a></p>
<figcaption>Uso del servicio de cifrado y descifrado de Vault en una aplicación Java</figcaption>
</figure>
</div>
<p>Para usar el servicio de cifrado y descifrado en una aplicación de Spring, Vault permite la autenticación mediante el mecanismo <em>AppRole</em>. <em>AppRole</em> es un método de autenticación destinadas a las aplicaciones, básicamente proporciona unas credenciales como un usuario y contraseña. El <em>policy</em> se asocia con las credenciales de la aplicación para permitirle el acceso a la clave de cifrado y descifrado <em>app</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault auth <span class="nb">enable</span> approle&#10;&#10;$ vault policy write app -<span class="s">&lt;&lt;EOF&#10;</span><span class="s">path &#34;transit/encrypt/app&#34; {&#10;</span><span class="s">   capabilities = [ &#34;update&#34; ]&#10;</span><span class="s">}&#10;</span><span class="s">path &#34;transit/decrypt/app&#34; {&#10;</span><span class="s">   capabilities = [ &#34;update&#34; ]&#10;</span><span class="s">}&#10;</span><span class="s">EOF</span>&#10;&#10;$ vault write auth/approle/role/app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">secret_id_ttl</span><span class="o">=</span>10m <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">token_num_uses</span><span class="o">=</span><span class="m">10</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">token_ttl</span><span class="o">=</span>20m <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">token_max_ttl</span><span class="o">=</span>30m <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">secret_id_num_uses</span><span class="o">=</span><span class="m">40</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">policies</span><span class="o">=</span>app</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>app-vault-approle.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault <span class="nb">read</span> auth/approle/role/app/role-id&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;role_id&nbsp;&nbsp;&nbsp;&nbsp;c0b643d1-9507-dae1-ffbd-6e405e082f1d&#10;&#10;$ vault write -f auth/approle/role/app/secret-id&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   -----&#10;secret_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 9b1b6fe6-0ee5-4182-c08d-245d20a59351&#10;secret_id_accessor&nbsp;&nbsp;&nbsp;&nbsp;b9f5af8e-29ee-694c-2751-6f65d5361caf</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>app-vault-role.sh</span>
    </div>
</div>
<p>Credo el rol <em>app</em> para la aplicación las credenciales formadas por el <em>role_id</em> y <em>secret_id</em> ponen en el archivo de configuración de la aplicación de Spring.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">spring.cloud.vault</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">uri</span><span class="p">:</span><span class="w"> </span><span class="l">http://127.0.0.1:8200</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">APPROLE</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">app-role</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">role-id</span><span class="p">:</span><span class="w"> </span><span class="l">c0b643d1-9507-dae1-ffbd-6e405e082f1d</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">secret-id</span><span class="p">:</span><span class="w"> </span><span class="l">9b1b6fe6-0ee5-4182-c08d-245d20a59351</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">role</span><span class="p">:</span><span class="w"> </span><span class="l">app</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">app-role-path</span><span class="p">:</span><span class="w"> </span><span class="l">approle</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application.yml</span>
    </div>
</div>
<p>El cifrado y descifrado en la aplicación consiste simplemente en hacer uso de la API que proporciona Spring para el acceso a Vault, esta API hace transparente las llamadas REST subyacentes que se hacen a Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloudvaultcipher</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.CommandLineRunner</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.vault.core.VaultOperations</span><span class="o">;</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">VaultOperations</span> <span class="n">vault</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">plaintext</span> <span class="o">=</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">encrypted</span> <span class="o">=</span> <span class="n">vault</span><span class="o">.</span><span class="na">opsForTransit</span><span class="o">().</span><span class="na">encrypt</span><span class="o">(</span><span class="s">&#34;app&#34;</span><span class="o">,</span> <span class="n">plaintext</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">decrypted</span> <span class="o">=</span> <span class="n">vault</span><span class="o">.</span><span class="na">opsForTransit</span><span class="o">().</span><span class="na">decrypt</span><span class="o">(</span><span class="s">&#34;app&#34;</span><span class="o">,</span> <span class="n">encrypted</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Plaintext: &#34;</span> <span class="o">+</span> <span class="n">plaintext</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Encrypted: &#34;</span> <span class="o">+</span> <span class="n">encrypted</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Decrypted: &#34;</span> <span class="o">+</span> <span class="n">decrypted</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>El resultado de cifrar y descifrar el dato se muestra como salida en la consola.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Plaintext: Hello World!&#10;Encrypted: vault:v2:arPaLH7cRy221vCTZvNd8csswtmzOc42caVjBQ+T32SW7+x1tLEH0Q==&#10;Decrypted: Hello World!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En el archivo de dependencias de la aplicación se ha de incluir la que proporciona Spring para añadir el soporte a Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloudvaultcipher.Main&#39;</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">configurations</span> <span class="o">{</span>&#10;	<span class="n">all</span> <span class="o">{</span>&#10;		<span class="n">exclude</span> <span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.4.3&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:2020.0.1&#39;</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-vault-config&#39;</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.12.1&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.1&#39;</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudVaultEncryption">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.vaultproject.io/use-cases/data-encryption">Encrypt Application Data in Low Trust Networks</a></li>
<li><a href="https://learn.hashicorp.com/tutorials/vault/eaas-transit?in=vault/encryption-as-a-service">Encryption as a Service: Transit Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/transit">Transit Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/transform">Transform Secrets Engine</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>