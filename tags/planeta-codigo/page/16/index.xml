<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2021-12-23T09:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/</id>
        <title>Formatear con color sentencias SQL o código fuente en la terminal con Java y Jansi</title>
        <updated>2018-11-03T23:30:00+01:00</updated>
        <published>2018-11-03T23:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Usando la librería <a href="https://github.com/fusesource/jansi">Jansi</a> es posible <a href="https://elblogdepicodev.blogspot.com.es/2012/12/color-en-la-terminal-con-jansi.html">hacer que un programa Java emita texto en color en la terminal</a>. Emitir color en la terminal sirve para identificar más fácilmente y visualmente ciertas partes del texto, por ejemplo, emitiendo en rojo mensajes importantes o con color amarillo de fondo algún dato. Una utilidad práctica es formatear con color una sentencia SQL que se va a ejecutar en una aplicación a modo de traza o con colores el código fuente de un archivo Java u otro tipo de archivo de texto.</p>
<p>Una forma sencilla para formatear con colores un archivo de código fuente Java o una sentencia SQL sin llegar a hacer un procesador de sintaxis de ese lenguaje o formato es <a href="https://picodotdev.github.io/blog-bitix/2018/02/referencias-a-grupos-de-captura-en-expresiones-regulares-y-reemplazos/">utilizar expresiones regulares y grupos de captura</a>. En ambos casos hay partes que son palabras claves, números o cadenas en definitiva elementos que se deseen destacar. Con las clases <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Pattern.html">Pattern</a> y <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Matcher.html">Matcher</a> de Java se van obteniendo los diferentes grupos de captura de forma secuencial. Según sea el grupo capturado del elemento actual se utiliza Jansi para formatearlo con el color que le corresponde.</p>
<p>Una formateador simple para cada uno de estos casos serían los siguientes donde se utiliza una expresión regular con diferentes grupos de captura con nombre. El primer caso es para formatear con color una sentencia SQL sencilla en el método <em>printSql()</em> y el segundo el programa <em>Hola mundo</em> de Java en el método <em>printJava()</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.javaregexformatter</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.fusesource.jansi.Ansi</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.fusesource.jansi.AnsiConsole</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.regex.Matcher</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.regex.Pattern</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">SQL_REGEXP_REFERENCEGROPUS</span> <span class="o">=</span> <span class="s">&#34;(?&lt;keyword&gt;select|from|where|and)|(?&lt;string&gt;&#39;[^&#39;]*&#39;)|(?&lt;number&gt;\\d+)|(?&lt;other&gt;.)&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">JAVA_REGEXP_REFERENCEGROPUS</span> <span class="o">=</span> <span class="s">&#34;(?&lt;keyword&gt;public|static|void|class)|(?&lt;type&gt;String|int)(?&lt;typequalifier&gt;\\[\\]|\\s)|(?&lt;string&gt;\&#34;[^\&#34;]*\&#34;)|(?&lt;number&gt;\\d+)|(?&lt;other&gt;[\\s\\S])&#34;</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">systemInstall</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">out</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">printSql</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">printJava</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">out</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">systemUninstall</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">printSql</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pattern</span> <span class="n">p</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="n">SQL_REGEXP_REFERENCEGROPUS</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Matcher</span> <span class="n">m</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="s">&#34;select * from dual where a = &#39;1&#39; and b = 23&#34;</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">StringBuffer</span> <span class="n">formatedSql</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">while</span> <span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">find</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">keyword</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;keyword&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;string&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">number</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;number&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">other</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;other&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">keyword</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">MAGENTA</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">keyword</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">string</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">YELLOW</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">string</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">number</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">number</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">other</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">other</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">out</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">formatedSql</span><span class="o">.</span><span class="na">toString</span><span class="o">()));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">printJava</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pattern</span> <span class="n">p</span> <span class="o">=</span> <span class="n">Pattern</span><span class="o">.</span><span class="na">compile</span><span class="o">(</span><span class="n">JAVA_REGEXP_REFERENCEGROPUS</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Matcher</span> <span class="n">m</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">matcher</span><span class="o">(</span><span class="s">&#34;public class Main {\n\tpublic static void main(String[] args) {\n\t\tint number = 3;\n\t\tSystem.out.println(\&#34;Hello World!\&#34;);\n\t}\n}&#34;</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">StringBuffer</span> <span class="n">formatedSql</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">while</span> <span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">find</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">keyword</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;keyword&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">type</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;type&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">typeQualifier</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;typequalifier&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;string&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">number</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;number&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">other</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">group</span><span class="o">(</span><span class="s">&#34;other&#34;</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">keyword</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">MAGENTA</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">keyword</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">type</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">CYAN</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">type</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">typeQualifier</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">typeQualifier</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">string</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">YELLOW</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">string</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">number</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">fg</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">Color</span><span class="o">.</span><span class="na">BLUE</span><span class="o">).</span><span class="na">a</span><span class="o">(</span><span class="n">number</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">other</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">formatedSql</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">other</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AnsiConsole</span><span class="o">.</span><span class="na">out</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="n">Ansi</span><span class="o">.</span><span class="na">ansi</span><span class="o">().</span><span class="na">reset</span><span class="o">().</span><span class="na">a</span><span class="o">(</span><span class="n">formatedSql</span><span class="o">.</span><span class="na">toString</span><span class="o">()));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.javaregexformatter.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.fusesource.jansi:jansi:2.3.2&#39;</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>El resultado en la terminal es el siguiente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/images/JavaRegexFormatter_hu2eff5423e6ca8ce9c5c70066ea0b2fdc_48614_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Formateado de sentencia SQL y código Java"><img src="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/images/JavaRegexFormatter_hu2eff5423e6ca8ce9c5c70066ea0b2fdc_48614_650x450_fit_box_3.png" width="650" height="276" alt="Formateado de sentencia SQL y código Java" title="Formateado de sentencia SQL y código Java"  class="lozad "></a></p>
<figcaption>Formateado de sentencia SQL y código Java</figcaption>
</figure>
</div>
<p>Este ejemplo es una aplicación útil de las expresiones regulares. En este caso he usado Jansi para emitir en la terminal texto con color pero de forma similar esto se puede usar para formatear en una web el mismo texto transformándolo y generando el HTML con las clases CSS adecuadas.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/JavaRegexFormatter">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew installDist, ./build/install/JavaRegexFormatter/bin/JavaRegexFormatter</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/</id>
        <title>IBM adquiere Red Hat, el gigante de Linux y código abierto</title>
        <updated>2018-10-29T21:00:00+02:00</updated>
        <published>2018-10-29T06:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/redhat.svg" width="300" height="96" alt="Red Hat" title="Red Hat"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ibm.svg" width="300" height="120" alt="IBM" title="IBM"  class=""></p>
</div>
<p>Hace unos pocos días recordaba una de las adquisiciones más relevantes entre empresas de software y de tecnología, <a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/">la adquisición de Sun Microsystems por parte de Oracle</a> en enero del 2010. En este octubre del 2018 acaba de anunciarse la adquisición de <a href="https://www.redhat.com/es">Red Hat</a> por parte de <a href="https://www.ibm.com/us-en/">IBM</a>.</p>
<p>La adquisición de <a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</a> por parte de <a href="https://www.oracle.com/">Oracle</a> fue relevante por el conjunto de productos que poseía Sun entre ellos el lenguaje de programación más usado, <a href="https://www.oracle.com/technetwork/java/index.html">Java</a>, pero también <a href="https://www.mysql.com/">MySQL</a>, competencia directa de la base de datos Oracle, el paquete ofimático OpenOffice que originaría <a href="https://www.libreoffice.org/">LibreOffice</a>, el software de virtualización <a href="https://www.virtualbox.org/">VirtualBox</a>, <a href="https://en.wikipedia.org/wiki/Solaris_%28operating_system%29">Solaris</a> y otras tecnologías relevantes como <a href="https://en.wikipedia.org/wiki/ZFS">ZFS</a> y <a href="https://en.wikipedia.org/wiki/DTrace">DTrace</a>. Por su parte la adquisición de Red Hat por parte de IBM también es relevante por el <a href="https://www.redhat.com/en/technologies/all-products">conjunto de productos de Red Hat</a> que ha desarrollado, adquirido o contribuido como su sistema operativo basado en <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> denominado <a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux">Red Hat Enterprise Linux (RHEL)</a> pero también las variantes comunitarias del proyecto <a href="https://fedoraproject.org/">Fedora</a> o la versión equivalente comunitaria <a href="https://www.centos.org/">CentOS</a> basada en RHEL. Pero también por otros productos como el servidor de aplicaciones <a href="https://www.jboss.org/">JBoss</a> y <a href="https://wildfly.org/">Wildfly</a>, la herramienta de automatización <a href="https://www.ansible.com/">Ansible</a> adquirida no hace mucho, <a href="https://www.openshift.com/">OpenShift</a> como plataforma de computación en la nube basada en contenedores, la versión de Red Hat de <a href="https://www.openstack.org/">OpenStack</a> para disponer de una infraestructura para la computación en la nube, <a href="https://www.redhat.com/en/technologies/storage/gluster">Gluster</a> y <a href="https://www.redhat.com/en/technologies/storage/ceph">Ceph</a> para el almacenamiento, <a href="https://coreos.com/">CoreOS</a> a añadir a sus soluciones para contenedores entre otros de sus productos.</p>
<p>Entre las empresas Sun Microsystems y Red Hat hay algún punto en común como que las dos han tenido en especial consideración las tecnologías de código abierto y el software libre, son dos de las empresas que más han contribuido al desarrollo del software libre. <a href="https://www.fsf.org/news/fsf-welcomes-gpl-java.html">Sun dotando a Java de una licencia de software libre como GPL</a> en el año 2006 junto con los otros proyectos que fue adquiriendo y <a href="https://www.fedoraproject.org/wiki/Red_Hat_contributions">Red Hat con sus contribuciones al núcleo de Linux y otros proyectos</a> como el entorno de escritorio <a href="https://www.gnome.org/">GNOME</a>, <a href="https://wiki.gnome.org/Projects/NetworkManager">NetworkManager</a>, los controladores gráficos, el servidor gráfico de nueva generación <a href="https://es.wikipedia.org/wiki/Wayland_%28protocolo%29">Wayland</a> que sustituirá a <a href="https://www.x.org/wiki/XServer/">X.Org Server</a> o <a href="https://flatpak.org/">Flatpak</a> como nueva forma de distribuir software para todas las distribuciones GNU/Linux directamente por los desarrolladores de los programas, el software de virtualización <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a> o el sistema de inicio <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a>.</p>
<p>Sin embargo, también hay diferencias en la adquisición de Sun y Red Hat. Una de ellas significativa es que Sun no pasaba por buenos momentos cuando fue adquirida por Oracle aún con las importantes tecnologías que poseía incapaz de tener un modelo de negocio rentable sobre el que basarse para perdurar. Oracle se deshizo de los que no le eran provechosos y muchas personas abandonaron Sun/Oracle. En cambio Red Hat si posee un modelo de negocio rentable basado en el código abierto y software libre con una facturación de 2000 millones. Sun fue adquirida por 7400 millones de dólares lo que en su momento parecía una gran cantidad de dinero y ahora parece que fue muy barato, Red Hat ha sido adquirida por 34000 millones, una enorme diferencia entre ambas operaciones aún habiendo pasado casi una década.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/images/redhat-homepage_hu575f231ead20386a238f4d21650a15e2_239090_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Anuncio en la página de Red Hat"><img src="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/images/redhat-homepage_hu575f231ead20386a238f4d21650a15e2_239090_650x450_fit_box_3.png" width="650" height="332" alt="Anuncio en la página de Red Hat" title="Anuncio en la página de Red Hat"  class="lozad "></a></p>
<figcaption>Anuncio en la página de Red Hat</figcaption>
</figure>
</div>
<p>Conocida la operación en la página de Red Hat se publican varias notas de prensa.</p>
<ul>
<li><a href="https://newsroom.ibm.com/2018-10-28-IBM-To-Acquire-Red-Hat-Completely-Changing-The-Cloud-Landscape-And-Becoming-Worlds-1-Hybrid-Cloud-Provider">IBM to acquire Red Hat, completely changing the cloud landscape and becoming world’s #1 hybrid cloud provider</a></li>
<li><a href="https://www.redhat.com/en/blog/red-hat-ibm-creating-leading-hybrid-cloud-provider">Red Hat + IBM: Creating the leading hybrid cloud provider</a></li>
<li><a href="https://www.redhat.com/en/blog/monumental-day-open-source-and-red-hat">A monumental day for open source and Red Hat</a></li>
</ul>
<p>A razón de estas notas de prensa después de haberlas leído el motivo principal por el que IBM adquiere Red Hat es para convertirse en el proveedor número uno de computación en la nube híbrida y el motivo por el que Red Hat acepta la operación es porque estando dentro de una compañía del tamaño y recursos disponibles de IBM puede acelerar el crecimiento y proporcionar a una mayor audiencia innovación basándose en el código abierto a una escala mucho mayor conservando su cultura única y compromiso decidido con el código abierto, muchos años antes de lo que les costaría hacerlo solos. Red Hat en el 2008 eran 2200 empleados en el 2018 son 12600, IBM tiene 300000 empleados. IBM se mantiene comprometida con el gobierno abierto de Red Hat, las contribuciones al código abierto, la participación en la comunidad de código abierto y modelo de desarrollo. Red Hat seguirá siendo Red Hat como una unidad distinta dentro de IBM, mantiene su misión comprometida con el código abierto y valores de colaboración, transparencia, participación y meritocracia, incluso esperando que estos valores se transladen a IBM.</p>
<p>Red Hat se fundó en 1993 liberando en 1994 la primera versión de Red Hat Linux, en el 2001 vendía en comercios por $29.95 cajas con el sistema operativo entre entusiastas o descargable gratuitamente de sitios FTP. Pero con solo entusiastas del código abierto no haría de Red Hat (o Linux) un jugador en el software empresarial. En el año 2002 se hace la apuesta por separar los productos comerciales de su inversión continuada en construir proyectos de código abierto. Se deja de lado la descarga gratuita y las cajas con Red Hat Linux siendo reemplazadas con un modelo de suscripción empresarial, reteniendo los principios del código abierto de libertad a la vez que creando un modelo de negocio sostenible a largo plazo, publicándolo como Red Hat Enterprise Linux. El punto importante es que encontró un modelo de negocio exitoso para Linux y el código abierto continuando invirtiendo e innovando en la comunidad con proyectos como Fedora, siendo aún a día de hoy su modelo pero mucho más expandido. Desde el día que presentaron RHEL su misión ha sido llevar el código abierto a la empresa. Lo hicieron para Lixux, para Java EE, para OpenStack y lo están haciendo para Ansible, Kubernetes y más proyectos de código abierto.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/images/redhat-history_hu22322b882df75d6a0a16c7ba5415f1ab_184320_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Historia de Red Hat"><img src="https://picodotdev.github.io/blog-bitix/2018/10/ibm-adquiere-red-hat-el-gigante-de-linux-y-codigo-abierto/images/redhat-history_hu22322b882df75d6a0a16c7ba5415f1ab_184320_650x450_fit_q90_box.jpg" width="619" height="450" alt="Historia de Red Hat" title="Historia de Red Hat"  class="lozad "></a></p>
<figcaption>Historia de Red Hat</figcaption>
</figure>
</div>
<p>IBM es una compañía mucho más grande que Red Hat y tiene importantes valores como los <a href="https://www.ibm.com/it-infrastructure/z">servidores <em>mainframe</em> IBM Z</a>, los <a href="https://www.ibm.com/it-infrastructure/power">procesadores POWER</a>, además de <a href="https://www.ibm.com/cloud-computing/bluemix/es">su propia nube</a>, software de analítica, internet de las cosas y <a href="https://www.ibm.com/solutions/es/es/">soluciones para varios sectores de la industria y gubernamentales</a>. El <a href="https://eclipse.org">proyecto Eclipse</a> surgió de IBM y ha estado ampliamente relacionada con Java con los <a href="https://www.ibm.com/es-es/marketplace/java-ee-runtime/details">servidores WebSphere</a> u <a href="https://openliberty.io">OpenLiberty</a>. Ambas son dos de las <a href="https://www.linuxfoundation.org/2017-linux-kernel-report-landing-page/">empresas que más contribuyen al <em>kernel</em> de Linux</a>.</p>
<p>En la nube hay negocio con varios actores importantes <a href="https://aws.amazon.com/es/">Amazon Web Services</a>, <a href="https://azure.microsoft.com/es-es/">Microsoft Azure</a>, <a href="https://cloud.google.com/">Google Cloud</a>, <a href="https://www.oracle.com/cloud/">Oracle Cloud</a> uniéndose ahora IBM y Red Hat entre otros varios actores más pequeños. En este auge de la nube y que seguirá creciendo todos quieren estar presentes, sin embargo, con la cantidad de ellos que quizá con el paso del tiempo solo haya dos o tres exitosos muy grandes que concentren la mayor parte del mercado. O quizá surja una nueva tecnología disruptiva que cambie de nuevo las reglas de juego. IBM que parecía pasar más desapercibida en los últimos tiempos con la adquisición de Red Hat toma una nueva relevancia que puede ser beneficiosa para ambas si son capaces de aprovechar esta oportunidad. IBM realiza nueva inversión en el código abierto que se suma a las ya anteriores de 1000 millones en Linux.</p>
<p>Al mismo tiempo se abre un periodo de incertidumbre considerando precedentes similares anteriores como el comentado de Sun pero también de oportunidades. Si no es exitoso <a href="https://www.canonical.com/">Canonical</a> y <a href="https://www.ubuntu.com/">Ubuntu</a> o <a href="https://www.suse.com/es-es/">SUSE</a> pueden ser beneficiados pasando a ocupar el espacio que ahora ocupa Red Hat. Está por ver si IBM abraza <a href="https://brand.redhat.com/foundations/">los valores por los que Red Hat ha tenido éxito</a>, de momento parece que va a mantener a Red Hat como una unidad distinta dentro de IBM.</p>
<p>¿IBM se convertirá en el gigante rojo o Red Hat se convertirá en Blue Hat?.</p>
<div class="media">
    <amp-twitter width="650" height="550" data-tweetid="1056893767913889794"></amp-twitter>
    <blockquote placeholder>
<p lang="en" dir="ltr">Red Hat gains stronger foothold in open source and more industry expertise with IBM deal, says CEO Jim Whitehurst <a href="https://t.co/gtXAO1CQ6X">https://t.co/gtXAO1CQ6X</a> <a href="https://t.co/21QzUw3rre">pic.twitter.com/21QzUw3rre</a></p>&mdash; Bloomberg Technology (@technology) <a href="https://twitter.com/technology/status/1056893767913889794?ref_src=twsrc%5Etfw">October 29, 2018</a>
</blockquote>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/s7dTjpvakmA" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/2_VFKqw1q2Q" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.xataka.com/empresas-y-economia/ibm-compra-red-hat-34-000-millones-dolares-hito-historico-para-empresa-que-triunfo-linux-open-source">IBM compra Red Hat por 34.000 millones de dólares en un hito histórico para la empresa que triunfó con Linux y el Open Source</a></li>
<li><a href="https://www.genbeta.com/actualidad/ibm-compra-red-hat-historica-operacion-34-000-millones-dolares">IBM compra Red Hat en una histórica operación de 34.000 millones de dólares</a></li>
<li><a href="https://www.genbeta.com/a-fondo/red-hat-como-empresa-software-open-source-llego-a-valer-34-000-millones-dolares">Red Hat, cómo una empresa de software open source llegó a valer 34.000 millones de dólares</a></li>
<li><a href="https://hipertextual.com/2018/10/ibm-compra-red-hat-34-000-millones-dolares">IBM compra Red Hat por 34.000 millones de dólares</a></li>
<li><a href="https://www.adslzone.net/2018/10/28/ibm-compra-red-hat/">IBM compra Red Hat por 34.000 millones: una de las mayores compras tecnológicas de la historia</a></li>
<li><a href="https://www.profesionalreview.com/2018/10/28/ibm-compra-red-hat-por-34-000-millones-de-dolares/]https://www.profesionalreview.com/2018/10/28/ibm-compra-red-hat-por-34-000-millones-de-dolares/">IBM compra Red Hat por 34.000 millones de dólares</a></li>
<li><a href="https://www.linuxadictos.com/ibm-realiza-la-mayor-compra-de-su-historia-tras-adquirir-red-hat.html">IBM realiza la mayor compra de su historia tras adquirir Red Hat</a></li>
<li><a href="https://jvare.com/2018/10/29/ibm-compra-red-hat/">IBM compra Red Hat</a></li>
<li><a href="https://www.meneame.net/story/ibm-compra-redhat-eng">IBM compra redhat</a></li>
<li><a href="https://siliconangle.com/2018/10/28/bombshell-deal-ibm-acquires-open-source-pioneer-red-hat-34b/">In a bombshell deal, IBM acquires open-source pioneer Red Hat for $34B</a></li>
<li><a href="http://marxsoftware.blogspot.com/2018/10/ibm-to-acquire-red-hat-java.html">IBM to Acquire Red Hat: A Java-Oriented First Look</a></li>
<li><a href="https://www.engadget.com/2018/10/28/ibm-buys-red-hat/">IBM buys Linux giant Red Hat to thrive in the cloud</a></li>
<li><a href="https://www.reddit.com/r/redhat/comments/9s5rqr/ibm_and_red_hat/">IBM and Red Hat?</a></li>
<li><a href="https://www.youtube.com/watch?v=2_VFKqw1q2Q&amp;list=PL040C33624F3CBAF9">Linux Ads</a></li>
<li><a href="https://brand.redhat.com/foundations/">Red Hat Brand Standards</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/ejemplo-sencillo-de-como-leer-datos-de-un-archivo-excel-o-csv-en-java/</id>
        <title>Ejemplo sencillo de cómo leer datos de un archivo Excel o CSV en Java</title>
        <updated>2018-10-26T10:00:00+02:00</updated>
        <published>2018-10-26T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/ejemplo-sencillo-de-como-leer-datos-de-un-archivo-excel-o-csv-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Los formatos de archivo de columnas separadas por comas o CSV y los documentos en formato de hojas de cálculo excel del paquete ofimático <a href="https://products.office.com/es-es/">Microsoft Office</a> son muy utilizados como formato de archivo para intercambiar datos entre aplicaciones o simplemente como contenedores de datos. Para leer los datos en estos formatos de archivos en Java hay que emplear alguna librería que facilite y entienda estos formatos de los archivos. Para leer los archivos CSV está la librería <a href="http://opencsv.sourceforge.net/">OpenCSV</a> y para los archivos excel está la librería <a href="https://poi.apache.org/">Apache POI</a>.</p>
<p>Con Apache POI para acceder al archivo excel hay que usar unas pocas clases de su API como <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFWorkbook.html">HSSFWorkbook</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFSheet.html">HSSFSheet</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFRow.html">HSSFRow</a>, <a href="https://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFCell.html">HSSFCell</a> y utilizar el método adecuado según el tipo de datos a obtener.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundoapachepoi</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">DATA</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DATA</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;PlayStation 4 (PS4) - Consola 500GB&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;340.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/PlayStation-4-PS4-Consola-500GB/dp/B013U9CW8A&#34;</span> <span class="o">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Raspberry Pi 3 Modelo B (1,2 GHz Quad-core ARM Cortex-A53, 1GB RAM, USB 2.0)&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;41.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Raspberry-Modelo-GHz-Quad-core-Cortex-A53/dp/B01CD5VC92/&#34;</span> <span class="o">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Gigabyte Brix - Barebón (Intel, Core i5, 2,6 GHz, 6, 35 cm (2.5\&#34;), Serial ATA III, SO-DIMM) Negro &#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;421.36&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Gigabyte-Brix-Bareb%C3%B3n-Serial-SO-DIMM/dp/B00HFCTUPM/&#34;</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeExcel</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readExcel</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeCsv</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readCsv</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">readExcel</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFWorkbook</span> <span class="n">wb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HSSFWorkbook</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="s">&#34;data.xls&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFSheet</span> <span class="n">sheet</span> <span class="o">=</span> <span class="n">wb</span><span class="o">.</span><span class="na">getSheetAt</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">getLastRowNum</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">rows</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFRow</span> <span class="n">row</span> <span class="o">=</span> <span class="n">sheet</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFCell</span> <span class="n">productCell</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFCell</span> <span class="n">priceCell</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="n">1</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HSSFCell</span> <span class="n">linkCell</span> <span class="o">=</span> <span class="n">row</span><span class="o">.</span><span class="na">getCell</span><span class="o">(</span><span class="n">2</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">product</span> <span class="o">=</span> <span class="n">productCell</span><span class="o">.</span><span class="na">getStringCellValue</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">price</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">priceCell</span><span class="o">.</span><span class="na">getNumericCellValue</span><span class="o">()).</span><span class="na">setScale</span><span class="o">(</span><span class="n">2</span><span class="o">,</span> <span class="n">BigDecimal</span><span class="o">.</span><span class="na">ROUND_HALF_DOWN</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">link</span> <span class="o">=</span> <span class="n">linkCell</span><span class="o">.</span><span class="na">getStringCellValue</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s, %s, %s%n&#34;</span><span class="o">,</span> <span class="n">product</span><span class="o">,</span> <span class="n">price</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">link</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-excel.java</span>
    </div>
</div>
<p>Para el caso de los CSV hay que utilizar la clase <a href="http://opencsv.sourceforge.net/apidocs/com/opencsv/CSVReader.html">CSVReader</a> que permite iterar sobre las líneas del archivo teniendo en cuenta el caracter separador de las columnas y las comillas de los datos. Para acceder a los valores de cada una de las columnas hay que convertir al tipo de datos deseado ya que siempre se devuelve un <em>String</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundoapachepoi</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">DATA</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DATA</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;PlayStation 4 (PS4) - Consola 500GB&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;340.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/PlayStation-4-PS4-Consola-500GB/dp/B013U9CW8A&#34;</span> <span class="o">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Raspberry Pi 3 Modelo B (1,2 GHz Quad-core ARM Cortex-A53, 1GB RAM, USB 2.0)&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;41.95&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Raspberry-Modelo-GHz-Quad-core-Cortex-A53/dp/B01CD5VC92/&#34;</span> <span class="o">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="s">&#34;Gigabyte Brix - Barebón (Intel, Core i5, 2,6 GHz, 6, 35 cm (2.5\&#34;), Serial ATA III, SO-DIMM) Negro &#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;421.36&#34;</span><span class="o">),</span> <span class="s">&#34;https://www.amazon.es/Gigabyte-Brix-Bareb%C3%B3n-Serial-SO-DIMM/dp/B00HFCTUPM/&#34;</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeExcel</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readExcel</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">writeCsv</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">readCsv</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">readCsv</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CSVReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CSVReader</span><span class="o">(</span><span class="k">new</span> <span class="n">FileReader</span><span class="o">(</span><span class="s">&#34;data.csv&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">[]&gt;</span> <span class="n">lines</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readAll</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">lines</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="n">d</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">product</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="n">0</span><span class="o">];</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">price</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">d</span><span class="o">[</span><span class="n">1</span><span class="o">]);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">link</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">d</span><span class="o">[</span><span class="n">2</span><span class="o">];</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s, %s, %s%n&#34;</span><span class="o">,</span> <span class="n">product</span><span class="o">,</span> <span class="n">price</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">link</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">reader</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-csv.java</span>
    </div>
</div>
<p>En ambos casos la salida en la consola al leer los datos de los documentos es la misma.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">PlayStation 4 (PS4) - Consola 500GB, 340.95, https://www.amazon.es/PlayStation-4-PS4-Consola-500GB/dp/B013U9CW8A&#10;Raspberry Pi 3 Modelo B (1,2 GHz Quad-core ARM Cortex-A53, 1GB RAM, USB 2.0), 41.95, https://www.amazon.es/Raspberry-Modelo-GHz-Quad-core-Cortex-A53/dp/B01CD5VC92/&#10;Gigabyte Brix - Barebón (Intel, Core i5, 2,6 GHz, 6, 35 cm (2.5&#34;), Serial ATA III, SO-DIMM) Negro , 421.36, https://www.amazon.es/Gigabyte-Brix-Bareb%C3%B3n-Serial-SO-DIMM/dp/B00HFCTUPM/&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Las dependencias a incluir en el proyecto son las siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.holamundoapachepoi.Main&#39;</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;org.apache.poi:poi:4.0.0&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s1">&#39;com.opencsv:opencsv:4.3&#39;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>También se puede <a href="https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/">utilizar Apache POI para crear hojas excel y OpenCSV para crear archivos CSV</a> con las columnas correctamente separadas por comas. Otra alternativa para leer o escribir archivos en formato CSV es <a href="https://commons.apache.org/proper/commons-csv/">Apache Commons CSV</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoApachePOI">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/08/ejemplo-sencillo-de-como-crear-un-documento-pdf-con-java-y-pdfbox/">Ejemplo sencillo de como crear un documento PDF con Java y PDFBox</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/</id>
        <title>Desempaquetado y análisis de monitor BenQ PD2700Q, 2K/QHD, IPS, 27 pulgadas</title>
        <updated>2020-06-02T14:00:00+02:00</updated>
        <published>2018-10-23T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La siguiente pieza que he adquirido para completar lo que será mi ordenador personal en casa es el monitor que usaré en mayor medida para tareas ofimáticas, navegar por internet, quizá ver alguna película y en menor medida quizá también algún juego. De entre las opciones que buscaba inicialmente era que fuese IPS por los colores, de 27 pulgadas y con ese tamaño de pantalla con al menos resolución QHD. Hay muchos modelos entre los que elegir y con variaciones de precios notables en aparentemente las mismas características, de 32 pulgadas, ultrapanorámicos, UHD, orientados más a <em>gaming</em>, &hellip;</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/benq.svg" width="300" height="90" alt="BenQ" title="BenQ"  class=""></p>
</div>
<p><a href="https://picodotdev.github.io/blog-bitix/2018/06/decidido-a-comprar-un-intel-nuc-entre-las-opciones-que-he-evaluado/">El ordenador que tenía intención de comprar, un Intel NUC</a> entre las <a href="https://picodotdev.github.io/blog-bitix/2018/04/intentando-elegir-portatil-nuc-o-mini-itx-para-comprar-nuevo-equipo/">opciones entre portátil, ITX o NUC que evalué hace ya más de seis meses</a> ha sido finalmente uno de sus modelos que me decidí a comprar, <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">el ordenador Intel NUC NUC8i5BEK del cual he realizado su desempaquetado</a>. Mientras espero a su comercialización ya estoy comprando las otras piezas que en cualquier caso necesito como <a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/">teclado y ratón inalámbrico, alfombrilla para la mesa</a> y ahora otra pieza más importante, el monitor.</p>
<p>Ya con unas semanas habiendo usado el teclado y ratón V7 CKW200 acepto que el ratón no sea totalmente fiable y un peligro hacer cosas importantes con él al arrastrar y soltar ya que falla en ocasiones, quizá compre un ratón tradicional con cable si me da muchos problemas. He comprobado que se pueden tener dos ratones conectados simultáneamente, funcionado ambos. El teclado funciona perfectamente y estoy encantado con él, solo por el teclado no los he devuelto. Sin embargo, en el monitor con algún defecto de píxeles muertos o retención de imagen si haría la devolución, por fortuna una vez me ha llegado y lo he comprobado con unas <a href="https://jasonfarrell.com/misc/deadpixeltest.php">imágenes de prueba para detectar píxeles muertos o vagos</a> no he visto ninguno así que el panel me ha llegado perfecto estado.</p>
<p>He mirado varias opciones y modelos de  monitor y aún así tampoco estoy seguro de que la que finalmente he elegido sea la mejor en el mercado. Leyendo comentarios y opiniones de otros usuarios en todos los modelos siempre hay alguno que ha tenido problemas, en el caso de los monitores de píxeles muertos, vagos, fugas de luz, hasta retención de imágenes. Las fugas de luz es algo normal en la tecnología actual de monitores y televisores con retroiluminación led en los bordes de la pantalla, apreciable en condiciones de poca luz e imágenes oscuras.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="opciones">Opciones</h3>
<p>Partía de unos requerimientos de que fuera IPS por su calidad de colores, de 27 pulgadas y con resolución 2K o 2560x1440 en un rango de precio de hasta unos 300 €. En otro orden de cosas menos importantes que valoraba era que tuviese conexión <a href="https://es.wikipedia.org/wiki/High-Definition_Multimedia_Interface">HDMI</a> y <a href="https://en.wikipedia.org/wiki/DisplayPort">DisplayPort</a>, marcos finos y compatibilidad con soporte VESA. Hay opciones en formato ultrapanorámico de 29 pulgadas y resolución 2560x1080. He visto alguno de estos pero finalmente he preferido que tenga más resolución vertical y no sea tan ancho para no tener que girar la cabeza.</p>
<p>Con estos requerimientos iniciales me quedé con unos pocos candidatos. Básicamente monitores 2K en formato de 27 pulgadas e IPS muy similares en cuanto a características, son IPS de resolución QHD 2560x1440, tienen entrada HDMI 1.4 y DisplayPort 1.2, soporte VESA 100x100, con algunas pequeñas diferencias en cuanto a especificaciones. El <a href="https://amzn.to/2D0VQEf">BenQ PD2500Q</a> es de 25 pulgadas, panel de 8 bits y tiene sensor para adaptar automáticamente el brillo a la luz ambiental, posee un <em>hub</em> USB 3.1 de cuatro puertos, el <a href="https://amzn.to/2OFdFi9">BenQ PD2700Q</a> posee un <em>hub</em> USB 2.0 de dos puertos y un panel de 10 bits. Los dos modelos de BenQ son muy parecidos sino iguales en cuanto al panel de monitor, varía en cuanto al marco que en el caso del GW s brillante y en el PD mate, también cambian las conexiones que tienen el GW tiene D-Sub, DVI-DL (Dual Link), DisplayPort, HDMI y el PD DisplayPort, mini DisplayPort y HDMI. Ambos soportan 100% Rec.709 y sRGB, sin parpadeos, son regulables en altura, gira, inclinación y pivotable para ponerlo en modo vertical. Tienen un precio similar.</p>
<p>De las opciones con las que me quedé todos con panel de 10 bits (u 8 + 2, salvo el PD2500Q que es de 8), función de no parpadeo, filtro de luz azul y altavoces sencillos. El PD2700Q es un modelo más antiguo, los PD2500Q y PD2700U son más modernos y se notan en los biseles más reducidos y el <em>hub</em> con una versión mayor de USB.</p>
<p>Tanto el <a href="https://amzn.to/2OIyidi">Viewsonic VG2719-2K</a> como el <a href="https://amzn.to/2CZj8dx">V7 L27HAS2K-2E</a> tienen un precio más económico pero en cuanto a especificaciones técnicas no eran malas. Sin embargo, de estos modelos no hay mucha información ni de análisis en páginas web, desempaquetados en Youtube, ni opiniones en Amazon. Del V7 hay <a href="https://www.amazon.de/dp/B079P3YSTK/">dos opiniones en Amazon alemania</a> y ambas no son buenas y coinciden en que el texto y la imagen se ve borrosa. La falta de información me ha hecho tener reticencias con estos modelos.</p>
<p>El Viewsonic es un modelo del 2015 con dos HDMI 1.3 y DisplayPort 1.2. El BenQ PD2700Q es un modelo del año 2016, tiene HDMI 1.4 y DisplayPort 1.2, no es muy relevante ya que de HDMI 1.3 a 1.4 varía la resolución soportada pero en estos monitores en ambos casos es suficiente cualquiera de ellas en esta resolución y a 60 Hz. El Viewsonic es una opción algo menor pero considerando su precio y el del BenQ hubiese sido otra buena elección. El Viewsonic en contra tiene la falta de información aún habiendo un comentario positivo en Amazon.</p>
<ul>
<li><a href="https://amzn.to/2OFdFi9">BenQ PD2700Q</a> (<a href="https://www.benq.eu/es-es/monitor/designer/pd2700q.html">página fabricante</a>)</li>
<li><a href="https://amzn.to/2D0VQEf">BenQ PD2500Q</a> (<a href="https://www.benq.eu/es-es/monitor/designer/pd2500q.html">página fabricante</a>)</li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01K2210GS&amp;linkId=37c01c8c71f103d6c7ad009afd2892a9" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0737M9QP7&amp;linkId=3f46b23e2d6b884222796306587cced8" title="Amazon" class="lozad"></iframe>
</div>
<p>Los monitores UHD para un tamaño de 27 pulgadas a máxima resolución el texto y elementos gráficos se ven muy pequeños con lo que para uso ofimático hay que escalar a una más pequeña. Hay en un rango de precios muy amplio, desde 200 € a 700+€. Dos modelos en 4K de los anteriores son el <a href="https://amzn.to/2Pik820">BenQ PD2700U</a> que es el que hubiese elegido en caso de haber optado por UHD, el <a href="https://amzn.to/2PbNIGB">LG 27UK600-W</a> o el <a href="https://amzn.to/2Jcu1sP">LG 27UK650-W</a>, nótese la <em>U</em> en estos modelos. Estos monitores aún siendo UHD no llegan a los 192 dpi, se quedan en 163, para considerarse <a href="https://wiki.gnome.org/HowDoI/HiDpi">HiDPI</a> ni tienen una pantalla retina. Otras opciones son optar por 32&quot; UHD y en formato panorámico. Los otros candidatos destacables son estos alguno en formato panorámico.</p>
<ul>
<li><a href="https://amzn.to/3Fb5gc7">BenQ PD2700U</a></li>
<li><a href="https://amzn.to/2YLe1dq">BenQ PD3200U</a></li>
<li><a href="https://amzn.to/3kyG4nW">LG 34WN750-B</a></li>
<li><a href="https://amzn.to/3ooWHne">Samsung LU32J592UQRXEN</a></li>
</ul>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01K2210GS&amp;linkId=37c01c8c71f103d6c7ad009afd2892a9" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0737M9QP7&amp;linkId=3f46b23e2d6b884222796306587cced8" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07GLR6RQF&amp;linkId=c69a55a9bb5bf63725b1bdffaa567444" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01N4AIIIV&amp;linkId=076b46557cfcc1a8a97d634ec8558adc" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B086BHDHR5&amp;linkId=b3f97dfc3e625c270170a9ca9aae8eb8" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08SW8HC78&amp;linkId=85ea6c42eb833535683519da00bc0363" title="Amazon" class="lozad"></iframe>
</div>
<p>En monitores de 27 pulgadas la recomendación en varios foros es de 2K. Menos con 1K o <em>full hd</em> es ver píxeles como centollos, más es ver las cosas pequeñas a máxima resolución para tareas ofimáticas y es habitual tener que escalar a una resolución más baja aunque tenga mayor definición aprovechando la mayor densidad de píxeles o DPI. Estos son unos hilos en foros y dos artículos que me han parecido interesantes y que me han resuelto alguna duda o confirmado lo que ya suponía.</p>
<ul>
<li><a href="https://foro.elchapuzasinformatico.com/monitores/81918-monitor-de-27-1440p-24-1080p-para-ofimatica-office-programas-de-contabilidad.html">Monitor de 27 1440p o 24 1080p para ofimática, office y programas de contabilidad</a></li>
<li><a href="https://foro.elchapuzasinformatico.com/monitores/82088-monitor-27-usos-programacion-ofimatica-un-poco-de-diseno-illustrator-photoshop.html">Monitor 27&quot; - Usos: Programación, Ofimática y un poco de diseño(Illustrator, Photoshop)</a></li>
<li><a href="https://www.forocoches.com/foro/showthread.php?t=6062417">Voy a comprar un monitor de 27-28… ¿merece la pena que sea 4K?</a></li>
<li><a href="https://www.forocoches.com/foro/showthread.php?t=4760432">Entendidos en monitores: 27&quot; 1080/2k consejo compra</a></li>
<li><a href="https://www.disfrutadelcastigo.com/2014/01/comprar-un-monitor-4k.html">Comprar un monitor 4K</a></li>
<li><a href="https://www.disfrutadelcastigo.com/2017/04/comprar-monitor-ultrapanoramico-uwqhd.html">Comprar monitor ultrapanorámico UWQHD</a></li>
</ul>
<p>En <a href="https://www.pccomponentes.com/">PcComponentes</a> los precios no varían tanto pero en Amazon en algunos productos si hay notables diferencias entre pocos días o alguna semana, sobre todo en productos de tecnología. Para conocer si el precio actual de un producto es alto, bajo o está bajando la página <a href="https://es.camelcamelcamel.com/">CamelCamelCamel</a> permite introduciendo la URL del producto de Amazon mostrar una gráfica con la evolución del precio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/camelcamelcamel-benq-pd2700q_huc761967a96eddd13231ae5a8310cf71b_58029_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Evolución del precio del monitor BenQ PD2700Q"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/camelcamelcamel-benq-pd2700q_huc761967a96eddd13231ae5a8310cf71b_58029_300x200_fit_box_3.png" width="297" height="200" alt="Evolución del precio del monitor BenQ PD2700Q" title="Evolución del precio del monitor BenQ PD2700Q"  class="lozad "></a></p>
<figcaption>Evolución del precio del monitor BenQ PD2700Q</figcaption>
</figure>
</div>
<h3 id="benq-pd2700q">BenQ PD2700Q</h3>
<p>Teniendo en cuenta todo finalmente me he decidido por el <a href="https://www.benq.eu/es-es/monitor/designer/pd2700q.html">BenQ PD2700Q</a>. Tiene buena conectividad, sin conexiones obsoletas como en el caso del BenQ GW. Es un monitor orientado a diseñadores aunque mi uso es principalmente en tareas ofimáticas y posiblemente algún juego ocasional. Los monitores ultra anchos no los he usado pero se me hacen demasiado anchos obligando a mover la cabeza para cubrir su área de visualización. Ya con 27&quot; el monitor se me hace grande aunque me acostumbraré a este tamaño pasado un tiempo, para la gente que aún quiere un monitor
más grande los hay de 32&quot; aunque en estos ya hay que ir a una resolución de UHD 3840x2160. Dentro de la categoría de monitores de 27 pulgadas, con resolución 2560x1440, IPS y con conectividad HDMI y DisplayPort el BenQ PD2700Q es uno de los más baratos y con una mejor relación calidad precio.</p>
<p>Sus <a href="https://www.benq.eu/es-es/monitor/designer/pd2700q/specifications.html">especificaciones</a> más destacables son:</p>
<ul>
<li>Tamaño de la pantalla, 27</li>
<li>Resolución 2560x1440.</li>
<li>Tipo de panel, IPS</li>
<li>Brillo, 350 cd/㎡</li>
<li>Colores de la pantalla, 1.07 billion colors</li>
<li>Área de la pantalla (mm), 596.74(H) x 335.66(V)</li>
<li>Distancia entre píxeles (mm), 0.2331 y PPP, 108.79</li>
<li>Profundidad de color, 10bits</li>
<li>HDMI, HDMI (v1.4) x 1</li>
<li>DisplayPort, DisplayPort (v1.2) x 1</li>
<li>Mini DisplayPort, Mini DisplayPort (ver1.2) x 1</li>
<li>Concentrador USB 2.0, <em>upstream</em> x 1 y <em>downstream</em> x 2</li>
<li>Fuente de alimentación, <em>built-in</em></li>
<li>Dimensiones (altura × anchura × profundidad, mm) (sin base), 379.5 x 641.0 x 56.5. Con base (posición alta): 547.3 x 641.0 x 239.6. Con base (posición baja): 417.3 x 641.0 x 239.6</li>
</ul>
<p>Con 27 pulgadas y una resolución de 2560x1440 su área de visualización sus PPI son:</p>
<ul>
<li>Display size (<strong>27&quot;, QHD</strong>): 23.53&quot; × 13.24&quot; = 311.5in² (59.77cm × 33.62cm = <strong>2009.68cm²</strong>) at <strong>108.79 PPI</strong>, <strong>0.2335mm dot pitch</strong>, 11834 PPI²</li>
</ul>
<p>Comprando con un monitor de 23 pulgadas y una resolución de 1920x1080 y con un monitor de 3840x2160 en 27 pulgadas estos números son:</p>
<ul>
<li>Display size (<strong>23&quot;, FHD</strong>): 20.05&quot; × 11.28&quot; = 226.04in² (50.92cm × 28.64cm = <strong>1458.33cm²</strong>) at <strong>95.78 PPI</strong>, <strong>0.2652mm dot pitch</strong>, 9174 PPI²</li>
<li>Display size (<strong>27&quot;, UHD</strong>): 23.53&quot; × 13.24&quot; = 311.5in² (59.77cm × 33.62cm = <strong>2009.68cm²</strong>) at <strong>163.18 PPI</strong>, <strong>0.1557mm dot pitch</strong>, 26627 PPI²</li>
</ul>
<p>Hay algo de confusión cuando se menciona 2K en monitores, en realidad el término más apropiado es QHD (quad hd), que es 4 veces la resolución HD (1280x720), dos en alto y dos en ancho. Lo mismo ocurre con los monitores 4K que en realidad la denominación más acertada es UHD (ultra hd) y son cuatro veces la resolución FHD, dos en cada medida, 3840x2160.</p>
<p>En YouTube hay unos cuantos vídeos analizando este mismo monitor u otros parecidos que me han servidor para aclarar dudas.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=eEmQWkorC5c">BenQ 27 inch PD2700Q QHD Designer Monitor Review</a></li>
<li><a href="https://www.youtube.com/watch?v=lvJVVPwDpuM">BenQ PD2700Q review - 1440p IPS designer monitor</a></li>
<li><a href="https://www.youtube.com/watch?v=L5HUU2bsWMo">BenQ PD2700Q optimal für den Rec. 709</a></li>
<li><a href="https://www.youtube.com/watch?v=lAoP3GubSQ8">Video Review Monitor BenQ PD2700Q 27“, 2K, 4 ms</a></li>
<li><a href="https://www.youtube.com/watch?v=zrfogYO_yOQ">Quick review BenQ PD2700Q</a></li>
<li><a href="https://www.youtube.com/watch?v=bKjSox0uwnk">8 bit vs 10 bit Color: What’s the Difference?</a></li>
<li><a href="https://www.youtube.com/watch?v=9ZXwqIrQE_M">¿Qué son 8-bit, 10-bit, 12-bit en Video? Todo sobre Bit Depth</a></li>
<li><a href="https://www.youtube.com/watch?v=0C2DnfPTcmE">1440p vs 4K (2160p) Monitor – What To Look Out For!</a></li>
<li><a href="https://www.youtube.com/watch?v=lZYLHPleZQQ">1080p vs 1440p Monitor</a></li>
<li><a href="https://www.youtube.com/watch?v=Hr_7-pVypSI">BenQ GW2765HT | 2K IPS 27&quot;</a></li>
<li><a href="https://www.youtube.com/watch?v=sdr10y_Ea-Q">Unboxing monitor BenQ GW2765HT QHD en español</a></li>
<li><a href="https://www.youtube.com/watch?v=o78qcRWz2Ag">BenQ GW2765HT Review - Best 1440p Monitor Under £300?</a></li>
<li><a href="https://www.youtube.com/watch?v=6DyJVoNyMX0">BenQ PD3200U Review</a></li>
<li><a href="https://www.youtube.com/watch?v=1THPLkNEH3k">Review Monitor para profesionales del diseño digital PD3200U</a></li>
</ul>
<h3 id="desempaquetado">Desempaquetado</h3>
<p>El monitor está perfectamente embalado en una caja impresa con las principales características del monitor, dentro lleva sus respectivos protectores e incluye los siguientes elementos. Que incluya una cable DisplayPort, HDMI y USB es de agradecer para no tener que comprarlos aparte y poder usar el monitor desde el primer momento.</p>
<ul>
<li>Monitor PD2700Q.</li>
<li>Guía de inicio y CD con software.</li>
<li>Cable de alimentación.</li>
<li>Cable HDMI.</li>
<li>Cable Mini DisplayPort a DisplayPort.</li>
<li>Cable USB para conectar al monitor y ordenador.</li>
<li>Gancho para colgar cascos en la parte trasera.</li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-1_hu5116f0dfb17873db99ba62d3f2645084_1396575_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-1_hu5116f0dfb17873db99ba62d3f2645084_1396575_200x150_fit_q90_box.jpg" width="200" height="136" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-2_hu3bdb6524ff67690ad6a69e79d8c3b993_1443386_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-2_hu3bdb6524ff67690ad6a69e79d8c3b993_1443386_200x150_fit_q90_box.jpg" width="200" height="150" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-3_hu94d64b531b486a2d7b0cc5ce850510b9_1047470_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-3_hu94d64b531b486a2d7b0cc5ce850510b9_1047470_200x150_fit_q90_box.jpg" width="114" height="150" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-4_hu17e56abcb9c56cc7f8bd8b5a24a8008a_308882_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-4_hu17e56abcb9c56cc7f8bd8b5a24a8008a_308882_200x150_fit_q90_box.jpg" width="200" height="25" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-5_hu1ed07e0c25e41219605616dd3f630812_437695_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-5_hu1ed07e0c25e41219605616dd3f630812_437695_200x150_fit_q90_box.jpg" width="200" height="31" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-6_hufa9850ac9ba7a1f4a780cb538d55d1e1_344382_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-6_hufa9850ac9ba7a1f4a780cb538d55d1e1_344382_200x150_fit_q90_box.jpg" width="200" height="49" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-7_hu51f315a4c3581c2a11c67765f54caa30_598185_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-7_hu51f315a4c3581c2a11c67765f54caa30_598185_200x150_fit_q90_box.jpg" width="200" height="70" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-8_hu38ccb7992c2885c252510f0b29afd82d_533432_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-8_hu38ccb7992c2885c252510f0b29afd82d_533432_200x150_fit_q90_box.jpg" width="200" height="67" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
<figcaption>Desempaquetado</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-9_hub38a4a1afdb288ae87ed05df0a898960_760324_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-9_hub38a4a1afdb288ae87ed05df0a898960_760324_200x150_fit_q90_box.jpg" width="200" height="85" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-10_hud74205ef1ea290368df24a862879f9cd_839713_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-10_hud74205ef1ea290368df24a862879f9cd_839713_200x150_fit_q90_box.jpg" width="183" height="150" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-11_hu374447e45a5ae5f23262c0c59f11dfd7_1377327_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-11_hu374447e45a5ae5f23262c0c59f11dfd7_1377327_200x150_fit_q90_box.jpg" width="180" height="150" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-12_huc9efa02f5648a1a9c80c4cc0b2503439_977819_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Desempaquetado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-unboxing-12_huc9efa02f5648a1a9c80c4cc0b2503439_977819_200x150_fit_q90_box.jpg" width="200" height="133" alt="Desempaquetado" title="Desempaquetado"  class="lozad "></a></p>
<figcaption>Contenido de la caja</figcaption>
</figure>
</div>
<p>El monitor posee unos biseles bastante amplios de 2 cm sin embargo al ser el marco negro con acabado mate no distraen mucho ni son molestos estéticamente. Aún así la tendencia es que estos biseles sean reducidos pero este modelo de monitor ya tiene algunos años.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-1_hu35beffe17ff722eac8777a7a200937ed_1175383_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-1_hu35beffe17ff722eac8777a7a200937ed_1175383_200x150_fit_q90_box.jpg" width="195" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-17_huf85a9313afdcca0a53ff5dff7f158cbc_910548_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-17_huf85a9313afdcca0a53ff5dff7f158cbc_910548_200x150_fit_q90_box.jpg" width="85" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-2_hu7fe92ed9a77a1705fc1de3c1c9ddad1a_318271_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-2_hu7fe92ed9a77a1705fc1de3c1c9ddad1a_318271_200x150_fit_q90_box.jpg" width="200" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-3_hudee5bdc267924a2e4879029a34a227db_280735_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-3_hudee5bdc267924a2e4879029a34a227db_280735_200x150_fit_q90_box.jpg" width="200" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-4_hub38fa695b3c84af3db03e3f62081ecd3_509017_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-4_hub38fa695b3c84af3db03e3f62081ecd3_509017_200x150_fit_q90_box.jpg" width="88" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-5_hu35beffe17ff722eac8777a7a200937ed_702417_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-5_hu35beffe17ff722eac8777a7a200937ed_702417_200x150_fit_q90_box.jpg" width="161" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-6_hu5f1c0d3ee872501368693d8d61ead517_1280967_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-6_hu5f1c0d3ee872501368693d8d61ead517_1280967_200x150_fit_q90_box.jpg" width="123" height="150" alt="Pantalla" title="Pantalla"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-7_hu4c6b1cff5896835ba12bcdbd10a61154_479422_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-7_hu4c6b1cff5896835ba12bcdbd10a61154_479422_200x150_fit_q90_box.jpg" width="200" height="121" alt="Pantalla" title="Pantalla"  class="lozad "></a></p>
<figcaption>Pantalla</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-8_hu0c7cb0f17f93434647fb92fef31e27d6_1496173_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-8_hu0c7cb0f17f93434647fb92fef31e27d6_1496173_200x150_fit_q90_box.jpg" width="200" height="132" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-9_hub76190b181ca5123a23a87132492e009_898001_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-9_hub76190b181ca5123a23a87132492e009_898001_200x150_fit_q90_box.jpg" width="172" height="150" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-14_hu770e0593584802be6570325a809ba12d_269160_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-14_hu770e0593584802be6570325a809ba12d_269160_200x150_fit_q90_box.jpg" width="200" height="150" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-15_hu6fb8a55692bb8bbc1e65ec1b48849a6c_908665_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-15_hu6fb8a55692bb8bbc1e65ec1b48849a6c_908665_200x150_fit_q90_box.jpg" width="98" height="150" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-16_hu4251522e319ef23c1f84b3f061b5f6eb_299706_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Pantalla parte trasera"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-16_hu4251522e319ef23c1f84b3f061b5f6eb_299706_200x150_fit_q90_box.jpg" width="200" height="150" alt="Pantalla parte trasera" title="Pantalla parte trasera"  class="lozad "></a></p>
<figcaption>Pantalla parte trasera</figcaption>
</figure>
</div>
<p>Este modelo de monitor incluye dos puertos USB 2.0 en la parte trasera, tiene utilidad en un ordenador de escritorio que esté debajo de la mesa para tener unos puertos USB más cerca del escritorio con un concentrador USB.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-10_hu6012b0274d1c2e4a93f4772d26698cfb_1198229_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Conexiones"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-10_hu6012b0274d1c2e4a93f4772d26698cfb_1198229_200x150_fit_q90_box.jpg" width="111" height="150" alt="Conexiones" title="Conexiones"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-11_huf31deadad9575a5a47cf159677746baf_683488_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Conexiones"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-11_huf31deadad9575a5a47cf159677746baf_683488_200x150_fit_q90_box.jpg" width="148" height="150" alt="Conexiones" title="Conexiones"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-12_hu89663704bf09451cb41f9a085b70511a_327929_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Conexiones"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-12_hu89663704bf09451cb41f9a085b70511a_327929_200x150_fit_q90_box.jpg" width="200" height="150" alt="Conexiones" title="Conexiones"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-13_hu4952d1a7aea5c6f00208016d52312f8b_388883_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Conexiones"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-review-13_hu4952d1a7aea5c6f00208016d52312f8b_388883_200x150_fit_q90_box.jpg" width="200" height="150" alt="Conexiones" title="Conexiones"  class="lozad "></a></p>
<figcaption>Conexiones</figcaption>
</figure>
</div>
<p>Los botones para ajustar los parámetros del monitor y OSD están detrás del monitor y el piloto indicador de encendido en un lateral de modo que en un ambiente de luz oscuro no molesta.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-1_hud9a53ae19cee97dc06a5f9c4da3df33a_1879740_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-1_hud9a53ae19cee97dc06a5f9c4da3df33a_1879740_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-2_hu3587e460d2d3ce72477334026d729564_1648277_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-2_hu3587e460d2d3ce72477334026d729564_1648277_200x150_fit_q90_box.jpg" width="200" height="142" alt="OSD" title="OSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-3_hu1ec171620fcb9e8476e22dc18178c8ae_988950_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-3_hu1ec171620fcb9e8476e22dc18178c8ae_988950_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-4_huf5f5aba6d1e345ec47e20cf299c18c36_957019_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-4_huf5f5aba6d1e345ec47e20cf299c18c36_957019_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-5_hufc25dae3825189cfbc6cdcfb2dc6653f_874112_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-5_hufc25dae3825189cfbc6cdcfb2dc6653f_874112_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-6_hud549192c8b53bae4d7ce7cf85e5ee1fd_945105_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-6_hud549192c8b53bae4d7ce7cf85e5ee1fd_945105_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-7_hua5708966aeee02c4db192c14ce614dd5_1369055_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-7_hua5708966aeee02c4db192c14ce614dd5_1369055_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-8_hub8d6af5c5d53d57e27ac1be88028cbf4_344894_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="OSD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-osd-8_hub8d6af5c5d53d57e27ac1be88028cbf4_344894_200x150_fit_q90_box.jpg" width="200" height="150" alt="OSD" title="OSD"  class="lozad "></a></p>
<figcaption>Configuración en pantalla (OSD)</figcaption>
</figure>
</div>
<p>Habitualmente estoy trabajando con un portátil MacBook Pro con pantalla retina y anteriormente he usado un Sony VAIO E 14P con panel TN de resolución 1600x900 y un monitor <a href="https://www.lg.com/hk_en/monitor/lg-E2351VR-home">LG 2351</a> también TN de resolución 1920x1080. Con respecto a los dos paneles TN que he usado hasta el momento la mejora es apreciable en sus ángulos de visión, colores más intensos, este es el motivo de requerir un panel tipo IPS. Si tengo que destacar algo del MacBook es la pantalla, la pantalla del BenQ cumple pero al no ser retina la diferencia es clara, aún conservando buena vista la definición del texto no es mala pero no llega a la calidad de la pantalla del MacBook, eso si en cuanto a colores no tiene nada que envidiar a la pantalla del Mac.</p>
<h3 id="análisis">Análisis</h3>
<p>Después de un tiempo de uso ya veré como son las impresiones, las primeras impresiones son buenas aunque viniendo de una pantalla retina no tanto. Si el texto resultase demasiado pequeño según las preferencias el MacBook permite reducir la resolución a 2048x1152, 1600x900, 1080p o 720p. Si se desea un monitor UHD que tenga HDMI 2.0 a 60 Hz y en esa resolución casi pensando en las 32”. Con el monitor externo no tengo que tener la pantalla tan cerca ni tener la cabeza agachada como con el portátil con lo que la postura corporal y de espalda es mejor para evitar cansancios y dolores que con el uso continuado pueden surgir, la verdad es que lo he notado ya desde el primer momento. Otra cosa que me gusta es que su fuente de alimentación está integrada con lo que no hay un transformador encima de la mesa y sus respectivos cables.</p>
<p>Con la resolución de 2560x1440 se puede visualizar más información al mismo tiempo y es más cómodo trabajar en una misma aplicación a pantalla completa o poder ver dos aplicaciones en primer plano. Se nota y mucho el espacio extra en la pantalla al trabajar con varias de las aplicaciones que uso habitualmente como editor de textos, navegador web y terminal.</p>
<p>La primera impresión es que un monitor de 27&quot; es grande pero ya me han comentado que es cuestión de acostumbrase y que dentro de poco me parecerá lo normal o incluso pequeño, de hecho ya hay monitores de 32&quot; para esa gente que aún lo quiere más grande. A la espera del Intel NUC tendré monitor que me parece grande pero un equipo que cabe en la palma de la mano. Comparado con la pantalla retina del MacBook las cosas no se ven tan definidas, un monitor de 27&quot; con pantalla retina no he visto salvo los Mac. Con 27&quot; en UHD tampoco se considera HiDPI y se queda en 163 dpi contra los 226 del Mac. Para que un monitor de 27&quot; tenga similar definición que con una pantalla retina la resolución debería ser del doble, 5120x2880, con esto alcanzaría unos 216 dpi y ya se consideraría HiDPI aunque habría que escalar la resolución en la configuración del ordenador ya que en la resolución nativa el texto se vería muy pequeño.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-1_hu401b9ddc58296b74eb4ee4f4571958d9_930052_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen en la pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-1_hu401b9ddc58296b74eb4ee4f4571958d9_930052_200x150_fit_q90_box.jpg" width="200" height="150" alt="Imagen en la pantalla" title="Imagen en la pantalla"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-2_hu8c32db1ee813d06b996d270fbf4ad8db_835758_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen en la pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-2_hu8c32db1ee813d06b996d270fbf4ad8db_835758_200x150_fit_q90_box.jpg" width="200" height="150" alt="Imagen en la pantalla" title="Imagen en la pantalla"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-3_hu59e0bb2772fe7415a47b097264530151_3075147_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen en la pantalla"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-3_hu59e0bb2772fe7415a47b097264530151_3075147_200x150_fit_q90_box.jpg" width="200" height="150" alt="Imagen en la pantalla" title="Imagen en la pantalla"  class="lozad "></a></p>
<figcaption>Imagen en la pantalla</figcaption>
</figure>
</div>
<p>Este monitor tiene los botones de ajustes detrás del monitor marcados con unos indicadores en el frontal para encontrar su posición, en algún sitio se comenta que esto es algo incómodo para acertar a pulsar el botón adecuado. En lo que probado no me ha resultado nada incómodo y los botones me han parecido perfectos. Dado que el monitor tiene altavoces se le puede enviar sonido por el mismo cable HDMI que envía la señal de vídeo y luego con un jack de 3.5mm desde el monitor enviarlo a unos altavoces que den mejor calidad de sonido, esto me permite conectar un cable menos al ordenador y que la mesa no quede cubierta de cables. Aunque con esta opción al menos un Mac no permite ajustar el volumen hay que hacerlo desde los altavoces, por fortuna tengo unos altavoces con regulador de volumen.</p>
<p>Las fugas de luz o <em>bleeding</em> es otro de los posibles problemas de un monitor, por la tecnología de retoiluminación led hace que en condiciones oscuras los negros aparezcan como grises y que en los bordes de la pantalla se noten zonas un poco iluminadas al no bloquearse por completo la retoiluminación. Ya era consciente de este problema y no me sorprende que el que me ha llegado a mi tenga, no se si será mucho o poco porque no puedo comparar pero no me ha parecido excesivo. Sin píxeles muertos o vagos sin mucha fuga de luz me doy por contento. Por el momento tampoco he notado retención de imagen.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-4_hu1007699af4c68f3983c7d58a2194e36f_132667_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Bleeding en ambiente oscuro"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-4_hu1007699af4c68f3983c7d58a2194e36f_132667_200x150_fit_q90_box.jpg" width="200" height="150" alt="Bleeding en ambiente oscuro" title="Bleeding en ambiente oscuro"  class="lozad "></a></p>
<figcaption>Bleeding en ambiente oscuro</figcaption>
</figure>
</div>
<p>Con una resolución QHD hay más espacio que en una Full HD que agradecen los programadores, diseñadores y gente que pasa mucho tiempo delante de una pantalla trabajando en tareas relacionadas con múltiples documentos o aplicaciones. Por ejemplo, con un IDE es posible visualizar el código fuente de dos archivos o visualizar en primer plano el IDE, navegador y terminal al mismo tiempo. Las personas que trabajan con gráficos pueden visualizar imágenes más grandes ya sea en <a href="https://www.adobe.com/es/products/photoshop.html">Photoshop</a>, <a href="https://www.gimp.org/">GIMP</a>, <a href="https://inkscape.org/es/">Inkscape</a>, <a href="https://www.openshot.org/">OpenShot</a> y herramientas similares.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-5_hu80c91f4bcd45c1f509774c272454a4b3_2497995_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Espacio en resolución QHD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-5_hu80c91f4bcd45c1f509774c272454a4b3_2497995_200x150_fit_q90_box.jpg" width="200" height="113" alt="Espacio en resolución QHD" title="Espacio en resolución QHD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-6_hu9f691abbd5d37e28f1f0a98cd6cdd9ee_428402_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Espacio en resolución QHD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-6_hu9f691abbd5d37e28f1f0a98cd6cdd9ee_428402_200x150_fit_box_3.png" width="200" height="113" alt="Espacio en resolución QHD" title="Espacio en resolución QHD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-7_hu22e0ba7774faf3602d24903c78848b09_932865_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Espacio en resolución QHD"><img src="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/images/benq-pd2700q-screen-7_hu22e0ba7774faf3602d24903c78848b09_932865_200x150_fit_box_3.png" width="200" height="113" alt="Espacio en resolución QHD" title="Espacio en resolución QHD"  class="lozad "></a></p>
<figcaption>Espacio en resolución QHD</figcaption>
</figure>
</div>
<p>En un futuro probablemente aparezcan nuevos monitores que soporten HDR y con resolución retina que supondrá otro salto en la calidad de la imagen. Me va a quedar la duda de si un monitor con resolución UHD de 27 pulgadas bajando la resolución sería una buena opción en cuanto a definición de texto, se suele comentar que no, usar una resolución escalada del panel no es lo mismo que en la resolución nativa pero me gustaría experimentarlo. Al menos en el Mac de resolución nativa 2560x1440 cambiar a 1600x900 se sigue viendo perfectamente el texto y en este BenQ de 27&quot; bajando la resolución no aprecio que el texto se vea peor. En cualquier caso los monitores UHD por el momento tienen un precio mayor, más del doble o al menos unos cientos de euros más según el modelo comparado, y este BenQ PD2700Q es de buena calidad acorde a su precio mayor que algunos otros QHD y que muchos Full HD pero de todas formas asequible para alguien que le da buen uso.</p>
<h3 id="detección-de-píxeles-muertos-o-vagos">Detección de píxeles muertos o vagos</h3>
<p>Es recomendable realizar una primera prueba al monitor para buscar píxeles muertos, que no se encienden, o vagos, que permanecen encendidos todo el tiempo con el color de un componente. El siguiente test se compone de varias imágenes en los colores básicos (negro, blanco, azul, rojo y verde) que visualizadas individualmente a pantalla completa muestran si algún pixel es defectuoso. Que haya un pixel defectuoso es molesto ya que basta para que haya solo uno y sepas donde está entre los casi 3 millones que tiene el monitor para que estés fijándote constantemente en él, más si se encuentra en el área central de la pantalla. También conviene informarse antes de comprar acerca de la garantía que ofrece cada fabricante respecto a los píxeles muertos, algunos toleran y no aceptan la devolución con cierto número de píxeles que permanecen encendidos, apagados o algún subpixel estropeado.</p>
<ul>
<li><a href="https://www.benq.com/en-us/support/downloads-faq/faq/product/application/dead-pixel-policy.html">BenQ LCD Monitor Pixel Policy</a></li>
<li><a href="https://jasonfarrell.com/misc/deadpixeltest.php">Imágenes de prueba para detectar píxeles muertos o vagos</a></li>
</ul>
<h3 id="vídeos-de-prueba">Vídeos de prueba</h3>
<p>Para probar la calidad del monitor (o televisor) en cuanto a colores o resolución <a href="https://www.youtube.com/results?search_query=4k&#43;video&#43;test">en YouTube hay varios</a>, uno de ellos de ejemplo es este pudiendo seleccionar la calidad desde 720p (HD), 1080p (FHD, 1K), 1440p (QHD, 2K) y 2160p (UHD, 4K). Lógicamente para apreciar las diferencias de calidad con respecto a una resolución más baja hay que tener un monitor o televisor que soporte la resolución más alta. Esto da una idea de como se ve una película, vídeo o imágenes. Las tareas ofimáticas no es lo mismo que ver vídeos, en UHD y usando escalado el texto gracias a su mayor PPI en el mismo tamaño que un QHD se ve más definido y claro. Sin embargo, el escalado aún presenta problemas ya que no todas las aplicaciones está preparadas.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/LXb3EKWsInQ" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="switch-hdmi-y-cables-monitor-con-el-ordenador-y-consola">Switch HDMI y cables, monitor con el ordenador y consola</h3>
<p>Si el monitor es compartido tanto por el <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">ordenador como un Intel NUC</a> como por <a href="https://picodotdev.github.io/blog-bitix/2019/09/desempaquetado-de-playstation-4-slim-de-1-tb/">una consola como la PlayStation 4 como muestro en su desempaquetado</a> es necesario un adaptador o <em>switch</em> HDMI de múltiples entradas y una salida para usar ambos sin necesidad de conectar y desconectar cables, no son caros y ofrecen mucha comodidad, con un botón se alterna entre la entrada del ordenador y la consola, además detecta la entrada y se cambia automáticamente.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08QCYXNPC&amp;linkId=ecbc49eaab7716ebc63e4e7c7b7b91b6" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00SX0QKUS&amp;linkId=f2015c3d24868b088b801dc03f6638de" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07RY2X9LF&amp;linkId=f5c9c155adf728e8d3217ab7e723d14c" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00NO73MUQ&amp;linkId=3954e70941543ecb9ada5c76d26024e9" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="soporte-vesa">Soporte VESA</h3>
<p>En todos los modelos he buscado que sea compatible con la norma VESA 100x100 por si en un futuro lo pongo en uno soporte de modo que el pie no ocupe sitio en la mesa. La peana de algunos monitores no soportan ajustes en altura, inclinación, ajuste laterales o modo vertical pero con un soporte compatible con VESA se puede suplir la carencia además de evitar que la peana ocupe espacio. Con un soporte tienen la ventaja de que se puede ajustar la posición del monitor muy fácilmente. Estos soportes funcionan con una mordaza para anclarlos a la mesa.</p>
<p>Algunos soportes compatibles con VESA que he mirado son los siguientes.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B079YQQDT2&amp;linkId=de98aa0a1a642d8b7b8bd36c4ca7ca4f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B079YSGQKW&amp;linkId=d21eaafcd8bdff06c18668e60d08e71a" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="_hub_-de-puertos-usb"><em>Hub</em> de puertos USB</h3>
<p>Teniendo el monitor un <em>hub</em> USB 2.0 no merece la pena un <em>hub</em> externo USB 3.0 o 3.1, sin embargo, con otros monitores puede ser una opción como con el PD2500Q o el PD2700U. Los discos duros externos que tengo son USB 2.0 y por limitaciones del disco duro si fuesen 3.0 el rendimiento adicional no se si sería mucho mayor. Hay concentradores de 4, 7 y 10 puertos pero con esta cantidad de puertos es recomendable que sea alimentado sobre todo si se conectan discos duros externos sin alimentación propia, también hay algunos con interruptor individual de encendido por puerto.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B076YKYHCB&amp;linkId=e509d54994bf9dc9718a7df94437ad72" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B076YRSWGW&amp;linkId=e89fd5bcd771439b69b8afe03922173e" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00LI4O9EA&amp;linkId=32d93c1c8151c7d869e32b061d0d08b4" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.sven.de/dpi/">Calculadora DPI y PPI</a></li>
<li><a href="https://en.wikipedia.org/wiki/HDMI#Version_comparison">HDMI Version Comparison</a></li>
<li><a href="https://es.wikipedia.org/wiki/High-Definition_Multimedia_Interface#HDMI_1.4">HDMI 1.4</a></li>
<li><a href="https://es.wikipedia.org/wiki/High-Definition_Multimedia_Interface#HDMI_2.0">HDMI 2.0</a></li>
<li><a href="http://www.tftcentral.co.uk">TFT Central</a></li>
<li><a href="http://www.lagom.nl/lcd-test/">LDC Monitor Test Images</a></li>
<li><a href="https://www.pchardwarehelp.com/guides/backlight-bleeding.php">Backlight Bleeding</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/</id>
        <title>Sun Microsystems cae, la adquiere Oracle</title>
        <updated>2018-10-19T11:00:00+02:00</updated>
        <published>2018-10-19T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/sun-microsystems.svg" width="300" height="131" alt="Sun Microsystems" title="Sun Microsystems"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/oracle.svg" width="300" height="42" alt="Oracle" title="Oracle"  class=""></p>
</div>
<p>Era enero del 2010 y se anunciaba que <a href="https://www.oracle.com/">Oracle</a> adquiría <a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun</a> (<em>Stanford University Network</em>) por unos 7400 millones de dólares. Sun Microsystems era asimilada por uno de los grandes entre el mundo empresarial que eliminaba a uno de sus competidores. Fue un hecho importante debido a varias de las tecnologías que había desarrollado Sun y poseía como aún a día de hoy uno de los lenguajes más populares para el desarrollo de software, Java, y otras tecnologías importantes que había adquirido hace no tanto tiempo como la base de datos <a href="https://www.mysql.com/">MySQL</a> competencia de Oracle.</p>
<p>Otras tecnologías de Sun relevantes eran el sistema operativo <a href="https://en.wikipedia.org/wiki/Solaris_%28operating_system%29">Solaris</a>, la tecnologías de depuración <a href="https://en.wikipedia.org/wiki/DTrace">DTraze</a>, el avanzado sistema de archivos <a href="https://en.wikipedia.org/wiki/ZFS">ZFS</a> utilizando a día de hoy en los sistemas <a href="https://es.wikipedia.org/wiki/Berkeley_Software_Distribution">BSD</a>, el paquete ofimático OpenOffice predecesora de <a href="https://www.libreoffice.org/">LibreOffice</a>, la herramienta de automatización de proyectos Hudson también predecesora de <a href="https://jenkins.io/">Jenkins</a>, el software de virtualización <a href="https://www.virtualbox.org/">VirtualBox</a> o la plataforma de microprocesadores <a href="https://en.wikipedia.org/wiki/SPARC">Sparc</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-microsystems-headquarters_hu0047ae3704eff84da97a4c805c18df06_114546_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Sun Microsystems Headquarters"><img src="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-microsystems-headquarters_hu0047ae3704eff84da97a4c805c18df06_114546_200x150_fit_q90_box.jpg" width="200" height="138" alt="Sun Microsystems Headquarters" title="Sun Microsystems Headquarters"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-microsystems-workstation_hud75c3683ebd46266a26af929273fab5a_230774_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Sun Microsystems Workstation"><img src="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-microsystems-workstation_hud75c3683ebd46266a26af929273fab5a_230774_200x150_fit_q90_box.jpg" width="200" height="133" alt="Sun Microsystems Workstation" title="Sun Microsystems Workstation"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-ultrasparc_hu084f1de89712954340ab17b0a1802bb0_54421_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Sun Microsystems sparc"><img src="https://picodotdev.github.io/blog-bitix/2018/10/sun-microsystems-cae-la-adquiere-oracle/images/sun-ultrasparc_hu084f1de89712954340ab17b0a1802bb0_54421_200x150_fit_q90_box.jpg" width="150" height="150" alt="Sun Microsystems sparc" title="Sun Microsystems sparc"  class="lozad "></a></p>
</figure>
</div>
<p>La adquisición de Oracle generó dudas por la cultura de empresa más cerrada que la que tenía Sun que contribuyó e influenció notablemente en el mundo tecnológico aún a día de hoy. Después de unos meses de la adquisición varias personas salieron de la compañía como <a href="https://en.wikipedia.org/wiki/James_Gosling">James Gosling</a> creador de Java, <a href="https://en.wikipedia.org/wiki/Tim_Bray">Tim Bray</a> creador de formato XML, <a href="https://en.wikipedia.org/wiki/Kohsuke_Kawaguchi">Kohsuke Kawaguchi</a> desarrollador principal de Hudson o <a href="https://en.wikipedia.org/wiki/Bryan_Cantrill">Bryan Cantrill</a> creador de DTrace.</p>
<p>¿Cuál fue el error o errores de Sun Microsystems para que teniendo unas tecnologías tan importantes tuviese problemas económicos como para que fuese vendida? Fue una de las empresas más afectadas por el estallido de la burbuja de las punto com y una pérdida importante de clientes grandes. Posiblemente el fallo fue que aún poseyendo grandes tecnologías y habiendo realizado importantes adquisiciones, algunas de dudoso acierto y muy caras, no fue capaz de rentabilizarlas económicamente, quizá que GNU/Linux le estuviese haciendo competencia al sistema Solaris u opciones más económicas como la arquitectura x86 a Sparc.</p>
<p>Oracle se ha deshecho muchas de las tecnologías a las que creía no sacar rentabilidad, otras como Java las ha seguido desarrollando creo en una buena dirección con la publicación de Java 7 y más tarde incluyendo cambios más importantes con <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">Java 8</a>, más recientemente <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java2-los-modulos/">Java 9</a>, <a href="https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/">10</a> y <a href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/">11</a>. Con Java EE ha dado también un paso importante para proporcionarle un modelo de desarrollo más abierto y rápido traspasando el desarrollo a la fundación Eclipse y adoptando un nuevo nombre de <a href="https://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE</a> a <a href="https://jakarta.ee/">Jakarta EE</a>. Algunas otras conserva como VirtualBox con buena salud.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="300" height="200" alt="Java" title="Java"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/solaris.svg" width="300" height="200" alt="Solaris" title="Solaris"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/sparc.svg" width="300" height="200" alt="Sparc" title="Sparc"  class="lozad "></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/libreoffice.svg" width="300" height="200" alt="LibreOffice" title="LibreOffice"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/mysql.svg" width="150" height="100" alt="MySQL" title="MySQL"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/virtualbox.svg" width="300" height="200" alt="VirtualBox" title="VirtualBox"  class="lozad "></p>
</figure>
</div>
<p>En el artículo <a href="https://www.wired.com/1995/12/java-saga/">The Java Saga</a> se comentan varios aspectos importantes de Java como que inicialmente este lenguaje estaba orientado a la electrónica donde la fiabilidad es más importante que la rapidez, C++ no era lo suficientemente fiable para lo que Gosling tenía en mente. Diseñaron la primera tableta electrónica, aún así pasa a ser la base de la emergente web para hacerla interactiva. Otro artículo interesante es <a href="https://www.networkworld.com/article/2268096/servers/the-downfall-of-sun-microsystems.html">The downfall of Sun Microsystems</a> en el que precisamente se comenta la falta de rentabilizar varias de sus tecnologías y la crisis de las punto com.</p>
<p>En <a href="https://www.britannica.com/topic/Sun-Microsystems-Inc">Sun Microsystems, Inc.</a> se indica que parte del éxito de Java se atribuye a la frase <em>«write once, run anywhere»</em> significando que un programa escrito en Java no tiene que se reescrito para cada sistema operativo de cada computadora. Si es ejecutado en una computadora UNIX, debería ejecutarse en una máquina Windows o Macintosh mediante el uso de la máquina virtual de Java o JVM. La <em>Java Virtual Machine</em> se proporcionaba con UNIX, Macintosh y otros sistemas asi como navegadores web como Netscape o Internet Explorer. Esa versatilidad hizo de Java un lenguaje popular al escribir aplicaciones para la web y para varios observadores disminuyendo la importancia de los sistemas operativos.</p>
<p>En 1997 Microsoft viéndose amenazada y haciendo uso de su técnica <a href="https://en.wikipedia.org/wiki/Embrace%2C_extend%2C_and_extinguish">adoptar, extender y extinguir</a> publicó una JVM que era incompatible con otras JVMs rompiendo de forma efectiva la promesa <em>«write once, run anywhere»</em> de los programas Java. En noviembre de 1998 la justicia instó a Microsoft a no distribuir más copias de su versión de Java.</p>
<p>En los artículos <a href="https://mailchi.mp/bonillaware/sun-microsystems-1?e=ccf70eee59">La historia de Sun Microsystems, 1ª Parte: Network is the computer</a> y <a href="https://mailchi.mp/bonillaware/sun-microsystems-2?e=ccf70eee59">La historia de Sun Microsystems. 2ª Parte: Write Once. Run Everywhere</a> se hace un buen repaso de la historia de esta empresa desde sus inicios e hitos más importantes asi como las personas que intervinieron en ellos pasando por los malos momentos hasta la finalmente adquisición por Oracle. Otro artículo y sus comentarios interesante es <a href="https://www.xataka.com/historia-tecnologica/asi-es-como-oracle-ha-sometido-a-sun-microsystems-a-una-muerte-larga-y-agonica">Así es como Oracle ha sometido a Sun Microsystems a una muerte larga y agónica</a>.</p>
<p>Por afinidad hacia el <em>open source</em> con su cultura de empresa la que hubiese preferido que adquiriese Sun es <a href="https://www.redhat.com/es">Red Hat</a> una compañía que ha demostrado que con el software libre se puede hacer negocio además de contribuir a la comunidad beneficiándose de ella al mismo tiempo, en el año 2012 alcanzó la cifra de 1000 millones de dólares de facturación y 2000 millones en el 2018. Sin embargo, no hubiese sido posible en ese momento porque Red Hat no era lo suficientemente grande como para hacer una adquisición de tal tamaño para con Sun Microsystems.</p>
<p>Sun Microsystems dejó una larga herencia que dura aún en día y frases legendarias y visionarias como <em>«the network is the computer»</em> atribuida a <a href="https://en.wikipedia.org/wiki/John_Gage">John Gage</a> o <em>«write once, run anywhere»</em> de Java.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</a></li>
<li><a href="https://en.wikipedia.org/wiki/Sun_acquisition_by_Oracle">Sun acquisition by Oracle</a></li>
<li><a href="https://en.wikipedia.org/wiki/Write_once">Write once, run anywhere</a></li>
<li><a href="https://gist.github.com/dbonillaf/d62dc83bc3747cccb0d885c9d4ad76f5">Links related with the history of Sun Microsystems</a></li>
<li><a href="https://www.arnnet.com.au/slideshow/334210/pictures-remember-rise-fall-sun-microsystems/">The rise and fall of Sun Microsystems</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/</id>
        <title>Proxy para microservicios con Spring Cloud Netflix y Zuul</title>
        <updated>2018-10-13T23:00:00+02:00</updated>
        <published>2018-10-13T23:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Teniendo una buen número de microservicios con múltiples instancias ofreciendo cada uno una API y en una ubicación diferente para simplificar la visión de los que actúen clientes de los microservicios se puede utilizar un <em>proxy</em>. Con un <em>proxy</em> es posible centralizar todas las peticiones, que sea éste el encargado de conocer la ubicación de todas las instancias de los microservicios y de hacer la llamada allí donde se encuentre cada una de ellas.</p>
<p>Entre las varias funcionalidades que proporcionar el proyecto <a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix</a> es esta de <em>proxy</em> mediante <a href="https://github.com/Netflix/zuul">Zuul</a>. Para hacer de <em>proxy</em> Zuul necesita tener una correspondencia entre URLs y servicios que realmente proporcionan la funcionalidad, una forma que tiene Zuul de conocer la ubicación de las instancias es utilizando el servicio de registro y descubrimiento <a href="https://github.com/Netflix/eureka">Eureka</a>. Además, Zuul como cliente de los microservicios posee la funcionalidad de <a href="https://github.com/Netflix/Hystrix">Hystrix</a> que implementa el patrón <em>circuit breaker</em> para tolerancia a fallos, <a href="https://github.com/Netflix/ribbon">Ribbon</a> para hacer balanceo de carga entre varias instancias de los microservicios a nivel de servidor además de reintentos cuando una instancia falla.</p>
<p>En el ejemplo que he utilizado para esta <a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">serie de artículos sobre Spring Cloud</a> hay un servicio que por defecto se inicia en el puerto <em>8080</em> y ofrece un <em>endpoint</em> <em>/</em> que devuelve un mensaje. Para crear un microservicio <em>proxy</em> con Zuul hay que crear una aplicación <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> anotar la clase principal con la anotación <em>@EnableZuulProxy</em> y proporcionar la configuración para la correspondencia de rutas y microservicios, además de las propiedades para hacer reintentos en caso de que un microservicio falle y de <em>timeouts</em> en caso de que se comporte no como se espera en cuanto tiempos de respuesta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.proxy</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableDiscoveryClient</span>&#10;<span class="nd">@EnableZuulProxy</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main (zuul).java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.12.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.proxy.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.1.12.RELEASE&#39;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2&#39;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//implementation(&#39;org.springframework.cloud:spring-cloud-starter-bus-amqp&#39;, excludeSpringBootStarterLogging)&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-zuul&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.retry:spring-retry:1.2.2.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Se puede establecer un tiempo máximo para establecer la conexión, de tiempo de petición, el número de reintentos en la misma instancia si falla o en otro número de instancias, el número máximo de conexiones y el número máximo de conexiones al mismo <em>host</em>. Todas ellas definibles en cada servicio de forma individual bajo las propiedades <em>hystrix.command.service</em> y <em>service.ribbon</em> donde <em>service</em> es el identificativo del servicio. Las rutas se indican bajo la propiedad <em>zuul.routes</em> con la relación identificativo del servicio y <em>path</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8095}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">zuul</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">routes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;/service/**&#39;</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">retryable</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">hystrix</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">command</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">service</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">execution</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">isolation</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">thread</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">timeoutInMilliseconds</span><span class="p">:</span><span class="w"> </span><span class="m">20000</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">circuitBreaker</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">requestVolumeThreshold</span><span class="p">:</span><span class="w"> </span><span class="m">4</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">errorThresholdPercentage</span><span class="p">:</span><span class="w"> </span><span class="m">50</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">service</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">ribbon</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ConnectTimeout</span><span class="p">:</span><span class="w"> </span><span class="m">1000</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ReadTimeout</span><span class="p">:</span><span class="w"> </span><span class="m">2000</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">MaxTotalHttpConnections</span><span class="p">:</span><span class="w"> </span><span class="m">100</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">MaxConnectionsPerHost</span><span class="p">:</span><span class="w"> </span><span class="m">100</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">MaxAutoRetries</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">MaxAutoRetriesNextServer</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ServerListRefreshInterval</span><span class="p">:</span><span class="w"> </span><span class="m">2000</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">OkToRetryOnAllOperations</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">retryableStatusCodes</span><span class="p">:</span><span class="w"> </span><span class="m">500</span><span class="p">,</span><span class="m">404</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>proxy.yml</span>
    </div>
</div>
<p>Dado que Zuul es un <em>proxy</em> para múltiples instancias de microservicios a cada microservicio hay que darle una ruta, cuando Zuul realiza la llamada a una instancia del microservicio se encarga de omitirla. En el ejemplo, la ruta en Zuul <em>/service/**</em> está asociada al microservicio <em>service</em> pero el servicio <em>service</em> ofrece su <em>endpoint</em> en <em>/</em>, Zuul se encarga de omitir la parte de la ruta para el <em>proxy</em> y hace la llamada a la ruta <em>/</em> como espera el microservicio.</p>
<p>Lógicamente los clientes deben contactar con el <em>proxy</em> en vez de con el microservicio directamente. Arrancado el servicio de descubrimiento y registro Eureka, el servidor de configuración de Spring Cloud, dos instancias del servicio y el <em>proxy</em> con Zuul haciendo las llamadas al <em>proxy</em> se observa que se obtiene el resultado del microservicio. Como en el ejemplo hay varias instancias del servicio Zuul realiza balanceo de carga entre ellas con Ribbon utilizando la política <em>round-robin</em> y el mensaje es diferente en cada una de las respuestas según la instancia invocada. Con Zuul además se consigue balanceo de carga a nivel de servidor que Ribbon solo ofrece a nivel de cliente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableDiscoveryClient</span>&#10;<span class="nd">@EnableCircuitBreaker</span>&#10;<span class="nd">@EnableHystrixDashboard</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">ClientService</span> <span class="n">service</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">ProxyService</span> <span class="n">proxy</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.password&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.service&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getService</span><span class="o">());</span>&#10;&#10;		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">20000</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="n">String</span> <span class="n">response</span> <span class="o">=</span> <span class="o">(</span><span class="n">configuration</span><span class="o">.</span><span class="na">getService</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">))</span> <span class="o">?</span> <span class="n">service</span><span class="o">.</span><span class="na">get</span><span class="o">()</span> <span class="o">:</span> <span class="n">proxy</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service response: %s%n&#34;</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;			<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">100</span><span class="o">);</span>&#10;		<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main (client).java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProxyService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixCommand</span><span class="o">(</span><span class="n">fallbackMethod</span> <span class="o">=</span> <span class="s">&#34;getFallback&#34;</span><span class="o">,</span> <span class="n">commandProperties</span> <span class="o">=</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.requestVolumeThreshold&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;4&#34;</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.errorThresholdPercentage&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;50&#34;</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;execution.isolation.thread.timeoutInMilliseconds&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;25000&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">})</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;proxy&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">resource</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s%s&#34;</span><span class="o">,</span> <span class="n">uri</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="s">&#34;/service&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Client</span><span class="o">.</span><span class="na">create</span><span class="o">().</span><span class="na">resource</span><span class="o">(</span><span class="n">resource</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProxyService.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8081&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8082&#34;</span>&#10;$ ./gradlew proxy:run --args<span class="o">=</span><span class="s2">&#34;--port=8085&#34;</span>&#10;$ ./gradlew client:run --args<span class="o">=</span><span class="s2">&#34;--service=proxy&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run.sh</span>
    </div>
</div>
<p>Las URLs del servicio en el microservicio y en el <em>proxy</em> son.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># Microservicio</span>&#10;$ curl http://192.168.1.4:8080/&#10;&#10;<span class="c1"># Microservicio en el proxy</span>&#10;$ curl http://192.168.1.4:8085/service&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>El cliente de ejemplo realiza peticiones al <em>proxy</em>, en la salida se muestra el resultado del balanceo de carga cuando hay varias instancias, cuando se añade una nueva instancia entra a formar parte del balanceo de carga. Otro beneficio de Zuul es que ofrece la funcionalidad de reintentos de modo que si una instancia de un servicio falla la petición se reintenta en otra. En el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/">Balanceo de carga y resilencia en un microservicio con Spring Cloud Netflix y Ribbon</a> usando solo Ribbon se observaba que cuando una instancia falla se le siguen haciendo peticiones hasta que la lista de instancias del servicio en Eureka se actualiza quitando la fallida, con Hystrix se obtiene la respuesta <em>fallback</em> pero no se evita completamente el error. Zuul puede ocultar el error provocado por una instancia que falla reintentado la petición en la misma nuevamente, en otra u otras instancias según se configure. El comportamiento con Zuul cuando una instancia falla se puede comparar con el comportamiento incluido en el <a href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/">artículo anterior usando en el cliente los microservicios directamente</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">$ ./gradlew client:run --args=&#34;--service=proxy&#34;&#10;... # initially two service instances (8080, 8081)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;... # new service instance, ./gradlew service:run --args=&#34;--port=8082&#34;&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8082/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8082/, value)&#10;... # kill service instance (8082), Ctrl+C&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Zuul además es capaz de proporciona otras muchas funcionalidades como:</p>
<ul>
<li>Autenticación</li>
<li>Seguridad</li>
<li>Recolección de métricas y monitorización</li>
<li>Pruebas de carga</li>
<li>Pruebas de verificación o <em>canary testing</em></li>
<li>Enrutado dinámico</li>
<li>Migración de servicio</li>
<li>Abandono de carga o <em>load shedding</em></li>
<li>Manejo de respuesta estática</li>
<li>Gestión de tráfico active/active</li>
</ul>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew-run.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/</id>
        <title>Balanceo de carga y resilencia en un microservicio con Spring Cloud Netflix y Ribbon</title>
        <updated>2018-10-12T20:46:00+02:00</updated>
        <published>2018-10-12T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/balanceo-de-carga-y-resilencia-en-un-microservicio-con-spring-cloud-netflix-y-ribbon/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Un servicio que recibe numerosas peticiones o es crítico para el funcionamiento de una aplicación es necesario escalarlo o crear múltiples instancias de él para atender toda la carga que se demanda o para que en caso de que una instancia falle haya otras disponibles que funcionen correctamente para atender las peticiones.</p>
<p>En este entorno de múltiples instancias se hace necesario un servicio de registro y descubrimiento que usando <a href="https://spring.io/">Spring</a>, <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> y <a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix</a> una implementación es <a href="https://github.com/Netflix/eureka">Eureka</a>. Una vez descubiertas las instancias que hay del servicio es necesario hacer balanceo de carga para conseguir escalabilidad y tolerancia a fallos, en el mismo proyecto de Spring Cloud Netflix para realizar balanceo de carga en el cliente se ofrece <a href="https://github.com/Netflix/ribbon">Ribbon</a>.</p>
<p>Hay varias formas de usar Ribbon una de ellas es con lo que denominan <em>feign client</em>, con <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/client/RestTemplate.html">Spring RestTemplate</a> o directamente con <em>LoadBalancerClient</em> que es la que muestro en este artículo. Este cliente con Ribbon obtiene del servicio de registro y descubrimiento la lista inicial de instancias de un servicios registrado con sus ubicaciones siendo el <em>host</em> en el que se encuentran y el puerto en el que ofrecen su servicio. Con esta lista y el estado de los servicios se realiza el balanceo de carga. Sin embargo, dada la naturaleza de los microservicios se pueden añadir con posterioridad más instancias de un servicio o algunas pueden empezar fallar, Ribbon se encarga de mantener actualizada la lista de instancias de un servicio.</p>
<p>Combinado con <a href="https://github.com/Netflix/Hystrix">Hystrix</a> un ejemplo de cliente que hace peticiones a un servicio es el siguiente. Para demostrar su funcionamiento el cliente realiza varias llamadas a un servicio cada unos pocos milisegundos balanceando la carga entre las instancias que existan. Si con posterioridad se añade una nueva instancia del servicio Ribbon al cabo de un tiempo de que haya sido iniciada lo añadirá a la lista y empieza a seleccionarla para enviarle peticiones. Si una instancia falla hasta que Eureka no marca la instancia como fuera de servicio y el cliente no actualiza su lista de instancias en el ejemplo de cliente seguirá enviando peticiones a la instancia fuera de servicio y con Hystrix utilizando el método de <em>fallback</em> como respuesta.</p>
<p>Ante el fallo de una instancia para evitar que temporalmente el cliente empiece a fallar cuando le redirige una petición este puede reintentar las peticiones en otra instancia, esta funcionalidad se proporciona con <a href="https://github.com/spring-projects/spring-retry">Spring Retry</a> o utilizando <a href="https://github.com/Netflix/zuul">Zuul</a> como <em>proxy</em>.</p>
<p>El cliente usa la clase <em>LoadBalancerClient</em> que en cada invocación del método <em>choose()</em> devuelve una instancia diferente de servicio realizando balanceo de carga utilizando el método <em>round-robin</em>. La clase <em>ServiceInstance</em> proporciona la URL de la instancia del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableDiscoveryClient</span>&#10;<span class="nd">@EnableCircuitBreaker</span>&#10;<span class="nd">@EnableHystrixDashboard</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">ClientService</span> <span class="n">service</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.password&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>&#10;&#10;		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">20000</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="n">String</span> <span class="n">response</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service response: %s%n&#34;</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;			<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">100</span><span class="o">);</span>&#10;		<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.net.URI</span><span class="o">;</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClientService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixCommand</span><span class="o">(</span><span class="n">fallbackMethod</span> <span class="o">=</span> <span class="s">&#34;getFallback&#34;</span><span class="o">,</span> <span class="n">commandProperties</span> <span class="o">=</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.requestVolumeThreshold&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;4&#34;</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.errorThresholdPercentage&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;50&#34;</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;execution.isolation.thread.timeoutInMilliseconds&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;1000&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">})</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Client</span><span class="o">.</span><span class="na">create</span><span class="o">().</span><span class="na">resource</span><span class="o">(</span><span class="n">uri</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ClientService.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.12.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.client.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.1.12.RELEASE&#39;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2&#39;</span><span class="o">))</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jersey.core:jersey-client:2.27&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jersey.inject:jersey-hk2:2.27&#39;</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>La clase del servicio y los comandos para iniciar el servicio de registro y descubrimiento, el servicio de configuración, las instancias del servicio en diferentes puertos y el cliente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@RestController</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;	<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;&#10;	<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;	<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="c1">// Timeout simulation&#10;</span><span class="c1"></span>		<span class="c1">//Thread.sleep(random.nextInt(2000));&#10;</span><span class="c1"></span>&#10;		<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (%s, %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8081&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8082&#34;</span>&#10;$ ./gradlew client:run</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run.sh</span>
    </div>
</div>
<p>Esta es la salida y funcionamiento del cliente realizando balanceado la carga entre las múltiples instancias y que ocurre cuando se añade una nueva o una empieza a fallar y se elimina de la lista.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">$ ./gradlew client:run&#10;... # initially two service instances (8080, 8081)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;... # new service instance, ./gradlew service:run --args=&#34;--port=8082&#34;&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8082/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8082/, value)&#10;... # kill service instance (8082), Ctrl+C&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Fallback&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Fallback&#10;... # service instances list is updated&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8081/, value)</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p><a href="https://github.com/Netflix/ribbon/blob/master/ribbon-core/src/main/java/com/netflix/client/config/CommonClientConfigKey.java">Ribbon posee numerosas propiedades de configuración</a> a nivel global para todos los clientes de servicios o de forma específica para cada servicio ya sea con la anotación <em>@RibbonClient</em> o mediante la configuración en archivos externos de Spring Boot. Algunas propiedades de configuración interesantes son las de <em>timeout</em> que permiten que un cliente no agote sus recursos esperando a que a los servicios que llama si tardan en responder y a su vez el cliente actuando de servidor recibe muchas llamadas de sus clientes. En un comando de Hystrix también se puede especificar un <em>timeout</em> de modo que si se realizan reintentos el tiempo total para Hystrix deberá ser superior que el tiempo total de todos los posibles reintentos teniendo en cuenta el <em>timeout</em> del cliente con Ribbon. Usando el cliente HTTP <a href="https://jersey.github.io/">Jersey</a> como en este caso también pueden establecerse <a href="https://jersey.github.io/apidocs/1.19.1/jersey/com/sun/jersey/api/client/Client.html"><em>timeouts</em> para una petición</a>.</p>
<p>El balanceo de carga que con Ribbon se realiza en el cliente es más sencillo que realizar el balanceo de carga en el servidor ya que no requiere una pieza más en la infraestructura pero requiere que el cliente tenga algo de lógica para hacer el balanceo de carga.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/</id>
        <title>Tolerancia a fallos en un cliente de microservicio con Spring Cloud Netflix y Hystrix</title>
        <updated>2019-10-10T19:00:00+01:00</updated>
        <published>2018-10-05T20:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Los microservicios son independientes unos de otros y se comunican mediante operaciones de red. Dado que las operaciones se realizan a través de un medio no confiable como la red, dada su naturaleza efímera y a que pueden fallar en los microservicios es importante que los clientes estén preparados ante posibles fallos.</p>
<p>Un patrón o técnica que se suele emplear es el de <a href="https://www.martinfowler.com/bliki/CircuitBreaker.html">Circuit Breaker</a>, en Java y con <a href="https://spring.io/">Spring</a> se ofrece en el proyecto <a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix</a> mediante <a href="https://github.com/Netflix/Hystrix">Hystrix</a> y <a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica">Javanica</a>. Este patrón soluciona dos problemas cuando un microservicio del que se depende falla y hace al microservicio que lo usa tolerante a fallos.</p>
<ul>
<li>Uno es que cuando un microservicio empieza a fallar es necesario dejar de hacerle peticiones para permitirle recuperarse si está saturado que provoca esos fallos. Cuando ocurre un fallo es posible realizar una acción en sustitución de la llamada al microservicio y devolver un valor alternativo como medida paliativa y hacer que el microsevicio afectado tenga la posibilidad de seguir ofreciendo su servicio aunque sea de forma degradada.</li>
<li>Otro problema es que el microservicio aunque no falle tarde demasiado en responder, se puede establecer un <em>timeout</em> que si se supera se deja de esperar e igualmente se realiza la acción de sustitución lo que evita que los microservicios que usan uno que tarda demasiado en responder agoten sus recursos y empiecen a fallar o tardar demasiado también.</li>
</ul>
<p>En ambos casos se evita que la cadena de microservicios empiece a fallar y con ello sistema completo. El proyecto <a href="https://dzone.com/articles/resilience4j-and-sentinel-two-open-source-alternat">Hystrix ha dejado de desarrollarse de forma activa</a> tal como aparece en el propio <a href="https://github.com/Netflix/Hystrix/blob/master/README.md">README.md</a> y como alternativa se recomienda usar <a href="https://github.com/resilience4j/resilience4j">Resilience4j</a> que además está diseñado para Java 8 y la programación funcional, en el artículo <a href="https://picodotdev.github.io/blog-bitix/2019/08/implementar-tolerancia-a-fallos-con-resilience4j/">Implementar tolerancia a fallos con Resilience4j</a> muestro su implementación.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix_hub9140d7d7b18b1dc3937691a78958e9a_86330_2560x1440_fit_box_3.png" width="640" height="225" alt="Hystrix" title="Hystrix"  class="lozad "></p>
</figure>
</div>
<p>El patrón <em>circuit breaker</em> se denomina así ya que implementa una lógica similar a un circuito eléctrico. El circuito en su estado normal está cerrado y se realizan las llamadas al microservicio servidor. Si el microservicio servidor empieza a fallar se llama a la acción alternativa con su valor, si se supera un umbral de errores el circuito pasa a estado abierto y se dejan de hacer llamadas al microservicio servidor. Cada cierto tiempo definido se realiza una llamada al servicio servidor para comprobar su estado de forma que si responde correctamente el circuito pasa a estado cerrado nuevamente y las siguientes llamadas se realizan al microservicio servidor dejándose de utilizar la acción alternativa.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-diagram_hu4845d342695fc4ba4f8fa8d72c767f7b_90482_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama del patrón circuit breaker"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-diagram_hu4845d342695fc4ba4f8fa8d72c767f7b_90482_300x200_fit_box_3.png" width="127" height="200" alt="Diagrama del patrón circuit breaker" title="Diagrama del patrón circuit breaker"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-states_hu56e2a01b6636c9453b9193ae50db8c8e_29040_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama de estados"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-states_hu56e2a01b6636c9453b9193ae50db8c8e_29040_300x200_fit_box_3.png" width="222" height="200" alt="Diagrama de estados" title="Diagrama de estados"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix-fallback_hu341ff0d18f5e14bb81f44a2d6d1769ba_44880_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Fallback del patrón circuit breaker"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/hystrix-fallback_hu341ff0d18f5e14bb81f44a2d6d1769ba_44880_300x200_fit_box_3.png" width="300" height="197" alt="Fallback del patrón circuit breaker" title="Fallback del patrón circuit breaker"  class="lozad "></a></p>
<figcaption>Diagrama del patrón circuit breaker, de estados y método fallback</figcaption>
</figure>
</div>
<p>Para utilizar Hystrix como implementación del patrón <em>circuit breaker</em> en una aplicación Java con <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> el método que realiza la llamada al microservicio servidor ha de  encapsularse en un método anotado con la anotación <a href="https://netflix.github.io/Hystrix/javadoc/com/netflix/hystrix/HystrixCommand.html">@HystrixCommand</a>, como parámetro se indica un método con la acción alternativa o <em>fallback</em> que obtiene un valor en los fallos. También se puede indicar el <em>tiemout</em> de espera antes de considerar que la llamada ha fallado con la propiedad <em>execution.isolation.thread.timeoutInMilliseconds</em>. Igualmente se pueden indicar los valores para abrir el circuito con <em>circuitBreaker.requestVolumeThreshold</em> y <em>circuitBreaker.errorThresholdPercentage</em>. Esos son los básicos para utilizar este patrón de tolerancia a fallos. Tiene <a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration">algunos valores adicionales más que se pueden configurar</a> para adaptar el patrón a los valores óptimos de la aplicación.</p>
<p>En el ejemplo el cliente en un bucle realiza las llamadas al servicio con un método <em>get()</em> anotado con <em>@HystrixCommand</em>. En este método se encapsula la petición HTTP que puede fallar, utilizando la librería <a href="https://jersey.github.io/">Jersey</a> y obtenida la ubicación de una instancia del servicio a su vez del servicio de registro y descubrimiento <a href="https://github.com/Netflix/eureka">Eureka</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClientService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixCommand</span><span class="o">(</span><span class="n">fallbackMethod</span> <span class="o">=</span> <span class="s">&#34;getFallback&#34;</span><span class="o">,</span> <span class="n">commandProperties</span> <span class="o">=</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.requestVolumeThreshold&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;4&#34;</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;circuitBreaker.errorThresholdPercentage&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;50&#34;</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@HystrixProperty</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;execution.isolation.thread.timeoutInMilliseconds&#34;</span><span class="o">,</span> <span class="n">value</span> <span class="o">=</span> <span class="s">&#34;1000&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">})</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Client</span><span class="o">.</span><span class="na">create</span><span class="o">().</span><span class="na">resource</span><span class="o">(</span><span class="n">uri</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ClientService.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableDiscoveryClient</span>&#10;<span class="nd">@EnableCircuitBreaker</span>&#10;<span class="nd">@EnableHystrixDashboard</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">ClientService</span> <span class="n">service</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.password&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>&#10;&#10;		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">20000</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="n">String</span> <span class="n">response</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service response: %s%n&#34;</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;			<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">100</span><span class="o">);</span>&#10;		<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.12.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.client.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.1.12.RELEASE&#39;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2&#39;</span><span class="o">))</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-actuator&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-config&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-ribbon&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jersey.core:jersey-client:2.27&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jersey.inject:jersey-hk2:2.27&#39;</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>El circuito se abre cuando el número de llamadas supera un umbral y un porcentaje de fallos, se han de cumplir las dos condiciones. Si el número de llamadas que se realizan no superan el umbral aunque todas fallen el circuito permanece cerrado. Ambos valores son personalizables con las propiedades <em>circuitBreaker.requestVolumeThreshold</em> y <em>circuitBreaker.errorThresholdPercentage</em>. El circuito permanece abierto al menos durante el tiempo indicado por <em>metrics.rollingStats.timeInMilliseconds</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@RestController</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;	<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;&#10;	<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;	<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="c1">// Timeout simulation&#10;</span><span class="c1"></span>		<span class="c1">//Thread.sleep(random.nextInt(2000));&#10;</span><span class="c1"></span>&#10;		<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (%s, %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<p>En la aplicación ejemplo hay un microservicio servidor y un microservicio cliente, iniciada una instancia de microservicio servidor y una instancia del microservicio cliente que implementa el patrón <em>circuit breaker</em> inicialmente las peticiones se realizarán correctamente si no ocurre un <em>timeout</em>. Si se finaliza el proceso del microservicio servidor las peticiones del cliente al servidor empezarán a fallar y este obtiene el valor alternativo del método <em>fallback</em>, si se supera el umbral de llamadas y de fallos el circuito pasa a estado abierto. Mientras el circuito permanezca abierto el cliente sondea con una petición cada cierto tiempo el estado del servidor, si el servicio servidor se inicia unos instantes después de que esté disponible el cliente con la petición de sondeo comprobará que el servidor funciona, se cerrará el circuito y el cliente empezará a obtener los valores devueltos por el microservicio servidor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">$ ./gradlew client:run&#10;...&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;... # kill service, Ctrl+C&#10;Service response: Fallback&#10;Service response: Fallback&#10;Service response: Fallback&#10;Service response: Fallback&#10;Service response: Fallback&#10;Service response: Fallback&#10;Service response: Fallback&#10;... # restart service&#10;Service response: Fallback&#10;Service response: Fallback&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;Service response: Hello world (http://192.168.1.4:8080/, value)&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Para monitorizar en tiempo real el estado del sistema y de los circuitos se ofrece un <em>dashboard</em> en el que visualizan el número de peticiones que se están realizando, las fallidas, el estado de los circuitos, las que fallan por <em>timeout</em> o las que fallan con error. Para tener acceso a esta página hay que incluir la dependencia <em>org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard</em>. La página <em>dashboard</em> está disponible en la dirección <em>http://localhost:8085/hystrix</em>. Este <em>dashboard</em> que ofrece Hystrix es muy básico y con un diseño mejorable, se pueden <a href="https://picodotdev.github.io/blog-bitix/2018/12/exponer-las-metricas-de-hystrix-en-grafana-con-prometheus-de-una-aplicacion-spring-boot/">exponer las métricas de Hystrix en Grafana con Prometheus</a> para tener un panel con exactamente la información que se desee en una gráficas mucho más vistosas además de observar los datos exactamente en el periodo de tiempo deseado.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-closed_huce59696db4bb781bd0e709b415bf52e8_382684_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Circuit breaker cerrado"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-closed_huce59696db4bb781bd0e709b415bf52e8_382684_300x200_fit_box_3.png" width="300" height="183" alt="Circuit breaker cerrado" title="Circuit breaker cerrado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-open_huce59696db4bb781bd0e709b415bf52e8_384418_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Circuit breaker abierto"><img src="https://picodotdev.github.io/blog-bitix/2018/10/tolerancia-a-fallos-en-un-cliente-de-microservicio-con-spring-cloud-netflix-y-hystrix/images/circuit-breaker-open_huce59696db4bb781bd0e709b415bf52e8_384418_300x200_fit_box_3.png" width="300" height="183" alt="Circuit breaker abierto" title="Circuit breaker abierto"  class="lozad "></a></p>
<figcaption>Estados del circuit breaker</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;$ ./gradlew client:run</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.martinfowler.com/bliki/CircuitBreaker.html">CircuitBreaker</a></li>
<li><a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.0.1.RELEASE/single/spring-cloud-netflix.html#_circuit_breaker_hystrix_clients">Circuit Breaker: Hystrix Clients</a></li>
<li><a href="https://github.com/Netflix/Hystrix/tree/master/hystrix-contrib/hystrix-javanica#configuration">Hyxtrix Configuration (1)</a></li>
<li><a href="https://github.com/Netflix/Hystrix/wiki/Configuration">Hyxtrix Configuration (2)</a></li>
<li><a href="http://www.javamagazine.mozaicreader.com/SeptemberOctober2018/Twitter">Java Magazine Sep/Oct 2018</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/</id>
        <title>Almacenar cifrados los valores de configuración sensibles en Spring Cloud Config</title>
        <updated>2018-09-30T01:40:00+02:00</updated>
        <published>2018-09-30T01:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Para no tener que hacer cambios en el código que implica recompilar la aplicación y generar de nuevos los artefactos al cambiar algunos valores de la aplicación se utilizan los archivos de configuración. Los archivos de configuración son archivos de texto plano que pueden seguir algún formato como <em>properties</em>, <em>xml</em> o <em>yaml</em>, externos a la aplicación pero que lee sus propiedades al iniciarse. Algunas propiedades de configuración de ejemplo pueden ser la cadena de conexión a una base de datos, el usuario y contraseña.</p>
<p>Dado que algunos valores de configuración son sensibles como en el ejemplo anterior la cadena de conexión, usuario y contraseña es recomendable por mayor seguridad almacenar estos valores cifrados y que la aplicación los descifre con la clave correspondiente al necesitar su valor original. Estos valores no deben estar en el código fuente para <a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/">evitar un problema de seguridad aún con el código fuente compilado</a>.</p>
<p><a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a> permite guardar los archivos de configuración con algunos valores cifrados. Hay varias posibilidades de configuración para guardar los datos cifrados: mediante clave simétrica, clave privada-pública, guardarlos en el servicio externo <a href="https://www.vaultproject.io/">Vault</a> de <a href="https://www.hashicorp.com/">Hashicorp</a>, mantenerlos cifrados solo en el almacenamiento persistente o transmitirlos cifrados y que sea el cliente el que los descifre.</p>
<p>Utilizando la forma más simple para mantener los datos cifrados con una clave simétrica en el servicio de configuración hay que mantener en una propiedad de configuración la clave simétrica para cifrar y descifrar los datos, <em>encrypt.key</em>. En este ejemplo la clave simétrica y las propiedades cifradas están en archivos de configuración diferentes pero incluidos en el mismo servidor de configuración. Esto no parece que aporte mucha seguridad ya que si se tiene acceso al archivo de configuración de un servicio con una propiedad cifrada probablemente se tenga acceso al archivo con la clave cifrada y la medida de seguridad no es útil. Sin embargo, esto permite al estar separados los archivos de configuración añadir el archivo con la propiedad cifrada a un repositorio público sin peligro siempre y cuando la clave de cifrado se mantenga en secreto. Los archivos de configuración de los servicios en el servidor de configuración se podrían añadir a un repositorio de Git.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">native</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">searchLocations</span><span class="p">:</span><span class="w"> </span><span class="l">file:./misc/config</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">encrypt</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">ma8FvTm1t8uWRlYE3ghPsQxxESaZwpOGdlsFwIyPNIWE25yNg1dsvvnd7orlZL9FH0qJyRkG8kcf5CBVdjmi8b2yxKzpXyfxpMXj</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>bootstrap.yml</span>
    </div>
</div>
<p>Definida la clave simétrica e iniciado el servidor de configuración este ofrece dos <em>endpoints</em> para cifrar y descifrar datos. Utilizando el de cifrado se obtiene el valor cifrado del dato sensible que se quiere proteger. Con el <em>endpoint</em> de descifrado se puede descifrar. Se observa que utilizando varias veces el <em>endpoint</em> de cifrado se devuelve en cada una un valor distinto, sin embargo, descifrando cada uno de estos valores con el <em>endpoint</em> de descifrado siempre se obtiene el valor original. Esto es debido seguramente a que en la operación de cifrado se utiliza la técnica del <em>salt</em> para que a los valores cifrados se les pueda aplicar un ataque de diccionario, el <em>salt</em> es incluido en el valor devuelto para que la operación de descifrado devuelva el valor original.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl localhost:8090/encrypt -d secret&#10;fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b&#10;$ curl localhost:8090/encrypt -d secret&#10;2b5ab02e4653bebb1b325e88eb9711df0e97e8f7efbbffc0dd0c5ae532dceedc&#10;$ curl localhost:8090/encrypt -d secret&#10;df06bcf1e36d910851a6e3f866d0f014388d3ddcb479b9f0e43194d7cfb5d72c&#10;&#10;$ curl localhost:8090/decrypt -d fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b&#10;secret&#10;$ curl localhost:8090/decrypt -d 2b5ab02e4653bebb1b325e88eb9711df0e97e8f7efbbffc0dd0c5ae532dceedc&#10;secret&#10;$ curl localhost:8090/decrypt -d df06bcf1e36d910851a6e3f866d0f014388d3ddcb479b9f0e43194d7cfb5d72c&#10;secret</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-1.sh</span>
    </div>
</div>
<p>El valor cifrado obtenido por este <em>endpoint</em> se puede guardar en los archivos de configuración entrecomillándolo y precediéndolo con la cadena <em>{cipher}</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">dev</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;{cipher}fb416133716acf5b6e3ffb64a396d521cd68fb0c2cb58727d5e938badefa942b&#39;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>client.yml</span>
    </div>
</div>
<p>En este caso el servicio al iniciarse obtiene su configuración del servicio de configuración, los datos se transmiten en forma plana sin cifrar y el cifrado utilizando en el servidor de configuración es transparente para el cliente. Accediendo al <em>endpoint</em> del servidor de configuración que devuelve la configuración de un servicio con una propiedad cifrada se observa que al obtener el valor se devuelve en texto plano al cliente, esta petición es la misma que hace el servicio para obtener su configuración, de modo que aunque la información está cifrada en el servidor de configuración se transmite al servicio sin cifrar en texto plano. En este ejemplo se utiliza el protocolo inseguro HTTP, lo recomendable es utilizar el protocolo HTTPS para cifrar el tráfico entre el servidor de configuración y el cliente de modo que los valores sensibles queden protegidos también en la transmisión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl http://localhost:8090/client/default.yml&#10;<span class="o">{</span>&#10;   <span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;client&#34;</span>,&#10;   <span class="s2">&#34;profiles&#34;</span>:<span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;default.yml&#34;</span>&#10;   <span class="o">]</span>,&#10;   <span class="s2">&#34;label&#34;</span>:null,&#10;   <span class="s2">&#34;version&#34;</span>:null,&#10;   <span class="s2">&#34;state&#34;</span>:null,&#10;   <span class="s2">&#34;propertySources&#34;</span>:<span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;name&#34;</span>:<span class="s2">&#34;file:misc/config/client.yml&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;source&#34;</span>:<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;server.port&#34;</span>:<span class="s2">&#34;</span><span class="si">${</span><span class="nv">port</span><span class="p">:</span><span class="nv">8085</span><span class="si">}</span><span class="s2">&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;management.endpoints.web.exposure.include&#34;</span>:<span class="s2">&#34;*&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;circuitBreaker.requestVolumeThreshold&#34;</span>:4,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;circuitBreaker.errorThresholdPercentage&#34;</span>:50,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;metrics.rollingStats.timeInMilliseconds&#34;</span>:10000,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;config.key&#34;</span>:<span class="s2">&#34;dev&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;config.password&#34;</span>:<span class="s2">&#34;secret&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;   <span class="o">]</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-2.sh</span>
    </div>
</div>
<p>Iniciado el servicio de descubrimiento, el de configuración y un servicio que tiene un dato cifrado de configuración el valor que obtiene está ya descifrado. En este caso el servicio <em>client</em> obtiene el valor de la propiedad <em>config.password</em> descifrado con el valor <em>secret</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;$ ./gradlew client:run</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">$ ./gradlew client:run&#10;...&#10;2018-09-30 00:56:08,193  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler [&#34;http-nio-8085&#34;]&#10;2018-09-30 00:56:08,283  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.tomcat.util.net.NioSelectorPool Using a shared selector for servlet write/read&#10;2018-09-30 00:56:08,689  INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8085 (http) with context path &#39;&#39;&#10;2018-09-30 00:56:08,691  INFO  netflix.eureka.serviceregistry.EurekaAutoServiceRegistration Updating port to 8085&#10;2018-09-30 00:56:08,695  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;io.github.picodotdev.blogbitix.springcloud.client.Main Started Main in 19.901 seconds (JVM running for 22.013)&#10;Valor de propiedad de configuración (config.key): dev&#10;Valor de propiedad de configuración (config.password): secret</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableDiscoveryClient</span>&#10;<span class="nd">@EnableCircuitBreaker</span>&#10;<span class="nd">@EnableHystrixDashboard</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">ClientService</span> <span class="n">service</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.key&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Valor de propiedad de configuración (%s): %s%n&#34;</span><span class="o">,</span> <span class="s">&#34;config.password&#34;</span><span class="o">,</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getPassword</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>&#10;&#10;<span class="nd">@Configuration</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultConfiguration</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${config.key}&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">key</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${config.password}&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">password</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getKey</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">key</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setKey</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getPassword</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">password</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPassword</span><span class="o">(</span><span class="n">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultConfiguration.java</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh, ./curl-1.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/</id>
        <title>Novedades y nuevas características de Java 11</title>
        <updated>2018-09-29T14:00:00+02:00</updated>
        <published>2018-09-28T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Java 11 es la primera versión de soporte extendido publicada o LTS bajo el nuevo ciclo de publicaciones que adoptó Java en la versión 9. Añade varias novedades importantes en cuanto a seguridad y elimina otras que en versiones anteriores ya fueron marcadas como desaconsejadas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En la plataforma Java era habitual que entre versión y versión mayor pasasen varios años normalmente 3 o más. Este ciclo de publicaciones no se adapta a las necesidades de todas las empresas, organizaciones y usuarios. Algunas empresas y usuarios desean ciclos de publicaciones más cortos quizá con no tantas novedades en cada uno de ellos pero sí de forma más constante incorporando mejoras. Otras organizaciones necesitan confiar en una versión que tenga un ciclo de soporte largo para sus aplicaciones.</p>
<p>Para adaptarse a ambos requerimientos Java a partir de Java 9 adoptó un nuevo ciclo de publicaciones siendo cada seis meses para los que desean mejoras de forma regular y cada tres años para los que necesitan soporte extendido. <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-de-java-9-mas-alla-de-la-modularidad/">Java 9 incorporó la esperada modularización</a> que cambia la forma de desarrollo de las aplicaciones con numerosas mejoras. <a href="https://picodotdev.github.io/blog-bitix/2018/03/novedades-de-java-10/">Java 10 añadió la inferencia de tipos para variables locales</a> con la palabra reservada <em>var</em>. Ahora Java 11 siendo una versión de soporte extendido o LTS, el soporte de Java 11 está planificado que dure hasta 2023 y hasta 2026 de forma extendida lo que son 8 años de soporte.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="introducción">Introducción</h3>
<p>En esta nueva versión de Java 11 publicada el 25 de septiembre de 2018 las novedades no son tan relevantes como lo fuero Java 8 con las <em>lambadas</em> y Java 9 con los módulos pero continúa con las mejoras incrementales y proporciona una versión LTS en la que empresas grandes confiarán como base para sus desarrollos.</p>
<ul>
<li><a href="https://openjdk.java.net/projects/jdk/11/">Características de Java 11</a></li>
<li><a href="https://www.oracle.com/java/technologies/javase/11-relnote-issues.html">Notas de publicación de Java 11</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/docs/api/">Java 11 Javadoc</a></li>
</ul>
<p>Las mejoras incluídas en esta versión son:</p>
<ul>
<li>181: <a href="http://openjdk.java.net/jeps/181">Nest-Based Access Control</a></li>
<li>309: <a href="http://openjdk.java.net/jeps/309">Dynamic Class-File Constants</a></li>
<li>315: <a href="http://openjdk.java.net/jeps/315">Improve Aarch64 Intrinsics</a></li>
<li>318: <a href="http://openjdk.java.net/jeps/318">Epsilon: A No-Op Garbage Collector</a></li>
<li>320: <a href="http://openjdk.java.net/jeps/320">Remove the Java EE and CORBA Modules</a></li>
<li>321: <a href="http://openjdk.java.net/jeps/321">HTTP Client (Standard)</a></li>
<li>323: <a href="http://openjdk.java.net/jeps/323">Local-Variable Syntax for Lambda Parameters</a></li>
<li>324: <a href="http://openjdk.java.net/jeps/324">Key Agreement with Curve25519 and Curve448</a></li>
<li>327: <a href="http://openjdk.java.net/jeps/327">Unicode 10</a></li>
<li>328: <a href="http://openjdk.java.net/jeps/328">Flight Recorder</a></li>
<li>329: <a href="http://openjdk.java.net/jeps/329">ChaCha20 and Poly1305 Cryptographic Algorithms</a></li>
<li>330: <a href="http://openjdk.java.net/jeps/330">Launch Single-File Source-Code Programs</a></li>
<li>331: <a href="http://openjdk.java.net/jeps/331">Low-Overhead Heap Profiling</a></li>
<li>332: <a href="http://openjdk.java.net/jeps/332">Transport Layer Security (TLS) 1.3</a></li>
<li>333: <a href="http://openjdk.java.net/jeps/333">ZGC: A Scalable Low-Latency Garbage Collector (Experimental)</a></li>
<li>335: <a href="http://openjdk.java.net/jeps/335">Deprecate the Nashorn JavaScript Engine</a></li>
<li>336: <a href="http://openjdk.java.net/jeps/336">Deprecate the Pack200 Tools and API</a></li>
</ul>
<h3 id="nuevas-características">Nuevas características</h3>
<h4 id="eliminación-de-módulos-java-ee-y-corba">Eliminación de módulos Java EE y CORBA</h4>
<p>Se eliminan del JDK paquetes ya desaconsejados hace varias versiones anteriores y que no eran muy usados en cualquier caso. Estos paquetes son los de CORBA una forma de llamada a procedimientos remotos que se utilizó como alternativa a RMI pero que nunca tuvo un uso extendido prefiriéndose SOAP o más recientemente interfaces REST.</p>
<p>La lista de paquetes eliminados son los siguientes.</p>
<ul>
<li><em>java.xml.ws</em> (JAX-WS, plus the related technologies SAAJ and Web Services Metadata)</li>
<li><em>java.xml.bind</em> (JAXB)</li>
<li><em>java.activation</em> (JAF)</li>
<li><em>java.xml.ws.annotation</em> (Common Annotations)</li>
<li><em>java.corba</em> (CORBA)</li>
<li><em>java.transaction</em> (JTA)</li>
<li><em>java.se.ee</em> (Aggregator module for the six modules above)</li>
<li><em>jdk.xml.ws</em> (Tools for JAX-WS)</li>
<li><em>jdk.xml.bind</em> (Tools for JAXB)</li>
</ul>
<h4 id="sintaxis-de-variables-locales-para-parámetros-en-lambdas">Sintaxis de variables locales para parámetros en lambdas</h4>
<p>Ahora los parámetros de una lambda pueden declararse con <em>var</em> con inferencia de tipos. Esto proporciona uniformidad en el lenguaje al declarar los parámetros permite usar anotaciones en los parámetros de la función lambda como <em>@NotNull</em>.</p>
<p>Esta funcionalidad tiene algunas restricciones. No se puede mezclar el uso y no uso de <em>var</em> y no se puede mezclar el uso de <em>var</em> y tipos en <em>lambdas</em> explícitas. Son consideradas ilegales por el compilador y producirá un error en tiempo de compilación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span>&#10;&#10;<span class="o">(</span><span class="n">var</span> <span class="n">x</span><span class="o">,</span> <span class="n">var</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span>&#10;  &#10;<span class="o">(</span><span class="nd">@NotNull</span> <span class="n">var</span> <span class="n">x</span><span class="o">,</span> <span class="nd">@NotNull</span> <span class="n">var</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span>&#10;  &#10;<span class="o">(</span><span class="n">var</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span> <span class="c1">// no se puede mezclar var y no var&#10;</span><span class="c1"></span><span class="o">(</span><span class="n">var</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">x</span><span class="o">.</span><span class="na">process</span><span class="o">.(</span><span class="n">y</span><span class="o">)</span> <span class="c1">// no se puede mezclar var y tipos en lamdas explícitas&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Lambda.java</span>
    </div>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/0eWgRyanQI0" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="cliente-http">Cliente HTTP</h4>
<p>En Java 9 se incorporó de forma experimental un cliente HTTP con soporte para HTTP/2 en el propio JDK. En Java 11 alcanza la categoría de estable. Este cliente HTTP es una forma sencilla de hacer llamadas a servicios web ya sean REST o <a href="https://graphql.org/">GraphQL</a>. Las clases del nuevo cliente se encuentran en el paquete <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/package-summary.html">java.net.http</a>. Al estar este cliente HTTP incorporado en el JDK no será necesario depender de librerías de terceros.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/sZSdWq490Vw" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="ejecución-desde-archivo-de-código-fuente-único">Ejecución desde archivo de código fuente único</h4>
<p>Para ejecutar un programa Java es necesario compilarlo a <em>bytecode</em> y posteriormente ejecutarlos. Se necesitan dos pasos. Para facilitar la ejecución de los programas que se componen de un único archivo de código fuente se añade la posibilidad de lanzar un programa desde el archivo de código fuente. Esto es útil par programas pequeños o para los casos de estar aprendiendo el lenguaje.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Hello, World&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HelloWorld.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ java HelloWorld.java&#10;Hello, World&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>java-helloworld.sh</span>
    </div>
</div>
<p>Esta funcionalidad es compatible con los <em>shebang</em> de los sistemas Unix.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!.sdkman/candidates/java/current/bin/java --source 11&#10;</span><span class="cp"></span>&#10;public class HelloWorld <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;public static void main<span class="o">(</span>String<span class="o">[]</span> args<span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println<span class="o">(</span><span class="s2">&#34;Hello, World&#34;</span><span class="o">)</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>helloworld.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ chmod +x ./HelloWorld.sh&#10;$ ./HelloWorld.sh&#10;Hello, World</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hello.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/images/java-helloworld_hudffca01b0a1961d9680fc7f7d030bedf_67656_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Java 11 HelloWorld!"><img src="https://picodotdev.github.io/blog-bitix/2018/09/novedades-y-nuevas-caracteristicas-de-java-11/images/java-helloworld_hudffca01b0a1961d9680fc7f7d030bedf_67656_6500x450_fit_box_3.png" width="610" height="450" alt="Java 11 HelloWorld!" title="Java 11 HelloWorld!"  class="lozad "></a></p>
<figcaption>Java 11 HelloWorld!</figcaption>
</figure>
</div>
<h4 id="unicode-10">Unicode 10</h4>
<p>Tratar texto es una parte importante casi de cualquier aplicación, este soporte de Unicode 10 añade 16018 nuevos caracteres soportados, 128 nuevos emojis y 19 símbolos nuevos para el estándar en televisiones 4K.</p>
<h4 id="tls-13">TLS 1.3</h4>
<p>Algunas de las versiones anteriores de TLS ya no se consideran seguras añadir soporte para la versión más reciente TLS 1.3 permite a las aplicaciones Java ser más compatibles y más seguras. El protocolo TLS 1.3 proporciona dos beneficios principalmente, es más seguro y más rápido que sus versiones anteriores.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/HxDb5nwvN_Y" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="otras-mejoras">Otras mejoras</h3>
<p>Se añaden implementaciones específicas para la arquitectura Aarch64 para un mejor rendimiento en la plataforma <a href="https://www.arm.com/">ARM</a> en algunas funciones. Se añade de forma experimental un nuevo recolector de basura ZGC con pausas para recolectar basura menores capaz de manejar cantidades de memoria pequeñas de megabytes y grandes de terabytes. Al mismo tiempo se añade un recolector de basura Epsilon que no reclama la memoria. Se añade soporte para los algoritmos criptográficos <em>ChaCha20</em> y <em>Poly1305</em> junto con otras funcionalidades criptográficas <em>RSASSA-PSS</em>, <em>AES Encryption with HMAC-SHA2 for Kerberos 5</em>, &hellip;</p>
<p>Se añaden varios métodos a la clase <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html">String</a> muy utilizados con los que no será necesario recurrie a librerías de terceros. Estos métodos son <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#repeat%28int%29">repeat</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#isBlank%28%29">isBlank</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#strip%28%29">strip</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#stripLeading%28%29">stripLeading</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#stripTrailing%28%29">stripTrailing</a>, <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#lines%28%29">lines</a>. En otras clases de la API también se han añadido nuevos métodos.</p>
<p>Java que tradicionalmente marcaba como <em>deprecated</em> características pero que las seguía manteniendo por compatibilidad hacia atrás parece que ha empezado a eliminar varias de esas características desaconsejadas de forma más agresiva. No solo se añaden nuevas características, también se eliminan algunas y se desaconseja el uso de otras entre ellas el visor de <em>applets</em>, eliminación de <em>Unsafe.defineClass</em>, <em>Thread.destroy()</em> y <em>Thread.stop(Throwable)</em>, eliminación de las funcionalidades de despliegue de <em>Java Plugin</em> y <em>Java Web Start</em> que se marcaron como desaconsejadas en Java 9 y para eliminación en Java 10 finalmente en Java 11 se han eliminado sin reemplazo.</p>
<p>Oracle ya no ofrece el entorno de ejecución JRE ni versiones de 32 bits para Windows. JavaFX ya no está incluído en el JDK pero seguirá siendo utilizable como librería independiente.</p>
<p>Las anteriores son las funcionalidades que he considerado más destacables para todos los usuarios., También hay otras funcionalidades añadidas, soporte eliminado para funciones específicas o de funcionamiento interno.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developer.oracle.com/java/java11">Introducing Java SE 11</a></li>
<li><a href="https://www.oracle.com/technetwork/java/javase/11-relnote-issues-5012449.html">JDK 11 Release Notes</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/">Java 11 Documentation</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/docs/api/index.html">Java 11 Javadoc</a></li>
<li><a href="https://blogs.oracle.com/java-platform-group/introducing-java-se-11">Introducing Java SE 11 (blog)</a></li>
<li><a href="https://blogs.oracle.com/java-platform-group/oracle-jdk-releases-for-java-11-and-later">Oracle JDK Releases for Java 11 and Later</a></li>
<li><a href="https://blog.takipi.com/java-11-will-include-more-than-just-features/">Java 11 Will Include More Than Just Features</a></li>
<li><a href="https://www.azul.com/90-new-features-and-apis-in-jdk-11/">90 New Features (and APIs) in JDK 11</a></li>
<li><a href="https://4comprehension.com/java-11-string-api-updates/">Java 11 String API Updates</a></li>
<li><a href="https://github.com/eclipse/jetty.project/issues/2487">Java 11 removes EE and Corba packages</a></li>
<li><a href="https://twitter.com/java/status/1044609723012665344">Java Mission Control - Now serving OpenJDK binaries too!</a></li>
<li><a href="https://docs.oracle.com/en/java/javase/11/migrate/index.html">Oracle JDK 11 Migration Guide</a></li>
<li><a href="http://www.java-countdown.xyz/">Countdown to Java Release Date</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/</id>
        <title>Recargar sin reiniciar la configuración de una aplicación Spring Boot con Spring Cloud Config</title>
        <updated>2018-09-23T00:50:00+02:00</updated>
        <published>2018-09-23T00:15:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/recargar-sin-reiniciar-la-configuracion-de-una-aplicacion-spring-boot-con-spring-cloud-config/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>No es raro la necesidad de querer cambiar algunos valores de la configuración de una aplicación sin ningún cambio adicional en el código. Normalmente la configuración se externaliza en un archivo de texto en un determinado formato como <em>properties</em> o <em>yaml</em> que se lee al iniciarse la aplicación pero que al querer hacer cambios y hacerlos efectivos requiere reiniciar la aplicación.</p>
<p>Para evitar la caída de servicio en un reinicio de aplicación requiere tener varias instancias de la aplicación, ir sacando del balanceador las instancias para que no le soliciten nuevas peticiones, reiniciarlas y añadirlas de nuevo al balanceador si se hace balanceo de carga en el servidor o reiniciar las aplicaciones progresivamente si se hace en el cliente. Y esto con todas las instancias del servicio. <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a> y <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> entre sus funcionalidades de configuración posee una que consiste en recargar la configuración o ciertas partes de la misma. Para ello <a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actuator</a> ofrece un <em>endpoint</em> con el que disparar la recarga.</p>
<p>En el siguiente ejemplo de microservicio que posee una clase de configuración con algunas propiedades. El valor de estas propiedades se utilizan para el resultado de una acción en un <em>endpoint</em> del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.cloud.context.config.annotation.RefreshScope</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>&#10;&#10;<span class="nd">@Configuration</span>&#10;<span class="nd">@RefreshScope</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultConfiguration</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Value</span><span class="o">(</span><span class="s">&#34;${config.key}&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">key</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getKey</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">key</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setKey</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultConfiguration.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>&#10;&#10;<span class="nd">@RestController</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;	<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;	<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (%s, %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8080}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">active</span><span class="p">:</span><span class="w"> </span><span class="l">cloud</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">rabbitmq</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="l">localhost</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">5672</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">guest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">guest</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">management</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">endpoints</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">web</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">exposure</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">include</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;*&#39;</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">config</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">value</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service.yml</span>
    </div>
</div>
<p>Iniciada la aplicación que requiere iniciar previamente el servicio de registro y descubrimiento y el servidor de configuración, la aplicación al iniciarse obtiene su configuración del servidor de configuración. Si se cambia la configuración de la variable <em>config.key</em> la aplicación no obtendrá el valor actualizado hasta que se invoque el <em>endpoint</em> <em>http://localhost:8080/actuator/refresh</em>. Para que Spring Boot recargue la configuración es necesario anotar con <em>@RefreshScope</em> la clase de configuración. Invocado el <em>endpoint</em> de recarga de configuración la aplicación toma de nuevo los nuevos valores del servicio de configuración.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-1.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -i -X POST  http://localhost:8080/&#10;Hello world <span class="o">(</span>http://localhost:8080/, value<span class="o">)</span>&#10;&#10;$ vim configserver/misc/config/service.yml&#10;<span class="c1"># config.key: secret</span>&#10;&#10;$ curl -i -X POST  http://localhost:8080/actuator/refresh&#10;HTTP/1.1 <span class="m">200</span>&#10;Content-Type: application/vnd.spring-boot.actuator.v2+json<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>UTF-8&#10;Transfer-Encoding: chunked&#10;Date: Sat, <span class="m">22</span> Sep <span class="m">2018</span> 21:19:03 GMT&#10;&#10;<span class="o">[</span><span class="s2">&#34;config.key&#34;</span><span class="o">]</span>&#10;&#10;$ curl http://localhost:8080/&#10;Hello world <span class="o">(</span>http://localhost:8080/, secret<span class="o">)</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-1.sh</span>
    </div>
</div>
<p>En una aplicación orientada microservicios es muy posible que haya múltiples instancias del mismo servicio y para recargar la configuración de cada uno de ellos hay que hacerlo de forma individual con su <em>endpoint</em> de recarga de configuración. Dado el número de microservicios y su ubicación distribuida hacerlo de forma individual es un inconveniente.</p>
<p>Para resolver este inconveniente integrando <a href="https://cloud.spring.io/spring-cloud-bus/">Spring Cloud Bus</a> en las aplicaciones es posible recargar la configuración de todos los microservicios haciendo una única llamada al <em>endpoint</em> <em>http://localhost:8090/monitor</em> indicando el servicio a actualizar su configuración lo que es independiente del número de instancias y de su ubicación. Integrar Spring Cloud Bus requiere disponer de una instancia de mensajes como <a href="https://www.rabbitmq.com/">RabbitMQ</a> e incluir como dependencia tanto en el servidor de configuración como en el servicio la dependencia <em>spring-cloud-starter-bus-amqp</em>. Para esta comunicación de mensajes Spring Cloud Config crea en RabbitMQ una cola de mensajes que empieza por <em>springCloudBus</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="o">...</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-bus-amqp&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>configserver.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="o">...</span>&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-bus-amqp:2.0.0.RELEASE&#39;</span><span class="o">)</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service.gradle</span>
    </div>
</div>
<p>Los pasos para probar estas funcionalidades con Spring Cloud Bus en una o varias varias instancias son iniciar una instancia o más del servidor de registro y descubrimiento, iniciar una o más instancias del servidor de configuración, iniciar una o varias instancias del servicio todas las instancias en un puerto y terminal diferente, invocar el servicio cuyo valor de respuesta depende de una propiedad de configuración, modificar el valor de la propiedad de configuración, recargar la configuración e invocar de nuevo el servicio para comprobar que el nuevo valor se ha hecho efectivo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8761&#34;</span>&#10;$ ./gradlew configserver:run --args<span class="o">=</span><span class="s2">&#34;--port=8090&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8081&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-run-2.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -i -X POST  http://localhost:8080/&#10;Hello world <span class="o">(</span>http://localhost:8080/, value<span class="o">)</span>&#10;$ curl -i -X POST  http://localhost:8081/&#10;Hello world <span class="o">(</span>http://localhost:8081/, value<span class="o">)</span>&#10;&#10;$ vim configserver/misc/config/service.yml&#10;<span class="c1"># config.key: secret</span>&#10;&#10;$ curl -X POST -d <span class="s1">&#39;path=service&#39;</span> http://localhost:8090/monitor&#10;<span class="o">[</span><span class="s2">&#34;service&#34;</span><span class="o">]</span>&#10;&#10;$ curl http://localhost:8080/&#10;Hello world <span class="o">(</span>http://localhost:8080/, secret<span class="o">)</span>&#10;&#10;$ curl http://localhost:8081/&#10;Hello world <span class="o">(</span>http://localhost:8081/, secret<span class="o">)</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-2.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run-1.sh, ./curl-1.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-bus/2.0.0.RELEASE/single/spring-cloud-bus.html#_quick_start">Spring Cloud Bus - Quick Start</a></li>
<li><a href="http://cloud.spring.io/spring-cloud-static/spring-cloud-config/2.0.1.RELEASE/single/spring-cloud-config.html#_push_notifications_and_spring_cloud_bus">Spring CloudBus - Push Notifications and Spring Cloud Bus</a></li>
<li><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-configuration-classes.html">Spring Boot - Configuration Classes</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/</id>
        <title>Desempaquetado y análisis de teclado y ratón inalámbrico V7 CKW200</title>
        <updated>2018-09-21T21:00:00+02:00</updated>
        <published>2018-09-21T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los teclados básicos son más que suficientes para la mayoría de usuarios, incluso los inalámbricos solo cuestan unos pocos euros más. Buscaba un teclado inalámbrico y al final opté por el V7 CKW200 por ser barato, tener un diseño atractivo, ser teclado completo, inalámbrico y tener teclas multimedia para subir y bajar el volumen entre otras. Este modelo es un <em>combo</em> de teclado y ratón inalámbrico baratos pero básicos, el teclado funciona perfectamente durando las pilas casi un año y medio, el ratón del V7 CKW200 finalmente lo sustituí por uno con cable, un Logitech M90.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/videoseven.png" width="200" height="45" alt="Videoseven" title="Videoseven"  class=""></p>
</div>
<p>Aún estoy esperando a que <a href="https://www.intel.es">Intel</a> comercialice en España como decía en un artículo anterior <a href="https://picodotdev.github.io/blog-bitix/2018/06/decidido-a-comprar-un-intel-nuc-entre-las-opciones-que-he-evaluado/">entre las opciones que he evaluado los Intel NUC Bean Canyon</a> para comprar nuevo equipo. La espera se me está haciendo un poco larga pero en teoría a mediados de octubre los empezarán a enviar desde la página especializada <a href="https://simplynuc.co.uk/">SimplyNUC</a> y posiblemente hasta noviembre o diciembre no aparezcan a la venta en <a href="https://amzn.to/2flFhHA">Amazon</a> que es donde en principio lo compraré o más o menos al mismo tiempo en <a href="https://www.pccomponentes.com/">PcComponentes</a>.</p>
<p>Pero mientras tanto otras cosas que necesito es un monitor 2K de 27 pulgadas que como primera opción tengo el <a href="https://amzn.to/2xCE2tP">BenQ PD2700Q</a> con un precio de 337 € pero lo he visto en algunos momentos a 275 €, si lo vuelvo a ver a ese precio será el que compre aún no teniendo todavía el NUC. Ese monitor u otro modelo muy similar de <a href="https://amzn.to/2O06ikl%e2%88%ab">BenQ GW2765HT</a> la mayor diferencia entre estos dos monitores es que este último no ofrece puertos USB pero tiene conexión VGA aunque no le veo mucho sentido en un monitor 2K por ser menor que la nativa del monitor ya que el VGA solo ofrece como máximo una resolución de 1920x1080.</p>
<p>Aparte de la memoria, el SSD para el NUC y tras cosas de menor importancia que ya comentaré otras piezas que me faltan son un teclado y un ratón que finalmente ya he adquirido. He visto bastantes modelos con diferentes características entre ellos principalmente los de la marca <a href="https://www.logitech.com/es-es">Logitech</a> por ser una marca conocida en cuanto a periféricos para ordenadores. Tenía pensado adquirir un modelo de teclado y ratón con cable muy básico aunque suficiente para mis usos el <a href="https://amzn.to/2xEo4PH">Logitech MK120</a> pero finalmente me he decidido por uno muy similar aunque inalámbrico, el <a href="https://amzn.to/2xqrINW">Videoseven (V7) modelo CKW200</a> que también está disponible en <a href="https://amzn.to/2NyBaZX">formato con cable</a>.</p>
<p>Pasados unos meses de uso veré si ha sido buena decisión por su fiabilidad y el incordio que supone cambiar de pilas si es muy habitualmente, con las recargables no me supondrá un gasto adicional recurrente que hay que tener en cuenta en el coste del teclado y ratón, también al precio de las pilas no recargables o recargables si se le suma el del cargador aunque como uso pilas recargables para otro tipo de aparatos electrónicos (relojes, mandos a distancia, &hellip;) este último es un gasto compartido.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="con-cable-o-inalámbrico">Con cable o inalámbrico</h3>
<p>Salvo por la diferencia de cable e inalámbrico tanto el de Logitech como de <a href="https://www.v7world.com/es/">Videoseven</a> son muy similares y el precio del V7 solo es unos pocos euros superior y ambos muy económicos. Las razones por la que finalmente he optado por un inalámbrico han sido tres: no tener cables que molesten en la mesa por comodidad y al mismo tiempo para facilitar la limpieza de la mesa, dado que el NUC solo tiene 4 puertos USB ocupar solo uno con el receptor de radio frecuencia de teclado y ratón en vez de dos si fuesen con cable y tener algo de movilidad o mayor libertad de movimiento ya que quizá vea alguna película desde la cama en vez desde la mesa de escritorio y así pueda manejar el ordenador desde algo más de distancia. La marca Videoseven no la conocía hasta hace poco que me he encontrado con algunos de sus productos, en Amazon todavía para el teclado y ratón no tiene comentarios ni he encontrado un desempaquetado ni <em>unboxing</em> en <a href="https://www.youtube.com/">YouTube</a> para conocer más detalles, creo que seré el primero en evaluar el producto.</p>
<p>En principio evalué teclado y ratón con cable más que inalámbrico por la fiabilidad de la conexión, según la experiencia de algunos usuarios en los comentarios de Amazon varios son los que indican que la conectividad a veces se pierde y es molesto al teclear y manejar el ratón. Llevo usando un <a href="https://www.apple.com/es/shop/product/MLA02ZM/A/rat%C3%B3n-magic-mouse-2-plata">Magic Mouse 2</a> de <a href="https://www.apple.com/">Apple</a> que funciona por <a href="https://es.wikipedia.org/wiki/Bluetooth">Bluetooth</a> perfectamente sin haber experimentado hasta el momento ningún tipo de fallo por conectividad, esto me daba cierta confianza en que los inalámbricos funcionasen bien. Otro aspecto a tener en cuenta sobre los inalámbricos es que requieren de baterías en forma de pilas AA y AAA que según el fabricante duran entre 8 y 12 meses para el teclado y 6 meses para el ratón.</p>
<p>Hay teclados y ratones que funcionan por Bluetooth pero no funcionan hasta que se inicia el sistema operativo lo que les hace no aptos para modificar los valores de la BIOS/UEFI. La ventaja que tienen es que los Bluetooth no requieren receptor y son utilizables por tablets o televisión. Los basados en radio frecuencia son más comunes para ordenadores.</p>
<p>Supongo que depende del uso, el Magic Mouse 2 que tiene una batería recargable de casi 2000 mAh me dura unas 3-4 semanas usándolo de forma intensiva todos los días tanto para trabajar entre semana como el fin de semana entre 5 y 9 horas diarias. Una <a href="https://amzn.to/2QRoefk">pila recargable AA de Amazon Basics</a> que es la que usan tanto el ratón de Logitech como el de Videoseven tiene una capacidad de 1900 mAh. Con el uso que le doy la pila del ratón supongo que me durará algo más de tiempo que una carga del Magic Mouse 2 pero no creo que me dure esos 6 meses que indica el fabricante, el Magic Mouse lo uso para trabajar y el ratón solo a nivel personal lo que es durante menos tiempo. Una vez lo use mediré lo que dura la pila de ratón. Por la duración de las pilas del teclado no me preocupo tanto ya que en este las pilas sí durarán varios meses.</p>
<p>En cuanto a usabilidad no noto retraso en las acciones por el hecho de que sean inalámbricos, la respuesta en la acción es instantánea tal como lo es en un teclado y ratón con cable. Es muy cómodo poder mover o levantar el teclado o ratón sin la atadura del cable. Habiéndolo probado en un Mac el teclado y ratón son reconocidos sin ningún tipo de problema incluyendo la disposición de teclas de la disposición español y multimedia, en otros sistemas operativos es igual y no requiere ningún tipo de configuración en el sistema, es conectar el adaptador USB y usar.</p>
<p>No se por que hay que elegir entre con cable o inalámbrico, ¿no hay todavía un modelo de teclado y ratón que soporte los dos modos de funcionamiento y que sea el usuario el que decida como quiere usarlos? Si con la fiabilidad del cable o con la comodidad del inalámbrico en cada momento.</p>
<ul>
<li><a href="https://www.windowscentral.com/wired-or-wireless-which-mouse-right-you">Wired or wireless: which mouse is right for you?</a></li>
<li><a href="https://www.lifewire.com/wired-or-wireless-mouse-2640091">Wired or Wireless Mouse?</a></li>
<li><a href="https://lifehacker.com/5865351/how-to-choose-the-perfect-mouse-and-keyboard">How to Choose the Perfect Mouse and Keyboard</a></li>
</ul>
<h3 id="el-teclado-ckw200">El teclado CKW200</h3>
<p>El teclado CKW200 es un teclado completo tradicional con teclado numérico y teclas dedicadas Inicio, Fin, Avance Página, Retroceso Página, Suprimir e Insertar muy útiles al manejar documentos y editar archivos de texto que en muchos teclados de portátiles y más compactos no poseen por ahorrar espacio. También posee teclas dedicadas de flechas que en los portátiles suelen tener un tamaño más pequeño y son más incómodas de pulsar. Como programador estas teclas me resultan muy útiles para seleccionar código desde la posición del cursor al inicio o final, mover el cursor al final de la linea o al inicio, etc&hellip; También posee teclas especiales de función para silenciar, bajar y subir el volumen, teclas multimedia y de aplicaciones muy cómodas para hacer esas funciones directamente desde el teclado sin usar la interfaz gráfica del entorno de escritorio, el Logitech MK120 no posee estas teclas de función y es otro motivo por haberme decantado por el modelo de V7.</p>
<p>Las teclas no son en forma de isla sino que son como en la generación anterior de teclados y tienen el inconveniente de que entre los huecos de las teclas se suele acumular suciedad y polvo y no son muy fáciles de limpiar, en los teclados en formato isla se acumula menos suciedad. No posee florituras adicionales como retroiluminación para las teclas útil en condiciones de baja luz ni tampoco adornos como teclas RBG con efectos lumínicos, a un teclado con este precio no se le pueden pedir esas cosas hay que ir a teclados de mayor precio para encontrar esas funciones si se echan de menos que no son más que un añadido estético.</p>
<p>Dado el precio de este teclado los caracteres y símbolos de las teclas está impresos con el método más barato, mediante pegatinas que con el paso del tiempo y uso puede hacer que algunas teclas pierdan su caracter, pasados dos años de uso a una tecla se le borrado parte del caracter. La pérdida del caracter en la tecla no afecta al funcionamiento pero sin pasa en varias teclas y de forma completa dificulta puede dificultar la escritura ya que no me se la posición de todos los caracteres. El teclado posee un indicador de batería entre los LED indicadores de estado, se enciende al conectar las pilas no se si indicará también el nivel bajo de las dos pilas AAA que usa. Las pilas del teclado duran muchísimo tiempo, mucho más del que pensaba, las dos pilas AAA recargables que uso le duran más de un año y medio.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00564GWEI&amp;linkId=92beec3c8e4c12addd6aad92e670067a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00CHHDY66&amp;linkId=d45488e9f6f3e0fae914e06262b99644" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08PPHFLPK&amp;linkId=fb4b44441150840983cf27698c454c85" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0758DMHZG&amp;linkId=22f1206a79c0eb63d39b94ca6b26ee80" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="el-ratón-ckw200">El ratón CKW200</h3>
<p>El ratón posee tres botones, izquierdo, derecho y el de la rueda de desplazamiento pero no posee botones de desplazamiento lateral. Es de tamaño normal no reducido, ergonómico con la palma de la mano y simétrico apto para diestros y zurdos. Dado que V7 es una empresa nueva en el mercado su modelo de teclado es del 2017 más reciente que otros muchos modelos que pueden ser incluso tan viejos como del 2013, 2015 o 2016.</p>
<p>El ratón posee botón de encendido y apagado pero el teclado no. El ratón posee una función de ahorro de energía con la que al cabo de un minuto la luz óptica que detecta el movimiento empieza a parpadear cada medio segundo, al cabo de 8 minutos la luz se paga completamente y el ratón entra en reposo para ahorrar batería y que dure más tiempo. Con solo hacer clic el ratón sale del estado de reposo y el sensor de movimiento se enciende. Por otro lado si el ratón detecta que el ordenador se ha apagado también entra en modo reposo lo que es muy útil para ni siquiera tener que apagar el ratón manualmente con su interruptor. El ratón posee un hueco para insertar el adaptador USB de como una forma de guardarlo para que no se pierda al transportarlo transporta.</p>
<p>El ratón usa una pila AA que le ura bastante poco con un tiempo de uso de unas 6 horas diarias, en menos de dos semanas hay que cambiarla por lo que recomiendo usar una pila recargable. Aunque una pila no pesa mucho hace que el peso del ratón sea apreciable con el uso comparado con un ratón con cable que no usa pilas. Aún así la duración de la pila y el peso no es el mayor problema, el mayor problema es que es habitual que el ratón pierda la conexión, lo que lo hace muy molesto ya que ocurre de forma inesperada e impide usar el puntero en el ordenador rompiendo de forma constante con el flujo de trabajo, al final compré un <a href="https://amzn.to/2NyBaZX">ratón con cable Logitech M90</a> que funciona perfectamente, no necesita cambiarle la pila cada dos semanas y comparado es mucho más ligero.</p>
<h3 id="desempaquetado">Desempaquetado</h3>
<p>Una vez más al igual que en otros análisis de productos que hago incluyo fotos mejores que las que proporciona el propio fabricante hechas por mi ya antiguo móvil. Me parece increíble que a estas alturas den tan poca importancia a esto ya que los usuarios utilizan la red para informarse en los productos con comentarios de Ámazon y vídeos de YouTube, fotos del fabricante que debería tener la información más fiable y detallada, incluyendo fotos de gran calidad y numerosas. No indica dimensiones reales del teclado y ratón, solo del paquete.</p>
<p>El teclado tiene una dimensiones de 45x14,5 centímetros de ancho y largo respectivamente, el ratón 7x12 centímetros de ancho y largo. Tanto el teclado como ratón y pilas estaban en la caja protegidos con una bolsa de plástico para evitar rayaduras. El adaptador para que el ordenador reciba la señal de teclado y ratón es muy pequeño y pasa casi desapercibido conectado en el puerto USB. Se incluye en la caja una pila AA y dos AAA para poder usar el teclado y ratón desde el primer momento lo cual es de agradecer.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-1_hu5759c6ecc153d088d9c37cb65defffdf_787307_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="La caja"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-1_hu5759c6ecc153d088d9c37cb65defffdf_787307_200x150_fit_q90_box.jpg" width="200" height="71" alt="La caja" title="La caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-2_hu4b77011dbb1f5ab98d7af80b73be1bff_662713_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="La caja"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-2_hu4b77011dbb1f5ab98d7af80b73be1bff_662713_200x150_fit_q90_box.jpg" width="200" height="73" alt="La caja" title="La caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-3_hud79e571e37e826ff7bd8ba86c460ca72_883005_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="La caja"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-3_hud79e571e37e826ff7bd8ba86c460ca72_883005_200x150_fit_q90_box.jpg" width="200" height="117" alt="La caja" title="La caja"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-4_hu7e45dd5d51e682617f3a528ec466ab34_571156_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="La caja"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-4_hu7e45dd5d51e682617f3a528ec466ab34_571156_200x150_fit_q90_box.jpg" width="164" height="150" alt="La caja" title="La caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-6_hu8e18980ea9bd25779d5a70f1bda04cd2_825643_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="La caja"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-6_hu8e18980ea9bd25779d5a70f1bda04cd2_825643_200x150_fit_q90_box.jpg" width="150" height="150" alt="La caja" title="La caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-7_hua92ab4c5b5b635f1c20553c39c9c6c99_528810_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="La caja"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-7_hua92ab4c5b5b635f1c20553c39c9c6c99_528810_200x150_fit_q90_box.jpg" width="200" height="54" alt="La caja" title="La caja"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-8_hu15bfe1cb22b9a35d59619f047c6d9ceb_769082_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="La caja"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-8_hu15bfe1cb22b9a35d59619f047c6d9ceb_769082_200x150_fit_q90_box.jpg" width="161" height="150" alt="La caja" title="La caja"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-9_hu7aa20208010d4510370b54e1bce0cacc_510998_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="La caja"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-9_hu7aa20208010d4510370b54e1bce0cacc_510998_200x150_fit_q90_box.jpg" width="200" height="148" alt="La caja" title="La caja"  class="lozad "></a></p>
<figcaption>La caja, manual y pilas incluídas</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-11_hu99228cf1ca42bd3e8b35a6b59639e1f5_663025_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El teclado"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-11_hu99228cf1ca42bd3e8b35a6b59639e1f5_663025_200x150_fit_q90_box.jpg" width="200" height="66" alt="El teclado" title="El teclado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-15_hu7790aacf5cf49a4574b972b520f21b70_915714_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El teclado"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-15_hu7790aacf5cf49a4574b972b520f21b70_915714_200x150_fit_q90_box.jpg" width="200" height="67" alt="El teclado" title="El teclado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-26_huf9c248e1a519054bbc4c84a977ed1a5a_1703465_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El teclado"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-26_huf9c248e1a519054bbc4c84a977ed1a5a_1703465_200x150_fit_q90_box.jpg" width="200" height="117" alt="El teclado" title="El teclado"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-16_hu8edb707ee68fffd1577096b5f951858d_1025911_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El teclado"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-16_hu8edb707ee68fffd1577096b5f951858d_1025911_200x150_fit_q90_box.jpg" width="133" height="150" alt="El teclado" title="El teclado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-17_hudfca1fdf385d0131de2a80757eefd52b_1125098_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El teclado"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-17_hudfca1fdf385d0131de2a80757eefd52b_1125098_200x150_fit_q90_box.jpg" width="161" height="150" alt="El teclado" title="El teclado"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-18_hued301737ad8bb2155be6ddf5b95f7e7a_749941_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El teclado"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-18_hued301737ad8bb2155be6ddf5b95f7e7a_749941_200x150_fit_q90_box.jpg" width="200" height="107" alt="El teclado" title="El teclado"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-19_hu41f4521d616c0248962135eb5429fa34_827953_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El teclado"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-19_hu41f4521d616c0248962135eb5429fa34_827953_200x150_fit_q90_box.jpg" width="200" height="133" alt="El teclado" title="El teclado"  class="lozad "></a></p>
<figcaption>El teclado</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-20_hu162d1414f7fdc7b377f901d8133ffb92_958111_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El ratón"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-20_hu162d1414f7fdc7b377f901d8133ffb92_958111_200x150_fit_q90_box.jpg" width="93" height="150" alt="El ratón" title="El ratón"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-21_hu83e6b2a0c5a4ff644c65d80399fac054_971015_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El ratón"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-21_hu83e6b2a0c5a4ff644c65d80399fac054_971015_200x150_fit_q90_box.jpg" width="87" height="150" alt="El ratón" title="El ratón"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-22_hudc5d6dbeef530270215aef9248e90145_853246_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El ratón"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-22_hudc5d6dbeef530270215aef9248e90145_853246_200x150_fit_q90_box.jpg" width="151" height="150" alt="El ratón" title="El ratón"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-25_hudd44d8429177a62528fe8491dc1e7a47_636288_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El ratón"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-25_hudd44d8429177a62528fe8491dc1e7a47_636288_200x150_fit_q90_box.jpg" width="200" height="77" alt="El ratón" title="El ratón"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-27_hue20ec1cd39f8ad57153d61686ded7eef_160650_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El adaptador USB"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-27_hue20ec1cd39f8ad57153d61686ded7eef_160650_200x150_fit_q90_box.jpg" width="179" height="150" alt="El adaptador USB" title="El adaptador USB"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-24_hub92be097db1989c7e355936ba8775b22_183417_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="El adaptador USB"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-24_hub92be097db1989c7e355936ba8775b22_183417_200x150_fit_q90_box.jpg" width="143" height="150" alt="El adaptador USB" title="El adaptador USB"  class="lozad "></a></p>
<figcaption>El ratón y el adaptador USB</figcaption>
</figure>
</div>
<h3 id="las-alternativas">Las alternativas</h3>
<p>Modelos de teclados y ratones hay muchos, hay paquetes que incluyen ambos o se venden por separado. Si no tienes las preferencias claras puedes empezar por consultar la <a href="https://amzn.to/2xtwXwa">clasificación de los teclados y ratones según el número de ventas</a> que puede ser un indicador de popularidad y buena relación calidad/precio. Como decía hay con cable, inalámbricos, formato isla, gota, ergonómico, compactos, teclados completos, mecánicos, ligeros con panel táctil integrado, adaptados para Smart TV, más económicos, de precio significativo, &hellip; aquí pongo algunos de los otros que he mirado.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/12/guia-basica-sobre-teclados-mecanicos-para-ordenador/">Guía básica sobre teclados mecánicos para ordenador</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/11/desempaquetado-de-teclado-mecanico-glorious-gmmk-tkl/">Desempaquetado de teclado mecánico Glorious GMMK TLK</a></li>
</ul>
<p>De entre todos estos y otros de la lista de más vendidos por una cosa u otra al final elegí el Videoseven CKW200 de este artículo, ya sea por los comentarios de los clientes de Amazon o por su diseño y estética.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B006LNTSP8&amp;linkId=d83fcfb5b254583b4923a15aee46b182" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01C4HCV58&amp;linkId=96032d684a9a1e19798dbac1b6dd7200" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00D2PX8C2&amp;linkId=462e180975e635483e5ef4deb5cfc240" title="Amazon" class="lozad"></iframe>
</div>
<p>Después de dos años de uso intensivo el teclado V7 CKW200 pierde parte de la impresión de una tecla.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-impresion-tecla_hu899bfc98547a3ca3f00612a9dc2e82d7_500258_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Perdida de caracter impreso en una tecla"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-impresion-tecla_hu899bfc98547a3ca3f00612a9dc2e82d7_500258_300x250_fit_q90_box.jpg" width="300" height="169" alt="Perdida de caracter impreso en una tecla" title="Perdida de caracter impreso en una tecla"  class="lozad "></a></p>
<figcaption>Perdida de caracter impreso en una tecla</figcaption>
</figure>
</div>
<p>Pasado dos años desde que tengo el teclado si tuviese que comprar un teclado me replantearía otro modelo aunque fuese algo más caro, buscaría que fuese mecánico, sin teclado numérico para que fuese más compacto pero con teclas de función, flechas y las de <em>Insertar</em>, <em>Suprimir</em>, <em>Inicio</em>, <em>Fin</em>, <em>RePag</em> y <em>AvPag</em>, si pudiera ser también inalámbrico, con teclas con función multimedia.</p>
<p>Los teclados mecánicos son significativamente más caros empiezan a partir de los 40 € y llegan hasta los 150 € pero son de mucha mayor calidad y durabilidad. Las teclas hacen algo de más ruido pero la sensación en la pulsación de la tecla es más parecida por las personas que escriben con teclados de forma intensiva. Las teclas son de un material plástico de mayor calidad y para la impresión de los caracteres en las teclas emplean mejores procesos ya sea con doble inyección o impresión con láser que hace que los caracteres no se pierdan con el uso, las teclas son desmontables para limpiar el polvo y restos que se suelen acumular entre teclas y sustituibles para personalizarlas.</p>
<p>Estos son algunos modelos que tiene un buen aspecto, la dificultad es encontrar algún modelo que tenga la disposición de las teclas en la disposición de español ya que muchos de ellos tienen la disposición inglesa a las que les falta algunos caracteres que usamos como la <em>ñ</em>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07TKM6DZ4&amp;linkId=90a2743711215ba483752fc15ff0a5ae" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07L31V1K4&amp;linkId=90c9225ac12c0f227dc1e3e0929c980a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0716ZNZ1P&amp;linkId=9b730fd6fd7cd6b804c0768ff7a0e4b0" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07CVQ7ZRL&amp;linkId=4eef50f6d2b1d0ad77d0c021945072ce" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B09KH2NX42&amp;linkId=2fa6dd5d940478943c99b2cc41180bd2" title="Amazon" class="lozad"></iframe>
</div>
<h4 id="teclados-mecánicos">Teclados mecánicos</h4>
<p>Cualquiera de estos teclados cumple su función a un precio muy económico pero no se pueden comparar con <a href="https://picodotdev.github.io/blog-bitix/2020/12/guia-basica-sobre-teclados-mecanicos-para-ordenador/">los teclados mecánicos</a> destinados a los usuarios que usan el teclado de forma intensiva, son más caros pero algunos de sus usuarios consideran que los valen.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/ducky-one-2-tkl_hu354ab0c3d09f385c997f31ff19e237d6_461539_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Teclado Ducky One 2 TKL"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/ducky-one-2-tkl_hu354ab0c3d09f385c997f31ff19e237d6_461539_300x200_fit_box_3.png" width="300" height="145" alt="Teclado Ducky One 2 TKL" title="Teclado Ducky One 2 TKL"  class="lozad "></a></p>
<figcaption>Teclado mecánico Ducky One 2 TKL</figcaption>
</figure>
</div>
<h3 id="conclusión">Conclusión</h3>
<p>Es un teclado y ratón básico pero yo no le pido más, de plástico pero con un buen acabado, estética cuidada sin ninguna extrabagancia y ligero. Posee pestañas para aumentar la inclinación de las teclas. Por lo que he probado hasta el momento durante unos días el teclado y ratón funciona correctamente la mayor parte del tiempo sin embargo en algún momento puntual el teclado y ratón pierden la conexión de forma habitual. La mayor parte de las veces la conexión se recupera sola en unos pocos segundos, el ratón queda como muerto ya que la luz óptima de movimiento se apaga. Si su funcionamiento es como hasta ahora estaré contento con la compra y habrá sido buena pero si las conexiones son frecuentes y no se recupera pronto me será un poco molesto y no acabaré tan contento.</p>
<p>Llevo usándolo unos días pero se me está haciendo más cómodo el teclado completo que el reducido por ahorrar espacio de los portátiles, sobre todo las teclas de las flechas y de inicio, fin, avance página y retroceso página, también la tecla de suprimir y borrar. El adaptador USB no se calienta y según se enciende el ordenador el teclado y ratón son usables. Quitando las desconexiones en su uso normal funciona perfectamente. Las pulsaciones de teclas y clic del ratón hace algo de ruido pero nada fuera de lo normal. No hay retraso entre la pulsación de la tecla y movimiento del ratón y la detección en el ordenador.</p>
<p>Como defectos están las desconexiones esporádicas que he tenido y que el ratón solo es de tres botones y no de 5, no tiene desplazamiento horizontal que otros ratones tienen moviendo la rueda el ratón hacia los lados. Quizá el ratón estaría mejor que tuviese dos pilas AA en vez de solo una para que la batería le durase más tiempo y hubiese que cambiar las pilas con menor frecuencia. Esto haría que el ratón pesase más pero no creo que fuese un inconveniente grande. Es curioso que el teclado que gasta menos pilas tenga dos AAA (de 750 mAh si son recargables) y el ratón solo una.</p>
<p>Por el motivo de la perdida de conexión no lo recomiendo para los juegos pero ni este modelo ni ningún otro inalámbrico que quizá funcionen más fiablemente pero no serán perfectos en este sentido, para los juegos es más recomendable un teclado y ratón con cable.</p>
<p>Según está indicado en la descripción de los huecos para las pilas el teclado y ratón funcionan con pilas de 1,5v pero los estoy usando con las pilas recargables de Amazon Basics que son de 1,2v y están funcionado sin problema.</p>
<h3 id="alfombrilla-para-teclado-y-ratón">Alfombrilla para teclado y ratón</h3>
<p>Al mismo tiempo que he comprado el teclado y ratón he comprado una <a href="https://amzn.to/2Dm7me3">alfombrilla de 70cm de ancho por 30 cm de alto</a> en la que colocar tanto ratón como teclado que está ribeteada con hilo para mayor duración, esto protegerá la mesa del movimiento de ratón que con el tiempo se desgastaría.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-10_huefaf6703abffe59020bff61b87ff7e0a_700256_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Alfombrilla, teclado y ratón"><img src="https://picodotdev.github.io/blog-bitix/2018/09/desempaquetado-y-analisis-de-teclado-y-raton-inalambrico-v7-ckw200/images/v7-ckw200-10_huefaf6703abffe59020bff61b87ff7e0a_700256_200x150_fit_q90_box.jpg" width="200" height="89" alt="Alfombrilla, teclado y ratón" title="Alfombrilla, teclado y ratón"  class="lozad "></a></p>
<figcaption>Alfombrilla, teclado y ratón</figcaption>
</figure>
</div>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01KC4DR1C&amp;linkId=a9e97138ccb3a59af838861eb2156d10" title="Amazon" class="lozad"></iframe>
</div>
<h3 id="pilas-recargables-y-cargador">Pilas recargables y cargador</h3>
<p>Para no incurrir en mayores gastos adicionales por tener que sustituir pilas cada cierto tiempo, sobre todo para el ratón, usaré <a href="https://amzn.to/2QRoefk">pilas recargables de Amazon Basics tanto AA</a> como <a href="https://amzn.to/2NuWAXF">AAA</a> y un <a href="https://amzn.to/2MNzLfF">cargador con pantalla similar a este</a> que adquirí hace tiempo para cargarlas, posee un indicador de la carga de la pila a medida que se carga y soporta múltiples tipos de pilas. <a href="https://amzn.to/2NwgXna">Amazon Basics tiene un cargador sencillo</a> pero aconsejo adquirir uno equivalente al que tengo yo con pantalla o mejor aún con la función de descarga de pila para prolongar más tiempo la vida útil de las pilas, no son mucho más caros que el de Amazon y la pantalla resulta muy útil. Unas pilas las usaré y tendré otras en reserva para poner de repuesto en cuanto las que estoy usando se gasten así no tendré que esperar mucho a que se carguen ya que tardan varias horas.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00CWNMR5Y&amp;linkId=4b82c9473891e7e300af6af12e499a3b" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00CWNMW1S&amp;linkId=7a974f6747d38d7ceae51b4c2a524820" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B008GZ4BII&amp;linkId=729262ef1a678dd96e0fc3fcfcade02f" title="Amazon" class="lozad"></iframe>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/el-comando-fork-bomb-explicado/</id>
        <title>El comando fork bomb explicado</title>
        <updated>2018-09-16T11:00:00+02:00</updated>
        <published>2018-09-16T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/el-comando-fork-bomb-explicado/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>El siguiente aparente, gracioso e inocente conjunto de caracteres que parecen una colección de varios extraños <em>emojis</em> es un comando que si se ejecuta en una terminal de GNU/Linux crea gran cantidad de procesos de forma continua hasta que los recursos del sistema se agotan causando que sea inusable haya que reiniciarlo generando los problemas que de ello se deriven si el reinicio es forzado, este comando es el comando <a href="https://en.wikipedia.org/wiki/Fork_bomb">fork bomb</a> para el intérprete de comandos <a href="https://es.wikipedia.org/wiki/Bash">bash</a>.</p>
<blockquote>
<p>:(){ :|:&amp; };:</p>
</blockquote>
<p>Analizando detalladamente este conjunto de caracteres es un comando <em>bash</em> que se compone de:</p>
<ul>
<li>La definición de una función de nombre <em>:</em>.</li>
<li>Los paréntesis <em>( )</em> definen la función.</li>
<li>En su cuerpo entre las llaves <em>{ }</em> recursivamente se llama a si misma dos veces con un <em>pipeline |</em> que ejecuta el primer comando enviando su salida al segundo, con el caracter <em>&amp;</em> no se espera a que termine y los pone en segundo plano de modo no se puedan terminar con lo que seguirán consumiendo recursos. Cada uno de los procesos de la función se llama de nuevo a la función recursivamente y repitiendo el proceso. Como consecuencia el número de procesos del sistema crece de forma exponencial que en poco tiempo termina por agotar los recursos del sistema.</li>
<li>A continuación de la función se encuentra el comando <em>:</em> que realiza la primera llamada a la función que desencadena el <em>fork bomb</em>. Esta llamada inicial está separada de la definición de la función por el caracter <em>;</em> que sirve para escribir varios comandos uno a continuación de otro en una misma línea. El primer comando es la definición de la función y el segundo hace la llamada a la función e inicia el <em>fork bomb</em>.</li>
</ul>
<p>Este <em>fork bomb</em> crea procesos en el sistema de forma exponencial (1, 2, 4, 8, 16, 32, &hellip;, 2^n) hasta que el sistema agota los recursos de procesador o memoria en un periodo de tiempo muy corto, menos de unos pocos segundos desde su inicio dada la capacidad de procesamiento de los sistemas actuales. Como consecuencia el sistema requerirá un reinicio.</p>
<p>Y este ejemplo no es de las peores maldades que se pueden realizar, más aún si para ejecutar un comando se le conceden permisos de superusuario que literalmente le permiten realizar cualquier cosa en el sistema como formatear el sistema de almacenamiento o eliminar cualesquiera archivos del sistema.</p>
<p>Dado el problema que causa este aparente comando u otro similar una buena recomendación a seguir es no ejecutar ningún comando obtenido de internet que no se sepa lo que hace y de igual modo ningún programa o <em>script</em> de <em>shell</em> no obtenido de una fuente de confianza. En las distribuciones <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> la fuentes confiables son los repositorios oficiales.</p>
<p>Para GNU/Linux y los sistemas operativos en general uno de sus requisitos es que sean seguros e implementan medidas para que así sean incluso con el apoyo de los procesadores a nivel de hardware pero hacen lo que se les dice y no están a salvo de las estupideces por desconocimiento que pueda cometer el usuario.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/Q9Mdy7H8Qmc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Fork_bomb">Fork Bomb</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/</id>
        <title>El editor de archivos e IDE minimalista Visual Studio Code</title>
        <updated>2018-09-09T11:00:00+02:00</updated>
        <published>2018-09-09T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/visual-studio-code.svg" width="200" height="199" alt="Visual Studio Code" title="Visual Studio Code"  class=""></p>
</div>
<p>Para trabajar y desde que empecé a usar un generador estático para el blog primero con <a href="http://octopress.org/">Octopress</a> y luego con <a href="https://gohugo.io/">Hugo</a> he necesitado un editor de archivos de texto y de código fuente. Uno de los más conocidos es <a href="https://www.sublimetext.com/">Sublime Text</a> con numerosas funcionalidades y atajos de teclado para realizar muchas acciones únicamente pulsado unas pocas teclas y sin necesidad de ratón en gran medida. Sublime Text está muy bien pero no es gratuito por lo que después de un tiempo empecé a usar <a href="https://atom.io/">Atom</a>, sin embargo, al estar este basado en <a href="https://electronjs.org/">Electron</a> que en realidad es un navegador <a href="https://www.google.es/chrome/browser/desktop/">Chrome</a> y <a href="https://es.wikipedia.org/wiki/JavaScript">JavaScript</a> con <a href="https://nodejs.org/en/">Node</a> su rendimiento se nota pobre. Buscando más alternativas la gente mencionaba bastante a menudo <a href="https://code.visualstudio.com/">Visual Studio Code</a>, lo probé, es el que más me ha gustado de todos y el que uso ahora.</p>
<p>Visual Studio Code es un editor de archivos de texto avanzado orientado a desarrolladores sin llegar a ser un IDE pero con algunas funcionalidades de estos. Visual Studio Code se nota mucho más rápido que Atom y soporta al igual que Sublime Text varias combinaciones de teclas para trabajar rápido con los archivos. Soporta numerosos formatos de archivos con resaltado de sintaxis entre ellos <a href="https://es.wikipedia.org/wiki/Markdown">Markdown</a>, <a href="https://www.yaml.org/">Yaml</a>, HTML, CSS, imágenes <em>png</em> y fotos <em>jpg</em> que son los formatos de archivo que utilizo para crear los artículos del blog. Permite visualizar imágenes y fotos sin necesidad de ir a la aplicación del sistema operativo para visualizarlas. Dada la popularidad que está alcanzando soporta un gran número de complementos o <em>plugins</em> que entre otros añaden resaltado de sintaxis para otros formatos de archivos que por defecto no soporta, como <a href="https://www.oracle.com/technetwork/java/index.html">Java</a>. En el caso del <a href="https://marketplace.visualstudio.com/items?itemName=redhat.java"><em>plugin</em> para Java</a> también permite asistencia de código y detectar errores de compilación, aunque no llegue a las capacidades de un IDE como <a href="https://www.jetbrains.com/idea/">IntelliJ</a>, <a href="https://eclipse.org">eclipse</a> o <a href="https://visualstudio.microsoft.com/">Visual Studio</a> sirve para editar ocasionalmente archivos de código fuente Java sin necesidad de abrir el IDE y su proyecto. Hay complementos para <a href="https://www.python.org/">Python</a>, <a href="https://www.ruby-lang.org/es/">Ruby</a>, <a href="https://golang.org/">Go</a>, <a href="https://www.rust-lang.org/">Rust</a> o <a href="https://gradle.org/">Gradle</a> entre otros muchos, y por supuesto JavaScript o <a href="https://www.typescriptlang.org/">TypeScript</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/visual-studio-code-1_hu8172c8a741f24521f7cd7f3616353770_673782_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Visual Studio Code"><img src="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/visual-studio-code-1_hu8172c8a741f24521f7cd7f3616353770_673782_300x200_fit_box_3.png" width="300" height="183" alt="Visual Studio Code" title="Visual Studio Code"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/visual-studio-code-2_hu8172c8a741f24521f7cd7f3616353770_704519_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Visual Studio Code"><img src="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/visual-studio-code-2_hu8172c8a741f24521f7cd7f3616353770_704519_300x200_fit_box_3.png" width="300" height="183" alt="Visual Studio Code" title="Visual Studio Code"  class="lozad "></a></p>
<figcaption>Visual Studio Code</figcaption>
</figure>
</div>
<p>Incluye una <a href="https://code.visualstudio.com/docs/editor/integrated-terminal">terminal integrada</a> para ejecutar comandos sin necesidad de salir del editor a la terminal del sistema. Soporta <a href="https://code.visualstudio.com/docs/editor/emmet">Emmet</a> para crear código con <em>snippets</em> en los tipos de archivos que los soporten entre ellos HTML y CSS. También incluye soporte para el sistema de <a href="https://code.visualstudio.com/docs/editor/versioncontrol">control de versiones Git</a> y otros con <em>plugins</em> que permiten ver las modificaciones realizadas en los archivos y los archivos modificados, hay gran cantidad de complementos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/git_hu8172c8a741f24521f7cd7f3616353770_1363988_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Git integrado"><img src="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/git_hu8172c8a741f24521f7cd7f3616353770_1363988_300x200_fit_box_3.png" width="300" height="183" alt="Git integrado" title="Git integrado"  class="lozad "></a></p>
<figcaption>Git integrado</figcaption>
</figure>
</div>
<p>Con la combinación <code>Ctrl + P</code> se abre una ventana emergente para abrir archivos por su nombre. Introduciendo <code>?</code> se obtienen las posibles acciones que se pueden realizar. Otra muy utilizada es <code>Ctrl + G</code> para ir a una línea específica del archivo, también se puede hacer desde la ventana emergente e introduciendo el carácter <code>:</code>. Con <code>Ctrl + Shift + O</code> se va a los símbolos detectados por editor según el tipo de archivo. Posee una buena <a href="https://code.visualstudio.com/docs">documentación</a> con la que ir aprendiendo a medida que se usa el mayor provecho posible.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/ventana-emergente_hu8172c8a741f24521f7cd7f3616353770_1615659_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ventana emergente de acciones rápidas"><img src="https://picodotdev.github.io/blog-bitix/2018/09/el-editor-de-archivos-e-ide-minimalista-visual-studio-code/images/ventana-emergente_hu8172c8a741f24521f7cd7f3616353770_1615659_300x200_fit_box_3.png" width="300" height="183" alt="Ventana emergente de acciones rápidas" title="Ventana emergente de acciones rápidas"  class="lozad "></a></p>
<figcaption>Ventana emergente de acciones rápidas</figcaption>
</figure>
</div>
<p>En definitiva tiene una buena cantidad de opciones que como desarrolladores son muy útiles. Otras funcionalidades que tiene son:</p>
<ul>
<li>Minimapa del archivo abierto.</li>
<li>Ajuste de linea.</li>
<li>Buscar y reemplazar usando expresiones regulares.</li>
<li>Espacios de trabajo con múltiples directorios raíz.</li>
<li>Ampliar, reducir el tamaño del texto y ajuste automático de linea.</li>
<li>Diseño de archivos abiertos en columnas, filas y rejilla.</li>
<li>Soporte de secuencia final de línea Windows y Unix, con soporte para UTF-8.</li>
<li>Depurador de código.</li>
<li>Tiene un ritmo de actualización muy alto y en cada nueva versión se añaden numerosas funcionalidades o se mejoran las existentes.</li>
</ul>
<p>Por otro lado ocupa menos que los 260 MiB de Atom contra los 180 MiB de Visual Studio Code y está disponible en las plataformas más utilizadas <a href="https://www.microsoft.com/es-es/windows/">Windows</a>, <a href="https://www.apple.com/es/mac/">Mac</a> e incluso <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> aún siendo un producto de <a href="https://www.microsoft.com/">Microsoft</a>. Microsoft proporcionando software para la plataforma del pingüino, quien lo diría hace unas décadas.</p>
<p>En los sistemas Unix habrá gente que prefiera <a href="https://www.vim.org/">Vim</a> por sus enormes posibilidades, bajo consumo de memoria y exprimir al máximo cada megaherzio del procesador pero este requiere un tiempo de aprendizaje elevado inicial comparado con cualquiera de los editores anteriores.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://code.visualstudio.com/docs/setup/setup-overview">Setup</a></li>
<li><a href="https://code.visualstudio.com/docs/editor/codebasics">Basics</a></li>
<li><a href="https://code.visualstudio.com/Docs/editor/tasks">Tasks</a></li>
<li><a href="https://code.visualstudio.com/docs/editor/editingevolved">Edition evolved</a></li>
<li><a href="https://code.visualstudio.com/docs/editor/integrated-terminal">Integrated terminal</a></li>
<li><a href="https://code.visualstudio.com/docs/editor/emmet">Emmet</a></li>
<li><a href="https://code.visualstudio.com/docs/editor/extension-gallery">Extension gallery</a></li>
<li><a href="https://code.visualstudio.com/docs/java/java-tutorial">Java tutorial</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/</id>
        <title>Registro y descubrimiento de servicios con Spring Cloud Netflix</title>
        <updated>2018-09-07T19:00:00+02:00</updated>
        <published>2018-09-07T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Los microservicios en una aplicación con una arquitectura de microservicios son efímeros, se crean, se escalan para atender picos de mayor demanda, pueden desaparecer por problemas de la red de comunicaciones que no es fiable y volverse a crear en una ubicación diferente. Por esta naturaleza efímera es necesario un servicio con el cual los clientes de los microservicios puedan encontrarlos y que los microservicios utilizan para registrarse cuando se inician.</p>
<p>Este servicio de registro y descubrimiento es esencial y crítico en una aplicación orientada a microservicios ya que sin él los clientes no pueden encontrar los servicios que necesitan. Dado que es un servicio esencial es necesario que esté siempre disponible y para ello es recomendable crear un cluster de servicios de registro y descubrimiento para que en caso de que una instancia de este servicio falle estén disponibles otras instancias para los clientes.</p>
<p>Una <a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">implementación de registro y descubrimiento es Consul</a>, <a href="https://www.consul.io/">Consul</a> es un servicio externo creado por <a href="https://www.hashicorp.com/">Hashicorp</a>. <a href="https://projects.spring.io/spring-cloud/">Spring Cloud</a> entre sus proyectos, <a href="https://cloud.spring.io/spring-cloud-netflix/">Spring Cloud Netflix</a>, proporciona una implementación con <a href="https://github.com/Netflix/eureka">Eureka</a> de servicio de registro y descubrimiento que se pueden embeber en una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a>.</p>
<p>Para crear un servidor Eureka con Spring y Spring Boot hay que crear una aplicación con las dependencias adecuadas y la anotación <em>@EnableEurekaServer</em> para habilitar el inicio del servidor de registro y descubrimiento. Además, establecer las propiedades de configuración adecuadas para que el cluster de servidores Eureka se forme. Este microservicio es el primero que ha de iniciarse en una aplicación orientada a microservicios.</p>
<p>Utilizando <a href="https://gradle.org/">Gradle</a> las dependencias y la anotación <em>@EnableEurekaServer</em> a añadir a la clase principal de la aplicación son las siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.12.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springcloud.discoveryserver.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.1.12.RELEASE&#39;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="n">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR2&#39;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Spring&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-server&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.discoveryserver</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.CommandLineRunner</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.cloud.netflix.eureka.server.EnableEurekaServer</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.AnnotationConfigApplicationContext</span><span class="o">;</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableEurekaServer</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">CommandLineRunner</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span> <span class="n">application</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringApplication</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">application</span><span class="o">.</span><span class="na">setApplicationContextClass</span><span class="o">(</span><span class="n">AnnotationConfigApplicationContext</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>La propiedad de configuración principal para formar el cluster es <em>eureka.client.serviceURL.defaultZone</em> donde se especifica una lista <em>hostnames</em> donde están los servidores de registro y descubrimiento. Para dar a cada servidor en local un nombre de dominio distinto he usado el servicio de DNS <a href="http://xip.io/">xip.io</a> que resuelve el nombre de dominio a la dirección IP indicada en el propio nombre de dominio, así <em>ds1.127.0.0.1.xip.io</em> se resuelve a <em>127.0.0.1</em> que es la dirección para la propia máquina local al igual que <em>ds2.127.0.0.1.xip.io</em> y <em>ds3.127.0.0.1.xip.io</em>. El servicio de xip.io evita tener que crear en el archivo de <em>hosts</em> local una correspondencia entre nombre de <em>hostname</em> y la dirección IP de <em>loopback</em> de la propia máquina local.</p>
<p>En el archivo de configuración hay tres perfiles distintos que varían algunas propiedades según sea el perfil que se active al iniciar la instancia del servicio. En el perfil <em>ds1</em> el puerto donde se inicia el servicio es <em>8761</em>, con el perfil <em>ds2</em> el servicio se inicia en el puerto <em>8762</em> y con <em>ds3</em> en el <em>8763</em>, además se cambia el <em>hostname</em> para que la instancia sepa cual es.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8761}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">application</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">discoveryserver</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">eureka</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">environment</span><span class="p">:</span><span class="w"> </span><span class="l">default</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">client</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">registerWithEureka</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">fetchRegistry</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">serviceUrl</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">defaultZone</span><span class="p">:</span><span class="w"> </span><span class="l">http://ds1.127.0.0.1.xip.io:8761/eureka/,http://ds2.127.0.0.1.xip.io:8762/eureka/,http://ds3.127.0.0.1.xip.io:8763/eureka/</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nn">---</span><span class="w">&#10;</span><span class="w"></span><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8761</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w"> </span><span class="l">ds1</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">eureka</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">instance</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="l">ds1.127.0.0.1.xip.io</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nn">---</span><span class="w">&#10;</span><span class="w"></span><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8762</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w"> </span><span class="l">ds2</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">eureka</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">instance</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="l">ds2.127.0.0.1.xip.io</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nn">---</span><span class="w">&#10;</span><span class="w"></span><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8763</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">profiles</span><span class="p">:</span><span class="w"> </span><span class="l">ds3</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">eureka</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">instance</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="l">ds3.127.0.0.1.xip.io</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application.yml</span>
    </div>
</div>
<p>Los comandos para arrancar tres instancias de servidor de registro y descubrimiento utilizando varios perfiles de configuración de Spring son los siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--spring.profiles.active=ds1&#34;</span>&#10;$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--spring.profiles.active=ds2&#34;</span>&#10;$ ./gradlew discoveryserver:run --args<span class="o">=</span><span class="s2">&#34;--spring.profiles.active=ds3&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>run-discoveryserver.sh</span>
    </div>
</div>
<p>Estando disponible el servicio de registro y descubrimiento ya se puede iniciar el servicio de configuración. Con estos dos servicios de infraestructura iniciados los que sería un servicio de la aplicación ya puede iniciarse que consiste en este caso en obtener una referencia de una instancia del servicio de configuración registrada en el servicio de registro y descubrimiento, con esta referencia obtiene su configuración y se inicia.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew configserver:run&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>run-configserver.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8080&#34;</span>&#10;$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=8081&#34;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>run-service.sh</span>
    </div>
</div>
<p>Una vez iniciados los servidores de descubrimiento en la página <em>dashboard</em> de cualquiera de ellos cambiando el puerto de la dirección <em>http://ds1.127.0.0.1.xip.io:8761/</em> se observan varias propiedades como la lista de servidores del cluster, las réplicas registradas y disponibles y los servicios registrados con su ubicación y puerto. En este caso hay tres instancias del servicio de registro y descubrimiento, una de servidor de configuración y dos instancias de un servicio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-1_hucbae4859ed8e1c01a78ce54eb118f2fc_101099_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Cluster del servicio de registro y descubrimiento"><img src="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-1_hucbae4859ed8e1c01a78ce54eb118f2fc_101099_300x200_fit_box_3.png" width="258" height="200" alt="Cluster del servicio de registro y descubrimiento" title="Cluster del servicio de registro y descubrimiento"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Servicios registrados en el servicio de registro y descubrimiento"><img src="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/images/spring-eureka-2_hub1cbfdfec6fa7e0b16e220ff391ac48f_114116_300x200_fit_box_3.png" width="244" height="200" alt="Servicios registrados en el servicio de registro y descubrimiento" title="Servicios registrados en el servicio de registro y descubrimiento"  class="lozad "></a></p>
<figcaption>Servicios y su estado registrados en el servicio de registro y descubrimiento</figcaption>
</figure>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew discoveryserver:run --args=&#34;--spring.profiles.active=ds1&#34;</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    
</feed>