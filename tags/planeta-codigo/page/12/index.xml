<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2021-12-16T19:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/</id>
        <title>Recuperar datos eficientemente en GraphQL usando batching con data loaders</title>
        <updated>2020-08-22T21:00:00+02:00</updated>
        <published>2019-07-12T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Al diferencia de una API REST donde cada recurso posee un <em>endpoint</em> propio en GraphQL los recursos están relacionados y forman un grafo. Por otro lado las propiedades devueltas en una consulta de GraphQL son las que se indiquen en la consulta en vez de prefijadas como en una API REST. Hay que tener en cuenta que GraphQL para recuperar las propiedades de las entidades usa un <em>resolver</em> y las recupera una a una, si se devuelve una lista de elementos y de cada uno de esos elementos otra propiedad para la que hay que generar una consulta adicional a la base de datos el rendimiento no será bueno. Los <em>data loaders</em> permiten recuperar las propiedades relacionadas de una colección de entidades eficientemente evitando el problema 1+N.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/graphql.svg" width="200" height="200" alt="GraphQL" title="GraphQL"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una de las dificultades a resolver en GraphQL es evitar los problemas de generar 1+N consultas dado que en algunas peticiones se recupera una lista de elementos para recuperar alguna otra propiedad de esos elementos para la que se realiza otra consulta. Suele ocurrir al navegar las relaciones de las entidades, por ejemplo al solicitar una lista de libros y de cada libro obtener su autor, para obtener los libros se necesita una consulta y hay que evitar que para recuperar el autor de cada libro generar otra consulta, si el número de libros recuperados es grande el número de consultas será grande y la consulta será poco eficiente, lenta y generará una carga a evitar en el servidor de base de datos.</p>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/05/recuperar-datos-eficientemente-en-graphql-usando-batching/">Recuperar datos eficientemente en GraphQL usando batching</a> comentaba una estrategia para evitar este problema que consistía en dados una serie de elementos recuperados y si la propiedad estaba presente en la consulta se obtenían los identificativos de esos elementos y se recuperaba la propiedad para todos los elementos en una única consulta.</p>
<p>Sin embargo, GraphQL posee otra estrategia para resolver el problema de los 1+N, mediante <a href="https://www.graphql-java.com/documentation/v12/batching/">Data Loaders</a>. Para usar un <em>data loader</em> en una propiedad de un tipo hay que crear una clase que implemente la interfaz <em>MappedBatchLoader</em> o <em>MappedBatchLoaderWithContext</em> de <a href="https://github.com/graphql-java/java-dataloader">java-loader</a>. El método a implementar es <em>load(Set&lt;K&gt;)</em> que recibe un conjunto de instancias de las que se quiere recuperar la propiedad y devuelve un <em>Map&lt;K,V&gt;</em> cuya clave es la instancia de la colección y el valor de la propiedad recuperada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.dataloader</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type.Book</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.dataloader.BatchLoaderEnvironment</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.dataloader.MappedBatchLoaderWithContext</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IsbnDataLoader</span> <span class="kd">implements</span> <span class="n">MappedBatchLoaderWithContext</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;   <span class="kd">public</span> <span class="nf">IsbnDataLoader</span><span class="o">()</span> <span class="o">{</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="nd">@Override</span>&#10;   <span class="kd">public</span> <span class="n">CompletionStage</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="nf">load</span><span class="o">(</span><span class="n">Set</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span><span class="o">,</span> <span class="n">BatchLoaderEnvironment</span> <span class="n">environment</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Map</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">isbns</span> <span class="o">=</span> <span class="n">books</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toMap</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Function</span><span class="o">.</span><span class="na">identity</span><span class="o">(),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Book</span><span class="o">::</span><span class="n">getIsbn</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">isbns</span><span class="o">);</span>&#10;   <span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IsbnDataLoader.java</span>
    </div>
</div>
<p>Una vez definidos los <em>data loaders</em> hay que incluirlos en un registro e indicarlos en la clase del contexto de GraphQL. El método <em>contextBuilder</em> recibe todas las instancias de <em>data loaders</em>, el método <em>dataLoaderRegistry</em> crea el registro y finalmente se asigna el registro al contexto. Los <em>data loaders</em> cachean los datos de modo que si los datos no se deben compartir entre peticiones hay que construir los <em>data loaders</em> en cada petición.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLContextBuilder</span> <span class="nf">contextBuilder</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">MappedBatchLoaderWithContext</span><span class="o">&lt;?,</span> <span class="o">?&gt;&gt;</span> <span class="n">mappedBatchLoaders</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">GraphQLContextBuilder</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLContext</span> <span class="nf">build</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span> <span class="n">data</span> <span class="o">=</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span><span class="o">.</span><span class="na">newContext</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">GraphQLContext</span> <span class="n">context</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultGraphQLContext</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">context</span><span class="o">.</span><span class="na">setDataLoaderRegistry</span><span class="o">(</span><span class="n">buildDataLoaderRegistry</span><span class="o">(</span><span class="n">mappedBatchLoaders</span><span class="o">,</span> <span class="n">context</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">context</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLContext</span> <span class="nf">build</span><span class="o">(</span><span class="n">Session</span> <span class="n">session</span><span class="o">,</span> <span class="n">HandshakeRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span> <span class="n">data</span> <span class="o">=</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span><span class="o">.</span><span class="na">newContext</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">GraphQLContext</span> <span class="n">context</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultGraphQLContext</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">session</span><span class="o">,</span> <span class="n">request</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">context</span><span class="o">.</span><span class="na">setDataLoaderRegistry</span><span class="o">(</span><span class="n">buildDataLoaderRegistry</span><span class="o">(</span><span class="n">mappedBatchLoaders</span><span class="o">,</span> <span class="n">context</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">context</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLContext</span> <span class="nf">build</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span> <span class="n">data</span> <span class="o">=</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span><span class="o">.</span><span class="na">newContext</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">GraphQLContext</span> <span class="n">context</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultGraphQLContext</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">context</span><span class="o">.</span><span class="na">setDataLoaderRegistry</span><span class="o">(</span><span class="n">buildDataLoaderRegistry</span><span class="o">(</span><span class="n">mappedBatchLoaders</span><span class="o">,</span> <span class="n">context</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">context</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DataLoaderRegistry</span> <span class="nf">buildDataLoaderRegistry</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">MappedBatchLoaderWithContext</span><span class="o">&lt;?,</span> <span class="o">?&gt;&gt;</span> <span class="n">mappedBatchLoaders</span><span class="o">,</span> <span class="n">GraphQLContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DataLoaderRegistry</span> <span class="n">registry</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DataLoaderRegistry</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">MappedBatchLoaderWithContext</span><span class="o">&lt;?,</span> <span class="o">?&gt;</span> <span class="n">loader</span> <span class="o">:</span> <span class="n">mappedBatchLoaders</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="n">loader</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getSimpleName</span><span class="o">(),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DataLoader</span><span class="o">.</span><span class="na">newMappedDataLoader</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">loader</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DataLoaderOptions</span><span class="o">.</span><span class="na">newOptions</span><span class="o">().</span><span class="na">setBatchLoaderContextProvider</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">context</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">registry</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Una vez creados los <em>data loaders</em> hay que usarlos en los <em>resolver</em> de las propiedades de una entidad en la que se desee que se cargue de forma <em>batched</em>. El método de la propiedad del resolver debe devolver un <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletableFuture.html">CompletableFuture</a>, el método recibe la instancia de la que se quiere recuperar una propiedad y una referencia de <em>DataFetchingEnvironment</em> de la librería <a href="https://www.graphql-java.com/">graphql-java</a>, se recupera el <em>data loader</em> de esa propiedad y se le indica que acumule el conjunto de instancias de las que se quiere recuperar. GraphQL en algún momento llamará al método <em>load(Set&lt;K&gt;)</em> que recibe un conjunto de instancias para realizar la carga de todas en una única consulta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.resolver</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BookResolver</span> <span class="kd">implements</span> <span class="n">GraphQLResolver</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">CompletableFuture</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">getDataLoaderIsbn</span><span class="o">(</span><span class="n">Book</span> <span class="n">book</span><span class="o">,</span> <span class="n">DataFetchingEnvironment</span> <span class="n">environment</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DataLoader</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">dataLoader</span> <span class="o">=</span> <span class="n">environment</span><span class="o">.</span><span class="na">getDataLoader</span><span class="o">(</span><span class="n">IsbnDataLoader</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getSimpleName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">dataLoader</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">book</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BookResolver.java</span>
    </div>
</div>
<p>Al obtener los datos del conjunto de libros que utilizan un <em>batch loader</em> se produce la siguiente salida.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s1">&#39;Content-Type: application/json&#39;</span> -d <span class="s1">&#39;{&#34;query&#34;:&#34;query{books{id title dataLoaderIsbn}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;7&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;87c1342a-f46e-41ad-ad9a-dda88bb9d0dc&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;8&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Muerte de la luz&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;0e10de64-4b6e-403a-9cf0-082907525c7a&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;9&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;El nombre de la rosa&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;ea04f2a6-3f1d-4e1a-a2ee-cd370cd2a222&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;10&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Los tejedores de cabellos&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;c7a83503-fcbd-477e-862b-ab72575f72a7&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;11&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;0fee8cbb-8c0f-4fef-b89d-e6ac236fc31c&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/los-tipos-de-modulos-de-jmps-anadidos-a-partir-de-java-9/</id>
        <title>Los tipos de módulos de JPMS añadidos a partir de Java 9</title>
        <updated>2019-07-07T12:00:00+02:00</updated>
        <published>2019-07-07T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/los-tipos-de-modulos-de-jmps-anadidos-a-partir-de-java-9/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los módulos de Java dotan a la plataforma de nuevas características. Para garantiza la compatibilidad con las librerías existentes y permitir una transición progresiva de una versión sin módulos a una con módulos la plataforma de módulos de Java define varios tipos de módulos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Con la <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java2-los-modulos/">publicación de Java 9</a> el 2017 se introdujo la importante novedad de los módulos que proporciona a la plataforma Java varias características como encapsulación fuerte, interfaces bien definidas y dependencias explícitas. Todos las clases se organizan en paquetes y en Java 9 también en módulos para lo cual fue necesario reorganizar en módulos todos los paquetes de los que se compone la API de Java.</p>
<p>Antes de Java 9 todas las clases se proporcionaban en una lista ordenada de archivos <em>jar</em>, lo que se conocía como el <em>classpath</em> y donde cualquier clase tenía acceso a cualquier otra que se encontrase en él respetando los ámbitos de visibilidad (<em>public</em>, <em>protected</em>, <em>private</em> y <em>package</em>). En la definición de cada módulo en su archivo <em>module-info.java</em> se debe especificar cuales son los módulos requeridos para su funcionamiento no permitiendo la máquina virtual de Java el acceso a ninguna otra clase de otros módulos ni a ninguna clase de los paquetes no exportados.</p>
<p>Para mantener la compatibilidad hacia atrás y hacer más sencillo la transición hacía los módulos, algunas librerías puede que ya no tengan mantenimiento, se pueden dar tres tipos de módulos.</p>
<ul>
<li>Módulos con nombre: están compuestos por las librerías que tienen su definición de módulo en el archivo <em>module-info.java</em> y son colocados en el <em>modulepath</em> al iniciar la aplicación. Únicamente leen los módulos que explícitamente se ha indicado en la definición del módulo con la palabra <em>requires</em> y tiene acceso a los paquetes y sus clases exportados de los módulos requeridos.</li>
<li>Módulos automáticos: son las librerías que no tienen una definición de módulo pero que son colocadas en el <em>modulepath</em>. La máquina virtual de Java le asigna un nombre de módulo de forma automática según el nombre de la librería o según la propiedad <em>Automatic-Module-Name</em> del archivo de manifiesto. Leen todos los otros módulos del sistema, los que se encuentren en el <em>modulepath</em> (incluidos todos los otros automáticos) y de la imagen del JDK, y todas las clases del módulo anónimo. Los módulos automáticos son necesarios para que no requerir convertir una librería a un módulo, esto es no requerir convertir a un módulo todo el código ya existente lo cual es un problema ya que muchas librerías ya no tienen mantenimiento. Ya que no tienen una definición de módulo se exportan todos los paquetes.</li>
<li>Módulo anónimo: todas las librerías (incluso las que tienen su definición del módulo) que se colocan el <em>classpath</em> forman el módulo anónimo. Leen todos los módulos del sistema y tienen acceso a todos sus paquetes exportados.</li>
</ul>
<p>Ya se han publicado varios libros que explican detalladamente la modularidad introducida en Java 9. Cualquiera de ellos es una guía completa de la modularidad de Java.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1484225910&amp;linkId=9c7874501bb32fa3318e285022e0207a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1484227123&amp;linkId=59d96101c25f9c16c4427b8ee9daef1a" title="Amazon" class="lozad"></iframe>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/</id>
        <title>¿Donde comprar un ordenador sin Windows o con GNU/Linux?</title>
        <updated>2019-07-05T17:30:00+02:00</updated>
        <published>2019-07-05T17:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Hace no tanto tiempo era prácticamente imposible adquirir un equipo sin Windows preinstalado y salvo algunas excepciones en muchos comercios solo incluyen equipos con Windows o macOS. Pero a día hoy si alguien quiere comprar un equipo sin Windows para instalarle GNU/Linux hay varias posibilidades.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/slimbook.jpg" width="200" height="86" alt="Slimbook" title="Slimbook"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/vant.svg" width="200" height="61" alt="VANT" title="VANT"  class=""></p>
</div>
<p>En todos los comercios, grandes superficies e incluso en las pequeñas tiendas especializadas en informática solo hay dos opciones para comprar un portátil o lo compras con <a href="https://www.microsoft.com/es-es/windows/">Windows</a> incluído o optas por los caros mac de <a href="https://www.apple.com/">Apple</a>, los ordenadores de marca en formato torre o todo en uno también vienen todos con Windows. Hasta el momento no he encontrado ningún portátil con la posibilidad de adquirirlos con GNU/Linux en las tiendas en las que he estado. En el caso de los ordenadores de torre que montan las pequeñas tiendas a medida es posible adquirirlos sin sistema operativo pero para los usuarios con pocos conocimientos es un problema ya que no saben como instalárselo. Aún así tampoco he visto a ningún pequeño comercio ofrecer el servicio de instalarle alguna distribución de GNU/Linux sin coste al adquirir el equipo o con un coste mucho más reducido que la licencia de Windows.</p>
<p>Sin embargo, desde hace un tiempo es posible adquirir un ordenador con GNU/Linux y sin la licencia de Windows ni su coste, que no tienen nada que envidiar a cualquier otro equipo comercial de una marca más grande. En el caso de portátil están los <a href="https://slimbook.es/">Slimbook</a> o de <a href="https://www.vantpc.es/">VANT</a> que tiene unas características muy notables con el Slimbook PRO X a un precio razonable, con última generación de procesadores Intel, posibilidad de dos SSD NVMe, 32 GiB de memoria, pantalla con resolución 1920x1080 de marcos reducidos. En el caso de Slimbook ofrecen también un modelo de mini PC, el Slimbook ONE o con disipación pasiva el ZERO. En el caso de VANT sus portátiles MOOVE y de escritorio BLOCK, CELL y LIFE incluso con procesadores <a href="https://www.amd.com/es/ryzen">AMD Ryzen</a>. En ambos casos hay posibilidad de elegir entre algunas distribuciones de GNU/Linux con las que se quiere que venga preinstalado y estos son solo algunos de los modelos que tienen disponibles, Slimbook tiene también algún modelo tipo AIO o <em>all-in-one</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/images/slimbook-pro-x_hua5b4c2398d82a8510ad8beb8449d6998_256649_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Portátiles Slimbook PRO y X"><img src="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/images/slimbook-pro-x_hua5b4c2398d82a8510ad8beb8449d6998_256649_300x200_fit_q90_box.jpg" width="300" height="163" alt="Portátiles Slimbook PRO y X" title="Portátiles Slimbook PRO y X"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/images/vant-moove14_hu29d2fed7b21b31ea77145089791cd423_65756_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Portátiles VANT MOOVE"><img src="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/images/vant-moove14_hu29d2fed7b21b31ea77145089791cd423_65756_300x200_fit_q90_box.jpg" width="283" height="200" alt="Portátiles VANT MOOVE" title="Portátiles VANT MOOVE"  class="lozad "></a></p>
<figcaption>Portátiles Slimbook y VANT</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/images/slimbook-one_hu0be15977841ffc9244bd69210fb6289e_54789_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Ordenadores de escritorio Slimbook ONE"><img src="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/images/slimbook-one_hu0be15977841ffc9244bd69210fb6289e_54789_300x200_fit_q90_box.jpg" width="267" height="200" alt="Ordenadores de escritorio Slimbook ONE" title="Ordenadores de escritorio Slimbook ONE"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/images/vant-pure-a_huc5bfaab33d770c183ceef3f016afefa9_24859_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Ordenadores de escritorio VANT PURE-A"><img src="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/images/vant-pure-a_huc5bfaab33d770c183ceef3f016afefa9_24859_300x200_fit_q90_box.jpg" width="200" height="200" alt="Ordenadores de escritorio VANT PURE-A" title="Ordenadores de escritorio VANT PURE-A"  class="lozad "></a></p>
<figcaption>Ordenadores de escritorio Slimbook y VANT</figcaption>
</figure>
</div>
<p>Otra alternativa son los <a href="https://en.wikipedia.org/wiki/Next_Unit_of_Computing">Intel NUC</a> como el <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Bean Canyon que adquirí hace unos unos meses</a>, al ser un <em>barebone</em> no incluía memoria ni almacenamiento, tanto la memoria como el almacenamiento SSD los adquirí aparte y su instalación realizable en unos pocos minutos es muy sencilla ni requiere grandes conocimiento. Como no incluía almacenamiento tampoco incluía Windows, le instalé <a href="https://www.archlinux.org/">Arch Linux</a> y todo el hardware fue reconocido sin necesidad de controladores adicionales.</p>
<p>Los pequeños comercios seguramente no puedan competir en precio con los grandes superficies o gigantes como <a href="https://amzn.to/2flFhHA">Amazon</a> o grandes superficies como <a href="https://www.elcorteingles.es/">El Corte Inglés</a> o <a href="https://www.mediamarkt.es/">MediaMarkt</a> pero creo que tienen una oportunidad si ofrecieran el servicio de instalar alguna distribución de GNU/Linux o en ofrecer asesoramiento personalizado.</p>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="windows"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/hemeroteca-15/</id>
        <title>Hemeroteca #15</title>
        <updated>2019-06-30T10:30:00+02:00</updated>
        <published>2019-06-30T10:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/hemeroteca-15/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Estos seis primeros meses del 2019 han transcurrido como todos los años anteriores, sigo manteniendo la constancia de publicar dos artículos nuevos y únicos, algunas semanas sólo uno las menos tres.</p>
<p>En cuanto al blog durante este tiempo le he hecho un cambio de diseño para que el contenido quede centrado en la pantalla y tenga más espacio horizontal lo que creo hace más agradable la lectura del texto y los extractos de código se ven mejor con menos necesidad de hacer desplazamiento horizontal.</p>
<p>Para que la publicidad y los ingresos de Adsense no se viesen perjudicados y para mejorarlos más aún si cabe he puesto un bloque <em>billboard</em> en la cabecera, he mantenido el <em>leaderboard</em> después del resumen del articulo en aquellos que lo tienen y la publicidad lateral he hecho que sea <em>sticky</em> de manera que permanece mas tiempo visible con la consiguiente mejora en el numero de clic.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/">Rediseño de Blog Bitix con contenido centrado, más grande horizontalmente y publicidad lateral sticky</a></li>
</ul>
<p>Sólo han pasado dos meses con el nuevo diseño pero creo que ha sido un acierto, para la lectura del usuario como para los ingresos de Adsense que apreciablemente sigue mejorado respecto al año anterior. Estos meses de verano el tráfico suele descender algo y las visitas ya no me continúan creciendo mes a mes, los mejores meses son los de octubre, noviembre y diciembre con lo que esas fechas podré comparar mejor con las del año pasado. El número de visitas se mantiene más o menos contante y no de crecimiento como semestres anteriores.</p>
<p>En cuanto a los artículos que he escrito han sido sobre las temáticas habituales a las que dedicó este blog. Como desde hace poco estoy pudiendo usar Java 11 (¡por fin!, algo al menos) en el trabajo espero poder escribir algunos artículos con lo que considere destacable, por el momento he actualizado el ejemplo de código de la <a href="https://picodotdev.github.io/blog-bitix/series/graphql/">serie de artículos de GraphQL</a> de los que tengo pendiente publicar alguno más. Los artículos de este semestre han sido los siguientes. En total 47 nuevos.</p>
<p>En la categoría de Java.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/">Las contraseñas e información sensible en el código fuente o bytecode de Java no son seguras</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/acceder-a-hojas-de-calculo-de-google-docs-mediante-api-desde-una-aplicacion-java/">Acceder a hojas de cálculo de Google Docs mediante API desde una aplicación Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/comandos-para-compilar-codigo-fuente-y-ejecutar-programas-java/">Compilar el código fuente y ejecutar con los comandos javac, java y jar en Java 8 o anteriores</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/generar-procesar-y-modificar-documentos-json-con-json-p-en-java/">Generar, procesar y modificar documentos JSON con JSON-P en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/reproducir-audio-y-musica-midi-y-sampled-wav-mp3-ogg-con-java-y-ffmpeg/">Reproducir audio y música MIDI y sampled (wav, mp3, ogg) con Java y FFmpeg</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/usar-expresiones-jsonpath-para-extraer-datos-de-un-json-en-java/">Usar expresiones JSONPath para extraer datos de un JSON en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/convertir-un-json-a-objetos-y-objetos-a-json-con-json-b-gson-y-jackson-en-java/">Convertir un JSON a objetos y objetos a JSON con JSON-B, Gson y Jackson en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/">Servidor OAuth, gateway y servicio REST utilizando tokens JWT con Spring</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/ofuscar-datos-sensibles-en-las-trazas-con-log4j/">Ofuscar datos sensibles en las trazas con Log4j</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/las-clases-anidadas-inner-anonimas-y-locales-en-java/">Las clases anidadas inner, anónimas y locales en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/lookahead-y-lookbehind-en-expresiones-regulares-con-java/">Lookahead y lookbehind en expresiones regulares con Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/las-colecciones-de-java-estructuras-de-datos-para-guardar-referencias-a-objetos/">Las colecciones de Java, estructuras de datos para guardar referencias a objetos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/colecciones-sincronizadas-e-inmutables-en-java/">Colecciones sincronizadas e inmutables en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/ejemplo-de-reactive-streams-en-java/">Ejemplo de Reactive Streams en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/novedades-de-java-12/">Novedades de Java 12</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/escribir-en-la-misma-linea-de-la-consola-y-obtener-el-ancho-y-alto-de-la-terminal-con-java/">Escribir en la misma línea de la consola y obtener el ancho y alto de la terminal con Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/">Aumentar el tamaño del identificativo de la cookie de sesión de Tomcat o Spring Session</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/varias-consideraciones-importantes-para-trabajar-con-importes-correctamente-tipo-de-datos-precision-y-guardado/">Varias consideraciones importantes para trabajar con importes correctamente (tipo de datos, precisión y guardado)</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/ejemplo-de-maquina-de-estados-con-spring-statemachine/">Ejemplo de máquina de estados con Spring Statemachine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/el-concepto-de-wildcard-capture-en-java/">El concepto de wildcard capture en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/trazabilidad-en-microservicios-con-spring-cloud-sleuth/">Trazabilidad en microservicios con Spring Cloud Sleuth</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/lanzar-excepciones-checked-como-si-fueran-unchecked-en-java/">Lanzar excepciones checked como si fueran unchecked en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/">Log de sentencias SQL, sentencias lentas y otra información en jOOQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/teses-unitarios-parametrizados-con-junit/">Teses unitarios parametrizados con JUnit</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/metadatos-e-introspeccion-en-graphql/">Metadatos e introspección en GraphQL</a></li>
</ul>
<p>En la categoría de GNU/Linux.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/autenticacion-mediante-clave-publica-y-privada-con-ssh/">Autenticación mediante clave pública y privada con SSH</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/">Crear de forma sencilla y rápida máquinas virtuales de VirtualBox con Vagrant</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/">Formatear un dispositivo de almacenamiento compatible con Windows, macOS y Smart TV en GNU/Linux</a></li>
</ul>
<p>Unos sobre algunas de las herramientas de <a href="https://www.hashicorp.com/">HashiCorp</a>, los que me gustaría seguir ampliando en el futuro.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicios-nomad/">Servicios con persistencia en el orquestador de microservicos Nomad</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/">Registro y descubrimiento de servicios en contenedores de Docker con Consul y Registrator</a></li>
</ul>
<p>Varios sobre JavaScript y desarrollo web.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/componentes-en-el-cliente-con-web-components-usando-javascript-html-y-css/">Componentes en el cliente con Web Components usando JavaScript, HTML y CSS</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/codificar-los-datos-para-evitar-ataques-xss-en-una-pagina-web/">Codificar los datos para evitar ataques XSS en una página web</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/">Combinaciones de teclado en HTML, JavaScript y páginas web</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/pruebas-de-carga-y-rendimiento-de-un-servicio-web-con-apache-bench/">Pruebas de carga y rendimiento de un servicio web con Apache Bench</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/">Comprobar la seguridad de un sitio web que use SSL/TLS</a></li>
</ul>
<p>Sobre SQL destacando el dedicado a como hacer paginación correctamente con <em>seek</em> en vez de como habitualmente con <em>ofsset</em>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/log-de-sqls-y-de-sqls-lentas-en-myql-y-postgresql/">Log de SQLs y de SQLs lentas en MySQL y PostgreSQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/implementar-la-paginacion-eficientemente-en-consultas-sql-con-seek/">Implementar la paginación eficientemente en consultas SQL con seek</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/orden-de-ejecucion-de-las-clausulas-de-las-sentencias-select-de-sql/">Orden de ejecución de las cláusulas de las sentencias SELECT de SQL</a></li>
</ul>
<p>Otros que no entran en las categorias anteriores y otro de opinión.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/conferencia-bilbostack-2019/">Conferencia BilboStack 2019</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/de-un-movil-samsung-galaxy-s3-a-un-samsung-galaxy-s6/">De un móvil Samsung Galaxy S3 a un Samsung Galaxy S6</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/historial-y-evolucion-de-precios-en-amazon-con-camelcamelcamel/">Historial y evolución de los precios en Amazon con CamelCamelCamel</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/sobre-la-playstation-4-playstation-5-y-google-stadia/">Sobre la PlayStation 4, PlayStation 5 y Google Stadia</a></li>
</ul>
<p>Los dedicados al blog.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/9-aniversario-del-blog/">9º aniversario del blog</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/05/rediseno-de-blog-bitix-con-contenido-centrado-mas-grande-horizontalmente-y-publicidad-lateral-sticky/">Rediseño de Blog Bitix con contenido centrado, más grande horizontalmente y publicidad lateral sticky</a></li>
</ul>
<p>Y finalmente uno que estuvo patrocinado.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/02/proyecto-de-mejora-de-smart-tv-usando-una-vpn-para-acceder-a-contenido-restringido-por-ip/">Proyecto de mejora de Smart TV usando una VPN para acceder a contenido restringido por IP</a></li>
</ul>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="gnu-linux"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/sobre-la-playstation-4-playstation-5-y-google-stadia/</id>
        <title>Sobre la PlayStation 4, PlayStation 5 y Google Stadia</title>
        <updated>2019-06-29T11:00:00+02:00</updated>
        <published>2019-06-29T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/sobre-la-playstation-4-playstation-5-y-google-stadia/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El Intel NUC que adquirí hace unos meses no es el ideal para jugar sobre todo por su pequeño tamaño y temperaturas, en mi caso como jugador ocasional es suficiente pero unido a que soy usuario de GNU/Linux hace que deba usar Wine o Steam para los juegos con lo que hay algunos juegos que me llaman la atención que no tengo disponibles. La PlayStation 4 está ya al final de su ciclo de vida, ya hay noticias de la PlayStation 5 y Google Stadia ofrecerá una nueva experiencia de juego ¿comprar una PlayStation 4? ¿o seguir con Diablo 3 mientras se lanzan la PlayStation 5 o a Stadia?.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/playstation.svg" width="200" height="155" alt="PlayStation" title="PlayStation"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/google-stadia.svg" width="200" height="133" alt="Google Stadia" title="Google Stadia"  class=""></p>
</div>
<p>Desde que me compré un <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Intel NUC</a> he estado jugando a <a href="https://eu.diablo3.com/es/">Diablo 3</a> en <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> con <a href="https://www.winehq.org/">Wine</a> en la distribución <a href="https://www.archlinux.org/">Arch Linux</a> perfectamente, al menos de forma jugable con una resolución de 1600x900 en un <a href="https://picodotdev.github.io/blog-bitix/2018/10/desempaquetado-y-analisis-de-monitor-benq-pd2700q-2k-qhd-ips-27-pulgadas/">monitor BenQ PD2700Q</a> y con unos detalles de calidad gráfica medios. El NUC con un <a href="https://en.wikipedia.org/wiki/Intel_Graphics_Technology#Kaby_Lake_Refresh_/_Coffee_Lake">gráfica Intel integrada Iris 655</a> es notablemente mejor que la típica UHD 630 de otros modelos de procesador Intel que cumple para un jugador ocasional pero no se puede comparar con una dedicada NVIDIA o AMD de un equipo más grande. Y aunque funciona sin problemas la temperatura que alcanza llega a a entre los 75º y 80º, teniendo en cuenta que es un equipo de 10cm x 10 cm x 3.5cm es una temperatura para la que probablemente no sea recomendable mantener durante largos periodos de tiempo.</p>
<p>Por otro lado el hecho de usar Linux hace que no todos los juegos estén disponibles, con el gran trabajo de <a href="https://store.steampowered.com/">Steam</a> hay mayor número de títulos disponibles pero algunos únicamente siguen estando disponibles para <a href="https://www.microsoft.com/es-es/windows/">Windows</a> como <a href="https://store.steampowered.com/app/243470/Watch_Dogs/">Watch Dogs</a>. Probablemente la mejor alternativa para un usuario de Linux y para mi es usar una consola para tener un catálogo amplio de juegos, sin problemas de compatibilidad y con buen rendimiento. La consola candidata que evaluaría sería una <a href="https://www.playstation.com/es-es/">PlayStation</a>.</p>
<p>Ya han sido publicadas noticias indicando que la PlayStation 4 está al final de su ciclo de vida comercial y será sustituida previsiblemente en algún momento de 2020 o 2021 por una nueva PlayStation 5. Por otro lado Google ha anunciado su plataforma de juegos <a href="https://stadia.google.com">Stadia</a> con un funcionamiento vía <em>streaming</em>, disponible a finales del 2019 o principios del 2020. En esta situación surgen varias dudas razonables: ¿comprar una PlayStation 4? ¿seguir con Diablo 3? ¿esperar a la PlayStation 5? ¿que ofrece Google Stadia?</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="playstation-4">PlayStation 4</h3>
<p>La <a href="https://es.wikipedia.org/wiki/PlayStation_4">PlayStation 4</a> fue comercializada a finales del 2013, con su actualización del modelo <em>slim</em> y <em>pro</em> en el 2016. Habiendo ya pasado varios años desde su lanzamiento posee un amplio catálogo de juegos con muy buena calidad. Su precio está entre los 350 € nueva para el modelo <em>slim</em> o 230 € de segunda mano o seminueva en una tienda. Al haber pasado ya unos años hace que muchos destacados juegos se encuentren en unos razonables precios de entre 10 € y 20 €.</p>
<p>Aún habiéndose anunciado la PlayStation 5 como su sucesora aún están por lanzarse varios títulos importantes, todavía ofrecerá muchas horas de juego durante varios años más aún después de lanzarse la PS5.</p>
<p>Algunos de los juegos más populares son los siguientes: Grand Theft Auto V, Watch Dogs y Watch Dogs 2, Last of Us, Assassins Creed, FIFA, Dirt Rally, Horizon Zero Dawn, God of War, Bloodborne, Far Cry 5, The Witcher 3, Mafia 3, Tropico 5, Fallout 4, Dark Souls, Days Gone, Uncharted, The Division, Nioh, XCOM 2, Little Big Plannet, &hellip;</p>
<h3 id="diablo-3">Diablo 3</h3>
<p>Como tengo el Diablo 3 al que juego de forma muy esporádica y aún no le he exprimido completamente puedo pasar un tiempo jugando a este juego. Si Diablo 3 tiene algo es que está diseñado para ser extremadamente rejugable con varios personajes, niveles de dificultad, variaciones en los escenarios y mejora de objetos y personajes aún habiendo completado la historia principal. Tambien tengo en la biblioteca de Steam el Company of Heroes 2 que ni siquiera aún he instalado.</p>
<p>Con lo que en mi caso podría esperar al lanzamiento de la PS5 o esperar a ver que ofrece Stadia jugando al Diablo 3.</p>
<h3 id="playstation-5">PlayStation 5</h3>
<p>Entre las noticias que han aparecido sobre la PlayStation 5 es que usará nuevamente un procesador y gráfica AMD pero actualizados para ofrecer mucha más potencia. Usará un AMD Ryzen mucho más capaces que los <em>Jaguar</em> de la PS4 y una gráfica <em>Navi</em> ofreciendo una capacidad de cómputo de entre 8 y 10 TFLOPS por los 1,8 de la PS4.</p>
<p>Uno de los problemas de lanzar una nueva consola es que hasta pasado una buena cantidad de tiempo no posee un amplio catálogo de juegos y hay que tener en cuenta que los primeros modelos pueden presentar problemas como temperatura y ruido excesivo que hasta pasado un par de años no son en mayor medida resueltos con el modelo <em>slim</em>. En el caso de la PS5 al utilizar la misma arquitectura de procesador otra de las características destacadas es la retrocompatibilidad lo que la dotará del mismo catálogo de la PS4 desde mismo momento del lanzamiento, y todos los buenos juegos de la PS4 puedan ser jugados en la PS5.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/10/sobre-la-generacion-de-consolas-playstation-5-y-xbox-series-x-s-antes-de-que-se-comercialice-y-la-renovacion-del-hardware-de-pc/">Sobre la generación de consolas PlayStation 5 y Xbox Series X/S antes de que se comercialice y la renovación del hardware de PC</a></li>
</ul>
<h3 id="google-stadia-geforce-now-y-amazon-luna">Google Stadia, GeForce Now y Amazon Luna</h3>
<p>Desde hace bastante tiempo la PlayStation ha sido la consola dominante sobre la <a href="https://www.xbox.com">Xbox</a> y las varias de <a href="https://www.nintendo.com/">Nintendo</a>. Google ha presentado ya su plataforma de juegos mediante <em>streaming</em> estando disponible a finales del 2019. La ventaja de Stadia es que al estar completamente en la nube no hace falta adquirir hardware, únicamente comprar los juegos con lo que al igual que las consolas se eliminan completamente los problemas de controladores, rendimiento y compatibilidad, dado que se basa en la nube también elimina el tener que descargar pesadas actualizaciones y reducirá sensiblemente los tiempos de carga.</p>
<p>Ofrecerá una modalidad de suscripción para tener acceso a 4K, 60 FPS, HDR y sonido 5.1 pero en la modalidad Básica solo es necesario adquirir los juegos. Dado que se basa en la nube y funciona con <em>streaming</em> requiere conexión permanente de internet y de un buen ancho de banda, un ADSL no soportará 4K y justamente la calidad 720p o 1080p con lo que sería recomendable utilizar fibra o cable de al menos 30 Mbps. Está por ver como afectará la latencia de la conexión a la experiencia de juego que es especialmente sensible a este aspecto.</p>
<p>Por lo demás el precio de suscripción de 10 €/mes es recurrente pero teniendo en cuenta que una PS5 costará entre 400 € y 500 € en el momento de lanzamiento el precio de suscripción dan para varios años en lo que costaría comprar una PS5. Esta también por ver el precio de los juegos en Stadia si serán similares a los de las consolas tradicionales o algo superiores y el catálogo de juegos que ofrece en el momento de lanzamiento y pasados unos meses o algún año. Sin embargo, la tendencia a futuro parece indicar que el modelo de Stadia sea el que sigan las consolas o plataformas de juego más tarde o temprano. <a href="https://www.nvidia.com/es-es/">Nvidia</a> con su servicio <a href="https://www.nvidia.com/es-es/geforce-now/">GeForce Now</a>, <a href="https://amzn.to/2flFhHA">Amazon</a> está por entrar en el sector del entretenimiento de los juegos con <a href="https://www.amazon.com/luna/">Amazon Luna</a> muy similar Stadia, Microsoft tiene xCloud y Sony tiene PlayStation Now. Microsoft y Sony en la siguiente generación de Xbox Series S/X y PS5 seguirán con el modelo tradicional de consolas pero quizá esta sea la última generación antes de que todo esté basado en la nube, lo único que necesitan los servicios en la nube para tener éxito es tener un catálogo amplio de juegos de calidad similar a las consolas.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/06/sobre-la-playstation-4-playstation-5-y-google-stadia/">Prueba y opinión sobre jugar mediante streaming</a></li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/9uwunZ2a4gc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="evaluando-posibilidades">Evaluando posibilidades</h3>
<p>No es tanto el precio de la PS4 que está en 200 € de segunda mano o 290 € en tienda como saber en un año se lanzará un modelo mucho más capaz que lo dejará descatalogado y que además será retrocompatible con él. Stadia requiere una buena conexión de internet y no tendrá los juegos exclusivos de la PS, uno de los motivos para que haya sido la consola vencedora de esta generación, aunque si otros muy buenos presentes en todas las plataformas.</p>
<p>Un motivo importante para no comprar una consola es que hay muchos juegos como <em>shooters</em> y de estrategia en los que es preferible utilizar ratón y teclado sin embargo esto no es posible en la PS4. Stadia si soportará múltiples tipos de dispositivos controladores de entrada, entre ellos mandos de consolas, teclado y ratón.</p>
<p>Pero esto es la decisión de siempre adquirir lo que hay o esperar, la opción más sensata parece no esperar ya que la PS4 tiene un gran catálogo de juegos que dan para varios años de entretenimiento incluso pasado el tiempo que tarde en aparecer la PS5 <em>slim</em>.</p>
<h3 id="switch-hdmi">Switch HDMI</h3>
<p>En el caso de utilizar un monitor que solo disponga de una entrada HDMI tanto para el PC como para una consola se necesita un conmutador o <em>switch</em> HDMI que permita conmutar la entrada sin tener que conectar y desconectar cables. En <a href="https://amzn.to/2flFhHA">Amazon</a> hay muchos modelos, que ofrecen 4K a 60 Hz con hasta cinco entradas HDMI, una salida y está alimentado por USB.</p>
]]>
        </content>
        
            
                <category term="juegos"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/orden-de-ejecucion-de-las-clausulas-de-las-sentencias-select-de-sql/</id>
        <title>Orden de ejecución de las cláusulas de las sentencias SELECT de SQL</title>
        <updated>2019-06-28T17:00:00+02:00</updated>
        <published>2019-06-28T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/orden-de-ejecucion-de-las-clausulas-de-las-sentencias-select-de-sql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="206" alt="PostgreSQL" title="PostgreSQL"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/mysql.svg" width="200" height="136" alt="MySql" title="MySql"  class=""></p>
</div>
<p>El lenguaje SQL es un potente lenguaje declarativo usado en las bases de datos relacionales como <a href="https://www.mysql.com/">MySQL</a> o <a href="https://www.postgresql.org/">PostgreSQL</a>. En el lenguaje SQL se declara que datos se quieren recuperar, qué condiciones han de cumplir cumplir y qué funciones se aplican a los datos pero no se define como han de recuperarse los datos, es la base de datos la que decide como guardarlos e interpretando la sentencia SQL la que decide cómo recuperarlos.</p>
<p>El lenguaje SQL se compone de diferentes tipos de sentencias según el tipo de operación, lectura de datos con <em>SELECT</em>, inserción de datos con <em>INSERT</em>, actualización con <em>UPDATE</em> y eliminación con <em>DELETE</em>.</p>
<p>Las sentencias <em>SELECT</em> tienen la siguiente <a href="https://www.postgresql.org/docs/11/sql-select.html">sintaxis en PostgreSQL</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="p">[</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">RECURSIVE</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">with_query</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ALL</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">DISTINCT</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">output_name</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">from_item</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">condition</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">GROUP</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">grouping_element</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">HAVING</span><span class="w"> </span><span class="n">condition</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="n">WINDOW</span><span class="w"> </span><span class="n">window_name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">window_definition</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">UNION</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">INTERSECT</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">EXCEPT</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ALL</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">DISTINCT</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ASC</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">DESC</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">USING</span><span class="w"> </span><span class="k">operator</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">NULLS</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">FIRST</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">LAST</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LIMIT</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">count</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">ALL</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">OFFSET</span><span class="w"> </span><span class="k">start</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ROW</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">ROWS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">FETCH</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">FIRST</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">NEXT</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">count</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">ROW</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">ROWS</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="k">ONLY</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">FOR</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">UPDATE</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">NO</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="k">UPDATE</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">SHARE</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="k">SHARE</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">OF</span><span class="w"> </span><span class="k">table_name</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">NOWAIT</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">SKIP</span><span class="w"> </span><span class="n">LOCKED</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="k">where</span><span class="w"> </span><span class="n">from_item</span><span class="w"> </span><span class="n">can</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">one</span><span class="w"> </span><span class="k">of</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">ONLY</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">table_name</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="n">TABLESAMPLE</span><span class="w"> </span><span class="n">sampling_method</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">REPEATABLE</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">seed</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">with_query_name</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">function_name</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="k">ORDINALITY</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">function_name</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_definition</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">function_name</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_definition</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">ROWS</span><span class="w"> </span><span class="k">FROM</span><span class="p">(</span><span class="w"> </span><span class="n">function_name</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_definition</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="k">ORDINALITY</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">from_item</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">NATURAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">join_type</span><span class="w"> </span><span class="n">from_item</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">join_condition</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">USING</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">join_column</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="k">and</span><span class="w"> </span><span class="n">grouping_element</span><span class="w"> </span><span class="n">can</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">one</span><span class="w"> </span><span class="k">of</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">expression</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="k">ROLLUP</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="k">CUBE</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="k">GROUPING</span><span class="w"> </span><span class="k">SETS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">grouping_element</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="k">and</span><span class="w"> </span><span class="n">with_query</span><span class="w"> </span><span class="k">is</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">with_query_name</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="k">column_name</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">insert</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">update</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">delete</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="k">TABLE</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ONLY</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">table_name</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="p">]</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-sql-syntax.sql</span>
    </div>
</div>
<p>La sentencia <em>SELECT</em> se compone de varias cláusulas que se interpretan siguiendo una secuencia de operaciones tal que:</p>
<ol>
<li><em>FROM</em>: obtener los registros de todas las tablas fuentes de dato. Si hay <em>subqueries</em> en la cláusula <em>FROM</em> son evaluadas primero.</li>
<li><em>JOIN</em>: Realizar todas las posibles combinaciones descartando aquellas combinaciones que no cumplen las condiciones <em>JOIN</em> o estableciendo <em>NULL</em> en caso de <em>outer joins</em>.</li>
<li><em>WHERE</em>: Filtrar las combinaciones que cumplen las condiciones de la cláusula <em>WHERE</em>.</li>
<li><em>GROUP BY</em>: Construir los grupos basados en las expresiones de la lista de la cláusulas <em>GROUP BY</em>.</li>
<li><em>HAVING</em>: Filtrar los grupos que cumplen las condiciones de la cláusula <em>HAVING</em>.</li>
<li><em>SELECT</em>: Evaluar las expresiones de la lista <em>SELECT</em> para seleccionar los datos.</li>
<li><em>DISTINCT</em>: Eliminar filas duplicadas si se especifica <em>DISTINCT</em>.</li>
<li><em>UNION, EXCEPT, INTERSECT</em>: Aplicar las operaciones <em>UNION</em>, <em>EXCEPT</em> e <em>INTERSECT</em>.</li>
<li><em>ORDER BY</em>: Ordenar las filas de acuerdo a la cláusula <em>ORDER BY</em>.</li>
<li><em>OFFSET, LIMIT</em>: Descartar los registros de acuerdo <em>OFFSET</em> y <em>LIMIT</em>.</li>
</ol>
<p>Este es el orden general pero el algoritmo del planificador puede optimizar estos pasos realizándose en diferente orden o incluso simultáneamente. Por ejemplo, si se especifica un límite de 1 no es necesario obtener todas las filas de las tablas fuente sino solo una que cumpla la condición <em>WHERE</em>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://msdn.microsoft.com/en-us/library/ms189499.aspx">Logical Processing Order of the SELECT statement</a></li>
<li><a href="https://amzn.to/2Jai732">Libro Learning PostgreSQL 11</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/select.html">Sintaxis de sentencia SELECT en MySQL</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/</id>
        <title>Comprobar la seguridad de un sitio web que use SSL/TLS</title>
        <updated>2019-06-23T12:00:00+02:00</updated>
        <published>2019-06-23T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Aunque un sitio web no trate datos sensibles como tarjetas de crédito o datos personales es muy recomendable que use el protocolo seguro HTTPS para proporcionar cifrado entre el servidor y el navegador del usuario para dotar de confidencialidad a las comunicaciones a la vez que evitar modificaciones por terceras personas de los datos transmitidos. Además, el buscador Google lo tiene en cuenta para el SEO o posicionamiento en su buscador.</p>
<p>Para usar HTTPS lo difícil era conseguir un certificado firmado por una autoridad de confianza que los navegadores tengan instalada, la obtención y renovación de un certificado tenía un coste. Desde hace un tiempo la autoridad <a href="https://letsencrypt.org/">Let’s encrypt</a> emite certificados digitales gratuitamente que proporciona uno en pocos minutos y de forma automatizada incluida la renovación para usar un protocolo seguro. <a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/">Usar un certificado de Let’s encrypt en el servidor web nginx</a> no es complicado.</p>
<p>Sin embargo, usar HTTPS simplemente no es suficiente y ha de configurarse el servidor web para que utilice algoritmos de cifrado fuertes y que no tengan problemas seguridad conocidos o hoy estén ya considerados débiles. Para analizar el nivel de seguridad proporcionado en las conexiones HTTPS de un servidor web se puede utilizar la herramienta <a href="https://www.ssllabs.com/">Qualys SSL Labs</a>. Por ejemplo, analizando la seguridad del protocolo HTTPS ofrecido por <a href="https://pages.github.com/">GitHub Pages</a> basta con introducir el dominio a analizar.</p>
<p>El informe que proporciona incluye información sobre el certificado del servidor entre ella su tiempo de validez y fecha de expiración, y si es de confianza para los navegadores y plataformas como Mozilla, Apple, Android, Java o Windows. Los datos de configuración como protocolos soportados, <em>cipher suites</em> y una simulación de <em>handshake</em> con una gran variedad de versiones de navegadores en diferentes plataformas y versiones incluyendo dispositivos móviles y de escritorio que permite conocer si algún dispositivo pudiera tener algún problema con la configuración de TLS en la conexión, también otros detalle del protocolo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/images/ssllabs_hu45897026cba3d1771fd184de0c40861a_124032_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Informe de seguridad TLS"><img src="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/images/ssllabs_hu45897026cba3d1771fd184de0c40861a_124032_650x450_fit_box_3.png" width="373" height="450" alt="Informe de seguridad TLS" title="Informe de seguridad TLS"  class="lozad "></a></p>
<figcaption>Informe de seguridad TLS</figcaption>
</figure>
</div>
<p>La herramienta proporciona una nota entre A y F siendo la A la mejor calificación posible. Como se observa en la captura para GitHub Pages la herramienta proporciona una calificación de A.</p>
<p>Hay múltiples combinaciones de algoritmos de cifrado o <em>cipher suites</em> usados en una conexión SSL/TLS. La primera parte de los siguientes se refieren a TLS, está el tamaño de la clave y el modo y el algoritmo de autenticación del mensaje. Algunas recomendaciones de uso es usar tamaños de clave de más de 128 bits, evitar usar RC4, DES y 3DES, preferir ECDHE y DHE ya que ofrecen <em>forward secrecy</em> que protege las comunicaciones pasadas aún habiéndose comprometida la clave privada del servidor.</p>
<ul>
<li>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_DHE_DSS_WITH_AES_256_CBC_SHA256</li>
<li>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_DHE_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_DHE_DSS_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</li>
</ul>
<p>Y algunas propiedades de los servidores web <a href="https://httpd.apache.org/">Apache HTTP</a> y <a href="https://nginx.org/">nginx</a> que afectan a los algoritmos de cifrado soportados son las siguientes. Algunos navegadores antiguos puede que no soporten los últimos algoritmos de cifrado por lo que hay que permitir en el servidor web unos que sean considerados como seguros pero que también soporten los navegadores de los usuarios del sitio web.</p>
<ul>
<li><a href="https://httpd.apache.org/docs/current/mod/mod_ssl.html">Apache Module mod_ssl</a></li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html">Nginx Module ngx_http_ssl_module</a></li>
</ul>
<p>Uan vez configurada la seguridad con TLS/SSL es recomendable <a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/">redirigir el tráfico del protocolo HTTP no seguro al protocolo HTTPS seguro</a>.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/</id>
        <title>Formatear un dispositivo de almacenamiento compatible con Windows, macOS y Smart TV en GNU/Linux</title>
        <updated>2019-06-21T19:00:00+02:00</updated>
        <published>2019-06-21T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los dispositivos de almacenamiento se han de formatear con un sistema de archivos. Algunos de los sistemas de archivos están mejor soportados y son compatibles con una mayor número de sistemas y dispositivos, por tanto al formatear un dispositivo de almacenamiento ha de elegirse como sistema de archivos uno compatible, dependiendo del uso es más adecuado uno u otro. Para los dispositivos extraíbles la opción recomendable es exFAT o en su defecto NTFS o FAT.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnome.svg" width="200" height="243" alt="GNOME" title="GNOME"  class=""></p>
</div>
<p>Cada sistema operativo posee uno o varios formatos de sistemas de archivos que soporta de forma nativa. Así por ejemplo <a href="https://www.microsoft.com/es-es/windows/">Windows</a> como sistema de archivos para el sistema se utiliza <a href="https://es.wikipedia.org/wiki/NTFS">NTFS</a> y <a href="https://en.wikipedia.org/wiki/File_Allocation_Table">FAT</a>, <a href="https://fr.wikipedia.org/wiki/FAT32">FAT32</a> o <a href="https://es.wikipedia.org/wiki/ExFAT">exFAT</a> para los medios extraíbles. En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> para el sistema se suele utilizar <a href="https://en.wikipedia.org/wiki/Ext4">ext4</a>. Y en <a href="https://www.apple.com/macos/">macOS</a> se utiliza <a href="https://en.wikipedia.org/wiki/HFS_Plus">HFS+</a> o <a href="https://en.wikipedia.org/wiki/Apple_File_System">APFS</a>. Cada unos posee unas propiedades y los más antiguos para evitar sus limitaciones han sido sustituidos por unos sistemas de archivos más modernos.</p>
<p>Los sistemas de archivos más compatibles son los que tradicionalmente se han utilizado por <a href="https://www.microsoft.com/">Microsoft</a> dada su amplia cuota de mercado en los sistemas de escritorio, estos son FAT y FAT32. Sin embargo, estos poseen unas limitaciones que no los hacen adecuados si el tamaño de los archivos superan los 4 GiB o la capacidad del sistemas de almacenamiento supera los 2 TiB, que son precisamente los límites máximos de FAT32. Para superar estas limitaciones Microsoft ha desarrollado exFAT como nuevo sistema de archivos para los medios extraíbles con unos límites de 16 EiB (16 x 1024 PiB x 1024 TiB, 16.6M TiB) para los tamaños de archivo y 64 ZiB (64 x 1024 EiB, 65536 EiB) para el sistema de almacenamiento son unos límites varios órdenes de magnitud más grandes (y considerarse infinitos) que las capacidades de la tecnología actual (aunque al ritmo del avance de la tecnología puede que se llegue a ellos dentro de unas décadas).</p>
<p>En GNU/Linux puede utilizarse FAT32, NTFS y exFAT tanto en modo lectura como escritura, pero Windows solo permite sus propios formatos nativos y ha de utilizarse alguno de los anteriores, macOS soporta FAT en modo lectura y escritura, NTFS en modo lectura y para exFAT soporta también lectura y escritura. Otros dispositivos como <em>Smart TV</em> suelen soportar alguno de los sistemas de archivos de Microsoft ya sea FAT32, NTFS y exFAT. Salvo que se quiera la máxima compatibilidad con FAT32 para con versiones antiguas de Windows o dispositivos con algunos años la opción más recomendable a usar es exFAT.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/_h30HBYxtws" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>En GNU/Linux para formatear y utilizar particiones en NTFS hay que instalar el paquete <a href="https://www.archlinux.org/packages/extra/x86_64/ntfs-3g/">ntfs-3g</a> y para exFAT el paquete <a href="https://www.archlinux.org/packages/community/x86_64/exfat-utils/">exfat-utils</a>, estos son los paquetes para <a href="https://www.archlinux.org/">Arch Linux</a> otras distribuciones tienen un paquete equivalente.</p>
<p>Para formatear una unidad ya sea una memoria USB o disco duro externo con formato exFAT en GNU/Linux con el entorno de escritorio <a href="https://www.gnome.org/">GNOME</a> se realiza con el programa <em>Discos</em>, aunque también es posible realizarlo desde la linea de comandos.</p>
<p>En la parte izquierda se encuentra los dispositivos conectados y reconocidos por el sistema. En mi caso el disco del sistema, un Samsung 970 EVO de 500 GB, un disco duro externo USB de 500 GB y una memoria USB de 16 GB sin ningún formato.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/images/gnome-disks-1_hu3d94dbe95fb176f8833a2957fc8f471b_68562_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dispositivos de almacenamiento del sistema"><img src="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/images/gnome-disks-1_hu3d94dbe95fb176f8833a2957fc8f471b_68562_300x200_fit_box_3.png" width="278" height="200" alt="Dispositivos de almacenamiento del sistema" title="Dispositivos de almacenamiento del sistema"  class="lozad "></a></p>
<figcaption>Unidades del sistema</figcaption>
</figure>
</div>
<p>Primero es importante identificar correctamente la unidad que se quiere formatear para no perder los datos al elegir por error otra. Se introduce el nombre del volumen que identifica al dispositivo y se elige el sistema de archivos, como opciones más comunes se ofrece ext4, NTFS y FAT pero pulsando en <em>Otro</em> aparecen más, entre ellos exFAT. Pulsando el botón <em>Siguiente</em> al cabo de unos segundos la partición queda formateada con exFAT y lista para usarse tanto en GNU/Linux como en Windows, macOS o un Smart TV.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/images/gnome-disks-2_hu23b2a5c2c2c53afb1bef6504f674b772_36277_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Formatear dispositivo de almacenamiento"><img src="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/images/gnome-disks-2_hu23b2a5c2c2c53afb1bef6504f674b772_36277_200x150_fit_box_3.png" width="200" height="117" alt="Formatear dispositivo de almacenamiento" title="Formatear dispositivo de almacenamiento"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/images/gnome-disks-3_huf713219edf0a2a8f08b77fcede61f612_48000_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Formatear dispositivo de almacenamiento"><img src="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/images/gnome-disks-3_huf713219edf0a2a8f08b77fcede61f612_48000_200x150_fit_box_3.png" width="200" height="117" alt="Formatear dispositivo de almacenamiento" title="Formatear dispositivo de almacenamiento"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/images/gnome-disks-4_huf2aa1a56d9573c99eb0951d2ad459bcf_76787_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Formatear dispositivo de almacenamiento"><img src="https://picodotdev.github.io/blog-bitix/2019/06/formatear-un-dispositivo-de-almacenamiento-compatible-con-windows-macos-y-smart-tv-en-gnu-linux/images/gnome-disks-4_huf2aa1a56d9573c99eb0951d2ad459bcf_76787_200x150_fit_box_3.png" width="200" height="144" alt="Formatear dispositivo de almacenamiento" title="Formatear dispositivo de almacenamiento"  class="lozad "></a></p>
<figcaption>Formatear dispositivo de almacenamiento</figcaption>
</figure>
</div>
<p>No está de más recordar que en el caso de desechar un dispositivo de almacenamiento es recomendable hacerle un formateo completo para que los datos que contenga no sean accedidos por la persona a la que se le entregue el dispositivo ya que incluso se pueden <a href="https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/">recuperar datos previamente eliminados incluso en una unidad corrupta</a>. Por otro lado en GNU/Linux si se desea mayor seguridad se puede cifrar la partición con la opción LUKS.</p>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/metadatos-e-introspeccion-en-graphql/</id>
        <title>Metadatos e introspección en GraphQL</title>
        <updated>2020-08-22T21:00:00+02:00</updated>
        <published>2019-06-16T00:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/metadatos-e-introspeccion-en-graphql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Una API REST no ofrece introspección y por tanto hay que recurrir a un sistema de documentación que puede estar desactualizado y hay que mantener para conocer como usar la API y cuales son sus tipos y parámetros. Por el contrario GraphQL incorpora un sistema de introspección que permite conocer sus tipos y campos, a través del editor GraphiQL o si fuese necesario de forma automatizada con código.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/graphql.svg" width="200" height="200" alt="GraphQL" title="GraphQL"  class=""></p>
</div>
<p>Una de las cosas que me gustan de GraphQL sobre REST es que la API de un servicio se define en un esquema. Tanto las operaciones de consulta, de modificación con sus nombres de parámetros, tipos y si son requeridos o no. Esta información es básica para hacer un buen uso de esa API y conocer cual es su contrato. Además con <a href="https://picodotdev.github.io/blog-bitix/2018/08/el-editor-explorador-e-ide-graphiql-para-una-api-con-graphql/">la herramienta GraphiQL</a> se pueden crear y realizar consultas con un pequeño IDE con asistencia de código. GraphQL genera los metadatos e ofrece la instrospección a partir únicamente de la definición del esquema del servicio sin ningún esfuerzo adicional por parte del creador del servicio.</p>
<p>En el ejemplo de esta <a href="https://picodotdev.github.io/blog-bitix/series/graphql/">serie de artículos sobre GraphQL</a> he usado el siguiente esquema que utiliza como modelo de datos el de una librería.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphqls" data-lang="graphqls"><span class="kd">scalar</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w"></span><span class="kd">scalar</span><span class="w"> </span><span class="nc">LocalDate</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Book</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Author</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">isbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">date</span><span class="p">:</span><span class="w"> </span><span class="nc">LocalDate</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">comments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">batchedIsbn</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">batchedComments</span><span class="p">(</span><span class="py">after</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">limit</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Magazine</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">pages</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Comment</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">text</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Author</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">input</span><span class="w"> </span><span class="nc">BookFilter</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">CommentsConnection</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">edges</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">CommentEdge</span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">pageInfo</span><span class="p">:</span><span class="w"> </span><span class="nc">PageInfo</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">CommentEdge</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">node</span><span class="p">:</span><span class="w"> </span><span class="nc">Comment</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">cursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">PageInfo</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">startCursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">endCursor</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">hasNextPage</span><span class="p">:</span><span class="w"> </span><span class="nc">Boolean</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">union</span><span class="w"> </span><span class="nc">Publication</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="py">Book</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="py">Magazine</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Query</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">books</span><span class="p">(</span><span class="py">filter</span><span class="p">:</span><span class="w"> </span><span class="nc">BookFilter</span><span class="p">):</span><span class="w"> </span><span class="p">[</span><span class="nc">Book</span><span class="p">]!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">publications</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Publication</span><span class="p">]!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">book</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Book</span><span class="p">!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">authors</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="nc">Author</span><span class="p">]!</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">author</span><span class="p">(</span><span class="py">id</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Author</span><span class="p">!</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">type</span><span class="w"> </span><span class="nc">Mutation</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="py">addBook</span><span class="p">(</span><span class="py">title</span><span class="p">:</span><span class="w"> </span><span class="nc">String</span><span class="p">,</span><span class="w"> </span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">Long</span><span class="p">):</span><span class="w"> </span><span class="nc">Book</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="kd">schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kd">query</span><span class="p">:</span><span class="w"> </span><span class="nc">Query</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nc">mutation</span><span class="p">:</span><span class="w"> </span><span class="nc">Mutation</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>library.graphqls</span>
    </div>
</div>
<p>Si no se conoce el esquema qué operaciones, tipos y nombres ofrece la API GraphQL permite introspección y con únicamente el <em>endpoint</em> se puede averiguar esta información.</p>
<p>Por ejemplo, con la siguiente consulta se puede conocer qué tipos contiene el esquema de una API. Los que comienzan con dos barras bajas o <em>__</em> son tipos parte del sistema de introspección. Entre los que están el que representa un libro y autor pero también está <em>Query</em> que es un punto de acceso a la API.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphql" data-lang="graphql"><span class="p">{</span><span class="w">&#10;</span><span class="w"> </span><span class="py">__schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">   </span><span class="kd">type</span><span class="nc">s</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="py">name</span><span class="w">&#10;</span><span class="w">   </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="p">}</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>types.query</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>&#10;  <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;__schema&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;types&#34;</span><span class="p">:</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Author&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Book&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;BookFilter&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Boolean&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Comment&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;CommentEdge&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;CommentsConnection&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;LocalDate&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Long&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Magazine&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Mutation&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;PageInfo&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Publication&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Query&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__Directive&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__DirectiveLocation&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__EnumValue&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__Field&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__InputValue&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__Schema&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__Type&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__TypeKind&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;  <span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>types.out</span>
    </div>
</div>
<p>Conocer el tipo de las consultas de lectura y que consultas se pueden realizar inspeccionando el tipo <em>Query</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphql" data-lang="graphql"><span class="p">{</span><span class="w">&#10;</span><span class="w"> </span><span class="py">__schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">   </span><span class="kd">query</span><span class="nc">Type</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="py">name</span><span class="w">&#10;</span><span class="w">   </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="p">}</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>query-type.query</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">{&#10; __type(name: &#34;Query&#34;) {&#10;   name&#10;   fields {&#10;&nbsp;&nbsp;&nbsp;&nbsp; name&#10;   }&#10; }&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>query-type-info.query</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>&#10;  <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;__schema&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;queryType&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Query&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;  <span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>query-type.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>&#10;  <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;__type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Query&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;fields&#34;</span><span class="p">:</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;author&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;authors&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;book&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;books&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;publications&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;  <span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>query-type-info.out</span>
    </div>
</div>
<p>Por la propiedad de GraphQL de que se pueden realizar varias consultas en una única petición se pueden obtener ambos resultados a la vez.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphql" data-lang="graphql"><span class="p">{</span><span class="w">&#10;</span><span class="w"> </span><span class="py">__schema</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">   </span><span class="kd">query</span><span class="nc">Type</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="py">name</span><span class="w">&#10;</span><span class="w">   </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="py">__type</span><span class="p">(</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;Query&#34;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">   </span><span class="nc">name</span><span class="w">&#10;</span><span class="w">   </span><span class="py">fields</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="py">name</span><span class="w">&#10;</span><span class="w">   </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="p">}</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>queries.query</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>&#10;  <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;__schema&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;queryType&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Query&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;__type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Query&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;fields&#34;</span><span class="p">:</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;author&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;authors&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;book&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;books&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;publications&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;  <span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>queries.out</span>
    </div>
</div>
<p>Se puede obtener más en detalle los campos que contiene un tipo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphql" data-lang="graphql"><span class="p">{</span><span class="w">&#10;</span><span class="w"> </span><span class="py">book</span><span class="p">:</span><span class="w"> </span><span class="nc">__type</span><span class="p">(</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;Book&#34;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">   </span><span class="nc">name</span><span class="w">&#10;</span><span class="w">   </span><span class="py">fields</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="py">name</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="kd">type</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;   </span><span class="nc">name</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;   </span><span class="py">kind</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="p">}</span><span class="w">&#10;</span><span class="w">   </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="py">author</span><span class="p">:</span><span class="w"> </span><span class="nc">__type</span><span class="p">(</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;Author&#34;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">   </span><span class="nc">name</span><span class="w">&#10;</span><span class="w">   </span><span class="py">fields</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="py">name</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="kd">type</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;   </span><span class="nc">name</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;   </span><span class="py">kind</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="p">}</span><span class="w">&#10;</span><span class="w">   </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="p">}</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>types-info.query</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>&#10;  <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;book&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Book&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;fields&#34;</span><span class="p">:</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;author&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Author&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;OBJECT&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;batchedComments&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;CommentsConnection&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;OBJECT&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;batchedIsbn&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;comments&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;CommentsConnection&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;OBJECT&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;date&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;LocalDate&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;id&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Long&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;isbn&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;title&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;author&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Author&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;fields&#34;</span><span class="p">:</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;id&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Long&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;name&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;  <span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>types-info.out</span>
    </div>
</div>
<p>Incluso se puede inspeccionar los tipos del sistema de instrospección. Con las descripciones de los campos o parámetros de entrada si los tuviese.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-graphql" data-lang="graphql"><span class="p">{</span><span class="w">&#10;</span><span class="w"> </span><span class="py">__type</span><span class="p">(</span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#34;__Type&#34;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">   </span><span class="nc">name</span><span class="w">&#10;</span><span class="w">   </span><span class="py">fields</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="py">name</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="kd">type</span><span class="w"> </span><span class="p">{</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;   </span><span class="nc">name</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;   </span><span class="py">kind</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="p">}</span><span class="w">&#10;</span><span class="w">   </span><span class="p">}</span><span class="w">&#10;</span><span class="w"> </span><span class="p">}</span><span class="w">&#10;</span><span class="w"></span><span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>type-type.query</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>&#10;  <span class="nt">&#34;data&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;__type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__Type&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;fields&#34;</span><span class="p">:</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;description&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;enumValues&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;LIST&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;fields&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;LIST&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;inputFields&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;LIST&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;interfaces&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;LIST&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;kind&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;NON_NULL&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;name&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;String&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;SCALAR&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;ofType&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;__Type&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;OBJECT&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;possibleTypes&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;LIST&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;  <span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>type-type.out</span>
    </div>
</div>
<p>Conocer cuales son los campos de un tipo puede utilizarse para validar una API, comprobando que no se han eliminado campos necesarios. Es útil en el caso de querer automatizar esta validación de una API de GraphQL que se consuma ayudando a detectar de forma temprana problemas de compatibilidad al publicarse una nueva versión que no está bajo propiedad del que la usa.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/pruebas-de-carga-y-rendimiento-de-un-servicio-web-con-apache-bench/</id>
        <title>Pruebas de carga y rendimiento de un servicio web con Apache Bench</title>
        <updated>2019-06-14T17:00:00+02:00</updated>
        <published>2019-06-14T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/pruebas-de-carga-y-rendimiento-de-un-servicio-web-con-apache-bench/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En algunos que un servicio devuelva los datos esperados no es suficiente, otros requisitos no funcionales o de términos de servicio son que sus tiempos de respuesta sean menores al especificado en sus requisitos, que sea capaz de soportar cierto número de peticiones concurrentes o de atender un número de peticiones por minuto. Para asegurar que el servicio es capaz de cumplir estos requisitos funcionales hay que utilizar herramientas que permitan evaluar su desempeño, una de ellas muy fácil de utilizar y que proporciona valiosa información es Apache Bench.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache.svg" width="200" height="353" alt="Apache" title="Apache"  class=""></p>
</div>
<p>Para hacer pruebas de carga o medir el rendimiento de cualquier servicio que funcione mediante el protocolo HTTP hay multitud de herramientas. Una de las más sencillas de utilizar y con un informe con información interesante es <a href="https://httpd.apache.org/docs/current/programs/ab.html">Apache Bench</a> o simplemente <em>ab</em>. Este comando se puede utilizar con simplemente tres parámetros el <em>endpoint</em> a probar, el número de peticiones en total a realizar (<em>-n</em>) y cuantas peticiones concurrentes al mismo tiempo (<em>-c</em>). Otos parámetros son los datos POST a enviar, cabeceras (<em>-H</em>) y <em>cookies</em> (<em>-C</em>) de las peticiones, tiempos de <em>timeout</em> (<em>-s</em>) o certificado de cliente (<em>-E</em>) entre algunos otros. En vez limitar las pruebas a un número de peticiones las pruebas se pueden limitar a un tiempo determinado por ejemplo 60 segundos (<em>-t</em>).</p>
<p>Es una herramienta que se utiliza para medir el rendimiento de el servidor Apache pero utilizable para cualquier otro servicio por ejemplo una web o una API REST o <a href="https://graphql.org/">GraphQL</a>. Está disponible por supuesto para <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> pero también para <a href="https://www.apple.com/macos/">macOS</a> y para <a href="https://www.microsoft.com/es-es/windows/">Windows</a>.</p>
<p>Si quisiese medir el rendimiento en mi blog alojado en <a href="https://pages.github.com/">GitHub Pages</a> podría hacerlo lanzando 1000 peticiones para que sea una muestra suficientemente amplia con 20 usuarios de forma concurrente que son los que en los momentos de más tráfico tiene mi blog. Mi conexión de internet es un ADSL que no llega a 1 MB/s de subida por lo que la conexión en cierta medida limite el test.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ab -n <span class="m">1000</span> -c <span class="m">20</span> https://picodotdev.github.io/blog-bitix/&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ab.sh</span>
    </div>
</div>
<p>El informe de resultado que ofrece <em>ab</em> al finalizar la prueba incluye el tiempo dedicado en la conexión, en el procesado, esperando y en total con los valores para cada uno de ellos con mínimo y máximo, de media y la mediana. El tiempo total empleado por la prueba, el protocolo SSL/TLS usado, los bytes devueltos en la petición, el número de peticiones servidas por segundo, el tiempo de media empleado de media por cada petición y de media teniendo en cuenta la concurrencia, la tasa de transferencia en la respuesta y finalmente el tiempo de respuesta según percentil que van que desde el 50 al 100, es decir, que el 50% de las peticiones se han respondido en el tiempo en milisegundos indicado. Si las hubiera también muestra las peticiones fallidas y las que han devuelto un código de respuesta distinto de 200.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">This is ApacheBench, Version 2.3 &lt;$Revision: 1843412 $&gt;&#10;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&#10;Licensed to The Apache Software Foundation, http://www.apache.org/&#10;&#10;Benchmarking picodotdev.github.io (be patient)&#10;Completed 100 requests&#10;Completed 200 requests&#10;Completed 300 requests&#10;Completed 400 requests&#10;Completed 500 requests&#10;Completed 600 requests&#10;Completed 700 requests&#10;Completed 800 requests&#10;Completed 900 requests&#10;Completed 1000 requests&#10;Finished 1000 requests&#10;&#10;&#10;Server Software:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GitHub.com&#10;Server Hostname:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picodotdev.github.io&#10;Server Port:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;443&#10;SSL/TLS Protocol:&nbsp;&nbsp;&nbsp;&nbsp;   TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128&#10;Server Temp Key:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X25519 253 bits&#10;TLS Server Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picodotdev.github.io&#10;&#10;Document Path:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  /blog-bitix/&#10;Document Length:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;28389 bytes&#10;&#10;Concurrency Level:&nbsp;&nbsp;&nbsp;&nbsp;  20&#10;Time taken for tests:   29.220 seconds&#10;Complete requests:&nbsp;&nbsp;&nbsp;&nbsp;  1000&#10;Failed requests:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&#10;Total transferred:&nbsp;&nbsp;&nbsp;&nbsp;  29007394 bytes&#10;HTML transferred:&nbsp;&nbsp;&nbsp;&nbsp;   28389000 bytes&#10;Requests per second:&nbsp;&nbsp;&nbsp;&nbsp;34.22 [#/sec] (mean)&#10;Time per request:&nbsp;&nbsp;&nbsp;&nbsp;   584.404 [ms] (mean)&#10;Time per request:&nbsp;&nbsp;&nbsp;&nbsp;   29.220 [ms] (mean, across all concurrent requests)&#10;Transfer rate:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  969.45 [Kbytes/sec] received&#10;&#10;Connection Times (ms)&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  min  mean[+/-sd] median   max&#10;Connect:&nbsp;&nbsp;&nbsp;&nbsp;  149  349 149.7&nbsp;&nbsp;&nbsp;&nbsp;303&nbsp;&nbsp;&nbsp;&nbsp;1361&#10;Processing:   122  225  75.5&nbsp;&nbsp;&nbsp;&nbsp;207&nbsp;&nbsp;&nbsp;&nbsp; 586&#10;Waiting:&nbsp;&nbsp;&nbsp;&nbsp;   53  122  68.8&nbsp;&nbsp;&nbsp;&nbsp;108&nbsp;&nbsp;&nbsp;&nbsp; 481&#10;Total:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;329  574 174.0&nbsp;&nbsp;&nbsp;&nbsp;512&nbsp;&nbsp;&nbsp;&nbsp;1612&#10;&#10;Percentage of the requests served within a certain time (ms)&#10;  50%&nbsp;&nbsp;&nbsp;&nbsp;512&#10;  66%&nbsp;&nbsp;&nbsp;&nbsp;534&#10;  75%&nbsp;&nbsp;&nbsp;&nbsp;555&#10;  80%&nbsp;&nbsp;&nbsp;&nbsp;744&#10;  90%&nbsp;&nbsp;&nbsp;&nbsp;832&#10;  95%&nbsp;&nbsp;&nbsp;&nbsp;915&#10;  98%   1104&#10;  99%   1171&#10; 100%   1612 (longest request)</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ab.out</span>
    </div>
</div>
<p>Esta herramienta puede ser utilizada para par medir el rendimiento de cualquier servicio web. Un blog de <a href="https://wordpress.org/">Wordpress</a>, una página de una organización, un <em>endpoint</em> de un servicio REST o GraphQL, etc&hellip; Es muy sencilla de utilizar y genera un informe corto pero con interesante información sobre el rendimiento. Si se hacen cambios se puede medir el antes y el después y comparar los resultados para observar de que modo han afectado al rendimiento si de forma positiva o negativa y en que grado.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/teses-unitarios-parametrizados-con-junit/</id>
        <title>Teses unitarios parametrizados con JUnit</title>
        <updated>2019-06-07T17:00:00+02:00</updated>
        <published>2019-06-07T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/teses-unitarios-parametrizados-con-junit/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Hay múltiples lenguajes y librerías donde cada una publica nuevas versiones. Una vez elegida una esa decisión no tiene que ser para siempre si las circunstancias de un proyecto cambian o una nueva versión incorpora las funcionalidades por las que se eligió otra. Si se reconsideran de nuevo el conjunto de todos los parámetros la decisión puede ser distinta. Esto me ha ocurrido al evaluar de nuevo JUnit comparándolo con Spock, teniendo en cuenta que en JUnit 5 han incorporado los teses parametrizados y el lenguaje que utiliza cada una de ellas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/junit.png" width="200" height="200" alt="JUnit" title="JUnit"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En mis preferencias de herramientas que elegiría para un proyecto basado en la plataforma Java estaba <a href="https://code.google.com/p/spock/">Spock</a>, por la legibilidad de los teses con su lenguaje específico de dominio  o DSL con sus diferentes secciones <em>given</em>, <em>when</em>, <em>then</em>. Otro motivo era la posibilidad de ejercitar un mismo test pero con diferentes parámetros para ejecutar todas las condiciones del sujeto bajo prueba con la sección <em>where</em> y las posibilidades de <em>mocking</em> incorporadas. Pero Spock usa el lenguaje <a href="https://www.groovy-lang.org/">Groovy</a>. Es menos verboso, es dinámico pero que no posee igual la asistencia de código de los IDEs y por su naturaleza dinámica con posibilidad de errores de compilación no detectados hasta en tiempo de ejecución. En mis preferencias está el lenguaje Java así que he revisado si estás características de Spock son ofrecidas por <a href="https://junit.org/junit5/">JUnit</a> desde la última vez que lo use.</p>
<p>El primer motivo de usar Spock sobre la legibilidad del test se puede suplir añadiendo un comentario de línea con la sección. El segundo motivo es que en JUnit también se pueden crear teses parametrizados con varios casos de prueba. Para los teses parametrizados se puede usar la anotación <a href="https://junit.org/junit5/docs/current/api/org/junit/jupiter/params/ParameterizedTest.html">@ParameterizedTest</a> con una serie de valores que en el test se reciben como un parámetro.</p>
<p>Aquí se compara el mismo test usando Spock y luego JUnit.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="kn">import</span> <span class="nn">spock.lang.Specification</span>&#10;&#10;<span class="kd">class</span> <span class="nc">StringLengthCalculator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="nf">length</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">string</span><span class="o">.</span><span class="na">length</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kd">class</span> <span class="nc">StringLengthCalculatorSpock</span> <span class="kd">extends</span> <span class="n">Specification</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="s2">&#34;calculate string length&#34;</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">given:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringLengthCalculator</span><span class="o">()</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">expect:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">result</span> <span class="o">=</span> <span class="n">calculator</span><span class="o">.</span><span class="na">length</span><span class="o">(</span><span class="n">a</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">then:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expected</span> <span class="o">==</span> <span class="n">result</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">where:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">a</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">|</span> <span class="n">expected</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;&#34;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">|</span> <span class="mi">0</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;java&#34;</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">|</span> <span class="mi">4</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;groovy&#34;</span>  <span class="o">|</span> <span class="mi">5</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;go&#34;</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">|</span> <span class="mi">2</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>StringLengthCalculatorSpecification.groovy</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Assertions</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.DisplayName</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.params.provider.Arguments</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringLengthCalculator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">length</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">string</span><span class="o">.</span><span class="na">length</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringLengthCalculatorTest</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ParameterizedTest</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@DisplayName</span><span class="o">(</span><span class="s">&#34;calculate string length&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ValueSource</span><span class="o">(</span><span class="n">strings</span> <span class="o">=</span> <span class="o">{</span> <span class="s">&#34;&#34;</span><span class="o">,</span> <span class="s">&#34;java&#34;</span><span class="o">,</span> <span class="s">&#34;groovy&#34;</span><span class="o">,</span> <span class="s">&#34;go&#34;</span> <span class="o">})</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">lengthOfStrings</span><span class="o">(</span><span class="n">String</span> <span class="n">a</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">StringLengthCalculator</span> <span class="n">calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringLengthCalculator</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// expect&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">calculator</span><span class="o">.</span><span class="na">length</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Assertions</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="n">expected</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>StringLengthCalculatorTest.java</span>
    </div>
</div>
<p>O si la parametrización es más compleja usando un método que devuelve una lista de parámetros en Junit.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="kn">import</span> <span class="nn">spock.lang.Specification</span>&#10;&#10;<span class="kd">class</span> <span class="nc">Calculator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kd">class</span> <span class="nc">CalculatorSpock</span> <span class="kd">extends</span> <span class="n">Specification</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="s2">&#34;calculate sum&#34;</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">given:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculator</span><span class="o">()</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">expect:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">result</span> <span class="o">=</span> <span class="n">calculator</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">then:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expected</span> <span class="o">==</span> <span class="n">result</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">where:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">a</span> <span class="o">|</span>  <span class="n">b</span> <span class="o">|</span> <span class="n">expected</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="mi">1</span> <span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="mi">4</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="mi">2</span> <span class="o">|</span> <span class="o">-</span><span class="mi">1</span> <span class="o">|</span> <span class="mi">1</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="mi">0</span> <span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="mi">6</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CalculatorSpecification.groovy</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Assertions</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.DisplayName</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Calculator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CalculatorTest</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ParameterizedTest</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@DisplayName</span><span class="o">(</span><span class="s">&#34;calculate sum&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">lengthOfStrings</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">,</span> <span class="kt">int</span> <span class="n">expected</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Calculator</span> <span class="n">calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculator</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// when&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">calculator</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Assertions</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="n">expected</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="n">Stream</span><span class="o">&lt;</span><span class="n">Arguments</span><span class="o">&gt;</span> <span class="nf">lengthOfStrings</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Stream</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Arguments</span><span class="o">.</span><span class="na">arguments</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">3</span><span class="o">,</span> <span class="n">4</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Arguments</span><span class="o">.</span><span class="na">arguments</span><span class="o">(</span><span class="n">2</span><span class="o">,</span> <span class="o">-</span><span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Arguments</span><span class="o">.</span><span class="na">arguments</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">6</span><span class="o">,</span> <span class="n">6</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CalculatorTest.java</span>
    </div>
</div>
<p>Con estas posibilidades de JUnit y para hacer <em>mocking</em> con <a href="https://site.mockito.org/">Mockito</a> realmente los dos motivos que tenía para usar Spock no son imprescindibles además de disponer de un lenguaje con buena asistencia de código en los IDEs. También para los teses igualmente se aplican las <a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">10 razones que tengo para seguir usando Java</a>.</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/implementar-la-paginacion-eficientemente-en-consultas-sql-con-seek/</id>
        <title>Implementar la paginación eficientemente en consultas SQL con seek</title>
        <updated>2019-05-31T18:00:00+02:00</updated>
        <published>2019-05-31T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/implementar-la-paginacion-eficientemente-en-consultas-sql-con-seek/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las aplicaciones que muestran listados probablemente necesiten mostrarlos paginados. Sin embargo, implementar la paginación correctamente para que sea eficiente no pasa por emplear las clausulas <em>limit</em> ni <em>offset</em> que habitualmente se utilizan sino con <em>seek</em>. Además de que <em>limit</em> y <em>offset</em> da lugar a resultados no deseados si entre obtención de página y página se insertan filas en páginas anteriores.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/jooq.png" width="200" height="200" alt="jOOQ" title="jOOQ"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La paginación habitualmente se implementa con las palabras reservadas <em>limit</em> y <em>offset</em> del lenguaje SQL pero esto es ineficiente ya que para llegar los resultados de las últimas páginas la base de datos ha de recuperar antes todos los resultados anteriores. Cuando hay varios cientos de miles o millones de filas en una tabla esto es ineficiente y hace que las consultas sean lentas y añadan una importante carga al servidor de base de datos que al final afecta al rendimiento de la aplicación o su capacidad para atender a gran número de peticiones.</p>
<p>Además del rendimiento, otro problema de la paginación con <em>limit</em> y <em>offset</em> es que si se insertan filas en una página anterior mientras se están recorriendo los resultados, uno o varios resultados al avanzar por las páginas en la típica tabla de resultados en una aplicación web podría aparecer dos veces, en un proceso automatizado sería aún peor ya que un resultado podría procesarse dos veces.</p>
<p>La paginación con <em>limit</em> y <em>offset</em> permite ir a una página directamente en una búsqueda pero en los casos que hay miles de resultados realmente a un usuario no le interesa ir a una determinada página cuando hay cientos de páginas, en un proceso automatizado ir a una página en concreto tampoco suele ser un requerimiento.</p>
<p><a href="https://www.jooq.org/">jOOQ</a> con la cláusula <a href="https://www.jooq.org/javadoc/latest/org/jooq/SelectSeekStep1.html">seek</a> permite hacer la paginación eficiente de una forma cómoda. La técnica se basa en ordenar los resultados por unas determinadas columnas y filtrar por condición <em>where</em> sobre las mismas columnas los resultados anteriores, los valores por los que se filtra en la condición son los obtenidos de la última página.</p>
<p>Haciendo <em>seek</em> la paginación es más eficiente ya que la base de datos no necesita recuperar los datos de las páginas anteriores ya que los descarta utilizando la cláusula <em>where</em> que al final es en lo que se traduce la clausula <em>seek</em>. Y se elimina el problema de que se inserten datos en páginas anteriores y alguno se pudiese aparecer dos veces en los resultados ya que manteniendo la ordenación de la consulta si se insertan filas en páginas anteriores no afectarán a las páginas siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">import</span> <span class="nn">org.jooq.DSLContext</span><span class="o">;</span>&#10;<span class="o">...</span>&#10;<span class="kd">private</span> <span class="n">DSLContext</span> <span class="n">context</span><span class="o">;</span>&#10;<span class="o">...</span>&#10;<span class="n">context</span><span class="o">.</span><span class="na">selectFrom</span><span class="o">(</span><span class="n">Tables</span><span class="o">.</span><span class="na">PRODUCTO</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">orderBy</span><span class="o">(</span><span class="n">PRODUCTO</span><span class="o">.</span><span class="na">CANTIDAD</span><span class="o">,</span> <span class="n">PRODUCTO</span><span class="o">.</span><span class="na">ID</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">seek</span><span class="o">(</span><span class="n">3l</span><span class="o">,</span> <span class="n">2l</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">limit</span><span class="o">(</span><span class="n">10</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">fetchInto</span><span class="o">(</span><span class="n">Producto</span><span class="o">.</span><span class="na">class</span><span class="o">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Seek.java</span>
    </div>
</div>
<p>La SQL generada por jOOQ es la siguiente donde la clausula <em>seek</em> se añade como una condición en la cláusula <em>where</em>. El campo de la clausula <em>seek</em> coincide con el campo del criterio de ordenación, el operador mayor que en la condición coincide también con el orden ascendente del <em>order by</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Sql" data-lang="Sql"><span class="w">   </span><span class="k">select</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;ID&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;NOMBRE&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;DESCRIPCION&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;CANTIDAD&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;FECHA&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="k">from</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="k">where</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;CANTIDAD&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;ID&#34;</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="p">(</span><span class="k">cast</span><span class="p">(</span><span class="o">?</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nb">bigint</span><span class="p">),</span><span class="w"> </span><span class="k">cast</span><span class="p">(</span><span class="o">?</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nb">bigint</span><span class="p">))</span><span class="w">&#10;</span><span class="w"> </span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;CANTIDAD&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;ID&#34;</span><span class="w"> </span><span class="k">limit</span><span class="w"> </span><span class="o">?</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Seek.sql</span>
    </div>
</div>
<p>Para que el <em>seek</em> sea correcto los valores de las filas para los campos que forman parte del <em>seek</em> han de ser únicos por eso entre los campos de los ejemplos se incluye el identificativo de la fila, que siempre se incluye como último campo si hubiese más criterios de ordenación y valores para el <em>seek</em>.</p>
<p>Si además se tiene un índice para los campos que forman parte del <em>seek</em> el rendimiento será muy alto y la diferencia entre la primera y la última página mínimo, además se puede considerar independiente del número de filas de la tabla. Son varias las ventajas perdiendo solo la capacidad de navegar a cierta página pero en la mayoría de los casos esto es asumible.</p>
<p>En los siguientes interesantes artículos se comenta detalladamente como implementar la paginación eficientemente y se dan más detalles.</p>
<ul>
<li><a href="https://wiki.postgresql.org/images/3/35/Pagination_Done_the_PostgreSQL_Way.pdf">Pagination Done the PostgreSQL Way</a></li>
<li><a href="https://blog.jooq.org/2016/08/10/why-most-programmers-get-pagination-wrong/">Why Most Programmers Get Pagination Wrong</a></li>
<li><a href="https://dba.stackexchange.com/questions/73175/pagination-with-postgresql-9-3-counting-number-of-pages">Pagination with PostgreSQL 9.3: counting number of pages</a></li>
</ul>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/</id>
        <title>Registro y descubrimiento de servicios en contenedores de Docker con Consul y Registrator</title>
        <updated>2019-05-26T11:30:00+02:00</updated>
        <published>2019-05-26T11:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En los microservicios se hace necesario un servicio de registro y descubrimiento como Eureka o Consul que permita conocer la ubicación de las instancias en cada momento. Las instancias de los servicios se pueden registrar ellas mismas o esta tarea se puede delegar en una en otro servicio. Al usar contenedores de Docker una herramienta que permite delegar el registro y desregistro en Consul de los servicios es GliderLabs Registrator.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="278" alt="HashiCorp Consul" title="HashiCorp Consul"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>El registro y descubrimiento de servicios permite a los servicios registrase y a los clientes descubrir la ubicación de otros servicios, la ubicación consiste en la dirección IP y el puerto en el que contactarles. Dado la naturaleza efímera de los servicios donde nuevas instancias de servicios se inician y se detienen en diferentes máquinas y puertos el servicio de descubrimiento es esencial.</p>
<p>La funcionalidad de registro y descubrimiento consiste en dos partes, por un lado cuando se inicia una instancia de un servicio se registra su ubicación en el servicio de registro y descubrimiento y por otro lado los clientes cuando requieren una instancia de un servicio la buscan en el servicio de descubrimiento.</p>
<p>El registro en el servicio de descubrimiento puede hacerse de dos formas, que sea el propio servicio el que se registra en el servicio de descubrimiento o que se sea otro servicio el que lo registra. Para el primer caso escribí un artículo con <a href="https://www.consul.io/">Consul</a> como servicio de descubrimiento en una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> que se registra al iniciarse. La ventaja es que es autosuficiente pero adquiere la tarea de autoregistrarse. Por el contrario delegar la tarea de registro permite extraerla de los servicios y ofrecer esa funcionalidad por un servicio con esa misión específicamente.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul</a></li>
</ul>
<p>En este artículo se usa <a href="https://github.com/gliderlabs/registrator">GliderLabs Registrator</a> como servicio que se encarga de registrar en un servicio de descubrimiento como Consul los servicios que se inicien en <a href="https://www.docker.com/">Docker</a>, aunque soporta otros como <a href="https://etcd.io/">etcd</a>.</p>
<p>Registrator es un contenedor de Docker, su funcionamiento es escuchar los eventos del demonio de Docker y monitorizar cuando se inician nuevos contenedores o cuando se paran. La monitorización la hace a través del <em>socket</em> del servicio de Docker, para lo que hay que montar un volumen en este contenedor con el archivo <em>/var/run/docker.sock</em> del <em>host</em>.</p>
<p>Primero se inicia el servicio de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<p>Luego se inicia el contenedor Registrator indicando la ubicación con dirección IP y puerto del servicio de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm --name<span class="o">=</span>registrator --net<span class="o">=</span>host --volume<span class="o">=</span>/var/run/docker.sock:/tmp/docker.sock gliderlabs/registrator:latest consul://localhost:8500&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-registrator.sh</span>
    </div>
</div>
<p>Iniciados estos dos servicios en la interfaz de estado de Consul se observa que no hay ningún servicio pero cuando se inicie un nuevo contenedor será registrado en Consul por Registrator.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul_hudf2f8b03877264bacf83a564e5686ede_36482_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dirección"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul_hudf2f8b03877264bacf83a564e5686ede_36482_300x200_fit_box_3.png" width="287" height="200" alt="Dirección" title="Dirección"  class="lozad "></a></p>
</figure>
</div>
<p>En este caso se utiliza como servicio una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a>. Dado que el puerto en el que esté disponible el servicio de PostgreSQL es indiferente al utilizar un servicio de registro y descubrimiento se indica el <em>-p</em> sin indicar el puerto del <em>host</em>, de este modo Docker le asigna un puerto público aleatorio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm --name postgres -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>user -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>password -e <span class="nv">POSTGRES_DB</span><span class="o">=</span>database -p <span class="m">5432</span> postgres:alpine&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-postgres.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NAMES&#10;cb7602605725&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">54</span> seconds ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">53</span> seconds&nbsp;&nbsp;&nbsp;&nbsp;   0.0.0.0:32777-&gt;5432/tcp   postgres&#10;d286341148cb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gliderlabs/registrator:latest   <span class="s2">&#34;/bin/registrator co…&#34;</span>   About a minute ago   Up About a minute&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registrator</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps.sh</span>
    </div>
</div>
<p>En la salida del contenedor de Registrator se emite una traza indicando que el servicio de PostgreSQL ha sido registrado en Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">2019/05/26 11:05:29 Starting registrator v7 ...&#10;2019/05/26 11:05:29 Using consul adapter: consul://localhost:8500&#10;2019/05/26 11:05:29 Connecting to backend (0/0)&#10;2019/05/26 11:05:29 consul: current leader  127.0.0.1:8300&#10;2019/05/26 11:05:29 Listening for Docker events ...&#10;2019/05/26 11:05:29 Syncing services on 1 containers&#10;2019/05/26 11:05:29 ignored: d286341148cb no published ports&#10;2019/05/26 11:05:50 added: cb7602605725 archlinux:postgres:5432</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-registrator.out</span>
    </div>
</div>
<p>Una vez iniciado el servicio de postgres en la consola de Consul se muestra con su dirección y puerto en el que se encuentra, en el contenedor utiliza su puerto por defecto <em>5432</em> pero hacia el exterior en este caso al no haber especificado uno Docker le asigna un puerto aleatorio en este caso el <em>32777</em>. Este puerto aleatorio es con el que los clientes acceden a la base de datos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-1_hu5336dadbc35299bcca8969f84d373cf0_39850_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Servicio de PostgreSQL registrado en Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-1_hu5336dadbc35299bcca8969f84d373cf0_39850_300x200_fit_box_3.png" width="300" height="165" alt="Servicio de PostgreSQL registrado en Consul" title="Servicio de PostgreSQL registrado en Consul"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-2_huf0df6f6a3d2138a93d9a38f4927788b0_43545_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Servicio de PostgreSQL registrado en Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-2_huf0df6f6a3d2138a93d9a38f4927788b0_43545_300x200_fit_box_3.png" width="300" height="165" alt="Servicio de PostgreSQL registrado en Consul" title="Servicio de PostgreSQL registrado en Consul"  class="lozad "></a></p>
<figcaption>Servicio de postgres registrado en Consul por Registrator</figcaption>
</figure>
</div>
<p>En vez de iniciar los servicios individualmente con comandos de Docker creando un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> con la definición de todos los contenedores se facilita iniciar todos los contenedores con un comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker-compose up&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.7&#34;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">consul</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">consul:latest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">consul</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;consul&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;agent&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;-dev&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;-ui&#34;</span><span class="p">]</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">registrator</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">gliderlabs/registrator:latest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">registrator</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">/var/run/docker.sock:/tmp/docker.sock</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">entrypoint</span><span class="p">:</span><span class="w"> </span><span class="l">/bin/registrator consul://localhost:8500</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">depends_on</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">consul</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">postgres</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres:alpine</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">postgres</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;5432&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_USER=user</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_PASSWORD=password</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_DB=database</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">depends_on</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">registrator</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>El proyecto de <a href="https://projects.spring.io/spring-cloud/">Spring Cloud</a> ofrece soporte para ambas tareas de registrar y descubrir servicios, aunque perfectamente la tarea de registro se puede delegar como en este caso a Registrator y utilizar en los servicios de Spring Boot únicamente la parte de descubrimiento.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Registrator">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-compose-up.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/</id>
        <title>Log de sentencias SQL, sentencias lentas y otra información en jOOQ</title>
        <updated>2019-05-24T18:00:00+02:00</updated>
        <published>2019-05-24T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Algunas de las causas del bajo rendimiento de una aplicación que utiliza una base de datos son el número de sentencias que se realizan junto con las sentencias lentas por su coste de ejecución. Cada ejecución de una sentencia significa una comunicación por la red y ejecutar muchas de ellas significa un considerable y perceptible tiempo para el usuario. Por ello es conveniente saber que sentencias se ejecutan, si hay algún problema de 1+N o sentencias innecesarias que se repiten. Un <em>log</em> de las sentencias que se ejecutan es muy útil para detectar ineficiencias en la aplicación y corregirlas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/jooq.png" width="200" height="200" alt="jOOQ" title="jOOQ"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La librería <a href="https://www.jooq.org/">jOOQ</a> devuelve al lenguaje SQL de consultas para bases de datos relacionales al primer plano en una aplicación Java. En vez de crear una capa de abstracción como realiza la popular librería <a href="https://hibernate.org/">Hibernate</a> del modelo relacional al modelo orientado a objetos de Java permite construir con un DSL mediante su API fluída avanzadas sentencias SQL que soportan las versiones recientes de <a href="https://www.postgresql.org/">PostgreSQL</a> y <a href="https://www.mysql.com/">MySQL</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ</a></li>
</ul>
<p>En Hibernate la configuración de <em>statistics</em>, el <em>logger</em> <em>org.hibernate.SQL</em> y con el parámetro <em>show_sql</em> permiten visualizar que sentencias SQL se están lanzando, útil para conocer si algún <a href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/">problema de 1+N al navegar relaciones</a> que ocasionalmente se producen si no son tenidas en cuenta. Además de que sentencias se están lanzando es también interesante conocer que tiempo de ejecución está tomando cada sentencia para conseguir que el rendimiento de la aplicación no sea lento, para detectar sentencias lentas.</p>
<p>Usando <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> y la dependencia de jOOQ hay que proporcionar una instancia que implemente la interfaz <a href="https://www.jooq.org/javadoc/latest/org/jooq/ExecuteListener.html">ExecuteListener</a> o crear una instancia de <a href="https://www.jooq.org/javadoc/latest/org/jooq/impl/DefaultExecuteListener.html">DefaultExecuteListener</a>. Esta clase contiene numerosos métodos que permiten conocer y realizar acciones, en este caso emitir trazas. Dos de los métodos son <a href="https://www.jooq.org/javadoc/latest/org/jooq/impl/DefaultExecuteListener.html#executeStart-org.jooq.ExecuteContext-">executeStart()</a> y <a href="https://www.jooq.org/javadoc/latest/org/jooq/impl/DefaultExecuteListener.html#executeEnd-org.jooq.ExecuteContext-">executeEnd()</a> invocados por jOOQ antes y después de cada sentencia que lanza. Usando <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/System.html#nanoTime%28%29">System.nanoTime()</a> se mide el tiempo de ejecución.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Configuration</span>&#10;<span class="nd">@ComponentScan</span><span class="o">({</span> <span class="s">&#34;io.github.picodotdev.plugintapestry&#34;</span> <span class="o">})</span>&#10;<span class="nd">@EnableTransactionManagement</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppConfiguration</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span><span class="o">(</span><span class="n">destroyMethod</span> <span class="o">=</span> <span class="s">&#34;close&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">DataSource</span> <span class="nf">dataSource</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BasicDataSource</span> <span class="n">ds</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDataSource</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ds</span><span class="o">.</span><span class="na">setDriverClassName</span><span class="o">(</span><span class="n">Driver</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getCanonicalName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ds</span><span class="o">.</span><span class="na">setUrl</span><span class="o">(</span><span class="s">&#34;jdbc:h2:./misc/database/app&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ds</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">&#34;sa&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ds</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">&#34;sa&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">ds</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ConnectionProvider</span> <span class="nf">connectionProvider</span><span class="o">(</span><span class="n">DataSource</span> <span class="n">dataSource</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">DataSourceConnectionProvider</span><span class="o">(</span><span class="n">dataSource</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ExecuteListenerProvider</span> <span class="nf">executeListenerProvider</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">ExecuteListenerProvider</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ExecuteListener</span> <span class="nf">provide</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">JooqExecuteListener</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">org</span><span class="o">.</span><span class="na">jooq</span><span class="o">.</span><span class="na">Configuration</span> <span class="nf">config</span><span class="o">(</span><span class="n">ConnectionProvider</span> <span class="n">connectionProvider</span><span class="o">,</span> <span class="n">ExecuteListenerProvider</span> <span class="n">executeListenerProvider</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultConfiguration</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultConfiguration</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">config</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">connectionProvider</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">config</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">SQLDialect</span><span class="o">.</span><span class="na">H2</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">config</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">executeListenerProvider</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">config</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">DSLContext</span> <span class="nf">dsl</span><span class="o">(</span><span class="n">org</span><span class="o">.</span><span class="na">jooq</span><span class="o">.</span><span class="na">Configuration</span> <span class="n">config</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">DSL</span><span class="o">.</span><span class="na">using</span><span class="o">(</span><span class="n">config</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppConfiguration.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.misc</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.jooq.ExecuteContext</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.jooq.impl.DefaultExecuteListener</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.math.MathContext</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JooqExecuteListener</span> <span class="kd">extends</span> <span class="n">DefaultExecuteListener</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">JooqExecuteListener</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">start</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">end</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">executeStart</span><span class="o">(</span><span class="n">ExecuteContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">executeEnd</span><span class="o">(</span><span class="n">ExecuteContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">end</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;{} ({}ms)&#34;</span><span class="o">,</span> <span class="n">ctx</span><span class="o">.</span><span class="na">sql</span><span class="o">(),</span> <span class="n">getTime</span><span class="o">(</span><span class="n">start</span><span class="o">,</span> <span class="n">end</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getTime</span><span class="o">(</span><span class="kt">long</span> <span class="n">start</span><span class="o">,</span> <span class="kt">long</span> <span class="n">end</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">end</span> <span class="o">-</span> <span class="n">start</span><span class="o">,</span> <span class="k">new</span> <span class="n">MathContext</span><span class="o">(</span><span class="n">4</span><span class="o">)).</span><span class="na">divide</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1000000&#34;</span><span class="o">)).</span><span class="na">toString</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JooqExecuteListener.java</span>
    </div>
</div>
<p>En las siguientes trazas de ejecución de sentencias se observa una inserción de un registro (1), una posterior muestra del listado para lo que se realizan dos sentencias una que cuenta el número de elementos en la tabla con un <em>select count(*)</em> que junto con el número de elementos por página permite conocer cuantas páginas hay y un <em>select</em> con un <em>limit ?</em> para recuperar los datos de la primera página (2). Con el suficiente número de elementos en la tabla se hace una consulta con un <em>limit ?</em> y un <em>offset ?</em> para los elementos de una página posterior a la primera (3). Al eliminar un elemento de la tabla se ejecuta una sentencia <em>delete</em> con el identificativo de la fila a eliminar en la clausula <em>where</em> (4), finalmente si se utiliza el botón <em>Eliminar todos</em> se elimina todas las filas con otra sentencia <em>delete</em> pero sin especificar la clausula <em>where</em> (5). En cada sentencia se muestra el tiempo que ha tardado.</p>
<p>Estas sentencias se ejecutan en unos pocos milisegundos, en una aplicación con tablas de algún millón de registros, varios <em>joins</em>, condiciones <em>where</em> complejas, ordenación y paginación las sentencias SQL pueden tardar varias segundos y decenas de segundos, conocer sus tiempos de ejecución es importante.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">// (1)&#10;2019-05-24 19:00:00,829 ... INFO  ...JooqExecuteListener insert into &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; (&#34;ID&#34;, &#34;NOMBRE&#34;, &#34;DESCRIPCION&#34;, &#34;CANTIDAD&#34;, &#34;FECHA&#34;) values (cast(? as bigint), cast(? as varchar), cast(? as varchar), cast(? as bigint), cast(? as timestamp)) (1.887ms)&#10;&#10;// (2)&#10;2019-05-24 19:01:00,843 ... INFO  ...JooqExecuteListener select count(*) from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; (0.1474ms)&#10;2019-05-24 19:01:00,879 ... INFO  ...JooqExecuteListener select &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;ID&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;NOMBRE&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;DESCRIPCION&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;CANTIDAD&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;FECHA&#34; from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; limit ? (0.2915ms)&#10;&#10;// (3)&#10;2019-05-24 19:02:00,289 ... INFO  ...JooqExecuteListener select count(*) from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; (0.1092ms)&#10;2019-05-24 19:02:00,291 ... INFO  ...JooqExecuteListener select &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;ID&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;NOMBRE&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;DESCRIPCION&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;CANTIDAD&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;FECHA&#34; from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; limit ? offset ? (0.1623ms)&#10;&#10;// (4)&#10;2019-05-24 19:03:00,224 ... INFO  ...JooqExecuteListener delete from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; where &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;ID&#34; = cast(? as bigint) (1.19ms)&#10;&#10;// (5)&#10;2019-05-24 19:04:00,037 ... INFO  ...JooqExecuteListener delete from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; (0.391ms)&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/images/pagina-listado_hu3ecc29f36cbb587ee4f6a50927c3fc02_37205_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Listado de elementos"><img src="https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/images/pagina-listado_hu3ecc29f36cbb587ee4f6a50927c3fc02_37205_650x450_fit_box_3.png" width="611" height="450" alt="Listado de elementos" title="Listado de elementos"  class="lozad "></a></p>
<figcaption>Listado de elementos</figcaption>
</figure>
</div>
<p>La clase <a href="https://www.jooq.org/javadoc/latest/org/jooq/ExecuteContext.html">ExecuteContext</a> proporciona numerosa información sobre la ejecución de la sentencia como número de filas afectadas, si se ha producido una excepción, el tipo de sentencia (<em>READ</em>, <em>WRITE</em>, <em>DDL</em>, <em>BATCH</em>, <em>ROUTINE</em> u <em>OTHER</em>), sentencias <em>batch</em> u obtener los parámetros a través del objeto <a href="https://www.jooq.org/javadoc/latest/org/jooq/Query.html">Query</a>.</p>
<p>Simplemente mostrando las trazas de sentencias me ha permitido detectar que en el ejemplo se estaba realizando una pequeña ineficiencia. La sentencia <em>select count(*)</em> se lanzaba dos veces en la página de listado, una al querer saber si hay alguna fila y otra usada por el <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Grid.html">componente Grid</a> de <a href="https://tapestry.apache.org/">Tapestry</a>. Para resolverlo se cachea el resultado en la clase anónima <em>JooqGridDataSource</em> con el siguiente código.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.pages.admin</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductoAdmin</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">hasProductos</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="n">source</span><span class="o">.</span><span class="na">getAvailableRows</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">0</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">setModo</span><span class="o">(</span><span class="n">Modo</span> <span class="n">modo</span><span class="o">,</span> <span class="n">Producto</span> <span class="n">producto</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">switch</span> <span class="o">(</span><span class="n">modo</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;			<span class="k">case</span> <span class="n">LISTA</span><span class="o">:</span>&#10;				<span class="k">this</span><span class="o">.</span><span class="na">producto</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;				<span class="k">this</span><span class="o">.</span><span class="na">source</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JooqGridDataSource</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">Producto</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>&#10;&#10;					<span class="kd">private</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="o">-</span><span class="n">1</span><span class="o">;</span>&#10;					<span class="kd">private</span> <span class="n">List</span> <span class="n">list</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;&#10;					<span class="nd">@Override</span>&#10;					<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getAvailableRows</span><span class="o">()</span> <span class="o">{</span>&#10;						<span class="k">if</span> <span class="o">(</span><span class="n">count</span> <span class="o">==</span> <span class="o">-</span><span class="n">1</span><span class="o">)</span> <span class="o">{</span>&#10;							<span class="n">count</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">dao</span><span class="o">.</span><span class="na">countAll</span><span class="o">();</span>&#10;						<span class="o">}</span>&#10;						<span class="k">return</span> <span class="n">count</span><span class="o">;</span>&#10;					<span class="o">}</span>&#10;&#10;					<span class="nd">@Override</span>&#10;					<span class="kd">public</span> <span class="n">List</span> <span class="nf">find</span><span class="o">(</span><span class="n">Pagination</span> <span class="n">pagination</span><span class="o">)</span> <span class="o">{</span>&#10;						<span class="k">if</span> <span class="o">(</span><span class="n">list</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;							<span class="n">list</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">pagination</span><span class="o">);</span>&#10;						<span class="o">}</span>&#10;						<span class="k">return</span> <span class="n">list</span><span class="o">;</span>&#10;					<span class="o">}</span>&#10;				<span class="o">};</span>&#10;				<span class="k">break</span><span class="o">;</span>&#10;&#10;		<span class="o">}</span>&#10;		<span class="k">this</span><span class="o">.</span><span class="na">modo</span> <span class="o">=</span> <span class="n">modo</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductoAdmin.java</span>
    </div>
</div>
<p>Las bases de datos MySQL y PostgreSQL también ofrecen la posibilidad de <a href="https://picodotdev.github.io/blog-bitix/2019/02/log-de-sqls-y-de-sqls-lentas-en-myql-y-postgresql/">emitir en las sentencias en un <em>log</em></a> incluidas las sentencias lentas. Otra posibilidad es <a href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/">resaltar la sintaxis de las sentencias en la salida a la terminal</a> para una mejor lectura dando color a las palabras claves.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/</id>
        <title>Combinaciones de teclado en HTML, JavaScript y páginas web</title>
        <updated>2019-05-19T09:00:00+02:00</updated>
        <published>2019-05-19T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En las páginas y aplicaciones web también es posible utilizar combinaciones de teclas para proporcionar acceso rápido a funciones usadas frecuentemente. Utilizando la propiedad global <em>accesskey</em> para los campos de texto la acción es ubicar el foco en el campo y para los botones realizar la acción de clic. Los <em>listeners</em> como <em>onkeydown</em> permiten conocer que teclas modificadoras como <kbd>Ctrl</kbd>, <kbd>Shift</kbd> y <kbd>Alt</kbd> se han pulsado al mismo tiempo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/javascript.svg" width="200" height="200" alt="JavaScript" title="JavaScript"  class=""></p>
</div>
<p>En las aplicaciones de escritorio es habitual usar atajos de teclado o combinaciones de teclas para realizar acciones sin necesidad del ratón y sin requerir levantar las manos del teclado. Estos atajos de teclado permiten ahorrar tiempo al realizar acciones habituales ya que conociendo y usando la combinación de teclas es mucho más rápido que usar el ratón. Los usuarios que trabajan con una aplicación gran cantidad de tiempo les facilita la tarea. En las aplicaciones web ya no es tan habitual encontrar asignaciones de combinación de teclas pero también se pueden emplear y son igual de útiles.</p>
<p>La forma de utilizar combinaciones de teclas en una página web es haciendo uso de los eventos <em>onKeyDown</em> y <em>onKeyUp</em> o el <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey">atributo global <em>accesskey</em></a> que puede ser empleado en cualquier elemento aunque dependiendo del tipo de elemento el comportamiento puede ser distinto. El <em>listener</em> del evento recibe como argumento un objeto que representa el evento, entre la información que contiene está la tecla pulsada y las teclas de control adicionales pulsadas al mismo tiempo.</p>
<p>En este ejemplo se captura la combinación de teclas <kbd>Ctrl + Shift + s</kbd> a nivel de página que muestra una ventana emergente utilizando la función <em>alert()</em> de JavaScript. El <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent">objeto del evento</a> que se recibe como parámetro del <em>listener</em> posee las propiedades <em>ctrlKey</em>, <em>shiftKey</em> y <em>altKey</em> con las que determinar además de la tecla pulsada las teclas modificadoras adicionales pulsadas al mismo tiempo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Key combinations test<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://code.jquery.com/jquery-3.3.1.min.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Press Ctrl + Shift + s<span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;&lt;</span><span class="nt">br</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="na">accesskey</span><span class="o">=</span><span class="s">&#34;t&#34;</span><span class="p">&gt;&lt;</span><span class="nt">br</span><span class="p">&gt;&lt;</span><span class="nt">br</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">id </span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">accesskey</span><span class="o">=</span><span class="s">&#34;b&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Button&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&#34;keydown&#34;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">ctrlKey</span> <span class="o">&amp;&amp;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">shiftKey</span> <span class="o">&amp;&amp;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">which</span> <span class="o">===</span> <span class="mi">83</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">alert</span><span class="p">(</span><span class="s2">&#34;You pressed Ctrl + Shift + s&#34;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;#button&#34;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&#34;click&#34;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">alert</span><span class="p">(</span><span class="s2">&#34;You clicked button&#34;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HtmlKeyCombinations.html</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-1_hucdbf9b80216b5889f92e6ea3089b108a_13920_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ejemplo combinaciones de teclas"><img src="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-1_hucdbf9b80216b5889f92e6ea3089b108a_13920_300x200_fit_box_3.png" width="300" height="167" alt="Ejemplo combinaciones de teclas" title="Ejemplo combinaciones de teclas"  class="lozad "></a></p>
<figcaption>Ejemplo combinaciones de teclas</figcaption>
</figure>
</div>
<p>Los usos que se les pueden dar a estas combinaciones de teclas van desde posicionar el foco en un determinado campo de entrada o realizar alguna acción como enviar los datos de un formulario una vez están rellenados y son válidos o cualquiera otra acción mediante <a href="https://es.wikipedia.org/wiki/JavaScript">JavaScript</a>. Haciendo uso del método <a href="https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault">preventDefault()</a> del objeto evento se evita que el evento dispare la acción por defecto si tiene una asignada.</p>
<p>La propiedad global <em>accesskey</em> puede utilizarse en cualquier elemento de HTML, en el ejemplo en un elemento de formulario <em>input</em> y en un botón. En <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> y <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> la combinación de teclas es <kbd>Alt + Shift + [key]</kbd>, para el campo de texto la combinación es <kbd>Alt + Shift + t</kbd> y para el botón <kbd>Alt + Shift + b</kbd>, en el botón la acción es ubicar el foco de entrada en el campo de texto y para el botón realizar la acción clic.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-2_hucb0a71650a1fecca4774a5fbc5f53aea_17644_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Captura de Ctrl &amp;#43; Shift &amp;#43; s"><img src="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-2_hucb0a71650a1fecca4774a5fbc5f53aea_17644_200x150_fit_box_3.png" width="200" height="110" alt="Captura de Ctrl &amp;#43; Shift &amp;#43; s" title="Captura de Ctrl &amp;#43; Shift &amp;#43; s"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-3_hu8f2ee8de5de0b6cc5962cdd220a09655_14112_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Captura de Alt &amp;#43; Shift &amp;#43; t, ubica el foco en el campo de texto"><img src="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-3_hu8f2ee8de5de0b6cc5962cdd220a09655_14112_200x150_fit_box_3.png" width="200" height="111" alt="Captura de Alt &amp;#43; Shift &amp;#43; t, ubica el foco en el campo de texto" title="Captura de Alt &amp;#43; Shift &amp;#43; t, ubica el foco en el campo de texto"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-4_hu28de0382bc89a65a2ee12340ecc6d3a9_17581_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Captura de Alt &amp;#43; Shift &amp;#43; b, ejecuta la acción clic del botón"><img src="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-4_hu28de0382bc89a65a2ee12340ecc6d3a9_17581_200x150_fit_box_3.png" width="200" height="111" alt="Captura de Alt &amp;#43; Shift &amp;#43; b, ejecuta la acción clic del botón" title="Captura de Alt &amp;#43; Shift &amp;#43; b, ejecuta la acción clic del botón"  class="lozad "></a></p>
<figcaption>Acciones con combinaciones de teclas</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li>[Atributos globales][https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes]</li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/">Introducción al JavaScript de ECMAScript 6</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="javascript"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>