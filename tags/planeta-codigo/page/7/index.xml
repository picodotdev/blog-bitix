<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre el lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2023-03-23T20:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/</id>
        <title>Convertir texto o imagen a arte de caracteres ASCII</title>
        <updated>2021-03-27T00:00:00+01:00</updated>
        <published>2021-03-27T00:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El arte ASCII es utilizar caracteres para obtener una composición que simula una imagen o dibujo. Es posible convertir texto a arte de caracteres ASCII o una imagen en formato <em>svg</em>, <em>jpeg</em> o <em>png</em> a texto. En GNU/Linux hay herramientas de línea de comandos que permiten crear arte ASCII tanto para texto como para imágenes. En internet también hay disponibles páginas que ofrecen el servicio de generar arte ASCII sin necesidad de instalar ningún software en la propia computadora.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/03/convertir-texto-o-imagen-a-arte-de-caracteres-ascii/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/</id>
        <title>Análisis de la serie de juegos de plataformas Trine</title>
        <updated>2021-03-20T09:00:00+01:00</updated>
        <published>2021-03-20T09:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La serie de juegos Trine destacan por su nivel artístico gráfico y como juego de plataformas con puzles, incluso el primer Trine destaca en esto. Los juegos están basados en las aventuras de tres personajes un caballero, un mago y una ladrona cuya historia es narrada antes de cada nivel y está completamente doblada al español. El objetivo es llegar al final de cada nivel empleando una combinación de habilidades de cada personaje pero para darle más diversión al juego es posible completarlo con varios niveles de dificultad o como objetivos adicionales encontrar todo los orbes de experiencia, algunos de los cuales están un poco escondidos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/03/analisis-de-la-serie-de-juegos-de-plataformas-trine/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="juegos"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/novedades-de-java-16/</id>
        <title>Novedades de Java 16</title>
        <updated>2021-03-18T19:00:00+01:00</updated>
        <published>2021-03-18T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/novedades-de-java-16/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>En Java 16 los cambios en el lenguaje no son tan notables que en versiones anteriores, aún así  el calendario se sigue manteniendo y en cada versión se incluyen mejoras incrementales destacables. Se publica la versión final y lista para producción de algunas características y se añaden nuevas en forma de vista previa.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/03/novedades-de-java-16/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/</id>
        <title>Repositorio de artefactos privado con Nexus</title>
        <updated>2021-03-12T18:00:00+01:00</updated>
        <published>2021-03-12T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los repositorios de software almacenan los artefactos, son utilizados por las herramientas de construcción que los descargan y almacenan de forma local para posteriores usos las dependencias que los proyectos declaran en el archivo de construcción. Los desarrolladores de los artefactos publican en los repositorios de software las nuevas versiones. Nexus es un repositorio de software con soporte para repositorios de software de varios tipos, Maven para Java, imágenes de Docker, paquetes npm para JavaScript además de artefactos para los lenguajes Python y Go.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/03/repositorio-de-artefactos-privado-con-nexus/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/</id>
        <title>Acceso simple y seguro a sistemas remotos con Boundary</title>
        <updated>2021-03-05T15:00:00+01:00</updated>
        <published>2021-03-05T15:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Boundary es otra herramienta de HashiCorp dedicada a la seguridad. Vault está centrada en el almacenamiento de secretos, Boundary está centrada en otro aspecto de la seguridad que es el acceso a sistemas remotos. Una herramienta mejor adaptada y teniendo en cuenta las propiedades dinámicas de los sistemas actuales. Es una alternativa a los métodos de VPN, bastión y <em>firewall</em> que se utilizan para permitir estos accesos remotos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/</id>
        <title>Cifrado y descifrado como servicio con Vault</title>
        <updated>2021-02-26T16:00:00+01:00</updated>
        <published>2021-02-26T16:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Implementar la seguridad en una aplicación no es sencillo, cuando un sistema se compone de múltiples aplicaciones los posibles fallos de seguridad se multiplican. Vault es una herramienta que permite centralizar y delegar varios aspectos de las aplicaciones relativos a la seguridad, uno de ellos es el cifrado y descifrado de los datos para su almacenamiento y recuperación de una base de datos. Entre sus funcionalidades Vault ofrece como servicio el cifrado y descifrado de datos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/02/las-anotaciones-de-java-y-ejemplo-de-procesador-de-anotaciones-en-tiempo-de-compilacion/</id>
        <title>Las anotaciones de Java y ejemplo de procesador de anotaciones en tiempo de compilación</title>
        <updated>2021-02-19T17:00:00+01:00</updated>
        <published>2021-02-19T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/02/las-anotaciones-de-java-y-ejemplo-de-procesador-de-anotaciones-en-tiempo-de-compilacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Las anotaciones añadidas en Java 5 son muy utilizadas por múltiples librerías entre ellas Hibernate, Spring o Immutables. Desde Java 6 se ofrece una API para el procesamiento de las anotaciones en tiempo de compilación que permiten generar archivos de código fuente o emitir mensajes de error. Los procesadores de anotaciones son invocados por el compilador de Java permitiendo extender su comportamiento. En el artículo se muestra una implementación para generar clases que implementan el patrón <em>Builder</em> y otro para realizar comprobaciones.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/02/las-anotaciones-de-java-y-ejemplo-de-procesador-de-anotaciones-en-tiempo-de-compilacion/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/02/herramientas-para-convertir-texto-a-audio-de-voz-natural/</id>
        <title>Herramientas para convertir texto a audio de voz natural</title>
        <updated>2021-02-14T00:30:00+01:00</updated>
        <published>2021-02-14T00:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/02/herramientas-para-convertir-texto-a-audio-de-voz-natural/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los archivos de audio son difíciles de editar, un cambio requiere volverlos a grabar de forma parcial o de forma completa lo que requiere mucho tiempo. Hay herramientas que permiten convertir texto a audio de voz sintetizada, el resultado de algunas herramientas es suficientemente bueno como para no distinguirse de una voz humana natural.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/02/herramientas-para-convertir-texto-a-audio-de-voz-natural/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/02/guia-de-instalacion-de-gnu-linux-para-la-raspberry-pi/</id>
        <title>Guía de instalación de GNU/Linux para la Raspberry Pi</title>
        <updated>2021-02-12T16:00:00+01:00</updated>
        <published>2021-02-12T16:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/02/guia-de-instalacion-de-gnu-linux-para-la-raspberry-pi/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El propósito original del computador de pequeño tamaño Raspberry Pi es el educativo y aprendizaje de progamación e introducción a la  electrónica, sin embargo, debido a su bajo coste y ser una computador de propósito general es utilizado con otros múltiples propósitos. El primer paso para empezar a usar una Raspberry Pi es instalarle un sistema operativo, dos opciones son el ofrecido por la fundación de la Raspberry Pi o la versión ofrecida por Ubuntu.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/02/guia-de-instalacion-de-gnu-linux-para-la-raspberry-pi/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/02/introduccion-a-ddd-y-arquitectura-hexagonal-con-un-ejemplo-de-aplicacion-en-java/</id>
        <title>Introducción a DDD y arquitectura hexagonal con un ejemplo de aplicación en Java</title>
        <updated>2021-02-07T14:30:00+01:00</updated>
        <published>2021-02-07T01:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/02/introduccion-a-ddd-y-arquitectura-hexagonal-con-un-ejemplo-de-aplicacion-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La arquitectura de una aplicación define la estructura, organización y relación entre los componentes de la misma. En aplicaciones complejas utilizar DDD y arquitectura hexagonal son una opción recomendada. Hay varios libros técnicos dedicados a cada uno de ellos. En este artículo hago una introducción a DDD y arquitectura hexagonal y proporciono un ejemplo con el código fuente con el que implementar, analizar y ejecutar los conceptos teóricos en los que se basan.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/02/introduccion-a-ddd-y-arquitectura-hexagonal-con-un-ejemplo-de-aplicacion-en-java/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/02/licencias-de-software-libre-y-diferencias-con-software-privativo-y-de-codigo-abierto/</id>
        <title>Licencias de software libre y diferencias con software privativo y de código abierto</title>
        <updated>2021-02-05T16:00:00+01:00</updated>
        <published>2021-02-05T16:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/02/licencias-de-software-libre-y-diferencias-con-software-privativo-y-de-codigo-abierto/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Hay varias categorías de licencias de software que los desarrolladores como autores del software le asignan al software que crean o en el caso de empresas le asignan para proteger su propiedad intelectual. En la década de los años 80 Richard Stallman lanzo el movimiento de software libre creando software equivalente al de UNIX utilizando una licencia de software libre con unos principios éticos. Otras categorías de licencias son las privativas y las de código abierto.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/02/licencias-de-software-libre-y-diferencias-con-software-privativo-y-de-codigo-abierto/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/01/las-metodologias-oocss-bem-y-smacss-para-organizar-los-estilos-css/</id>
        <title>Las metodologías OOCSS, BEM y SMACSS para organizar los estilos CSS</title>
        <updated>2021-01-31T13:00:00+01:00</updated>
        <published>2021-01-31T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/01/las-metodologias-oocss-bem-y-smacss-para-organizar-los-estilos-css/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>OOCSS, BEM y SMACSS son tres de las metodologías más conocidas para organizar el código CSS con la intención de que sea legible y mantenible. Cada una de estas metodologías define una serie de convenciones y reglas que han de seguir los estilos y propiedades CSS.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/01/las-metodologias-oocss-bem-y-smacss-para-organizar-los-estilos-css/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/01/despues-de-dos-anos-de-comprar-un-intel-nuc-cambiaria-algo-en-el-futuro/</id>
        <title>Después de dos años de comprar un Intel NUC, ¿cambiaría algo en el futuro?</title>
        <updated>2021-01-29T15:00:00+01:00</updated>
        <published>2021-01-29T15:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/01/despues-de-dos-anos-de-comprar-un-intel-nuc-cambiaria-algo-en-el-futuro/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La tecnología informática sigue avanzado, no todos los días o semanas hay cambios pero con el paso de los semestres y lanzamientos de nuevos productos o estándares que se hacen cada año las mejoras son incrementales. Entre la adquisición de un ordenador y la necesidad del siguiente las mejoras son apreciables. Un procesador significativamente más potente, memoria RAM en cantidades absurdamente grandes, almacenamiento SSD a unos precios mucho más económicos, en mayores cantidades o aún más rápidos. No se cual será mi siguiente equipo a mi Intel NUC dependerá de la situación de los productos disponibles en el mercado y mis necesidades, el requisito de que sea lo más pequeño que me satisfaga seguirá manteniéndose, a partir de ahí depende de cosas de cómo evolucionen los juegos en la nube y si tengo fibra en vez de ADSL.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/01/despues-de-dos-anos-de-comprar-un-intel-nuc-cambiaria-algo-en-el-futuro/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
                <category term="opinion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/01/que-es-la-variable-path-del-sistema-y-como-cambiarla-en-gnu-linux/</id>
        <title>Qué es la variable PATH del sistema y cómo cambiarla en GNU/Linux</title>
        <updated>2021-01-24T00:30:00+01:00</updated>
        <published>2021-01-24T00:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/01/que-es-la-variable-path-del-sistema-y-como-cambiarla-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/01/que-es-la-variable-path-del-sistema-y-como-cambiarla-en-gnu-linux/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/01/en-java-los-argumentos-se-pasan-por-valor-o-por-referencia/</id>
        <title>En Java, ¿los argumentos se pasan por valor o por referencia?</title>
        <updated>2021-01-22T16:30:00+01:00</updated>
        <published>2021-01-22T16:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/01/en-java-los-argumentos-se-pasan-por-valor-o-por-referencia/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/01/en-java-los-argumentos-se-pasan-por-valor-o-por-referencia/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>