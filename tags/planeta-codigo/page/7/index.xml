<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2021-12-23T09:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/</id>
        <title>Comandos para crear una autoridad de certificación (CA) con OpenSSL</title>
        <updated>2020-08-07T15:00:00+02:00</updated>
        <published>2020-08-07T15:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los certificados autofirmados no son suficientes para un entorno de producción. En producción hay que usar certificados firmados por una entidad de confianza. AWS Certificate Manager ofrece la suya pero tiene un coste elevado y los certificados de otras entidades tampoco son baratos. Para certificados de uso interno en una organización que proporcionan comunicaciones seguras OpenSSL permite con una serie de comandos crear una autoridad de certificación o CA en la que los servidores y clientes internos confíen. Las funciones de la CA incluyen crear certificados a partir de las solicitudes de los certificados para los servidores y también la revocación y renovación de certificados.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/openssl.svg" width="400" height="124" alt="OpenSSL" title="OpenSSL"  class=""></p>
</div>
<p>Para <a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">usar el protocolo seguro HTTPS en un servidor web</a> es necesario al menos <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">generar un certificado autofirmado</a> que incluya el dominio del sitio web. El certificado autofirmado proporciona comunicaciones seguras entre el servidor y cliente pero los clientes no lo consideran de confianza de modo que han de omitir la validación del certificado, un entorno de desarrollo o pruebas es suficiente pero en un escenario de producción para añadir más seguridad donde hay varios servidores que además requieren y validan también el certificado del cliente es necesario utilizar certificados generados por una entidad en la que se confíe, esta es la autoridad de certificación. La autoridad de certificación o CA es una entidad en la que se confía, si una CA ha firmado digitalmente un certificado esta asegura que el certificado pertenece a quien dice pertenecer. Las funciones de una CA son firmar los certificados que se le envían, de revocar los certificados cuando han sido comprometidos o de renovarlos cuando su validez expira.</p>
<p><a href="https://aws.amazon.com/es/">AWS</a> en su oferta de productos tiene <a href="https://aws.amazon.com/es/certificate-manager/">AWS Certificate Manager</a> que hace las funciones de autoridad de certificados, delega la complejidad de hacer las funciones de autoridad de certificados pero su inconveniente es que tiene el significativo precio de $400 mensuales más un pequeño coste por certificado emitido. La herramienta <a href="https://www.openssl.org/">OpenSSL</a> permite hacer las funciones de una autoridad de certificación con un conjunto de comandos.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="crear-la-clave-y-certificado-de-la-autoridad-de-certificación-raíz">Crear la clave y certificado de la autoridad de certificación raíz</h3>
<p>El certificado de una autoridad de certificación es un certificado autofirmado que se utilizar para comprobar que la firma de los certificados que emite la entidad es válida. Es necesario crear un par de claves asimétricas privada y pública y posteriormente generar su certificado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span><span class="nb">set</span> -e&#10;&#10;<span class="nv">CA_PATH</span><span class="o">=</span>ca&#10;&#10;<span class="nb">export</span> <span class="nv">CA_DIR</span><span class="o">=</span>.&#10;<span class="nb">export</span> <span class="nv">INTERMEDIATE_DIR</span><span class="o">=</span>./intermediate&#10;&#10;mkdir -p <span class="nv">$CA_PATH</span>/certs <span class="nv">$CA_PATH</span>/crl <span class="nv">$CA_PATH</span>/newcerts <span class="nv">$CA_PATH</span>/private <span class="nv">$CA_PATH</span>/intermediate/&#10;cp openssl/ca/openssl*.conf <span class="nv">$CA_PATH</span>/&#10;cp openssl/intermediate/openssl*.conf <span class="nv">$CA_PATH</span>/intermediate/&#10;<span class="nb">cd</span> <span class="nv">$CA_PATH</span>&#10;&#10;chmod <span class="m">700</span> private&#10;touch index.txt&#10;<span class="nb">echo</span> <span class="m">1000</span> &gt; serial&#10;&#10;<span class="c1"># CA</span>&#10;&#10;openssl genrsa -out private/ca.key.pem <span class="m">8192</span>&#10;chmod <span class="m">400</span> private/ca.key.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-root-1.sh</span>
    </div>
</div>
<p>El certificado de la CA raíz es simplemente un certificado autofirmado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl req -config openssl.conf <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -key private/ca.key.pem <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -new -x509 -days <span class="m">7300</span> -sha256 -extensions v3_ca <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -subj <span class="s2">&#34;/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Acme S.A (CA)&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -out certs/ca.cert.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-root-2.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/archivos-ca_hu33cc35349f9d029cdda225fd09a64c32_41594_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivos y directorios de la autoridad de certificación con OpenSSL"><img src="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/archivos-ca_hu33cc35349f9d029cdda225fd09a64c32_41594_300x250_fit_box_3.png" width="300" height="202" alt="Archivos y directorios de la autoridad de certificación con OpenSSL" title="Archivos y directorios de la autoridad de certificación con OpenSSL"  class="lozad "></a></p>
<figcaption>Archivos y directorios de la autoridad de certificación con OpenSSL</figcaption>
</figure>
</div>
<p>Al crear el certificado se utiliza un archivo de configuración donde se guardan las opciones por defecto de configuración que determinan varios aspectos de OpenSSL como directorios, políticas, fecha de validez de los certificados emitidos, campos de los certificados que emite o perfiles de firma entre algunos otros.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="c1"># OpenSSL root CA configuration file.</span>&#10;<span class="c1"># Copy to `/root/ca/openssl.cnf`.</span>&#10;&#10;<span class="k">[ ca ]</span>&#10;<span class="c1"># `man ca`</span>&#10;<span class="na">default_ca</span> <span class="o">=</span> <span class="s">CA_default</span>&#10;&#10;<span class="k">[ CA_default ]</span>&#10;<span class="c1"># Directory and file locations.</span>&#10;<span class="na">dir</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$ENV::CA_DIR</span>&#10;<span class="na">certs</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">$dir/certs</span>&#10;<span class="na">crl_dir</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$dir/crl</span>&#10;<span class="na">new_certs_dir</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">$dir/newcerts</span>&#10;<span class="na">database</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">$dir/index.txt</span>&#10;<span class="na">serial</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">$dir/serial</span>&#10;<span class="na">RANDFILE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">$dir/private/.rand</span>&#10;<span class="na">copy_extensions</span>   <span class="o">=</span> <span class="s">none</span>&#10;&#10;<span class="c1"># The root key and root certificate.</span>&#10;<span class="na">private_key</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$dir/private/ca.key.pem</span>&#10;<span class="na">certificate</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$dir/certs/ca.cert.pem</span>&#10;&#10;<span class="c1"># For certificate revocation lists.</span>&#10;<span class="na">crlnumber</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">$dir/crlnumber</span>&#10;<span class="na">crl</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$dir/crl/ca.crl.pem</span>&#10;<span class="na">crl_extensions</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">crl_ext</span>&#10;<span class="na">default_crl_days</span>  <span class="o">=</span> <span class="s">30</span>&#10;&#10;<span class="c1"># SHA-1 is deprecated, so use SHA-2 instead.</span>&#10;<span class="na">default_md</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">sha256</span>&#10;&#10;<span class="na">name_opt</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">ca_default</span>&#10;<span class="na">cert_opt</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">ca_default</span>&#10;<span class="na">default_days</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">1825</span>&#10;<span class="na">preserve</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">no</span>&#10;<span class="na">policy</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">policy_strict</span>&#10;&#10;<span class="k">[ policy_strict ]</span>&#10;<span class="c1"># The root CA should only sign intermediate certificates that match.</span>&#10;<span class="c1"># See the POLICY FORMAT section of `man ca`.</span>&#10;<span class="na">countryName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">match</span>&#10;<span class="na">stateOrProvinceName</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">match</span>&#10;<span class="na">organizationName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">match</span>&#10;<span class="na">organizationalUnitName</span>  <span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">commonName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">supplied</span>&#10;<span class="na">emailAddress</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">optional</span>&#10;&#10;<span class="k">[ policy_loose ]</span>&#10;<span class="c1"># Allow the intermediate CA to sign a more diverse range of certificates.</span>&#10;<span class="c1"># See the POLICY FORMAT section of the `ca` man page.</span>&#10;<span class="na">countryName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">stateOrProvinceName</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">localityName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">organizationName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">organizationalUnitName</span>  <span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">commonName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">supplied</span>&#10;<span class="na">emailAddress</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">optional</span>&#10;&#10;<span class="k">[ req ]</span>&#10;<span class="c1"># Options for the `req` tool (`man req`).</span>&#10;<span class="na">default_bits</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">8192</span>&#10;<span class="na">distinguished_name</span>  <span class="o">=</span> <span class="s">req_distinguished_name</span>&#10;<span class="na">string_mask</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">utf8only</span>&#10;&#10;<span class="c1"># SHA-1 is deprecated, so use SHA-2 instead.</span>&#10;<span class="na">default_md</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">sha256</span>&#10;&#10;<span class="c1"># Extension to add when the -x509 option is used.</span>&#10;<span class="na">x509_extensions</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">v3_ca</span>&#10;&#10;<span class="k">[ req_distinguished_name ]</span>&#10;<span class="c1"># See &lt;https://en.wikipedia.org/wiki/Certificate_signing_request&gt;.</span>&#10;<span class="na">countryName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">Country Name (2 letter code)</span>&#10;<span class="na">stateOrProvinceName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">State or Province Name</span>&#10;<span class="na">localityName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">Locality Name</span>&#10;<span class="na">0.organizationName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">Organization Name</span>&#10;<span class="na">organizationalUnitName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">Organizational Unit Name</span>&#10;<span class="na">commonName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">Common Name</span>&#10;<span class="na">emailAddress</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">Email Address</span>&#10;&#10;<span class="c1"># Optionally, specify some defaults.</span>&#10;<span class="na">countryName_default</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">ES</span>&#10;<span class="na">stateOrProvinceName_default</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">Spain</span>&#10;<span class="na">localityName_default</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">Madrid</span>&#10;<span class="na">0.organizationName_default</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span>&#10;<span class="na">organizationalUnitName_default</span>  <span class="o">=</span> <span class="s">Acme S.A. (CA)</span>&#10;<span class="na">emailAddress_default</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span>&#10;&#10;<span class="k">[ v3_ca ]</span>&#10;<span class="c1"># Extensions for a typical CA (`man x509v3_config`).</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid:always,issuer</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">critical, CA:true</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, digitalSignature, cRLSign, keyCertSign</span>&#10;&#10;<span class="k">[ v3_intermediate_ca ]</span>&#10;<span class="c1"># Extensions for a typical intermediate CA (`man x509v3_config`).</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid:always,issuer</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">critical, CA:true, pathlen:0</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, digitalSignature, cRLSign, keyCertSign</span>&#10;&#10;<span class="k">[ usr_cert ]</span>&#10;<span class="c1"># Extensions for client certificates (`man x509v3_config`).</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">CA:FALSE</span>&#10;<span class="na">nsCertType</span> <span class="o">=</span> <span class="s">client, email</span>&#10;<span class="na">nsComment</span> <span class="o">=</span> <span class="s">&#34;OpenSSL Generated Client Certificate&#34;</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid,issuer</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, nonRepudiation, digitalSignature, keyEncipherment</span>&#10;<span class="na">extendedKeyUsage</span> <span class="o">=</span> <span class="s">clientAuth, emailProtection</span>&#10;&#10;<span class="k">[ server_cert ]</span>&#10;<span class="c1"># Extensions for server certificates (`man x509v3_config`).</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">CA:FALSE</span>&#10;<span class="na">nsCertType</span> <span class="o">=</span> <span class="s">server</span>&#10;<span class="na">nsComment</span> <span class="o">=</span> <span class="s">&#34;OpenSSL Generated Server Certificate&#34;</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid,issuer:always</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, digitalSignature, keyEncipherment</span>&#10;<span class="na">extendedKeyUsage</span> <span class="o">=</span> <span class="s">serverAuth</span>&#10;&#10;<span class="k">[ crl_ext ]</span>&#10;<span class="c1"># Extension for CRLs (`man x509v3_config`).</span>&#10;<span class="na">authorityKeyIdentifier</span><span class="o">=</span><span class="s">keyid:always</span>&#10;&#10;<span class="k">[ ocsp ]</span>&#10;<span class="c1"># Extension for OCSP signing certificates (`man ocsp`).</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">CA:FALSE</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid,issuer</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, digitalSignature</span>&#10;<span class="na">extendedKeyUsage</span> <span class="o">=</span> <span class="s">critical, OCSPSigning</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca/openssl.conf</span>
    </div>
</div>
<h3 id="crear-la-clave-y-certificado-de-la-autoridad-de-certificación-intermedia">Crear la clave y certificado de la autoridad de certificación intermedia</h3>
<p>De la confianza en la CA raíz depende toda la seguridad de los certificados que emite, que su clave privada y pública o certificado sean comprometidos es posiblemente lo peor que le puede ocurrir a una CA. Para minimizar el riesgo se intenta hacer el menor uso posible de la clave privada y pública de la autoridad de certificación raíz, para esto se suele crear una autoridad de certificación intermedia que es la que realmente firma, revoca y renueva los certificados para el servidor, clientes o usuarios. Si la CA intermedia es comprometida aún siendo también un problema grave de seguridad al menos la CA raíz puede crear una nueva CA intermedia en la que se pueda confiar.</p>
<p>La CA intermedia tiene su propio par de claves asimétricas privada y pública, también tiene su certificado que en este caso está firmado por la CA raíz.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># Intermediate CA</span>&#10;&#10;mkdir -p intermediate/certs intermediate/crl intermediate/csr intermediate/newcerts intermediate/private&#10;chmod <span class="m">700</span> intermediate/private&#10;touch intermediate/index.txt&#10;<span class="nb">echo</span> <span class="m">1000</span> &gt; intermediate/serial&#10;<span class="nb">echo</span> <span class="m">1000</span> &gt; intermediate/crlnumber&#10;&#10;openssl genrsa -out intermediate/private/intermediate.key.pem <span class="m">8192</span>&#10;chmod <span class="m">400</span> intermediate/private/intermediate.key.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-intermediate-1.sh</span>
    </div>
</div>
<p>La CA raíz firma únicamente el certificado de la CA intermedia. La CA intermedia generar la solicitud de firma de certificado, la CA raíz lo firma y se genera el certificado firmado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl req -config intermediate/openssl.conf -new -sha256 <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -key intermediate/private/intermediate.key.pem <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -subj <span class="s2">&#34;/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Acme S.A. (Intermediate CA)&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -out intermediate/csr/intermediate.csr.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-intermediate-2.sh</span>
    </div>
</div>
<p>La CA recibe la solicitud de firma del certificado de la CA intermedia y la firma. La CA intermedia recibe las solicitudes de firma de certificados para los servidores, clientes y usuarios y genera los certificados firmados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl ca -config openssl.conf <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -extensions v3_intermediate_ca -days <span class="m">3650</span> -batch -notext -md sha256 <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -in intermediate/csr/intermediate.csr.pem <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -out intermediate/certs/intermediate.cert.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-intermediate-3.sh</span>
    </div>
</div>
<p>Una vez generado el certificado de la CA intermedia se puede inspeccionar el certificado y validar que la firma sea correcta utilizando el certificado de la CA raíz.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl x509 -noout -text <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -in intermediate/certs/intermediate.cert.pem&#10;$ openssl verify -CAfile certs/ca.cert.pem <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  intermediate/certs/intermediate.cert.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-intermediate-4.sh</span>
    </div>
</div>
<p>Para validar los certificados emitidos por la CA intermedia se genera una cadena de certificados que incluye los certificados de la CA raíz y la CA intermedia, la cadena de certificados es simplemente la unión del contenido de ambos certificados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ cat intermediate/certs/intermediate.cert.pem <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  certs/ca.cert.pem &gt; intermediate/certs/ca-chain.cert.pem&#10;$ chmod <span class="m">444</span> intermediate/certs/ca-chain.cert.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-intermediate-5.sh</span>
    </div>
</div>
<p>La CA intermedia también utiliza su propio archivo de configuración de OpenSSL. En él se incluye la opción <em>copy_extensions</em> que permite copiar algunos atributos de la solicitud al certificado que genera, esto sirve para incluir en el certificado los múltiples <em>Subject Alternative Name</em> o SAN enviados en la solicitud. Si se permite emitir certificados con el mismo <em>Subject</em> es necesario utilizar la opción de configuración <em>unique_subject = no</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span><span class="lnt">135&#10;</span><span class="lnt">136&#10;</span><span class="lnt">137&#10;</span><span class="lnt">138&#10;</span><span class="lnt">139&#10;</span><span class="lnt">140&#10;</span><span class="lnt">141&#10;</span><span class="lnt">142&#10;</span><span class="lnt">143&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="c1"># OpenSSL intermediate CA configuration file.</span>&#10;<span class="c1"># Copy to `/root/ca/intermediate/openssl.cnf`.</span>&#10;&#10;<span class="k">[ ca ]</span>&#10;<span class="c1"># `man ca`</span>&#10;<span class="na">default_ca</span> <span class="o">=</span> <span class="s">CA_default</span>&#10;&#10;<span class="k">[ CA_default ]</span>&#10;<span class="c1"># Directory and file locations.</span>&#10;<span class="na">dir</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$ENV::INTERMEDIATE_DIR</span>&#10;<span class="na">certs</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">$dir/certs</span>&#10;<span class="na">crl_dir</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$dir/crl</span>&#10;<span class="na">new_certs_dir</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">$dir/newcerts</span>&#10;<span class="na">database</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">$dir/index.txt</span>&#10;<span class="na">serial</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">$dir/serial</span>&#10;<span class="na">RANDFILE</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">$dir/private/.rand</span>&#10;<span class="na">copy_extensions</span>   <span class="o">=</span> <span class="s">copy</span>&#10;&#10;<span class="c1"># The root key and root certificate.</span>&#10;<span class="na">private_key</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$dir/private/intermediate.key.pem</span>&#10;<span class="na">certificate</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$dir/certs/intermediate.cert.pem</span>&#10;&#10;<span class="c1"># For certificate revocation lists.</span>&#10;<span class="na">crlnumber</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">$dir/crlnumber</span>&#10;<span class="na">crl</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">$dir/crl/intermediate.crl.pem</span>&#10;<span class="na">crl_extensions</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">crl_ext</span>&#10;<span class="na">default_crl_days</span>  <span class="o">=</span> <span class="s">30</span>&#10;&#10;<span class="c1"># SHA-1 is deprecated, so use SHA-2 instead.</span>&#10;<span class="na">default_md</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">sha256</span>&#10;&#10;<span class="na">name_opt</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">ca_default</span>&#10;<span class="na">cert_opt</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">ca_default</span>&#10;<span class="na">default_days</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">1825</span>&#10;<span class="na">preserve</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">no</span>&#10;<span class="na">policy</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">policy_loose</span>&#10;&#10;<span class="k">[ policy_strict ]</span>&#10;<span class="c1"># The root CA should only sign intermediate certificates that match.</span>&#10;<span class="c1"># See the POLICY FORMAT section of `man ca`.</span>&#10;<span class="na">countryName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">match</span>&#10;<span class="na">stateOrProvinceName</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">match</span>&#10;<span class="na">organizationName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">match</span>&#10;<span class="na">organizationalUnitName</span>  <span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">commonName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">supplied</span>&#10;<span class="na">emailAddress</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">optional</span>&#10;&#10;<span class="k">[ policy_loose ]</span>&#10;<span class="c1"># Allow the intermediate CA to sign a more diverse range of certificates.</span>&#10;<span class="c1"># See the POLICY FORMAT section of the `ca` man page.</span>&#10;<span class="na">countryName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">stateOrProvinceName</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">localityName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">organizationName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">organizationalUnitName</span>  <span class="o">=</span> <span class="s">optional</span>&#10;<span class="na">commonName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">supplied</span>&#10;<span class="na">emailAddress</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">optional</span>&#10;&#10;<span class="k">[ req ]</span>&#10;<span class="c1"># Options for the `req` tool (`man req`).</span>&#10;<span class="na">default_bits</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">8192</span>&#10;<span class="na">distinguished_name</span>  <span class="o">=</span> <span class="s">req_distinguished_name</span>&#10;<span class="na">string_mask</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">utf8only</span>&#10;&#10;<span class="c1"># SHA-1 is deprecated, so use SHA-2 instead.</span>&#10;<span class="na">default_md</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">sha256</span>&#10;&#10;<span class="c1"># Extension to add when the -x509 option is used.</span>&#10;<span class="na">x509_extensions</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">v3_ca</span>&#10;&#10;<span class="k">[ req_distinguished_name ]</span>&#10;<span class="c1"># See &lt;https://en.wikipedia.org/wiki/Certificate_signing_request&gt;.</span>&#10;<span class="na">countryName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">Country Name (2 letter code)</span>&#10;<span class="na">stateOrProvinceName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">State or Province Name</span>&#10;<span class="na">localityName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">Locality Name</span>&#10;<span class="na">0.organizationName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">Organization Name</span>&#10;<span class="na">organizationalUnitName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">Organizational Unit Name</span>&#10;<span class="na">commonName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">Common Name</span>&#10;<span class="na">emailAddress</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">Email Address</span>&#10;&#10;<span class="c1"># Optionally, specify some defaults.</span>&#10;<span class="na">countryName_default</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">ES</span>&#10;<span class="na">stateOrProvinceName_default</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">Spain</span>&#10;<span class="na">localityName_default</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">Madrid</span>&#10;<span class="na">0.organizationName_default</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s">Acme S.A. (Intermediate CA)</span>&#10;<span class="na">organizationalUnitName_default</span>  <span class="o">=</span>&#10;<span class="na">emailAddress_default</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span>&#10;&#10;<span class="k">[ v3_ca ]</span>&#10;<span class="c1"># Extensions for a typical CA (`man x509v3_config`).</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid:always,issuer</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">critical, CA:true</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, digitalSignature, cRLSign, keyCertSign</span>&#10;&#10;<span class="k">[ v3_intermediate_ca ]</span>&#10;<span class="c1"># Extensions for a typical intermediate CA (`man x509v3_config`).</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid:always,issuer</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">critical, CA:true, pathlen:0</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, digitalSignature, cRLSign, keyCertSign</span>&#10;&#10;<span class="k">[ usr_cert ]</span>&#10;<span class="c1"># Extensions for client certificates (`man x509v3_config`).</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">CA:FALSE</span>&#10;<span class="na">nsCertType</span> <span class="o">=</span> <span class="s">client, email</span>&#10;<span class="na">nsComment</span> <span class="o">=</span> <span class="s">&#34;OpenSSL Generated Client Certificate&#34;</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid,issuer</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, nonRepudiation, digitalSignature, keyEncipherment</span>&#10;<span class="na">extendedKeyUsage</span> <span class="o">=</span> <span class="s">clientAuth, emailProtection</span>&#10;&#10;<span class="k">[ server_cert ]</span>&#10;<span class="c1"># Extensions for server certificates (`man x509v3_config`).</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">CA:FALSE</span>&#10;<span class="na">nsCertType</span> <span class="o">=</span> <span class="s">server</span>&#10;<span class="na">nsComment</span> <span class="o">=</span> <span class="s">&#34;OpenSSL Generated Server Certificate&#34;</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid,issuer:always</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, digitalSignature, keyEncipherment</span>&#10;<span class="na">extendedKeyUsage</span> <span class="o">=</span> <span class="s">serverAuth</span>&#10;&#10;<span class="k">[ client_server_cert ]</span>&#10;<span class="c1"># Extensions for server certificates (`man x509v3_config`).</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">CA:FALSE</span>&#10;<span class="na">nsCertType</span> <span class="o">=</span> <span class="s">client, server</span>&#10;<span class="na">nsComment</span> <span class="o">=</span> <span class="s">&#34;OpenSSL Generated Server Certificate&#34;</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid,issuer:always</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, nonRepudiation, digitalSignature, keyEncipherment</span>&#10;<span class="na">extendedKeyUsage</span> <span class="o">=</span> <span class="s">clientAuth, serverAuth</span>&#10;&#10;<span class="k">[ crl_ext ]</span>&#10;<span class="c1"># Extension for CRLs (`man x509v3_config`).</span>&#10;<span class="na">authorityKeyIdentifier</span><span class="o">=</span><span class="s">keyid:always</span>&#10;&#10;<span class="k">[ ocsp ]</span>&#10;<span class="c1"># Extension for OCSP signing certificates (`man ocsp`).</span>&#10;<span class="na">basicConstraints</span> <span class="o">=</span> <span class="s">CA:FALSE</span>&#10;<span class="na">subjectKeyIdentifier</span> <span class="o">=</span> <span class="s">hash</span>&#10;<span class="na">authorityKeyIdentifier</span> <span class="o">=</span> <span class="s">keyid,issuer</span>&#10;<span class="na">keyUsage</span> <span class="o">=</span> <span class="s">critical, digitalSignature</span>&#10;<span class="na">extendedKeyUsage</span> <span class="o">=</span> <span class="s">critical, OCSPSigning</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>intermediate/openssl.conf</span>
    </div>
</div>
<h3 id="crear-y-firmar-el-certificado-del-servidor-clientes-o-usuarios">Crear y firmar el certificado del servidor, clientes o usuarios</h3>
<p>Para cada servidor, cliente de servidor o usuario hay que crear nuevamente su clave privada y pública, crear la solicitud de firma o <em>Certificate Sign Request</em> (CSR) que se envía a la autoridad de certificación intermedia para que lo firme y esta devuelva un certificado firmado. En el caso de un certificado para un servidor se incluye en el campo <em>Common Name</em> o <em>CN</em> el nombre del dominio del servidor, un certificado multidominio contiene varios nombres de dominio para los que es válido en el campo <em>Subject Alternative Names</em> o <em>SAN</em>, los certificados también se pueden asociar a una dirección IP concreta pero lo habitual es utilizar nombres de dominio.</p>
<p>Para crear el certificado firmado por la CA intermedia nuevamente el primer paso es generar la clave privada y pública y la solicitud de firma de certificado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span><span class="nb">set</span> -e&#10;&#10;<span class="nv">CA_PATH</span><span class="o">=</span>../ca&#10;<span class="nv">CERTS_PATH</span><span class="o">=</span>server-certs&#10;&#10;<span class="nb">export</span> <span class="nv">CA_DIR</span><span class="o">=</span><span class="nv">$CA_PATH</span>&#10;<span class="nb">export</span> <span class="nv">INTERMEDIATE_DIR</span><span class="o">=</span><span class="nv">$CA_PATH</span>/intermediate&#10;&#10;mkdir -p <span class="nv">$CERTS_PATH</span>/certs <span class="nv">$CERTS_PATH</span>/csr <span class="nv">$CERTS_PATH</span>/private&#10;cp openssl/server/openssl*.conf <span class="nv">$CERTS_PATH</span>/&#10;<span class="nb">cd</span> <span class="nv">$CERTS_PATH</span>&#10;&#10;<span class="c1"># Server</span>&#10;&#10;openssl genrsa <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -out private/consul-server.key.pem <span class="m">8192</span>&#10;chmod <span class="m">400</span> private/consul-server.key.pem&#10;&#10;openssl req -config openssl-consul-server.conf <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -key private/consul-server.key.pem <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -subj <span class="s2">&#34;/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Consul Server&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -new -sha256 -out csr/consul-server.csr.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>server-certs-1.sh</span>
    </div>
</div>
<p>Una vez la CA intermedia firma la solicitud y genera el certificado se puede validar que la firma sea correcta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl verify -CAfile <span class="nv">$CA_PATH</span>/intermediate/certs/ca-chain.cert.pem <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  certs/consul-server.cert.pem&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>server-certs-2.sh</span>
    </div>
</div>
<p>Los clientes de un servidor como un navegador web cuando establecen la conexión segura comprueban que el nombre del dominio al que se ha realizado la solicitud esté contenido en los nombres de dominio y direcciones IP del certificado devuelto por el servidor y que esté firmado por una CA en la que se confía.</p>
<p>Para incluir en un certificados múltiples SAN ya sean dominios y direcciones IP es necesario indicarlo en el archivo de configuración al crear la solicitud en la sección <em>alt_names</em> y habilitar la extensión <em>req_ext</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-ini" data-lang="ini"><span class="k">[ req ]</span>&#10;<span class="na">default_bits</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">8192</span>&#10;<span class="na">distinguished_name</span> <span class="o">=</span> <span class="s">req_distinguished_name</span>&#10;<span class="na">req_extensions</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">req_ext</span>&#10;&#10;<span class="k">[ req_distinguished_name ]</span>&#10;<span class="na">countryName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">Country Name (2 letter code)</span>&#10;<span class="na">stateOrProvinceName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">State or Province Name (full name)</span>&#10;<span class="na">localityName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">Locality Name (eg, city)</span>&#10;<span class="na">organizationName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s">Organization Name (eg, company)</span>&#10;<span class="na">commonName</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s">Common Name (e.g. server FQDN or YOUR name)</span>&#10;&#10;<span class="k">[ req_ext ]</span>&#10;<span class="na">subjectAltName</span> <span class="o">=</span> <span class="s">@alt_names</span>&#10;&#10;<span class="k">[alt_names]</span>&#10;<span class="na">DNS.1</span>   <span class="o">=</span> <span class="s">server.dc1.consul</span>&#10;<span class="na">DNS.2</span>   <span class="o">=</span> <span class="s">consul.service.consul</span>&#10;<span class="na">DNS.3</span>   <span class="o">=</span> <span class="s">localhost</span>&#10;<span class="na">DNS.4</span>   <span class="o">=</span> <span class="s">consul.192.168.33.10.xip.io</span>&#10;<span class="na">DNS.5</span>   <span class="o">=</span> <span class="s">consul.192.168.33.11.xip.io</span>&#10;<span class="na">DNS.6</span>   <span class="o">=</span> <span class="s">consul.192.168.33.12.xip.io</span>&#10;<span class="na">DNS.7</span>   <span class="o">=</span> <span class="s">consul.192.168.33.13.xip.io</span>&#10;<span class="na">DNS.8</span>   <span class="o">=</span> <span class="s">consul.192.168.33.14.xip.io</span>&#10;<span class="na">IP.1</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">127.0.0.1</span>&#10;<span class="na">IP.2</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">192.168.33.10</span>&#10;<span class="na">IP.3</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">192.168.33.11</span>&#10;<span class="na">IP.4</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">192.168.33.12</span>&#10;<span class="na">IP.5</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">192.168.33.13</span>&#10;<span class="na">IP.6</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="s">192.168.33.14</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>server/openssl-consul-server.conf</span>
    </div>
</div>
<p>Inspeccionando la información del documento se observa que en la sección <em>X509v3 Subject Alternative Name</em> están incluidos los SAN adicionales.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl x509 -noout -text <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;  -in certs/consul-server.cert.pem&#10;Certificate:&#10;&nbsp;&nbsp;&nbsp;&nbsp;Data:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version: <span class="m">3</span> <span class="o">(</span>0x2<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serial Number: <span class="m">4096</span> <span class="o">(</span>0x1000<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Signature Algorithm: sha256WithRSAEncryption&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Issuer: <span class="nv">C</span> <span class="o">=</span> ES, <span class="nv">ST</span> <span class="o">=</span> Spain, <span class="nv">O</span> <span class="o">=</span> Acme S.A., <span class="nv">CN</span> <span class="o">=</span> Acme S.A. <span class="o">(</span>Intermediate CA<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Validity&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not Before: Aug  <span class="m">6</span> 22:39:48 <span class="m">2020</span> GMT&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not After : Aug  <span class="m">5</span> 22:39:48 <span class="m">2025</span> GMT&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject: <span class="nv">C</span> <span class="o">=</span> ES, <span class="nv">ST</span> <span class="o">=</span> Spain, <span class="nv">L</span> <span class="o">=</span> Madrid, <span class="nv">O</span> <span class="o">=</span> Acme S.A., <span class="nv">CN</span> <span class="o">=</span> Consul Server&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Public Key Info:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Public Key Algorithm: rsaEncryption&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RSA Public-Key: <span class="o">(</span><span class="m">8192</span> bit<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Modulus:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;00:ef:5c:77:b4:e7:58:08:3f:d9:76:2c:67:52:f0:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;37:c2:19:e6:e8:32:0e:b4:39:ea:77:b5:bb:e8:9c:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d0:75:62:90:d2:9d:53:bc:55:b1:4f:c8:09:69:41:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b1:8a:b4:39:5e:ba:8c:c5:b0:40:82:8c:4b:cb:f4:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b3:97:24:8d:3e:f6:81:24:80:7a:14:da:15:dc:8f:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exponent: <span class="m">65537</span> <span class="o">(</span>0x10001<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 extensions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Basic Constraints: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CA:FALSE&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Netscape Cert Type: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SSL Client, SSL Server&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Netscape Comment: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpenSSL Generated Server Certificate&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Subject Key Identifier: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;40:A7:07:BE:51:F7:20:E6:6B:5C:0F:22:93:13:FF:07:9A:11:E5:E8&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Authority Key Identifier: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyid:0F:13:28:6E:13:8F:9D:25:7A:89:07:38:CA:05:F8:CA:49:47:57:62&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DirName:/C<span class="o">=</span>ES/ST<span class="o">=</span>Spain/L<span class="o">=</span>Madrid/O<span class="o">=</span>Acme S.A./CN<span class="o">=</span>Acme S.A <span class="o">(</span>CA<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serial:10:00&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Key Usage: critical&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Digital Signature, Non Repudiation, Key Encipherment&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Extended Key Usage: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TLS Web Client Authentication, TLS Web Server Authentication&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Subject Alternative Name: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DNS:server.dc1.consul, DNS:consul.service.consul, DNS:localhost, DNS:consul.192.168.33.10.xip.io, DNS:consul.192.168.33.11.xip.io, DNS:consul.192.168.33.12.xip.io, DNS:consul.192.168.33.13.xip.io, DNS:consul.192.168.33.14.xip.io, IP Address:127.0.0.1, IP Address:192.168.33.10, IP Address:192.168.33.11, IP Address:192.168.33.12, IP Address:192.168.33.13, IP Address:192.168.33.14&#10;&nbsp;&nbsp;&nbsp;&nbsp;Signature Algorithm: sha256WithRSAEncryption&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 12:15:c8:74:8d:e4:5b:8a:13:2c:ae:42:1a:ca:11:aa:c0:89:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; de:29:25:6c:4f:b4:52:24:1a:cd:25:18:55:dd:6d:9d:ea:12:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d9:f1:5d:f5:46:75:39:43:b9:6d:c0:a3:49:a9:80:63:ba:ea:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bc:24:3b:49:e8:c3:9b:60:51:fc:bb:52:a4:61:18:ac:fe:58:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3c:61:2c:af:0d:83:fa:d9:e5:ad:fa:73:10:9c:5b:f1:72:13:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>server-certs-3.sh</span>
    </div>
</div>
<h3 id="añadir-el-certificado-de-la-ca-en-el-navegador-firefox">Añadir el certificado de la CA en el navegador Firefox</h3>
<p>Los navegadores incluyen los certificados de algunas autoridades de certificados en las que se confía. En el caso de crear una CA propia como lo mostrado en este artículo y un certificado para un servidor firmado por esta autoridad de certificados el navegador mostrará una advertencia indicando que el certificado presentado no es de confianza antes de permitir entrar al sitio web, con este mensaje el usuario es consciente de que el certificado del servidor no es de confianza y si el usuario lo desea se permite el acceso al sitio web. Aún así el navegador muestra una advertencia en el icono de seguridad del sitio web de que hay un problema con el certificado.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/firefox-security-warning_hufe8f9d8a0431282fd659700381041a92_85469_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Advertencia con certificado no de confianza en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/firefox-security-warning_hufe8f9d8a0431282fd659700381041a92_85469_300x250_fit_box_3.png" width="300" height="196" alt="Advertencia con certificado no de confianza en Firefox" title="Advertencia con certificado no de confianza en Firefox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/firefox-certificate-warning_hue64cb2700b0868b63449437b8bc142f9_77265_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Advertencia con certificado no de confianza en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/firefox-certificate-warning_hue64cb2700b0868b63449437b8bc142f9_77265_300x250_fit_box_3.png" width="300" height="195" alt="Advertencia con certificado no de confianza en Firefox" title="Advertencia con certificado no de confianza en Firefox"  class="lozad "></a></p>
<figcaption>Advertencia con certificado no de confianza en Firefox</figcaption>
</figure>
</div>
<p>Para eliminar el mensaje de advertencia al acceder al sitio web y la advertencia del icono de seguridad del sitio web hay que instalar en el navegador el certificado de la CA raíz o intermedia. En el navegador web <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> se importa un nuevo certificado de una CA en la que se confía desde la opción <em>Preferencias &gt; Privacidad y seguridad &gt; Ver certificados &gt; Autoridades &gt; Importar</em> en el navegador <a href="https://www.google.es/chrome/browser/desktop/">Chrome</a> desde <em>Configuración &gt; Privacidad y seguridad &gt; Gestionar certificados</em>. Por defecto los navegadores web ya incorporan los certificados de varias CA importantes de internet.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/firefox-certificates_hu3f247b7f03583946d46a95e4b00c73b3_62141_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Certificados de autoridades de certificación de confianza en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/firefox-certificates_hu3f247b7f03583946d46a95e4b00c73b3_62141_300x250_fit_box_3.png" width="300" height="200" alt="Certificados de autoridades de certificación de confianza en Firefox" title="Certificados de autoridades de certificación de confianza en Firefox"  class="lozad "></a></p>
<figcaption>Certificados de autoridades de certificación de confianza en Firefox</figcaption>
</figure>
</div>
<p>Una vez se importa el certificado de la CA el navegador muestra el icono de seguridad del sitio web con el icono sin advertencias indicando que no hay ningún problema de seguridad en la conexión con el sitio web, tampoco se muestra la página inicial de advertencia.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/firefox-certificate-valid_hua2bad78e16f7f5135943a01bcdd1e7a8_83586_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Certificado de confianza y conexión segura en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/images/firefox-certificate-valid_hua2bad78e16f7f5135943a01bcdd1e7a8_83586_300x250_fit_box_3.png" width="300" height="195" alt="Certificado de confianza y conexión segura en Firefox" title="Certificado de confianza y conexión segura en Firefox"  class="lozad "></a></p>
<figcaption>Certificado de confianza y conexión segura en Firefox</figcaption>
</figure>
</div>
<h3 id="revocar-y-renovar-un-certificado">Revocar y renovar un certificado</h3>
<p>Además de firmar y generar de certificados las funciones de una CA es revocar un certificado cuando se ha comprometido y ya no es de confianza por un problema de seguridad y renovar de los certificados cuando se fecha de validez expira.</p>
<p>Una vez se revoca un certificado hay dos formas en la que la CA permite conocer si un certificado ha sido revocado, con <em>Certificate Revocation List</em> (CRL) o <em>Online_Certificate_Status_Protocol</em> (OCSP) aunque CRL ha quedado en desuso y se prefiere OCSP. El problema del método CRL es que hay una latencia entre el momento en que se realiza la revocación esta ventana de tiempo no es deseable para evitar problemas de seguridad con la mayor inmediatez, la revocación se publica en el registro de CRL, su segundo problema es que en una CA grande con un número grande de certificados revocados el registro de CRL será también grande. OCSP también permite conocer si un certificado ha sido revocado, evita la latencia de CRL ya que no depende de un registro y requiere menos tráfico para realizar la comprobación ya que no requiere la descargar del registro CRL, pero introduce otros problemas como que debe soportar una número enorme de peticiones de comprobación de certificado ya que se hace una petición por cada visita a un sitio web, en el caso de una CA importante que tiene un número de certificados emitidos que usan sitios con mucho tráfico de internet es un problema. El segundo problema es una pérdida de privacidad para los usuarios ya que la CA al recibir una solicitud de comprobación de certificado por cada visita podría rastrear a los usuarios. Para evitar o al menos mitigar en gran medida los problemas de OCSP se ha desarrollado <a href="https://en.wikipedia.org/wiki/OCSP_stapling">OCSP Stapling</a>.</p>
<p>La CA guarda los certificados que emite, con OpenSSL en la carpeta <em>newcerts</em> con un número de serie, en el archivo a modo base de datos <em>index.txt</em> almacena entre otras cosas el número de serie y el <em>Subject</em> del certificado emitido. El comando para revocar un certificado incluye como argumento el certificado a revocar y opcionalmente el motivo de la revocación. El archivo <em>index.txt</em> se actualiza y en la entrada asociada al certificado se indica una <em>R</em> para indicar que ha sido revocado.</p>
<p>Si la revocación del certificado se realiza por un problema de seguridad en el que la clave privada y pública asociada al certificado han sido comprometidas es necesario revocar el certificado comprometido, generar un nuevo par de claves para evitar suplantaciones de identidad y emitir un nuevo certificado generado a partir de las nuevas claves privada y pública.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">openssl ca -config intermediate/openssl.conf <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-revoke intermediate/newcerts/1000.pem -crl_reason superseded&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-intermediate-revoke.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">R	250805223948Z	25080528054Z	1000	unknown	/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Consul Server&#10;V	250805223951Z		1001	unknown	/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Consul Agent&#10;V	250805223953Z		1002	unknown	/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Vault Server&#10;V	250805223956Z		1003	unknown	/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Vault Agent&#10;V	250805223958Z		1004	unknown	/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Nomad Server&#10;V	250805224004Z		1005	unknown	/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=Nomad Agent&#10;V	250805224009Z		1006	unknown	/C=ES/ST=Spain/L=Madrid/O=Acme S.A./CN=UI Server&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>index.txt</span>
    </div>
</div>
<p>Al revocar un certificado la CA regenera el CRL.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">openssl ca -config intermediate/openssl.conf <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-gencrl -out intermediate/crl/intermediate.crl&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ca-intermediate-crl.sh</span>
    </div>
</div>
<p>Los certificados se emiten con una de caducidad, llegado en el tiempo a la fecha de caducidad el certificado ya no se considera válido. En este caso hay que renovarlo. El servidor, cliente o usuario genera una nueva solicitud de certificado a partir de las mismas u otras nuevas claves privada y pública, la autoridad intermedia la recibe y realiza dos acciones: revoca el certificado anterior y genera un nuevo certificado a partir de la nueva solicitud de certificado. El comando de OpenSSL de la autoridad de certificados no permite que haya dos certificados con el mismo <em>Subject</em> válidos de modo que primero hay que revocar el certificado anterior. Los comandos son los mismos que los mostrados anteriormente para cada una de las acciones.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/CertificateAuthority">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./ca.sh &amp;&amp; ./server-certs.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://jamielinux.com/docs/openssl-certificate-authority/create-the-root-pair.html">OpenSSL Certificate Authority</a></li>
<li><a href="https://stackoverflow.com/questions/21297139/how-do-you-sign-a-certificate-signing-request-with-your-certification-authority">How do you sign a Certificate Signing Request with your Certification Authority?</a></li>
<li><a href="https://geekflare.com/san-ssl-certificate/">Know about SAN Certificate and How to Create With OpenSSL</a></li>
<li><a href="https://stackoverflow.com/a/30977497">Subject Alternative Name not present in certificate</a></li>
<li><a href="https://medium.com/@superseb/get-your-certificate-chain-right-4b117a9c0fce">Get your certificate chain right</a></li>
<li><a href="https://www.consul.io/docs/common-errors.html">Consul Common Error Messages</a></li>
<li><a href="https://tldp.org/HOWTO/SSL-Certificates-HOWTO/x195.html">Certificate management</a></li>
<li><a href="https://roll.urown.net/ca/ca_revoke.html">Revoke Certificates</a></li>
<li><a href="https://serverfault.com/questions/810557/how-do-i-issue-multiple-certificates-for-the-same-common-name/810608">How do I issue multiple certificates for the same Common Name?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/</id>
        <title>Configurar autenticación básica en los servidores web Nginx y Apache</title>
        <updated>2020-08-02T10:00:00+02:00</updated>
        <published>2020-08-02T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/nginx.svg" width="300" height="64" alt="Nginx" title="Nginx"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache.svg" width="150" height="264" alt="Apache HTTPD" title="Apache HTTPD"  class=""></p>
</div>
<p>La autenticación básica o <em>basic auth</em> es un mecanismo de autenticación sencillo que permite proteger los recursos solicitados de un sitio o aplicación web. Es fácil de configurar en el servidor web y está implementado en los propios navegadores, otra ventaja es que se puede añadir a un sitio o aplicación web sin necesidad de realizar modificaciones en su código.</p>
<p>La autenticación básica por seguridad requiere <a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">utilizar en el servidor web el protocolo seguro HTTPS</a> y <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">obtener un certificado para el nombre del dominio del servidor web</a> ya que el navegador cuando envía al servidor el usuario y contraseña no los protege de forma especial y utiliza el mecanismo de comunicación de la conexión, es usual también <a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-un-servidor-web-virtual-en-nginx-y-apache/">configurar un servidor web virtual</a> para aplicar esta configuración únicamente al sitio web deseado. Con el protocolo HTTPS el usuario y contraseña se transmite cifrada por la propia conexión segura.</p>
<p>Cuando un servidor para el acceso a un recurso requiere autenticación básica el navegador muestra una ventana emergente en la que se solicita un usuario y contraseña.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/nginx-401_hufeb88d6ffa3015c5aa9875e01d09f1d9_52216_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Solicitud de credenciales por el navegador con autenticación básica"><img src="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/nginx-401_hufeb88d6ffa3015c5aa9875e01d09f1d9_52216_300x200_fit_box_3.png" width="300" height="193" alt="Solicitud de credenciales por el navegador con autenticación básica" title="Solicitud de credenciales por el navegador con autenticación básica"  class="lozad "></a></p>
<figcaption>Solicitud de credenciales por el navegador con autenticación básica</figcaption>
</figure>
</div>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="configurar-autenticación-básica-en-el-servidor-web-nginx">Configurar autenticación básica en el servidor web Nginx</h3>
<p>La autenticación básica en <a href="https://nginx.org/">Nginx</a> se activan añadiendo dos directivas, <em>auth_basic</em> y <em>auth_basic_user_file</em>, en el archivo de configuración del sitio web y recurso a proteger. En este caso con la raíz del sitio web <em>/</em> cualquier ruta está protegida con autenticación básica.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">server {&#10;&nbsp;&nbsp;&nbsp;&nbsp;listen 80;&#10;&nbsp;&nbsp;&nbsp;&nbsp;server_name localhost;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;location / {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 301 https://$host$request_uri;&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;}&#10;&#10;server {&#10;&nbsp;&nbsp;&nbsp;&nbsp;listen 443 ssl http2 default_server;&#10;&nbsp;&nbsp;&nbsp;&nbsp;server_name localhost;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;ssl_certificate conf.d/localhost.crt;&#10;&nbsp;&nbsp;&nbsp;&nbsp;ssl_certificate_key conf.d/localhost.key;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;location / {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root   /usr/share/nginx/html;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index  index.html index.htm;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auth_basic &#34;Restricted Area&#34;;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auth_basic_user_file conf.d/.localhost.htpasswd;&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;error_page 500 502 503 504 /50x.html;&#10;&nbsp;&nbsp;&nbsp;&nbsp;location = /50x.html {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root /usr/share/nginx/html;&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;}&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx-default.conf</span>
    </div>
</div>
<p>Utilizando <a href="https://www.docker.com/">Docker</a> se puede crear un contenedor y probar la configuración. Al acceder a la dirección <em>https://localhost</em> el navegador mostrará el diálogo que solicita el usuario y contraseña.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>docker run --rm -p 80:80 -p 443:443 <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/nginx-default.conf:/etc/nginx/conf.d/default.conf:ro <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/localhost.crt:/etc/nginx/conf.d/localhost.crt:ro <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/localhost.key:/etc/nginx/conf.d/localhost.key:ro <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/.localhost.htpasswd:/etc/nginx/conf.d/.localhost.htpasswd:ro <span class="se">\&#10;</span><span class="se"></span>  nginx:alpine&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-nginx.sh</span>
    </div>
</div>
<p>Si los datos proporcionados no son correctos se devuelve el código de estado <em>401</em> que indica que el acceso no se ha autorizado y se requiere autorización. Si las credenciales son válidas se muestra el recurso solicitado.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/nginx-401_hufeb88d6ffa3015c5aa9875e01d09f1d9_52216_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Solicitud de credenciales"><img src="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/nginx-401_hufeb88d6ffa3015c5aa9875e01d09f1d9_52216_300x200_fit_box_3.png" width="300" height="193" alt="Solicitud de credenciales" title="Solicitud de credenciales"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/nginx-web_huf1d50a05a82b362bea6942c07bacda72_50623_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Acceso al recurso solicitado"><img src="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/nginx-web_huf1d50a05a82b362bea6942c07bacda72_50623_300x200_fit_box_3.png" width="300" height="193" alt="Acceso al recurso solicitado" title="Acceso al recurso solicitado"  class="lozad "></a></p>
<figcaption>Solicitud de credenciales y acceso al recurso solicitado</figcaption>
</figure>
</div>
<h3 id="configurar-autenticación-básica-en-el-servidor-web-apache">Configurar autenticación básica en el servidor web Apache</h3>
<p>El comando de Docker para Apache es similar e incluye el archivo de configuración del servidor virtual con el recurso protegido, la clave privada y el certificado que proporcionan cifrado en las comunicaciones con el protocolo HTTPS.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>docker run --rm -p 80:80 -p 443:443 <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf:ro <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/localhost.crt:/usr/local/apache2/conf/extra/localhost.crt:ro <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/localhost.key:/usr/local/apache2/conf/extra/localhost.key:ro <span class="se">\&#10;</span><span class="se"></span>  -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/.localhost.htpasswd:/usr/local/apache2/conf/extra/.localhost.htpasswd:ro <span class="se">\&#10;</span><span class="se"></span>  httpd:alpine&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-apache.sh</span>
    </div>
</div>
<p>En el caso del servidor web Apache las directivas necesarias a añadir en la configuración para activar la autenticación básica son: <em>AuthType</em>, <em>AuthName</em>, <em>AuthUserFile</em> y <em>Require</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">&lt;VirtualHost *:80&gt;&#10;   ServerName localhost&#10;   RewriteEngine On&#10;   RewriteCond %{HTTPS} off&#10;   RewriteRule (.*) https://%{SERVER_NAME}$1 [R,L]&#10;&lt;/VirtualHost&gt;&#10;&#10;&lt;VirtualHost *:443&gt;&#10;&nbsp;&nbsp;&nbsp;&nbsp;ServerName localhost&#10;&nbsp;&nbsp;&nbsp;&nbsp;DocumentRoot /usr/local/apache2/htdocs&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;SSLEngine on&#10;&nbsp;&nbsp;&nbsp;&nbsp;SSLCertificateFile conf/extra/localhost.crt&#10;&nbsp;&nbsp;&nbsp;&nbsp;SSLCertificateKeyFile conf/extra/localhost.key&#10;&nbsp;&nbsp;&nbsp;&nbsp;Protocols h2 http/1.1&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Location &#34;/&#34;&gt;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuthType Basic&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuthName &#34;Restricted Area&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuthUserFile &#34;conf/extra/.localhost.htpasswd&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Require valid-user&#10;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Location&gt;&#10;&lt;/VirtualHost&gt;&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>httpd-vhosts.conf</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/apache-401_hud0a32989a4341b498270d1870adf55e2_67820_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Solicitud de credenciales"><img src="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/apache-401_hud0a32989a4341b498270d1870adf55e2_67820_300x200_fit_box_3.png" width="300" height="193" alt="Solicitud de credenciales" title="Solicitud de credenciales"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/apache-web_hued13048bcd845fcaf0d503bdfab6e3a3_19802_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Acceso al recurso solicitado"><img src="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/apache-web_hued13048bcd845fcaf0d503bdfab6e3a3_19802_300x200_fit_box_3.png" width="300" height="193" alt="Acceso al recurso solicitado" title="Acceso al recurso solicitado"  class="lozad "></a></p>
<figcaption>Solicitud de credeciales y acceso al recurso solicitado</figcaption>
</figure>
</div>
<h3 id="cómo-crear-los-archivos-de-credenciales-_htpasswd_">Cómo crear los archivos de credenciales <em>htpasswd</em></h3>
<p>La autenticación se realiza solicitando el navegador a petición del servidor un usuario y contraseña. En este caso el navegador presenta un diálogo al usuario que una vez introducidos realiza la petición de nuevo con las credenciales proporcionadas. El servidor para un recurso que requiere autenticación comprueba los datos de autenticación enviados y los valida con una pequeña base de datos en un archivo <em>htpasswd</em> que el administrador del servidor ha creado previamente con las credenciales de todos los usuarios.</p>
<p>Los archivos <em>htpasswd</em> que guardan las credenciales se crean con la utilidad de línea de comandos <em>htpasswd</em>. Tanto para añadir nuevos usuarios como para modificarlos y eliminarlos. Es posible guardar las contraseñas con diferentes algoritmos <em>hash</em> que transforman la contraseña en texto plano en un resultado equivalente con el cual no es posible conocer la contraseña original pero si validar que un dato proporcionado genera el mismo resultado con una función de una sola dirección. El algoritmo <em>hash</em> más seguro soportado es <em>bcrypt</em> que en el comando <em>htpasswd</em> se usa con la opción <em>-B</em>, los algoritmos <em>MD5</em> y <em>SHA</em> con las capacidades de computación actuales se consideran inseguros.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># Crear un archivo de credenciales con un suaurio</span>&#10;htpasswd -c -b -B .localhost.htpasswd user password&#10;&#10;<span class="c1"># Añadir o modificar un usuario a un archivo de credenciales</span>&#10;htpasswd -b -B .localhost.htpasswd user password&#10;&#10;<span class="c1"># Eliminar una credencial</span>&#10;htpasswd -b -D .localhost.htpasswd user</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>htpasswd.sh</span>
    </div>
</div>
<p>El resultado del archivo es una línea por credencial creada con el nombre del usuario y el <em>hash</em> de la contraseña.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">user:$2y$05$bFhwns7nxUq.q2tmFf/Hp.ltqKKOEscuLuluis/72xGDXGI3FijmS&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>.localhost.htpasswd</span>
    </div>
</div>
<h3 id="funcionamiento-y-cabecera-de-la-autenticación-básica">Funcionamiento y cabecera de la autenticación básica</h3>
<p>El formulario de autenticación solo se presenta una vez una vez introducidas unas credenciales correctas, dado que el protocolo HTTP es un protocolo sin estado el navegador en cada solicitud de cada página y recurso envía la cabecera <em>Authorization</em> que contiene el usuario y contraseña codificadas en base64. Esta cabecera y su valor aunque codificadas no tienen un mecanismo adicional de seguridad por eso es necesario utilizar el protocolo seguro HTTPS cuando se utiliza autenticación básica de modo que los datos incluidos en las cabeceras se transmitan cifrados.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/nginx-header_huf645b6c66ae16ba7b954e7e373c4f2fa_132903_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Cabecera enviada en la petición con las credenciales de acceso al recurso"><img src="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/nginx-header_huf645b6c66ae16ba7b954e7e373c4f2fa_132903_300x200_fit_box_3.png" width="300" height="193" alt="Cabecera enviada en la petición con las credenciales de acceso al recurso" title="Cabecera enviada en la petición con las credenciales de acceso al recurso"  class="lozad "></a></p>
<figcaption>Cabecera enviada en la petición con las credenciales de acceso al recurso</figcaption>
</figure>
</div>
<p>La codificación en base64 no añade seguridad, el valor de la cabecera con las credenciales decodificadas contiene el usuario y la contraseña separados por dos puntos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># Decodificación de base64</span>&#10;$ <span class="nb">echo</span> <span class="s2">&#34;dXNlcjpwYXNzd29yZA==&#34;</span> <span class="p">|</span> base64 --decode&#10;user:password&#10;&#10;<span class="c1"># Codificación en base64</span>&#10;$ <span class="nb">echo</span> <span class="s2">&#34;user:password&#34;</span> <span class="p">|</span> base64&#10;<span class="nv">dXNlcjpwYXNzd29yZAo</span><span class="o">=</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>base64.sh</span>
    </div>
</div>
<p>Con la herramienta de linea de comandos <em>curl</em> que permite realizar peticiones HTTP también hay que enviar la cabecera de autenticación para obtener el recurso.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl --insecure -H <span class="s1">&#39;Authorization: Basic dXNlcjpwYXNzd29yZA==&#39;</span> <span class="s1">&#39;https://localhost/&#39;</span>&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html&gt;&#10;&lt;head&gt;&#10;&lt;title&gt;Welcome to nginx!&lt;/title&gt;&#10;&lt;style&gt;&#10;&nbsp;&nbsp;&nbsp;&nbsp;body <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width: 35em<span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin: <span class="m">0</span> auto<span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font-family: Tahoma, Verdana, Arial, sans-serif<span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&lt;/style&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;&#10;&lt;p&gt;If you see this page, the nginx web server is successfully installed and&#10;working. Further configuration is required.&lt;/p&gt;&#10;&#10;&lt;p&gt;For online documentation and support please refer to&#10;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;http://nginx.org/&#34;</span>&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;&#10;Commercial support is available at&#10;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&#34;http://nginx.com/&#34;</span>&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;&#10;&#10;&lt;p&gt;&lt;em&gt;Thank you <span class="k">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<p>El servidor web indica al navegador que el recurso solicitado requiere autenticación básica devolviendo en la respuesta el <a href="https://developer.mozilla.org/es/docs/Web/HTTP/Status/401">código de estado 401 Unauthorized</a> y la cabecera <em>www-authenticate</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/http-auth_hu96ac9785f0db24b400db7522627a28f3_36023_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Esquema de peticiones, cabeceras y respuestas del protocolo de autenticación básica"><img src="https://picodotdev.github.io/blog-bitix/2020/08/configurar-autenticacion-basica-en-los-servidores-web-nginx-y-apache/images/http-auth_hu96ac9785f0db24b400db7522627a28f3_36023_650x450_fit_box_3.png" width="650" height="307" alt="Esquema de peticiones, cabeceras y respuestas del protocolo de autenticación básica" title="Esquema de peticiones, cabeceras y respuestas del protocolo de autenticación básica"  class="lozad "></a></p>
<figcaption>Esquema de peticiones, cabeceras y respuestas del protocolo de autenticación básica</figcaption>
</figure>
</div>
<p>Cuando no se envían credenciales o se envían unas incorrectas el navegador devuelve un código de estado 401.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -v --insecure <span class="s1">&#39;https://localhost/&#39;</span>&#10;...&#10;&gt; GET / HTTP/2&#10;&gt; Host: localhost&#10;&gt; user-agent: curl/7.71.1&#10;&gt; accept: */*&#10;&gt; &#10;...&#10;&lt; HTTP/2 <span class="m">401</span> &#10;&lt; server: nginx/1.17.10&#10;&lt; date: Sun, <span class="m">02</span> Aug <span class="m">2020</span> 10:38:14 GMT&#10;&lt; content-type: text/html&#10;&lt; content-length: <span class="m">180</span>&#10;&lt; www-authenticate: Basic <span class="nv">realm</span><span class="o">=</span><span class="s2">&#34;Restricted Area&#34;</span>&#10;&lt; &#10;&lt;html&gt;&#10;&lt;head&gt;&lt;title&gt;401 Authorization Required&lt;/title&gt;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;center&gt;&lt;h1&gt;401 Authorization Required&lt;/h1&gt;&lt;/center&gt;&#10;&lt;hr&gt;&lt;center&gt;nginx/1.17.10&lt;/center&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;...&#10;&#10;$ curl -v --insecure -H <span class="s1">&#39;Authorization: Basic invalid&#39;</span> <span class="s1">&#39;https://localhost/&#39;</span>&#10;...&#10;&gt; GET / HTTP/2&#10;&gt; Host: localhost&#10;&gt; user-agent: curl/7.71.1&#10;&gt; accept: */*&#10;&gt; authorization: Basic invalid&#10;&gt; &#10;...&#10;&lt; HTTP/2 <span class="m">401</span> &#10;&lt; server: nginx/1.17.10&#10;&lt; date: Sun, <span class="m">02</span> Aug <span class="m">2020</span> 10:37:03 GMT&#10;&lt; content-type: text/html&#10;&lt; content-length: <span class="m">180</span>&#10;&lt; www-authenticate: Basic <span class="nv">realm</span><span class="o">=</span><span class="s2">&#34;Restricted Area&#34;</span>&#10;&lt; &#10;&lt;html&gt;&#10;&lt;head&gt;&lt;title&gt;401 Authorization Required&lt;/title&gt;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;center&gt;&lt;h1&gt;401 Authorization Required&lt;/h1&gt;&lt;/center&gt;&#10;&lt;hr&gt;&lt;center&gt;nginx/1.17.10&lt;/center&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-authorization.sh</span>
    </div>
</div>
<h3 id="alternativas-a-la-autenticación-básica">Alternativas a la autenticación básica</h3>
<p>La ventaja de la autenticación básica es que es sencilla de implementar pero con algunos inconvenientes a tener en cuenta que son motivo de buscar alternativa más avanzadas aunque también mas complejas. Una desventaja es que los usuarios y contraseñas de las base de datos <em>htpasswd</em> son fijas, por seguridad las contraseñas se deberían rotar cada cierto tiempo para que usuarios que ya no deberían tener acceso tengan conocimiento de la contraseña válida actual, en una empresa es el caso de personas que ya no son empleados pero que si no se rotan las contraseñas seguirían teniendo acceso si no se implementan mecanismos de seguridad adicionales.</p>
<p>Otra desventaja de la autenticación básica es que los archivos <em>htpasswd</em> los crea el administrador de sistemas de modo que este tiene conocimiento de todas las contraseñas. Por esto la autenticación básica no es adecuada para realizar la autenticación en aplicaciones en las que los usuarios crean sus cuentas, las eliminan, tienen ellos mismos la posibilidad de cambian sus contraseñas y con la posibilidad de cerrar la sesión.</p>
<p>Estas desventajas hace de la autenticación básica no adecuada para algunos casos, dependiendo del caso las alternativas son implementar un formulario de autenticación, <a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/">implementar OAuth en una aplicación web</a> o <a href="https://picodotdev.github.io/blog-bitix/2017/06/autenticacion-mutua-de-cliente-y-servidor-con-certificados/">utilizar autenticación mutua con certificados</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/WebBasicAuth">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-nginx.sh o ./docker-apache.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developer.mozilla.org/es/docs/Web/HTTP/Authentication">Autenticación HTTP</a></li>
<li><a href="https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/">Restricting Access with HTTP Basic Authentication (nginx)</a></li>
<li><a href="https://httpd.apache.org/docs/2.4/howto/auth.html">Autenticación y Autorización (apache)</a></li>
<li><a href="https://httpd.apache.org/docs/2.4/en/programs/htpasswd.html">htpasswd - Manage user files for basic authentication</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/07/obtener-un-nombre-de-dominio-para-una-direccion-ip-privada/</id>
        <title>Obtener un nombre de dominio para una dirección IP privada</title>
        <updated>2020-07-31T11:00:00+02:00</updated>
        <published>2020-07-31T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/07/obtener-un-nombre-de-dominio-para-una-direccion-ip-privada/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Las direcciones IP en la versión 4 del protocolo son un número de 32 bits, se representan en cuatro grupos de números decimales que toman el valor entre 0 y 255 separados por un punto, por ejemplo para la dirección que representa la máquina local <em>127.0.0.1</em>. En <a href="https://picodotdev.github.io/blog-bitix/2018/11/el-agotamiento-de-direcciones-ipv4-y-el-protocolo-de-internet-ipv6/">la versión 6 del protocolo IP</a> las direcciones IP son un número de 128 bits. Dado que los números de la direcciones IP son difíciles de recordar para los humanos se usan alias o sinónimos denominados nombres de dominio, por ejemplo, <em>picodotdev.github.io</em> o <em>duckduckgo.com</em>. El software que permite la conversión de nombre de dominio a dirección IP son los servidores <em>DNS</em>.</p>
<p>Algunos rangos de las direcciones IP están reservados para crear redes privadas no accesibles desde internet estos son de <em>10.0.0.0</em> a <em>10.255.255.255</em>, de <em>172.16.0.0</em> a <em>172.31.255.255</em> y de <em>192.168.0.0</em> a <em>192.168.255.255</em>. Para estas direcciones IP privadas en algunos casos también es necesario asociarlas con nombre de dominio, los servidores web virtuales que permiten alojar en el mismo servidor varios sitios web dependen del nombre del dominio a través del cual se realiza la petición, <a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/">usar el protocolo seguro HTTPS</a> y <a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/">usar el protocolo HTTP/2</a> también depende de los nombres de dominio.</p>
<p>Para resolver nombres de dominio a direcciones IP hay dos posibilidades, la primera es utilizar el archivo <em>/etc/hosts</em> creando una línea con el nombre del dominio y su dirección IP, la segunda forma es crear y administrar un servidor DNS. Hay algunos servicios que ofrecen la funcionalidad de resolver dominios a direcciones IP sin necesidad de utilizar el archivo <em>/etc_hosts</em> ni crear un servidor DNS.</p>
<p>Los servidores DNS de <a href="https://www.xip.io/">xip.io</a> resuelven dominios a direcciones privadas IPv4 y <a href="https://sslip.io/">sslip.io</a> resuelve dominios a direcciones privadas IPv4 e IPv6. La utilidad de los nombres de dominio es hacer las direcciones IP más significativas incluyendo una cadena que las describa y permitir utilizar servidores virtuales en los servidores web sin utilizar el archivo <em>etc/hosts</em> ni un servidor DNS propio.</p>
<p>Estos servicios DNS permiten embeber en el nombre de dominio la dirección IP a la que resuelven cuando se les hace la consulta. Por ejemplo, para el nombre de dominio <em>consul.192.168.33.10.xip.io</em> resuelven a la dirección IP <em>192.168.33.10</em>. El servicio sslip permite utilizar guiones en vez de puntos para separar los elementos de la dirección IP, por ejemplo <em>consul.192-168-33-10.sslip.io</em>.</p>
<p>Utilizando el comando <em>dig</em> se obtienen los registros DNS del nombre de dominio indicado incluído el registro <em>A</em> para la dirección IP.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ dig +short consul.192.168.33.10.xip.io&#10;192.168.33.10&#10;&#10;$ dig +short consul.192.168.33.20.xip.io&#10;192.168.33.20&#10;&#10;$ dig consul.192.168.33.10.xip.io&#10;&#10;<span class="p">;</span> &lt;&lt;&gt;&gt; DiG 9.16.5 &lt;&lt;&gt;&gt; consul.192.168.33.10.xip.io&#10;<span class="p">;;</span> global options: +cmd&#10;<span class="p">;;</span> Got answer:&#10;<span class="p">;;</span> -&gt;&gt;HEADER<span class="s">&lt;&lt;- opcode: QUERY, status: NOERROR, id: 59742&#10;</span><span class="s">;; flags: qr rd ra ad; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0&#10;</span><span class="s">&#10;</span><span class="s">;; QUESTION SECTION:&#10;</span><span class="s">;consul.192.168.33.10.xip.io.	IN	A&#10;</span><span class="s">&#10;</span><span class="s">;; ANSWER SECTION:&#10;</span><span class="s">consul.192.168.33.10.xip.io. 292 IN	A	192.168.33.10&#10;</span><span class="s">&#10;</span><span class="s">;; Query time: 3 msec&#10;</span><span class="s">;; SERVER: 192.168.1.1#53(192.168.1.1)&#10;</span><span class="s">;; WHEN: vie jul 31 11:08:13 CEST 2020&#10;</span><span class="s">;; MSG SIZE  rcvd: 61&#10;</span><span class="s">&#10;</span><span class="s">$ dig consul.192.168.33.10.sslip.io&#10;</span><span class="s">&#10;</span><span class="s">; &lt;&lt;&gt;&gt; DiG 9.16.5 &lt;&lt;&gt;&gt; consul.192.168.33.10.sslip.io&#10;</span><span class="s">;; global options: +cmd&#10;</span><span class="s">;; Got answer:&#10;</span><span class="s">;; -&gt;&gt;HEADER&lt;&lt;- opcode</span>: QUERY, status: NOERROR, id: <span class="m">52060</span>&#10;<span class="p">;;</span> flags: qr rd ra<span class="p">;</span> QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: <span class="m">1</span>&#10;&#10;<span class="p">;;</span> OPT PSEUDOSECTION:&#10;<span class="p">;</span> EDNS: version: 0, flags:<span class="p">;</span> udp: <span class="m">512</span>&#10;<span class="p">;;</span> QUESTION SECTION:&#10;<span class="p">;</span>consul.192.168.33.10.sslip.io.	IN	A&#10;&#10;<span class="p">;;</span> ANSWER SECTION:&#10;consul.192.168.33.10.sslip.io. <span class="m">300</span> IN	A	192.168.33.10&#10;&#10;<span class="p">;;</span> Query time: <span class="m">263</span> msec&#10;<span class="p">;;</span> SERVER: 192.168.1.1#53<span class="o">(</span>192.168.1.1<span class="o">)</span>&#10;<span class="p">;;</span> WHEN: vie jul <span class="m">31</span> 11:09:12 CEST <span class="m">2020</span>&#10;<span class="p">;;</span> MSG SIZE  rcvd: <span class="m">74</span>&#10;&#10;$ dig consul.192-168-33-10.sslip.io&#10;&#10;<span class="p">;</span> &lt;&lt;&gt;&gt; DiG 9.16.5 &lt;&lt;&gt;&gt; consul.192-168-33-10.sslip.io&#10;<span class="p">;;</span> global options: +cmd&#10;<span class="p">;;</span> Got answer:&#10;<span class="p">;;</span> -&gt;&gt;HEADER<span class="s">&lt;&lt;- opco</span>de: QUERY, status: NOERROR, id: <span class="m">26671</span>&#10;<span class="p">;;</span> flags: qr rd ra<span class="p">;</span> QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: <span class="m">1</span>&#10;&#10;<span class="p">;;</span> OPT PSEUDOSECTION:&#10;<span class="p">;</span> EDNS: version: 0, flags:<span class="p">;</span> udp: <span class="m">512</span>&#10;<span class="p">;;</span> QUESTION SECTION:&#10;<span class="p">;</span>consul.192-168-33-10.sslip.io.	IN	A&#10;&#10;<span class="p">;;</span> ANSWER SECTION:&#10;consul.192-168-33-10.sslip.io. <span class="m">300</span> IN	A	192.168.33.10&#10;&#10;<span class="p">;;</span> Query time: <span class="m">243</span> msec&#10;<span class="p">;;</span> SERVER: 192.168.1.1#53<span class="o">(</span>192.168.1.1<span class="o">)</span>&#10;<span class="p">;;</span> WHEN: vie jul <span class="m">31</span> 11:32:54 CEST <span class="m">2020</span>&#10;<span class="p">;;</span> MSG SIZE  rcvd: <span class="m">74</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>dig.sh</span>
    </div>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/07/revertir-un-servicio-a-una-version-anterior-con-nomad/</id>
        <title>Revertir un servicio a una versión anterior con Nomad</title>
        <updated>2020-07-26T09:00:00+02:00</updated>
        <published>2020-07-26T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/07/revertir-un-servicio-a-una-version-anterior-con-nomad/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los errores no se planifican, se producen de forma inesperada. Además, un error en un entorno de producción es normalmente urgente e importante lo que obliga a cambiar las prioridades del equipo dejando lo que están haciendo y ocuparse de resolver el problema. En ocasiones no será posible resolver el problema y la única solución es revertir la versión de la aplicación a la anterior. Dependiendo de la automatización de los procesos incluso el volver a la versión anterior quizá sea complicado. Los errores no se planifican pero si se puede planificar estar preparado para algunos errores, una forma de estar preparado ante errores es tener un proceso y herramientas para volver a la versión anterior rápido y fácilmente.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="260" alt="HashiCorp Nomad" title="HashiCorp Nomad"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>En el desarrollo de una aplicación se dedica un considerable esfuerzo a tener la mayor seguridad que los cambios no introducen errores, se realizan numerosas pruebas unitarias, pruebas de integración, si es una aplicación web pruebas funcionales simulando la interacción de un usuario. Todas estas pruebas se ejecutan además del equipo de cada desarrollador en un entorno de integración continua o CI en cada <em>commit</em> al repositorio de control de versiones del código fuente, el equipo de desarrollo recibe una notificación con inmediatez en caso de fallar alguna prueba. Aún se hacen mas pruebas algunas manuales en un entorno de <em>staging</em> que tiene una configuración similar al de producción. Finalmente, se despliega la versión validada en producción todavía haciendo más comprobaciones con estrategias de despliegue <em>blue/green</em> y <em>canary</em>, si no se ha descubierto ningún error se promociona la versión en todas las instancias.</p>
<p>Y aún con todo estos procesos de pruebas en ocasiones se descubren errores en producción. Si la causa del error se descubre rápido y es fácil de solucionar se opta por corregirlo, crear una nueva versión y desplegarla. Si el error es leve y no afecta a una funcionalidad importante se puede esperar a la siguiente versión para corregirlo. Pero algunos errores impactan en una funcionalidad vital para el negocio, tanto que obligan al equipo a dejar las tareas planificadas que están haciendo aún siendo también importantes para descubrir la causa del error y corregirlo, a veces la causa y la corrección se realiza rápido. En otras ocasiones la causa es difícil de determinar o la corrección es compleja, en estas ocasiones la opción adecuada es volver a la versión anterior buena conocida haciendo un <em>revert</em> o <em>rollback</em>. Se pierden las otras nuevas funcionalidades incorporadas en la misma versión pero se evita hacer cambios que introducen deuda técnica por la presión de dar solución rápido al error y se evita al equipo trabajar en un desagradable bajo presión.</p>
<p>En la operación de sistemas lo ideal es que todas las tareas estén automatizadas para evitar errores al realizar operaciones manuales y para evitar complejos procesos que impidan a cualquier miembro de equipo realizar la tarea por falta de conocimiento, complejidad o requerir formación. Dos de estas tareas a automatizar son el despliegue de una aplicación con una nueva versión y también el revertir a una versión anterior en caso de detectar que la nueva versión tiene algún tipo de error.</p>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Nomad es un orquestador de servicios</a> que en gran medida automatiza el despliegue de de las aplicaciones, su actualización a nuevas versiones y revertir a versiones anteriores.</p>
<p>Se inicia con el siguiente comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad agent -dev&#10;<span class="o">==</span>&gt; No configuration files <span class="nv">loaded</span>&#10;<span class="o">==</span>&gt; Starting Nomad agent...&#10;<span class="o">==</span>&gt; Nomad agent configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Advertise Addrs: HTTP: 127.0.0.1:4646<span class="p">;</span> RPC: 127.0.0.1:4647<span class="p">;</span> Serf: 127.0.0.1:4648&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bind Addrs: HTTP: 127.0.0.1:4646<span class="p">;</span> RPC: 127.0.0.1:4647<span class="p">;</span> Serf: 127.0.0.1:4648&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Client: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Log Level: DEBUG&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Region: global <span class="o">(</span>DC: dc1<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: 0.12.0&#10;&#10;<span class="o">==</span>&gt; Nomad agent started! Log data will stream in below:&#10;&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-start.sh</span>
    </div>
</div>
<p>Para ejecutar un servicio basta con enviar su definición en su archivo de configuración con un comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad run service-1.nomad&#10;<span class="o">==</span>&gt; Monitoring evaluation <span class="s2">&#34;56421393&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation triggered by job <span class="s2">&#34;service&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Allocation <span class="s2">&#34;b51101cc&#34;</span> created: node <span class="s2">&#34;5721462c&#34;</span>, group <span class="s2">&#34;service&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation within deployment: <span class="s2">&#34;33154ac5&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation status changed: <span class="s2">&#34;pending&#34;</span> -&gt; <span class="s2">&#34;complete&#34;</span>&#10;<span class="o">==</span>&gt; Evaluation <span class="s2">&#34;56421393&#34;</span> finished with status <span class="s2">&#34;complete&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-run-1.sh</span>
    </div>
</div>
<p>La definición del servicio en <a href="https://www.nomadproject.io/">Nomad</a> incluye la versión del artecfacto a desplegar. En este caso el servicio es simplemente un comando que emite una traza en la consola, a efectos didácticos no es relevante ya que sería lo mismo si fuera el comando de inicio de la aplicación Java que incluya la versión del <em>jar</em> o si el contenedor Docker estuviese versionado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">job <span class="s2">&#34;service&#34;</span> <span class="o">{</span>&#10;  <span class="nv">datacenters</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&#34;dc1&#34;</span><span class="o">]</span>&#10;&#10;  group <span class="s2">&#34;service&#34;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;task <span class="s2">&#34;service&#34;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nv">driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  config <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">image</span> <span class="o">=</span> <span class="s2">&#34;busybox:latest&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">command</span> <span class="o">=</span> <span class="s2">&#34;ash&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">args</span> <span class="o">=</span> <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;-c&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;while true; do echo \&#34;Version 1\&#34;; sleep 1; done&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service-1.nomad</span>
    </div>
</div>
<p>El servicio emite en la salida el mensaje.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job status service&#10;...&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node ID   Task Group  Version  Desired  Status&nbsp;&nbsp;&nbsp;&nbsp;Created&nbsp;&nbsp;&nbsp;&nbsp; Modified&#10;b51101cc  5721462c  service&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; running   40m6s ago   38m31s ago&#10;$ nomad alloc logs b51101cc&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service-1-logs.sh</span>
    </div>
</div>
<p>Al hacer cambios en el código de un servicio con nuevas características, correcciones de errores o mejoras de las funcionalidades existentes hay que generar una nueva versión del artefacto a desplegar, en el caso de una aplicación Java con <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> puede ser un nuevo archivo <em>jar</em> con un nuevo nombre que incluye su versión, el artefacto de despligue es un contenedor Docker este también estará versionado. En la definición del servicio para Nomad hay que actualizar la referencia del artefacto a la nueva versión. El comando para realizar el despliegue es el mismo, basta con enviar la nueva definición del servicio a Nomad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">job <span class="s2">&#34;service&#34;</span> <span class="o">{</span>&#10;  <span class="nv">datacenters</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&#34;dc1&#34;</span><span class="o">]</span>&#10;&#10;  group <span class="s2">&#34;service&#34;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;task <span class="s2">&#34;service&#34;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nv">driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  config <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">image</span> <span class="o">=</span> <span class="s2">&#34;busybox:latest&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">command</span> <span class="o">=</span> <span class="s2">&#34;ash&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nv">args</span> <span class="o">=</span> <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;-c&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;while true; do echo \&#34;Version 2 (error)\&#34;; sleep 1; done&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service-2.nomad</span>
    </div>
</div>
<p>Como una nueva versión implica cambios en el código o la configuración del servicio es posible introducir nuevos errores que aún con todos los procesos de pruebas en diferentes entornos comentados sean descubiertos solo en el entorno de producción como es el típico <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/NullPointerException.html">NullPointerException</a> o en este caso un mensaje de traza erróneo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job status service&#10;...&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node ID   Task Group  Version  Desired  Status&nbsp;&nbsp;&nbsp;&nbsp;Created&nbsp;&nbsp;&nbsp;&nbsp; Modified&#10;f7bd853e  5721462c  service&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; running   38m33s ago  34m57s ago&#10;b51101cc  5721462c  service&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  40m6s ago   38m31s ago&#10;$ nomad alloc logs f7bd853e&#10;Version <span class="m">2</span> <span class="o">(</span>error<span class="o">)</span>&#10;Version <span class="m">2</span> <span class="o">(</span>error<span class="o">)</span>&#10;Version <span class="m">2</span> <span class="o">(</span>error<span class="o">)</span>&#10;Version <span class="m">2</span> <span class="o">(</span>error<span class="o">)</span>&#10;Version <span class="m">2</span> <span class="o">(</span>error<span class="o">)</span>&#10;Version <span class="m">2</span> <span class="o">(</span>error<span class="o">)</span>&#10;Version <span class="m">2</span> <span class="o">(</span>error<span class="o">)</span>&#10;Version <span class="m">2</span> <span class="o">(</span>error<span class="o">)</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service-2-logs.sh</span>
    </div>
</div>
<p>Para la tarea de volver a una versión anterior el proceso con Nomad es igualmente sencillo, Nomad recuerda las definiciones anteriores enviadas con lo que solo se necesita utilizar <a href="https://www.nomadproject.io/docs/commands/job/revert.html">el comando para restaurar la definición del servicio</a>. Con los artefactos de despliegue versionados ya sea con contenedores Docker o con versiones en archivos <em>jar</em> las definiciones de los servicios contienen la referencia de los artefactos que utilizan.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job revert service <span class="nv">0</span>&#10;<span class="o">==</span>&gt; Monitoring evaluation <span class="s2">&#34;493bcc52&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation triggered by job <span class="s2">&#34;service&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation within deployment: <span class="s2">&#34;e13303e3&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Allocation <span class="s2">&#34;fc4fd574&#34;</span> created: node <span class="s2">&#34;5721462c&#34;</span>, group <span class="s2">&#34;service&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation status changed: <span class="s2">&#34;pending&#34;</span> -&gt; <span class="s2">&#34;complete&#34;</span>&#10;<span class="o">==</span>&gt; Evaluation <span class="s2">&#34;493bcc52&#34;</span> finished with status <span class="s2">&#34;complete&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-revert.sh</span>
    </div>
</div>
<p>El volver a la versión anterior puede hacerse desde la consola gráfica de administración de Nomad o desde la interfaz de línea de comandos introduciendo la definición anterior del servicio. Nomad se encarga de actualizar a la versión anterior de todas las instancias de forma progresiva utilizando <a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">estrategias de despliegue <em>blue/green</em> y <em>canary</em> con Nomad</a> que haya del servicio de forma automatizada y el servicio vuelve a la normalidad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job status service&#10;...&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node ID   Task Group  Version  Desired  Status&nbsp;&nbsp;&nbsp;&nbsp;Created&nbsp;&nbsp;&nbsp;&nbsp; Modified&#10;fc4fd574  5721462c  service&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">2</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   34m58s ago  34m43s ago&#10;f7bd853e  5721462c  service&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  38m33s ago  34m57s ago&#10;b51101cc  5721462c  service&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  40m6s ago   38m31s ago&#10;$ nomad alloc logs fc4fd574&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;Version <span class="m">1</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service-3-logs.sh</span>
    </div>
</div>
<p>Desde la consola web de administración también se ven las definiciones de los jobs y sus versiones con sus diferencias.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/revertir-un-servicio-a-una-version-anterior-con-nomad/images/nomad-service-1_hu46d56fa32dedc34aa925f05a6e74ed43_123650_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Versión 1 del servicio"><img src="https://picodotdev.github.io/blog-bitix/2020/07/revertir-un-servicio-a-una-version-anterior-con-nomad/images/nomad-service-1_hu46d56fa32dedc34aa925f05a6e74ed43_123650_200x150_fit_box_3.png" width="155" height="150" alt="Versión 1 del servicio" title="Versión 1 del servicio"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/07/revertir-un-servicio-a-una-version-anterior-con-nomad/images/nomad-service-2_hua65f376519e85a3e38c7d189b5a61580_132252_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Versión 2 del servicio"><img src="https://picodotdev.github.io/blog-bitix/2020/07/revertir-un-servicio-a-una-version-anterior-con-nomad/images/nomad-service-2_hua65f376519e85a3e38c7d189b5a61580_132252_200x150_fit_box_3.png" width="148" height="150" alt="Versión 2 del servicio" title="Versión 2 del servicio"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/07/revertir-un-servicio-a-una-version-anterior-con-nomad/images/nomad-versions_hu940a3480bfb39e48a962826728734d4b_126962_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Versiones del servicio"><img src="https://picodotdev.github.io/blog-bitix/2020/07/revertir-un-servicio-a-una-version-anterior-con-nomad/images/nomad-versions_hu940a3480bfb39e48a962826728734d4b_126962_200x150_fit_box_3.png" width="200" height="150" alt="Versiones del servicio" title="Versiones del servicio"  class="lozad "></a></p>
<figcaption>Versiones del servicio</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/</id>
        <title>Comunicaciones seguras, autenticación mutua y autorizaciones con intenciones entre servicios usando Consul Connect y Nomad</title>
        <updated>2020-07-24T15:00:00+02:00</updated>
        <published>2020-07-24T15:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La configuración de seguridad estática y basada en direcciones IP no es adecuada en un entorno en el que los recursos de computación está compartidos y no son confiables, ni para aplicaciones basadas en microservicios cuyo número de servicios e instancias cambia a lo largo del tiempo. Consul y Consul Connect ofrecen un mecanismo de comunicación segura adaptados a la computación en la nube y adecuado para aplicaciones basadas en microservicios.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="278" alt="HashiCorp Consul" title="HashiCorp Consul"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="260" alt="HashiCorp Nomad" title="HashiCorp Nomad"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>El método habitual para proporcionar seguridad a varios sistemas que se comunican por red ha sido utilizar protocolos de comunicaciones cifrados, poner cortafuegos e impedir una comunicación directa con algunos sistemas como las base de datos en ocasiones en base a direcciones IP. La configuración estática cuando hay que adaptarla por añadir nuevos sistemas es difícil de cambiarla.</p>
<p>En un entorno en la nube, aún con sus propias medidas de seguridad y aislamiento que implementan, la infraestructura no es confiable por ser compartida con otras organizaciones como demuestran los <a href="https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/">fallos de seguridad de meltdown y spectre de los procesadores</a> por su ejecución especulativa. En una arquitectura dinámica de múltiples microservicios e instancias una configuración estática no es práctica para un sistema que por naturaleza es altamente dinámico y en un medio de computación compartido no confiable hay que adoptar medidas adicionales.</p>
<p>La propuesta que ofrecen algunas herramientas nativas para la computación en la nube es proporcionar seguridad realizando cada comunicación servicio a servicio de forma cifrada y transparente para las aplicaciones incluso si estas no implementan comunicación cifrada de forma nativa, con autenticación mutua entre los dos servicios utilizando su identidad en vez de direcciones IP y con autorizaciones basadas en intenciones fáciles de administrar y cambiar.</p>
<p>Una de estas herramientas es <a href="https://www.consul.io/">Consul</a> que proporciona la funcionalidad de registro y descubrimiento de servicios y conectividad entre esos servicios. Consul Connect proporciona comunicaciones seguras de forma transparente para las aplicaciones.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/infrastructure-static_hu40ea92732f7c799eac78c9ecc53c9f1e_687720_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Infraestructura estática"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/infrastructure-static_hu40ea92732f7c799eac78c9ecc53c9f1e_687720_300x200_fit_box_3.png" width="270" height="200" alt="Infraestructura estática" title="Infraestructura estática"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/infrastructure-static-approach_hue0ef08cc5d3ec3fec4e79c39218b6127_43440_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Infraestructura estática"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/infrastructure-static-approach_hue0ef08cc5d3ec3fec4e79c39218b6127_43440_300x200_fit_box_3.png" width="267" height="200" alt="Infraestructura estática" title="Infraestructura estática"  class="lozad "></a></p>
<figcaption>Infraestructura estática</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/infrastructure-dynamic_hud792d9ccac62b58fc59867570540fb55_748281_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Infraestructura dinámica"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/infrastructure-dynamic_hud792d9ccac62b58fc59867570540fb55_748281_300x200_fit_box_3.png" width="239" height="200" alt="Infraestructura dinámica" title="Infraestructura dinámica"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/infrastructure-dynamic-approach_huc588b2a2c6815d010814db891979b214_44789_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Infraestructura dinámica"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/infrastructure-dynamic-approach_huc588b2a2c6815d010814db891979b214_44789_300x200_fit_box_3.png" width="267" height="200" alt="Infraestructura dinámica" title="Infraestructura dinámica"  class="lozad "></a></p>
<figcaption>Infraestructura dinámica</figcaption>
</figure>
</div>
<p>El esquema de funcionamiento de <a href="https://www.consul.io/docs/connect">Consul Connect</a> es hacer que los servicios no se comuniquen directamente entre ellos sino que utilizan <em>proxys</em>, la creación del enlace de comunicación se delega en Consul que crea los <em>proxys</em> y con ellos le es posible proporcionar comunicaciones seguras, con autenticación mutua y posibilitando autorización con intenciones. Las intenciones son los permisos que establece el operador de Consul para establecer que dos servicios tiene permitido la comunicación entre ellos, cualquier intento de comunicación si no está aprobado de forma explícita por su intención no se permite.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/consul-connect-communications_hu9b9392122792520048bdeecbe5e8f0fc_25368_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Comunicación servicio a servicio con Consul Connect"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/consul-connect-communications_hu9b9392122792520048bdeecbe5e8f0fc_25368_300x200_fit_box_3.png" width="300" height="98" alt="Comunicación servicio a servicio con Consul Connect" title="Comunicación servicio a servicio con Consul Connect"  class="lozad "></a></p>
<figcaption>Comunicación servicio a servicio con Consul Connect</figcaption>
</figure>
</div>
<p>Otra de las herramientas de <a href="https://www.hashicorp.com/">HashiCorp</a> es <a href="https://www.nomadproject.io/">Nomad</a> que proporciona la funcionalidad de orquestador de servicios, creando las instancias de los servicios necesarias en los diferentes nodos de computación. Nomad se integra con Consul y Consul Connect haciendo más sencillo utilizar todas estas tecnologías.</p>
<p>En el siguiente ejemplo sigo la <a href="https://www.nomadproject.io/docs/integrations/consul-connect">guía de ejemplo para probar Consul Connect</a> con Nomad utilizando <a href="https://www.envoyproxy.io/">Envoy</a> para crear los <em>proxys</em>. Para ejecutar el ejemplo es necesario obtener los binarios de Consul, Nomad y Envoy además de las utilidades de comunicaciones de <em>cni-plugins</em> y <a href="https://www.docker.com/">Docker</a>.</p>
<p>Hay que instalar los paquetes de Consul, Nomad, Envoy y <em>cni-plugins</em> de la distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> o la descarga directa de sus binarios accesibles en la variable <em>PATH</em> del sistema utilizada por los intérpretes de comandos para buscar comandos. Para obtener Envoy hay que ejecutar el siguiente comando que instala el binario de Envoy en la carpeta <em>/usr/local/bin</em> que incluida en la variable <em>PATH</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -L https://getenvoy.io/cli <span class="p">|</span> bash -s -- -b /usr/local/bin&#10;$ getenvoy run standard:1.11.2 -- --version&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>getenvoy.sh</span>
    </div>
</div>
<p>Nomad requiere que los <em>cni-plugins</em> esté ubicados en la carpeta <em>/opt/cni/bin</em>, en Arch Linux se instalan en la carpeta <em>/usr/lib/cni/</em> por lo que hay que crear un enlace simbólico para que sean encontrados por Nomad. En Ubuntu la opción es realizar la instalación descargando el paquete manualmente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -L -o cni-plugins.tgz https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.6.tgz&#10;$ sudo mkdir -p /opt/cni/bin&#10;$ sudo tar -C /opt/cni/bin -xzf cni-plugins.tgz</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install-cni-plugins.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -s cni-plugins&#10;$ sudo ln -s /usr/lib/cni/ /opt/cni/bin&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install-cni-plugins-archlinux.sh</span>
    </div>
</div>
<p>Con los binarios necesarios instalados hay que iniciar Consul y Nomad con los siguientes comandos que los arrancan en su configuración de desarrollo y con el soporte para Consul Connect en Nomad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev&#10;$ sudo nomad agent -dev-connect&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>start-consul-nomad.sh</span>
    </div>
</div>
<p>El siguiente paso es enviar el Nomad la definición de los servicios para que planifique su ejecución, en este caso utilizando contenedores de Docker que ha de estar instalado previamente y con su servicio del sistema iniciado.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción y características de Docker</a></li>
</ul>
<p>La definición incluye dos servicios uno que proporciona un contador y otro que obtiene el valor de ese contador y lo muestra en una página web. En la definición del servicio <em>count-api</em> se define que va a ofrecer su comunicación por red en el puerto 9001 asociado a la interfaz de red <em>localhost</em> de modo que este puerto solo pueda ser accedido por Consul a través del <em>proxy</em> que crea, la definición del servicio <em>count-dashboard</em>  ofrece su servicio en el puerto 9002 y que tiene tiene como dependencia el servicio <em>count-api</em> para el que Consul crea un nuevo <em>proxy</em>, el servicio <em>count-dashboard</em> se conecta al puerto <em>8080</em> para comunicarse con el  servicio <em>count-api</em> mediante los <em>proxys</em> de Consul Connect. Los servicios solo se comunican con los <em>proxys</em> y son los <em>proxys</em> los que se comunican entre ellos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad run connect.nomad&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-run.sh</span>
    </div>
</div>
<p>En la definición de <em>job</em> las partes relativas a Consul Connect están en los bloques o <em>stanzas</em> <em>connect</em>, en el caso de <em>count-api</em> simplemente para indicar que desea un <em>proxy</em> y en el caso de <em>count-dashboard</em> para indicar que desea un <em>proxy</em> para conectarse al servicio <em>count-api</em>, la variable de entorno <em>COUNTING_SERVICE_URL</em> contiene la dirección del <em>proxy</em> que permite la conexión con <em>count-api</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="k">job</span> <span class="s2">&#34;countdash&#34;</span> {&#10;<span class="n">  datacenters</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;dc1&#34;</span><span class="p">]</span>&#10;&#10;  <span class="k">group</span> <span class="s2">&#34;api&#34;</span> {&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">network</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  mode</span> <span class="o">=</span> <span class="s2">&#34;bridge&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">service</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  name</span> <span class="o">=</span> <span class="s2">&#34;count-api&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  port</span> <span class="o">=</span> <span class="s2">&#34;9001&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">connect</span> {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">sidecar_service</span> {}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">task</span> <span class="s2">&#34;web&#34;</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">config</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image</span> <span class="o">=</span> <span class="s2">&#34;hashicorpnomad/counter-api:v1&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;&#10;  <span class="k">group</span> <span class="s2">&#34;dashboard&#34;</span> {&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">network</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  mode</span> <span class="o">=</span> <span class="s2">&#34;bridge&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">port</span> <span class="s2">&#34;http&#34;</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static</span> <span class="o">=</span> <span class="m">9002</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">9002</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">service</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  name</span> <span class="o">=</span> <span class="s2">&#34;count-dashboard&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  port</span> <span class="o">=</span> <span class="s2">&#34;9002&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">connect</span> {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">sidecar_service</span> {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">proxy</span> {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">upstreams</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  destination_name</span> <span class="o">=</span> <span class="s2">&#34;count-api&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  local_bind_port</span>  <span class="o">=</span> <span class="m">8080</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">task</span> <span class="s2">&#34;dashboard&#34;</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">env</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COUNTING_SERVICE_URL</span> <span class="o">=</span> <span class="s2">&#34;http://${NOMAD_UPSTREAM_ADDR_count_api}&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">config</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image</span> <span class="o">=</span> <span class="s2">&#34;hashicorpnomad/counter-dashboard:v1&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;}&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>connect.nomad</span>
    </div>
</div>
<p>El resultado es esta aplicación sencilla de ejemplo que muestra un contador en una página web con el tiempo se va incrementando. En las consolas de administración de Consul se observan los servicios registrados y en Nomad la ejecución de los mismos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/consul-console_hu8c985d25713a41703bcc650f7b57262b_79368_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Consola de administración de Consul"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/consul-console_hu8c985d25713a41703bcc650f7b57262b_79368_300x200_fit_box_3.png" width="226" height="200" alt="Consola de administración de Consul" title="Consola de administración de Consul"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/nomad-console_hu54fd55ff47624b201af619067639abdb_116271_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Consola de administración de Nomad"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/nomad-console_hu54fd55ff47624b201af619067639abdb_116271_300x200_fit_box_3.png" width="226" height="200" alt="Consola de administración de Nomad" title="Consola de administración de Nomad"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/dashboard_hu9efa3299b8ef7dc069eb9ec8b701f4f9_94363_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Servicio count-dashboard"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/dashboard_hu9efa3299b8ef7dc069eb9ec8b701f4f9_94363_300x200_fit_box_3.png" width="226" height="200" alt="Servicio count-dashboard" title="Servicio count-dashboard"  class="lozad "></a></p>
<figcaption>Consola de administración de Consul y Nomad y servicio count-dashboard</figcaption>
</figure>
</div>
<p>Dado que el servicio <em>count-dashboard</em> se conecta con el servicio <em>count-api</em> a través de los <em>proxys</em> que crea Consul, Consul es capaz de permitir o denegar la comunicación con las intenciones. Las intenciones son las autorizaciones concedidas a cada servicio origen y servicio destino de comunicación. La ventaja de las intenciones es que son agnósticas de la red como redes físicas, en la nube, basadas en software o cualesquiera otras ya que están basadas en la identidades de los servicios.</p>
<p>En el modo desarrollo de Consul aún sin una intención la comunicación se autorizan las comunicaciones pero si se crea una intención que deniegue la comunicación desde el servicio <em>count-dashboard</em> a <em>count-api</em> el servicio <em>count-dashboard</em> no es capaz de recuperar el contador y se muestra desconectado. Cambiando la intención para que autorice el tráfico la comunicación se restaura y el servicio <em>count-dashboard</em> vuelve a mostrar el contador.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/consul-intentions-deny_huc2f2a2db30104806a5ceb8366b35ea2e_64077_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Intención que deniega la comunicación"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/consul-intentions-deny_huc2f2a2db30104806a5ceb8366b35ea2e_64077_300x200_fit_box_3.png" width="226" height="200" alt="Intención que deniega la comunicación" title="Intención que deniega la comunicación"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/dashboard-deny_hud397b3ca088678316e0c34eec5fcdf4d_92971_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Intención que deniega la comunicación"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/dashboard-deny_hud397b3ca088678316e0c34eec5fcdf4d_92971_300x200_fit_box_3.png" width="226" height="200" alt="Intención que deniega la comunicación" title="Intención que deniega la comunicación"  class="lozad "></a></p>
<figcaption>Intención que deniega la comunicación</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/consul-intentions-allow_hu6eee299d1329773eb700066625f2c9e3_63546_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Intención que permite la comunicación"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/consul-intentions-allow_hu6eee299d1329773eb700066625f2c9e3_63546_300x200_fit_box_3.png" width="226" height="200" alt="Intención que permite la comunicación" title="Intención que permite la comunicación"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/dashboard-allow_hu66268335fb29c6245f012040cb0b70ca_96387_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Intención que permite la comunicación"><img src="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/images/dashboard-allow_hu66268335fb29c6245f012040cb0b70ca_96387_300x200_fit_box_3.png" width="226" height="200" alt="Intención que permite la comunicación" title="Intención que permite la comunicación"  class="lozad "></a></p>
<figcaption>Intención que permite la comunicación</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/07/un-comando-y-aplicaciones-graficas-para-descargar-todo-el-contenido-de-un-sitio-web/</id>
        <title>Un comando y aplicaciones gráficas para descargar todo el contenido de un sitio web</title>
        <updated>2020-07-19T10:00:00+02:00</updated>
        <published>2020-07-19T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/07/un-comando-y-aplicaciones-graficas-para-descargar-todo-el-contenido-de-un-sitio-web/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<p>La necesidad puede ser hacer una copia de seguridad periódicas para conservar el historial del sitio web, descargar el contenido para procesarlo de alguna forma, para consultarlo sin conexión a internet u <em>offline</em> si nuestra conexión es lenta o inestable o el servidor está caído, migrar un sitio web de un servidor web a otro o descargar los archivos de vídeo, audio, imágenes o multimedia.</p>
<p>Los navegadores web con el botón derecho del ratón ofrecen la posibilidad de descargar y guardar en el sistema de archivos la página que se está visualizando, está es la opción más simple ya que no se necesitan herramientas adicionales si solo se quiere guardar una página de las muchas de un sitio web. Su desventaja es que no sirve para guardar un sitio web completo por requerir hacer la operación manualmente por cada página, de forma que para realizar la operación de forma másiva y automatizada para el sitio web completo hay que utilizar alguna herramienta especializada.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="cómo-descargar-un-sitio-web-desde-la-línea-de-comandos-con-wget">Cómo descargar un sitio web desde la línea de comandos con wget</h3>
<p>La herramienta de línea de comandos <a href="https://www.gnu.org/software/wget/">wget</a> permite descargar un sitio web completo con un comando ejecutado desde la terminal incluyendo los archivos HTML y de recursos como imágenes, vídeos, contenido multimedia como audio o música, de estilos CSS o archivos JavaScript. El contenido que descarga wget es el referenciado a través de los enlaces presentes en el propio contenido, wget explora los archivos HTML en busca de enlaces a recursos u otras páginas HTML y de forma recursiva descarga el contenido completo al sistema de archivos local. Está disponible para los sistemas operativos <a href="https://www.microsoft.com/es-es/windows/">Windows</a>, <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> y <a href="https://www.apple.com/macos/">macOS</a> y es una herramienta de software libre y gratuita.</p>
<p>Basta indicar el o los dominios del sitio web de los que se quiere descargar el contenido y la URL de rastreo de inicio u otras URLs adicionales que se desean descargar. Este comando con las opciones indicadas solo descarga los enlaces del sitio web puesto como argumento, los enlaces a sitios web externos no indicados expresamente en la opción <em>&ndash;domain</em> son ignorados. El comando wget soporta numerosas opciones para personalizar la descarga explicadas en su <a href="https://www.gnu.org/software/wget/manual/wget.html">página de manual</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ wget <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--recursive <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--no-clobber <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--page-requisites <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--html-extension <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--convert-links <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--restrict-file-names<span class="o">=</span>windows <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--domains picodotdev.github.io <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--no-parent <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picodotdev.github.io/blog-bitix/</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>wget-download.sh</span>
    </div>
</div>
<p>Terminado el proceso de descarga el contenido del sitio web se guarda en el sistema de archivos conservando la jerarquía de carpetas de las URLs de los recursos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/un-comando-y-aplicaciones-graficas-para-descargar-todo-el-contenido-de-un-sitio-web/images/archivos-sitio-web_hu5abb769a9287f1cc7ec0e2ab9530cb7d_43788_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivos del sitio web en el explorador de archivos"><img src="https://picodotdev.github.io/blog-bitix/2020/07/un-comando-y-aplicaciones-graficas-para-descargar-todo-el-contenido-de-un-sitio-web/images/archivos-sitio-web_hu5abb769a9287f1cc7ec0e2ab9530cb7d_43788_650x450_fit_box_3.png" width="650" height="375" alt="Archivos del sitio web en el explorador de archivos" title="Archivos del sitio web en el explorador de archivos"  class="lozad "></a></p>
<figcaption>Archivos del sitio web en el explorador de archivos</figcaption>
</figure>
</div>
<p>Descargar un sitio web no es la única funcionalidad que ofrece wget, otra necesidad habitual es <a href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/">buscar los enlaces rotos de una página web</a> que con el paso del tiempo se van generando ya sea porque los sitios web externos desaparecen o por errores en la edición y enlazado interno. Conocer los enlaces rotos permite arreglarlos para ofrecer mejor experiencia de usuario al visitante y para mejorar el SEO en el posicionamiento en los buscadores.</p>
<h3 id="cómo-descargar-un-sitio-web-con-programas-de-interfaz-gráfica-o-páginas-web">Cómo descargar un sitio web con programas de interfaz gráfica o páginas web</h3>
<p>Hay algunas herramientas con interfaz gráfica como <a href="https://www.httrack.com/">HTTrack</a> o <a href="https://www.cyotek.com/cyotek-webcopy">Cyotek WebCopy</a> que realizan la misma tarea que wget de forma más intuitiva. Aún así el comando de wget es una forma sencilla y rápida de realizar la descarga de un sitio web completo.</p>
<p>También hay algunas herramientas o páginas web <em>online</em> que realizan la descarga de sitios web como <a href="https://websitedownloader.io">Website Downloader</a> o <a href="https://archivarix.com/en/website-downloader-cms-converter/">Archivarix</a> sin necesidad de instalar ningún programa en el ordenador aunque tienen unos límites muy reducidos que sobrepasados no son gratuitas y hay que pagar por utilizarlas.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.linuxjournal.com/content/downloading-entire-web-site-wget">Downloading an Entire Web Site with wget</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/07/las-3-formas-de-guardar-datos-en-el-navegador-con-javascript/</id>
        <title>Las 3 formas de guardar datos en el navegador con JavaScript</title>
        <updated>2020-07-17T18:30:00+02:00</updated>
        <published>2020-07-17T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/07/las-3-formas-de-guardar-datos-en-el-navegador-con-javascript/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En el navegador del usuario hay varias formas de guardar información con diferentes propósitos que perdure entre las visitas realizadas en varias sesiones. Los navegadores ofrecen tres formas de guardar datos: cookies, LocalStorage y SessionStorage e IndexedDB cada una con diferentes características y utilizables con código JavaScript.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/javascript.svg" width="200" height="200" alt="JavaScript" title="JavaScript"  class=""></p>
</div>
<p>Las aplicaciones web utilizan la arquitectura cliente/servidor comunicándose mediante la red para enviar y recibir datos. El cliente ya sea un navegador web en un ordenador de escritorio o portátil o bien sea un dispositivo móvil inicia las solicitudes al servidor y el servidor devuelve una respuesta. La respuesta del servidor puede ser contenido HTML o datos en formato JSON en el caso de recursos REST o <a href="https://graphql.org/">GraphQL</a>.</p>
<p>Aún con la cada vez mayor ancho de banda de las redes cada petición al servidor con comunicación mediante la red implica una latencia en la respuesta de unas decenas de milisegundos que se aprecia en la fluidez de las aplicaciones. Para evitar estas latencias y mejorar la experiencia de uso de las aplicaciones web hay varias estrategias, reducir el número de peticiones de una página web o aplicación web, reducir la cantidad de datos transmitidos y cuando sea posible cachear los recursos y datos para no tener que solicitarlos en cada petición ni en futuras visitas al servidor.</p>
<p>Los navegadores web modernos ofrecen tres formas diferentes de almacenar o persistir datos en lado del cliente cada una siendo más apropiada según las necesidades, estas tres formas de guardar datos son con las <em>cookies</em>, LocalStorage o SessionStorage y finalmente IndexedDB. Los datos están accesibles aún sin conexión con el servidor desde donde se descargó la página siguiendo la <a href="https://www.w3.org/Security/wiki/Same_Origin_Policy">política de mismo origen</a> para mantener la seguridad y que solo la página origen tenga acceso a los datos almacenados. Una aplicación puede utilizar una o varias de estas formas de guardar datos al mismo tiempo que perduran al cierre del navegador y de las páginas estando disponible en futuras sesiones.</p>
<p>En los navegadores se pueden inspeccionar estos datos almacenados en el lado del cliente utilizando las herramientas para desarrolladores, en el navegador <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> en la sección <em>Almacenamiento</em> de las herramientas para desarrolladores.</p>
<p>Dado que los datos se almacenan en el navegador del usuario hay que tener en cuenta en que el propio usuario tiene acceso a ellos y es capaz de modificarlos, de modo que si estos datos se envían al servidor hay que tratarlos como una fuente de datos no confiable y validarlos en el lado del servidor si es necesario para evitar fallos de seguridad ni ser datos que comprometan la seguridad.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="guardar-datos-en-el-navegador-con-cookies">Guardar datos en el navegador con cookies</h3>
<p>El protocolo HTTP es un protocolo sin estado, esto significa que cada petición al servidor es independiente y no comparten información. Las <em>cookies</em> son la forma de convertir el protocolo HTTP a un protocolo con estado identificando al usuario en las diferentes peticiones. Las <em>cookies</em> son unos pequeños datos guardados por el navegador y enviados al servidor en cada petición al servidor.</p>
<p>Las <em>cookies</em> se utilizan para mantener la sesión, para ofrecer personalización o para realizar seguimiento de usuarios. Cuando se realiza la autenticación en un servidor la sesión se mantiene creado una <em>cookie</em> que contiene un identificativo de sesión y en el lado del servidor el identificativo de la sesión se mantiene en memoria o externalizada del servidor en una base de datos como <a href="https://redis.io/">Redis</a> o relacional. El identificativo de la sesión guardado en una <em>cookie</em> no es más que al menos 128 bits aleatorios únicos para cada usuario.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/03/datos-de-sesion-externalizados-con-spring-session/">Datos de sesión externalizados con Spring Session</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/">Aumentar el tamaño del identificativo de la cookie de sesión de Tomcat o Spring Session</a></li>
</ul>
<p>Las propiedades de las <em>cookies</em> son:</p>
<ul>
<li>Se mantienen en el cliente.</li>
<li>Se envían en cada petición al servidor.</li>
<li>Su tamaño es muy reducido, no pueden superar los 4 KiB.</li>
<li>Tienen una fecha de expiración.</li>
<li>Tienen un nombre y guardan un valor.</li>
<li>Las <em>cookies</em> solo se envían al dominio origen.</li>
<li>Pueden crearse sin la posibilidad de que desde JavaScript sean accesibles por seguridad.</li>
<li>Se pueden crear tanto en el lado del servidor, como en el lado del cliente con JavaScript.</li>
</ul>
<p>Desde JavaScript se pueden crear <em>cookies</em>, buscar por nombre, obtener sus valores, modificar y eliminar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// Crear y modificar una cookie de nombre name&#10;</span><span class="c1"></span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="s2">&#34;name=value&#34;</span><span class="p">;</span>&#10;&#10;<span class="c1">// Comprobar si existe una cookie de nombre name&#10;</span><span class="c1"></span><span class="kr">const</span> <span class="nx">exists</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">).</span><span class="nx">some</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>&#10;   <span class="k">return</span> <span class="nx">item</span><span class="p">.</span><span class="nx">trim</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;name=&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">;</span>&#10;<span class="p">});</span>&#10;&#10;<span class="c1">// Obtener el valor de la cookie de nombre name&#10;</span><span class="c1"></span><span class="kr">const</span> <span class="nx">value</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;; &#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">row</span> <span class="p">=&gt;</span> <span class="nx">row</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s1">&#39;name=&#39;</span><span class="p">)).</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">)[</span><span class="mi">1</span><span class="p">];</span>&#10;&#10;<span class="c1">// Eliminar la cookie cookie de nombre name&#10;</span><span class="c1"></span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="s2">&#34;name=; expires=Thu, 01 Jan 1970 00:00:00 GMT&#34;</span><span class="p">;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Cookies.js</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/las-3-formas-de-guardar-datos-en-el-navegador-con-javascript/images/cookie_hu9ef5d2a4228b75841797f159c0f1ef0a_37913_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Datos almacenados con cookies"><img src="https://picodotdev.github.io/blog-bitix/2020/07/las-3-formas-de-guardar-datos-en-el-navegador-con-javascript/images/cookie_hu9ef5d2a4228b75841797f159c0f1ef0a_37913_650x450_fit_box_3.png" width="650" height="283" alt="Datos almacenados con cookies" title="Datos almacenados con cookies"  class="lozad "></a></p>
<figcaption>Inspección de datos almacenados con cookies</figcaption>
</figure>
</div>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie">Document.cookie</a></li>
</ul>
<h3 id="guardar-datos-en-el-navegador-con-localstorage-y-sessionstorage">Guardar datos en el navegador con LocalStorage y SessionStorage</h3>
<p>Las <em>cookies</em> tiene la limitación de que son pequeñas y de enviarse en cada petición al servidor incluidas las peticiones de solicitudes de recursos como imágenes y hojas de estilo lo que aumenta la cantidad de datos transmitidos en el caso de realizar por cada página solicitada con muchos recursos un gran número de peticiones. Aunque el navegador soporte la <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API">Web Storage API</a> algunos navegadores en el modo privado y restringidos impiden su uso para proteger la privacidad y el rastreo de los usuarios.</p>
<p>El sistema de persistencia <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage">LocalStorage</a> y <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage">SessionStorage</a> tiene las propiedades:</p>
<ul>
<li>La cantidad de datos que se pueden guardar es de hasta 5 MiB.</li>
<li>Los datos almacenados no se transmiten, solo se almacenan en el navegador.</li>
<li>No tienen fecha de expiración.</li>
<li>Almacenan datos clave-valor.</li>
<li>Las claves-valor están asociadas a un dominio.</li>
</ul>
<p>La diferencia entre LocalStorage y SessionStorage está en que en el último caso los datos son eliminados al cerrar todas las pestañas del navegador del dominio asociado al SessionSotrage, sus datos están limitados a la sesión. Se permiten las operaciones de inserción, lectura, modificación, eliminación y búsqueda.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// Crear una clave-valor&#10;</span><span class="c1"></span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">);</span>&#10;&#10;<span class="c1">// Ontener el valor de una clave&#10;</span><span class="c1"></span><span class="kd">let</span> <span class="nx">value</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">);</span>&#10;&#10;<span class="c1">// Eliminar una clave&#10;</span><span class="c1"></span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">);</span>&#10;&#10;<span class="c1">// Eliminar todas las claves&#10;</span><span class="c1"></span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>&#10;&#10;<span class="c1">// Guardar un valor en formato JSON&#10;</span><span class="c1"></span><span class="nx">value</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">({</span><span class="s2">&#34;key1&#34;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="s2">&#34;key2&#34;</span><span class="o">:</span> <span class="mi">42</span><span class="p">,</span> <span class="s2">&#34;key3&#34;</span><span class="o">:</span> <span class="s2">&#34;Hello World!&#34;</span><span class="p">});</span>&#10;<span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">,</span> <span class="nx">value</span><span class="p">);</span>&#10;&#10;<span class="c1">// Obtener el valor de una cadena guardada en formato JSON&#10;</span><span class="c1"></span><span class="kr">const</span> <span class="nx">string</span> <span class="o">=</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s1">&#39;key&#39;</span><span class="p">);</span>&#10;<span class="nx">value</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">string</span><span class="p">);</span>&#10;&#10;<span class="c1">// Buscar elementos&#10;</span><span class="c1"></span><span class="kd">let</span> <span class="nx">keysArray</span> <span class="o">=</span> <span class="p">[];</span>&#10;<span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">keysArray</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">key</span><span class="p">(</span><span class="nx">i</span><span class="p">));</span>&#10;<span class="p">}</span>&#10;<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">keysArray</span><span class="p">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>LocalStorageSessionStorage.js</span>
    </div>
</div>
<p>Otra de las características de LocalStorage y SessionStorage es que permiten establecer un manejador de evento o <em>listener</em> cuando se realizan cambios. La singularidad de este mecanismo es que permite comunicar varias pestañas de la misma aplicación sin necesidad de realizar la comunicación a través del servidor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;storage&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>  &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Key: &#34;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">key</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Old value: &#34;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">oldValue</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;New value: &#34;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">newValue</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Url: &#34;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">url</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Storage area: &#34;</span> <span class="o">+</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">storageArea</span><span class="p">));</span>&#10;<span class="p">});</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>StorageListener.js</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/las-3-formas-de-guardar-datos-en-el-navegador-con-javascript/images/localstorage_hu3cf176b99ebcaf68cf723dc7513b2237_32565_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Datos almacenados con LocalStorage"><img src="https://picodotdev.github.io/blog-bitix/2020/07/las-3-formas-de-guardar-datos-en-el-navegador-con-javascript/images/localstorage_hu3cf176b99ebcaf68cf723dc7513b2237_32565_650x450_fit_box_3.png" width="650" height="270" alt="Datos almacenados con LocalStorage" title="Datos almacenados con LocalStorage"  class="lozad "></a></p>
<figcaption>Inspección de datos almacenados con LocalStorage</figcaption>
</figure>
</div>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Storage">Storage</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/storage_event">Window: storage event</a></li>
</ul>
<h3 id="guardar-datos-en-el-navegador-con-indexeddb">Guardar datos en el navegador con IndexedDB</h3>
<p>En el caso de querer grandes cantidades de datos o de poder buscar datos por varias claves la otra forma disponible es IndexedDB. Sus propiedades son:</p>
<ul>
<li>Permite almacenar grandes cantidades de datos.</li>
<li>Permite almacenar datos estructurados.</li>
<li>Cada base de datos tiene múltiples espacios de almacenamiento e índices.</li>
<li>Permite búsquedas por varias claves e índices eficientemente.</li>
<li>Soporta transaccionalidad.</li>
</ul>
<p>Los espacios de almacenamiento de datos relacionados se denominan <em>objectStore</em>. Los datos se acceden por una clave primaria pero con la diferencia de que puede haber varios índices, cada uno indexando los datos con una clave diferente. Se permiten las operaciones de inserción, lectura, modificación, eliminación y búsqueda.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span><span class="lnt">87&#10;</span><span class="lnt">88&#10;</span><span class="lnt">89&#10;</span><span class="lnt">90&#10;</span><span class="lnt">91&#10;</span><span class="lnt">92&#10;</span><span class="lnt">93&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="c1">// Funciones de utilidad para convertir la API de listeners de IndexedDB a promesas&#10;</span><span class="c1"></span><span class="kd">function</span> <span class="nx">toRequestPromise</span><span class="p">(</span><span class="nx">request</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">const</span> <span class="nx">unlisten</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">request</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s1">&#39;success&#39;</span><span class="p">,</span> <span class="nx">success</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">request</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">const</span> <span class="nx">success</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">resolve</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">result</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">unlisten</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">const</span> <span class="nx">error</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">reject</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">error</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">unlisten</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">request</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;success&#39;</span><span class="p">,</span> <span class="nx">success</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">request</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;  <span class="p">}</span>&#10;  &#10;  <span class="kd">function</span> <span class="nx">toTransactionPromise</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">transaction</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">const</span> <span class="nx">unlisten</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">transaction</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s1">&#39;success&#39;</span><span class="p">,</span> <span class="nx">success</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">transaction</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">const</span> <span class="nx">success</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">resolve</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">unlisten</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">const</span> <span class="nx">error</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">reject</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">e</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">unlisten</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">transaction</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;complete&#39;</span><span class="p">,</span> <span class="nx">success</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">transaction</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;  <span class="p">}</span>&#10;&#10;<span class="c1">// Abrir una base de datos&#10;</span><span class="c1"></span><span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="nx">indexedDB</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s1">&#39;database&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>&#10;&#10;<span class="c1">// Crear los stores de la base de datos y los índices&#10;</span><span class="c1"></span><span class="nx">request</span><span class="p">.</span><span class="nx">onupgradeneeded</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">const</span> <span class="nx">database</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">result</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Crear un objectStore y un índice&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kr">const</span> <span class="nx">objectStore</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nx">createObjectStore</span><span class="p">(</span><span class="s2">&#34;store&#34;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">keyPath</span><span class="o">:</span> <span class="s2">&#34;id&#34;</span> <span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">objectStore</span><span class="p">.</span><span class="nx">createIndex</span><span class="p">(</span><span class="s1">&#39;dni&#39;</span><span class="p">,</span> <span class="s1">&#39;dni&#39;</span><span class="p">,</span> <span class="p">{</span><span class="nx">unique</span><span class="o">:</span> <span class="kc">false</span><span class="p">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;database created&#39;</span><span class="p">);</span>&#10;<span class="p">};</span>&#10;&#10;<span class="nx">toRequestPromise</span><span class="p">(</span><span class="nx">request</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">database</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Eliminar todos los datos de un store&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">,</span> <span class="s1">&#39;readwrite&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">transaction</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">store</span><span class="p">.</span><span class="nx">clear</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">toTransactionPromise</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">transaction</span><span class="p">);</span>&#10;<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">database</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Insertar datos&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">,</span> <span class="s1">&#39;readwrite&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">transaction</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">item</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;picodotdev&#39;</span><span class="p">,</span> <span class="nx">dni</span><span class="o">:</span> <span class="s1">&#39;00000000A&#39;</span> <span class="p">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">store</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">toTransactionPromise</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">transaction</span><span class="p">);</span>&#10;<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">e</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Obtener datos de un store&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">,</span> <span class="s1">&#39;readonly&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">transaction</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">store</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">toTransactionPromise</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">transaction</span><span class="p">);</span>&#10;<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">e</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Obtener datos de un store por índice&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">,</span> <span class="s1">&#39;readonly&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">transaction</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">store</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="s1">&#39;dni&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">index</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;00000000A&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">toTransactionPromise</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">transaction</span><span class="p">);</span>&#10;<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">e</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Modificar datos&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">,</span> <span class="s1">&#39;readwrite&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">transaction</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">item</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;picodotdev&#39;</span><span class="p">,</span> <span class="nx">dni</span><span class="o">:</span> <span class="s1">&#39;11111111A&#39;</span> <span class="p">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">store</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">toTransactionPromise</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">transaction</span><span class="p">);</span>&#10;<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">e</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Eliminar datos&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">database</span><span class="p">.</span><span class="nx">transaction</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">,</span> <span class="s1">&#39;readwrite&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">transaction</span><span class="p">.</span><span class="nx">objectStore</span><span class="p">(</span><span class="s1">&#39;store&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">store</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">toTransactionPromise</span><span class="p">(</span><span class="nx">database</span><span class="p">,</span> <span class="nx">transaction</span><span class="p">);</span>&#10;<span class="p">});</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IndexedDB.js</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/07/las-3-formas-de-guardar-datos-en-el-navegador-con-javascript/images/indexeddb_hu2acdc3aecfe002671329bd6251b124cb_35516_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Datos almacenados con IdexedDB"><img src="https://picodotdev.github.io/blog-bitix/2020/07/las-3-formas-de-guardar-datos-en-el-navegador-con-javascript/images/indexeddb_hu2acdc3aecfe002671329bd6251b124cb_35516_650x450_fit_box_3.png" width="650" height="321" alt="Datos almacenados con IdexedDB" title="Datos almacenados con IdexedDB"  class="lozad "></a></p>
<figcaption>Inspección de datos almacenados con IndexedDB</figcaption>
</figure>
</div>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB">Using IndexedDB</a></li>
<li><a href="https://developers.google.com/web/ilt/pwa/working-with-indexeddb">Working with IndexedDB</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore">IDBObjectStore</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBIndex">IDBIndex</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction">IDBTransaction</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor">IDBCursor</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise</a></li>
<li><a href="https://github.com/jakearchibald/idb">IndexedDB with usability (idb)</a></li>
</ul>
]]>
        </content>
        
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/07/que-son-para-que-sirven-formato-y-ejemplos-de-las-expresiones-cron/</id>
        <title>Qué son, para qué sirven, formato y ejemplos de las expresiones cron</title>
        <updated>2020-07-10T16:15:00+02:00</updated>
        <published>2020-07-10T16:15:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/07/que-son-para-que-sirven-formato-y-ejemplos-de-las-expresiones-cron/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Las expresiones <em>cron</em> son el equivalente de expresiones regulares para seleccionar fechas, instantes de tiempo o periodos. Normalmente se utilizan para <a href="https://picodotdev.github.io/blog-bitix/2020/07/tareas-programadas-de-forma-periodica-con-quartz-y-spring-en-java/">planificar la ejecución de tareas automatizadas en librerías como Spring o Quartz</a> o <em>cron</em> de <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> en los momentos seleccionados llegando a la precisión del segundo. Algunas expresiones de fechas pueden ser sencillas como a las 10:15 AM de todos los días o tan complejas como a las 10:15 de cada tercer viernes de cada mes.</p>
<p>Los propósitos de planificar tareas con expresiones <em>cron</em> son ejecutar procesos automatizados, por ejemplo enviar un correo electrónico a un determinada hora de cada día o generar un informe a las 3:00 de la noche de cada viernes.</p>
<h3 id="formato-y-posibles-valores-en-cada-campo">Formato y posibles valores en cada campo</h3>
<p>El formato de las expresiones <em>cron</em> se compone de varios campos separados por un espacios.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">second minute hour day-of-month month day-of-week [year]&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>formato-cron.txt</span>
    </div>
</div>
<p>Según el campo hay varios valores posibles. En los valores numéricos de <em>day-of-week</em> los días empiezan por domingo, el valor 1 es domingo, el lunes es 2 y el 7 es el sábado.</p>
<table class="table">
   <thead class="table-light">
       <th>Campo</th>
       <th>Requerido</th>
       <th>Valores permitidos</th>
       <th>Caracteres especiales permitidos</th>
   </thead>
   <tbody>
       <tr>
           <td>Seconds</td>
           <td>Sí</td>
           <td>0-59</td>
           <td>, - * /</td>
       </tr>
       <tr>
           <td>Minutes</td>
           <td>Sí</td>
           <td>0-59</td>
           <td>, - * /</td>
       </tr>
       <tr>
           <td>Hours</td>
           <td>Sí</td>
           <td>0-23</td>
           <td>, - * /</td>
       </tr>
       <tr>
           <td>Day of month</td>
           <td>Sí</td>
           <td>1-31</td>
           <td>, - * / L W</td>
       </tr>
       <tr>
           <td>Month</td>
           <td>Sí</td>
           <td>0-11 o JAN-DEC</td>
           <td>, - * /</td>
       </tr>
       <tr>
           <td>Day of week</td>
           <td>Sí</td>
           <td>1-7 o SUN-SAT</td>
           <td>, - * ? / L #</td>
       </tr>
       <tr>
           <td>Year</td>
           <td>No</td>
           <td>vacío o 1970-2099</td>
           <td>, - * /</td>
       </tr>
   </tbody>
</table>
<p>Los significados de los valores son:</p>
<ul>
<li><code>*</code> (todos): es usado para seleccionar cada unidad de tiempo. Por ejemplo, <em>*</em> en el campo minuto significa cada minuto.</li>
<li><code>?</code> (cualquiera): es utilizando en los campos <em>day-of-month</em> y <em>day-of -week</em> para denotar un valor arbitrario. Por ejemplo, si se quiere seleccionar las fechas de <em>el quinto día de cada mes</em> independientemente del día de la semana, entonces se especifica un <em>?</em> en el campo <em>day-of-week</em>.</li>
<li><code>–</code> (rango): es usado para seleccionar rangos de valores. Por ejemplo, <em>7-11</em> en el campo <em>hour</em> significa entre las 7 y las 11.</li>
<li><code>,</code> (valores): es usado para especificar varios valores. Por ejemplo, <em>MON,WED,FRI</em> en el campo <em>day-of-week</em> significa el lunes, miércoles y viernes.</li>
<li><code>/</code> (incrementos): es usado para especificar valores en incrementos. Por ejemplo, el valor <em>5/15</em> en el campo <em>minute</em> significa en el minuto 5 y con incrementos de 15 minutos siendo los minutos de cada hora seleccionados 5, 20, 35 y 50.</li>
<li><code>L</code> (último): tiene diferentes significados según el campo en el que se usa. Por ejemplo, si es aplicado al campo <em>day-of-month</em>, entonces significa el último día de cada mes, el día 31 para enero o anterior en otros meses con menos días. Puede usarse con un desplazamiento como <em>L-3</em>, esto significa <em>3 días antes del último día del mes</em>. En el campo <em>day-of-week</em> significa el <em>último día de la semana</em>. También puede usarse con otro valor en el campo <em>day-of-week</em>, como <em>6L</em> lo que significa el <em>último viernes</em> del mes.</li>
<li><code>W</code> (día entre semana): es usado para especificar en día entre semana (de lunes a viernes) más cercano dado un día del mes. Por ejemplo, si se especifica <em>10W</em> en el campo <em>day-of-month</em> significa <em>el día entre semana más cercano al 10 de cada mes</em>. De modo que si el día 10 del més es sábado se selecciona el viernes 9 y si el día 10 es domingo se selecciona el lunes 11. Si se especifica 1W en en <em>day-of-month</em> y el día 1 es sábado, entonces se selecciona el dia lunes 3, esto es, no se salta al mes anterior.</li>
<li><code>#</code> (ocurrencia): es usado para especificar el cardinal de la ocurrencia de una semana del mes. Por ejemplo, <em>el tercer viernes del mes</em> se indica con <em>6#3</em> en el campo <em>day-of-week</em>.</li>
</ul>
<p>Los valores <code>/</code>, <code>L</code>, <code>W</code> y <code>#</code> son caracteres no estándares, para comprobar si están soportados hay que consultar la documentación de la implementación de las expresiones <em>cron</em>, varía según la herramienta.</p>
<h3 id="ejemplos-y-generador-de-expresiones-cron">Ejemplos y generador de expresiones cron</h3>
<p>Las expresiones <em>cron</em> complejas son dífíciles de crear, para asegurar que la expresión cron está bien construida o para generarlas de forma sencilla hay alguna utilidad en internet, una de ellas es este <a href="https://freeformatter.com/cron-expression-generator-quartz.html">generador y explicador de expresiones cron</a>.</p>
<p>Algunos ejemplos de expresiones con su explicación son los siguientes.</p>
<table class="table">
   <thead class="table-light">
       <th width="300px">Expresión cron</th>
       <th>Explicación</th>
   </thead>
   <tbody>
       <tr>
           <td>0 0 12 * * ?</td>
           <td>Cada día a las 12:00 PM (12 del medio día)</td>
       </tr>
       <tr>
           <td>0 15 10 * * *</td>
           <td>Cada día a las 10:15 AM</td>
       </tr>
       <tr>
           <td>0 15 10 * * ? 2005</td>
           <td>Cada día a las 10:15 AM durante el año 2005</td>
       </tr>
       <tr>
           <td>0 * 14 * * ?</td>
           <td>Cada minuto de la hora 14, de cada día</td>
       </tr>
       <tr>
           <td>0 0/5 14 * * ?</td>
           <td>Cada 5 minutos de la hora 14 empezando en el minuto 0, de cada día</td>
       </tr>
       <tr>
           <td>0 0/5 14,18 * * ?</td>
           <td>Cada 5 minutos de las horas 14 y 18 empezando en el minuto 0, de cada día</td>
       </tr>
       <tr>
           <td>0 0-5 14 * * ?</td>
           <td>Cada minuto entre 0 y 5 de la hora 14, de cada día</td>
       </tr>
       <tr>
           <td>0 10,44 14 ? 3 WED</td>
           <td>A las 14:10 y 14:44 de cada miércoles de marzo</td>
       </tr>
       <tr>
           <td>0 15 10 ? * MON-FRI</td>
           <td>A las 10:15 AM de cada lunes, martes, miércoles, jueves y viernes</td>
       </tr>
       <tr>
           <td>0 15 10 15 * ? </td>
           <td>A las 10:15 AM del día 15 de cada mes</td>
       </tr>
       <tr>
           <td>0 15 10 L * ?</td>
           <td>A las 10:15 AM del último día del mes</td>
       </tr>
       <tr>
           <td>0 15 10 ? * 6L</td>
           <td>A las 10:15 AM del último viernes del mes</td>
       </tr>
       <tr>
           <td>0 15 10 ? * 6L 2002-2005</td>
           <td>A las 10:15 AM de cada viernes del mes de los años 2002, 2003, 2004 y 2005</td>
       </tr>
       <tr>
           <td>0 15 10 ? * 6#3</td>
           <td>A las 10:15 AM del tercer viernes de cada mes</td>
       </tr>
       <tr>
           <td>0 0 12 1/5 * ?</td>
           <td>A las 12 PM (12 del medio día) cada cinco días del mes, empezando desde el primer día del mes</td>
       </tr>
       <tr>
           <td>0 11 11 11 11 ?</td>
           <td>Cada 11 de noviembre a las 11:11 AM</td>
       </tr>
   </tbody>
</table>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm">Cron Expressions</a></li>
<li><a href="https://en.wikipedia.org/wiki/Cron#CRON_expression">Cron expression</a></li>
<li><a href="https://riptutorial.com/spring/example/21209/cron-expression">Cron expression</a></li>
<li><a href="http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html">Cron Trigger Tutorial</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/07/las-diferencias-entre-gnu-linux-bsd-y-sus-distribuciones/</id>
        <title>Las diferencias entre GNU/Linux, BSD y sus distribuciones</title>
        <updated>2020-07-05T11:00:00+02:00</updated>
        <published>2020-07-05T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/07/las-diferencias-entre-gnu-linux-bsd-y-sus-distribuciones/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las distribuciones BSD tienen aún menor cuota de uso que las distribuciones GNU/Linux pero al igual que estas tiene una licencia de software libre aún más permisiva que las GNU/Linux y también se basan en la filosofía UNIX. Pero también tienen diferencias importantes en varios aspectos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bsd.svg" width="250" height="116" alt="BSD" title="BSD"  class=""></p>
</div>
<p>De los sistemas operativos <a href="https://www.microsoft.com/es-es/windows/">Windows</a> de <a href="https://www.microsoft.com/">Microsoft</a> es el más popular en el uso en empresas y en los ordenadores personales con una cuota de uso del 90% prácticamente de monopolio. La siguiente opción más popular a nivel de usuario es <a href="https://www.apple.com/macos/">macOS</a> de <a href="https://www.apple.com/">Apple</a> como única opción de sus equipos portátiles y de escritorio, macOS tiene una cuota de uso de un 7%. Con una cota de uso en el escritorio de apenas el el 3% la siguiente opción es alguna de las distribuciones <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>, tiene una cuota de uso tan pequeña porque prácticamente todos los equipos vendidos en grandes superficies incorporan Windows preinstalado, para usar GNU/Linux son los usuarios los que de forma expresa han de instalar GNU/Linux reemplazando a Windows aunque en los últimos años hay varias marcas que ofrecen GNU/Linux como opción entre ellas <a href="https://slimbook.es/">Slimbook</a> y <a href="https://www.vantpc.es/">Vant</a>. En el lado del servidor GNU/Linux si tiene una mucha mayor cuota de uso por encima incluso de Windows, muchos de los servicios ofrecidos por las compañías más importantes usan alguna distribución de GNU/Linux como sistema operativo. Las distribuciones empresariales GNU/Linux más populares son <a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux">RHEL</a> de <a href="https://www.redhat.com/es">RedHat</a>, <a href="https://www.ubuntu.com/">Ubuntu</a> de <a href="https://www.canonical.com/">Canonical</a> o <a href="https://www.suse.com/es-es/products/server/">SLES</a> de <a href="https://www.suse.com/es-es/">SUSE</a>.</p>
<p>Otra familia de sistemas operativos basados en UNIX al igual que GNU/Linux son las distribuciones BSD. Si la cuota de uso a nivel personal de GNU/Linux es muy reducida la de los sistemas operativos BSD es aún mucho más reducida, no llega al 0,5%, teniendo algo de mayor presencia como sistema de servidores con una comunidad de usuarios pequeña pero al igual que la de GNU/Linux activa que comparte y colabora en el desarrollo.</p>
<p>Los parecidos en las distribuciones GNU/Linux y BSD es que ambos proyectos están basados en UNIX, implementan el estándar <a href="https://es.wikipedia.org/wiki/POSIX">POSIX</a> que define una interfaz con el sistema operativo para permitir que las aplicaciones sean portables entre sistemas y están desarrollados como proyectos de código abierto en los que participan organizaciones, personas como contribuidores apoyados por el interés de algunas organizaciones y personas individuales sin intereses comerciales, aún así tienen notables diferencias en varios apartados importantes. Las diferencias entre las distribuciones GNU/Linux y BSD están en la licencia que usan, en su modelo de desarrollo, en la ya comentada cuota de uso o en aspectos importantes para los usuarios como el soporte del hardware.</p>
<p>Aunque solo para representar a los proyectos una diferencia está en su mascota, en Linux es <em>Tux</em>, en BSD es <em>Beastie</em> y en GNU es un ñu.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" data-gallery="data-gallery" title="Tux la mascota de Linux"><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="300" height="200" alt="Tux la mascota de Linux" title="Tux la mascota de Linux"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/beastie.png" data-gallery="data-gallery" title="Bestie la mascota de BSD"><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/beastie.png" width="300" height="200" alt="Bestie la mascota de BSD" title="Bestie la mascota de BSD"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" data-gallery="data-gallery" title="GNU la mascota de GNU"><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="300" height="200" alt="GNU la mascota de GNU" title="GNU la mascota de GNU"  class="lozad "></a></p>
<figcaption>Mascotas de Linux, BSD y GNU</figcaption>
</figure>
</div>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="diferencias-en-el-modelo-de-desarrollo">Diferencias en el modelo de desarrollo</h3>
<p>Lo que conocemos como Linux es simplemente el núcleo del sistema operativo de las distribuciones GNU/Linux. Las distribuciones GNU/Linux están compuestas por otra multitud de programas de usuario que forman el sistema operativo completo y lo hacen usable, estos programas son muchos de los programados bajo los proyectos de la fundación GNU. Este es el motivo de que las distribuciones GNU/Linux incluyan los términos de ambos proyectos. Las distribuciones GNU/Linux son una recopilación de programas de terceras partes, todos estos programas GNU y no GNU incluidos en los sistemas GNU/Linux están desarrollados por diferentes programadores ajenos a Linux y los creadores de la distribución. Los creadores de las distribuciones GNU/Linux son los encargados de juntar los diferentes programas de cada fuente y empaquetarlas como un sistema usable, estable y libre de errores.</p>
<p>Las distribuciones BSD son muy diferentes en este aspecto ya que los desarrolladores del núcleo son los mismos que desarrollan los programas de usuario que hacen el sistema operativo completo.</p>
<p>Por otro lado, la arquitectura del sistema base y las aplicaciones de usuario tienen diferentes enfoques. En GNU/Linux hay dos variaciones usar una colección fija de paquetes donde solo se incorporan modificaciones de seguridad o un modelo en constante actualización o <em>rolling release</em>. Ubuntu y Debian son ejemplos de distribuciones de colecciones fijas en los ciclos de vida de las versiones y Arch Linux y <a href="https://voidlinux.org/">Void Linux</a> son ejemplos que están en constante actualización.</p>
<p>Las distribuciones BSD siguen un enfoque en el que el sistema base es fijo pero las aplicaciones de usuario se actualizan con nuevas versiones. El sistema base es pequeño, estable y solo incorpora cambios siguiendo un calendario de publicaciones. Los programas de usuario como <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a>, <a href="https://www.libreoffice.org/">LibreOffice</a> o el entorno de escritorio utilizan la última versión disponible de cada proyecto. Esto permite a las distribuciones BSD usar las últimas versiones sin comprometer la estabilidad del sistema al haber errores en el núcleo del sistema. Algunas distribuciones GNU/Linux proporcionan un modelo similar a las BSD como <a href="https://silverblue.fedoraproject.org/">Fedora Silverblue</a> con una base estable y aplicaciones de usuario actualizadas.</p>
<p>Esta diferencia en el modelo de desarrollo del sistema base e independiente de las aplicaciones hace que en BSD las aplicaciones se instalen de forma independiente a los paquetes del sistema. Los <em>ports</em> son la colección de paquetes con las aplicaciones instalables en los sistemas BSD.</p>
<h3 id="diferencias-en-la-licencia">Diferencias en la licencia</h3>
<p>Otro aspecto importante con diferencias está en la licencia del código fuente. Mientras que Linux usa una <a href="https://www.gnu.org/licenses/gpl-3.0.html">licencia <em>GNU General Public License</em> o GPL</a> los sistemas BSD usan una de las diferentes <a href="https://en.wikipedia.org/wiki/BSD_licenses">licencias BSD</a> que tiene diferentes versiones según su número de clausulas de cuatro a cero en cuyo caso es considerado software de dominio público. Ambas son licencias consideradas como software libre.</p>
<p>La diferencia entre la licencia GPL y BSD está en que la BSD es más permisiva, la licencia GPL impone restricciones a los programas distribuidos requiriendo que el código fuente del software también sea entregado y obliga a que el código sea compartido. Por el contrario, la licencia BSD no impone el requerimiento a los programas de que el código fuente sea entregado en su forma original del programa compilado en formato binario. En algunos casos la licencia BSD es más atractiva para algunas empresas que pueden usar su software sin necesidad de tener que distribuir el código fuente del software en el que se basan ni sus modificaciones si han hecho alguna lo que les permite mantener su propiedad intelectual oculta a sus competidores.</p>
<p>Las licencias BSD no imponen unos requerimientos éticos y morales, la licencia GPL usada por Linux tiene un mayor activismo para promover y proteger el software libre. En BSD se centran más en el desarrollo que en el activismo del software libre y de código abierto.</p>
<p>En los últimos años el soporte de hardware en Linux ha mejorado notablemente y salvo hardware muy específico o raro lo normal es que todo funcione sin  problemas importantes. El soporte de los fabricantes se centra más hacer compatible su hardware con Windows o macOS que en Linux y es mas raro aún que ofrezcan soporte para algún BSD. De modo que el soporte de hardware en los BSD es más limitado.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/02/licencias-de-software-libre-y-diferencias-con-software-privativo-y-de-codigo-abierto/">Licencias de software libre y diferencias con software privativo y de código abierto</a></li>
</ul>
<h3 id="distribuciones-más-importantes-bsd">Distribuciones más importantes BSD</h3>
<p>Al igual que en GNU/Linux ha varias distribuciones BSD con algunos propósitos más prioritarios en cada una de ellas. Soportan múltiples arquitecturas de procesadores incluyendo x86, ARM, MIPS, PowerPC y UltraSPARC. Estas son algunas de las distribuciones BSD más conocidas:</p>
<ul>
<li><a href="https://www.freebsd.org/es/">FreeBSD</a>: es el BSD más popular, con el objetivo de proporcionar alto rendimiento y facilidad de uso. Soporta múltiples <a href="https://www.freebsd.org/platforms/">plataformas de 32 y 64 bits</a>.</li>
<li><a href="https://www.openbsd.org/">OpenBSD</a>: esta distribución está diseñada para la máxima seguridad realizando modificaciones de forma proactiva que otros vendedores no son capaces de hacer e integrando  criptografía.</li>
<li><a href="https://www.netbsd.org/">NetBSD</a>: uno de sus principios es hacer el sistema operativo altamente portable, valores por defecto seguros, calidad de código, corrección y adhesión a estándares.</li>
<li><a href="https://www.midnightbsd.org/">MidnightBSD</a>: es una distribución BSD orientada al escritorio que incluye las aplicaciones de usuario básicas como navegador, correo electrónico, procesador de textos, juegos y muchos más.</li>
<li><a href="https://nomadbsd.org/">NomadBSD</a>: es una distribución que funciona desde un medio vivo orientada a uso con entorno de escritorio.</li>
</ul>
<p>Hay otros sistemas BSD notables:</p>
<ul>
<li><a href="https://www.dragonflybsd.org/">DragonFly BSD</a>: sigue un camino diferente al de las anteriores BSD. Algunas características diferenciadoras son su sistema de archivos de alto rendimiento HAMMER, kernels virtuales, alto rendimiento en múltiples procesadores con SMP con poca contención.</li>
<li><a href="https://en.wikipedia.org/wiki/Darwin_%28operating_system%29">Darwin</a> / Mac OS X: los sistema de Apple con Mac OS X están basados en BSD.</li>
<li><a href="https://es.wikipedia.org/wiki/PlayStation_4">PlayStation 4</a>: el sistema operativo Orbis de esta consola está basado en FreeBSD 9.</li>
</ul>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/freebsd.svg" width="150" height="150" alt="FreeBSD" title="FreeBSD"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/openbsd.svg" width="150" height="150" alt="OpenBSD" title="OpenBSD"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/netbsd.svg" width="150" height="150" alt="NetBSD" title="NetBSD"  class="lozad "></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/midnightbsd.svg" width="150" height="150" alt="MidnightBSD" title="MidnightBSD"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/dragonflybsd.svg" width="150" height="150" alt="DragonFly" title="DragonFly"  class="lozad "></p>
<figcaption>Varias de las distribuciones más importantes de BSD</figcaption>
</figure>
</div>
<p>La publicación digital <a href="https://bsdmag.org/">BSD Magazine</a> gratuita bajo suscripción se publica de forma mensual con varios artículos técnicos dedicados a las diferentes distribuciones BSD. Permite adentrarse en el mundo de la distribuciones BSD. Más información sobre las distribuciones en la Wikipedia.</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/FreeBSD">Wikipedia FreeBSD</a></li>
<li><a href="https://en.wikipedia.org/wiki/OpenBSD">Wikipedia OpenBSD</a></li>
<li><a href="https://en.wikipedia.org/wiki/NetBSD">Wikipedia NetBSD</a></li>
<li><a href="https://en.wikipedia.org/wiki/DragonFly_BSD">Wikipedia DragonFly BSD</a></li>
<li><a href="https://en.wikipedia.org/wiki/MacOS">Wikipedia macOS</a></li>
</ul>
<h3 id="razones-por-las-que-usar-y-no-usar-una-distribución-bsd">Razones por las que usar y no usar una distribución BSD</h3>
<p>Entre las razones para usar BSD están:</p>
<ul>
<li>Posibilidad de usar características de Solaris como el avanzado sistema de archivos <a href="https://en.wikipedia.org/wiki/OpenZFS">ZFS</a> o <a href="https://en.wikipedia.org/wiki/DTrace">DTrace</a>.</li>
<li>La comunidad BSD se centra más en la tecnología que en los aspectos de licencia y políticos del software libre.</li>
<li>Estabilidad y sistema bien estructurado.</li>
<li>Alto rendimiento y gran desempeño en tareas de red.</li>
<li>Menos fragmentación en distribuciones como ocurren en Linux donde algunas no tiene objetivos claros diferenciadores.</li>
<li>La licencia BSD.</li>
<li>ZFS.</li>
</ul>
<p>Algunas de las razones por las que no usar BSD están:</p>
<ul>
<li>Falta de soporte hardware.</li>
<li>No hay soporte para suspender y continuar en portátiles.</li>
<li>Ausencia en móviles y algunas funcionalidades inexistentes.</li>
<li>Más fácil de usa Mac OS X que FreeBSD.</li>
<li><em>ports</em> rotos.</li>
<li>Menos información y ayuda en internet que de GNU/Linux.</li>
</ul>
<h3 id="distribuciones-más-importantes-de-gnulinux">Distribuciones más importantes de GNU/Linux</h3>
<p>Las distribuciones GNU/Linux son más numerosas si bien es cierto que muchas de ellas no tienen un objetivo que las diferencie claramente de otras. Algunas importantes son:</p>
<ul>
<li><a href="https://fedoraproject.org/">Fedora</a>, <a href="https://www.centos.org/">CentOS</a>, RHEL.</li>
<li>Ubuntu, <a href="https://www.debian.org/">Debian</a>, <a href="https://www.linuxmint.com/">Linux Mint</a>, <a href="https://elementary.io/es/">elementary OS</a>.</li>
<li><a href="https://www.opensuse.org/">openSUSE</a>.</li>
<li><a href="https://www.archlinux.org/">Arch Linux</a>.</li>
</ul>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ubuntu.svg" width="150" height="150" alt="Ubuntu" title="Ubuntu"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/opensuse.svg" width="150" height="150" alt="openSUSE" title="openSUSE"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/debian.svg" width="150" height="150" alt="Debian" title="Debian"  class="lozad "></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="150" height="150" alt="Arch Linux" title="Arch Linux"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/fedora.svg" width="150" height="150" alt="Fedora" title="Fedora"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/elementary.svg" width="150" height="150" alt="elementary OS" title="elementary OS"  class="lozad "></p>
</figure>
</div>
<p>He escrito algunos artículos para <a href="https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/">elegir la mejor distribución GNU/Linux</a> según las necesidades del usuario o uso. <a href="https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-la-distribucion-ubuntu-de-gnu-linux-paso-a-paso-desde-cero/">Cómo descargar e instalar Ubuntu paso paso desde cero</a>, una de las distribuciones más populares y recomendadas para los usuarios recién llegados a GNU/Linux y que muchos usuarios con experiencia siguen usando. <a href="https://picodotdev.github.io/blog-bitix/2020/02/las-aplicaciones-integradas-del-entorno-de-escritorio-gnome/">Las aplicaciones del entorno de escritorio GNOME</a> con las que los usuarios interaccionan con la computadora o <a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/">la distribución Fedora Silverblue</a> con una aproximación diferente a la mayoría de las distribuciones con un sistema inmutable y basado en contenedores que le dota de mayor fiabilidad al realizar actualizaciones del sistema que en ciertos aspectos se parece a las distribuciones BSD al separar el sistema base de las aplicaciones.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.howtogeek.com/190773/htg-explains-whats-the-difference-between-linux-and-bsd/">What’s the Difference Between Linux and BSD?</a></li>
<li><a href="https://fossbytes.com/difference-linux-bsd-open-source/">Difference Between Linux And BSD | Open Source Operating Systems</a></li>
<li><a href="https://en.wikipedia.org/wiki/BSD_licenses">BSD licenses</a></li>
<li><a href="https://distrowatch.com/weekly.php?issue=20200622#qa">BSD versus Linux distribution development</a></li>
<li><a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=MTExMDg">Why Should You Use FreeBSD? Here’s Some Reasons</a></li>
<li><a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=MTExMjE">Reasons Why You Should Not Use FreeBSD</a></li>
<li><a href="https://www.freebsd.org/ports/">FreeBSD Ports</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/07/tareas-programadas-de-forma-periodica-con-quartz-y-spring-en-java/</id>
        <title>Tareas programadas de forma periódica con Quartz y Spring en Java</title>
        <updated>2020-07-03T11:30:00+02:00</updated>
        <published>2020-07-03T11:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/07/tareas-programadas-de-forma-periodica-con-quartz-y-spring-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En las aplicaciones web basadas en el protocolo HTTP la petición al servidor es el desencadenante de la ejecución de la acción que le da respuesta. Algunas acciones no dependen de la solicitud de un usuario o de la recepción de un mensaje sino que se han de ejecutar de forma periódica cada cierto tiempo o de forma planificada en tiempos determinados. Por ejemplo, una tarea que necesite ejecutarse todos los días a las 3 de la mañana o cada 5 minutos.</p>
<p><a href="https://quartz-scheduler.org/">Quartz</a> es una de las librerías en la plataforma Java que proporciona la funcionalidad de planificador de tareas, permite ejecutar tareas de forma periódica o de forma planificada en determinados tiempos utilizando <a href="https://picodotdev.github.io/blog-bitix/2020/07/que-son-para-que-sirven-formato-y-ejemplos-de-las-expresiones-cron/">expresiones cron</a>.</p>
<p><a href="https://spring.io/">Spring</a> también integra una solución sencilla para ejecutar tareas de forma programada disponible para las aplicaciones que usen <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> sin necesidad de dependencias adicionales.</p>
<p>El propio JDK desde la versión 5 incorpora varias clases para ejecutar tareas programadas sin ninguna dependencia en el proyecto ni siquiera de Spring.</p>
<p>La programación de las tareas también se puede realizar a nivel de sistema operativo. En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> con la utilidad <a href="https://wiki.archlinux.org/index.php/Cron">cron</a> y con <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a> se puede programar tareas. Sin embargo, realizar la programación a nivel de sistema operativo se crean nuevos procesos y la configuración está externalizada de la aplicación. Utilizar Quartz, Spring o las clases del JDK tiene la ventaja de que la configuración de la programación de las tareas está más en el ámbito de la programación que en la de configuración de sistemas, el primer caso los cambios los hace el programador, en el segundo los hace la persona a cargo de los sistemas.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="tareas-programadas-con-quartz-y-spring-boot">Tareas programadas con Quartz y Spring Boot</h3>
<p>Entre las muchas itegraciones que ofrece Spring una de ellas es para Quartz. Las clases importantes que ofrece Quartz son:</p>
<ul>
<li><a href="https://www.quartz-scheduler.org/api/2.3.0/org/quartz/Job.html">Job</a>: es la tarea a ejecutar.</li>
<li><a href="https://www.quartz-scheduler.org/api/2.3.0/org/quartz/JobDetail.html">JobDetail</a>: es una instancia de una tarea.</li>
<li><a href="https://www.quartz-scheduler.org/api/2.3.0/org/quartz/Trigger.html">Trigger</a>: es el disparador que determina los momentos de ejecución de los <em>Jobs</em>, cuando una tarea se ha de ejecutar se crea una instancia de <em>JobDetail</em> de la tarea a ejecutar.</li>
<li><a href="https://www.quartz-scheduler.org/api/2.3.0/org/quartz/JobListener.html">JobListener</a>: recibe eventos sobre las ejecuciones de las tareas.</li>
<li><a href="https://www.quartz-scheduler.org/api/2.3.0/org/quartz/JobBuilder.html">JobBuilder</a>: una clase que implementa el patrón factoría que facilita la definición de las clases anteriores.</li>
<li><a href="https://www.quartz-scheduler.org/api/2.3.0/org/quartz/spi/JobStore.html">JobStore</a>: una clase que permite guardar las definiciones de las tareas en la base de datos.</li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/quartz/JobDetailFactoryBean.html">JobDetailFactoryBean</a>, <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/quartz/SimpleTriggerFactoryBean.html">SimpleTriggerFactoryBean</a>: clases alternativas proporcionadas por Spring para la configuración de las tareas, por ejemplo para añadir <em>listeners</em>. Los <em>listeners</em> permiten recibir notificaciones de los eventos de ejecución de las tareas, por ejemplo cuando una tarea se va a ejecutar y cuando se ha ejecutado. En el ejemplo e <em>listeners</em> emite unas trazas en la salida.</li>
</ul>
<p>Esta es la configuración para definir los <em>jobs</em> con Spring, los <em>triggers</em> que disparan los <em>jobs</em> cada cierto tiempo con una expresión <em>cron</em> y los <em>listeners</em> que reciben los eventos de ejecución de los <em>jobs</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdec.blogbitix.quartzspring</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.CronScheduleBuilder</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.JobDetail</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.JobListener</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.SchedulerException</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.SimpleScheduleBuilder</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.Trigger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.TriggerBuilder</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Qualifier</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.CommandLineRunner</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.quartz.SchedulerFactoryBeanCustomizer</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.context.event.ApplicationStartedEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationContext</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationListener</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.quartz.JobBuilder</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.event.ContextRefreshedEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.event.ContextStartedEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.scheduling.annotation.EnableScheduling</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.concurrent.ExecutionException</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.concurrent.Executors</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.concurrent.ScheduledExecutorService</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.concurrent.TimeUnit</span><span class="o">;</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableScheduling</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">ApplicationListener</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;QuartzJob&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">JobDetail</span> <span class="nf">quartzJob</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">JobBuilder</span><span class="o">.</span><span class="na">newJob</span><span class="o">(</span><span class="n">QuartzJob</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withIdentity</span><span class="o">(</span><span class="s">&#34;QuartzJob&#34;</span><span class="o">,</span> <span class="s">&#34;QuartzJobs&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">storeDurably</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Trigger</span> <span class="nf">quartzTrigger</span><span class="o">(</span><span class="nd">@Qualifier</span><span class="o">(</span><span class="s">&#34;QuartzJob&#34;</span><span class="o">)</span> <span class="n">JobDetail</span> <span class="n">job</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">TriggerBuilder</span><span class="o">.</span><span class="na">newTrigger</span><span class="o">().</span><span class="na">forJob</span><span class="o">(</span><span class="n">job</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withIdentity</span><span class="o">(</span><span class="s">&#34;QuartzTrigger&#34;</span><span class="o">,</span> <span class="s">&#34;QuartzJobs&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withDescription</span><span class="o">(</span><span class="s">&#34;Quartz trigger&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withSchedule</span><span class="o">(</span><span class="n">SimpleScheduleBuilder</span><span class="o">.</span><span class="na">simpleSchedule</span><span class="o">().</span><span class="na">repeatForever</span><span class="o">().</span><span class="na">withIntervalInSeconds</span><span class="o">(</span><span class="n">10</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Trigger</span> <span class="nf">cronQuartzTrigger</span><span class="o">(</span><span class="nd">@Qualifier</span><span class="o">(</span><span class="s">&#34;QuartzJob&#34;</span><span class="o">)</span> <span class="n">JobDetail</span> <span class="n">job</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">TriggerBuilder</span><span class="o">.</span><span class="na">newTrigger</span><span class="o">().</span><span class="na">forJob</span><span class="o">(</span><span class="n">job</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withIdentity</span><span class="o">(</span><span class="s">&#34;CronQuartzTrigger&#34;</span><span class="o">,</span> <span class="s">&#34;QuartzJobs&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withDescription</span><span class="o">(</span><span class="s">&#34;Cron Quartz trigger&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">withSchedule</span><span class="o">(</span><span class="n">CronScheduleBuilder</span><span class="o">.</span><span class="na">cronSchedule</span><span class="o">(</span><span class="s">&#34;0 * * * * ?&#34;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;QuartzJobListener&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">JobListener</span> <span class="nf">quartzListener</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">QuartzJobListener</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">SchedulerFactoryBeanCustomizer</span> <span class="nf">schedulerConfiguration</span><span class="o">(</span><span class="nd">@Qualifier</span><span class="o">(</span><span class="s">&#34;QuartzJobListener&#34;</span><span class="o">)</span> <span class="n">JobListener</span> <span class="n">listener</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">bean</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">bean</span><span class="o">.</span><span class="na">setGlobalJobListeners</span><span class="o">(</span><span class="n">listener</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-1.java</span>
    </div>
</div>
<p>Para usar Quartz con Spring Boot hay que incluir su dependencia en el archivo de construcción del proyecto.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;	<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;	<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdec.blogbitix.quartzspring&#39;</span>&#10;<span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.0&#39;</span>&#10;&#10;<span class="n">java</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="n">JavaVersion</span><span class="o">.</span><span class="na">VERSION_11</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdec.blogbitix.quartzspring.Main&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.3.1.RELEASE&#39;</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-quartz&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-api:2.13.3&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.apache.logging.log4j:log4j:2.13.3&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="s1">&#39;org.apache.logging.log4j:log4j-core:2.13.3&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.11.1&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtimeOnly</span> <span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.1&#39;</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Con Quartz no existe la opción de planificar una tarea pasado un tiempo desde la última ejecución. Solo se pueden planificar los <em>Jobs</em> en tiempos regulares, esto provoca que si la tarea tarda en ejecutarse más que el intervalo entre ejecuciones haya dos instancias de la tarea en ejecución de forma paralela. Hay dos opciones para evitar ejecuciones paralelas: una de ellas es utilizar la anotación <a href="https://www.quartz-scheduler.org/api/2.3.0/org/quartz/DisallowConcurrentExecution.html">DisallowConcurrentExecution</a>, la otra forma es planificar otra ejecución de la tarea cuando la anterior ejecución haya terminando proporcionando una implementación de JobListener.</p>
<p>En las clases de las tareas se pueden inyectar <em>beans</em> de Spring con la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/Autowired.html">@Autowired</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdec.blogbitix.quartzspring</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.Job</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.JobExecutionContext</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.JobExecutionException</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">QuartzJob</span> <span class="kd">implements</span> <span class="n">Job</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">QuartzJob</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="n">JobExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">JobExecutionException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;Job: QuartzJob&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>QuartzJob.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdec.blogbitix.quartzspring</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.JobExecutionContext</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.JobExecutionException</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.quartz.JobListener</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">QuartzJobListener</span> <span class="kd">implements</span> <span class="n">JobListener</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">QuartzJobListener</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;QuartzJobListener&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">jobToBeExecuted</span><span class="o">(</span><span class="n">JobExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;QuartzJobListener: jobToBeExecuted. Job: {}, Trigger: {}&#34;</span><span class="o">,</span> <span class="n">context</span><span class="o">.</span><span class="na">getJobDetail</span><span class="o">().</span><span class="na">getKey</span><span class="o">().</span><span class="na">getName</span><span class="o">(),</span> <span class="n">context</span><span class="o">.</span><span class="na">getTrigger</span><span class="o">().</span><span class="na">getKey</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">jobExecutionVetoed</span><span class="o">(</span><span class="n">JobExecutionContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;QuartzJobListener: jobExecutionVetoed. Job: {}, Trigger: {}&#34;</span><span class="o">,</span> <span class="n">context</span><span class="o">.</span><span class="na">getJobDetail</span><span class="o">().</span><span class="na">getKey</span><span class="o">().</span><span class="na">getName</span><span class="o">(),</span> <span class="n">context</span><span class="o">.</span><span class="na">getTrigger</span><span class="o">().</span><span class="na">getKey</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">jobWasExecuted</span><span class="o">(</span><span class="n">JobExecutionContext</span> <span class="n">context</span><span class="o">,</span> <span class="n">JobExecutionException</span> <span class="n">jobException</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;QuartzJobListener: jobWasExecuted. Job: {}, Trigger: {}&#34;</span><span class="o">,</span> <span class="n">context</span><span class="o">.</span><span class="na">getJobDetail</span><span class="o">().</span><span class="na">getKey</span><span class="o">().</span><span class="na">getName</span><span class="o">(),</span> <span class="n">context</span><span class="o">.</span><span class="na">getTrigger</span><span class="o">().</span><span class="na">getKey</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>QuartzJobListener.java</span>
    </div>
</div>
<h3 id="tareas-programadas-con-spring">Tareas programadas con Spring</h3>
<p>Las tareas programadas con Spring son una opción sencilla, basta con anotar un método con la anotación <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/annotation/Scheduled.html">@Scheduled</a> e indicar los parámetros de la anotación el mecanismo que dispara la tarea y los periodos de tiempo. Las planificaciones pueden ser:</p>
<ul>
<li><em>initialDelay</em>: las tareas se ejecutan con un retraso desde el inicio de la aplicación.</li>
<li><em>fixedRate</em>: ejecución cierto tiempo fijo e independiente de la duración de la tarea.</li>
<li><em>fixedDelay</em>: con una diferencia de tiempo desde la última ejecución.</li>
<li><em>cron</em>: con una expresión <em>cron</em> que permite planificar los periodos de ejecución de la tarea.</li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdec.blogbitix.quartzspring</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.scheduling.annotation.Scheduled</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SpringJobs</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">SpringJobs</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Scheduled</span><span class="o">(</span><span class="n">fixedRate</span> <span class="o">=</span> <span class="n">2000</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">scheduleJobWithFixedRate</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;SpringJob: scheduleJobWithFixedRate&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Scheduled</span><span class="o">(</span><span class="n">fixedDelay</span> <span class="o">=</span> <span class="n">2000</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">scheduleJobWithDelay</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">2000</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;SpringJob: scheduleJobWithDelay&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Scheduled</span><span class="o">(</span><span class="n">cron</span> <span class="o">=</span> <span class="s">&#34;0 * * * * ?&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">scheduleJobWithCron</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;SpringJob: scheduleJobWithCron&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>springJobs.java</span>
    </div>
</div>
<h3 id="tareas-programadas-con-las-clases-del-jdk">Tareas programadas con las clases del JDK</h3>
<p>Otra tercera forma de ejecutar tareas periódicas es con las clases <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/Executors.html">Executors</a> y <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/ScheduledExecutorService.html">ScheduledExecutorService</a> que están disponibles desde la versión 5 de Java. Proporcionan una funcionalidad similar a las tareas programadas de Spring sin la funcionalidad de expresiones <em>cron</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdec.blogbitix.quartzspring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableScheduling</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="kd">implements</span> <span class="n">ApplicationListener</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">JavaJob</span> <span class="n">javaJob</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">JavaJob</span> <span class="nf">javaJob</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">JavaJob</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onApplicationEvent</span><span class="o">(</span><span class="n">ApplicationEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">event</span> <span class="k">instanceof</span> <span class="n">ApplicationStartedEvent</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ScheduledExecutorService</span> <span class="n">scheduler</span> <span class="o">=</span> <span class="n">Executors</span><span class="o">.</span><span class="na">newScheduledThreadPool</span><span class="o">(</span><span class="n">5</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">scheduler</span><span class="o">.</span><span class="na">scheduleAtFixedRate</span><span class="o">(</span><span class="n">javaJob</span><span class="o">::</span><span class="n">jobWithFixedRate</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">2</span><span class="o">,</span> <span class="n">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">scheduler</span><span class="o">.</span><span class="na">scheduleWithFixedDelay</span><span class="o">(</span><span class="n">javaJob</span><span class="o">::</span><span class="n">jobWithDelay</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">2</span><span class="o">,</span> <span class="n">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-2.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdec.blogbitix.quartzspring</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavaJob</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">JavaJob</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">jobWithFixedRate</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;JavaJob: jobWithFixedRate&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">jobWithDelay</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">2000</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;JavaJob: jobWithDelay&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JavaJob.java</span>
    </div>
</div>
<h3 id="elegir-entre-usar-quartz-usar-spring-o-usar-las-clases-del-jdk">Elegir entre usar Quartz, usar Spring o usar las clases del JDK</h3>
<p>La ventaja de usar las clases del JDK es que ya están incluidas en el JDK y no se necesita incluir ninguna dependencia en el proyecto. Si se usa Spring tampoco se necesitan dependencias adicionales y además proporciona la funcionalidad de expresiones <em>cron</em> que no tienen las clases del JDK. La desventaja de usar el JDK y Spring está en que no tienen todas las opciones de Quartz como la persistencia en la base de datos, la ejecución de tareas que reciban parámetros a modo de contexto o la característica de los <em>listeners</em> que en Spring habría que implementar con alguna otra solución como <a href="https://picodotdev.github.io/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/">usar Guava para publicar y suscribirse a eventos</a>.</p>
<p>Dependiendo de las nacesidades de la aplicación será más adecuado usar las clases del JDK, Spring o Quartz.</p>
<h3 id="ejemplo-de-tareas-programadas-con-quartz-spring-y-las-clases-del-jdk">Ejemplo de tareas programadas con Quartz, Spring y las clases del JDK</h3>
<p>El ejemplo incluye varias tareas definidas con Quartz y con Spring. En las trazas se observan los tiempos de ejecución de cada tarea. La tarea de Quartz tiene dos <em>triggers</em>, uno que se ejecuta cada 10 segundos y otro cada minuto. Los <em>jobs</em> de Spring <em>scheduleJobWithFixedRate</em> se ejecuta cada dos segundos, <em>scheduleJobWithDelay</em> se ejecuta cada dos segundos después de haber terminado la anterior ejecución que como tarda dos segundos en ejecutarse se ejecuta en realidad cada cuatro segundos y finalmente <em>scheduleJobWithCron</em> se ejecuta cada minuto. Las tareas planificadas con las clases del JDK se ejecutan igual que las tareas de Spring cada dos y cada cuatro segundos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">...&#10;2020-07-03 14:41:00,004  INFO  ...QuartzJobListener QuartzJobListener: jobToBeExecuted. Job: QuartzJob, Trigger: CronQuartzTrigger&#10;2020-07-03 14:41:00,005  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ...QuartzJob Job: QuartzJob&#10;2020-07-03 14:41:00,005  INFO  ...QuartzJobListener QuartzJobListener: jobWasExecuted. Job: QuartzJob, Trigger: CronQuartzTrigger&#10;2020-07-03 14:41:01,069  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithDelay&#10;2020-07-03 14:41:01,069  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithCron&#10;2020-07-03 14:41:01,070  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithFixedRate&#10;2020-07-03 14:41:01,075  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...JavaJob JavaJob: jobWithDelay&#10;2020-07-03 14:41:01,077  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...JavaJob JavaJob: jobWithFixedRate&#10;2020-07-03 14:41:03,068  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithFixedRate&#10;2020-07-03 14:41:03,075  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...JavaJob JavaJob: jobWithFixedRate&#10;2020-07-03 14:41:05,070  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithDelay&#10;2020-07-03 14:41:05,070  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithFixedRate&#10;2020-07-03 14:41:05,074  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...JavaJob JavaJob: jobWithFixedRate&#10;2020-07-03 14:41:05,077  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...JavaJob JavaJob: jobWithDelay&#10;2020-07-03 14:41:07,068  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithFixedRate&#10;2020-07-03 14:41:07,074  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...JavaJob JavaJob: jobWithFixedRate&#10;...&#10;2020-07-03 14:42:00,003  INFO  ...QuartzJobListener QuartzJobListener: jobToBeExecuted. Job: QuartzJob, Trigger: CronQuartzTrigger&#10;2020-07-03 14:42:00,004  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ...QuartzJob Job: QuartzJob&#10;2020-07-03 14:42:00,005  INFO  ...QuartzJobListener QuartzJobListener: jobWasExecuted. Job: QuartzJob, Trigger: CronQuartzTrigger&#10;2020-07-03 14:42:01,074  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...JavaJob JavaJob: jobWithFixedRate&#10;2020-07-03 14:42:01,085  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithDelay&#10;2020-07-03 14:42:01,086  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithCron&#10;2020-07-03 14:42:01,087  INFO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...SpringJobs SpringJob: scheduleJobWithFixedRate&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/QuartzSpring">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://www.quartz-scheduler.org/documentation/quartz-2.3.0/examples/">Quartz Examples</a></li>
<li><a href="https://www.baeldung.com/spring-quartz-schedule">Scheduling in Spring with Quartz</a></li>
<li><a href="https://www.callicoder.com/spring-boot-task-scheduling-with-scheduled-annotation/">How to Schedule Tasks with Spring Boot</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/hemeroteca-17/</id>
        <title>Hemeroteca #17</title>
        <updated>2020-06-28T11:00:00+02:00</updated>
        <published>2020-06-28T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/hemeroteca-17/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Que leáis este blog para mi es mucho aparte de para compartir conocimiento que voy aprendiendo me permite canalizar la frustración de no poder usar en el trabajo mucho de lo que escribo, demasiados años ya. Los pocos comentarios, <em>retweets</em> y favoritos en twitter que recibo me hacen no perder la esperanza y en cierta medida me anima a seguir escribiendo. Aunque se que mi motivación no debería depender de esto si encima no recibiese vistas sería algo que me desmotivaría.</p>
<p>En meses anteriores he mejorado el diseño del blog, aún tengo mejoras pendientes que realizar pero no el suficiente tiempo para realizarlas. En los siguientes meses quiero aprender al menos a un nivel básico más sobre temas de SEO para que el tiempo que dedico al blog tenga el máximo rendimiento. Empezaré al publicar los artículos haciendo un pequeño análisis de palabras clave y primeras posiciones de resultados para el título que ponga en el artículo en el buscador Google y en la herramienta Google Search Console. Para los nuevos artículos que escribo pero también para los más visitados que he escrito, introduciendo en ellos algunos pequeños cambios y actualizaciones. Otro aspecto de SEO que tendré en cuenta es la intención de búsqueda, es decir, lo que un usuario espera encontrar cuando hace una búsqueda, normalmente la respuesta que se espera es a la pregunta ¿qué es? o ¿cómo? con lo que incluir un párrafo la respuesta a estas preguntas posiblemente los artículos posicionan mejor en Google.</p>
<p>En los cambios de diseño que he realizado están unas pequeñas modificaciones en la página de <a href="https://picodotdev.github.io/blog-bitix/archive/">Archivo y hemeroteca</a> donde recojo todos los artículos publicados, he añadido una pequeña descripción de cada sección y un icono junto al título del artículo que indique la temática del mismo. Esto permite identificar los artículos por tema de una forma visual y sin necesidad de leer texto si alguien busca artículos de un cierto tema.</p>
<p>Supongo que habrá sido por la pandemia del COVID-19 y las medidas de confinamiento durante estos meses y ahora con el verano y las vacaciones continuará algún tiempo más, en este tiempo he notado una pequeña bajada en las visitas y una notable bajada en los ingresos de AdSense pasando de unos 30 € mensuales a 15 €. Aunque no estoy completamente seguro de haya sido por los nuevos <a href="https://iabtechlab.com/ads-txt/">requerimientos para publicidad digital con los nuevos archivos ads.txt</a>, en principio cumplo y en Google AdSense no tengo ninguna advertencia.</p>
<p>En este semestre he seleccionado mejor la temática de los artículos a escribir y publicar siguiendo dos principios: que sean interesantes para mi o que tengan potencial de atraer visitas. Y de algunos estoy muy contento de haberlos escrito como los relativos a <a href="https://www.testcontainers.org/">Testcontainers</a> para pruebas de integración, <a href="https://sdkman.io/">SDKMAN</a> para instalar múltiples versiones de Java, <a href="https://storybook.js.org/">Storybook</a> para sistemas de diseño con <a href="https://www.typescriptlang.org/">TypeScript</a> y <a href="https://reactjs.org/">React</a>, el artículo sobre el futuro de la concurrencia con <a href="http://openjdk.java.net/projects/loom/">Project Loom</a>, el recolector de basura de Java, el patrón <em>open session in view</em> con sus ventajas y sus alternativa, programación con <a href="https://www.eclipse.org/aspectj/">AspectJ</a> e incluiría varios artículos más en este párrafo. En otras épocas los artículos que seleccionaba para escribir en algunas ocasiones lo hacía a modo de relleno sin prácticamente planificación planificaba más lo que podía escribir sin necesidad de investigar mucho. También contento con algunos de los artículos sobre <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> como <a href="https://silverblue.fedoraproject.org/">Fedora Silverblue</a>.</p>
<p>También he seguido haciendo pequeños cambios en el <a href="https://picodotdev.github.io/blog-bitix/2017/01/script-para-instalar-arch-linux-facil-rapido-desatendido-automatizado-y-personalizable/"><em>script</em> para instalar Arch Linux</a> con múltiples correcciones de errores y soporte de nuevas características. El repositorio de GitHub de <a href="https://github.com/picodotdev/alis/">Arch Linux Install Script</a> ya tiene unas 230 estrellas y más de 100 <em>forks</em> de gente de numerosos países Australia, EEUU, Alemania, Colombia, Suecia y de muchos otros de todo el mundo. Hay un usuario que me envía que falla en el <em>script</em> cuando hago cambios lo cual se lo agradezco ya que algunos a mi me pasan desapercibidos y no tengo tiempo para probar cada cambio. También he recibido algunos <em>pull requests</em> que me han permitido corregir algunos otros errores y añadir algunas nuevas características.</p>
<p>En este semestre han sido 43 nuevos artículos de las temáticas habituales sobre Java, GNU/Linux e incluyendo como novedad el análisis de algún juego después de haber completado la historia principal. Estoy publicando casi dos artículos a la semana con la intención a ver si consigo hacer subir la curva de visitas.</p>
<p>Artículos sobre Java.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/">Los modificadores de acceso de clases, propiedades y métodos en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/programacion-orientada-a-aspectos-con-aspectj-spring-aop-y-la-clase-proxy/">Programación orientada a aspectos con AspectJ, Spring AOP y la clase Proxy</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/el-recolector-de-basura-de-java-que-hace-y-como-funciona-en-cada-version/">El recolector de basura de Java, que hace y como funciona en cada versión</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/las-convenciones-y-guia-de-estilos-para-el-codigo-fuente-de-java/">Las convenciones y guía de estilos para el código fuente de Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/cambiar-los-niveles-de-log-de-forma-dinamica-sin-reiniciar-la-aplicacion-con-log4j/">Cambiar los niveles de log de forma dinámica sin reiniciar la aplicación con Log4j</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/novedades-de-java-14/">Novedades de Java 14</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/argumentos-de-linea-de-comandos-con-jcommander-en-una-aplicacion-java/">Argumentos de línea de comandos con JCommander en una aplicación Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/la-concurrencia-en-la-plataforma-java-con-project-loom/">La concurrencia en la plataforma Java con Project Loom</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-patron-open-session-in-view-que-es-ventajas-problemas-y-alternativas/">El patrón Open Session in View, qué es, ventajas, problemas y alternativas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/copiar-datos-de-un-tipo-de-objeto-a-otro-con-modelmapper/">Copiar datos de un tipo de objeto a otro con ModelMapper</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/la-herramienta-sdkman-para-instalar-varias-versiones-del-jdk-y-software-de-la-plataforma-java/">La herramienta SDKMAN para instalar varias versiones del JDK y software de la plataforma Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/pruebas-de-integracion-con-testcontainers-ejemplo-de-jpa-con-la-base-de-datos-postgresql/">Pruebas de integración con Testcontainers, ejemplo de JPA con la base de datos PostgreSQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/el-patron-de-diseno-specification-ejemplo-de-implementacion-y-uso-en-jpa-con-spring-data/">El patrón de diseño Specification, ejemplo de implementación y uso en JPA con Spring Data</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/generar-en-el-dominio-los-identificativos-de-las-entidades-aplicando-ddd-antes-de-persistirlas-en-la-base-de-datos/">Generar en el dominio los identificativos de las entidades aplicando DDD antes de persistirlas en la base de datos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/">Las sentencias de control de flujo en Java (if, switch, for, while, do-while, try-catch, break, continue e invocación)</a></li>
</ul>
<p>Artículos bore GNU/Linux.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/los-permisos-del-sistema-de-archivos-de-gnu-linux/">Los permisos del sistema de archivos de GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/tareas-basicas-de-administracion-y-uso-despues-de-instalar-una-distribucion-gnu-linux/">Tareas básicas de administración y uso después de instalar una distribución GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/las-aplicaciones-integradas-del-entorno-de-escritorio-gnome/">Las aplicaciones integradas del entorno de escritorio GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/listado-de-programas-esenciales-segun-categoria-para-gnu-linux/">Listado de programas esenciales según categoría para GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/50-plus-comandos-basicos-y-utiles-de-gnu-linux/">50+ comandos básicos y útiles de GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/sobre-el-futuro-de-las-distribuciones-gnu-linux-y-los-sistemas-operativos/">Sobre el futuro de las distribuciones GNU/Linux y los sistemas operativos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/renombrar-multiples-archivos-en-gnome/">Renombrar múltiples archivos en GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/introduccion-y-uso-basico-de-la-distribucion-gnu-linux-fedora-silverblue/">Introducción y uso básico de la distribución GNU/Linux Fedora Silverblue</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/la-controversia-sobre-el-sistema-de-inicio-systemd-adoptado-en-gnu-lnux/">La controversia sobre el sistema de inicio systemd adoptado en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/">Comando para convertir una imagen SVG a PNG y JPG con diferentes tamaños y color de fondo con Inkskape</a></li>
</ul>
<p>Artículos sobre desarrollo web.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/">Mejorar el tiempo de carga de una página web usando lazy load</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/tomar-capturas-de-pantalla-de-paginas-web-desde-la-linea-de-comandos-o-desde-la-interfaz-grafica-con-firefox/">Tomar capturas de pantalla de páginas web desde la línea de comandos o desde la interfaz gráfica con Firefox</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/como-migrar-el-contenido-de-un-sitio-web-html-a-formato-markdown/">Cómo migrar el contenido de un sitio web HTML a formato Markdown</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/desarrollar-componentes-react-con-typescript-y-sistemas-de-diseno-con-storybook/">Desarrollar componentes React con TypeScript y sistemas de diseño con Storybook</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/usar-un-paquete-npm-con-webpack-creado-con-storybook-react-y-typescript/">Usar un paquete npm con Webpack creado con Storybook, React y TypeScript</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/animaciones-y-transformaciones-2d-y-3d-con-css/">Animaciones y transformaciones 2D y 3D con CSS</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/copia-de-seguridad-restauracion-y-carga-de-datos-en-postgresql-y-mysql/">Copia de seguridad, restauración y carga de datos en PostgreSQL y MySQL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/">El problema de seguridad tabnabbing y phishing en los enlaces en nuevas pestañas a páginas externas y cómo solucionarlo</a></li>
</ul>
<p>Artículos sobre juegos con la PlayStation.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/el-juego-xcom-2-y-guia-de-estrategia/">El juego XCOM 2 y guía de estrategia</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/que-es-mejor-para-jugar-y-10-variables-para-elegir-entre-pc-o-consola/">Qué es mejor para jugar y 10+ variables para elegir entre PC o consola</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/introduccion-al-juego-de-batallas-navales-world-of-warships-legends-para-consola/">Introducción al juego de batallas navales World of Warships Legends para consola</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/analisis-y-guia-del-juego-de-estrategia-frostpunk/">Análisis y guía del juego de estrategia Frostpunk</a></li>
</ul>
<p>Algunos nuevos desempaquetados.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/desempaquetado-olla-a-presion-rapida-kuhn-rikon-duromatic-supreme-de-3-5-litros/">Desempaquetado olla a presión rápida Kuhn Rikon Duromatic Supreme de 3,5 litros</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/06/desempaquetado-y-analisis-de-altavoz-inteligente-amazon-echo-con-asistente-alexa/">Desempaquetado y análisis de altavoz inteligente Amazon Echo con asistente Alexa</a></li>
</ul>
<p>Y una contribución al proyecto <a href="https://tapestry.apache.org/">Apache Tapestry</a> con la que actualicé el diseño de la página del proyecto a una versión más moderna y soportando múltiples dispositivos con un diseño adaptable.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/04/generar-enlaces-a-paginas-y-de-eventos-en-apache-tapestry/">Generar enlaces a páginas y de eventos en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/tres-contribuciones-al-proyecto-apache-tapestry-actualizacion-de-la-pagina-web-artwork-del-logotipo-y-arquetipo-maven-quickstart/">Tres contribuciones al proyecto Apache Tapestry, actualización de la página web, artwork del logotipo y arquetipo Maven quickstart</a></li>
</ul>
<p>Y otros que no entran en las categorías anteriores.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/01/conferencia-bilbostack-2020/">Conferencia BilboStack 2020</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/10-aniversario-del-blog/">10º aniversario del blog</a></li>
</ul>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/</id>
        <title>Las sentencias de control de flujo en Java (if, switch, for, while, do-while, try-catch, break, continue e invocación)</title>
        <updated>2020-06-21T07:30:00+02:00</updated>
        <published>2020-06-21T07:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El lenguaje de programación Java utiliza un paradigma orientado a objetos pero también emplea otros paradigmas como el funcional con la incorporación de las <em>lambas</em> en Java 8 y el imperativo en los bloques de sentencias de los métodos. En este artículo están los tipos de sentencias de control de flujo disponibles en el lenguaje de programación Java: condicionales, de repetición, de asignación, de gestión de excepciones e invocación de métodos en Java.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Java es un lenguaje orientado a objetos donde aplicando los principios de encapsulación, herencia y polimorfismo, el código está dentro de los métodos de las clases de los objetos. El código dentro de los métodos sigue los principios de los lenguajes imperativos con una secuencia de sentencias de asignación, control de flujo, llamada a otros métodos y de repetición, más recientemente con la <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">incorporación de las <em>lambdas</em> y referencias a métodos en Java 8</a> es posible emplear también un enfoque de programación funcional.</p>
<p>La orientación a objetos es una forma de organizar el código y los datos que maneja ese código de modo que se respeten los principios de encapsulación, una forma de reutilizar el código con herencia y una forma de abstraer el comportamiento dependiendo de la clase concreta que implementa el método. Pero el código de Java no es únicamente código orientado a objetos también es un lenguaje imperativo para el código de los métodos.</p>
<p>El código imperativo se basa en la ejecución de forma secuencial de un conjunto de sentencias. Las sentencias de un método o programa son de diferente tipo: de asignación, condicionales, de repetición, de gestión de excepciones para controlar errores y de llamadas a funciones, en el caso de los lenguajes orientados a objetos llamadas a métodos. Estas sentencias individuales se pueden anidar unas dentro de otras por ejemplo tener una sentencia de repetición dentro del bloque de sentencias de una condicional.</p>
<p>Cada uno de estos tipos de sentencias forman las piezas básicas de construcción de los programas, combinadas en múltiples lineas de código forman programas complejos que sirven para el propósito para que el programa fue escrito.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="sentencias-de-asignación">Sentencias de asignación</h3>
<p>Las sentencias de asignación sirven para asignar nuevos valores y referencias a objetos a variables y propiedades de objetos. La sintaxis de la asignación consta del nombre de variable que toma el valor a la izquierda, el operador de asignación en el medio y de la expresión a la derecha. El valor de una variable o propiedad cambia con una sentencia de asignación, el valor anterior se reemplaza por el nuevo valor. El nuevo valor de la variable es el resultado de evaluar la expresión que proporciona el valor, con una asignación de inicialización es posible asignar un valor al mismo tiempo que se declara una variable o propiedad de un objeto.</p>
<p>Una variable tiene un valor si se trata de un tipo primitivo de datos, en caso de tener como tipo una clase contiene una referencia a una instancia de un objeto de ese tipo o la referencia nula. Una expresión devuelve como resultado un valor y este es el asignado a la variable por la sentencia de asignación.</p>
<p>Una expresión puede contener múltiples operadores: para datos booleanos (de lógica <em>&amp;&amp;, ||, !</em> y de comparación <em>==, !=, &lt;, &gt;, &lt;=, &gt;=</em>), aritméticos para datos numéricos (<em>+, -, *, /, %, ++, &ndash;</em>) o operadores para datos binarios (<em>&amp;, |, ^, ~, &laquo;, &raquo;, &raquo;&gt;</em>). Otros operadores de asignación (<em>+=, -=, *=, /=, %=, &laquo;=, &raquo;=, &amp;=, ^=, |=</em>) toman como primer operando el valor de la variable, esto evita repetir el nombre de la variable en la expresión y facilita la legibilidad del código.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">variable</span> <span class="o">=</span> <span class="n">expresión</span><span class="o">;</span>&#10;&#10;<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">1</span><span class="o">;</span>&#10;<span class="n">List</span> <span class="n">list</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;1&#34;</span><span class="o">,</span> <span class="s">&#34;2&#34;</span><span class="o">);</span>&#10;&#10;<span class="n">x</span> <span class="o">=</span> <span class="n">2</span><span class="o">;</span>&#10;<span class="n">list</span> <span class="o">=</span> <span class="n">List</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">,</span> <span class="s">&#34;4&#34;</span><span class="o">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Asignacion.java</span>
    </div>
</div>
<p>El operador ternario <em>?:</em> es una expresión condicional que devuelve el valor de la expresión según el resultado de evaluar una expresión booleana.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">variable</span> <span class="o">=</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">?</span> <span class="n">expresionTrue</span> <span class="o">:</span> <span class="n">expresionFalse</span><span class="o">;</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CondicionalTernario.java</span>
    </div>
</div>
<h3 id="setencias-condicionales-if-switch">Setencias condicionales (if, switch)</h3>
<p>Las sentencias condicionales son un tipo de sentencia que evalúa una expresión booleana y dependiendo de su valor verdadero o falso ejecuta o no su su bloque de sentencias asociado para cada caso. Las sentencias a continuación de la condición se ejecutan si la sentencia <em>if</em> se evalúa como verdadero. La sentencia <em>if</em> además puede tener otro bloque de sentencias a ejecutar si la expresión booleana se evalúa como falso, el bloque de sentencias <em>else</em>. Las sentencias <em>if</em> y <em>else</em> se pueden encadenar.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-if_hu24be44068bad4ad403a69b425c847805_22416_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama sentencia if"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-if_hu24be44068bad4ad403a69b425c847805_22416_300x200_fit_box_3.png" width="200" height="200" alt="Diagrama sentencia if" title="Diagrama sentencia if"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-if-else_hu869d4585cc82fedd18187c9eb1e4060a_23522_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama sentencia if-else"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-if-else_hu869d4585cc82fedd18187c9eb1e4060a_23522_300x200_fit_box_3.png" width="200" height="200" alt="Diagrama sentencia if-else" title="Diagrama sentencia if-else"  class="lozad "></a></p>
<figcaption>Diagramas sentencias if e if-else <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="k">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span>&#10;   <span class="n">sentenciaTrue</span>&#10;&#10;<span class="nf">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentenciasTrue</span>&#10;<span class="o">}</span>&#10;&#10;<span class="k">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentenciasTrue</span>&#10;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentenciasFalse</span>&#10;<span class="o">}</span>&#10;&#10;<span class="k">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentenciasTrue</span>&#10;<span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentenciasTrue</span>&#10;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">bloqueSentenciasFalse</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span>&#10;<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">2</span><span class="o">;</span>&#10;<span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;a es mayor que b&#34;</span><span class="o">);</span>&#10;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;a no es mayor que b&#34;</span><span class="o">);</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CondicionalIf.java</span>
    </div>
</div>
<p>Cuando una sentencia <em>if</em> tiene muchas ramas y la expresión condicional comprueba en todos los casos diferentes valores de una misma variable se utiliza la sentencia <em>switch</em>. Si el valor de la variable coincide con el valor del bloque del caso se ejecutan las sentencias de ese bloque. Cada bloque ha de estar finalizado con sentencia <em>break</em> para no evaluar las sentencias del siguiente bloque. El caso <em>default</em> permite ejecutar un bloque de sentencias si el valor de la expresión no coincide con ninguno de los valores de los casos, siendo como la parte <em>else</em> de las sentencias <em>if</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-switch_hue79c7c08074a91052aa727bb0477f63b_30615_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama sentencia switch"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-switch_hue79c7c08074a91052aa727bb0477f63b_30615_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia switch" title="Diagrama sentencia switch"  class="lozad "></a></p>
<figcaption>Diagrama sentencia switch <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="k">switch</span> <span class="o">(</span><span class="n">variable</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="k">case</span> <span class="n">1</span><span class="o">:</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">bloqueSentencias</span>&#10;   <span class="o">}</span> <span class="k">break</span><span class="o">;</span>&#10;   <span class="k">case</span> <span class="n">2</span><span class="o">:</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">bloqueSentencias</span>&#10;   <span class="k">case</span> <span class="n">3</span><span class="o">:</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">bloqueSentencias</span>&#10;   <span class="o">}</span> <span class="k">break</span><span class="o">;</span>&#10;   <span class="k">default</span><span class="o">:</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">bloqueSentencias</span>&#10;   <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CondicionalSwitch.java</span>
    </div>
</div>
<p>La sentencia <em>if</em> equivalente del <em>switch</em> anterior sería el siguiente. si es posible se prefiere usar la sentencia <em>switch</em> sobre la <em>if</em> equivalente, más si hay un varias ramas, ya que es mas sencilla, legible y no hace falta indicar en cada expresión de condición la expresión que devuelve el valor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="k">if</span> <span class="o">(</span><span class="n">variable</span> <span class="o">==</span> <span class="n">1</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentencias</span>&#10;<span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">variable</span> <span class="o">==</span> <span class="n">2</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentencias</span>&#10;<span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">variable</span> <span class="o">==</span> <span class="n">3</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentencias</span>&#10;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentencias</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CondicionalSwitchIf.java</span>
    </div>
</div>
<p>Las sentencias <em>if</em> se pueden anidar unas dentro de otras esto dificulta la legibilidad del código, para evitar <a href="https://picodotdev.github.io/blog-bitix/2017/10/evitar-niveles-de-anidacion-de-sentencias-condicionales-con-guard-clauses/">múltiples anidaciones y crear varias ramas  se utilizan guard clauses</a> que simplifican el flujo del programa.</p>
<h3 id="sentencias-de-repetición-for-foreach-while-do-while-break-continue">Sentencias de repetición (for, foreach, while, do-while, break, continue)</h3>
<p>Las sentencias de repetición permiten ejecutar un bloque de sentencias durante un número determinado de veces o mientras se cumpla una condición. En cada iteración después de ejecutar el bloque de sentencias la condición se vuelve a evaluar si se sigue cumpliendo, si se cumple se realiza una nueva iteración si no se cumple se sale del bucle y se continua con la siguiente sentencia del programa. Esta evaluación de la condición y ejecución del bloque de sentencias se realiza hasta que la condición del bucle <em>while</em> no se cumpla. Hay varios tipos de bucles.</p>
<p>La sentencia <em>while</em> ejecuta un bloque de sentencias mientras se cumpla una condición, puede ocurrir el caso de que la condición de la sentencia <em>while</em> no se cumpla y por tanto el bloque de sentencias de repetición no se ejecute ninguna vez. La comprobación de la condición se realiza antes de entrar al bucle.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-while_huf093fb746d2329da27a844c76e69b7da_26135_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama sentencia while"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-while_huf093fb746d2329da27a844c76e69b7da_26135_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia while" title="Diagrama sentencia while"  class="lozad "></a></p>
<figcaption>Diagrama sentencia while <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="k">while</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">sentences</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>RepeticionWhile.java</span>
    </div>
</div>
<p>En el bucle <em>do-while</em> la comprobación de la condición está después del bloque de sentencias de repetición, a diferencia del bucle <em>while</em> en el <em>do-while</em> el bloque de sentencias se ejecutan al menos una vez.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-do-while_hu629e120eb684631fa9ee57f6de9a81d1_24851_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama sentencia do-while"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-do-while_hu629e120eb684631fa9ee57f6de9a81d1_24851_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia do-while" title="Diagrama sentencia do-while"  class="lozad "></a></p>
<figcaption>Diagrama sentencia do-while <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="k">do</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentencias</span>&#10;<span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">condicionExpresionBoleana</span><span class="o">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>RepeticionDoWhile.java</span>
    </div>
</div>
<p>La sentencia <em>for</em> utilizan otra sintaxis para realizar bucles, una de las <a href="https://picodotdev.github.io/blog-bitix/2017/07/4-formas-de-hacer-un-bucle-for-en-java/">4 formas de hacer un bucle for</a> contiene una inicialización, condición de repetición e incremento además del bloque de sentencias a ejecutar. Otras formas de bucle <em>for</em> son el <em>forearch</em> para colecciones de objetos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-for_hud5f47070ff90265ccb71bfee4101b702_32192_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama sentencia for"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-for_hud5f47070ff90265ccb71bfee4101b702_32192_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia for" title="Diagrama sentencia for"  class="lozad "></a></p>
<figcaption>Diagrama sentencia for <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="k">for</span> <span class="o">(</span><span class="n">inicializacion</span><span class="o">;</span> <span class="n">condicionExpresionBoleana</span><span class="o">;</span> <span class="n">incremento</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentencias</span>&#10;<span class="o">}</span>&#10;&#10;<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;<span class="o">}</span>&#10;&#10;<span class="c1">// Foreach&#10;</span><span class="c1"></span><span class="n">Collection</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">collection</span> <span class="o">=</span> <span class="o">...;</span>&#10;<span class="k">for</span> <span class="o">(</span><span class="n">Object</span> <span class="n">object</span> <span class="o">:</span> <span class="n">collection</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">object</span><span class="o">);</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>RepeticionFor.java</span>
    </div>
</div>
<p>Dentro de las sentencias de bucle se pueden emplear las palabras reservadas <em>break</em> y <em>continue</em>. La sentencia <em>break</em> permite salir del bucle inmediatamente sin necesidad de evaluar la condición. La palabra <em>continue</em> dejar de ejecutar sentencias del bucle y evaluar de nuevo la condición de bucle, si se sigue cumpliendo la condición se ejecuta de nuevo el bloque de sentencias. Las sentencias <em>break</em> y <em>continue</em> normalmente se utilizan dentro de una sentencia condicional <em>if</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-continue_hubff1e9b9e07bd4ea44d8fd04d9b9a57c_28193_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diagrama sentencia continue"><img src="https://picodotdev.github.io/blog-bitix/2020/06/las-sentencias-de-control-de-flujo-en-java-if-switch-for-while-do-while-try-catch-break-continue-e-invocacion/images/sentencia-continue_hubff1e9b9e07bd4ea44d8fd04d9b9a57c_28193_650x450_fit_box_3.png" width="400" height="400" alt="Diagrama sentencia continue" title="Diagrama sentencia continue"  class="lozad "></a></p>
<figcaption>Diagrama sentencia continue <br>Fuente: beginnersbook.com</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="c1">// Break&#10;</span><span class="c1"></span><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">5</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">break</span><span class="o">;</span>&#10;   <span class="o">}</span>&#10;   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;<span class="o">}</span>&#10;&#10;<span class="c1">// Resultado&#10;</span><span class="c1"></span><span class="n">0</span>&#10;<span class="n">1</span>&#10;<span class="n">2</span>&#10;<span class="n">3</span>&#10;<span class="n">4</span>&#10;&#10;<span class="c1">// Continue&#10;</span><span class="c1"></span><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">10</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">5</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">continue</span><span class="o">;</span>&#10;   <span class="o">}</span>&#10;   <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>&#10;<span class="o">}</span>&#10;&#10;<span class="c1">// Resultado&#10;</span><span class="c1"></span><span class="n">0</span>&#10;<span class="n">1</span>&#10;<span class="n">2</span>&#10;<span class="n">3</span>&#10;<span class="n">4</span>&#10;<span class="n">6</span>&#10;<span class="n">7</span>&#10;<span class="n">8</span>&#10;<span class="n">9</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BreakContinue.java</span>
    </div>
</div>
<p>Un bucle infinito es en un bucle que se itera contnuamente porque la condición de iteración se cumple siempre. Ejecutar continuamente un bloque de sentencias hace que el procesador consuma todos los recursos que se disponen de cómputo de procesador o una alta actividad de entrada y salida que degrada el rendimiento del sistema sin producir ningún resultado útil cuanto menos si no genera errores en el resto de programas del sistema. Suele ser por un error de programación y para resolverlo habitualmente hay que matar el proceso del programa y reiniciarlo, si no se corrige el error en el bucle en las mismas condiciones se producirá de nuevo el bucle infinito.</p>
<h3 id="setencias-de-control-de-expceciones-try-catch-throw">Setencias de control de expceciones (try-catch, throw)</h3>
<p>Las expresiones <em>try-catch</em> son <a href="https://picodotdev.github.io/blog-bitix/2017/10/las-excepciones-para-gestionar-errores-con-java/">el mecanismo de control de errores en Java</a>. Estas expresiones permiten tratar las excepciones lanzadas por la palabra reservada <em>throw</em> en los métodos invocados de su bloque de sentencias.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="k">try</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentencias</span>&#10;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;   <span class="n">bloqueSentenciasTratamientoExcepcion</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>TryCatch.java</span>
    </div>
</div>
<p>Las excepciones se lanzan con la palabra reservada <em>throw</em>, toda excepción ha de heredar de <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Exception.html">Exception</a> y si no hereda de <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/RuntimeException.html">RuntimeExecption</a> ha de declararse en la firma del método para indicar que el método puede lanzar esa excepción en caso de no ser tratada dentro del mismo método con un <em>try-catch</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kt">void</span> <span class="nf">exception</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">Exception</span><span class="o">();</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kt">void</span> <span class="nf">runtime</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="o">();</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Throw.java</span>
    </div>
</div>
<h3 id="invocación-de-métodos">Invocación de métodos</h3>
<p>Las funciones en los lenguajes orientados a objetos dentro de las clases, las clases encapsulan las variables y las funciones o métodos. Los métodos tiene acceso además de a los parámetros que recibe a las variables del objeto en las están contenido y otros métodos de la misma clase u otros objetos respetando los <a href="https://picodotdev.github.io/blog-bitix/2020/01/los-modificadores-de-acceso-de-clases-propiedades-y-metodos-en-java/">ámbitos de visibilidad de las palabras reservadas <em>public</em>, <em>protected</em>, <em>private</em> y <em>default</em></a>.</p>
<p>Las expresiones de invocación a métodos se componen del objeto que recibe la llamada a uno de sus métodos separado por un punto y nombre del método. Si el método llamado devuelve un objeto se puede encadenar otra nueva llamada a un método del objeto devuelto. El valor o referencia a objeto devuelto se puede asignar a una variable también.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="s">&#34;Hola Mundo!&#34;</span><span class="o">;</span>&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">string</span><span class="o">);</span>&#10;&#10;<span class="c1">// Resultado&#10;</span><span class="c1"></span><span class="n">Hola</span> <span class="n">Mundo</span><span class="o">!</span>&#10;&#10;<span class="n">string</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">();</span>&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">string</span><span class="o">);</span>&#10;&#10;<span class="c1">// Resultado&#10;</span><span class="c1"></span><span class="n">HOLA</span> <span class="n">MUNDO</span><span class="o">!</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Invocacion.java</span>
    </div>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/generar-en-el-dominio-los-identificativos-de-las-entidades-aplicando-ddd-antes-de-persistirlas-en-la-base-de-datos/</id>
        <title>Generar en el dominio los identificativos de las entidades aplicando DDD antes de persistirlas en la base de datos</title>
        <updated>2020-06-19T17:00:00+02:00</updated>
        <published>2020-06-19T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/generar-en-el-dominio-los-identificativos-de-las-entidades-aplicando-ddd-antes-de-persistirlas-en-la-base-de-datos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las bases de datos tiene la capacidad de generar identificativos para los datos que se insertan. En el caso de las bases de datos relacionales con secuencias que generan en el momento de inserción la clave primaria de la fila en una tabla, normalmente es un número y utilizando Java con JPA con las anotaciones <em>Id</em>, <em>GeneratedValue</em> y <em>SequenceGenerator</em> en la clase Java que representa a la entidad. Para Domain Driven Design delegar en el momento de inserción la generación del identificativo de la entidad es un problema ya que hace que la entidad sea inválida al no tener identidad hasta persistirla y la base de datos es un elemento externo que debe ser independizado del dominio de la aplicación. En este artículo comento una implementación siguiendo los principios de DDD para dar solución a estos dos problemas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Tradicionalmente la tarea de generar los identificativos de las entidades de dominio se delega en la base de datos en el momento de persistir la entidad. La base de datos en la columna de la tabla de la entidad para el identificativo generalmente es de tipo numérico y la base de datos le asigna un valor incremental para cada fila o entidad guardada.</p>
<p>Este modelo de delegar en la base de datos el generar la identificativos de las entidades tiene dos problemas en la teoría de <a href="https://en.wikipedia.org/wiki/Domain-driven_design">Domain Driven Design</a> o <em>DDD</em>:</p>
<ul>
<li>La aplicación requiere y es dependiente de un sistema externo para asignar la identidad de una entidad del dominio creada en la aplicación.</li>
<li>La entidad no tiene identidad inicialmente, lo que significa que la entidad es creada con un estado inválido por ser incompleto.</li>
</ul>
<p>Que la entidad no tenga identidad asignado y esté incompleta en el momento de creación tiene inconvenientes ya que al <a href="https://picodotdev.github.io/blog-bitix/2016/12/como-implementar-correctamente-y-por-que-los-metodos-equals-y-hashcode-de-los-objetos-java/">implementar los métodos <em>equals</em> y <em>hashCode</em> en Java</a> para una entidad estos se basa en el identificativo de la entidad para determinar si dos instancias de un objeto es la misma, si la entidad no tiene identidad el método <em>equals</em> es ineficaz. Al mismo tiempo el método <em>hashCode</em>, y también el método <em>equals</em>, es utilizado por la API de colecciones de Java en su mayoría con lo que la entidad no es posible guardarla en colecciones que dependan de estos métodos para su correcto funcionamiento. Para usar los métodos <em>equals</em> y <em>hashCode</em> de las entidades es necesario esperar a guardar la entidad en la base de datos para que se le asigne el identificativo.</p>
<p>También en DDD se suelen utilizar eventos como mecanismo de comunicar que en el sistema se ha sucedido algo, si la entidad no tiene identificativo no es posible comunicar que ha ocurrido algo, al menos no incluyendo el identificativo.</p>
<h3 id="identificativos-universales-como-identificadores">Identificativos universales como identificadores</h3>
<p>Una posibilidad es generar identificativos universales para los identificativos de las entidades, sin embargo, la clase <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/UUID.html">UUID</a> depende de elementos externos al dominio como el tiempo del sistema. Al mismo tiempo la entidad no es consciente de la existencia de otras entidades y no le es posible determinar la unicidad del identificativo.</p>
<p>En DDD todo elemento que dependa de algo externo ha de se independizado del dominio. De modo que el UUID aplicando DDD no se genera en la entidad sino en la capa de servicio mediante un elemento externo que en la terminología de DDD es un adaptador, el identificativo se le proporciona a la entidad en el momento de creación en el constructor como parámetro.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;<span class="o">...</span>&#10;<span class="n">95ba87c1</span><span class="o">-</span><span class="n">f0ac</span><span class="o">-</span><span class="n">4c55</span><span class="o">-</span><span class="n">9efa</span><span class="o">-</span><span class="n">257dbe291a7d</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>UuidGenerator.java</span>
    </div>
</div>
<h3 id="delegar-la-generación-de-identificativos-en-el-repositorio">Delegar la generación de identificativos en el repositorio</h3>
<p>Dado que en DDD se utiliza un repositorio para persistir las entidades en una base de datos externa a la lógica de dominio, la tarea de generar los identificadores que depende de un elemento externo es posible ubicarla en la misma clase repositorio, de esta manera la lógica queda con cohesión ya que todo lo relativo a la entidad está ubicada en su repositorio.</p>
<p>Al mismo tiempo delegar la tarea de crear el identificativo en el repositorio permite variar la implementación, una opción es delegar en la base de datos la obtención del identificativo o utilizar el método de identificativo universal anterior. En el caso de delegar en la base de datos la generación del identificativo, es la base de datos la que lo genera igual que en el caso de la autogeneración pero ahora no de manera implícita sino de forma explícita.</p>
<h3 id="ejemplo-utilizando-jpa-y-spring-data">Ejemplo utilizando JPA y Spring Data</h3>
<p>Utilizando <a href="https://spring.io/projects/spring-data">Spring Data</a> con JPA para añadir métodos personalizados en la clase del repositorio hay que crear una interfaz que los incluya y construir una implementación de esa interfaz. La misma interfaz es implementada por la interfaz de Spring Data, y Spring haciendo su magia y por composición crea un repositorio que tiene tanto los métodos implementados por Spring como la implementación de los métodos personalizados, en este caso el de generar el identificativo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.JpaSpecificationExecutor</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Modifying</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Query</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.repository.PagingAndSortingRepository</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ProductRepository</span> <span class="kd">extends</span> <span class="n">PagingAndSortingRepository</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">,</span> <span class="n">ProductId</span><span class="o">&gt;,</span> <span class="n">JpaSpecificationExecutor</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;,</span> <span class="n">CustomProductRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Modifying</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Query</span><span class="o">(</span><span class="s">&#34;delete from Product&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">deleteAll</span><span class="o">();</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductRepository.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">CustomProductRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProductId</span> <span class="nf">generateId</span><span class="o">();</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CustomProductRepository.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigInteger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.EntityManager</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomProductRepositoryImpl</span> <span class="kd">implements</span> <span class="n">CustomProductRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">EntityManager</span> <span class="n">entityManager</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ProductId</span> <span class="nf">generateId</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigInteger</span> <span class="n">id</span> <span class="o">=</span> <span class="o">(</span><span class="n">BigInteger</span><span class="o">)</span> <span class="n">entityManager</span><span class="o">.</span><span class="na">createNativeQuery</span><span class="o">(</span><span class="s">&#34;select nextval(&#39;product_id_seq&#39;)&#34;</span><span class="o">).</span><span class="na">getSingleResult</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">ProductId</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CustomProductRepositoryImpl.java</span>
    </div>
</div>
<p>En la clase de la entidad no se usa la anotación <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/GeneratedValue.html">GeneratedValue</a>. En vez de esa anotación en este ejemplo se utiliza la anotación <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/Embeddable.html">EmbeddedId</a> y la anotación <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/Embeddable.html">Embeddable</a>, aplicando otro de los principios de DDD que es <a href="https://picodotdev.github.io/blog-bitix/2019/10/ventajas-de-usar-un-tipo-especifico-para-los-identificadores-de-las-entidades-en-vez-de-un-tipo-basico/">utilizar un tipo especifico que representa el identificativo de la entidad</a> en vez de un tipo proporcionado por el lenguaje como un <em>Long</em> o <em>BigInteger</em>. Un tipo específico para la identidad tiene varias ventajas como aprovechar los beneficios del compilador para detectar errores y de los IDE con asistencia de código.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.time.LocalDate</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Objects</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.EmbeddedId</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.Entity</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.Table</span><span class="o">;</span>&#10;&#10;<span class="nd">@Entity</span>&#10;<span class="nd">@Table</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Product&#34;</span><span class="o">)</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Id</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@EmbeddedId</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductId</span> <span class="n">id</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LocalDate</span> <span class="n">date</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">units</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">(</span><span class="n">ProductId</span> <span class="n">id</span><span class="o">,</span> <span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">LocalDate</span> <span class="n">date</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">units</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="n">date</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">=</span> <span class="n">price</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">units</span> <span class="o">=</span> <span class="n">units</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hash</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">o</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">Product</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">that</span> <span class="o">=</span> <span class="o">(</span><span class="n">Product</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">id</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Product.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.math.BigInteger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Objects</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.Embeddable</span><span class="o">;</span>&#10;&#10;<span class="nd">@Embeddable</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductId</span> <span class="kd">implements</span> <span class="n">Serializable</span>  <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigInteger</span> <span class="n">id</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="nf">ProductId</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="nf">ProductId</span><span class="o">(</span><span class="n">BigInteger</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">ProductId</span> <span class="nf">valueOf</span><span class="o">(</span><span class="n">BigInteger</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">ProductId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">hash</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">o</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">o</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">o</span> <span class="k">instanceof</span> <span class="n">ProductId</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProductId</span> <span class="n">that</span> <span class="o">=</span> <span class="o">(</span><span class="n">ProductId</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Objects</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">id</span><span class="o">,</span> <span class="n">that</span><span class="o">.</span><span class="na">id</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductId.java</span>
    </div>
</div>
<p>De esta forma ahora las entidades creadas son completamente válidas desde el momento de generación en el dominio ya que tienen su identificador. Dado que la entidad tiene su propio identificativo desde el inicio de su existencia es posible guardar la entidad en colecciones y lanzar eventos de dominio que incluyan su identificador sin tener que esperar que la base de datos le autogenere uno.</p>
<p>En este caso de prueba se observa que la entidad <em>Product</em> creada se crea en el constructor con su identificativo asignado sin esperar a que la base de datos lo genere, la base de datos y JPA simplemente persisten el valor que tiene asignado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.entitiesid.domain.product</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootTest</span>&#10;<span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">{</span> <span class="n">DefaultPostgresContainer</span><span class="o">.</span><span class="na">Initializer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductRepositoryTest</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductRepository</span> <span class="n">productRepository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testRepositoryGenerateId</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ProductId</span> <span class="n">id</span> <span class="o">=</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">generateId</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="n">id</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">productRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">product</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">product</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findById</span><span class="o">(</span><span class="n">id</span><span class="o">).</span><span class="na">get</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductRepositoryTest.java</span>
    </div>
</div>
<p>En las trazas se observa la SQL para obtener el valor de la secuencia y la SQL de <em>insert</em> para guardar la entidad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">Hibernate: select nextval(&#39;product_id_seq&#39;)&#10;Hibernate: select product0_.id as id1_0_0_, product0_.date as date2_0_0_, product0_.name as name3_0_0_, product0_.price as price4_0_0_, product0_.units as units5_0_0_ from product product0_ where product0_.id=?&#10;Hibernate: insert into product (date, name, price, units, id) values (?, ?, ?, ?, ?)</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>De <em>Domain Driven Design</em> hay varios libros, el libro de referencia sobre la teoría de DDD son <a href="https://amzn.to/33JmDkv">Domain-Driven Design: Tackling Complexity in the Heart of Software</a>, <a href="https://amzn.to/34HkDbA">Domain-Driven Design Distilled</a>, otros más prácticos son <a href="https://amzn.to/34yeDSk">Implementing Domain-Driven Design</a> y <a href="https://amzn.to/2SJe2HW">Domain-Driven Design in PHP: A Highly Practical Guide</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321125215&amp;linkId=5df04454342df14dfcc78687544c9d67" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0134434420&amp;linkId=fc00596717d15f5b160a896fa5ce565a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1118714709&amp;linkId=1103b1d87d34d4da91354c2b3d680aba" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321834577&amp;linkId=00c494ddc45b9304145ac8e2733eb072" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1787284948&amp;linkId=82d6a16b683b54c2ab34c1e51f63acfb" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/EntitiesId">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew test</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://matthiasnoback.nl/2018/05/when-and-where-to-determine-the-id-of-an-entity/">When and where to determine the ID of an entity</a></li>
<li><a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories.single-repository-behavior">Spring Data - Customizing Individual Repositories</a></li>
<li><a href="https://www.objectdb.com/java/jpa/entity/id">JPA Primary Key</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/</id>
        <title>Comando para convertir una imagen SVG a PNG y JPG con diferentes tamaños y color de fondo con Inkskape</title>
        <updated>2020-06-14T10:45:00+02:00</updated>
        <published>2020-06-14T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El formato de imagen SVG tiene la ventaja de permitir el escalado de la imagen sin pérdida de calidad y suele tener menor tamaño que la imagen equivalente en formato PNG y JPG. Si es necesario la imagen SVG es exportable a formato de imagen PNG y JPG con el tamaño deseado o color de fondo. El editor de imágenes Inkscape permite con su utilidad de línea de comandos automatizar y exportar archivos SVG a PNG y JPG y ocultar y mostrar las capas deseadas del archivo original para obtener el resultado deseado en la exportación.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/inkscape.svg" width="200" height="200" alt="Inkscape" title="Inkscape"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<p>El formato de imagen SVG es un formato de imagen vectorial donde las líneas, formas, posición y colores se describen en formato texto, tiene la ventaja de ser un formato escalable que no pierde resolución independiente del tamaño de imagen en la que se represente, es decir, la imagen tiene la misma calidad al tamaño <em>full hd</em> 1920x1080 que a 4K 3840x2560 que en 800x600 píxeles.</p>
<p>Con las imágenes de fotos en formato JPG y sin pérdida de calidad PNG la resolución adecuada para mostrar estas imágenes es la original del archivo a otra resolución hay que hacer un escalado con un algoritmo para añadir o quitar píxeles, el escalado es una operación imprecisa que resta algo de calidad a la imagen. <a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/">Escalar el tamaño de una imagen JPG o PNG</a> es necesario para obtener la imagen en otros tamaños, dependiendo del número de píxeles a añadir si se hace más grande que la original o píxeles a quitar si se reduce el tamaño la pérdida de calidad se nota más o menos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/201607_hu155add02d6c6e28845a8452d31796ba4_1042102_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen en formato JPG original"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/201607_hu155add02d6c6e28845a8452d31796ba4_1042102_300x200_fit_q90_box.jpg" width="300" height="200" alt="Imagen en formato JPG original" title="Imagen en formato JPG original"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/201607-thumb-300x200_hue65376be7c7ffd5e9c6116f7adcd1047_48389_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen en formato JPG escalada a 300x200 píxeles"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/201607-thumb-300x200_hue65376be7c7ffd5e9c6116f7adcd1047_48389_300x200_fit_q90_box.jpg" width="300" height="200" alt="Imagen en formato JPG escalada a 300x200 píxeles" title="Imagen en formato JPG escalada a 300x200 píxeles"  class="lozad "></a></p>
<figcaption>Imagen en formato JPG original y escalada a 300x200 píxeles</figcaption>
</figure>
</div>
<p>Los navegadores y dispositivos móviles ya soportan como formato de imagen el SVG, en la web y los dispositivos móviles es especialmente adecuado este formato ya que además de adaptarse a la variedad de tamaños de los dispositivos de escritorio o móviles suelen tener un menor tamaño de archivo lo que hace que se descarguen más rápido al requerir menos ancho de banda.</p>
<p>Aún con los beneficios que posee el formato SVG algunas aplicaciones no soportan el formato SVG y en este caso es necesario hacer una conversión de SVG a los formatos binarios <em>rasterizados</em> PNG o JPG. El formato SVG permite obtener estas imágenes PNG y JPG en diferentes tamaños sin pérdida de calidad.</p>
<p><a href="https://inkscape.org/es/">Inkscape</a> es un editor de imágenes vectoriales con una utilidad de línea de comandos que permite convertir y exportar imágenes en formato SVG a PNG y JPG en el tamaño y con el color de fondo deseado. El siguiente comando convierte todos los archivos SVG a PNG de una carpeta. En el comando se indican varios parámetros como la anchura deseada de la imagen, el color de fondo, los identificativos de las capas a exportar, el formato de salida y el nombre del archivo creado. Posteriormente con un segundo comando hay que <a href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/">convertir las imágenes de formato PNG a JPG</a>, dependiendo del tipo de imagen, los colores y degradados de la imagen el tamaño en formato PNG será mayor o menor que en formato JPG.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="k">for</span> f in *.svg<span class="p">;</span> <span class="k">do</span> inkscape -w <span class="m">750</span> <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> --export-background white --export-background-opacity <span class="m">1</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="k">$(</span>basename <span class="si">${</span><span class="nv">f</span><span class="p">%.*</span><span class="si">}</span><span class="k">)</span><span class="s2">-750.png&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;$ <span class="k">for</span> f in *.png<span class="p">;</span> <span class="k">do</span> convert <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">f</span><span class="p">%.*</span><span class="si">}</span><span class="s2">.jpg&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>inkscape-convert-svg-png.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry.svg" data-gallery="data-gallery" title="Imagen original en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry.svg" width="300" height="200" alt="Imagen original en formato SVG" title="Imagen original en formato SVG"  class="lozad "></a></p>
<figcaption>Imagen original en formato SVG</figcaption>
</figure>
</div>
<p>El editor Inkscape permite definir capas con diferentes elementos de la imagen, la linea de comandos permite exportar únicamente capas deseadas de la imagen para obtener el resultado deseado en la exportación. El SVG anterior contiene en el mismo archivo diferentes capas con diferentes versiones de la imagen adecuadas para un fondo claro y oscuro.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="nv">BASENAME</span><span class="o">=</span><span class="s2">&#34;apache-tapestry&#34;</span>&#10;<span class="nv">ARTWORK_FILE</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-artwork.svg&#34;</span>&#10;&#10;$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id lightObject --export-background white -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-800-light.png&#34;</span>&#10;$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id darkObject --export-background black -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-800-dark.png&#34;</span>&#10;$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id lightIconObject --export-background white -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-800-light.png&#34;</span>&#10;$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id darkIconObject --export-background black -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-800-dark.png&#34;</span>&#10;$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id lightTextObject --export-background white -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-800-light.png&#34;</span>&#10;$ inkscape <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> --export-id-only --export-id darkTextObject --export-background black -w <span class="m">800</span> --export-type png --export-filename <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-800-dark.png&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>inkscape-png-versions.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-800-light_hu7e5404fb1aa31fe342672ad8214b2b9f_60725_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-800-light_hu7e5404fb1aa31fe342672ad8214b2b9f_60725_300x200_fit_box_3.png" width="300" height="134" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-800-dark_hub5b4d74b8d14e46515940c00029d3bc7_61131_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-800-dark_hub5b4d74b8d14e46515940c00029d3bc7_61131_300x200_fit_box_3.png" width="300" height="134" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-800-light_hu63592ed543dc04b632a0db3b544af56d_82881_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-800-light_hu63592ed543dc04b632a0db3b544af56d_82881_300x200_fit_box_3.png" width="200" height="200" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-800-dark_hu5561b3fa2c992556c74875e00a747250_83588_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-800-dark_hu5561b3fa2c992556c74875e00a747250_83588_300x200_fit_box_3.png" width="200" height="200" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-800-light_hu71918ce05912a609bbe5cfa98bdae2be_39579_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-800-light_hu71918ce05912a609bbe5cfa98bdae2be_39579_300x200_fit_box_3.png" width="300" height="134" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-800-dark_hud4e768763c312754ca970d2d59adcda4_39231_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Imagen en formato PNG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-800-dark_hud4e768763c312754ca970d2d59adcda4_39231_300x200_fit_box_3.png" width="300" height="134" alt="Imagen en formato PNG" title="Imagen en formato PNG"  class="lozad "></a></p>
<figcaption>Diferentes versiones de la imagen SVG en formato PNG</figcaption>
</figure>
</div>
<p>También es posible modificar el SVG original para mostrar y ocultar las capas visibles del archivo. Los siguientes comandos permiten exportar a PNG la imagen en diferentes versiones (icono y texto, solo icono o solo texto), con diferente color de fondo (transparente, blanco y negro) y en diferente tamaño. Esto permite automatizar y hacerlo mucho más rápido que el repetitivo proceso que sería realizar manualmente la exportación usando la interfaz gráfica de Inkscape.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="nv">BASENAME</span><span class="o">=</span><span class="s2">&#34;apache-tapestry&#34;</span>&#10;<span class="nv">ARTWORK_FILE</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-artwork.svg&#34;</span>&#10;&#10;$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-light.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-light.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-dark.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icon-dark.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-light.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-light.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerPrev --verb LayerToggleHide --verb EditDeselect --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-dark.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-text-dark.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-light.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-light.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span>&#10;$ <span class="o">(</span>cp <span class="s2">&#34;</span><span class="nv">$ARTWORK_FILE</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-dark.svg&#34;</span> <span class="o">&amp;&amp;</span> inkscape <span class="s2">&#34;</span><span class="nv">$BASENAME</span><span class="s2">-icontext-dark.svg&#34;</span> --verb LayerHideAll --verb DialogLayers --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerPrev --verb LayerToggleHide --verb FitCanvasToDrawing --verb FileSave --verb FileQuit<span class="o">)</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>inkscape-svg-versions.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-light.svg" data-gallery="data-gallery" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-light.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="white-background lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-dark.svg" data-gallery="data-gallery" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icontext-dark.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="black-background lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-light.svg" data-gallery="data-gallery" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-light.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="white-background lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-dark.svg" data-gallery="data-gallery" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-icon-dark.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="black-background lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-light.svg" data-gallery="data-gallery" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-light.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="white-background lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-dark.svg" data-gallery="data-gallery" title="Imagen en formato SVG"><img src="https://picodotdev.github.io/blog-bitix/2020/06/comando-para-convertir-una-imagen-svg-a-png-y-jpg-con-diferentes-tamanos-y-color-de-fondo-con-inkskape/images/apache-tapestry-text-dark.svg" width="300" height="200" alt="Imagen en formato SVG" title="Imagen en formato SVG"  class="black-background lozad "></a></p>
<figcaption>Diferentes versiones de la misma imagen SVG</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/06/el-patron-de-diseno-specification-ejemplo-de-implementacion-y-uso-en-jpa-con-spring-data/</id>
        <title>El patrón de diseño Specification, ejemplo de implementación y uso en JPA con Spring Data</title>
        <updated>2020-06-12T16:00:00+02:00</updated>
        <published>2020-06-12T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/06/el-patron-de-diseno-specification-ejemplo-de-implementacion-y-uso-en-jpa-con-spring-data/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los métodos de búsqueda y consulta permiten recuperar objetos de las bases de datos según los criterios deseados. Dependiendo del tamaño de la aplicación y sus casos de uso el número de consultas será más o menos grande. Con un número de consultas grande estas se vuelven complejas de mantener y generan duplicación de lógica de negocio. Para simplificar el mantenimiento de un número grande de consultas y evitar duplicidad de lógica de negocio una solución es implementar el patrón de diseño <em>Specification</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p>Dado un objeto suele ser necesario comprobar si cumple una o más condiciones. Estas condiciones pueden implementarse tanto en un método del objeto como en la lógica de persistencia en la base de datos.</p>
<p>Esta aproximación tiene dos inconvenientes, el número de métodos de consulta crece significativamente en las aplicaciones grandes y las consultas son conjunto fijo sin posibilidad de extensión salvo añadir nuevos métodos, las consultas no son fáciles de externalizar y reutilizar.</p>
<p>En estos casos implementar el patrón de diseño <em>Specification</em> ayuda a hacer el código más mantenible, extensible, simple y de más fácil lectura.</p>
<p>Los siguientes ejemplos implementan el patrón <em>Specification</em> para comprobar si un objeto cumple una serie de condiciones de negocio y como Spring Data hace uso del patrón para construir las condiciones de las consultas de JPA. Los ejemplos incluyen teses que usan <a href="https://picodotdev.github.io/blog-bitix/2020/06/pruebas-de-integracion-con-testcontainers-ejemplo-de-jpa-con-la-base-de-datos-postgresql/">la herramienta TestConainers para hacer pruebas de integración en Java</a> con la base de datos <a href="https://www.postgresql.org/">PostgreSQL</a> en un contenedor <a href="https://www.docker.com/">Docker</a>.</p>
<h3 id="el-problema-en-las-consultas">El problema en las consultas</h3>
<p>Suponiendo que se tiene la siguiente entidad del dominio con una serie de campos la idea primera y más directa para implementar si un producto cumple una serie de condiciones es añadir métodos en las clases, un método por cada condición. Por ejemplo, para buscar los productos que que son baratos, tienen un tiempo largo de existencia o un <em>sobrestock</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Entity</span>&#10;<span class="nd">@Table</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Product&#34;</span><span class="o">)</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="kd">implements</span> <span class="n">Specificable</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Id</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GeneratedValue</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Long</span> <span class="n">id</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LocalDate</span> <span class="n">date</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Integer</span> <span class="n">units</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Product</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">LocalDate</span> <span class="n">date</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">price</span><span class="o">,</span> <span class="n">Integer</span> <span class="n">units</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="n">date</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">price</span> <span class="o">=</span> <span class="n">price</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">units</span> <span class="o">=</span> <span class="n">units</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCheap</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">...;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isLongTerm</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">...;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isOverstock</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">...;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Product-1.java</span>
    </div>
</div>
<p>Esta aproximación sencilla de implementar y suficiente en aplicaciones pequeñas tiene dos inconvenientes. El número de métodos a escribir crece significativamente para aplicaciones grandes o complejas y los criterios de los métodos de consulta son fijos, no son extensibles. Para solventar estos dos problemas se opta por crear métodos con los criterios individuales y se combinan entre ellos dinámicamente para obtener la consulta deseada.</p>
<p>Aquí es donde el patrón  de diseño <em>Specification</em> es de utilidad. Este patrón también es aplicable a las consultas presentes en las clases repositorio de acceso a la base de datos donde seguramente es más probable repetir la misma lógica de condiciones en varias consultas <em>hardcodeado</em> en las SQLs. Con los mismos problemas, condiciones repetidas en varios métodos y proliferación de métodos de consulta. Esta es la razón de que <a href="https://spring.io/projects/spring-data">Spring Data</a> implemente el patrón <em>Specification</em>.</p>
<h3 id="qué-es-y-ventajas-del-patrón-de-diseño-specification">Qué es y ventajas del patrón de diseño Specification</h3>
<p>El patrón de diseño <em>Specification</em> permite encapsular una pieza del conocimiento del dominio y rehusarla en diferentes partes de la aplicación. Utilizándolo se mueven estas reglas de negocio a clases llamadas <em>specifications</em>.</p>
<p>El patrón de diseño <em>Specification</em> parte de una interfaz con un método a implementar para encapsular la lógica de negocio que comprueba si la condición se cumple.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">object</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">and</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">specifications</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">AndSpecification</span><span class="o">(</span><span class="n">specifications</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">or</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">specifications</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">(</span><span class="n">specifications</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">default</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">not</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">specification</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">NotSpecification</span><span class="o">(</span><span class="n">specification</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Specification.java</span>
    </div>
</div>
<p>Por cada condición hay una implementación de la interfaz.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specifications</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaBuilder</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaQuery</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.Predicate</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.Root</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IsCheapSpecification</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;,</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">jpa</span><span class="o">.</span><span class="na">domain</span><span class="o">.</span><span class="na">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">priceAttributeName</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsCheapSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsCheapSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">priceAttributeName</span> <span class="o">=</span> <span class="n">Specifications</span><span class="o">.</span><span class="na">getAttributeName</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="s">&#34;price&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">Product</span><span class="o">.</span><span class="na">CHEAP_PRICE</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">getPrice</span><span class="o">())</span> <span class="o">==</span> <span class="n">1</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Predicate</span> <span class="nf">toPredicate</span><span class="o">(</span><span class="n">Root</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">root</span><span class="o">,</span> <span class="n">CriteriaQuery</span><span class="o">&lt;?&gt;</span> <span class="n">query</span><span class="o">,</span> <span class="n">CriteriaBuilder</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">lt</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">priceAttributeName</span><span class="o">),</span> <span class="n">Product</span><span class="o">.</span><span class="na">CHEAP_PRICE</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IsCheapSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specifications</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaBuilder</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaQuery</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.Predicate</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.Root</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.time.LocalDate</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.time.Period</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IsLongTermSpecification</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;,</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">jpa</span><span class="o">.</span><span class="na">domain</span><span class="o">.</span><span class="na">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">dateAttributeName</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsLongTermSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsLongTermSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">dateAttributeName</span> <span class="o">=</span> <span class="n">Specifications</span><span class="o">.</span><span class="na">getAttributeName</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="s">&#34;date&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="o">!</span><span class="n">Period</span><span class="o">.</span><span class="na">between</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">getDate</span><span class="o">(),</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">()).</span><span class="na">minus</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">LONG_TERM_PERIOD</span><span class="o">).</span><span class="na">isNegative</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Predicate</span> <span class="nf">toPredicate</span><span class="o">(</span><span class="n">Root</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">root</span><span class="o">,</span> <span class="n">CriteriaQuery</span><span class="o">&lt;?&gt;</span> <span class="n">query</span><span class="o">,</span> <span class="n">CriteriaBuilder</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">LocalDate</span> <span class="n">longTermDate</span> <span class="o">=</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">minus</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">LONG_TERM_PERIOD</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">lessThan</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">dateAttributeName</span><span class="o">),</span> <span class="n">longTermDate</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IsLongTermSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specifications</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaBuilder</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaQuery</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.Predicate</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.Root</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IsOverstockSpecification</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;,</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">jpa</span><span class="o">.</span><span class="na">domain</span><span class="o">.</span><span class="na">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">priceAttributeName</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsOverstockSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">IsOverstockSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">priceAttributeName</span> <span class="o">=</span> <span class="n">Specifications</span><span class="o">.</span><span class="na">getAttributeName</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="s">&#34;units&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">product</span><span class="o">.</span><span class="na">getUnits</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">Product</span><span class="o">.</span><span class="na">OVERSTOCK_UNITS</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Predicate</span> <span class="nf">toPredicate</span><span class="o">(</span><span class="n">Root</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">root</span><span class="o">,</span> <span class="n">CriteriaQuery</span><span class="o">&lt;?&gt;</span> <span class="n">query</span><span class="o">,</span> <span class="n">CriteriaBuilder</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">gt</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">priceAttributeName</span><span class="o">),</span> <span class="n">Product</span><span class="o">.</span><span class="na">OVERSTOCK_UNITS</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IsOverstockSpecification.java</span>
    </div>
</div>
<p>En el objeto <em>Product</em> se implementa el patrón <em>Visitor</em> con la interfaz <em>Specificable</em> donde cada implementación de la clase <em>Specification</em> trata la lógica y la clase <em>Product</em> solo tiene el método <em>satisfies</em> que invoca a la instancia de <em>specification</em> recibida como parámetro.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Specificable</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">boolean</span> <span class="nf">satisfies</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">object</span><span class="o">);</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Specificable.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specificable</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Entity</span>&#10;<span class="nd">@Table</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">&#34;Product&#34;</span><span class="o">)</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="kd">implements</span> <span class="n">Specificable</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">satisfies</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">specification</span><span class="o">.</span><span class="na">isSatisfied</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Product.java</span>
    </div>
</div>
<p>Para realizar combinaciones con operaciones lógicas <em>and</em>, <em>or</em> o <em>not</em> se utiliza el patrón <em>Composite</em>. De entre las operaciones básicas solo se muestra la operación <em>equals</em>, sería necesario implementar otro tipo de operaciones como <em>lessThan</em>, <em>greaterThan</em>, <em>contains</em> u otras si es necesario.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specifications</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaBuilder</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.CriteriaQuery</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.Predicate</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.persistence.criteria.Root</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.beans.PropertyDescriptor</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">EqualsSpecification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;,</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">jpa</span><span class="o">.</span><span class="na">domain</span><span class="o">.</span><span class="na">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">property</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Object</span> <span class="n">value</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">propertyAttributeName</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">EqualsSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">property</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">(</span><span class="n">property</span><span class="o">,</span> <span class="n">value</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">EqualsSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">property</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="n">String</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">property</span> <span class="o">=</span> <span class="n">property</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">propertyAttributeName</span> <span class="o">=</span> <span class="n">Specifications</span><span class="o">.</span><span class="na">getAttributeName</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="n">property</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PropertyDescriptor</span> <span class="n">descriptor</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PropertyDescriptor</span><span class="o">(</span><span class="n">property</span><span class="o">,</span> <span class="n">Product</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Object</span> <span class="n">v</span> <span class="o">=</span> <span class="n">descriptor</span><span class="o">.</span><span class="na">getReadMethod</span><span class="o">().</span><span class="na">invoke</span><span class="o">(</span><span class="n">product</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">v</span> <span class="o">==</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">v</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">value</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">v</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">value</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">v</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Predicate</span> <span class="nf">toPredicate</span><span class="o">(</span><span class="n">Root</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">root</span><span class="o">,</span> <span class="n">CriteriaQuery</span><span class="o">&lt;?&gt;</span> <span class="n">query</span><span class="o">,</span> <span class="n">CriteriaBuilder</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">equal</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">propertyAttributeName</span><span class="o">),</span> <span class="n">value</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>EqualsSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AndSpecification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;&gt;</span> <span class="n">specifications</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AndSpecification</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">specifications</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">specifications</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">specifications</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">object</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">specifications</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">allMatch</span><span class="o">(</span><span class="n">s</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">s</span><span class="o">.</span><span class="na">isSatisfied</span><span class="o">(</span><span class="n">object</span><span class="o">);</span> <span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AndSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">OrSpecification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;&gt;</span> <span class="n">specifications</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">OrSpecification</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;...</span> <span class="n">specifications</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">specifications</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">specifications</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">object</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">specifications</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">anyMatch</span><span class="o">(</span><span class="n">s</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">s</span><span class="o">.</span><span class="na">isSatisfied</span><span class="o">(</span><span class="n">object</span><span class="o">);</span> <span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>OrSpecification.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">NotSpecification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">specification</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">NotSpecification</span><span class="o">(</span><span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">specification</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">specification</span> <span class="o">=</span> <span class="n">specification</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isSatisfied</span><span class="o">(</span><span class="n">T</span> <span class="n">object</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">!</span><span class="n">specification</span><span class="o">.</span><span class="na">isSatisfied</span><span class="o">(</span><span class="n">object</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>NotSpecification.java</span>
    </div>
</div>
<p>Al implementar el patrón <em>Specification</em> se hace uso de varios patrones:</p>
<ul>
<li>El patrón de diseño <em>Visitor</em>, en el método <em>satisfies</em> de la clase <em>Product</em> realmente se llama al método <em>isSatisfied</em> de la interfaz <em>Specification</em>.</li>
<li>El patrón de diseño <em>Composite</em> en las operaciones lógicas <em>and</em>, <em>or</em> y <em>not</em>. Estas condiciones lógicas de agrupación se componente de otras independientemente de contengan una o varias.</li>
<li>El patrón de diseño <em>Comamnd</em>, se construye la instancia de <em>Specification</em> a ejecutar y el método <em>satisfies</em> lo ejecuta.</li>
<li>El <a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-del-patron-de-diseno-builder/">patrón de diseño <em>Builder</em></a> se utiliza para facilitar la construcción de las condiciones con una API fluida y ocultar las clases concretas que implementan la interfaz <em>Specification</em>. Spring Data lo implementa.</li>
</ul>
<p>La siguiente prueba unitaria muestra con código el uso del patrón <em>Specification</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span><span class="lnt">115&#10;</span><span class="lnt">116&#10;</span><span class="lnt">117&#10;</span><span class="lnt">118&#10;</span><span class="lnt">119&#10;</span><span class="lnt">120&#10;</span><span class="lnt">121&#10;</span><span class="lnt">122&#10;</span><span class="lnt">123&#10;</span><span class="lnt">124&#10;</span><span class="lnt">125&#10;</span><span class="lnt">126&#10;</span><span class="lnt">127&#10;</span><span class="lnt">128&#10;</span><span class="lnt">129&#10;</span><span class="lnt">130&#10;</span><span class="lnt">131&#10;</span><span class="lnt">132&#10;</span><span class="lnt">133&#10;</span><span class="lnt">134&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.time.LocalDate</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.AndSpecification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.NotSpecification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.OrSpecification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.specification.Specification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;<span class="kn">import static</span> <span class="nn">org.junit.jupiter.api.Assertions.*</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.test.util.TestPropertyValues</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationContextInitializer</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.ConfigurableApplicationContext</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.test.context.ContextConfiguration</span><span class="o">;</span>&#10;&#10;<span class="nd">@SpringBootTest</span>&#10;<span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">{</span> <span class="n">ProductSpecificationTest</span><span class="o">.</span><span class="na">Initializer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductSpecificationTest</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testEqualsSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsCheapSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Pin&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.0&#34;</span><span class="o">),</span> <span class="n">50</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsCheapSpecification</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsLongTermSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">minus</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">LONG_TERM_PERIOD</span><span class="o">).</span><span class="na">minusDays</span><span class="o">(</span><span class="n">1</span><span class="o">),</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsLongTermSpecification</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsOverstockSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Pin&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;5.0&#34;</span><span class="o">),</span> <span class="n">50</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsOverstockSpecification</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsCheapAndIsLongTermSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Pin&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">minus</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">LONG_TERM_PERIOD</span><span class="o">).</span><span class="na">minusDays</span><span class="o">(</span><span class="n">1</span><span class="o">),</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.0&#34;</span><span class="o">),</span> <span class="n">50</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">cheapSpecification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsCheapSpecification</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">longTermSpecification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsLongTermSpecification</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AndSpecification</span><span class="o">&lt;&gt;(</span><span class="n">cheapSpecification</span><span class="o">,</span> <span class="n">longTermSpecification</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testAndSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span><span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AndSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">10</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testOrSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">50</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationC</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">50</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationZ</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OrSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specificationA</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specificationB</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertTrue</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specificationC</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertFalse</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specificationZ</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testNotSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span> <span class="n">product</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="s">&#34;Raspberry Pi&#34;</span><span class="o">,</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">(),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">),</span> <span class="n">10</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// and&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">NotSpecification</span><span class="o">&lt;&gt;(</span><span class="k">new</span> <span class="n">AndSpecification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">10</span><span class="o">)));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertFalse</span><span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">satisfies</span><span class="o">(</span><span class="n">specification</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Initializer</span> <span class="kd">implements</span> <span class="n">ApplicationContextInitializer</span><span class="o">&lt;</span><span class="n">ConfigurableApplicationContext</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">initialize</span><span class="o">(</span><span class="n">ConfigurableApplicationContext</span> <span class="n">configurableApplicationContext</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TestPropertyValues</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">applyTo</span><span class="o">(</span><span class="n">configurableApplicationContext</span><span class="o">.</span><span class="na">getEnvironment</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductSpecificationTest.java</span>
    </div>
</div>
<h3 id="implementación-para-jpa-con-spring-data">Implementación para JPA con Spring Data</h3>
<p>El proyecto Spring Data para el acceso a bases de datos con JPA implementa el patrón de diseño <em>Specification</em>, la interfaz <a href="https://docs.spring.io/spring-data/jpa/docs/current/api/org/springframework/data/jpa/repository/JpaSpecificationExecutor.html">JpaSpecificationExecutor</a> añade a los repositorios métodos de búsqueda que reciben un argumento de tipo <a href="https://docs.spring.io/spring-data/jpa/docs/current/api/org/springframework/data/jpa/domain/Specification.html">Specification</a>.</p>
<p>Esta clase <em>Specification</em> transforma las condiciones en un objeto <a href="https://javaee.github.io/javaee-spec/javadocs/javax/persistence/criteria/Predicate.html">Predicate</a> que es el que JPA usa para las condiciones de la consulta SQL que se genera. La interfaz <em>JpaSpecificationExecutor</em> también añade métodos para hacer búsquedas paginadas y con ordenación.</p>
<p>Si en el proyecto se utiliza Spring y JPA esta es la opción recomendada, si no se utiliza Spring o se utiliza otra librería de persistencia distinta a JPA se puede realizar una implementación siguiendo los principios del patrón <em>Specification</em>.</p>
<p>Las clases <em>EqualsSpecification</em>, <em>IsCheapSpecification</em>, <em>IsLongTermSpecification</em>, y <em>IsOverstockSpecification</em> anteriores también implementan la interfaz <em>Specification</em> de Spring Data. Estas clases implementan dos interfaces distintas para diferentes cosas, para hacer comprobaciones sobre un objeto en memoria y para generar clases <em>Predicate</em> con las condiciones equivalentes de JPA, son símplemente ejemplos y para separar conceptos no estaría mal dividir cada clase en dos para que implementen las interfaces de forma individual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.JpaSpecificationExecutor</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Modifying</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.jpa.repository.Query</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.repository.PagingAndSortingRepository</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">ProductRepository</span> <span class="kd">extends</span> <span class="n">PagingAndSortingRepository</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">,</span> <span class="n">Long</span><span class="o">&gt;,</span> <span class="n">JpaSpecificationExecutor</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Modifying</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Query</span><span class="o">(</span><span class="s">&#34;delete from Product&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">deleteAll</span><span class="o">();</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductRepository.java</span>
    </div>
</div>
<p>La siguiente prueba de integración con <a href="https://www.testcontainers.org/">Testcontainers</a>, PostgresSQL y Docker prueba el repositorio con las implementaciones de las clases del patrón <em>Specification</em> para JPA de Spring Data.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span><span class="lnt">85&#10;</span><span class="lnt">86&#10;</span><span class="lnt">87&#10;</span><span class="lnt">88&#10;</span><span class="lnt">89&#10;</span><span class="lnt">90&#10;</span><span class="lnt">91&#10;</span><span class="lnt">92&#10;</span><span class="lnt">93&#10;</span><span class="lnt">94&#10;</span><span class="lnt">95&#10;</span><span class="lnt">96&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.specification</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.DefaultPostgresContainer</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.patronspecification.domain.product.ProductRepository</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">liquibase.pro.packaged.T</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.test.context.SpringBootTest</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.data.jpa.domain.Specification</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.test.context.ContextConfiguration</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.test.context.jdbc.Sql</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;&#10;<span class="kn">import static</span> <span class="nn">org.junit.jupiter.api.Assertions.assertEquals</span><span class="o">;</span>&#10;&#10;<span class="nd">@SpringBootTest</span>&#10;<span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">{</span> <span class="n">DefaultPostgresContainer</span><span class="o">.</span><span class="na">Initializer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductJpaSpecificationTest</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductRepository</span> <span class="n">productRepository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsCheapSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsCheapSpecification</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsLongTermSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsLongTermSpecification</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testIsOverstockSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IsOverstockSpecification</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testAndSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">).</span><span class="na">and</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">))).</span><span class="na">and</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">10</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testOrSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">))).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">))).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationC</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">))).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">50</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specificationZ</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;0.0&#34;</span><span class="o">))).</span><span class="na">or</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specificationA</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specificationB</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specificationC</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specificationZ</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Test</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Sql</span><span class="o">(</span><span class="s">&#34;/sql/products.sql&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">testNotSpecification</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Specification</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">specification</span> <span class="o">=</span> <span class="n">Specification</span><span class="o">.</span><span class="na">not</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">).</span><span class="na">and</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;price&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;80.0&#34;</span><span class="o">))).</span><span class="na">and</span><span class="o">(</span><span class="k">new</span> <span class="n">EqualsSpecification</span><span class="o">(</span><span class="s">&#34;units&#34;</span><span class="o">,</span> <span class="n">50</span><span class="o">)));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">assertEquals</span><span class="o">(</span><span class="n">7</span><span class="o">,</span> <span class="n">productRepository</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">specification</span><span class="o">).</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">Specification</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="nf">equalsSpecification</span><span class="o">(</span><span class="n">String</span> <span class="n">property</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">(</span><span class="n">root</span><span class="o">,</span> <span class="n">query</span><span class="o">,</span> <span class="n">criteriaBuilder</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">criteriaBuilder</span><span class="o">.</span><span class="na">equal</span><span class="o">(</span><span class="n">root</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">),</span> <span class="s">&#34;Raspberry Pi&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductJpaSpecificationTest.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="k">delete</span><span class="w"> </span><span class="k">from</span><span class="w"> </span><span class="n">Product</span><span class="p">;</span><span class="w">&#10;</span><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Pin&#39;</span><span class="p">,</span><span class="w"> </span><span class="n">to_date</span><span class="p">(</span><span class="s1">&#39;2010/01/01&#39;</span><span class="p">,</span><span class="s1">&#39;YYYY/MM/DD&#39;</span><span class="p">),</span><span class="w"> </span><span class="mi">1</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">50</span><span class="p">);</span><span class="w">&#10;</span><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Raspberry Pi&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">80</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Intel NUC&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">400</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;PlayStation 4&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">350</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;BenQ&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">330</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Amazon Kindle&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">130</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span><span class="w"></span><span class="k">insert</span><span class="w"> </span><span class="k">into</span><span class="w"> </span><span class="n">Product</span><span class="w"> </span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="nb">date</span><span class="p">,</span><span class="w"> </span><span class="n">price</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="p">)</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;Fleck Duo 7 50&#39;</span><span class="p">,</span><span class="w"> </span><span class="k">CURRENT_DATE</span><span class="p">,</span><span class="w"> </span><span class="mi">330</span><span class="p">.</span><span class="mi">00</span><span class="p">,</span><span class="w"> </span><span class="mi">10</span><span class="p">);</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>products.sql</span>
    </div>
</div>
<p>En la salida de los teses se muestran la traducción de los objetos <em>specification</em> a las condiciones de las consultas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=10 and product0_.price=80.0 and product0_.name=?&#10;Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.price&lt;5.00&#10;Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.date&lt;?&#10;Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=0 or product0_.price=0.0 or product0_.name=?&#10;Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=0 or product0_.price=80.0 or product0_.name=?&#10;Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=50 or product0_.price=0.0 or product0_.name=?&#10;Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units=0 or product0_.price=0.0 or product0_.name=?&#10;Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units&gt;25&#10;Hibernate: select product0_.id as id1_0_, product0_.date as date2_0_, product0_.name as name3_0_, product0_.price as price4_0_, product0_.units as units5_0_ from product product0_ where product0_.units&lt;&gt;50 or product0_.price&lt;&gt;80.0 or product0_.name&lt;&gt;?</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>Otra de las funcionalidades proporcionadas por Spring Data es hacer <a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#query-by-example">consultas basadas en un objeto ejemplo</a> o <em>query by example</em>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PatronSpecification">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradew test</code></p>
</div>
<p>Referencia:</p>
<ul>
<li><a href="https://www.mscharhag.com/java/specification-pattern-in-java-jpa">Java: Using the specification pattern with JPA</a></li>
<li><a href="https://dzone.com/articles/specification-pattern-quickly">How to Use the Specification Pattern in Java</a></li>
<li><a href="https://spring.io/blog/2011/04/26/advanced-spring-data-jpa-specifications-and-querydsl/">Advanced Spring Data JPA - Specifications and Querydsl</a></li>
<li><a href="https://dzone.com/articles/using-spring-data-jpa-specification">Using Spring Data JPA Specification</a></li>
<li><a href="https://www.baeldung.com/rest-api-search-language-spring-data-specifications">REST Query Language with Spring Data JPA Specifications</a></li>
<li><a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#specifications">Spring Data JPA - Reference Documentation, Specification</a></li>
</ul>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>