<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/planeta-codigo/</id>
    <updated>2021-11-25T20:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/</id>
        <title>Configurar HTTP/2 en Nginx, Apache HTTPD, WildFly o Jetty</title>
        <updated>2016-02-26T19:00:00+01:00</updated>
        <published>2016-02-26T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>HTTP/2 se puede usar ya, los principales navegadores web, servidores web y de aplicaciones ya han añadido el soporte necesario ofreciendo varias ventajas para los usuarios, desarrolladores, dispositivos cliente y los servidores. En varios de los servidores más populares la configuración necesaria no es complicada.</strong></p>]]>
        <![CDATA[<p>HTTP/2 es el protocolo que ha surgido para mejorar la experiencia de navegación de la web, proporcionará menos latencia y más velocidad siendo más eficiente. En la <a href="https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/">introducción al protocolo HTTP/2</a> comentaba de que necesidad surge, sus ventajas, alguna diferencia con HTTP 1.1, varias cosas que los desarrolladores hacíamos que quedarán obsoletas y otras varias que deberemos seguir haciendo. Se pubicó oficialmente en 2015 y los principales navegadores como <a href="https://www.mozilla.org/es-ES/firefox/new/">Mozilla Firefox</a>, <a href="https://www.google.es/chrome/browser/desktop/">Google Chrome</a> y <a href="https://www.microsoft.com/es-es/windows/microsoft-edge/">Microsoft Edge</a> ya lo soportan.</p>
<p>En el lado del servidor varios servidores web también han incluido el soporte para HTTP/2, entre ellos <a href="https://nginx.org/">Nginx</a>, <a href="https://httpd.apache.org/">Apache HTTPD</a>, <a href="https://wildfly.org/">WildFly</a> y <a href="https://eclipse.org/jetty/">Jetty</a>. Tomcat añadirá el soporte en la versión 9 cuando se publique las especificación de Servlets 4.0 con el soporte de HTTP/2, este soporte necesitará de ALPN que se incluirá en la versión 9 del JDK con lo que en el momento de publicar este artículo todavía quedarán varios meses. Para usar HTTP/2 en Nginx, Apache HTTPD, WildFly y Jetty debemos hacer algunos cambios en sus configuraciones.</p>
<p>Para usar HTTP/2 los navegadores Mozilla Firefox, Google Chrome y Microsoft Edge han anunciado que se necesitará cifrado, por lo tanto deberemos añadir el <a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">soporte para TLS/SSL en el servidor</a> previamente.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="configurar-http2-en-nginx">Configurar HTTP/2 en Nginx</h3>
<p>En Nginx es muy sencillo, deberemos modificar el archivo de configuración <em>default.conf</em> para que quede de forma similar a la siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">server {&#10;&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;&nbsp;&nbsp;&nbsp;   80;&#10;&nbsp;&nbsp;&nbsp;&nbsp;server_name  localhost;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;location / {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 301 https://$host$request_uri;&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;}&#10;&#10;server {&#10;&nbsp;&nbsp;&nbsp;&nbsp;listen 443 ssl http2 default_server;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;ssl_certificate&nbsp;&nbsp;&nbsp;&nbsp;localhost.crt;&#10;&nbsp;&nbsp;&nbsp;&nbsp;ssl_certificate_key localhost.key;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;location / {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root   /usr/share/nginx/html;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index  index.html index.htm;&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;# redirect server error pages to the static page /50x.html&#10;&nbsp;&nbsp;&nbsp;&nbsp;#&#10;&nbsp;&nbsp;&nbsp;&nbsp;error_page   500 502 503 504  /50x.html;&#10;&nbsp;&nbsp;&nbsp;&nbsp;location = /50x.html {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root   /usr/share/nginx/html;&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>default.conf</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/images/http2-nginx_hu9389785edf4602afc757d66aceb16de8_86825_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="HTTP/2 en Nginx"><img src="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/images/http2-nginx_hu9389785edf4602afc757d66aceb16de8_86825_300x200_fit_box_3.png" width="244" height="200" alt="HTTP/2 en Nginx" title="HTTP/2 en Nginx"  class="lozad "></a></p>
</figure>
</div>
<h3 id="configurar-http2-en-apache-httpd">Configurar HTTP/2 en Apache HTTPD</h3>
<p>En Apache HTTPD deberemos instalar el <a href="https://www.archlinux.org/packages/extra/x86_64/nghttp2/">paquete nghttp2</a> de nuestra distribución. y usar el módulo <em>mod_http2.so</em> junto con <em>mod_ssl.so</em> para el cifrado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">LoadModule http2_module modules/mod_http2.so&#10;LoadModule ssl_module modules/mod_ssl.so&#10;&#10;...&#10;&#10;Listen 443&#10;&#10;&lt;VirtualHost *:443&gt;&#10;&nbsp;&nbsp;&nbsp;&nbsp;ServerName localhost&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;SSLEngine on&#10;&nbsp;&nbsp;&nbsp;&nbsp;SSLCertificateFile localhost.crt&#10;&nbsp;&nbsp;&nbsp;&nbsp;SSLCertificateKeyFile localhost.key&#10;&nbsp;&nbsp;&nbsp;&nbsp;Protocols h2 http/1.1&#10;&lt;/VirtualHost&gt;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>httpd-default.conf</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/images/http2-httpd_huf92d904a434046ad27c310f0fe53e325_72029_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="HTTP/2 en Apache HTTPD"><img src="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/images/http2-httpd_huf92d904a434046ad27c310f0fe53e325_72029_300x200_fit_box_3.png" width="248" height="200" alt="HTTP/2 en Apache HTTPD" title="HTTP/2 en Apache HTTPD"  class="lozad "></a></p>
</figure>
</div>
<h3 id="configurar-http2-en-wildfly">Configurar HTTP/2 en WildFly</h3>
<p>El WildFly deberemos descargar un archivo jar que ofrece el soporte para la negociación de protocolo,
<abbr title="Application-Layer Protocol Negotiation">ALPN</abbr>, según la versión del JDK que usemos de <a href="http://central.maven.org/maven2/org/mortbay/jetty/alpn/alpn-boot/">Maven Central</a>. Modificamos el archivo de configuración <em>bin/standalone.conf</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">if [ &#34;x$JAVA_OPTS&#34; = &#34;x&#34; ]; then&#10;   JAVA_OPTS=&#34;-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true -Xbootclasspath/p:./alpn-boot-8.1.7.v20160121.jar&#34;&#10;   JAVA_OPTS=&#34;$JAVA_OPTS -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS -Djava.awt.headless=true&#34;&#10;else&#10;   echo &#34;JAVA_OPTS already set in environment; overriding default settings with values: $JAVA_OPTS&#34;&#10;fi</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>standalone.conf</span>
    </div>
</div>
<p>Y el archivo <em>standalone/configuration/standalone.xml</em> añadimos un nuevo listener para el subsistema de <a href="https://undertow.io/">undertow</a> con HTTP/2 habilitado y un Realm asociado para usar TLS/SSL.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-XML" data-lang="XML">...&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nt">&lt;subsystem</span> <span class="na">xmlns=</span><span class="s">&#34;urn:jboss:domain:undertow:3.0&#34;</span><span class="nt">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;buffer-cache</span> <span class="na">name=</span><span class="s">&#34;default&#34;</span><span class="nt">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;server</span> <span class="na">name=</span><span class="s">&#34;default-server&#34;</span><span class="nt">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;http-listener</span> <span class="na">name=</span><span class="s">&#34;default&#34;</span> <span class="na">socket-binding=</span><span class="s">&#34;http&#34;</span> <span class="na">redirect-socket=</span><span class="s">&#34;https&#34;</span><span class="nt">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nt">&lt;https-listener</span> <span class="na">name=</span><span class="s">&#34;default-https&#34;</span> <span class="na">socket-binding=</span><span class="s">&#34;https&#34;</span> <span class="na">security-realm=</span><span class="s">&#34;ApplicationRealm&#34;</span> <span class="na">enable-http2=</span><span class="s">&#34;true&#34;</span><span class="nt">/&gt;</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>standalone.xml</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/images/http2-wildfly_hu22f901619a918dd5dbb507157638c0f8_171255_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="HTTP/2 en WildFly"><img src="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/images/http2-wildfly_hu22f901619a918dd5dbb507157638c0f8_171255_300x200_fit_box_3.png" width="189" height="200" alt="HTTP/2 en WildFly" title="HTTP/2 en WildFly"  class="lozad "></a></p>
</figure>
</div>
<h3 id="configurar-http2-en-jetty">Configurar HTTP/2 en Jetty</h3>
<p>Dependiendo de la versión de Java, usaremos el módulo alpn adecuado, en el momento de escribir este artículo con la versión 1.8.0_74 del <a href="https://openjdk.java.net/">OpenJDK</a>, <em>modules/alpn-impl/alpn-1.8.0_74.mod</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">[name]&#10;protonego-boot&#10;&#10;[files]&#10;http://central.maven.org/maven2/org/mortbay/jetty/alpn/alpn-boot/8.1.7.v20160121/alpn-boot-8.1.7.v20160121.jar|lib/alpn/alpn-boot-8.1.7.v20160121.jar&#10;&#10;[exec]&#10;-Xbootclasspath/p:lib/alpn/alpn-boot-8.1.7.v20160121.jar</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>alpn-1.8.0_74.mod</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ java -jar start.jar --add-to-startd<span class="o">=</span>https,http2&#10;$ java -jar start.jar&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>jetty.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/images/http2-jetty_hucb49276491e26346854b521f5ae95467_83310_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="HTTP/2 en Jetty"><img src="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/images/http2-jetty_hucb49276491e26346854b521f5ae95467_83310_300x200_fit_box_3.png" width="300" height="200" alt="HTTP/2 en Jetty" title="HTTP/2 en Jetty"  class="lozad "></a></p>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.nginx.com/blog/nginx-1-9-5/">NGINX Open Source 1.9.5 Released with HTTP/2 Support</a></li>
<li><a href="http://www.eclipse.org/jetty/documentation/current/alpn-chapter.html">Jetty ALPN</a></li>
<li><a href="http://central.maven.org/maven2/org/mortbay/jetty/alpn/alpn-boot/8.1.7.v20160121/">Maven ALPN</a></li>
<li><a href="http://undertow.io/blog/2015/03/26/HTTP2-In-Wildfly.html">Using HTTP2 With Wildfly 9.0.0.Beta1</a></li>
<li><a href="https://docs.jboss.org/author/display/WFLY10/Security&#43;Realms">WildFly Security Realms</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/</id>
        <title>Cifrar unidad USB completamente con dm-crypt y LUKS en GNU/Linux</title>
        <updated>2016-02-26T18:00:00+01:00</updated>
        <published>2016-02-26T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>¿Has perdido alguna vez una memoria USB? ¿sí, aún no? ¿qué datos contenía? Muy posiblemente son varias las memorias USB que tenemos, por su poco tamaño y cada vez mayor capacidad incluso llevaremos alguna en la cartera siempre con nosotros. Si quieres mantener a salvo los datos en caso de pérdida hay varias opciones, una para esta necesidad es cifrar completamente la unidad con dm-crypt junto con LUKS+Ext4 en GNU/Linux. Suena muy técnico pero es muy sencillo usando la aplicación Discos de GNOME y la seguridad de nuestra información aumentará notablemente.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Seguro que tienes varias memorias USB o discos duros externos con los que transportar información de un sitio a otro o como copia de seguridad. No sería extraño perder alguna de esas unidades en una biblioteca, universidad, aeropuerto, vía pública, metro, &hellip; con toda la información que contengan como fotos y documentos con información personal accesible por cualquier persona que se encuentre esa unidad. Si queremos evitar este posible caso de que al perder la unidad USB que al final es lo de menos ya que se puede sustituir fácilmente toda la información este accesible podemos cifrar su contenido. Hay varias formas una <a href="https://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html">cifrando con GPG archivos individuales</a>, <a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/">cifrando con EncFS ciertas carpetas</a> y varios archivos a la vez o la unidad completa con <a href="https://wiki.archlinux.org/index.php/Dm-crypt">dm-crypt</a> que será el caso de este artículo.</p>
<p>Usar GPG es incómodo si necesitamos cifrar múltiples archivos como sería el caso de una memoria USB, EncFS requiere introducir un comando para montar el sistema de archivos cifrado y no obligaremos a que todos los archivos estén cifrados, usando dm-crypt el sistema nos preguntará por la clave de cifrado al conectar la unidad USB y se encargará de hacer el cifrado y descifrado de forma automática y transparente, nosotros trabajaremos con los archivos y sus aplicaciones con normalidad sin ninguna necesidad especial. Además, no es complicado inicializar la unidad USB para que su contenido esté cifrado usando la <a href="https://es.wikipedia.org/wiki/GNOME_Disks">aplicación Discos de GNOME</a>.</p>
<p>Deberemos formatear la unidad por lo que previamente deberemos hacer una copia de seguridad de su contenido para no perderlo, en teoría desde Nautilus se puede hacer pero en mis pruebas me indicaba un error que usando la aplicación Discos no se produce.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Error synchronizing after initial wipe: Timed out waiting for object (udisks-error-quark, 0)&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>error.txt</span>
    </div>
</div>
<p>Iniciada la aplicación Discos e identificada y seleccionada la unidad USB que queremos cifrar usando el botón con el icono de una rueda dentada hacemos clic en la opción formatear partición. Se abrirá un diálogo emergente donde podremos seleccionar el sistema de archivos con el que queremos formatear la unidad, seleccionamos LUKS+Ext4, formato lento e introducimos una contraseña con cierta fortaleza que deberemos recordar (de longitud 8 o más que contenga letras en mayúsculas, minúsculas, números y símbolos como «!&quot;·$%&amp;/()=^*,.-;:_»). El formateo lento tardará más o menos tiempo dependiendo de la capacidad de la unidad pero es aconsejable realizarlo para evitar que con <a href="https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/">herramientas de recuperación de archivos como Foremost</a> alguien pueda extraer algún tipo de documento usándola a pesar de en teoría haber sido eliminado, otra forma de evitarlo es <a href="https://picodotdev.github.io/blog-bitix/2016/03/como-eliminar-de-forma-segura-archivos-con-wipe-y-dd-en-gnu-linux/">eliminar ciertos o todos los archivos de forma segura</a>. En una unidad sin cifrar es sorprendente la cantidad de archivos que se puede recuperar usando <a href="https://wiki.archlinux.org/index.php/Foremost">Foremost</a> de los que en algún momento estuvieron.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/discos_hu3135568082e17d239e3100be9a4fc173_67669_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Aplicación Discos de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/discos_hu3135568082e17d239e3100be9a4fc173_67669_300x200_fit_box_3.png" width="231" height="200" alt="Aplicación Discos de GNOME" title="Aplicación Discos de GNOME"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/opciones-formato_hu7551938eb59310a3fc6f034783853c1e_30403_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Opciones formateo unidad"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/opciones-formato_hu7551938eb59310a3fc6f034783853c1e_30403_300x200_fit_box_3.png" width="285" height="200" alt="Opciones formateo unidad" title="Opciones formateo unidad"  class="lozad "></a></p>
</figure>
</div>
<p>Formateada la unidad con LUKS+Ext4 al conectarla al equipo o montarla el entorno de escritorio nos preguntará por la contraseña con un diálogo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/contrasena_hu462b04d32f07aaac78ff1c7af741b59f_27270_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diálogo solicitud contraseña"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/contrasena_hu462b04d32f07aaac78ff1c7af741b59f_27270_300x200_fit_box_3.png" width="300" height="179" alt="Diálogo solicitud contraseña" title="Diálogo solicitud contraseña"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/unidad-cifrada_hub794a011a1e5de44731af827bcf93591_6995_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Unidad cifrada en Nautilus"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/unidad-cifrada_hub794a011a1e5de44731af827bcf93591_6995_300x200_fit_box_3.png" width="290" height="127" alt="Unidad cifrada en Nautilus" title="Unidad cifrada en Nautilus"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/unidad-descifrada_hu0dac15f2dd7e4763b31472da8db73bc3_6210_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Unidad BMOVE ROJO descifrada en Nautilus"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/images/unidad-descifrada_hu0dac15f2dd7e4763b31472da8db73bc3_6210_300x200_fit_box_3.png" width="290" height="127" alt="Unidad BMOVE ROJO descifrada en Nautilus" title="Unidad BMOVE ROJO descifrada en Nautilus"  class="lozad "></a></p>
</figure>
</div>
<p>Introducida la contraseña veremos los archivos originales y podremos trabajar con ellos con normalidad como si no estuviesen cifrados. En la <a href="https://wiki.archlinux.org/">wiki de Arch Linux</a> hay varios artículos explicando en que consiste dm-crypt y los comandos que deberíamos usar desde la terminal, los artículos en el apartado de referencia del final de este artículo. Cifrar la unidad completamente con cm-crypt y LUKS+Ext4 es perfectamente compatible con usar EncFS, es decir, podemos usar dm-crypt en la unidad y en ella que ya está cifrada <a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/">almacenar un sistema de archivos también cifrado con EncFS</a>.</p>
<p>Son increíbles las opciones que uno va descubriendo del software libre de GNU/Linux y esta es una con la que haremos nuestras unidades USB y los preciados datos que contienen bastante más seguras y a salvo en caso de pérdida o robo. Y esto es solo una muestra, con dm-crypt es posible hacer muchas más cosas que con curiosidad puedes descubrir en la wiki de Arch Linux.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/">Cómo recuperar archivos eliminados o de una unidad corrupta en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/">Cifrar archivos con EncFS en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/como-eliminar-de-forma-segura-archivos-con-wipe-y-dd-en-gnu-linux/">Cómo eliminar de forma segura archivos con wipe en GNU/Linux</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Dm-crypt/Encrypting_a_non-root_file_system">Encrypting a non-root file system</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Dm-crypt">Dm-crypt</a></li>
<li><a href="https://wiki.archlinux.org/index.php/disk_encryption">Disk encryption</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Dm-crypt/Drive_preparation">Drive preparation</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption">Device encryption</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/</id>
        <title>Introducción al protocolo HTTP/2</title>
        <updated>2016-02-26T21:10:00+01:00</updated>
        <published>2016-02-20T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La tecnología avanza inexorablemente respondiendo a nuevas necesidades o mejor a las existentes. El protocolo HTTP se ha mantenido sin grandes cambios durante más de 15 años, sin embargo, para reducir las latencias en la carga de las páginas y ser más eficiente se ha desarrollado una nueva especificación que ya promete reducir estos problemas. HTTP/2 no es compatible hacia atrás pero se puede usar junto con HTTP 1.1 y los dispositivos que usen aprovecharse de sus ventajas. Los navegadores más populares ya lo han implementado y los servidores web o de aplicaciones ya ofrecen soporte para ser usado.</strong></p>]]>
        <![CDATA[<p>La velocidad de carga de una web en el navegador es importante, tanto que añadir unos pocos cientos de milisegundos en un sitio de comercio electrónico afecta en un porcentaje significativo el abandono, la conversión y en definitiva las compras que se realizan. Un tiempo de más de 100ms ya es percibido por los usuarios. Por este motivo además Google lo tiene en cuenta a la hora del posicionamiento en su buscador, con lo que mejorar y tener un tiempo de carga bajo de las páginas producirá más compras y más visitas por tráfico orgánico que se traducirá también en más compras.</p>
<p>Desde hace quince años el protocolo usado para la transferencia desde el servidor al navegador del HTML, CSS, JavaScript, imágenes y demás recursos de la página ha sido el <a href="https://es.wikipedia.org/wiki/Hypertext_Transfer_Protocol">protocolo de transferencia de hypertexto</a> o HTTP. Con el cada vez mayor ancho de banda que ofrece mayores velocidades de transferencia de los dispositivos conectados a internet el tiempo de carga de una página ha dejado de estar tan limitado por la velocidad de transferencia a ser la latencia una parte importante del tiempo. Con el objetivo de disminuir la latencia y el tiempo de carga de las páginas se publicó primero el protocolo <a href="https://es.wikipedia.org/wiki/SPDY">SPDY</a> y posteriormente basado en él HTTP/2 en mayo de 2015 con varias mejoras.</p>
<p>HTTP/2 no mofidifica la semántica de protocolo HTTP con lo que los conceptos de métodos HTTP, códigos de estado, URIs y cabeceras siguen siendo los mismos. Algunas de las mejoras que ofrece son:</p>
<ul>
<li>Multiplexación y concurrencia: solo es necesaria una conexión <abbr title="Transmission Control Protocol">TCP</abbr> para enviar todos los recursos de la página, además la transmisión de varios recursos es posible que sea simultánea sin necesidad de que termine una para iniciar otra lo que evita el problema <em>head-of-line blocking</em> de HTTP 1.1 que era ordenado y bloqueante.</li>
<li>Descarga de dependencias: el cliente puede priorizar los recursos.</li>
<li>Compresión de cabeceras: para reducir la sobrecarga de las cabeceras en cada petición se consigue de dos formas, usando un algoritmo de compresión y evitando enviarlas según los valores anteriores transmitidos.</li>
<li>Envío desde el servidor: el servidor proactivamente puede enviar recursos al cliente para que sean cacheados.</li>
</ul>
<p>Una diferencia que lo hace incompatible hacia atrás es que es binario pero se puede usar junto con la versión anterior y cuando se establezca la conexión negociando el protocolo elegir el mejor según las características de ambas partes, los protocolos binarios son más eficientes de procesar, más compactos e igual de importante menos propensos a errores comparados los los basados en texto.</p>
<p>Establecer una conexión TCP requiere 3 paquetes entre el cliente y servidor reduciendo el número de ellas la latencia baja. Si la distancia entre el cliente y el servidor es lejana simplemente por cuestiones físicas de la velocidad a la que viaja la luz o los impulsos eléctricos, la latencia entre ellos estando situados en las antípodas es de unos 300-400ms (por paquete). Simplemente con la multiplexación y la concurrencia se reduce considerablemente esta sobrecarga en la transmisión al evitar tener que establecer varias conexiones. Además, tiene otras mejoras para los desarrolladores y hace innecesarias algunas de las optimizaciones que se realizaban con HTTP 1.1, como:</p>
<ul>
<li>Ya no es necesario concatenar ficheros eliminado el problema <em>head-of-line blocking</em> y pudiendo transmitir varios ficheros simultáneamente.</li>
<li>Ya no es necesario incluir el contenido de estilos, imágenes y JavaScript junto con el HTML para evitar conexiones TCP adicionales, igual que en la concatenación de ficheros.</li>
<li>Ya no es necesario usar múltiples dominios para paralelizar la descarga.</li>
</ul>
<p>Algunas prácticas de optimización siguen siendo utilizables:</p>
<ul>
<li>Reducir consultas <abbr title="Domain Name System">DNS</abbr> por la latencia de envío de paquetes.</li>
<li>Seguir usando redes de descarga de contenido o <abbr title="Content Delivery Network">CDN</abbr>, cuanto más cercano esté el servidor del cliente menor será la latencia impuesta por las leyes físicas.</li>
<li>Seguir usando la caché del cliente evitando retransmitir el recurso.</li>
<li>Minimizar el contenido de los recursos, menor será las cantidad de datos a transmitir y procesar.</li>
<li>Eliminar redirecciones innecesarias.</li>
</ul>
<p>Aunque para usar HTTP/2 no es necesario usar cifrado <abbr title="Transport Layer Security ">TLS</abbr> los navegadores <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a>, <a href="https://www.microsoft.com/es-es/windows/microsoft-edge/">Microsoft Edge</a> y <a href="https://www.google.es/chrome/browser/desktop/">Google Chrome</a> han anunciado que en sus implementaciones solo lo soportarán si se usa con cifrado TLS.</p>
<p>En un capítulo del libro  <a href="http://chimera.labs.oreilly.com/books/1230000000545/ch12.html">High Performance Browser Networking</a>, en <a href="https://bagder.gitbooks.io/http2-explained/content/es/index.html">HTTP/2 explicado</a> y en la sección de referencia del final del artículo se detallan más los conceptos del protocolo HTTP/2.</p>
<p>En definitiva el protocolo HTTP/2 supone una mejora de rendimiento para los clientes y optimización de recursos tanto para los clientes como para los servidores. Ya está implementado por los navegadores más populares y añadiendo el soporte en lado del servidor los clientes compatibles se beneficiarán de él.</p>
<p>En el siguiente artículo comentaré cómo poner esto en práctica y <a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/">configurar HTTP/2 con el servidor web Nginx, Apache HTTPD y el servidor de aplicaciones Java WildFly o Jetty</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/HTTP/2">HTTP/2</a></li>
<li><a href="https://es.wikipedia.org/wiki/Hypertext_Transfer_Protocol">HTTP</a></li>
<li><a href="https://http2.github.io/faq/">HTTP/2 FAQ</a></li>
<li><a href="http://chimera.labs.oreilly.com/books/1230000000545/ch12.html">High Performance Browser Networking - HTTP/2</a></li>
<li><a href="https://bagder.gitbooks.io/http2-explained/content/es/index.html">Libro HTTP/2 explicado</a></li>
<li><a href="https://blog.cloudflare.com/introducing-http2/">Introducing HTTP/2</a></li>
<li><a href="https://www.cloudflare.com/http2/">CloudFlare HTTP/2</a></li>
<li><a href="https://blog.cloudflare.com/http-2-for-web-developers/">HTTP/2 For Web Developers</a></li>
<li><a href="https://blog.cloudflare.com/tools-for-debugging-testing-and-using-http-2/">Tools for debugging, testing and using HTTP/2</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">Configurar SSL/TLS en un servidor Tomcat, JBoss, WildFly, Lighttpd, Nginx o Apache</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/</id>
        <title>Cifrar archivos con EncFS en GNU/Linux</title>
        <updated>2016-02-22T21:00:00+01:00</updated>
        <published>2016-02-19T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Hacer copias de seguridad es una buena práctica para evitar perder información en caso de que por ejemplo un disco duro se nos estropee. Cifrar la información o al menos parte de ella como las contraseñas (si las guardamos en un archivo de texto) también es una buena práctica por si perdemos una memoria USB, nos roban en un lugar público o en nuestro domicilio un disco duro o un portátil o los extraviamos en algún viaje. Una forma sencilla para proteger su contenido cifrando múltiples archivos es EncFS.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Nuestros datos es una de las cosas más importantes que podemos perder o nos pueden robar, más que el dispositivo que los contiene ya que este es fácilmente reemplazable no así los datos. La pérdida de datos puede ser porque se nos ha estropeado el disco duro y ha quedado completamente inaccesible, para evitar la pérdida de datos conviene <a href="https://elblogdepicodev.blogspot.com.es/2013/05/copia-de-seguridad-con-rsync.html">realizar copias de seguridad</a> regularmente de las que recuperar los datos perdidos en caso de necesidad. También nos puede ocurrir que perdamos una memoria USB o peor aún nos roben en nuestro propio domicilio y nos extraigan entre otras cosas el portátil o un disco duro. Los productos de electrónica son objetivos apreciados por los ladrones por su valor, por su demanda que los hacen fácilmente colocables en el mercado y por su poco volumen.</p>
<p>En GNU/Linux podemos proteger nuestros datos de múltiples formas de una memoria USB, de un portátil o disco duro externo. Una de ellas es <a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/">cifrando completamente el sistema de archivos</a> con lo que todos los datos que contuviese estarán protegidos. Otra forma es <a href="https://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html">cifrar ciertos archivos con información sensible con GPG</a> como contraseñas, una solución menos invasiva y más compatible con otros sistemas que cifrar completamente el sistema de archivos, no muy complicada pero en la que debemos cifrar cada archivo individualmente. Para evitar cifrar/descifrar cada archivo individualmente y manualmente con GPG podemos usar <a href="https://wiki.archlinux.org/index.php/EncFS">EncFS</a>. EncFS es un sistema de archivos que podemos montar y cifrará el contenido de todos los archivos que incluyamos en él.</p>
<p>Con EncFS el contenido de los archivos y sus nombres serán cifrados aunque su tamaño, fechas de modificación y estructura de carpetas seguirá siendo visible. Aunque sin sus nombres originales el tamaño, fechas y estructura de carpetas ya es algo indicativo y por tanto para algunas necesidades no es suficiente la seguridad que proporciona.</p>
<p>Para usar EncFS debemos instalar su paquete, en <a href="https://www.archlinux.org/">Arch Linux</a> con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -S encfs&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.sh</span>
    </div>
</div>
<p>Instalado el paquete y con el comando <code>encfs</code> indicamos el directorio donde se almacenará el sistema de archivos cifrado y el directorio donde EncFS montará el sistema de archivos sin cifrar, la primera vez que lo usemos nos pedirá la contraseña con la que el sistema de archivos se cifrará que deberemos recordar ya que nos la pedirá cada vez que montemos el sistema de archivos cifrado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ encfs -f <span class="o">[</span>directorio cifrado<span class="o">]</span> <span class="o">[</span>directorio montaje <span class="o">(</span>sin cifrar<span class="o">)]</span>&#10;$ encfs -f cifrado/ descifrado/&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>encfs.sh</span>
    </div>
</div>
<div class="media">
<script type="text/javascript" src="https://asciinema.org/a/36852.js" id="asciicast-36852" async></script>
<noscript><a href="https://asciinema.org/a/36852" target="_blank"><img src="https://asciinema.org/a/36852.png" width="650" height="450"></a></noscript>
</div>
<p>Montado el sistema de archivos veremos que en el explorador de archivos se ha montado una unidad con el nombre del directorio sin cifrar que hemos indicado, como se aprecia en el caso de Nautilus.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/images/sistema-archivos-descifrados_huee92fa96ad94c91ffbc0e14d64d1dc98_27549_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Sistema de archivos montado y descifrado"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/images/sistema-archivos-descifrados_huee92fa96ad94c91ffbc0e14d64d1dc98_27549_300x200_fit_box_3.png" width="300" height="183" alt="Sistema de archivos montado y descifrado" title="Sistema de archivos montado y descifrado"  class="lozad "></a></p>
</figure>
</div>
<p>La opción <em>-f</em> sirve para usar EncFS en primer plano, si lo usamos de esta forma se quedará esperando hasta que lo finalicemos con <em>Ctrl-C</em> momento en el que desmontará automáticamente la unidad. Cuando queramos desmontar el sistema de archivos otra opción es el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ fusermount -u <span class="o">[</span>directorio sin cifrar<span class="o">]</span>&#10;$ fusermount -u descifrado/&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>fusermount.sh</span>
    </div>
</div>
<p>Montado el sistema de archivos en primer o segundo plano podremos trabajar con los archivos normalmente y EncFS irá cifrando su contenido y nombres de archivos de forma transparente en el directorio de archivos cifrados. Añadiendo algún archivo este podría ser el contenido del directorio de archivos cifrados.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/images/sistema-archivos-cifrados_hu939c6f6be665dd7f1e1b685686a6e1d9_39233_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Sistema de archivos cifrado"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/images/sistema-archivos-cifrados_hu939c6f6be665dd7f1e1b685686a6e1d9_39233_300x200_fit_box_3.png" width="300" height="183" alt="Sistema de archivos cifrado" title="Sistema de archivos cifrado"  class="lozad "></a></p>
</figure>
</div>
<p>Por supuesto, el contenido de un archivo cifrado será completamente ininteligible consiguiendo nuestro objetivo de que nuestros datos estén a salvo y protegidos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/images/contenido-archivo-descifrado_hucd51b3d9b2fe9c447c54add6d3810a5f_16415_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Contenido de un archivo de texto"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/images/contenido-archivo-descifrado_hucd51b3d9b2fe9c447c54add6d3810a5f_16415_300x200_fit_box_3.png" width="300" height="127" alt="Contenido de un archivo de texto" title="Contenido de un archivo de texto"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/images/contenido-archivo-cifrado_huf84c944abe6cc268efe4e0c6b6d2ca4e_23212_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Contenido del archivo de texto cifrado"><img src="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/images/contenido-archivo-cifrado_huf84c944abe6cc268efe4e0c6b6d2ca4e_23212_300x200_fit_box_3.png" width="300" height="127" alt="Contenido del archivo de texto cifrado" title="Contenido del archivo de texto cifrado"  class="lozad "></a></p>
</figure>
</div>
<p>En el <a href="https://wiki.archlinux.org/index.php/EncFS">artículo de EncFS de la wiki de Arch Linux</a> está muy bien explicado con alguna información más sobre esta forma de proteger la preciada información personal que poseemos en diversas formas de documentos, imágenes, fotos, vídeos, música y otros formatos.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/">Cómo recuperar archivos eliminados o de una unidad corrupta en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/">Cifrar unidad USB completamente con dm-crypt y LUKS en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/como-eliminar-de-forma-segura-archivos-con-wipe-y-dd-en-gnu-linux/">Cómo eliminar de forma segura archivos con wipe en GNU/Linux</a></li>
<li><a href="https://wiki.archlinux.org/index.php/EncFS">Artículo de EncFS de la wiki de Arch Linux</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/</id>
        <title>Cómo recuperar archivos eliminados o de una unidad corrupta en GNU/Linux</title>
        <updated>2016-02-12T19:30:00+01:00</updated>
        <published>2016-02-12T19:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/como-recuperar-archivos-eliminados-o-de-una-unidad-corrupta-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Muchos archivos y su contenido son recuperables aún después de eliminados y liberado su espacio ocupado del sistema de archivos. Herramientas como Foremost son capaces de recuperar el contenido de un archivo si no ha sido sobrescrito accediendo a bajo nivel a los datos de la unidad, ya esté corrupta y de algún error al montarla o funcione perfectamente. Pudiendo extraer una imagen de la unidad seremos capaces de recuperar gran cantidad de archivos motivo por el cual al deshacernos de una unidad de almacenamiento es recomendable hacer un borrado seguro para evitar que información personal o confidencial sea obtenida con cualquier propósito.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Hace un tiempo me ocurrió que una memoria USB por algún motivo no se montaba bien ni en un sistema Windows ni tampoco en un sistema Linux. El <em>pendrive</em> estaba formateado con el sistema de archivos NTFS y quizá por haberlo desmontado mal se corrompió.</p>
<p>Por suerte en GNU/Linux disponemos de cantidad de herramientas y programas que nos ayudan en prácticamente cualquier cosa. En este caso de una memoria que no se dejaba montar buscando algún enlace en la <a href="https://wiki.archlinux.org/">wiki de Arch Linux</a> relacionado con la recuperación de datos encontré en poco tiempo el artículo sobre <a href="https://wiki.archlinux.org/index.php/Foremost">Foremost</a>, siendo un programa que puede ayudarnos a recuperar al menos parte de los datos que tuviésemos guardados. Si la unidad no está dañada físicamente y podemos extraer una imagen de la misma Foremost puede acceder a bajo nivel a las estructuras de datos de la imagen de la unidad. Foremost puede trabajar directamente sobre la unidad dañada o con una imagen, esto último es lo recomendable para evitar corromper los datos y dañar más gravemente la unidad al usarla. Si podemos extraer una imagen de la unidad es buen síntoma de que la unidad no ha dejado de funcionar completamente y tal vez se trate solo de un error lógico en la unidad y no físico pudiendo tal vez recuperarla con un formateo.</p>
<p>El error en concreto al montarlo en mi sistema <a href="https://www.archlinux.org/">Arch Linux</a> era el siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Error mounting /dev/sdb1 at /run/media/picodotdev/xxx: Command-line `mount -t &#34;ntfs&#34; -o &#34;uhelper=udisks2,nodev,nosuid,uid=1000,gid=1000,dmask=0077,fmask=0177&#34; &#34;/dev/sdb1&#34; &#34;/run/media/picodotdev/xxx&#34;&#39; exited&#10;with non-zero exit status 13: ntfs_mst_post_read_fixup_warn: magic: 0x5bc449c0  size: 4096   usa_ofs: 55304  usa_count: 8: Argumento inválido&#10;Actual VCN (0x101010100830081) of index buffer is different from expected VCN (0x1).&#10;Failed to mount &#39;/dev/sdb1&#39;: Error de entrada/salida&#10;NTFS is either inconsistent, or there is a hardware fault, or it&#39;s a SoftRAID/FakeRAID hardware. In the first case run chkdsk /f on Windows then reboot into Windows twice. The usage of the /f parameter is&#10;very important! If the device is a SoftRAID/FakeRAID then first activate it and mount a different device under the /dev/mapper/ directory, (e.g./dev/mapper/nvidia_eahaabcc1). Please see the &#39;dmraid&#39;&#10;documentation for more details.</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>error.log</span>
    </div>
</div>
<p>Podemos extraer una imagen de una unidad con el comando <code>dd</code>, el parámetro <em>if</em> será la unidad de entrada y el parámetro <em>of</em> la imagen que se creará en un archivo:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo dd <span class="k">if</span><span class="o">=</span>/dev/sdb1 <span class="nv">of</span><span class="o">=</span>unidad.image&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>dd.sh</span>
    </div>
</div>
<p>Una vez que disponemos de la imagen en un archivo en un sistema libre de fallos usaremos Foremost para que intente recuperar los archivos que no han sido completamente corrompidos por el error. Indicamos la imagen del archivo extraída con el parámetro <em>-i</em> y la carpeta donde dejará los archivos recuperados con el parámetro <em>-o</em> agrupados en directorios por tipo, con el parámetro <em>-t</em> indicamos los tipos de archivos que queremos recuperar de entre todos los que pueda (doc, docx, pdf, jpg, png, txt, &hellip;).</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ foremost -t all -i unidad.image -o archivos/&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>foremost.sh</span>
    </div>
</div>
<p>Si tenemos suerte con Foremost recuperaremos gran parte de ellos y evitaremos perderlos para siempre. En la wiki de Arch Linux hay una <a href="https://wiki.archlinux.org/index.php/file_recovery">guía con consejos y explicaciones de como proceder en la recuperación de archivos</a>.</p>
<p>Una vez que recuperé los archivos y viendo que pude extraer una imagen de la unidad probablemente en mi caso el error sería que se corrompió la unidad quizá por no extraerla de forma segura desde Windows. Por lo tanto la volví a formatear e hice algunas pruebas copiando varios archivos, se copiaron sin dar ningún error así que al final conseguí recuperar incluso la unidad.</p>
<p>Esto mismo es aplicable a una unidad que funcione correctamente, un archivo y su contenido es recuperable aún después de ser eliminado incluido de la papelera, con más probabilidad si la unidad no tiene muchas escrituras o una buena cantidad de espacio libre ya que por defecto únicamente se elimina de las estructuras del sistema de archivos y el contenido sigue estando presente simplemente no referenciado.</p>
<p>Para hacer irrecuperable el contenido de un archivo hay que hacer un <a href="https://picodotdev.github.io/blog-bitix/2016/03/como-eliminar-de-forma-segura-archivos-con-wipe-y-dd-en-gnu-linux/">borrado seguro de un archivo con el comando <code>wipe</code> o de una unidad con <code>dd</code></a> que consiste en sobrescribir el contenido del archivo con datos aleatorios, otra alternativa es <a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/">cifrar el sistema de archivos</a>. Es recomendable hacerlo cuando sustituyamos y nos deshagamos un disco duro o unidad de almacenamiento porque muchos de los archivos son recuperables incluido después de un formateo rápido de la unidad.</p>
<p>Te sorprenderá la cantidad de archivos que son recuperados por Foremost: documentos, imágenes, archivos de texto, &hellip;</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-archivos-con-encfs-en-gnu-linux/">Cifrar archivos con EncFS en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/cifrar-unidad-usb-completamente-con-dm-crypt-y-luks-en-gnu-linux/">Cifrar unidad USB completamente con dm-crypt y LUKS en GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/como-eliminar-de-forma-segura-archivos-con-wipe-y-dd-en-gnu-linux/">Cómo eliminar de forma segura archivos con wipe en GNU/Linux</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Foremost">Foremost</a></li>
<li><a href="https://wiki.archlinux.org/index.php/file_recovery">File recovery</a></li>
<li><a href="http://linux.die.net/man/1/wipe">Wipe</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Securely_wipe_disk">Securely Wipe Disk</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Disk_encryption">Disk encryption</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/</id>
        <title>6º aniversario del blog</title>
        <updated>2016-02-07T10:00:00+01:00</updated>
        <published>2016-02-06T12:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Muchas bitácoras perecen y son abandonadas al cabo de un par de años, quizá sus autores desmotivados por las pocas visitas que reciben o por el tiempo que se dan cuenta que les requiere dedicar a escribir en una bitácora y más aún editar los artículos. En mi caso aún no he perdido las ganas por seguir escribiendo y son incluso mayores. La experiencia acumulada durante este tiempo también se nota en la redacción de los artículos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Seis años ya desde que que empecé a escribir en <a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev</a> y <a href="https://picodotdev.github.io/blog-bitix/">Blog Bitix</a> aquello de lo que me interesa, investigo, aprendo, descubro o un poco más tarde <a href="https://picodotdev.github.io/blog-bitix/series/desempaquetado-tecnologia/">analizando algunos productos que voy comprando</a>. Viendo los primeros artículos que escribía en El blog de pico.dev y comparándolos con los que escribo ahora en Blog Bitix hay una notable diferencia, ahora me cuesta menos escribir y los artículos tienen algo de más extensión siendo más completos. También pasar de usar <a href="https://www.blogger.com/">Blogger</a> a <a href="http://octopress.org/">Octopress</a> en el inicio de Blog Bitix junto con <a href="https://pages.github.com/">GitHub Pages</a> me ha permitido dedicar mucho menos tiempo a la edición de los artículos y hacerlo de forma más simple. Posteriormente usando <a href="https://gohugo.io/">Hugo</a> como generador estático he podido personalizar mucho más el diseño. Diseño que tengo pendiente de mejorar sobre todo para la versión móvil.</p>
<p>Seis años publicando un artículo semanalmente y algunas semanas incluso dos requiere mucha constancia además de dedicación y ganas, muchas bitácoras son abandonadas en un periodo de tiempo mucho menor. Por el momento dispongo del tiempo, la motivación, ideas y artículos ya escritos pero pendientes de publicar así que por el momento esta bitácora tiene la misma o incluso mejor salud que cuando empecé en el año 2010. Voy apuntando más ideas de las que incluso puedo ir escribiendo, el factor más limitante es el tiempo sobre todo por tener que compaginarlo con la jornada laboral que es lo que realmente me permite tener un sueldo a final de mes motivo por el cual suelo publicar durante el fin de semana y normalmente un solo artículo. Dado que ahora en algunos artículos incluyo vídeos de <a href="https://asciinema.org/">Asciinema</a> y los que llevan código los subo a <a href="https://github.com/picodotdev/blog-ejemplos/">mi repositorio de ejemplos de GitHub</a> me lleva algo de ese tiempo que me ahorro en la edición.</p>
<p>Lentamente cada mes recibo alguna visita más y aumenta algo los ingresos por la publicidad AdSense y con los enlaces de afiliado de <a href="https://amzn.to/2flFhHA">Amazon</a>, mensualmente unas 9000 páginas vistas y entre 7 € y 15 € por la publicidad. Aún después de algo más de dos años de crear Blog Bitix no he llegado al mismo nivel de páginas vistas que en los mejores momentos de El blog de pico.dev, 16000 frente a 9000, lo que es una muestra de lo difícil que resulta, por lo menos a mí, atraer visitas. Quizá Google posicione mejor cuando una página tiene ya dos o tres años de vida, quizá considere mejor un dominio propio que el que tengo de <em>picodotdev.github.io</em> ofrecido por GitHub Pages.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/images/paginas-vistas-el-blog-de-pico-dev_hu875e638a4c57e3742c35d7cd605c15e8_63071_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Páginas vistas El blog de pico.dev"><img src="https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/images/paginas-vistas-el-blog-de-pico-dev_hu875e638a4c57e3742c35d7cd605c15e8_63071_300x200_fit_box_3.png" width="300" height="109" alt="Páginas vistas El blog de pico.dev" title="Páginas vistas El blog de pico.dev"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/images/paginas-vistas-blog-bitix_hu56e54ce340ba413026905c1a8ec14d4e_51971_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Páginas vistas Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2016/02/6-aniversario-del-blog/images/paginas-vistas-blog-bitix_hu56e54ce340ba413026905c1a8ec14d4e_51971_300x200_fit_box_3.png" width="300" height="111" alt="Páginas vistas Blog Bitix" title="Páginas vistas Blog Bitix"  class="lozad "></a></p>
</figure>
</div>
<p>Aún así cuando escribo pienso poco en las visitas, únicamente comparto aquello que me interesa y voy aprendiendo. Pero me satisface que por ejemplo el último artículo sobre la <a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/">Conferencia BilboStack 2016</a> celebrada el último fin de semana de enero lo pueda considerar ya un éxito, ha sido el más veces marcado como favorito y retuiteado con diferencia de los que he escrito, muy visitado en estos pocos días y a raíz de él varias personas de mi entorno cercano me han empezado a seguir. Uno de mis objetivos de este blog como comentaba en <a href="https://picodotdev.github.io/blog-bitix/2014/01/mi-experiencia-y-consejos-para-un-blog/">Mi experiencia y consejos para un blog</a>.</p>
<p>Con el último ingreso de Google AdSense he podido <a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/">comprar una par de camisetas a la FSFE</a> para contribuir y cuando me las ponga difundiendo la palabra y la importancia del software libre. En futuros ingresos donaré a otros proyectos de software libre que uso o me parecen útiles, así que como decía visitando este blog considera que tú también colaboras con el software libre.</p>
<p>Revisando algunos artículos antiguos me parece que no fue hace tanto tiempo que los escribí, veo la fecha y pienso que está mal pero no después de un rato me doy cuenta que para algunos artículos de los que guardo cierto cariño ya ha pasado más de un año casi dos.</p>
<p>Cada año y en cada <a href="https://picodotdev.github.io/blog-bitix/series/hemeroteca/">hemeroteca</a> repito un poco lo mismo pero esto me permite reflexionar un poco y una semana de descanso sin la presión de tener que investigar algo para publicar que me llevaría más tiempo.</p>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/</id>
        <title>Conferencia BilboStack 2016</title>
        <updated>2016-02-27T22:00:00+01:00</updated>
        <published>2016-01-31T00:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bilbostack.png" width="300" height="78" alt="BilboStack" title="BilboStack"  class=""></p>
</div>
<p>Esta ha sido la quinta <a href="https://bilbostack.com/">BilboStack</a> celebrada de forma anual en Bilbao en la localización de la <a href="http://www.deusto.es">Universidad de Deusto</a>, este año la edición del 2016. Con más asistentes que en años anteriores y unas aulas dispuestas por la universidad más grandes para dar cabida a todos. Sigue manteniéndose gratuita aunque hay que reservar entrada, todas las entradas se agotaron y ha habido lista de espera para conseguir las de aquellos que finalmente tuvieron la mala suerte de no poder asistir. Si el siguiente año no quieres perdértela no hagas planes desde ya para finales de enero de 2017 cuando esperemos sea la edición del 2017.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/universidad-de-deusto-1_hub7170aa6a9b622037488edc766c27129_261501_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Universidad de Deusto"><img src="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/universidad-de-deusto-1_hub7170aa6a9b622037488edc766c27129_261501_300x200_fit_q90_box.jpg" width="267" height="200" alt="Universidad de Deusto" title="Universidad de Deusto"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/universidad-de-deusto-2_hud10a1dafda6f8da2480f4e9bea4f33a5_139785_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Universidad de Deusto"><img src="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/universidad-de-deusto-2_hud10a1dafda6f8da2480f4e9bea4f33a5_139785_300x200_fit_q90_box.jpg" width="267" height="200" alt="Universidad de Deusto" title="Universidad de Deusto"  class="lozad "></a></p>
</figure>
</div>
<p>Al igual que en anteriores entregas las presentaciones se han dividido en dos <em>tracks</em> con duración de 45 minutos ofrecidas en una única mañana. Este año estando el <em>track</em> 1 orientado a temas de programación o código y el <em>track</em> 2 con una temática más diversa desde equipos a productos y servicios.</p>
<table class="table">
    <thead class="table-light">
        <th width="140px">Hora</th>
        <th>Track 1</th>
    </thead>
    <tbody>
        <tr>
            <td style="vertical-align: top;">8:55</td>
            <td>Presentación</td>
        </tr>
        <tr>
            <td>9:00</td>
            <td>Descubriendo Angular 2 <em>por Hugo Biarge</em></td>
        </tr>
        <tr>
            <td>9:55</td>
            <td>React Native 101 <em>por Carlos Fernández</em></td>
        </tr>
        <tr>
            <td>11:20</td>
            <td>Web Functional First <em>por Alex Casquete</em></td>
        </tr>
        <tr>
            <td>12:15</td>
            <td>Java ha muerto! Larga vida a Java (moderno) <em>por Jerónimo López</em></td>
        </tr>
        <tr>
            <td>13:15</td>
            <td>El <i>browser</i> plataforma del presente <em>por Ibon Tolosana</em></td>
        </tr>
    </tbody>
</table>
<table class="table">
    <thead class="table-light">
        <th width="140px">Hora</th>
        <th>Track 2</th>
    </thead>
    <tbody>
        <tr>
            <td style="vertical-align: top;">8:55</td>
            <td>Presentación</td>
        </tr>
        <tr>
            <td style="vertical-align: top;">9:00</td>
            <td>Los equipos ¿nacen o se hacen? (Y si no nacen, ¿cómo se hacen?) <em>por Teodora Bozheva</em></td>
        </tr>
        <tr>
            <td>9:55</td>
            <td>Cómo ser maestros constructores <em>por Zuriñe Menendez</em></td>
        </tr>
        <tr>
            <td>11:20</td>
            <td>Your code as a crime scene <em>por Vicenç García</em></td>
        </tr>
        <tr>
            <td>12:15</td>
            <td>Tipografía responsive, tipografía responsable <em>por Diego Rodriguez</em></td>
        </tr>
        <tr>
            <td>13:15</td>
            <td>Cómo pasar de servicio a producto y no perecer en el intento <em>por Carlos Hernández</em></td>
        </tr>
    </tbody>
</table>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/track1_hu887f5b57e4d963100732a7272dec4583_225551_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Sala track 1"><img src="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/track1_hu887f5b57e4d963100732a7272dec4583_225551_300x200_fit_q90_box.jpg" width="196" height="200" alt="Sala track 1" title="Sala track 1"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/track2_hu9e81c7ae5290f7bac04e4b18e0bbbd9f_270445_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Sala track 2"><img src="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/track2_hu9e81c7ae5290f7bac04e4b18e0bbbd9f_270445_300x200_fit_q90_box.jpg" width="184" height="200" alt="Sala track 2" title="Sala track 2"  class="lozad "></a></p>
</figure>
</div>
<p>No podía faltar la cuota para el popular lenguaje <a href="https://es.wikipedia.org/wiki/JavaScript">JavaScript</a> este año con las dos primeras presentaciones del <em>track</em> 1 y si el año pasado comentaba que no había habido ninguna de <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> en ya cuatro entregas, este finalmente ha tenido presencia. Aún siendo solo dos <em>tracks</em> me ha costado algo decidirme por la presentaciones a las que asistir. En resumen, he preferido ir salvo a la de Java a las presentaciones del <em>track</em> 2. <a href="https://reactjs.org/">React</a> ya lo conozco al escribir el artículo <a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/">Ejemplo lista de tareas con Backbone y React</a>, en <a href="https://angular.io/">Angular</a> 2 habrán mejorado las cosas pero se me hace redundante. En general creo que me podría enriquecer más del <em>track</em> 2 que del 1 ya que en mayor o menor medida las del primero ya me iban ser bastante familiares siendo programador.</p>
<p>Dentro de unos días se publicarán las presentaciones y no se si los vídeos con los que absorber las ideas expuestas de forma propia, aquí resumiré las presentaciones a las que asistí con las notas e ideas principales que conseguí retener al igual que hice el año pasado con la <a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/">BilboStack del 2015</a>.</p>
<hr>
<h3 id="los-equipos-nacen-o-se-hacen-y-si-no-nacen-cómo-se-hacen-empor-teodora-bozhevaem">Los equipos ¿nacen o se hacen? (Y si no nacen, ¿cómo se hacen?) <em>por Teodora Bozheva</em></h3>
<p>Comenzamos viendo el caso de una empresa Armenia, <a href="http://www.armsoft.am/?p=home&amp;lang=en">Armsoft</a>, dedicada al desarrollo de <em>software</em> bancario. En una zona recientemente en conflicto se empieza de poco a construir una organización sin estructuras y sin procesos, todo el mundo sabe de todo. Buscan la excelencia programando. Para contratar, hacen un curso gratuito, dan formación y a los que seleccionan los contratan pero aún así si contratado finalmente no encaja se va (o supongo lo echan). Son buenos técnicamente pero le dan más importancia al trabajo en equipo que a los conocimientos técnicos.</p>
<p>Los equipos están autoorganizados tomando sus propias decisiones con un objetivo común claro y compartido, estando las personas que lo forman enganchados a lo que están haciendo que con sus diferencias se complementan. Un equipo autoorganizado no significa caos o falta de dirección. La autoorganización es algo natural para los equipos. Sustituir el controlar por confiar es un desafío en muchas organizaciones. Un despacho y repartir el trabajo no une, el control se ejerce por desconfianza.</p>
<p>¿Como hacer equipos? ¿Cómo se crean donde parece imposible? Hay equipos que emergen pero hay que cuidarlos. La empresas tienen que crear el ambiente adecuado. Los equipos nacen entre personas que confían entre ellas y se crean confiando en las personas. Se hacen uniendo personas con capacidades complementarias. En la presentación se comenta que una forma de crear equipo es realizando actividades como hacer excursiones, <em>karts</em> o <em>paintball</em>.</p>
<div class="media">
<iframe src="https://player.vimeo.com/video/154470806?title=0&amp;byline=0&amp;portrait=0" width="500" height="281" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="cómo-ser-maestros-constructores-empor-zuriñe-menendezem">Cómo ser maestros constructores <em>por Zuriñe Menendez</em></h3>
<p>En el ámbito <em>frontend</em> de una aplicación web existen <em>frameworks</em> para todo pero debemos saber lo que hacen.</p>
<p>A la hora de organizar los archivos <em>frontend</em> basta con tener los directorios <em>fonts</em>, <em>images</em>, <em>javascripts</em> y <em>stylesheets</em> siendo innecesario cosas como <em>home</em>, <em>custom</em> o <em>new</em> para incluir en ellas elementos para ciertas partes de la aplicación. Con los diseños hechos se puede planificar la organización. Es recomendable añadir comentarios en el CSS, no usar <em>importants</em> (no hay <em>!important</em> de <em>!important</em>), tabular e indentar correctamente para mejor legibilidad.</p>
<p>Recomendable usar un <a href="http://meyerweb.com/eric/tools/css/reset/">reset.css</a> y un <a href="https://daneden.github.io/animate.css/">animate.css</a>. Se ha de cuidar el rendimiento en el cliente no cargando muchos CSS o JavaScripts (añado yo que con HTTP/2 reducir el número de archivos será menos necesario). Hay que conocer el modelo de cajas CSS. Dependiendo de  archivo sobretodo si es sencillo es mejor tener una única hoja de estilos, con <a href="https://sass-lang.com/">Sass</a> se pueden llegar a tener muchos archivos. En el navegador hay elementos que se procesan más rápido: (de mayor a menor) id, clase, etiqueta, selector universal. Los ids tienen mayor rendimiento siendo utilizables para elementos únicos como la barra de navegación, sin embargo, no son reutilizables y para esto se pueden utilizar las clases.</p>
<p>Todavía hay quien usa versiones antiguas de Internet Explorer (como administraciones públicas) y en algunos casos hay que soportar 5.5, 6, 7, 8, 9, 10. Para facilitarlo se pueden usar los condicionales como <em>&lt;!-- [if lt IE7]&gt;</em>. Se debe seguir una nomenclatura prefiriendo usar el idioma inglés para dar nombres, usar el guión <em>-</em> para separar palabras compuestas, no usar mayúsculas ni números para los estilos CSS asignando nombre semánticos (evitando <em>col-left</em>, <em>col-right</em>, <em>blue</em>, dark-blue, more-dark-blue), ordenar las propiedades en el mismo orden.</p>
<p>Se debe usar <a href="http://oocss.org/">CSS orientado a objetos</a> (OOCCS) agrupando propiedades comunes a varios estilos y los específicos de forma individual para el estilo en concreto. Se debe <a href="https://jigsaw.w3.org/css-validator/">validar el CSS con W3C</a>, validar el diseño responsive y hacer minimizado para mejorar el rendimiento. En el diseño adaptable no basta con usar un <em>display: none</em> ya que un vídeo se seguiría cargando y consumiendo datos para evitarlo se necesita ayuda de los <em>backenders</em>, para estos casos se puede empezar por el <em>desktop</em>.</p>
<h3 id="your-code-as-a-crime-scene-empor-vicenç-garcíaem">Your code as a crime scene <em>por Vicenç García</em></h3>
<p>Nos quejamos de los jefes pero el código que hacemos nosotros tampoco es perfecto y viéndolo algunas partes apestan. Se puede extraer información analizando el código. La presentación se basa en el libro <a href="https://amzn.to/2STr7jp">Your Code as a Crime Scene</a>.</p>
<div class="media">
<iframe src="https://player.vimeo.com/video/154470783?title=0&amp;byline=0&amp;portrait=0" width="500" height="281" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<p>Hay herramietas para analizar el código:</p>
<ul>
<li>El tamaño de los ficheros.</li>
<li>Que archivos se modifican más habitualmente y si son grandes significa mayor probabilidad de problemas.</li>
<li>Número de <em>commits</em>, ficheros y cuantos cambios se les ha hecho, autores.</li>
<li>Número de indentaciones al principio de las lineas.</li>
<li>Número de autores que están modificando un archivo, que solo una persona modifique un archivo tiene riesgos. O obtener el número de adiciones o eliminaciones por autor para saber quien tiene más conocimiento de él.</li>
</ul>
<p>Estos datos son guías algunos datos pueden tener justificación a pesar de su aparente mal indicador. Otra medida es el acoplamiento temporal (ficheros que se modifican en grupo, cada vez que se cambia uno se cambia otro) que permite descubrir acoplamientos que no deberían existir entre ficheros que no deberían tener relación.</p>
<p>Hay que tener en cuenta:</p>
<ul>
<li><em>Process loss</em>: la suma del equipo no es la suma de los integrantes, la necesaria comunicación resta eficiencia.</li>
<li><a href="https://en.wikipedia.org/wiki/Pluralistic_ignorance">Pluralistic ignorance</a>: todo el mundo sabe que algo está mal pero nadie lo dice.</li>
<li>Dar por buena una opinión porque se repite mucho.</li>
<li>Aumentar una opinión porque está con la corriente.</li>
</ul>
<p>Es importante tener datos para evaluar pero hay que tener cuidado con las métricas ya que son maleables.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/crime-scene_hube7d0ee5764f4a6cf8c4f854cd36ab2e_165386_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Your code as a crime scene"><img src="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/crime-scene_hube7d0ee5764f4a6cf8c4f854cd36ab2e_165386_300x200_fit_q90_box.jpg" width="267" height="200" alt="Your code as a crime scene" title="Your code as a crime scene"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<iframe src="https://player.vimeo.com/video/154470784?title=0&amp;byline=0&amp;portrait=0" width="500" height="281" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="java-ha-muerto-larga-vida-a-java-moderno-empor-jerónimo-lópezem">Java ha muerto! Larga vida a Java (moderno) <em>por Jerónimo López</em></h3>
<p>Hay gente que considera que Java es una mierda y es el nuevo Cobol. Se alegan algunos motivos como:</p>
<ul>
<li>Uso <a href="https://maven.apache.org/">Maven</a> y me baja medio internet.</li>
<li>Es compilado y esto lleva tiempo.</li>
<li>ProblemFactory. Clases con nombres de 45 y 90 letras.</li>
<li>XML largos, EJB, XML en Spring, en Struts, también el los pom de Maven, <em>stack traces</em> largos.</li>
<li>Hola mundo de 7 líneas, con parámetros y verboso.</li>
<li>Hay que declarar los <em>beans</em> y <em>DTO</em>, hay <em>inner classes</em>.</li>
</ul>
<p>Con todo esto si es una mierda, pero si lo usas así tu proyecto es una mierda no Java. A partir de 1990 aparecen nuevos lenguajes, cerca de 1995: <a href="https://www.python.org/">Python</a>, Java, <a href="https://secure.php.net/">PHP</a>, <a href="https://es.wikipedia.org/wiki/JavaScript">JavaScript</a>, 2001: <a href="https://dotnet.microsoft.com/">C#</a>. Anteriormente no había un <em>stack</em> con lógica de negocio no acoplado a la base de datos (existía Oracle, SAP o Access, Visual FoxPro). En 1997 se añade JDBC y <em>servlets</em>, en 1999 Java EE con un montón de especificaciones. Java como lenguaje ha cambiado poco, más en las versiones 5 y 8, mayoritariamente ha cambiado la máquina virtual, en las primeras versiones era lenta, ya no. <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">En Java 8 se añaden varias novedades</a> como propiedades básicas pero muy útiles de programación funcional, <em>lamdas</em>, <em>defaults methods</em> con las que lo que antes eran 5 líneas ahora es 1.</p>
<p>Aparece <a href="https://gradle.org/">Gradle</a> como herramienta de construcción alternativa a Maven y Ant, con las ventajas de ambos sin sus defectos. Si la herramienta no sirve cámbiala. Antes un servidor de aplicaciones ejecutaba varias aplicaciones, ahora la aplicación ejecuta de forma embebida su propio servidor de aplicaciones que se inicia como una aplicación tradicional con <em>java -jar app.jar</em> de forma que se ha simplificado el despliegue. Se han puesto de moda los <em>microframeworks</em> <a href="https://sparkjava.com/">Spark</a>, <a href="https://projects.spring.io/spring-boot/">Spring Boot</a>, <a href="https://vertx.io/">Vert.x</a>, <a href="https://www.playframework.com/">Play</a>, &hellip; que arrancan la aplicación en muy pocos segundos. El ecosistema Java sigue evolucionando adaptándose a las nuevas tendencias (en su momento el XML era una de ellas, ya no).</p>
<p>En el <a href="https://www.tiobe.com/tiobe-index/">índice Tiobe</a> sigue siendo el más popular y en GitHub ha crecido mucho. Lo usan empresas como Google, LindedIn, Amazon, Netflix. Google incluso ha creado un compilador que traduce código Java a JavaScript. Se usa en proyectos como <a href="https://cassandra.apache.org/">Casandra</a>, <a href="https://hadoop.apache.org/">Hadoop</a>, <a href="https://spark.apache.org/">Spark</a>, <a href="https://minecraft.net/">Minecraft</a>, <a href="https://www.elastic.co/es/elasticsearch/">elasticsearch</a> o <a href="https://www.android.com/">Android</a>. Es escalable desde tarjetas inteligentes a granjas de servidores, desde una <a href="https://www.raspberrypi.org/">Raspberry Pi</a> a un <em>mainframe</em>. Si Java como lenguaje no te es suficiente puedes usar <a href="https://www.scala-lang.org/">Scala</a>, <a href="https://www.groovy-lang.org/">Groovy</a>, <a href="https://ceylon-lang.org/">Ceylon</a> o <a href="https://clojure.org/">Clojure</a>. Tiene buenos IDEs que facilitan la escritura de código como <a href="https://eclipse.org">eclipse</a>, <a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a> o <a href="https://netbeans.apache.org/">Netbeans</a>.</p>
<p>Su futuro es bueno <a href="https://es.wikipedia.org/wiki/Sun_Microsystems">Sun</a> en su momento lo hizo de código abierto y se basa en comités. Están planificadas varias mejoras, Jigsaw para modularizarlo, HTTP2, REPL, soporte JSON y finalmente se eliminará el soporte de los applets.</p>
<p>En realidad Java nunca dejó de molar y ha evolucionado, esto me es parecido a las bases de datos relacionales y el potente lenguaje SQL que tampoco nunca dejaron de molar y ahí está <a href="https://www.jooq.org/">jOOQ</a> para demostrar que los ORM no son siempre la mejor solución.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/java-moderno_hu480c7aff48016508aa0055b0c5d49fd3_127759_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Java ha muerto! Larga vida a Java (moderno)"><img src="https://picodotdev.github.io/blog-bitix/2016/01/conferencia-bilbostack-2016/images/java-moderno_hu480c7aff48016508aa0055b0c5d49fd3_127759_300x200_fit_q90_box.jpg" width="267" height="200" alt="Java ha muerto! Larga vida a Java (moderno)" title="Java ha muerto! Larga vida a Java (moderno)"  class="lozad "></a></p>
</figure>
</div>
<p>La presentación ha expuesto que Java sigue siendo una de los mejores lenguajes, plataforma y ecosistema con el que desarrollar aplicaciones, han sido todo argumentos. Si alguien lo quiere ver en la práctica puede revisar varios de los artículos que he escrito en esta bitácora:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">10 razones para seguir usando Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">Novedades y nuevas características de Java 8</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/">Nueva visita a Herramientas para un proyecto Java</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html">Herramienta de construcción Gradle</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/04/usar-gradle-mediante-gradle-wrapper.html">Usar Gradle mediante Gradle wrapper</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/">Ejemplo de multiproyecto con Gradle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/aplicacion-java-autocontenida-con-spring-boot/">Aplicación Java autocontenida con Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/">Configuración de una aplicación en diferentes entornos con Spring Cloud Config</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/">Información y métricas de la aplicación con Spring Boot Actuator</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/">Introducción y ejemplo básico sobre Vert.x</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/">Aplicación web con Spark <em>framework</em> y Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/introduccion-a-javafx-aplicaciones-de-escritorio-en-java/">Introducción a JavaFX, aplicaciones de escritorio en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/programacion-de-juegos-y-3d-en-java-con-jmonkeyengine/">Programación de juegos y 3D en Java con jMonkeyEngine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/java-para-tareas-de-scripting-con-jbang-y-gradle/">Java para tareas de scripting con JBang y Gradle</a></li>
</ul>
<h3 id="cómo-pasar-de-servicio-a-producto-y-no-perecer-en-el-intento-empor-carlos-hernándezem">Cómo pasar de servicio a producto y no perecer en el intento <em>por Carlos Hernández</em></h3>
<p>Grandes empresas como <a href="https://www.dell.com/">DELL</a> empezaron siendo un servicio de reparar ordenadores a proporcionar ordenadores personalizados o <a href="https://www.microsoft.com/">Microsoft</a> pasando a vender licencias de su software.</p>
<p>Empezaron ofreciendo servicios para otros a crear un producto que ahora es <a href="https://quaderno.io/">quaderno</a> para llevar el control de facturación y control de gastos. No es fácil pasar de servicio a producto y hay que preguntarse ¿por que quieres cambiar?:</p>
<ul>
<li>Ser los propietarios reales de tu trabajo. En el trabajo para otros se aprende.</li>
<li>Tomar el control de tu destino, tener tu trabajo, no que te lo den otros.</li>
</ul>
<p>¿A que estás dispuesto a renunciar?:</p>
<ul>
<li>Si pasas de servicio a producto deberás abandonar a los clientes de tus servicios.</li>
<li>La expectativa de crecimiento o dinero que proporcionará el producto puede ser mucho menor que la real.</li>
</ul>
<p>¿Cómo lo hicieron?</p>
<ul>
<li>Con muchas horas de trabajo.</li>
<li>Durante un tiempo trabajando para sus clientes de los servicios.</li>
<li>Gastando los ahorros.</li>
</ul>
<p>En 2005 no había muchas herramientas o se debían instalar en Windows. Empezaron con un SaaS en 2006. En 2009 estaban en varias cosas al mismo tiempo, eran 3 y uno se dedicaba por completo al producto otro al 50% y otro a finalizar con los antiguos clientes. En 2010 se desarrolla la segunda versión de <em>endeve</em> con buenos resultados a base de <em>marketing</em>. En 2012 todos trabajan en el proyecto. España es un mercado pequeño en cuanto a internet, se internacionalizan. En 2013 se renombra <em>endeve</em> a <em>quaderno</em> internacionalizándose de una isla de Canarias a nivel mundial. En 2014 se automatizan las facturas integrándolo con sistemas de pago y el producto va funcionando.</p>
<p>Hacer negocios básicos no es <em>sexy</em> pero estos resuelven problemas reales y una buena oportunidad para crear productos. Con su experiencia empezando de nuevo daría al inglés importancia desde el principio, crearía una audiencia para tener clientes desde un inicio, elegiría la solución más sencilla evolucionándola a medida que se conoce a los usuarios escuchándoles y diciendo no o sí a sus sugerencias, tu eres el dueño no tienes por que aceptarlas todas. Mejor externalizar servicios como <em>marketing</em> o publicidad ya que es difícil poder con todo siendo pequeños y otros saben más que tú en sus áreas de conocimiento.</p>
<p>Usan herramientas como <a href="https://slack.com/">Slack</a>, <a href="https://trello.com/">Trello</a>, gmail, pasarela de pago <a href="https://stripe.com/es">stripe</a> que considera mejor opción que <a href="https://www.paypal.com/">PayPal</a> para integrarse.</p>
<p>Otros ejemplos de productos son:</p>
<ul>
<li><a href="http://deathtothestockphoto.com/">Death to the stock photos</a></li>
<li><a href="https://marvelapp.com/">Marvel app</a></li>
</ul>
<div class="media">
<iframe src="https://player.vimeo.com/video/154470785?title=0&amp;byline=0&amp;portrait=0" width="500" height="281" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<hr>
<p>Sigues pudiendo saciar tu curiosidad con algunos vídeos de YouTube de <a href="https://www.meetup.com/es-ES/elcomite/">elComite</a> donde están disponibles casi todas las presentaciones de las ediciones 2012, 2013 y 2014, del 2015 no se hicieron aunque si algunos audios y de este 2016 si que he visto en el <em>track</em> 2 al menos una cámara creo que grabando, de ser así supongo que las encontrarás en el canal del YouTube anterior.</p>
<p>De nuevo hay que dar las gracias a sus organizadores, ponentes, Universidad de Deusto, asistentes y a la guerrera minoría de asistentas. Hasta el 2017, no te la pierdas.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.ricardofelix.es/mi-primer-bilbostack/">Mi primer BilboStack</a></li>
<li><a href="https://www.genbetadev.com/formacion/mi-experiencia-en-la-bilbostack">Mi experiencia en la BilboStack</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/</id>
        <title>Aplicación web con Spark framework y Java</title>
        <updated>2016-01-24T12:00:00+01:00</updated>
        <published>2016-01-23T16:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Spark <em>framework</em> es un <em>microframework</em> web para Java que además hace uso de las novedades introducidas en la versión 8 del lenguaje. Para una aplicación no compleja o de un tamaño reducido permite desarrollar con su sencillez la funcionalidad de la aplicación inmediatamente y una arquitectura liviana.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/sparkjava.png" width="200" height="201" alt="Spark" title="Spark"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La cantidad de <em>frameworks</em> web disponibles en Java incluso para la misma tarea es notable, a veces cuesta decidirse por uno, sin embargo, tampoco es cuestión de elegir cualquiera. Deberemos evaluar las necesidades de la aplicación y las opciones que consideramos como adecuadas. <a href="https://sparkjava.com/">Spark Framework</a> es un <em>microframework</em> simple y sencillo, sin muchas de las funcionalidades de otras opciones más completas y complejas y que quizá no necesitemos. Su funcionalidad es suficiente capaz para servirnos en múltiples casos, uno de ellos es una <abbr title="Application Programming Interface">API</abbr> <abbr title="Representational State Transfer">REST</abbr>, otro una página web dinámica sencilla, prototipos funcionales, &hellip; su sencillez hace que podamos empezar a hacer cosas en poco tiempo. Spark es un <em>framework</em> muy sencillo al estilo de otros disponibles en otros lenguajes pero para la plataforma <a href="https://www.oracle.com/technetwork/java/index.html">Java</a>, ofrece soporte para las <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">nuevas características introducidas en la versión 8 de Java</a> que facilitan la tarea de programación como las <em>lambdas</em>.</p>
<p>Con la aparición de los dispositivos móviles algunas aplicaciones están cambiando su arquitectura. Para evitar duplicar funcionalidades si la aplicación es accedida mediante un navegador, una aplicación de escritorio, mediante un dispositivo móvil en el que queremos aprovecharnos de sus características nativas o queremos que una tercera parte se integre con la aplicación las aplicaciones, en vez de generar <abbr title="HyperText Markup Language">HTML</abbr> en el servidor ofrecen una API REST con la que todos estos clientes se comunican para solicitar los datos o realizar las operaciones que necesitan, una vez que los clientes obtienen los datos estos presentan la información adecuadamente según el dispositivo.</p>
<p>En Java podemos desarrollar una <a href="https://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html">interfaz REST usando RESTEasy</a> pero también tenemos otras opciones, una Spark. En este artículo comentaré cómo hacer un ejemplo hola mundo usando Spark como opción si no necesitamos todas las funcionalidades que ofrecen otros <em>frameworks</em> más complejos y de mayor tamaño.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spark</span><span class="o">;</span>&#10;&#10;<span class="kn">import static</span> <span class="nn">spark.Spark.get</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HolaMundoSpark</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">get</span><span class="o">(</span><span class="s">&#34;/hola&#34;</span><span class="o">,</span> <span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">res</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="s">&#34;¡Hola mundo!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HolaMundoSpark.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">description</span> <span class="o">=</span> <span class="s1">&#39;HolaMundoSpark&#39;</span>&#10;<span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;0.1&#39;</span>&#10;&#10;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;eclipse&#39;</span>&#10;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.spark.HolaMundoSpark&#39;</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;	<span class="n">compile</span> <span class="s1">&#39;com.sparkjava:spark-core:2.3&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">task</span> <span class="nf">wrapper</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Wrapper</span><span class="o">)</span> <span class="o">{</span>&#10;	<span class="n">gradleVersion</span> <span class="o">=</span> <span class="s1">&#39;2.10&#39;</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Spark ofrece un marco de trabajo en el que podemos crear rutas con las que asociar URLs con las acciones necesarias para devolver el resultado y las funcionalidades básicas de la parte de la interfaz web como acceso a la <a href="http://sparkjava.com/documentation.html#request">Request</a> y <a href="http://sparkjava.com/documentation.html#response">Response</a>, <a href="http://sparkjava.com/documentation.html#cookies">Cookies</a>, <a href="http://sparkjava.com/documentation.html#sessions">Sessiones</a>, <a href="http://sparkjava.com/documentation.html#filters">Filtros</a>, <a href="http://sparkjava.com/documentation.html#redirects">Redirecciones</a>, <a href="http://sparkjava.com/documentation.html#exception-mapping">manejo de excepciones</a> o servir <a href="http://sparkjava.com/documentation.html#static-files">recursos estáticos</a> y algunas integraciones para generar HTML con algunas librerías de plantillado como <a href="https://www.thymeleaf.org/">Thymeleaf</a>, <a href="https://freemarker.apache.org/">Freemarker</a> o <a href="https://mustache.github.io/">Mustache</a> entre otras, la <a href="http://sparkjava.com/documentation.html">documentación</a> en unas pocas horas se lee completamente.</p>
<p>Aunque en una aplicación REST no será necesario usar vistas con plantillas ya que el resultado más comúnmente empleado para proporcionar los datos es <abbr title="JavaScript Object Notation">JSON</abbr> probablemente sí que necesitemos usar persistencia en una base de datos con <a href="https://hibernate.org/">Hibernate</a> o mejor aún con <a href="https://www.jooq.org/">jOOQ</a> o para facilitarnos la vida de programación queramos disponer de <em>Inversion of Control</em> e inyección de dependencias, la opción más común es emplear el contenedor de servicios <a href="https://spring.io/">Spring</a> con la que además podremos proporcionar transacciones si nos conectamos a una base de datos relacional, seguridad también con Spring o con <a href="https://shiro.apache.org/">Shiro</a>, <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> como forma de iniciarlizar la aplicación, <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a> para configuración en múltiples entornos, <a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actuator</a> para obtener métricas&hellip; en definitiva tendremos libertad de elegir las librerías que consideremos adecuada para la tarea aunque la responsabilidad de realizar la integración será nuestra. Al final del artículo incluyo enlaces comentando varias de estas librerías específicamente.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoSpark">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<p>En la dirección http://127.0.0.1:4567/hola obtendremos el mensaje de este ejemplo.</p>
<p>Otra opción usando Java u otros varios lenguajes para los que se ofrece soporte, basado en la programación reactiva y más escalable si llegamos a ese punto de necesidad es <a href="https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/">Vert.x que describo y muestro en otro ejemplo básico</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/02/ejemplo-sencillo-de-web-service-con-resteasy.html">Ejemplo sencillo de servicio web con RESTEasy</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/02/cliente-javascript-y-java-de-servicio-web-resteasy.html">Cliente javascript y java de servicio web REST con RESTEasy</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/02/devolver-xml-json-o-html-con-resteasy.html">Devolver xml, json o html con RESTEasy</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/03/integracion-tapestry-con-resteasy.htm.html">Integración de Apache Tapestry con RESTEasy</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/aplicacion-java-autocontenida-con-spring-boot/">Aplicación Java autocontenida con Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/multiples-esquemas-o-bases-de-datos-con-jooq-y-spring-en-java/">Múltiples esquemas o bases de datos con jOOQ y Spring en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/obtener-datos-de-multiples-tablas-con-jooq/">Obtener datos de múltiples tablas con jOOQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/">Configuración de una aplicación en diferentes entornos con Spring Cloud Config</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/">Información y métricas de la aplicación con Spring Boot Actuator</a></li>
<li><a href="https://martinfowler.com/articles/richardsonMaturityModel.html">Steps toward the glory of REST</a></li>
<li><a href="http://stateless.co/hal_specification.html">Hypertext Application Language</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/</id>
        <title>Introducción y ejemplo básico sobre Vert.x</title>
        <updated>2016-01-15T20:00:00+01:00</updated>
        <published>2016-01-15T15:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/introduccion-y-ejemplo-basico-sobre-vertx/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las aplicaciones basadas en eventos y con E/S no bloqueante son más eficientes, requieren menos recursos y son capaces de servir más peticiones o usuarios por unidad de tiempo. En JavaScript su mejor representante es Node.js, en la plataforma JVM uno equivalente es Vert.x. Pero también tiene sus contrapartidas. En el artículo incluiré un pequeño ejemplo de Vert.x que muestre las diferencias con las aplicaciones tradicionalmente basadas en hilos y llamadas a métodos bloqueantes.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/vertx.svg" width="300" height="131" alt="Vert.x" title="Vert.x"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Tradicionalmente las aplicaciones web y los servidores han manejado con un hilo cada petición. Hasta ahora ha funcionado y en muchos casos sigue siendo suficiente para el número de usuarios y peticiones a los que atienden esas aplicaciones. Pero cuando se necesita escalar a un gran volumen de peticiones y usuarios usar hilos es ineficiente y requiere escalar horizontalmente (con más servidores) que tiene costes adicionales y una mayor complejidad en la infraestructura de la aplicación. Dedicar en exclusiva un hilo por petición hasta que esta es atendida es ineficiente ya que las operaciones de  entrada/salida como disco o red como un servidor de base de datos el hilo se bloquea esperando a obtener respuesta del disco o base de datos, recursos que quedan bloqueados. Por otra parte, un cambio de contexto del procesador para pasar de ejecutar un proceso o hilo a otro es una operación costosa comparada con las velocidades de los procesadores y al mismo tiempo agravada por la necesidad de contención entre los hilos en el acceso concurrente a datos.</p>
<p>Para aprovechar en mayor medida la capacidad de cálculo y cada vez mayor de los modernos procesadores están surgiendo servidores y <em>frameworks</em> con principios diferentes, basados en eventos y la <a href="https://en.wikipedia.org/wiki/Reactive_programming">programación reactiva</a>. Unos de los más conocidos es el <em>runtime</em> <a href="https://nodejs.org/en/">Node.js</a> y el servidor web <a href="https://nginx.org/">Nginx</a>. La idea de cualquiera de ellas es usar eventos que son procesados por un único hilo (o uno por núcleo del procesador) con ninguna o menor necesidad de contención entre los hilos y usando programación reactiva de modo que las operaciones de E/S no sean bloqueantes. Por otra parte menos hilos necesitarán menos recursos del sistema y también menos cambios de contexto en el procesador. Todo ello hace que usando el mismo sistema las aplicaciones basadas en eventos, programación reactiva y no bloqueantes en la E/S consuman menos memoria y sean capaces de servir más peticiones por una diferencia muy significativa que las aplicaciones basadas en hilos.</p>
<p>Los hilos y las operaciones bloqueantes a pesar de su ineficiencia hacen fácil la programación usando programación imperativa o al menos más que la programación reactiva en las que se usan una función de rellamada o <em>callback</em> por cada operación bloqueante que realicemos. También señalar que un bloqueo en el hilo que procesa las peticiones por un fallo de programación, por una operación que es bloqueante o que en su proceso acapara un tiempo significativo si no es tenida en cuenta impedirá que la aplicación procese eventos y peticiones lo que se traducirá en un aparente denegación de servicio. Esta es la contrapartida de este nuevo paradigma para las aplicaciones.</p>
<p>Teniendo en cuenta estos aspectos una de las opciones de la plataforma JVM es <a href="https://vertx.io/">Vert.x</a> que es el equivalente a Node.js en la plataforma JavaScript. Otra de las características de Vert.x es que es políglota de modo que podremos elegir el lenguaje de programación que prefiramos ya sea <a href="https://www.oracle.com/technetwork/java/index.html">Java</a>, <a href="https://es.wikipedia.org/wiki/JavaScript">JavaScript</a>, <a href="https://www.groovy-lang.org/">Groovy</a>, <a href="https://www.ruby-lang.org/es/">Ruby</a> o <a href="https://ceylon-lang.org/">Ceylon</a>. Hay que tener en cuenta que en su mayor parte las librerías Java no han sido diseñadas para la programación reactiva y no bloqueante, para lo cual Vert.x proporciona varios módulos diseñados con esta idea, en la <a href="https://vertx.io/docs/">página de documentación</a> están indicados cuales son, su documentación y ejemplos de uso. También Vert.x prescinde de los servidores de aplicaciones y estas se ejecutan siguiendo la nueva tendencia de un proceso por aplicación más alineado con los microservicios.</p>
<p>En el código del siguiente ejemplo emplearé Java por <a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">mis preferencias y motivos para seguir usándolo</a> pero sería similar empleando cualquiera de los otros si prefirieses uno de ellos. El ejemplo <em>Main.java</em> es una aplicación que devuelve un mensaje en la URL <em>http://localhost:8080</em>, el ejemplo <em>Server.java</em> devuelve una cabecera y usa un <a href="https://vertx.io/docs/vertx-core/java/#_verticles">Verticle</a> y el tercero <em>Web.java</em> acepta un parámetro y usa una plantilla de <a href="https://www.thymeleaf.org/">Thymeleaf</a>, finalmente el archivo <em>build.gradle</em> contiene las dependencias necesarias para los tres ejemplos y la construcción del proyecto con <a href="https://gradle.org/">Gradle</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;java&#39;</span>&#10;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;application&#39;</span>&#10;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="s1">&#39;eclipse&#39;</span>&#10;&#10;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="s1">&#39;1.8&#39;</span>&#10;&#10;<span class="c1">//mainClassName = &#39;io.github.picodotdev.blogbitix.vertx.helloworld.Main&#39;&#10;</span><span class="c1">//mainClassName = &#39;io.github.picodotdev.blogbitix.vertx.helloworld.Server&#39;&#10;</span><span class="c1"></span><span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.vertx.helloworld.Web&#39;</span>&#10;&#10;<span class="kt">def</span> <span class="n">versions</span> <span class="o">=</span> <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">gradle:</span> <span class="s1">&#39;2.10&#39;</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">vertx:</span> <span class="s1">&#39;3.2.0&#39;</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">slf4j:</span> <span class="s1">&#39;1.7.13&#39;</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">junit:</span> <span class="s1">&#39;4.12&#39;</span>&#10;<span class="o">]</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">jcenter</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s2">&#34;io.vertx:vertx-core:$versions.vertx&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s2">&#34;io.vertx:vertx-web:$versions.vertx&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s2">&#34;io.vertx:vertx-web-templ-thymeleaf:$versions.vertx&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span> <span class="s2">&#34;org.slf4j:slf4j-api:$versions.slf4j&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">testCompile</span> <span class="s2">&#34;junit:junit:$versions.junit&#34;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">task</span> <span class="nf">wrapper</span><span class="o">(</span><span class="nl">type:</span> <span class="n">Wrapper</span><span class="o">)</span> <span class="o">{</span>&#10;	<span class="n">gradleVersion</span> <span class="o">=</span> <span class="n">versions</span><span class="o">.</span><span class="na">gradle</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.vertx.helloworld</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.vertx.core.Vertx</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Vertx</span><span class="o">.</span><span class="na">vertx</span><span class="o">().</span><span class="na">createHttpServer</span><span class="o">().</span><span class="na">requestHandler</span><span class="o">(</span><span class="n">req</span> <span class="o">-&gt;</span> <span class="n">req</span><span class="o">.</span><span class="na">response</span><span class="o">().</span><span class="na">end</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">)).</span><span class="na">listen</span><span class="o">(</span><span class="n">8080</span><span class="o">,</span> <span class="n">handler</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">handler</span><span class="o">.</span><span class="na">succeeded</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Application starter, listening on http://localhost:8080/&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Failed to start application&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.vertx.helloworld</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.vertx.core.AbstractVerticle</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vertx.core.Verticle</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vertx.core.Vertx</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vertx.ext.web.Router</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Server</span> <span class="kd">extends</span> <span class="n">AbstractVerticle</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Verticle</span> <span class="n">verticle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Server</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Vertx</span><span class="o">.</span><span class="na">vertx</span><span class="o">().</span><span class="na">deployVerticle</span><span class="o">(</span><span class="n">verticle</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Router</span> <span class="n">router</span> <span class="o">=</span> <span class="n">Router</span><span class="o">.</span><span class="na">router</span><span class="o">(</span><span class="n">vertx</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">router</span><span class="o">.</span><span class="na">route</span><span class="o">().</span><span class="na">handler</span><span class="o">(</span><span class="n">routingContext</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">routingContext</span><span class="o">.</span><span class="na">response</span><span class="o">().</span><span class="na">putHeader</span><span class="o">(</span><span class="s">&#34;content-type&#34;</span><span class="o">,</span> <span class="s">&#34;text/html&#34;</span><span class="o">).</span><span class="na">end</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">vertx</span><span class="o">.</span><span class="na">createHttpServer</span><span class="o">().</span><span class="na">requestHandler</span><span class="o">(</span><span class="n">router</span><span class="o">::</span><span class="n">accept</span><span class="o">).</span><span class="na">listen</span><span class="o">(</span><span class="n">8080</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Server.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.vertx.helloworld</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.vertx.core.AbstractVerticle</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vertx.core.Verticle</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vertx.core.Vertx</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vertx.ext.web.Router</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vertx.ext.web.templ.TemplateEngine</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.vertx.ext.web.templ.ThymeleafTemplateEngine</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Web</span> <span class="kd">extends</span> <span class="n">AbstractVerticle</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">Verticle</span> <span class="n">verticle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Web</span><span class="o">();</span>&#10;		<span class="n">Vertx</span><span class="o">.</span><span class="na">vertx</span><span class="o">().</span><span class="na">deployVerticle</span><span class="o">(</span><span class="n">verticle</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">Router</span> <span class="n">router</span> <span class="o">=</span> <span class="n">Router</span><span class="o">.</span><span class="na">router</span><span class="o">(</span><span class="n">vertx</span><span class="o">);</span>&#10;		<span class="n">TemplateEngine</span> <span class="n">engine</span> <span class="o">=</span> <span class="n">ThymeleafTemplateEngine</span><span class="o">.</span><span class="na">create</span><span class="o">();</span>&#10;&#10;		<span class="n">router</span><span class="o">.</span><span class="na">route</span><span class="o">().</span><span class="na">handler</span><span class="o">(</span><span class="n">ctx</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;			<span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">ctx</span><span class="o">.</span><span class="na">request</span><span class="o">().</span><span class="na">getParam</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">);</span>&#10;			<span class="n">ctx</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="n">name</span><span class="o">);</span>&#10;			<span class="n">ctx</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;welcome&#34;</span><span class="o">,</span> <span class="o">(</span><span class="n">name</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="s">&#34;¡Hola mundo!&#34;</span> <span class="o">:</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;¡Hola %s!&#34;</span><span class="o">,</span> <span class="n">name</span><span class="o">));</span>&#10;&#10;			<span class="n">ctx</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>&#10;		<span class="o">});</span>&#10;&#10;		<span class="n">router</span><span class="o">.</span><span class="na">route</span><span class="o">().</span><span class="na">handler</span><span class="o">(</span><span class="n">ctx</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;			<span class="n">engine</span><span class="o">.</span><span class="na">render</span><span class="o">(</span><span class="n">ctx</span><span class="o">,</span> <span class="s">&#34;templates/index.html&#34;</span><span class="o">,</span> <span class="n">res</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;				<span class="k">if</span> <span class="o">(</span><span class="n">res</span><span class="o">.</span><span class="na">succeeded</span><span class="o">())</span> <span class="o">{</span>&#10;					<span class="n">ctx</span><span class="o">.</span><span class="na">response</span><span class="o">().</span><span class="na">putHeader</span><span class="o">(</span><span class="s">&#34;Content-Type&#34;</span><span class="o">,</span> <span class="s">&#34;text/html; charset=utf-8&#34;</span><span class="o">);</span>&#10;					<span class="n">ctx</span><span class="o">.</span><span class="na">response</span><span class="o">().</span><span class="na">end</span><span class="o">(</span><span class="n">res</span><span class="o">.</span><span class="na">result</span><span class="o">());</span>&#10;				<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;					<span class="n">ctx</span><span class="o">.</span><span class="na">fail</span><span class="o">(</span><span class="n">res</span><span class="o">.</span><span class="na">cause</span><span class="o">());</span>&#10;				<span class="o">}</span>&#10;			<span class="o">});</span>&#10;		<span class="o">});</span>&#10;&#10;		<span class="n">vertx</span><span class="o">.</span><span class="na">createHttpServer</span><span class="o">().</span><span class="na">requestHandler</span><span class="o">(</span><span class="n">router</span><span class="o">::</span><span class="n">accept</span><span class="o">).</span><span class="na">listen</span><span class="o">(</span><span class="n">8080</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Web.java</span>
    </div>
</div>
<p>La documentación de cada módulo de Vert.x está bastante bien y explicada en los diferentes lenguajes que soporta. Si la documentación no nos es suficiente en el <a href="https://github.com/vert-x3/vertx-examples">repositorio de ejemplos</a> veremos el código fuente completo de diversas funcionalidades.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoVertx">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">10 razones para seguir usando Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/multiples-esquemas-o-bases-de-datos-con-jooq-y-spring-en-java/">Múltiples esquemas o bases de datos con jOOQ y Spring en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/obtener-datos-de-multiples-tablas-con-jooq/">Obtener datos de múltiples tablas con jOOQ</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html">Herramienta de construcción Gradle</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/04/usar-gradle-mediante-gradle-wrapper.html">Usar Gradle mediante Gradle wrapper</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/">Ejemplo de multiproyecto con Gradle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/01/aplicacion-web-con-spark-framework-y-java/">Aplicación web con Spark <em>framework</em> y Java</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/</id>
        <title>Windows 10 y Office 2016 tan fáciles de usar sin licencia como siempre</title>
        <updated>2020-09-12T01:00:00+02:00</updated>
        <published>2016-01-08T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Comentaba en un artículo que es sorprendente que Microsoft con la capacidad que tiene y estando los dispositivos conectados a internet mayoritariamente no sea capaz de evitar usar su software sin licencia. Estoy a punto de ver si con Windows 10 y Office 2016 sigue siendo tan fácil como siempre. También tendré una muestra de la injusta fama de Windows pero que permite Microsoft por el <em>bloatware</em> que preinstalan los fabricantes de dispositivos con su sistema operativo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/microsoft.svg" width="200" height="200" alt="Microsoft" title="Microsoft"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/windows-10.svg" width="200" height="200" alt="Windows 10" title="Windows 10"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/microsoft-office.svg" width="200" height="240" alt="Microsoft Office" title="Microsoft Office"  class=""></p>
</div>
<p>Este 2016 lo he empezando nada más y nada menos que instalando el sistema operativo y programas de un portátil. Uno de esos favores que habitualmente hacemos los informáticos de los que yo normalmente hago de buen grado, en esta ocasión recibí otro a cambio de otra índole así que perfecto. La necesidad de la reinstalación venía de que el portátil era notablemente lento a pesar de tener un disco duro mecánico y tampoco era porque el equipo fuese antiguo o tuviese poca memoria, el procesador era un AMD Athlon x2 QL-65 con 4 GiB de memoria y 320 GB de disco duro, algo que debería ser más que suficiente para su propósito de navegar por internet, ver películas, escuchar música y tareas ofimáticas. Era lento al iniciarse e al iniciar la ejecución programas además de algún mensaje del antivirus quejándose de que su periodo de prueba había expirado que aparecía al entrar al escritorio. Eso no era todo algún virus había cifrado los archivos personales, fotos y documentos, pidiendo a cambio de recuperarlos algo que ni siquiera me molesté ver en detalle, seguro que nada bueno.</p>
<p>El equipo tenía varios programas de <em>bloatware</em> típicos de los portátiles con <a href="https://www.microsoft.com/es-es/windows/">Windows</a> proporcionados por los fabricantes, un antivirus que podría encajar con la definición de aquello de lo que intenta proteger que caduca al cabo de un tiempo y lo deja desprotegido, un reproductor que se inicia con el escritorio y se esconde en la parte superior de la pantalla por si atípicamente lo necesitas. Los fabricantes son los que preinstalan estos programas indeseables y serán los principales responsables pero si <a href="https://www.microsoft.com/">Microsoft</a> conociendo el mal nombre que le dan a sus sistemas hasta el momento no lo ha impedido algo de culpa tendrá, si su sistema operativo es una imposición en prácticamente la totalidad de portátiles que se venden en las tiendas, ¿conocéis el <a href="https://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.html">impuesto Windows</a>?, podría imponer alguna condición para permitir preinstalar Windows y hacer más felices a sus usuarios.</p>
<p>Por otra parte desde la época de Windows Vista el equipo se puede reinstalar y dejar como de fábrica incluído todo el <em>bloatware</em> anteriormente citado pero para ello se reservan unos 10 GiB del disco duro espacio que no es usable por el usuario. Con discos duros de capacidades de 320 / 500 GB que queden reservados 10 GiB no es mayor problema pero más de uno ha preguntado porque su espacio disponible no se corresponde con las especificaciones del equipo que compró.</p>
<p>De modo que para corregir los problemas hice una reinstalación limpia.</p>
<h3 id="inicio-la-instalación">Inicio la instalación</h3>
<p>Llegado al punto de hacer la reinstalación no tuve mayor problema, el equipo tenía Windows 7 originalmente, se había actualizado a Windows 10 y activado correctamente en el periodo de actualización gratuita que ofrece Microsoft. Como he hecho multitud de veces en años y con versiones anteriores empiezo por <a href="https://www.microsoft.com/es-es/software-download/windows10">descargar la imagen del medio de instalación de Windows 10</a> y el <a href="http://officecdn.microsoft.com/pr/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/media/es-es/HomeStudent2019Retail.img">medio de instalación de Microsoft Office, Hogar y Estudiantes</a>. A continuación <a href="https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-windows-10-paso-a-paso-desde-cero/">iniciar la instalación de Windows 10 paso a paso desde cero</a>. Las imágenes del medio de instalación de Windows 10 la ofrece amablemente Microsoft en su propia página web por lo que no me fué necesario buscarla como antiguamente en las redes de compartición de archivos, punto para ellos.</p>
<p>En uno de los pasos de la instalación borré todas las particiones recuperando el espacio reservado para la partición de recuperación. Unos cuantos minutos de espera, un par de reinicios y varias opciones de privacidad desactivadas que podrían dar a Windows 10 el calificativo de software espía, supuestamente por el bien de usuario, y después de crear la cuenta del usuario el sistema se inicia con todos los dispositivos funcionando correctamente incluidos la tarjeta gráfica, la red y la WiFi. Windows se muestra como activado.</p>
<p>Toca instalar los programas adicionales básicos con la intención de que sean de software libre o respetando las licencias <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> junto con <a href="https://adblockplus.org/es/">AdBlockPlus</a>, <a href="https://www.videolan.org/vlc/">VLC</a>, <a href="https://www.peazip.org/peazip-64bit.html">PeaZip</a>, <a href="https://www.imgburn.com/">ImgBurn</a>, <a href="https://get.adobe.com/es/reader/otherversions/">Acrobat Reader</a>, <a href="https://freefilesync.org/">FreeFileSync</a>, <a href="https://www.utorrent.com/intl/es/">uTorrent</a> a los que añado <a href="https://www.oracle.com/technetwork/java/index.html">Java</a>. Finalmente me piden que instale la <em>suite</em> ofimática <a href="https://products.office.com/es-es/">Microsoft Office</a> ya que va a ser utilizada, mi intención al traste, me planteo recomendar alguna opción alternativa como <a href="https://www.google.es/intl/es/docs/about/">Google Docs</a> o <a href="https://www.libreoffice.org/">LibreOffice</a>. Sin embargo, Office es lo que usan ¿piden a los alumnos que adquieran una licencia que aún para estudiantes cuesta unos 125 €? ¿250 € para otros mortales?, es inicio del 2016, es fin de semana y no quiero darle muchas vueltas al tema, descargo la última versión de Office y la instalo.</p>
<h3 id="trato-de-activar-windows-y-office">Trato de activar Windows y Office</h3>
<p>Inicio el Word y me muestra el mensaje que tras unos 30 días se desactivarán muchas de sus funciones. Llega el momento de probar empíricamente una vez más aquello que dije en <a href="https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/">A Microsoft no le importa que uses Windows u Office sin licencia</a>, busco algún activador en Google, hay cientos de resultados, descargo uno del enlace que me genera algo de esperanza de no tener virus, inmediatamente descargado el archivo ejecutable Windows Defender avisa de que tiene virus, lo ejecuto a pesar de todo y hago clic en el botón para activar el Office, sale un mensaje indicando que no se ha realizado la activación correctamente, pruebo varias opciones sin efecto aparente ¿a ver si no tengo razón y Microsoft ha hecho lo suyo para evitar la piratería?. Rebusco entre los enlaces y me descargo otro, aviso de virus, todo normal, lo ejecuto, empiezan a aparecer iconos en el escritorio de programas raros que se están instalando y al Firefox se le ha cambiado su página de inicio, ¡vaya! este supuesto activador si que era un virus, Defender tenía razón, toca reinstalar de nuevo todo.</p>
<h3 id="buscando-un-activador-sin-virus">Buscando un activador sin virus</h3>
<p>Saco las armas gordas, comienzo una nueva reinstalación de Windows 10 y Office en una máquina virtual con <a href="https://www.virtualbox.org/">VirtualBox</a> que me permitirá hacer las pruebas más fácilmente usando las instantáneas del sistema, si algo va mal podré volver a un punto anterior sin tener que reinstalar todo de nuevo. Objetivo encontrar algún activador que funcione, hace tiempo cuando usaba Windows en el primer o segundo quizá el tercero enlace no más de Google estaba el activador que funcionaba, vuelvo a pensar que igual Microsoft ha protegido mejor su software. Me informo un poco más en algunas de los cientos de páginas, encuentro que tengo que desactivar Windows Defender, en la explicación de esas páginas activar Windows y Office (cualquiera de sus versiones) es tan fácil como recordaba, usar un activador y darle a un botón ¿simplemente no he encontrado el correcto?. Pongo un poco más de interés y busco la página «oficial» de un activador, parece que he encontrado una con buenas sensaciones. Desactivado Windows Defender ejecuto el activador, se abre la ventana y selecciono activar Windows y Office, en unos segundos acaba e informa de que la activación ha sido correcta. Compruebo que Windows está activado y Office también.</p>
<h3 id="a-la-tercera-instalación-va-la-vencida">A la tercera instalación va la vencida</h3>
<p>Inicio la tercera instalación de nuevo en el portátil y realizo la activación de la misma forma que en la máquina virtual, salvo que solo de Office ya que el portátil ya tiene licencia de Windows. Office informa de que está activado. Me gustaría no haberlo podido conseguir.</p>
<p>Es inicio del 2016 y no he hecho una sino tres instalaciones de Windows y Office, más que días del año. Y sigo teniendo razón, usarlos sin licencia sigue siendo tan fácil como siempre una vez encontrados los enlaces adecuados en Google, ¿un martes de parches se instalará alguna actualización de Windows que descubra el <em>crack</em> aplicado al Office? Me enteraré.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/images/windows-10_hu01412616b9d4247c1e6e816e672b7863_485385_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Windows 10"><img src="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/images/windows-10_hu01412616b9d4247c1e6e816e672b7863_485385_300x200_fit_box_3.png" width="300" height="147" alt="Windows 10" title="Windows 10"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/images/microsoft-word-2016_hu5e276bcd423fd85027e59f007dc641f6_49234_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Microsoft Word 2016"><img src="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/images/microsoft-word-2016_hu5e276bcd423fd85027e59f007dc641f6_49234_300x200_fit_box_3.png" width="300" height="147" alt="Microsoft Word 2016" title="Microsoft Word 2016"  class="lozad "></a></p>
<figcaption>Windows 10 y Microsoft Word 2016</figcaption>
</figure>
</div>
<h3 id="qué-alternativa-hay-a-usar-un-activador">Qué alternativa hay a usar un activador</h3>
<p>Al final recurrí a un activador pero son inseguros, es mejor comprar una licencia a alguno de los vendedores alternativos a Microsoft que ofrecen códigos de licencia totalmente válidas y legales a unos precios mucho más baratos que los de Microsoft. Microsoft vende las licencias de Windows a partir de 145 € para Windows 10 y de Microsoft Office a partir de 149 €, otros vendedores que se pueden encontrar en <a href="https://amzn.to/2flFhHA">Amazon</a> y <a href="https://www.ebay.es/">eBay</a> ofrecen licencias totalmente legales y mucho más baratas, de entre 10 € y 15 €. Para que no se deshabiliten algunas opciones de personalización en Windows, se deshabilite la edición de documentos en Microsoft Office y no aparezcan más mensajes solicitando la activación hay que <a href="https://picodotdev.github.io/blog-bitix/2020/09/como-comprar-una-licencia-y-activar-windows-10-y-office-2019/">comprar una licencia y activar Windows 10 y Office 2019</a>.</p>
<ul>
<li><a href="https://www.microsoft.com/es-es/store/b/windows">Licencia de Windows 10</a> en Microsoft.</li>
<li><a href="https://www.microsoft.com/es-es/microsoft-365/buy/compare-all-microsoft-365-products">Licencia de Microsoft Office 2019</a> en Microsoft.</li>
<li><a href="https://amzn.to/333Df5X">Licencia de Windows 10 Home</a> en Amazon.</li>
<li><a href="https://amzn.to/3iZ4dBk">Licencia de Windows 10 Pro</a> en Amazon.</li>
<li><a href="https://amzn.to/369oJfc">Licencia de Microsoft Office 2019</a> en Amazon.</li>
<li><a href="https://www.ebay.es/sch/i.html?_from=R40&amp;_trksid=p2334524.m570.l1313&amp;_nkw=windows&#43;10&#43;home&#43;key&#43;64&#43;bits&amp;_sacat=0&amp;LH_TitleDesc=0&amp;_sop=2&amp;_osacat=0&amp;_odkw=windows&#43;10&#43;home&#43;key&#43;64">Licencia de Windows 10 Home</a> en eBay.</li>
<li><a href="https://www.ebay.es/sch/i.html?_from=R40&amp;_trksid=p2334524.m570.l1313&amp;_nkw=windows&#43;10&#43;professional&#43;digital&#43;key&#43;64&#43;bits&amp;_sacat=0&amp;LH_TitleDesc=0&amp;_sop=2&amp;_osacat=0&amp;_odkw=windows&#43;10&#43;pro&#43;digital&#43;key&#43;64&#43;bits">Licencia de Windows 10 Pro</a> en eBay.</li>
<li><a href="https://www.ebay.es/sch/i.html?_from=R40&amp;_trksid=p2334524.m570.l1313&amp;_nkw=microsoft&#43;office&#43;2019&#43;&#43;key&amp;_sacat=0&amp;LH_TitleDesc=0&amp;_sop=2&amp;_osacat=0&amp;_odkw=microsoft&#43;office&#43;2019&#43;pro&#43;key">Licencia de Microsoft Office 2019</a> en eBay.</li>
</ul>
<p>Si puedes usa software con su licencia, sino usa alguna de las opciones alternativas disponibles tanto para Windows <a href="https://picodotdev.github.io/blog-bitix/2016/10/elegir-una-distribucion-gnu-linux-segun-el-usuario-uso-o-equipo/">eligiendo una distribución GNU/Linux</a> como para <a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/">Office y alguna de sus 4 alternativas</a> que se adapte tus necesidades. E incluso si se quiere <a href="https://picodotdev.github.io/blog-bitix/2019/07/donde-comprar-un-ordenador-sin-windows-o-con-gnu-linux/">comprar un ordenador nuevo sin Windows</a> tanto portátil o de escritorio de buena calidad las marcas <a href="https://slimbook.es/">Slimbook</a> y <a href="https://www.vantpc.es/">VANT</a> ofrecen varios modelos en cada categoría, también están <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">los pequeños Intel NUC</a>.</p>
]]>
        </content>
        
            
                <category term="microsoft"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="windows"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/</id>
        <title>Hemeroteca #8</title>
        <updated>2016-01-04T22:00:00+01:00</updated>
        <published>2016-01-02T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Seis meses más de artículos la mayoría sobre programación en Java tratando algunas de las nuevas tendencias de programación con las posibilidades de la plataforma de la JVM. Unos pocos artículos más continuando la serie sobre Docker y uno de opinión sobre las licencias de Microsoft.</strong></p>]]>
        <![CDATA[<p>El 2015 pasó, a mi muy rápido. En cuanto a la bitácora toca recapitular cuáles han sido los artículos que he escrito, de que temas principales he hablado, un poco cómo han evolucionado las visitas y que tengo preparado para publicar durante los siguientes meses ya de 2016.</p>
<p>Muchos de los <a href="https://picodotdev.github.io/blog-bitix/2015/">artículos que he escrito durante el año 2015</a> han estado relacionados con la programación en la plataforma Java, en los que destacaría prácticamente todos empezando por los relacionados con <a href="https://projects.spring.io/spring-boot/">Spring Boot</a>, <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a> y <a href="https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready">Spring Boot Actuator</a> que forman parte del actual de la tendencia a la hora de desarrollar aplicaciones en Java pero también otros cuantos relacionados con <a href="https://www.jooq.org/">jOOQ</a> que ya es una alternativa a <a href="https://hibernate.org/">Hibernate</a> y su uso probablemente se extienda y aumente, también otro artículo sobre <a href="https://gradle.org/">Gradle</a> que ya es la herramienta de automatización de construcción ampliamente usada.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/aplicacion-java-autocontenida-con-spring-boot/">Aplicación Java autocontenida con Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/multiples-esquemas-o-bases-de-datos-con-jooq-y-spring-en-java/">Múltiples esquemas o bases de datos con jOOQ y Spring en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/obtener-datos-de-multiples-tablas-con-jooq/">Obtener datos de múltiples tablas con jOOQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/validar-objetos-con-spring-validation-ejemplo-registros-de-jooq/">Validar objetos con Spring Validation, ejemplo registros de jOOQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/configuracion-de-una-aplicacion-en-diferentes-entornos-con-spring-cloud-config/">Configuración de una aplicación en diferentes entornos con Spring Cloud Config</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/">Información y métricas de la aplicación con Spring Boot Actuator</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-de-multiproyecto-con-gradle/">Ejemplo de multiproyecto con Gradle</a></li>
</ul>
<p>Un par de artículos comentando la nueva forma de construir aplicaciones de escritorio tradicionales en Java con [JavaFX][javafx]. También algunos artículos más sobre patrones de diseño con ejemplos en código bastante ilustrativos de sus conceptos y posibles usos. O Java para tareas de <em>scripting</em> con la misma facilidad de un lenguaje interpretado o dinámico pero con las ventajas de un lenguaje compilado.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/introduccion-a-javafx-aplicaciones-de-escritorio-en-java/">Introducción a JavaFX, aplicaciones de escritorio en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/javafx-scene-builder-editor-para-crear-archivos-fxml/">JavaFX Scene Builder, editor para crear archivos FXML</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/java-para-tareas-de-scripting-con-jbang-y-gradle/">Java para tareas de scripting con JBang y Gradle</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-del-patron-de-diseno-builder/">Ejemplo del patrón de diseño Builder</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/como-crear-clases-factoria-sin-usar-if-else/">Cómo crear clases factoría sin usar if-else</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/el-patron-de-diseno-observer-y-una-forma-de-implementarlo-en-java/">El patrón de diseño Observer y una forma de implementarlo en Java</a></li>
</ul>
<p>Otros artículos sobre Java de varios temas independientes sobre herramientas como <a href="https://github.com/wro4j/wro4j/">wro4j</a>, cómo trabajar con importes, ratios y divisas en las aplicaciones Java que lo necesiten o una forma incorporada en el propio JDK para hacer las aplicaciones extensibles.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/08/implementacion-de-maquina-de-estados-finita-fsm-con-java-8/">Implementación de máquina de estados finita (FSM) con Java 8</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/aplicacion-java-extensible-con-la-clase-serviceloader/">Aplicación Java extensible con la clase ServiceLoader</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/ejemplo-practico-de-serviceloader-con-serviceprovider-de-java-money/">Ejemplo práctico de ServiceLoader con ServiceProvider de Java Money</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/07/como-trabajar-con-importes-ratios-y-divisas-en-java/">Cómo trabajar con importes, ratios y divisas en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/generar-recursos-estaticos-con-wro4j/">Generar recursos estáticos con wro4j</a></li>
</ul>
<p>Un par de artículos de opinión, uno con motivo del lanzamiento de <a href="https://www.microsoft.com/es-es/windows/">Windows</a> 10 que se produjo en julio del 2015 y otro comentando las similitudes que tienen un par de librerías <a href="https://es.wikipedia.org/wiki/JavaScript">JavaScript</a> (<a href="https://reactjs.org/">React</a> y <a href="https://www.polymer-project.org/1.0/">Polymer</a>) de las que mucha gente está hablando con el <em>framework</em> <a href="https://tapestry.apache.org/">Apache Tapestry</a> para desarrollo de aplicaciones y páginas web en Java.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/">A Microsoft no le importa que uses Windows u Office sin licencia</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/similitudes-entre-react-y-polymer-con-apache-tapestry/">Similitudes entre React y Polymer con Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/10/caracteristicas-de-los-lenguajes-de-programacion/">Características de los lenguajes de programación</a></li>
</ul>
<p>Y otro artículo un poco fuera de tema sobre una compra que hice por internet comentando mi experiencia pero en la que comento algunos consejos para los vendedores y para los compradores.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/11/mi-experiencia-comprando-unos-estores-en-cortinadecor/">Comprando por internet, unos estores en CortinaDecor</a></li>
</ul>
<p>Lo más cercano que escrito de <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> ha sido otra serie de artículos sobre <a href="https://www.docker.com/">Docker</a> continuación de otros anteriores.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/">Aplicaciones multicontenedor con Docker Compose</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/">Crear y usar un repositorio en Docker Hub</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/07/usar-docker-con-docker-machine-en-linux-windows-o-mac/">Usar docker con Docker Machine en Linux, Windows o Mac</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/07/cambiar-la-ruta-raiz-del-entorno-de-docker/">Cambiar la ruta raíz del entorno de Docker</a></li>
</ul>
<p>Los últimos artículos del año, no por ello menos interesantes. Finalmente se publicó la versión 5.4 de Apache Tapestry que ya era usable desde su estado beta con numerosas mejoras en la parte cliente de las aplicaciones. También cumplí mi propósito de hacer una donación a algún proyecto de software libre cuando recibiese la trasferencia por la publicidad AdSense, fue a la <a href="https://fsfe.org/index.en.html">FSFE</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/">Monitorizar estado de sitios web con Uptime Robot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/">Cómo buscar los enlaces rotos de un sitio web</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/">Publicado Apache Tapestry 5.4</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/">Yo apoyo al software libre, tú también</a></li>
</ul>
<p>En otro orden de cosas he seguido haciendo algunos cambios en Blog Bitix como que pueda ser accedido por el protocolo seguro <abbr title="Hypertext Transfer Protocol Secure">HTTPS</abbr> sin que el navegador informe de ningún tipo de advertencia de seguridad, este blog se genera con el generador estático <a href="https://gohugo.io/">Hugo</a> y está alojado en <a href="https://pages.github.com/">GitHub Pages</a> de modo que solo hay ficheros estáticos HTML, CSS y JavaScript pero que permite mayor privacidad y más seguridad. Si yo en una bitácora como esta que solo es contenido estático y algo de JavaScript me preocupo por la seguridad y privacidad de los usuarios me resulta sorprendente que páginas de comercio electrónico que recopilan información personal y datos de tarjetas de crédito o cuantas bancarias mucho más susceptibles de ser atacadas no lo hagan de forma completa y no solo en las áreas de la cuenta del usuario y la página de compra, más ahora que Google lo tiene en cuenta para el <a href="https://en.wikipedia.org/wiki/Search_engine_optimization"><abbr title="Search Engine Optimization">SEO</abbr></a>.</p>
<p>También he empezado a incluir en los artículos vídeos de texto con <a href="https://asciinema.org/">Asciinema</a> que creo hacen que los ejemplos sean mucho más ilustrativos mostrando la salida real de los comandos de los cuales además se puede copiar y pegar texto.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/09/grabar-y-compartir-video-de-la-terminal-con-asciinema/">Grabar y compartir vídeo de la terminal con Asciinema</a></li>
</ul>
<p>Durante este segundo semestre de 2015 he publicado varios artículos entre semana con lo que al final la media ha sido algo mayor de uno por semana. Para el 2016 ya tengo escritos una buena cantidad de artículos suficientes para seguir publicando al ritmo de un artículo por semana durante unos cuantos meses, por supuesto sobre Java pero alguno también sobre GNU/Linux. Uno de ellos espero que sea el de la conferencia <a href="https://bilbostack.com/">BilboStack</a> 2016 que se celebrará a finales de enero para la que escribiré un <a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/">artículo similar al que hice el año pasado</a> resumiendo las charlas a las que asista. También estoy en proceso de realizar una nueva actualización del <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">libro PlugIn Tapestry</a> en el que incorporaré mucho del contenido que he escrito desde su última publicación.</p>
<p>El blog ha seguido creciendo un poco en cuanto a visitas a base de un esfuerzo tremendo tratando de escribir y publicar artículos con cierta calidad, los ingresos por publicidad AdSense siguen siendo prácticamente los mismos, entre 6 y 11 € al mes, como el alojamiento y el dominio me es gratuito es suficiente para hacer alguna <a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/">donación a un proyecto relacionado con el software libre</a> por lo que tú visitando este blog en cierta forma también podrás sentirte contribuidor del software libre ya uses productos <a href="https://www.microsoft.com/">Microsoft</a> o <a href="https://www.apple.com/">Apple</a>. Una de las cosas que dicen para aumentar visitas es casi más importante la cantidad que la calidad pero no puedo dedicar más tiempo a escribir así que opto por que lo que escriba no esté ya en varios otros cientos de sitios para alguien con el mismo interés le resulte aprovechable, además trato de que los artículos incluyan un ejemplo funcional con su código fuente completo que se pueda probar de manera simple descargándolo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/images/analytics-2015_hu2e45f8b2b5f12313f49ee6d57175de05_64277_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Analytics 2015 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/images/analytics-2015_hu2e45f8b2b5f12313f49ee6d57175de05_64277_300x200_fit_box_3.png" width="300" height="112" alt="Analytics 2015 de Blog Bitix" title="Analytics 2015 de Blog Bitix"  class="lozad "></a></p>
<figcaption>Analytics 2015 de Blog Bitix</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/images/gadsense-2015_hu47d99b4d8540d2424ce3b09c9b76ded9_44102_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="AdSense 2015 de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/images/gadsense-2015_hu47d99b4d8540d2424ce3b09c9b76ded9_44102_300x200_fit_box_3.png" width="300" height="84" alt="AdSense 2015 de Blog Bitix" title="AdSense 2015 de Blog Bitix"  class="lozad "></a></p>
<figcaption>AdSense 2015 de Blog Bitix</figcaption>
</figure>
</div>
<p>Ya solo me queda decir&hellip; ¡gracias por leer, compartir y comentar esta bitácora!, no recibo muchos comentarios pero algunos como <a href="https://twitter.com/josetesan/status/669434170221928449">este</a> me anima a seguir escribiendo y compartiendo, ¡que os vaya bien el 2016!.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/images/christmas-tux-2015_hu9e0bfd41e2bd0872eef6fc5bc9fd63e0_481724_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Christmas Tux 2016"><img src="https://picodotdev.github.io/blog-bitix/2016/01/hemeroteca-8/images/christmas-tux-2015_hu9e0bfd41e2bd0872eef6fc5bc9fd63e0_481724_300x200_fit_q90_box.jpg" width="267" height="200" alt="Christmas Tux 2016" title="Christmas Tux 2016"  class="lozad "></a></p>
<figcaption>¡Buen 2016! <br>Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/</id>
        <title>Yo apoyo al software libre, tú también</title>
        <updated>2016-01-02T12:00:00+01:00</updated>
        <published>2015-12-29T21:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Hay múltiples formas con las que colaborar con el software libre, una muy importante es usándolo y al final de cierto tiempo uno se plantea de colaborar de otras formas para devolver un poquito de todo lo que nos ha ofrecido. Así pues, podemos colaborar realizando o mejorando la traducción de algún programa que usemos, promocionándolo entre nuestros conocidos o escribiendo en un blog sobre él, enviando informes de error o si tenemos los conocimientos aportando código para corregir algún error o añadiéndole alguna funcionalidad, depende de tiempo y conocimiento que tengamos también. Otra forma es realizando alguna donación económica aunque sea una pequeña cantidad a algún proyecto o software que nos resulte de interés. Después de recibir el ingreso de AdSense por la publicidad de esta bitácora este es mi caso.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/fsf.svg" width="300" height="34" alt="Free Software Foundation" title="Free Software Foundation"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/fsfe.svg" width="200" height="107" alt="Free Software Foundation Europe" title="Free Software Foundation Europe"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<p>Hace una semanas he recibido la cuarta transferencia de Google por la publicidad AdSense que incluyo en Blog Bitix. Si es por la cantidad, el esfuerzo y tiempo que requiere cada artículo no compensa aunque recibirlo de vez cuando alegra. Al año el blog me genera unos 80 €, dependiendo de mes y los clics que se hagan entre 7 € y 11 €. Un día <a href="http://elblogdeliher.com/lo-prometido-es-deuda-y-a-mi-no-me-gusta-ser-deudor-d/">Liher publicó un artículo</a> en el que comentaba que había hecho una donación al proyecto <a href="https://www.debian.org/">Debian</a> dando muestras de ello con la transferencias de PayPal para que no hubiese ningún género de duda. Me pareció muy buena iniciativa y escribí en su artículo un comentario que el día que yo recibiese la siguiente transferencia de Google por la publicidad haría una donación a algún proyecto relacionado con software libre.</p>
<p>Tenía casi decidido que la primera donación económica que hiciese a un proyecto sería a la <a href="https://www.fsf.org/">Free Software Foundation</a>. Organización no lucrativa que lucha por los derechos y libertades de los usuarios en cualquier materia que esté relacionada con el software y la computación. Se considera software libre si cumple las siguientes 4 libertades:</p>
<ul>
<li>La libertad de ejecutar el programa como se desea, con cualquier propósito (libertad 0).</li>
<li>La libertad de estudiar cómo funciona el programa, y cambiarlo para que haga lo que usted quiera (libertad 1). El acceso al código fuente es una condición necesaria para ello.</li>
<li>La libertad de redistribuir copias para ayudar a su prójimo (libertad 2).</li>
<li>La libertad de distribuir copias de sus versiones modificadas a terceros (libertad 3). Esto le permite ofrecer a toda la comunidad la oportunidad de beneficiarse de las modificaciones. El acceso al código fuente es una condición necesaria para ello.</li>
</ul>
<p>Si analizas detalladamente estas cuatro libertades te darás cuenta de que el software libre no solo trata de software sino que tiene una parte ética y moral, es una forma de como queremos entender el software y el mundo. El software libre no tiene porque ser gratuito aunque en la mayoría de los casos lo es. Las libertades son importantes aunque por el uso masivo de opciones privativas da la sensación de que los usuarios no conocen, no son conscientes o hacen caso omiso cuando compran un producto de <a href="https://www.microsoft.com/">Microsoft</a> o <a href="https://www.apple.com/">Apple</a>. Algunas empresas se aprovechan de su posición dominante imponiendo a los usuarios su <a href="https://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.html">Impuesto Windows</a>, otras formas que comentaba de forma imaginaria pero basada en hechos reales en <a href="https://elblogdepicodev.blogspot.com.es/2011/12/como-seria-si-microsoft-apple-y-linux.html">Como sería si Apple, Microsoft y Linux</a> y licencias de uso con cláusulas abusivas junto con funciones activadas por defecto que recolectan información de sus usuarios comprometiendo su privacidad además de otras que al no tener acceso al código fuente probablemente estén presentes. Realmente a <a href="https://picodotdev.github.io/blog-bitix/2015/07/a-microsoft-no-le-importa-que-uses-windows-u-office-sin-licencia/">Microsoft no le importa que uses Windows u Office sin licencia</a> para uso personal ya que como decía probablemente prefiere esto que se use una alternativa libre, y muchos usuarios usan versiones sin licencia o denominadas piratas de los productos de Microsoft y otros programas. Como comentaba en el artículo anterior si los usuarios pagasen las licencias de todo el software que usan probablemente sería una buena forma de que el uso del software libre aumentase.</p>
<p>Usar el software libre ya es una buena forma de apoyarlo pero también requiere algo de financiación para desarrollar sus proyectos. Muchas empresas usan software libre, algunas en gran medida en su negocio pero ¿cuantas apoyan económicamente a los proyectos que usan o de alguna otra forma?.</p>
<p>Finalmente como tenía intención, hice una donación a la <a href="https://fsfe.org/index.en.html">organización Europea de la Free Software Foundation</a> comprando unas camisetas reivindicativas en su <a href="https://fsfe.org/order/order.es.html">tienda</a> que además usaré alegremente a modo de promoción, hay más modelos incluidos para mujer y otra serie de artículos como tazas, llaveros, bolígrafos y pins. Estas son las camisetas.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/images/fsfe-t-shirts_hud5defb4f9416fed35b3f13b466d99e37_101218_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Camisetas FSFE"><img src="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/images/fsfe-t-shirts_hud5defb4f9416fed35b3f13b466d99e37_101218_650x450_fit_q90_box.jpg" width="650" height="308" alt="Camisetas FSFE" title="Camisetas FSFE"  class="lozad "></a></p>
<figcaption>Camisetas FSFE</figcaption>
</figure>
</div>
<p>La económica solo es una forma de colaborar con el software libre, usarlo es una buena iniciativa y contribuir con él de alguna manera es algo que está al alcance de todos. No tiene por que ser haciendo donaciones económicas puede ser difundiendo su uso instalando alguna distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> a alguien que te pide que le reinstales el sistema operativo, dando una charla, realizando traducciones al español como en mi caso a dos programa que uso como son el <a href="https://www.videolan.org/vlc/">Reproductor multimedia VLC</a> y <a href="https://www.virtualbox.org/">VirtualBox</a>, escribiendo artículos en una bitácora como podría ser esta e incluso un libro gratuito sobre el <em>framework</em> web de desarrollo para aplicaciones Java, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry</a>.</p>
<p>Y simplemente visitando, leyendo los artículos o haciendo un clic alguna vez en los anuncios de esta bitácora puedes considerar que tú también has contribuido al software libre a través de esta donación aunque uses <a href="https://www.microsoft.com/es-es/windows/">Windows</a> o <a href="https://www.apple.com/es/mac/">Mac</a>, productos de Microsoft, Apple o software privativo. La siguiente transferencia dentro de unos meses que me haga Google por la publicidad AdSense ya veré a que proyecto de los que uso hago otra donación, no será muy elevada pero seguro que ayuda, ahí está mi granito de arena.</p>
<p>Y esta es la muestra de la factura de PayPal en la que se ve la donación/adquisición de dos camisetas por 20 € cada una y 7 € de gastos de envío. ¿Alguien continúa con esta pequeña cadena? Liher, pico.dev, &hellip;</p>
<p><a href="http://www.gnu.org/">Yo apoyo al software libre</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/images/donacion-fsfe_hu9eb63d59d452e106fe9a9b75f441924a_135449_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Donación Free Software Foundation Europe"><img src="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/images/donacion-fsfe_hu9eb63d59d452e106fe9a9b75f441924a_135449_650x450_fit_box_3.png" width="276" height="450" alt="Donación Free Software Foundation Europe" title="Donación Free Software Foundation Europe"  class="lozad "></a></p>
<figcaption>Donación Free Software Foundation Europe</figcaption>
</figure>
</div>
<table class="table">
    <thead>
        <tr class="thead-dark">
            <th colspan="4">Donaciones que he realizado hasta la última fecha</th>
        </tr>
        <tr class="thead-light">
            <th>#</th>
            <th>Fecha</th>
            <th>Proyecto</th>
            <th>Donación</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>2015/12</td>
            <td>Free Software Foundation Europe (FSFE)</td>
            <td>40 €</td>
        </tr>
        <tr>
            <td>2</td>
            <td>2016/09</td>
            <td>Wikipedia, Mozilla/Firefox</td>
            <td>10 €, 10 €</td>
        </tr>
        <tr>
            <td>3</td>
            <td>2017/01</td>
            <td>elementaryOS, Libre Office, Arch Linux ARM</td>
            <td>10 €, 10 €, 10 €</td>
        </tr>
        <tr>
            <td>4</td>
            <td>2017/05</td>
            <td>GNOME, VideoLAN (VLC), Arch Linux</td>
            <td>15,31 €, 10 €, 0,31 €</td>
        </tr>
        <tr>
            <td>5</td>
            <td>2018/01</td>
            <td>LineageOS, Replicant</td>
            <td>15 €, 15 €</td>
        </tr>
        <tr>
            <td>6</td>
            <td>2018/12</td>
            <td>Wine</td>
            <td>$20</td>
        </tr>
        <tr>
            <td>7</td>
            <td>2019/12</td>
            <td>Calibre</td>
            <td>$10</td>
        </tr>
        <tr>
            <td>8</td>
            <td>2020/12</td>
            <td>Phoronix, Mozilla/Firefox, GnuPG</td>
            <td>$12, 10 €, 10 €</td>
        </tr>
        <tr>
            <td colspan="3">Total</td>
            <td>165 €, $42</td>
        </tr>
    </tbody>
</table>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/</id>
        <title>Publicado Apache Tapestry 5.4</title>
        <updated>2015-12-24T16:00:00+02:00</updated>
        <published>2015-12-24T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="250" height="250" alt="Apache Tapestry" title="Apache Tapestry"  class=""></p>
</div>
<p>Después 38 betas (han sido tantas porque era barato hacerlas) y una única candidata a publicación, 4 años desde la anterior versión mayor (5.3) y varias versiones menores de esta, la versión final de <a href="https://tapestry.apache.org/">Apache Tapestry</a> 5.4 ha sido publicada. Esta nueva versión incorpora más de 300 correcciones de errores, casi 200 mejoras y varias novedades destacadas  centradas en la integración con JavaScript siguiendo la evolución actual de las aplicaciones web con un peso mayor en el lado del cliente. De esta manera el JavaScript se basa en el uso de <a href="https://requirejs.org/">RequireJS</a> proporcionando a las aplicaciones todas las bondades que los módulos proporcionan como organizar mejor el JavaScript de las aplicaciones, no polucionar el ámbito global evitando conflictos entre librerías y carga de dependencias de forma dinámica. También se proporciona soporte <em>built-in</em> para <a href="https://coffeescript.org/">CofeeScript</a> y <a href="https://lesscss.org/">LESS</a>.</p>
<ul>
<li>Añadida una capa de abstracción sobre la librería JavaScript usada, esto permite usar <a href="https://jquery.com/">jQuery</a> en vez de <a href="http://prototypejs.org/">Prototype</a> o cualquier otra del presente o que surja en el futuro.</li>
<li>En un redespliegue solo los <em>assets</em> modificados se volverán a descargar. Junto con el <em>checksum</em> del <em>asset</em> generado a partir del contenido del recurso e incluido en su URL, también se añade soporte para <a href="https://en.wikipedia.org/wiki/HTTP_ETag">E-tag</a>.</li>
<li>Soporte a CoffeeScript, LESS, minificación de JavaScript y CSS.</li>
<li>Mejoras en componentes (<a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Tree.html">Tree</a>, <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Grid.html">Grid</a>, <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Palette.html">Palette</a>).</li>
<li>Mejor soporte para JavaScript con  RequireJS y <abbr title="Asynchronous Module Definition">AMD</abbr>.</li>
<li>Componente <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/mixins/Autocomplete.html">Autocomplete</a> basado en <a href="https://twitter.github.io/typeahead.js/">Typeahead</a>.</li>
<li>Mejoras en el informe de excepciones y la consola de depuración.</li>
<li>Se incorpora <a href="https://getbootstrap.com/">Bootstrap</a> 3 como <em>framework</em> para los estilos y se adaptan los componentes a las nuevas etiquetas y estilos.</li>
<li>Nueva página <em>Dashboard</em> que sustituye a las anteriores páginas <em>PageCatalog</em>, <em>ServiceStatus</em> e <em>Hibernate
Statistics</em>.</li>
<li>Inclusión de <a href="https://momentjs.com/">Moment.js</a> y nuevos componentes <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/LocalDate.html">LocalDate</a> y <a href="http://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/TimeInterval.html">TimeInterval</a>.</li>
<li>Mejoras de rendimiento y multitud de correcciones de errores.</li>
</ul>
<p>Y muchas cosas más listadas en las <a href="http://tapestry.apache.org/release-notes-54.html">notas de publicación</a> en las que se incluyen las peticiones resueltas. Muchas centradas en el lado cliente de las aplicaciones web y otras cuantas que perfeccionan funcionalidades ya existentes.</p>
<p>Si quieres conocer en detalle Tapestry puedes descargar el <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">libro PlugIn Tapestry</a> que publique hace un tiempo y que tengo pendiente de actualizar con el nuevo contenido que he escrito en el <em>blog</em> desde su última publicación con algunas de estas novedades y otras cosas adicionales.</p>
<p>Esta nueva versión es un buena oportunidad para conocer este <em>framework</em> orientado a componentes con el objetivo de crear aplicaciones web rápidas, dinámicas, robustas y altamente escalables en la plataforma Java con gran productividad y reutilización de código durante el desarrollo. Al basarse en componentes es distinto de los muchos basados en acciones similares en esencia a uno de los pioneros como <a href="https://struts.apache.org/">Struts</a> que podemos encontrar en la plataforma Java como <a href="https://spring.io/">Spring MVC</a>, <a href="https://grails.org/">Grails</a> y <a href="https://www.playframework.com/">Play!</a> y también de los muchos otros en los que la principal diferencia es el lenguaje como <a href="https://www.djangoproject.com/">Django</a> (<a href="https://www.python.org/">Python</a>), <a href="https://symfony.com/">Symfony</a> (<a href="https://secure.php.net/">PHP</a>), <a href="https://www.microsoft.com/net">.NET MVC</a> (<a href="https://dotnet.microsoft.com/">C#</a>) o <a href="https://rubyonrails.org/">Ruby On Rails</a> (<a href="https://www.ruby-lang.org/es/">Ruby</a>).</p>
<p>En la <a href="https://picodotdev.github.io/blog-bitix/tags/tapestry/">etiqueta Tapestry</a> puedes consultar los últimos artículos que he publicado sobre este <em>framework</em> en Blog Bitix y en la aplicación <a href="http://jumpstart.doublenegative.com.au/jumpstart/">JumpStart</a> hay multitud de ejemplos funcionales junto con su código fuente.</p>
<p>Buen regalo para acabar el año 2015, ¡feliz navidad!.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/2015/12/publicado-apache-tapestry-5-4/images/christmastux2015_hu09c4407dd3c160f7acbce99ab680d891_104590_2560x1440_fit_q90_box.jpg" width="600" height="450" alt="ChristmasTux 2015" title="ChristmasTux 2015"  class="lozad "></p>
</figure>
</div>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/</id>
        <title>Cómo buscar los enlaces rotos de un sitio web</title>
        <updated>2015-12-18T18:00:00+01:00</updated>
        <published>2015-12-18T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Ya tengamos un sitio web, una bitácora, o una aplicación web es recomendable comprobar cada cierto tiempo los enlaces rotos. Las páginas pueden desaparecer o cambiar de dirección y esto provocará páginas no encontradas en los enlaces que las referenciasen. Usando herramientas que automaticen la tarea podemos encontrar enlaces rotos de forma efectiva y rápida.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<p>La web se basa en un conjunto de páginas donde unas hacen referencia a otras a través de enlaces. Unido a que las páginas que están bajo el control de los sitios referenciados pudiendo desaparecer o cambiar de dirección hace que las referencias puedan dejar de funcionar o necesitar una redirección, el mensaje que nos indicará el navegador es el conocido <em>Página no encontrada</em> o <a href="https://es.wikipedia.org/wiki/Error_404">error 404</a> para indicar lo mismo. Que un sitio web contenga referencias a páginas ya no existentes hace que el usuario no encuentre lo que busque empeorando su experiencia de usuario y que los buscadores tienen en cuenta en el posicionamiento de los resultados de búsqueda. Por estos motivos es recomendable de vez en cuando rastrear los enlaces de un sitio web para buscar <a href="https://en.wikipedia.org/wiki/Link_rot">enlaces rotos</a> cambiándolos por otros nuevos o eliminarlos, ya sean enlaces internos (hacia nuestro propio sitio) o enlaces externos (a otros sitios).</p>
<p>Otras tareas útiles para mejorar un sitio web es utilizar <a href="https://picodotdev.github.io/blog-bitix/2021/05/herramientas-para-mejorar-una-pagina-web-en-seo-conformidad-estandares-y-rendimiento/">herramientas para mejorar una página web en SEO, conformidad estándares y rendimiento</a> y hacer las modificaciones detectadas.</p>
<h3 id="comprobar-enlaces-rotos-con-herramientas-web">Comprobar enlaces rotos con herramientas web</h3>
<p>Por enlaces o referencias consideramos tanto a páginas como a recursos de imágenes, estilos CSS, JavaScript u otros. Con que un sitio web contenga unas pocas decenas de páginas comprobar manualmente los enlaces se hace una tarea tediosa, que necesita mucho tiempo además de posiblemente no conseguir descubrir todos los enlaces rotos. Hay herramientas disponibles para comprobar los enlaces de forma automatizada. Algunas de estas que he usado recientemente en esta bitácora y con las que he encontrado numerosos enlaces han sido:</p>
<ul>
<li><a href="https://validator.w3.org/checklink">W3 Check Link</a></li>
<li><a href="http://www.drlinkcheck.com">Dr. Link Check</a></li>
<li><a href="http://www.deadlinkchecker.com/website-dead-link-checker.asp">Deadlink Checker</a></li>
</ul>
<p>Después de introducir la dirección del sitio web, que con estas herramientas ha de estar accesible en internet, cada una de ellas nos informará de los enlaces rotos que encuentre indicándonos el enlace roto, el texto del enlace y en qué página está. Con esta información podemos corregir esos enlaces del sitio web, bitácora o aplicación. Después de usarlas hubiera dicho que no tenía tantos en está bitácora, me sirvieron para corregirlos.</p>
<p>Las ventajas de estas herramientas web sobre las siguientes con wget y LinkChecker es que no requieren instalar ningún software, las desventajas son que suelen tener una limitación en el número de páginas máximo que rastrean y número errores de los que informan, sin embargo, no son excluyentes y utilizando varias da oportunidad de descubrir más enlaces rotos y errores.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/images/w3c-linkchecker_hu291b0b61a136c1cb5589c25a3cbbb5b5_37370_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="W3C Link Checker"><img src="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/images/w3c-linkchecker_hu291b0b61a136c1cb5589c25a3cbbb5b5_37370_300x200_fit_box_3.png" width="259" height="200" alt="W3C Link Checker" title="W3C Link Checker"  class="lozad "></a></p>
<figcaption>W3C Link Checker</figcaption>
</figure>
</div>
<h3 id="comprobar-enlaces-rotos-con-wget">Comprobar enlaces rotos con wget</h3>
<p>Si el sitio web no está accesible en internet o queremos encontrar enlaces rotos en el momento de desarrollo podemos usar el comando <code>wget</code> para que nos rastree los enlaces, cada petición que devuelva un código 404 será un enlace roto. En el archivo <em>wget.log</em> tendremos los resultados del rastreo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ wget –spider -o wget.log -e <span class="nv">robots</span><span class="o">=</span>off -r -p https://picodotdev.github.io/blog-bitix/&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>wget.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">--2020-01-15 21:00:06--  http://xn--spider-vg0c/&#10;Resolviendo xn--spider-vg0c (xn--spider-vg0c)... falló: Nombre o servicio desconocido.&#10;wget: no se pudo resolver la dirección del equipo “xn--spider-vg0c”&#10;--2020-01-15 21:00:06--  https://picodotdev.github.io/blog-bitix/&#10;Cargado certificado CA &#39;/etc/ssl/certs/ca-certificates.crt&#39;&#10;Resolviendo picodotdev.github.io (picodotdev.github.io)... 185.199.108.153, 185.199.109.153, 185.199.111.153, ...&#10;Conectando con picodotdev.github.io (picodotdev.github.io)[185.199.108.153]:443... conectado.&#10;Petición HTTP enviada, esperando respuesta... 200 OK&#10;Longitud: 31602 (31K) [text/html]&#10;Grabando a: “picodotdev.github.io/blog-bitix/index.html”&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp; 0K .......... .......... ..........&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  100% 37,1M=0,001s&#10;&#10;2020-01-15 21:00:07 (37,1 MB/s) - “picodotdev.github.io/blog-bitix/index.html” guardado [31602/31602]&#10;&#10;--2020-01-15 21:00:07--  https://picodotdev.github.io/blog-bitix/assets/favicon.ico&#10;Reutilizando la conexión con picodotdev.github.io:443.&#10;Petición HTTP enviada, esperando respuesta... 200 OK&#10;Longitud: 9662 (9,4K) [image/vnd.microsoft.icon]&#10;Grabando a: “picodotdev.github.io/blog-bitix/assets/favicon.ico”&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp; 0K .........&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 100% 80,6M=0s&#10;&#10;2020-01-15 21:00:07 (80,6 MB/s) - “picodotdev.github.io/blog-bitix/assets/favicon.ico” guardado [9662/9662]&#10;&#10;--2020-01-15 21:00:07--  https://picodotdev.github.io/blog-bitix/assets/apple-touch-icon-144-precomposed.png&#10;Reutilizando la conexión con picodotdev.github.io:443.&#10;Petición HTTP enviada, esperando respuesta... 200 OK&#10;Longitud: 4443 (4,3K) [image/png]&#10;Grabando a: “picodotdev.github.io/blog-bitix/assets/apple-touch-icon-144-precomposed.png”&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp; 0K ....&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  100% 40,1M=0s&#10;&#10;2020-01-15 21:00:07 (40,1 MB/s) - “picodotdev.github.io/blog-bitix/assets/apple-touch-icon-144-precomposed.png” guardado [4443/4443]&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>wget.log</span>
    </div>
</div>
<p><code>wget</code> es una herramienta con múltiples usos, otro uso que tiene es la de [descargar el contenido de un sitio web completo]</p>
<h3 id="comprobar-enlaces-rotos-con-linkchecker">Comprobar enlaces rotos con LinkChecker</h3>
<p>Otra opción es <a href="https://github.com/linkchecker/linkchecker">LinkChecker</a> que además de comprobar los enlaces internos de un sitio web también tiene la opción de comprobar los enlaces del sitio web hacia a los externos. Un modo de ejecución es utilizando <a href="https://www.docker.com/">Docker</a> con lo que no hace falta instalar nada localmente salvo Docker.</p>
<p>El siguiente comando comprueba los enlaces internos de un sitio web y los externos que contenga generando un archivo de trazas, <em>linkchecker.log</em>, con las comprobaciones de resultado correcto y erróneas. Con el registro de las erróneas es fácil corregirlas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm -it linkchecker/linkchecker --verbose --check-extern https://picodotdev.github.io/blog-bitix/ &gt; linkchecker.log&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>linkchecker.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">LinkChecker 9.4.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Copyright (C) 2000-2014 Bastian Kleineidam&#10;LinkChecker comes with ABSOLUTELY NO WARRANTY!&#10;This is free software, and you are welcome to redistribute it&#10;under certain conditions. Look at the file `LICENSE&#39; within this&#10;distribution.&#10;Get the newest version at https://linkchecker.github.io/linkchecker/&#10;Write comments and bugs to https://github.com/linkchecker/linkchecker/issues&#10;&#10;Start checking at 2020-01-15 20:06:36+000&#10;&#10;URL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`https://picodotdev.github.io/blog-bitix/&#39;&#10;Real URL   https://picodotdev.github.io/blog-bitix/&#10;Check time 0.586 seconds&#10;D/L time   0.002 seconds&#10;Size&nbsp;&nbsp;&nbsp;&nbsp;   30.86KB&#10;Result&nbsp;&nbsp;&nbsp;&nbsp; Valid: 200 OK&#10;10 threads active,&nbsp;&nbsp;&nbsp;&nbsp;54 links queued,&nbsp;&nbsp;&nbsp;&nbsp;1 link in  65 URLs checked, runtime 1 seconds&#10;&#10;URL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`/blog-bitix/assets/favicon.ico&#39;&#10;Parent URL https://picodotdev.github.io/blog-bitix/, line 19, col 3&#10;Real URL   https://picodotdev.github.io/blog-bitix/assets/favicon.ico&#10;Check time 0.632 seconds&#10;Size&nbsp;&nbsp;&nbsp;&nbsp;   9KB&#10;Result&nbsp;&nbsp;&nbsp;&nbsp; Valid: 200 OK&#10;&#10;URL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`https://picodotdev.github.io/blog-bitix/sitemap.xml&#39;&#10;Parent URL https://picodotdev.github.io/blog-bitix/, line 16&#10;Real URL   https://picodotdev.github.io/blog-bitix/sitemap.xml&#10;Check time 0.912 seconds&#10;D/L time   0.051 seconds&#10;Size&nbsp;&nbsp;&nbsp;&nbsp;   90.27KB&#10;Result&nbsp;&nbsp;&nbsp;&nbsp; Valid: 200 OK&#10;...&#10;URL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`http://barrapunto.com/&#39;&#10;Name&nbsp;&nbsp;&nbsp;&nbsp;   `Barrapunto&#39;&#10;Parent URL https://picodotdev.github.io/blog-bitix/pages/links/, line 262, col 5&#10;Real URL   http://barrapunto.com/&#10;Check time 0.260 seconds&#10;Result&nbsp;&nbsp;&nbsp;&nbsp; Error: ConnectionError: HTTPConnectionPool(host=&#39;barrapunto.com&#39;, port=80): Max retries exceeded with url: / (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7f45343fac10&gt;: Failed to establish a new connection: [Errno ...&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>linkchecker.log</span>
    </div>
</div>
<h3 id="comprobar-enlaces-rotos-de-otros-sitios-web-hacia-el-nuestro">Comprobar enlaces rotos de otros sitios web hacia el nuestro</h3>
<p>Lo anterior nos sirve para detectar los enlaces rotos que tenemos en nuestro sitio hacia otros, seguramente también nos interesará conocer los enlaces rotos que tienen otros sitios hacia el nuestro. Podemos saber a que páginas no encontradas están accediendo los usuarios de nuestro sitio web lanzando un evento personalizado de <a href="https://www.google.es/intl/es/analytics/">Google Analytics</a> en la página para el error 404 que mostremos. Dado que los enlaces hacia nuestro sitio incluidos en otros no podemos modificarlos si se tratase de alguno especialmente importante al menos podremos hacer una redirección para que los usuarios lleguen al contenido más apropiado en vez de a una página no encontrada:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="nx">ga</span><span class="p">(</span><span class="s1">&#39;send&#39;</span><span class="p">,</span> <span class="s1">&#39;event&#39;</span><span class="p">,</span> <span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="s1">&#39;404&#39;</span><span class="p">,</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">pathname</span><span class="p">);</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>analytics.js</span>
    </div>
</div>
<p>Al mismo tiempo <a href="https://validator.w3.org/">validar el HTML</a> y <a href="http://jigsaw.w3.org/css-validator/">validar los estilos CSS</a> respecto a su especificación también mejorarán el código del sitio web.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://stackoverflow.com/questions/65515/how-to-find-broken-links-on-a-website">How to find broken links on a website</a></li>
<li><a href="http://www.commandlinefu.com/commands/view/8234/check-broken-links-using-wget-as-a-spider">Check broken links using wget as a spider</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/</id>
        <title>Monitorizar estado de sitios web con Uptime Robot</title>
        <updated>2015-12-15T18:00:00+01:00</updated>
        <published>2015-12-11T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/uptime-robot.png" width="300" height="86" alt="Uptime Robot" title="Uptime Robot"  class=""></p>
</div>
<p>Los sitios web que ofrecen su servicio de forma ininterrumpida por diferentes causas pueden dejar de funcionar ya sea porque se ha perdido la conexión con la base de datos, se ha llenado el disco de la máquina impidiendo su normal funcionamiento u otras causas. En algunos tipos de servicio como páginas de presencia en internet puede dar una mala imagen pero en los sitios de comercio electrónico la pérdida del servicio es especialmente importante ya que además implica perder ventas o clientes. Para conocer de la forma más inmediata posible el mal funcionamiento y poder restaurar el servicio podemos usar alguna herramienta que monitorice su estado. Para monitorizar el funcionamiento de sitios web una de ellas muy sencilla es <a href="https://uptimerobot.com/">Uptime Robot</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/images/uptime-robot_hue0333c5e8a33fb512ab44af0591f643c_165908_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Uptime Robot"><img src="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/images/uptime-robot_hue0333c5e8a33fb512ab44af0591f643c_165908_300x200_fit_box_3.png" width="300" height="187" alt="Uptime Robot" title="Uptime Robot"  class="lozad "></a></p>
<figcaption>Uptime Robot</figcaption>
</figure>
</div>
<p>Una vez registrados y con acceso al panel de control podemos crear un <em>monitor</em>. Tenemos la posibilidad de crear diferentes tipos:</p>
<ul>
<li><abbr title="Hypertext Transfer Protocol">HTTP</abbr>: que comprueba que la respuesta obtenida sea un código de estado 200.</li>
<li><em>keyword</em>: que comprueba que en la respuesta obtenida esté presente una palabra clave.</li>
<li><em>ping</em>: que simplemente comprueba que la máquina que ofrece el servicio responda (aunque el servicio web puede que no).</li>
<li><em>port</em>: comprueba que un determinado puerto esté accesible. En la <a href="https://uptimerobot.com/faq">página de preguntas frecuentes</a> están comentados los diferentes tipos de monitores.</li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/images/nuevo-monitor_hu9c2737217dc8c4c1904809d1ca6205fc_47725_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nuevo monitor HTTP"><img src="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/images/nuevo-monitor_hu9c2737217dc8c4c1904809d1ca6205fc_47725_300x200_fit_box_3.png" width="300" height="182" alt="Nuevo monitor HTTP" title="Nuevo monitor HTTP"  class="lozad "></a></p>
<figcaption>Nuevo monitor HTTP</figcaption>
</figure>
</div>
<p>En el momento que un monitor detecte una caída de servicio podemos establecer que nos notifique por correo electrónico, <a href="https://twitter.com/">Twitter</a>, <em>web-hook</em>, <a href="https://slack.com/">Slack</a>, <abbr title="Short Message Service">SMS</abbr> o alguna más de forma que nos enteremos de la circunstancia inmediatamente. También podemos establecer el intervalo de tiempo de la monitorización desde como mínimo cada 5 minutos. En el panel de control podemos ver algunas estadísticas de cada monitor y de la cuenta, también se pueden reiniciar las estadísticas de cada monitor.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/images/dashboard_huc29035de7f83fd767594c92ff5f27042_239953_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dashboard"><img src="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/images/dashboard_huc29035de7f83fd767594c92ff5f27042_239953_300x200_fit_box_3.png" width="300" height="134" alt="Dashboard" title="Dashboard"  class="lozad "></a></p>
<figcaption>Dashboard</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/images/blogstack_huc756c62d73e8d527d9a8a0d4b1a83990_219472_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Monitor Blog Stack"><img src="https://picodotdev.github.io/blog-bitix/2015/12/monitorizar-estado-de-sitios-web-con-uptime-robot/images/blogstack_huc756c62d73e8d527d9a8a0d4b1a83990_219472_300x200_fit_box_3.png" width="300" height="130" alt="Monitor Blog Stack" title="Monitor Blog Stack"  class="lozad "></a></p>
<figcaption>Monitor Blog Stack</figcaption>
</figure>
</div>
<p>En el plan gratuito de Uptime Robot podemos crear 50 monitores, en el <a href="http://uptimerobot.com/pricing">plan de pago</a> se pueden establecer tiempos de monitorización a partir de 1 minuto en vez de 5 y crear más monitores.</p>
<p>Hay otras herramientas de monitorización similares pero la mayoría son de pago. También hay herramientas que se pueden instalar en el navegador o como una aplicación de escritorio pero no las recomiendo ya que las alertas solo nos llegarían cuando los estemos usando.</p>
<p>Perfectamente podemos usar Uptime Robot sobre el <em>endpoint</em> <em>health</em> de una <a href="https://picodotdev.github.io/blog-bitix/2015/12/informacion-y-metricas-de-la-aplicacion-con-spring-boot-actuator/">aplicación que usa Spring Boot Actuator</a> para proporcionar información y métricas.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://uptimerobot.com/">Uptime Robot</a></li>
<li><a href="http://www.herramientas10.com/10-servicios-gratuitos-monitorizar-sitios-web_155.html">Los 10 mejores servicios gratuitos para monitorizar sitios web</a></li>
<li><a href="http://papelesdeinteligencia.com/como-puedes-monitorizar-una-pagina-web/">Cómo puedes monitorizar una página web</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>