<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre el lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/gnu-linux/</id>
    <updated>2024-02-24T18:00:00+02:00</updated>
    <author></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2024/02/configurar-gnu-linux-para-usar-forward-dns-y-el-servidor-dns-de-consul/</id>
        <title>Configurar GNU/Linux para usar forward DNS y el servidor DNS de Consul</title>
        <updated>2024-02-24T18:00:00+02:00</updated>
        <published>2024-02-24T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2024/02/configurar-gnu-linux-para-usar-forward-dns-y-el-servidor-dns-de-consul/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Una de las cuestiones que tenía pendiente de mirar sobre Consul es como hacer que un nodo con GNU/Linux pueda acceder al catálogo de servicios mediante la interfaz DNS que ofrece Consul. Para esto es necesario configurar el forward DNS.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2024/02/configurar-gnu-linux-para-usar-forward-dns-y-el-servidor-dns-de-consul/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2024/02/obsidian-una-herramienta-para-almacenar-conocimiento/</id>
        <title>Obsidian, una herramienta para almacenar conocimiento</title>
        <updated>2024-02-10T20:00:00+02:00</updated>
        <published>2024-02-10T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2024/02/obsidian-una-herramienta-para-almacenar-conocimiento/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Hace ya unos meses desde que estoy usando Obsidian, pasado este tiempo considero que es un salto a los anteriores editores y aplicaciones de notas que he estado usando. A nivel personal como diario y otros asuntos ofrece varias funcionalidades que facilitan el gestionar el conocimiento y que no he visto en los anteriores editores que he usado. Es más que un editor de texto es una herramienta para almacenar conocimiento.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2024/02/obsidian-una-herramienta-para-almacenar-conocimiento/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/03/calendario-de-arch-linux-cubo-de-comandos-y-tux-en-papel/</id>
        <title>Calendario de Arch Linux, cubo de comandos y Tux en papel</title>
        <updated>2023-03-23T20:00:00+02:00</updated>
        <published>2023-03-23T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/03/calendario-de-arch-linux-cubo-de-comandos-y-tux-en-papel/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>En este artículo rescato, actualizo y comparto de nuevo unos elementos de papiroflexia que ofrecen información y son decorativos. Unos calendarios con la temática de Arch Linux uno de pared, de mesa y otro con forma de cubo de doce caras, un cubo con comandos de Arch Linux y el Tux en papel. Son relativamente simples de montar con un poco de tiempo y además de ofrecer información decoran.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/03/calendario-de-arch-linux-cubo-de-comandos-y-tux-en-papel/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/los-juegos-de-epic-games-y-gog-en-gnu-linux-con-el-lanzador-heroic-games-laucher/</id>
        <title>Los juegos de Epic Games y GOG en GNU/Linux con el lanzador Heroic Games Laucher</title>
        <updated>2023-01-26T19:00:00+02:00</updated>
        <published>2023-01-26T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/los-juegos-de-epic-games-y-gog-en-gnu-linux-con-el-lanzador-heroic-games-laucher/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Que aún GNU/Linux es un sistema minoritario y lo seguirá siendo es una realidad pero que en GNU/Linux no se puede jugar a los mismos juegos de Windows es ya un mito. El cliente de Steam para GNU/Linux da acceso al amplio catálogo de juegos de esta tienda donde la mayoría de juegos se puede jugar. En este artículo muestro como instalar y usar el cliente Heroic Games Launcher para las tiendas Epic Games y GOG que combinado con los juegos que regala semanalmente la Epic Games da acceso a un buen catálogo de juegos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/01/los-juegos-de-epic-games-y-gog-en-gnu-linux-con-el-lanzador-heroic-games-laucher/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="juegos"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/</id>
        <title>Construir, desplegar y observar aplicaciones de forma uniforme con Waypoint</title>
        <updated>2023-01-19T20:00:00+01:00</updated>
        <published>2023-01-19T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Cuando se tienen muchas aplicaciones si no se tienen unos procesos definidos seguramente cada una requerirá su propio proceso, herramientas de construcción y despliegue. Estas diferencias añaden complejidad y no es deseable para tener un flujo de trabajo ágil. La herramienta Waypoint de HashiCorp permite construir una aplicación independientemente del lenguaje en el que esté implementada, desplegar en diferentes proveedores de computación en la nube y observar las aplicaciones una vez desplegadas, todo con la misma herramienta y de forma uniforme que simplifica en gran medida el flujo de desarrollo.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/11/programas-para-crear-maquinas-virtuales-y-virtualizar-sistemas/</id>
        <title>Programas para crear máquinas virtuales y virtualizar sistemas</title>
        <updated>2022-11-17T20:30:00+02:00</updated>
        <published>2022-11-17T20:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/11/programas-para-crear-maquinas-virtuales-y-virtualizar-sistemas/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La virtualización es la herramienta con la que probar un sistema operativo sin tener que utilizar una máquina física. Con la cantidad de núcleos de los sistemas actuales y la cantidad de memoria RAM que tienen, la virtualización es una opción disponible para los usuarios. Una alternativa a la virtualización son los contenedores pero estos son más para servicios sin interfaz gráfica. Hay aplicaciones que permiten tener una máquina virtual de Windows en un sistema operativo GNU/Linux o probar una distribución de GNU/Linux en un sistema Windows antes de migrar definitivamente a GNU/Linux.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/11/programas-para-crear-maquinas-virtuales-y-virtualizar-sistemas/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/11/el-entorno-de-escritorio-gnome-simple-elegante-y-completo/</id>
        <title>El entorno de escritorio GNOME, simple, elegante y completo</title>
        <updated>2022-11-10T23:00:00+02:00</updated>
        <published>2022-11-10T23:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/11/el-entorno-de-escritorio-gnome-simple-elegante-y-completo/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>GNOME es uno de los entornos de escritorio con interfaz gráfica en GNU/Linux. Se caracteriza por ser simple en su guía de interfaz de usuario y ofreciendo simplemente las opciones de configuración que más utilizan todos los usuarios, dejando para la aplicación de retoques y las extensiones para añadir las funcionalidades que sólo algunos usuarios necesitan. Es simple pero completo incorporando un conjunto amplio de aplicaciones integradas desarrolladas junto al entorno de escritorio todas siguiendo la misma guía de estilos de usuario que permiten realizar las tareas básicas desde archivos hasta fotos, música, vídeos, visor de documentos e incluso juegos de pasatiempo entre muchas otras aplicaciones integradas.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/11/el-entorno-de-escritorio-gnome-simple-elegante-y-completo/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/08/prueba-de-velocidad-de-unidad-de-almacenamiento-en-gnu-linux/</id>
        <title>Prueba de velocidad de unidad de almacenamiento en GNU/Linux</title>
        <updated>2022-08-18T18:00:00+02:00</updated>
        <published>2022-08-18T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/08/prueba-de-velocidad-de-unidad-de-almacenamiento-en-gnu-linux/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>En un dispositivo de almacenamiento hay que tener en cuenta el tipo de la interfaz del dispositivo que determina la tasa de transferencia máxima teórica, el tipo de almacenamiento que determina en qué rangos de tasa de transferencia ofrecen la mayoría de dispositivos, el dispositivo en concreto que dependiendo del fabricante y calidad determina en qué parte del rango está la tasa de transferencia el modelo usado, la capacidad de almacenamiento y finalmente el precio que está en función de todo lo anterior.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/08/prueba-de-velocidad-de-unidad-de-almacenamiento-en-gnu-linux/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="hardware"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/</id>
        <title>Personalizar el símbolo del sistema de la línea de comandos con Starship</title>
        <updated>2022-06-26T04:00:00+02:00</updated>
        <published>2022-06-26T04:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El símbolo del sistema o <em>prompt</em> en la línea de comandos de la terminal precede a la introducción del comando a ejecutar. Los intérpretes de comandos o <em>shells</em> ofrecen un símbolo del sistema por defecto que muestran cierta información y con el formato que sus desarrolladores han elegido. Además de que cada intérprete de comandos tenga uno propio estos son bastante limitados en cuanto a personalización además de utilizar una configuración poco intuitiva. Starship es un personalizador del símbolo del sistema independiente del intérprete de comandos, que ofrece una gran cantidad de módulos para personalizar el símbolo del sistema según el directorio de trabajo actual y cuya configuración es muy intuitiva y está bien documentada.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/06/personalizar-el-simbolo-del-sistema-de-la-linea-de-comandos-con-starship/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/</id>
        <title>Los intérpretes de comandos, instalar y cambiar a otro</title>
        <updated>2022-06-23T21:00:00+02:00</updated>
        <published>2022-06-23T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La terminal es una herramienta muy utilizada por usuarios avanzados aún habiendo sistemas operativos en los que prácticamente todo se puede realizar desde un programa con interfaz gráfica. La linea de comandos es menos amigable ya que no ofrece apenas ayuda que guíe al usuario pero cuando un usuario conoce como realizar una tarea desde la línea de comandos es mucho más rápido que usar un programa con interfaz gráfica además de otras ventajas. El intérprete de comandos es la pieza que proporciona un entorno dese el que se introducen los comandos y con el que interacciona el usuario desde la terminal con una interfaz basada en texto.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/06/los-interpretes-de-comandos-instalar-y-cambiar-a-otro/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/</id>
        <title>Cómo usar el comando git bisect para descubrir el primer commit con un error</title>
        <updated>2022-04-28T19:00:00+02:00</updated>
        <published>2022-04-28T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El comando <em>git bisect</em> es muy útil cuando se desea encontrar en que <em>commit</em> se ha introducido un error en un rango de <em>commits</em> ya que permite automatizar la búsqueda sin tener que hacerlo manualmente el desarrollador que simplemente se limita a indicar a Git si el <em>commit</em> a analizar en cada prueba es correcto o incorrecto. Una vez descubierto en que <em>commit</em> se ha introducido el error es cuestión de revisar los cambios de ese <em>commit</em>, analizar sus cambios e identificadas las líneas de código erróneas aplicar la solución.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/</id>
        <title>Aplicación con interfaz gráfica para repositorios Git</title>
        <updated>2022-04-19T00:00:00+02:00</updated>
        <published>2022-04-19T00:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Una herramienta con interfaz gráfica hace más fácil algunas tareas que usar la línea de comandos directamente. Este también es el caso al trabajar con repositorios de código fuente con la herramienta de control de versiones Git. Usar la linea de comandos tiene sus propias ventajas como permitir automatizar tareas con <em>scripts</em> o realizar operaciones sin tener que usar la interfaz gráfica. La interfaz gráfica y la linea de comandos no son excluyentes, se pueden usar según convenga en cada ocasión. Al trabajar con múltiples repositorios de Git, para realizar operaciones comunes como <em>commits</em>, analizar el historial y ver las diferencias en un archivo entre dos versiones una herramienta gráfica también facilita la tarea.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/03/detectar-errores-y-comprobar-la-sintaxis-de-los-scripts-de-bash/</id>
        <title>Detectar errores y comprobar la sintaxis de los scripts de Bash</title>
        <updated>2022-03-24T22:00:00+01:00</updated>
        <published>2022-03-24T22:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/03/detectar-errores-y-comprobar-la-sintaxis-de-los-scripts-de-bash/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El lenguaje de <em>scripting</em> Bash permite crear sencillos y no tan sencillos <em>scripts</em> para automatizar tareas del sistema o funciones. Dado que un <em>script</em> de Bash se interpreta no se compila un error no se detecta hasta llegar a la línea con el error que puede ser en la mitad del <em>script</em> dejando la tarea sin finalizar correctamente. Para evitar errores antes de la ejecución del <em>script</em> Bash ofrece varias opciones.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/03/detectar-errores-y-comprobar-la-sintaxis-de-los-scripts-de-bash/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/02/que-son-los-archivos-dotfiles-y-como-gestionarlos-con-chezmoi/</id>
        <title>Qué son los archivos dotfiles y cómo gestionarlos con chezmoi</title>
        <updated>2022-02-17T20:00:00+01:00</updated>
        <published>2022-02-17T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/02/que-son-los-archivos-dotfiles-y-como-gestionarlos-con-chezmoi/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los archivos <em>dotfiles</em> son utilizados para guardar información de configuración de las aplicaciones que se almacenan en el directorio del usuario. Se denominan <em>dotfiles</em> porque son archivos que empiezan por un punto o están en una carpeta que empieza por un punto, además en GNU/Linux los archivos que empiezan por un punto son archivos ocultos que por defecto los exploradores de archivos no muestran. Para no perder la configuración de estos archivos adaptada por el usuario a sus preferencias al migrar a otro sistema o compartir la configuración entre varios sistemas hay varios programas con la funcionalidad específica de gestionar los archivos <em>dotfiles</em>.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/02/que-son-los-archivos-dotfiles-y-como-gestionarlos-con-chezmoi/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/</id>
        <title>Aprovisionar un servidor en la infraestructura cloud de Clouding con Ubuntu y Nginx usando Ansible y protocolo seguro HTTPS con Let&#39;s Encrypt</title>
        <updated>2021-12-23T09:00:00+01:00</updated>
        <published>2021-12-23T09:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/"/>
        <author><name></name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La computación <em>cloud</em> permite crear un servidor con unos pocos <em>clics</em>, en unos pocos minutos, con la posibilidad de ajustar a las necesidades su capacidad en unidades de cómputo, memoria y almacenamiento y facturado solo por los recursos consumidos por unidad de tiempo y con la flexibilidad de ampliar o reducir la capacidad del servidor <em>cloud</em> en cualquier momento. Si con la computación <em>cloud</em> ya es muy sencillo y rápido disponer de un servidor la mayor dificultad está en aprovisionarlo para que ofrezca el servicio que se desea, para facilitar el aprovisionamiento hay herramientas como Ansible diseñadas con este objetivo y tratar la infraestructura como código. En este artículo muestro como crear y aprovisionar un servidor <em>cloud</em> en la infraestructura <em>cloud</em> de Clouding para un servidor web con Ubuntu y Nginx aprovisionado con Ansible y configurado con el protocolo seguro HTTPS con certificados generados por Let&rsquo;s Encrypt.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/12/aprovisionar-un-servidor-en-la-infraestructura-cloud-de-clouding-con-ubuntu-y-nginx-usando-ansible-y-protocolo-seguro-https-con-lets-encrypt/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="patrocinado"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
</feed>