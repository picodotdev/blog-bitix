<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/gnu-linux/</id>
    <updated>2022-04-28T19:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/07/usar-docker-con-docker-machine-en-linux-windows-o-mac/</id>
        <title>Usar docker con Docker Machine en Linux, Windows o Mac</title>
        <updated>2015-07-18T21:00:00+02:00</updated>
        <published>2015-07-18T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/07/usar-docker-con-docker-machine-en-linux-windows-o-mac/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Aunque no usemos Linux podemos hacer uso de docker a través de una máquina virtual de VirtualBox y con Docker Machine. Docker Machine permite crear un sistema con la misión de albergar contenedores de docker, puede ser en VirtualBox pero también en Amazon EC2 o Digital Ocean además de otras muchas opciones.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p><a href="https://www.docker.com/">Docker</a> ha dejado de ser únicamente una tecnología de contenedores formando un ecosistema alrededor de docker más completo, <a href="https://docs.docker.com/compose/">Docker Compose</a> que permite <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">definir un grupo de contenedores en un archivo</a>, por supuesto parte importante de este ecosistema es <a href="https://registry.hub.docker.com/">Docker Hub</a> para <a href="https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/">compartir imágenes de contenedores</a> y <a href="https://docs.docker.com/swarm/">Docker Swarm</a> que permite formar un <em>cluster</em> de máquinas. En este artículo comentaré cómo usar <a href="https://docs.docker.com/machine/">Docker Machine</a> y dejaré para un futuro <a href="https://docs.docker.com/swarm/">Docker Swarm</a> (ya que por el momento las pruebas que he hecho no han sido exitosas).</p>
<p>Antes de nada decir que tanto Docker Machine en el momento de escribir este artículo están en las fases iniciales de desarrollo y pueden cambiar significativamente antes de lanzar una versión 1.0, ahora Docker Machine está en las version 0.3.0. La combinación de Docker Machine y Docker Swarm en algunos puntos son parecidos a los que se ofrecen en <a href="https://coreos.com/">CoreOS</a>.</p>
<p>Si has usado <a href="https://www.vagrantup.com/">Vagrant</a> te resultará Docker Machine muy similar ya que permite crear máquinas virtuales en diferentes proveedores en una máquina anfitrión con <a href="https://www.virtualbox.org/">VirtualBox</a> hasta <a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a> o <a href="https://www.digitalocean.com/">Digital Ocean</a>, la <a href="https://docs.docker.com/machine/#drivers">lista de controladores soportados</a> es bastante amplia. Estas máquinas que creamos con Docker Machine están destinadas como único objetivo a albergar contenedores docker usando el sistema operativo <a href="https://github.com/boot2docker/boot2docker">boot2docker</a>.</p>
<p>Para usar Docker Machine debemos <a href="https://github.com/docker/machine/releases">descargar el binario</a>, darle permisos de ejecución y si queremos añadirlo a la variable <em>PATH</em> del sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-machine --version&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-machine-version.sh</span>
    </div>
</div>
<p>Con los siguientes comandos podemos crear una máquina virtual para los contenedores docker, listar las máquinas virtuales creadas, hacer SSH a ella, ejecutar un contenedor en ella, pararla y eliminar una máquina virtual además de obtener la <em>IP</em> asignada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-machine create --driver virtualbox dev&#10;</span></span><span class="line"><span class="cl">$ docker-machine ls&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-machine-create.sh</span>
    </div>
</div>
<p>Estableciendo las variables de entorno de la máquina virtual podemos usar el comando docker como si de la máquina anfitrión fuera, todos los comandos de docker que lancemos se ejecutarán contra el contenedor docker de la máquina virtual. En el siguiente caso se ejecuta el contenedor de <em>busybox</em> en la máquina virtual <em>dev</em>. Con <em>--unset</em> podemos reiniciar la configuración a la máquina anfitrión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-machine env dev&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">eval</span> <span class="s2">&#34;</span><span class="k">$(</span>docker-machine env dev<span class="k">)</span><span class="s2">&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ docker run busybox <span class="nb">echo</span> <span class="s2">&#34;hello world&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">eval</span> <span class="s2">&#34;</span><span class="k">$(</span>docker-machine env --unset<span class="k">)</span><span class="s2">&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-machine-run.sh</span>
    </div>
</div>
<p>Podemos detener, volver a iniciar, hacer SSH y eliminar la máquina virtual con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-machine start dev&#10;</span></span><span class="line"><span class="cl">$ docker-machine ssh dev&#10;</span></span><span class="line"><span class="cl">$ docker-machine stop dev&#10;</span></span><span class="line"><span class="cl">$ docker-machine rm dev</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-machine-manage.sh</span>
    </div>
</div>
<div class="media">
<script type="text/javascript" src="https://asciinema.org/a/23600.js" id="asciicast-23600" async></script>
<noscript><a href="https://asciinema.org/a/23600" target="_blank"><img src="https://asciinema.org/a/23600.png" width="650" height="450"></a></noscript>
</div>
<p>El directorio por defecto donde se guardarán los archivos de las máquinas virtuales es <em>~/.docker/machine</em>, si queremos cambiarlo podemos utilizar el parámetro <em>--storage-path</em> en cada uno de los comandos anteriores de la siguiente forma, el orden de los parámetros es importante:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-machine --storage-path <span class="s2">&#34;/run/media/picodotdev/BMOVE_ROJO/docker/machine&#34;</span> create --driver virtualbox dev&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-machine-storage-path.sh</span>
    </div>
</div>
<p>En el administrador de VirtualBox veremos que se ha creado la máquina virtual <em>dev</em> además de poder cambiar la configuración de memoria y otros parámetros de la máquina virtual.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/07/usar-docker-con-docker-machine-en-linux-windows-o-mac/images/virtualbox_hudd2a5a18303e22b8bb6f9e8594255a23_110586_2560x1440_fit_box_3.png" data-gallery="" title="Máquina de Docker Machine ne VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2015/07/usar-docker-con-docker-machine-en-linux-windows-o-mac/images/virtualbox_hudd2a5a18303e22b8bb6f9e8594255a23_110586_300x200_fit_box_3.png" width="284" height="200" alt="Máquina de Docker Machine ne VirtualBox" title="Máquina de Docker Machine ne VirtualBox"  class="lozad "></a></p>
<figcaption>Máquina de Docker Machine en VirtualBox</figcaption>
</figure>
</div>
<p>Dado que los contenedores se ejecutan en una máquina virtual de VirtualBox y VirtualBox está disponible en Windows y Mac OS además del binario de Docker Machine para estas plataformas podemos usar docker en cualquiera de estos. Aunque no sea de forma nativa como en Linux para un entorno de desarrollo donde las personas trabajan con cualquiera de estos sistemas operativos puede sernos de utilidad.</p>
<p>Como nota final diré que después de crear una máquina virtual las siguientes veces al crear una nueva Docker Machine se me quedaba indefinidamente en el mensaje <em>Starting VM&hellip;</em>, algún problema con Docker Machine o VirtualBox que en una futura versión podría solucionarse, la única forma de resolverlo que se es reiniciando el ordenador pero seguro que hay alguna mejor.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.docker.com/machine/">Docker Machine</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/</id>
        <title>Crear y usar un repositorio en Docker Hub</title>
        <updated>2015-07-11T01:00:00+02:00</updated>
        <published>2015-07-10T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>¿Por qué se habla tanto de Docker y despierta tanto interés si la tecnología ya existía desde hace tiempo tanto en otros sistemas operativos como en Linux? Uno de los éxitos que ha contribuido a ellos es Docker Hub, un repositorio de imágenes en el que cualquiera puede contribuir con las suyas. Esto hace que pueda encontrarse cualquier herramienta de las populares y empezar a usarlas en muy pocos minutos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>Probablemente uno de los éxitos de Docker más que la propia tecnología de contenedores sea <a href="https://registry.hub.docker.com/">Docker Hub</a> que permite a los usuarios compartir las imágenes construidas, se podría decir que es el <a href="https://github.com/">GitHub</a> de los contenedores docker y quizá por ello el paralelismo en el nombre entre ambos. Docker Hub permite subir imágenes o usar las imágenes oficiales de <a href="https://www.postgresql.org/">postgresql</a>, <a href="https://redis.io/">redis</a>, <a href="https://www.mysql.com/">mysql</a>, <a href="https://www.ubuntu.com/">ubuntu</a>, <a href="https://www.rabbitmq.com/">rabbitmq</a>, &hellip; y otra <a href="https://registry.hub.docker.com/">multitud de proyectos</a>.</p>
<p>El <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">archivo Dockerfile con el que construimos una imagen</a> podemos hospedarlo en un repositorio de GitHub y que Docker Hub lo obtenga para construir la imagen. Docker Hub ofrece repositorios públicos en los que colocar las imágenes que cualquier otro usuario puede acceder y usar o repositorios privados con cierto coste según el número de repositorios privados, el primer repositorio privado es gratuito.</p>
<h3 id="otros-artículos-sobre-docker">Otros artículos sobre Docker</h3>
<p>Este artículo forma parte de otros artículos sobre Docker que ya he escrito si quieres empezar por el principio puedes leer primero la <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción y características sobre Docker</a>, el <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Inicio básico de Docker</a>, <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Como crear una imagen con un Dockerfile</a> o <a href="https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/">Como usar docker con Docker Compose</a>. En siguientes artículos hablaré de otras herramientas como Docker Machine y Docker Swarm.</p>
<p>A continuación explicaré como crear un repositorio en Docker Hub que obtenga los Dockerfile de un repositorio de GitHub y construya las imágenes de los Dockerfile de forma automática cuando haya cambios en los archivos dockerfile de GitHub.</p>
<h3 id="crear-una-cuenta-en-docker-hub">Crear una cuenta en Docker Hub</h3>
<p>Primero necesitaremos crear una cuenta en Docker Hub. El nombre de usuario determinará el nombre de las imágenes, siendo mi nombre de usuario <em>picodotdev</em> al usar las imágenes debería usar:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run picodotdev/dockerhub-postgres:9.4&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-run.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/images/dockerhub_hu5b9976776b1cd163218f0599bbd96d6b_66063_2560x1440_fit_box_3.png" data-gallery="" title="Docker Hub"><img src="https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/images/dockerhub_hu5b9976776b1cd163218f0599bbd96d6b_66063_300x200_fit_box_3.png" width="269" height="200" alt="Docker Hub" title="Docker Hub"  class="lozad "></a></p>
<figcaption>Docker Hub</figcaption>
</figure>
</div>
<h3 id="subir-el-archivo-dockerfile-a-un-repositorio-de-github">Subir el archivo Dockerfile a un repositorio de GitHub</h3>
<p>Posteriormente deberemos crear un repositorio en GitHub para alojar los archivos Dockerfile que usará Docker Hub para construir las imágenes de Docker. En el ejemplo usaré el <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DockerHub">repositorio blog-ejemplos</a> y dentro de este los dockerfiles los he <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DockerHub/postgres/9.4">ubicado dentro de una carpeta</a>.</p>
<p>Una vez que tenemos el repositorio de GitHub subimos un <a href="https://github.com/picodotdev/blog-ejemplos/blob/master/DockerHub/postgres/9.4/Dockerfile">Dockerfile para el ejemplo</a>, usaré el proporcionado de forma <a href="https://registry.hub.docker.com/_/postgres/">oficial de posgresql</a>, y creamos en Docker Hub una <em>build</em> automatizada, se nos solicitará permisos en la cuenta de GitHub para que Docker Hub pueda acceder a nuestros repositorios.</p>
<h3 id="crear-el-repositorio-en-dockerhub-y-la-_build_-automática">Crear el repositorio en DockerHub y la <em>build</em> automática</h3>
<p>En la creación del repositorio en Docker Hub con <em>build</em> automatizada seleccionamos el repositorio de GitHub que contiene los repositorios y el archivo DockerFile para el que queremos hacer la build automatizada. Le asignamos un nombre al repositorio y un <em>tag</em> a la <em>build</em> que podremos usar al hacer el <em>pull</em> de la imagen.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/images/dockerhub-automated-build_hu82559c1d7c01b549f79d8e413e2351ad_42125_2560x1440_fit_box_3.png" data-gallery="" title="Docker Hub"><img src="https://picodotdev.github.io/blog-bitix/2015/07/crear-y-usar-un-repositorio-en-docker-hub/images/dockerhub-automated-build_hu82559c1d7c01b549f79d8e413e2351ad_42125_300x200_fit_box_3.png" width="300" height="196" alt="Docker Hub" title="Docker Hub"  class="lozad "></a></p>
<figcaption>Build automatizada de Docker Hub</figcaption>
</figure>
</div>
<p>Docker Hub se encargará de obtener el archivo Dockerfile y construir la imagen, en el proceso podremos ver las trazas generadas.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://docs.docker.com/userguide/dockerrepos/">Get started with Docker Hub</a></li>
<li><a href="http://docs.docker.com/docker-hub/builds/#the-dockerfile-and-automated-builds">The Dockerfile and Automated Builds</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/</id>
        <title>Aplicaciones multicontenedor con Docker Compose</title>
        <updated>2015-07-18T21:00:00+02:00</updated>
        <published>2015-07-03T16:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Continuando la serie de artículos sobre Docker, otra de las herramientas disponibles en el ecosistema y que nos facilitará enormemente el administrar aplicaciones compuestas por varios contenedores relacionados entre sí es Docker Compose. Definiendo en un archivo los contenedores que forman parte de una aplicación podemos iniciarlos, pararlos, eliminarlos o ver su estado como si de una unidad se tratara.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>Una vez que ya sabemos que nos puede proporcionar una de las herramientas de la que más se está hablando con la <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">introducción a Docker</a>, conocemos <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">como empezar a usar Docker</a> y sabemos <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">cómo crear nuestras propias imágenes de Docker</a> para los propósitos específicos que necesitemos nos resultará interesante algunas de las nuevas herramientas que proporciona Docker. El ecosistema de docker ya no solo se compone del entorno de ejecución de los contenedores, explicadas de forma básica son:</p>
<ul>
<li><a href="https://www.docker.com/">Docker</a>: el sistema de contenedores (<em>runtime</em>, imágenes, &hellip;).</li>
<li><a href="https://registry.hub.docker.com/">Docker Hub</a>: el repositorio de imágenes que las diferentes herramientas de forma oficial o a través de usuarios construyen y comparten imágenes que cualquiera puede usar.</li>
<li><a href="https://docs.docker.com/compose/">Docker Compose</a>: permite describir un conjunto de contenedores que se relacionan entre ellos.</li>
<li><a href="https://docs.docker.com/machine/">Docker Machine</a>: permite construir máquinas virtuales para alojar contenedores. Similar a lo que hace <a href="https://www.vagrantup.com/">Vagrant</a>, al igual que el anterior también permite construir máquinas que ejecuten contenedores con <a href="https://www.virtualbox.org/">VirtualBox</a> o diferentes sistemas de computación en en la nube como <a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a>, <a href="https://www.digitalocean.com/">Digital Ocean</a> u otros. Docker Machine puede ser la forma de usar Docker en Windows o Mac OS hasta que funcione de forma nativa como en GNU/Linux.</li>
<li><a href="https://docs.docker.com/swarm/">Docker Swarm</a>: permite construir un <em>cluster</em> de máquinas al que se puede enviar contenedores Docker para su ejecución.</li>
</ul>
<p>Continuando la <a href="https://picodotdev.github.io/blog-bitix/series/docker/">serie de artículos sobre Docker</a> que escribí hace unos meses escribiré sobre cada una de estas nuevas herramientas, empezando en este artículo con Docker Compose en el que explicaré de qué forma nos puede servir, como instalarlo y el descriptor de contenedores con un ejemplo.</p>
<h3 id="introducción-a-docker-compose">Introducción a Docker Compose</h3>
<p>Las aplicaciones basadas en microservicios se prestan a usar múltiples contenedores cada uno con un servicio, uno puede contener la base de datos <a href="https://www.postgresql.org/">postgresql</a>, otro una base de datos clave/valor <a href="https://redis.io/">redis</a> o de documentos como <a href="https://www.elastic.co/es/elasticsearch/">elasticsearch</a> para hacer búsquedas, otro un sistema de mensajería como <a href="https://www.rabbitmq.com/">rabbitmq</a>, otro <a href="https://tomcat.apache.org/">tomcat</a> o <a href="https://wildfly.org/">wildfly</a> que use los anteriores y un servidor web como <a href="https://nginx.org/">Nginx</a>. Teniendo múltiples contenedores usar el comando <code>docker run</code> para cada uno de ellos nos resultará incómodo.</p>
<p>En este punto entra Docker Compose que es una herramienta que sirve para definir nuestra aplicación multicontenedor en un archivo de texto con las mismas propiedades que indicaríamos con el comando <code>docker run</code> individualmente, así como las dependencias entre los contenedores. Una vez definidos los múltiples contenedores del servicio en el archivo Docker Compose permite iniciar con un único comando todos los contenedores y en el orden especificado según sus dependencias.</p>
<p>El archivo descriptor nos puede servir no solo como forma de iniciar los contenedores en un entorno de desarrollo sino como de documentación de la aplicación en la que veremos qué contenedores, imágenes, volúmenes, enlaces y demás propiedades tienen.</p>
<h3 id="instalar-docker-compose">Instalar Docker Compose</h3>
<p>Una forma de instalar Docker Compose es <a href="https://github.com/docker/compose/releases">descargar el binario</a> adecuado a nuestra plataforma GNU/Linux o Mac. Otra forma de instalación de Docker Compose es recurrir al paquete de la distribución ya sea <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://www.archlinux.org/">Arch Linux</a> u otra, esta forma tiene la ventaja de que el paquete se mantiene actualizado en cada actualización del sistema.</p>
<p>Descargando el binario de Docker Compose hay que darle permisos de ejecución y si interesa colocarlo en la variable de entorno <em>PATH</em> del sistema:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ chmod +x docker-compose&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>permisos.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">PATH=$PATH:~/Software/scripts/docker-compose&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>bashrc</span>
    </div>
</div>
<p>Con el siguiente comando veremos que Docker Compose funciona correctamente y la versión del mismo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-compose --version&#10;</span></span><span class="line"><span class="cl">docker-compose version: 1.3.1&#10;</span></span><span class="line"><span class="cl">CPython version: 2.7.9&#10;</span></span><span class="line"><span class="cl">OpenSSL version: OpenSSL 1.0.1e <span class="m">11</span> Feb <span class="m">2013</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-version.sh</span>
    </div>
</div>
<h3 id="el-descriptor-de-contenedores">El descriptor de contenedores</h3>
<p>El descriptor de los contenedores a usar con Docker Compose es un archivo de texto con <a href="https://www.yaml.org/">formato yaml</a> en la que especificamos los diferentes contenedores y sus propiedades, básicamente podemos indicar las mismas propiedades que indicamos arrancando los contenedores individualmente con el comando <code>docker run</code>. En el siguiente ejemplo vemos varios contenedores, dos contenedores de datos para redis y postgresql, los contenedores de redis y postgresql y un contenedor para la aplicación usando tomcat enlazado con los contenedores de redis y postgresql definidos previamente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">redisdb</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">busybox</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/var/lib/redis</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">postgresqldb</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">busybox</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/var/lib/postgresql/data</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">redis</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">redis:3</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">volumes_from</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">redisdb</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;6379:6379&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">postgresql</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres:9</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">volumes_from</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">postgresqldb</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">POSTGRES_USER</span><span class="p">:</span><span class="w"> </span><span class="l">posgresql</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">POSTGRES_PASSWORD</span><span class="p">:</span><span class="w"> </span><span class="l">posgresql</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;5432:5432&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apps</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">library/tomcat:8-jre8</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">links</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">redis</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">postgresql</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;8080:8080&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>La imagen de los contenedores se indica con la propiedad <em>image</em>, los contenedores de datos, <em>redisdb</em> y <em>posgresqldb</em>, usan la propiedad <em>volumes</em> con los datos que guardarán y la imagen de <em>busybox</em> (se suele usar esta para los contenedores de datos porque es muy pequeña), con la propiedad <em>hostname</em> podemos indicar el nombre de la máquina que al usar la propiedad <em>link</em> docker hará visible al contenedor que los usen, con <em>volumes_from</em> podemos usar volúmenes, con <em>links</em> enlazar contenedores y con <em>ports</em> asociar puertos entre los contenedores y la propia máquina anfitrión, en el ejemplo he usado los puertos por defecto de cada uno de los servicios.</p>
<p>La <a href="https://docs.docker.com/compose/yml/">descripción completa del formato del archivo de Docker Compose</a> nos da una idea de las opciones que podemos usar, está bastante bien explicado y con ejemplos que nos resultará sencillo entender conociendo los parámetros que usamos con <em>docker run</em>.</p>
<h3 id="iniciar-los-contenedores-con-docker-compose">Iniciar los contenedores con Docker Compose</h3>
<p>Escrito el archivo de los contenedores y llamándolo <em>docker-compose.yml</em> podemos iniciar los contenedores con el comando <code>docker-compose up</code> estando en el mismo directorio de trabajo donde esté ubicado del archivo yml (y previamente habiendo iniciado el servicio de docker). Con <em>docker-compose ps</em> podremos ver el estado de los contenedores y de cuales está compuesta la aplicación. Con la opción <em>--help</em> podemos ver la lista completa de comandos que podemos usar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="l">$ docker-compose up -d</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">$ docker-compose ps</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">$ docker-compose stop</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">$ docker-compose restart</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">$ docker-compose logs</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/images/docker-compose_hua74a7e9db5f95e72caba74a265683e33_52379_2560x1440_fit_box_3.png" data-gallery="" title="Docker Compose"><img src="https://picodotdev.github.io/blog-bitix/2015/07/aplicaciones-multicontenedor-con-docker-compose/images/docker-compose_hua74a7e9db5f95e72caba74a265683e33_52379_300x200_fit_box_3.png" width="300" height="156" alt="Docker Compose" title="Docker Compose"  class="lozad "></a></p>
<figcaption>Docker Compose</figcaption>
</figure>
</div>
<p>docker-compose inicia los contenedores en el orden que hemos indicado en el archivo de definición, las trazas emitidas de los servicios de los contenedores aparecerán en la terminal si iniciamos los contenedores en primer plano y con <em>Ctrl+C</em> se pararán los contenedores. Indicando la opción <em>-d</em> los contenedores se iniciarán en segundo plano, con <em>docker-compose stop</em> podremos pararlos, con <em>docker-compose restart</em> reiniciarlos, <em>docker-compose rm</em> para eliminar completamente los contenedores y con <em>docker-compose logs</em> veremos las trazas emitidas por los servicios que nos serán de utilizar si iniciamos los contenedores en segundo plano.</p>
<div class="media">
<script type="text/javascript" src="https://asciinema.org/a/23602.js" id="asciicast-23602" async></script>
<noscript><a href="https://asciinema.org/a/23602" target="_blank"><img src="https://asciinema.org/a/23602.png" width="650" height="450"></a></noscript>
</div>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<p>En las siguientes semanas publicaré más artículos sobre esta serie de Docker comentando <a href="https://registry.hub.docker.com/">Docker Hub</a>, <a href="https://docs.docker.com/machine/">Docker Machine</a> y explicaré de qué forma nos pueden ser útiles estas otras herramientas.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/">Introducción a elasticsearch</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/06/hemeroteca-7/</id>
        <title>Hemeroteca #7</title>
        <updated>2015-06-27T22:00:00+02:00</updated>
        <published>2015-06-27T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/06/hemeroteca-7/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Pasado un nuevo semestre he escrito principalmente sobre temas de programación, Java y poco sobre Linux o software libre. Incluyo aquí el listado completo de los artículos que he escrito.</strong></p>]]>
        <![CDATA[<p>Otros seis meses que han pasado y estos especialmente para mi muy rápido. Como suelo hacer cada este periodo de tiempo recopilo en un artículo <em>Hemeroteca</em> los artículos que he publicado al ritmo que mantengo de uno por semana. Este ya es el séptimo contando los de <a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev</a> y de <a href="https://picodotdev.github.io/blog-bitix/">Blog Bitix</a>.</p>
<p>Como resumen de estas 26 semanas he publicado 27 artículos destacando que he cambiado de herramienta con la que mantengo la bitácora pasando de usar <a href="http://octopress.org/">Octopress</a> a <a href="https://gohugo.io/">Hugo</a> que me ha permitido cambiar el diseño completamente personalizándolo enteramente a mi gusto y agregar algunas nuevas funcionalidades como un mejor previsualizador de imágenes, resúmenes al inicio de los artículos, o un nuevo menú con las categorías principales de las que escribo. De lo que más he escrito ha sido sobre programación y como no pueden faltar en este <em>blog</em> algún artículo sobre <a href="https://tapestry.apache.org/">Apache Tapestry</a>.</p>
<p>De los artículos que he escrito destacaré los siguientes, son con los que más a gusto he quedado después de escribirlos y me parece que merecen una lectura, por orden cronológico:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/conferencia-bilbostack-2015/">Conferencia BilboStack 2015</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/internacionalizacion-i18n-en-javascript/">Internacionalización (i18n) en JavaScript</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/02/5-aniversario-del-blog/">5º aniversario del blog</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/02/listener-de-eventos-de-hibernate-con-servicios-de-spring/">Listener de eventos de Hibernate con servicios de Spring</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/03/datos-de-sesion-externalizados-con-spring-session/">Datos de sesión externalizados con Spring Session</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/03/aplicacion-web-java-autocontenida-con-tomcat-embedded/">Aplicación web Java autocontenida con Tomcat Embedded</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/03/productividad-y-errores-de-compilacion-con-apache-tapestry/">Productividad y errores de compilación con Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/">Guardar contraseñas usando «Salted Password Hashing» y otras formas correctas</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/04/nueva-visita-a-5-plus-opciones-de-hosting-para-aplicaciones/">Nueva visita a 5+ opciones de «hosting» para aplicaciones</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/04/certificado-ssl-de-empresa-wildcard-y-de-validacion-extendida/">Certificado SSL de empresa wildcard y de validación extendida</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/programacion-de-juegos-y-3d-en-java-con-jmonkeyengine/">Programación de juegos y 3D en Java con jMonkeyEngine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/">Nuevo diseño en Blog Bitix</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">10 razones para seguir usando Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/06/nueva-visita-a-herramientas-para-un-proyecto-java/">Nueva visita a herramientas para un proyecto Java</a></li>
</ul>
<p>El resto de artículos son los siguientes, también interesantes:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar plugin ágil en Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/como-hacer-un-substring-de-una-cadena-html/">Como hacer un substring de una cadena HTML</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/convertir-fechas-y-husos-horarios-en-java/">Fechas y usos horarios en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/02/como-hacer-un-downgrade-de-un-paquete-en-arch-linux/">Cómo hacer un «downgrade» de un paquete en Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/02/la-palabra-clave-assert-de-java-y-un-ejemplo/">La palabra clave assert de Java y un ejemplo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/02/ejemplo-de-listener-de-eventos-de-hibernate/">Ejemplo de listener de eventos de Hibernate</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/03/introduccion-y-ejemplo-de-api-rpc-con-apache-thrift/">Introducción y ejemplo de API RPC con Apache Thrift</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/04/evitar-iniciar-varias-veces-la-maquina-virtual-java-para-procesos-cortos/">Evitar iniciar varias veces la máquina virtual Java para procesos cortos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/04/escribir-en-varios-writer-a-la-vez/">Escribir en varios writer a la vez</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/patron-multiples-vistas-de-un-mismo-dato-en-tapestry/">Patrón múltiples vistas de un mismo dato en Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/06/servicio-para-obtener-ratios-de-conversion-entre-divisas/">Servicio para obtener ratios de conversión entre divisas</a></li>
</ul>
<p>Cada mes sigo aumentando ligeramente o manteniendo el número de visitas del mes anterior, la mayoría procedentes del buscador Google. En enero andaba en unas 1125 sesiones y 1400 páginas vistas semanales, hoy en unas 1450 sesiones y 2000 páginas vistas, siguen siendo pocas comparadas con algunos otras bitácoras de temática similar. De vez en cuando tengo algún nuevo seguidor en twitter y son pocos los comentarios que recibo probablemente esté haciendo algo que podría hacer mejor. Los artículos que publico suelen ser para un público de nivel medio y uno a la semana, <a href="http://www.marketingguerrilla.es">recomiendan escribir artículos de un nivel básico</a> y probablemente si siguiese esta recomendación recibiría más visitas o más comentarios pero me suele gustar escribir de algo que incluso yo aprenda algo y que no esté ya en un millardo de sitios y sea medianamente fácil de encontrar con una búsqueda sencilla, aunque igual me planteo de vez en cuando seguir esta recomendación.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/06/hemeroteca-7/images/analytics_hu1ac75864dcb350a7d40e492d9b491358_64582_2560x1440_fit_box_3.png" data-gallery="" title="Visitas semanales de Blog Bitix"><img src="https://picodotdev.github.io/blog-bitix/2015/06/hemeroteca-7/images/analytics_hu1ac75864dcb350a7d40e492d9b491358_64582_300x200_fit_box_3.png" width="300" height="111" alt="Visitas semanales de Blog Bitix" title="Visitas semanales de Blog Bitix"  class="lozad "></a></p>
<figcaption>Evolución de sesiones semanales en Blog Bitix</figcaption>
</figure>
</div>
<p>Sigo teniendo pendiente de publicar unos cuantos nuevos artículos que continúen la <a href="https://picodotdev.github.io/blog-bitix/series/docker/">serie sobre Docker</a> que ya publiqué, también tengo más artículos preparados sobre programación con Java y bastantes ideas ya listadas para seguir escribiendo. Pero si te interesa un determinado tema y quisieras que explicase o hablase de algo relacionado con lo que suelo escribir añade un comentario y trataré de ver si me es posible, ¡comenta, pregunta lo que quieras o hazme la recomendación que estés pensando!.</p>
<p>Para finalizar agradecer a varios usuarios de twitter que aunque no conozco suelen compartir muchos de los artículos que escribo y me ayudan enormemente a hacer que el contenido de Blog Bitix llegue a más personas. <a href="https://twitter.com/jbravo">Joaquin Bravo</a>, <a href="https://twitter.com/Statick_ds">Diego Saavedra</a>, <a href="https://twitter.com/Mr_Prometheus">Camilo Bernal</a>, <a href="https://twitter.com/pereyrada">A. Daniel Pereyra</a> y otros en la <a href="https://twitter.com/search?q=%22Blog%20Bitix%22&amp;src=typd">linea de tiempo de Blog Bitix</a>, ¡gracias!.</p>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/02/como-hacer-un-downgrade-de-un-paquete-en-arch-linux/</id>
        <title>Cómo hacer un «downgrade» de un paquete en Arch Linux</title>
        <updated>2020-10-27T21:00:00+01:00</updated>
        <published>2015-02-07T11:05:24+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/02/como-hacer-un-downgrade-de-un-paquete-en-arch-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<p><a href="https://www.archlinux.org/">Arch Linux</a> es un distribución <a href="https://en.wikipedia.org/wiki/Rolling_release"><em>rolling release</em></a> en la que los paquetes son actualizados constantemente en cuanto sale una nueva versión. Esto tiene la ventaja de que siempre se tiene el sistema actualizado con las versiones más recientes de los programas, en los que se van añadiendo nuevas características y corrigiendo errores de seguridad y funcionales. Sin embargo, en algún momento puede ocurrir que una actualización de algún paquete nos introduzca algún error, en este caso podemos hacer una desactualización o <em>downgrade</em> de paquete y volver a la última versión estable.</p>
<p>No es habitual que haya errores pero puede darse el caso, antes de hacer una desactualización es recomendable buscar en los <a href="https://bbs.archlinux.org/">foros de arch linux</a> una respuesta con una alternativa mejor. En todo este tiempo como usuario de Arch Linux, más de 5 años, los <em>downgrades</em> que he tenido que hacer han sido dos, uno para el paquete de <em>subversion</em> y el que voy a comentar.</p>
<p>El último caso ha sido para el paquete de <a href="https://www.archlinux.org/packages/extra/x86_64/networkmanager/"><em>networkmanager</em></a> al actualizarse a la versión <em>1.0.0-1</em> desde la <em>0.9.10.0-4</em>. El problema que me ocasionaba era varios intentos de conexión y desconexión tanto de la red cableada como de la wifi, después de varios intentos seguidos y menos de un minuto conseguía conectarse a la red correctamente pero era un poco molesto. En los foros de Arch Linux hay varios mensajes de otros usuarios con el mismo problema <a href="https://bbs.archlinux.org/viewtopic.php?id=193275">I</a>, <a href="https://bbs.archlinux.org/viewtopic.php?id=192679">II</a> y <a href="https://bbs.archlinux.org/viewtopic.php?id=192344">III</a>, donde se comenta algunas alternativas, una de ellas la desactualización del paquete.</p>
<p>En la página <a href="https://wiki.archlinux.org/index.php/Downgrading_packages">desactualizar paquetes</a> de la wiki de Arch Linux hay información más detallada de la desactualización de un paquete.</p>
<h3 id="cómo-hacer-_downgrade_-de-un-paquete">Cómo hacer <em>downgrade</em> de un paquete</h3>
<p>El proceso de desactualización o <em>downgrade</em> no tiene complicación, basta con lanzar un comando, se desactualiza el paquete y sus dependencias con la limitación de que en el caso de conflictos con otros paquetes también hay que desactualizar esos otros paquetes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -U /var/cache/pacman/pkg/networkmanager-0.9.10.0-4-x86_64.pkg.tar.xz&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-downgrade.sh</span>
    </div>
</div>
<p>Arch Linux guarda en una caché del sistema de archivos local todos los paquetes con sus versiones que descarga, la caché se encuentra por defecto en el directorio <em>/var/cache/pacman/pkg/</em>.</p>
<h3 id="cómo-buscar-un-paquete-de-una-versión-anterior">Cómo buscar un paquete de una versión anterior</h3>
<p>Para hacer una desactualización hay que tener la versión del paquete a la que hacer <em>downgrade</em>, si no se ha hecho una limpieza de la caché de los paquetes viejos no usados con el comando <em>pacman -Sc</em> están en el directorio de caché de paquetes. Si se ha hecho la limpieza de la caché y no se dispone del paquete hay que buscar en alguna réplica menos actualizada la versión del paquete desactualizado.</p>
<p>Otra posibilidad es usar <a href="https://wiki.archlinux.org/index.php/Arch_Rollback_Machine">Arch Rollback Machine</a> que va almacenando instantáneas de las últimas versiones de los paquetes, de los repositorios organizados por fecha y de las imágenes iso del medio de instalación. Usando estas instantáneas de paquetes se puede encontrar una versión desactualizada de cualquier paquete individual. En los casos más extremos Arch Rollback Machine ofrece la posibilidad de desactualizar un equipo completamente a una fecha concreta, aunque no es recomendable.</p>
<p>Indicando en el comando la dirección completa del paquete este es descargado y desactualizado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -U https://archive.archlinux.org/packages/n/networkmanager/networkmanager-0.9.10.0-4-x86_64.pkg.tar.xz&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-arm.sh</span>
    </div>
</div>
<p>Cómo práctica recomendable es mantener hasta la siguiente actualización los paquetes en la caché, una vez actualizado el sistema y comprobado que todo sigue funcionando correctamente. Antes de una actualización se puede eliminar de la cache los paquetes viejos no usados, se actualiza el sistema, con lo que se tiene en la cache los paquetes nuevos y viejos, se comprueba que el sistema funciona correctamente y si hay que hacer un <em>downgrade</em> de alguno se dispone de él en la cache local.</p>
<p>La secuencia de comandos en una actualización que uso es la siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -Sc&#10;</span></span><span class="line"><span class="cl">$ sudo pacman -Syu&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-update.sh</span>
    </div>
</div>
<h3 id="cómo-evitar-que-un-paquete-se-actualice">Cómo evitar que un paquete se actualice</h3>
<p>Para evitar que un paquete sea actualizado en la siguiente actualización del sistema hay añadirlo a la lista de paquetes ignorados <em>IgnorePkg</em> del archivo <em>/etc/pacman.conf</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">IgnorePkg = networkmanager&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.conf</span>
    </div>
</div>
<p>No es recomendable mantener muchos paquetes desactualizados y en la lista de <em>IgnorePkg</em> ya que estos pueden tener dependencias sobre paquetes también desactualizados, solo debe ser empleado para casos puntuales.</p>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/</id>
        <title>Introducción e inicio a Drupal</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2015-01-10T11:08:12+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/drupal.svg" width="200" height="218" alt="Drupal" title="Drupal"  class=""></p>
</div>
<p>Para los proyectos web cuyo punto central es el contenido disponemos de algunas opciones que prácticamente nos dan la solución hecha o facilitan enormemente la tarea como desarrolladores y posteriormente a los administradores que no necesitarán un gran conocimiento para administrar la web. Estas aplicaciones se les suele conocer como <a href="https://es.wikipedia.org/wiki/Sistema_de_gesti%C3%B3n_de_contenidos">Sistemas de gestión de contenidos</a> (Content Management System, CMS) y como siempre disponemos de varias opciones, algunas similares.</p>
<p>No soy un experto en CMS ni he usado uno en un proyecto real pero trataré en este artículo hacer una introducción a <a href="https://www.drupal.org/">Drupal</a>. Hay otras opciones como <a href="https://wordpress.org/">Wordpress</a> o <a href="https://www.joomla.org/">Joomla</a> también desarrolladas en <a href="https://secure.php.net/">PHP</a> y en el ámbito <a href="https://www.oracle.com/technetwork/java/index.html">Java</a> otras como <a href="https://www.alfresco.com/">Alfresco</a>, <a href="https://www.nuxeo.com/">Nuxeo</a>, <a href="https://dotcms.com/">dotCMS</a> y <a href="https://www.liferay.com/">Liferay</a> aunque estas en algunos puntos son diferentes ofreciendo gestión documental o <a href="https://es.wikipedia.org/wiki/Portal_%28Internet%29">portales de internet</a>. Wordpress es más simple que Drupal pero si tenemos conocimientos de desarrollo Drupal posiblemente se adapte más a nuestras preferencias. Alfresco y Nuxeo son más bien gestores de contenido y de documentos pero no permiten gestionar como se visualiza el contenido en la web final, Liferay es algo más parecido a lo que ofrece Drupal pero tengo la sensación que es algo más compleja o no exactamente con las mismas opciones y está más destinado a la creación de portales web.</p>
<p>Drupal como decía está desarrollado sobre PHP pero solo necesitaremos conocer este lenguaje en el momento que queramos desarrollar y personalizarlo. Como usuarios para crear contenido y gestionar la disposición de los elementos en la página web no necesitamos conocer nada de PHP solo necesitaremos conocer como funciona la herramienta de administración que ofrece Drupal. El tipo de los proyectos para los que puede estar indicado Durpal puede ser aquellos en los que los usuarios quieran crear y publicar nuevo contenido y quieran ellos mismos modificar los elementos de las páginas sin necesidad de solicitar un desarrollo. Algunos casos de uso pueden ser instituciones de la administración pública, empresas, tiendas, comercios, &hellip; aquellos que quieran tener una presencia en internet y puedan necesitar añadir, modificar o eliminar en algún momento el contenido de su web. La tarea de los desarrolladores consistirá en personalizar la instalación de Drupal a las necesidades del cliente y sus usuarios ya sea adaptando el aspecto de la web a crear, creando la taxonomía del contenido, definiendo los tipos de contenidos y que información contiene, usuarios y roles, &hellip;</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/inicio_huf2a00d1862abd088cad08a0e96220a73_29179_2560x1440_fit_box_3.png" data-gallery="" title="Inicio Drupal"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/inicio_huf2a00d1862abd088cad08a0e96220a73_29179_300x200_fit_box_3.png" width="282" height="200" alt="Inicio Drupal" title="Inicio Drupal"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/inicio-administracion_hub35f112cec43233d532972ffb246ef4a_31553_2560x1440_fit_box_3.png" data-gallery="" title="Inicio Drupal (Administración)"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/inicio-administracion_hub35f112cec43233d532972ffb246ef4a_31553_300x200_fit_box_3.png" width="284" height="200" alt="Inicio Drupal (Administración)" title="Inicio Drupal (Administración)"  class="lozad "></a></p>
</figure>
</div>
<p>Por defecto Drupal ofrece dos tipos de contenido páginas y artículos que poseen un título y un cuerpo aunque podemos crear nuevos tipos de contenido con información adicional como podría ser eventos que recojan además una fecha y hora de inicio, fecha y hora de fin, lugar, &hellip;. Podemos crear usuarios y roles y asignarles permisos como poder crear contenidos, crear menús con enlaces a ciertos contenidos que queramos destacar. Podemos usar taxonomía para categorizar el contenido y que este esté organizado y sea fácilmente encontrado por los usuarios. Asociar tipos de contenido con ciertos tipo de taxonomía. Modificar los bloques como menús, formulario de inicio de sesión, &hellip; y hacer que solo se vean en ciertas páginas, para algunos tipos de contenidos, ciertos roles o usuarios. Hacer vistas o listas de los contenidos. Modificar la disposición o layout de las páginas por ejemplo para que tenga dos, tres columnas, una cabecera y un pie, &hellip;. Finalmente también podemos modificar y personalizar el aspecto del sitio web con temas que podemos descargar o desarrollar nosotros mismos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/crear-pagina_hu7d989873d8b0f756fcd2a2f6d4a5079e_29858_2560x1440_fit_box_3.png" data-gallery="" title="Crear página"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/crear-pagina_hu7d989873d8b0f756fcd2a2f6d4a5079e_29858_300x200_fit_box_3.png" width="268" height="200" alt="Crear página" title="Crear página"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/crear-articulo_hu0014f6dd0073fd8d37aeb94d3751c5dd_27499_2560x1440_fit_box_3.png" data-gallery="" title="Crear artículo"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/crear-articulo_hu0014f6dd0073fd8d37aeb94d3751c5dd_27499_300x200_fit_box_3.png" width="268" height="200" alt="Crear artículo" title="Crear artículo"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/tipos-contenido_huba7f8446c7a2941a4e3617665d20c22c_35127_2560x1440_fit_box_3.png" data-gallery="" title="Tipos de contenido"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/tipos-contenido_huba7f8446c7a2941a4e3617665d20c22c_35127_300x200_fit_box_3.png" width="268" height="200" alt="Tipos de contenido" title="Tipos de contenido"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/taxonomia_hu1fcd59d2c1d62e6b49a85ac111a75cce_31161_2560x1440_fit_box_3.png" data-gallery="" title="Taxonomía"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/taxonomia_hu1fcd59d2c1d62e6b49a85ac111a75cce_31161_300x200_fit_box_3.png" width="268" height="200" alt="Taxonomía" title="Taxonomía"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/taxonomia-etiquetas_hu35632a7f6f6e2d9092b91e8ed8f12db8_32967_2560x1440_fit_box_3.png" data-gallery="" title="Etiquetas taxonomía"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/taxonomia-etiquetas_hu35632a7f6f6e2d9092b91e8ed8f12db8_32967_300x200_fit_box_3.png" width="268" height="200" alt="Etiquetas taxonomía" title="Etiquetas taxonomía"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/bloques_hu1f377a72bcf3cbdca8dcadf3f8fd8ee4_51185_2560x1440_fit_box_3.png" data-gallery="" title="Bloques"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/bloques_hu1f377a72bcf3cbdca8dcadf3f8fd8ee4_51185_300x200_fit_box_3.png" width="268" height="200" alt="Bloques" title="Bloques"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas_huc003da5bd98a62d8b7d13b8ac6eb160e_41340_2560x1440_fit_box_3.png" data-gallery="" title="Personas"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas_huc003da5bd98a62d8b7d13b8ac6eb160e_41340_300x200_fit_box_3.png" width="268" height="200" alt="Personas" title="Personas"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas-permisos_hue055cb0b63d35a77098fdba63fb778f7_58790_2560x1440_fit_box_3.png" data-gallery="" title="Permisos personas"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas-permisos_hue055cb0b63d35a77098fdba63fb778f7_58790_300x200_fit_box_3.png" width="268" height="200" alt="Permisos personas" title="Permisos personas"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas-roles_hu45fae67c6210dedb2811f13e5443eade_54247_2560x1440_fit_box_3.png" data-gallery="" title="Roles personas"><img src="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/images/personas-roles_hu45fae67c6210dedb2811f13e5443eade_54247_300x200_fit_box_3.png" width="268" height="200" alt="Roles personas" title="Roles personas"  class="lozad "></a></p>
</figure>
</div>
<p>Drupal es ampliamente <a href="https://www.drupal.org/project/project_module">extensible mediante módulos</a> permitiendo agregarle funcionalidades de diferentes categorías (contenido, administración, integración con terceros, comercio electrónico, &hellip;) si las incorporadas por defecto no nos son suficientes. Algunos de  los módulos más empleados son <a href="https://www.drupal.org/project/panels">Panels</a> que permite definir contenedores (barra izquierda, región contenido, barra derecha, pie, cabecera, &hellip;) en una página y asignar el contenido que queremos que aparezca en cada uno de ellos, <a href="https://www.drupal.org/project/cck">Content Construction Kit (CCK)</a>, <a href="https://www.drupal.org/project/views">Views</a> para definir vistas de una colección de elementos, <a href="https://www.drupal.org/project/pathauto">Pathauto</a> para hacer las URLs amigables al usuario y buscadores mejorando el SEO del sitio, <a href="https://www.drupal.org/project/webform">Webform</a> para crear formularios y recoger información y otros muchos más para infinidad de cosas. Sin embargo, conviene usar los más populares que están ampliamente probados y hayan demostrado su utilidad, los que tenga buen soporte y un mantenimiento activo, estas cosas las podemos seleccionar con el filtro en el formulario de búsqueda de módulos.</p>
<p>En definitiva Drupal es una herramienta de mucha utilidad para gestionar un sitio web. Si la parte importante del sitio web es el contenido Drupal puede adaptarse perfectamente a las necesidades y si el sitio web ha de ser administrado por usuarios sin conocimientos técnicos puede ser una solución que no requiera desarrollar una aplicación web a medida costando menos tiempo y menos esfuerzo. Para iniciarse en Drupal los libros <a href="https://amzn.to/2udreMi">Beginning Drupal 7</a> y <a href="https://amzn.to/39PQMzE">Pro Drupal 7 Development</a> son un buen inicio, he leído el primero y están muy bien explicado partiendo desde cero conocimiento sobre Drupal o PHP, contiene suficiente detalle para conocer las diferentes posibilidades que ofrece esta plataforma de gestión de contenidos.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1430228598&amp;linkId=0918d80bc297650520a5ff23dd6aaa77" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1430228385&amp;linkId=6f1cc0aedb7daa7be2fc5b5e4591442f" title="Amazon" class="lozad"></iframe>
</div>
<p>Si queremos probarlo posiblemente la solución mas sencilla es usar la <a href="https://bitnami.com/stack/drupal">imagen que ofrece Bitnami de Drupal</a> que contiene todos los requisitos de Drupal ya instalados (servidor web, base de datos, dependencias, &hellip;), podemos descargarla y crear una máquina virtual con VirtualBox, en unos pocos minutos podemos empezar a probar Drupal. En el artículo de <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">introducción sobre Bitnami</a> explico como crear una máquina virtual e iniciar cualquiera de las <a href="https://bitnami.com/stacks">imágenes</a> de las que ofrece <a href="https://bitnami.com/">Bitnami</a> con VirtualBox.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">Introducción al gestor de proyectos y tareas Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar un plugin ágil en Redmine</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/</id>
        <title>Instalar y usar un plugin ágil en Redmine</title>
        <updated>2015-01-10T12:00:00+01:00</updated>
        <published>2015-01-03T01:27:56+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/redmine.png" width="300" height="89" alt="Redmine" title="Redmine"  class=""></p>
</div>
<p>Las metodologías ágiles para la gestión de proyectos son ya ampliamente usadas, como <a href="https://es.wikipedia.org/wiki/Scrum_%28desarrollo_de_software%29">scrum</a> o <a href="https://es.wikipedia.org/wiki/Programaci%C3%B3n_extrema">programación extrema</a> (XP). Una diferencia entre las metodologías ágiles y las metodologías empleadas tradicionalmente como el modelo en cascada es que en las metodologías ágiles se tiene en cuenta que se pueden producir cambios en el desarrollo del proyecto y suelen ser más flexibles y adaptables ante estos cambios.</p>
<p>En el modelo de metodología ágil podemos usar un panel kanban donde ver de un vistazo rápido las tareas terminadas, las que están en progreso y las próximas tareas planificadas reflejando la realidad del equipo de desarrollo. Reorganizándolas según prioridades que pueden cambiar de una semana a otra, en las metodologías ágiles no se realiza una planificación completa inicial sino que se va realizando a medida que el proyecto progresa.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/panel-kanban_hu4ef8f81386afd1f4c05942e3239ab438_36051_2560x1440_fit_box_3.png" data-gallery="" title="Panel Kanban de Redmine"><img src="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/panel-kanban_hu4ef8f81386afd1f4c05942e3239ab438_36051_300x200_fit_box_3.png" width="300" height="136" alt="Panel Kanban de Redmine" title="Panel Kanban de Redmine"  class="lozad "></a></p>
</figure>
</div>
<p>También para la gestión de las tareas de los proyectos se suele usar algún tipo de herramienta que permita recoger y gestionar las peticiones adaptada a la metodología que usemos, una de estas herramientas puede ser <a href="https://www.redmine.org/">Redmine</a>. En la <a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">introducción sobre Redmine</a> comentaba que es lo nos puede ofrecer para gestionar el proyecto.</p>
<p>Por defecto, Redmine no dispone de un panel kanban para ver las peticiones pero <a href="http://www.redminecrm.com/projects/agile/pages/1">usando el plugin ágile de RedmineCRM</a> se le puede añadir la funcionalidad con el que además del panel kanban podemos ver otra serie de gráficas como <a href="https://es.wikipedia.org/wiki/Burn_down_chart">burndown</a> y paneles. Hay otras opciones perfectamente válidas como <a href="https://www.atlassian.com/software/jira">JIRA</a> pero esta tiene una política de precios basada en el número de usuarios y a partir de un cierto número es una cantidad considerable.</p>
<p>Podemos usar la versión gratuita del <a href="http://www.redminecrm.com/">plugin RedmineCRM</a> lo que nos ofrecerá los <em>agile boards</em>, <em>version planner</em> y <em>burndown chart</em>, la versión PRO para un solo sitio tiene un precio de $200, ofrece funcionalidades adicionales como organización en lineas horizontales, subcolumnas y colores para las peticiones en el panel kanban además de algunas opciones más. Para el caso de Redmine también hay otros plugins disponibles para gestionar los proyectos de forma ágil pero no tan buenos como el de RedmineCRM, estos son <a href="http://www.redminebacklogs.net/">Redmine Backlogs</a> y <a href="http://www.redmine.org/plugins/scrum2b">Scrum2B</a>.</p>
<p>Después de <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">instalar Redmine con Bitnami</a> si queremos instalar el plugin ágile de RedmineCRM debemos realizar los siguientes pasos desde la terminal de la máquina virtual, en mi caso usando VirtualBox:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo loadkeys es&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> /opt/bitnami/apps/redmine/htdocs/plugins&#10;</span></span><span class="line"><span class="cl">$ wget http://redminecrm.com/license_manager/15337/redmine_agile-1_3_5-light.zip&#10;</span></span><span class="line"><span class="cl">$ unzip redmine_agile-1_3_5-light.zip&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> /opt/bitnami/apps/redmine/htdocs/&#10;</span></span><span class="line"><span class="cl">$ bundle install --without development <span class="nb">test</span>&#10;</span></span><span class="line"><span class="cl">$ bundle <span class="nb">exec</span> rake redmine:plugins <span class="nv">NAME</span><span class="o">=</span>redmine_agile <span class="nv">RAILS_ENV</span><span class="o">=</span>production&#10;</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> /opt/bitnami/&#10;</span></span><span class="line"><span class="cl">$ sudo ctlscript.sh restart apache</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>instalar-redminecrm-bitnami.sh</span>
    </div>
</div>
<p>Finalmente, debemos activar el plugin agile en el proyecto usando la opción Administration&gt; Agile.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/configuracion_hue052186d9db87a4a7ddb2d207f6da4d3_32798_2560x1440_fit_box_3.png" data-gallery="" title="Activación panel Kanban"><img src="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/configuracion_hue052186d9db87a4a7ddb2d207f6da4d3_32798_300x200_fit_box_3.png" width="300" height="139" alt="Activación panel Kanban" title="Activación panel Kanban"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez activado ya podemos ver el panel kanban mostrado en la primera captura en la pestaña ágil. Por defecto en Redmine solo veremos las columnas New, In progress, Resolved y Feedback pero podemos modificar el flujo de las peticiones adaptándolo a nuestra metodología u organización, podemos hacer esto desde Administración&gt; Estados de peticiones para crear nuevos estados y Administración&gt; Flujo de trabajo para establecer el grafo de estados determinando a que estados puede cambiar una petición desde su estado actual.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/estados-peticiones_hu8a2a9674874943501314cb8d2ca16bed_46591_2560x1440_fit_box_3.png" data-gallery="" title="Estados de peticiones"><img src="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/estados-peticiones_hu8a2a9674874943501314cb8d2ca16bed_46591_300x200_fit_box_3.png" width="300" height="139" alt="Estados de peticiones" title="Estados de peticiones"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/flujo-de-trabajo_hu96763af7a06f0f0b8ba222c218e7f202_64657_2560x1440_fit_box_3.png" data-gallery="" title="Flujo de trabajo"><img src="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/images/flujo-de-trabajo_hu96763af7a06f0f0b8ba222c218e7f202_64657_300x200_fit_box_3.png" width="300" height="139" alt="Flujo de trabajo" title="Flujo de trabajo"  class="lozad "></a></p>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">Introducción al gestor de proyectos y tareas Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/</id>
        <title>Hemeroteca #6</title>
        <updated>2014-12-24T18:00:00+02:00</updated>
        <published>2014-12-24T16:02:04+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/octopress.png" width="300" height="300" alt="Octopress" title="Octopress"  class=""></p>
</div>
<p>Seis nuevos meses para el Blog Bitix cumpliendo un año como tal y siendo la continuación de los casi cuatro años de <a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev</a>. Otro año que finaliza y toca hacer <a href="https://picodotdev.github.io/blog-bitix/2014/">recapitulación de los que he escrito durante este tiempo</a>, 26 nuevos artículos escritos con puntualidad uno por semana y publicados el viernes o sábado.</p>
<p>Aunque aún no puedo usar profesionalmente el <em>framework</em> web <a href="https://tapestry.apache.org/">Apache Tapestry</a> con el realmente me divierto programando sigo escribiendo sobre él con algunos temas interesantes tales que cómo usar un CDN, cómo crear plantillas para dar un aspecto común a todas las páginas de la aplicación, una comparativa entre el modelo «pull» que usa Tapestry y el modelo «push» que normalmente se usa en los <em>framework</em> basados en acciones, cómo crear una doble barra de botones sin duplicar el mismo código, como forzar el uso de https o la anotación Cached. Todo este contenido lo he añadido al <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">libro PlugIn Tapestry</a> y que puedes descargar de forma totalmente libre en varios formatos. No está mal y aún tengo más contenido pendiente por publicar tal que como embeber una aplicación web usando tomcat-embed de forma que la aplicación esté autocontenida y el despliegue sea más sencillo y evitemos problemas, hacer un ejemplo con el componente Grid que muestre sus grandes posibilidades y la gran cantidad de trabajo que nos puede ahorrar, &hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/actualizacion-del-libro-plugin-tapestry/">Actualización del libro PlugIn Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/doble-barra-de-botones-con-apache-tapestry/">Doble barra de botones con Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/forzar-el-uso-del-protocolo-https-en-apache-tapestry/">Forzar el uso del protocolo https en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/usar-apache-tapestry-en-una-aplicacion-standalone/">Usar Apache Tapestry en una aplicación «standalone»</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry/">Servir recursos estáticos desde un CDN en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/anotacion-cached-de-apache-tapestry/">Anotación Cached de Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/plantillas-en-apache-tapestry/">Plantillas en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/">Modelo «push» contra modelo «pull» en <em>frameworks</em> web</a></li>
</ul>
<p>Respecto a artículos sobre programación también he escrito unos cuantos relativos a Java, me parece que cada uno de estos son interesantes mostrando algunos aspectos avanzados y útiles. Por supuesto, también tengo pendientes por escribir más artículos sobre Java, como generics, palabra reservada assert, los métodos equals y hashCode y como implementarlos&hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/">Ejercicios (katas) para mejorar habilidades de programación practicando</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/">8+ libros para mejorar como programadores</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/">Cómo filtrar contenido HTML de forma segura</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/">Qué es y cómo hacer «web scraping» en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/generar-urls-semanticas-y-amigables/">Generar URLs semánticas y amigables</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/configuracion-usando-codigo-java/">Configuración usando código Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/monitorizar-archivos-con-java/">Monitorizar archivos con Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/compilar-y-cargar-de-forma-dinamica-una-clase-java/">Compilar y cargar de forma dinámica una clase Java</a></li>
</ul>
<p>Desde hace un tiempo estoy escribiendo más sobre temas de programación que sobre Linux más que nada porque Arch Linux me va también y me da tan pocos problemas que no encuentro oportunidades grandes de escribir sobre algún tema que le pueda resultar útil a alguien más. Sin embargo, si que he escrito sobre algunas herramientas que disponemos en Linux y del software libre como <a href="https://www.docker.com/">Docker</a>, <a href="https://www.ansible.com/">Ansible</a> o <a href="https://bitnami.com/">Bitnami</a>, tengo algunos artículos más por escribir sobre <a href="https://memcached.org/">Memcached</a>, EncFS, algo más de <a href="https://www.redmine.org/">Redmine</a>, &hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Cómo instalar y guía de inicio básica de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción y características de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/agregador-blog-stack-redisenado/">Agregador Blog Stack rediseñado</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/procesador-de-documentos-lyx/">Procesador de documentos LyX</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/">Experiencia instalando sistema operativo a ordenador viejo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/">De Arch Linux a Arch Linux</a></li>
</ul>
<p>Si no quieres perderte ninguno de los nuevos artículos que escriba puede suscribirte al <a href="https://picodotdev.github.io/blog-bitix/index.xml">canal RSS de Blog Bitix</a>, <a href="https://twitter.com/picodotdev/">seguirme en twiter</a> o desde hace un poco de tiempo seguir la <a href="https://plus.google.com/114317443908384387611/posts">página de Google+ de Blog Bitix</a>. Por supuesto, en anteriores entregas de hemerotecas dispones de más artículos si algunos de estos te han parecido interesantes.</p>
<p>Y para finalizar quiero agradecer a <a href="https://twitter.com/fran_mosteiro">Fran Mosteiro</a>, <a href="https://twitter.com/josetesan">Jose Luís Sánchez</a>, <a href="https://twitter.com/jbravo">Joaquín Bravo</a>, <a href="https://twitter.com/mbmerayo">Marcos Bello</a> y algunos otros que esporádicamente también suelen hacer RT o marcar como favoritos los tweets de esta bitácora y que me ayudan un poquito o mucho a difundir lo que escribo ¡muchas gracias!, un saludo y ¡que comencéis bien el nuevo año 2015! :)</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/images/christmas-tux-2014_huaef2ca66353b2d132c670385d2dd34d4_553762_2560x1440_fit_q90_box.jpg" data-gallery="" title="Christmastux 2014"><img src="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/images/christmas-tux-2014_huaef2ca66353b2d132c670385d2dd34d4_553762_600x450_fit_q90_box.jpg" width="600" height="338" alt="Christmastux 2014" title="Christmastux 2014"  class="lozad "></a></p>
<figcaption>¡Buen 2015! <br>Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/</id>
        <title>Introducción al gestor de proyectos y tareas Redmine</title>
        <updated>2015-01-10T12:00:00+01:00</updated>
        <published>2014-12-19T19:57:31+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/redmine.png" width="200" height="59" alt="Redmine" title="Redmine"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bitnami.svg" width="200" height="224" alt="Bitnami" title="Bitnami"  class=""></p>
</div>
<p>Para desarrollar un proyecto de software se hace imprescindible disponer de algunas herramientas que nos permitan realizar las tareas. Una de estas herramientas es un <a href="https://en.wikipedia.org/wiki/Issue_tracking_system">gestor de tareas, peticiones o errores</a>, que nos permite recoger en una herramienta gran parte de la información, conocer el estado, planificar y hacer el seguimiento las tareas necesario para desarrollar de forma ordenada, sin que perdamos nada de información y pudiendo recuperarla en cualquier momento en un futuro.</p>
<p>Como es habitual herramientas que gestionan tareas disponemos de varias algunas de las más conocidas son <a href="https://www.bugzilla.org/">Bugzilla</a>, <a href="https://www.atlassian.com/software/jira">JIRA</a>, <a href="https://www.mantisbt.org/">Mantis</a>, <a href="https://trac.edgewall.org/">Trac</a> y la herramienta de la que hablaré en este artículo, <a href="https://www.redmine.org/">Redmine</a>. Cada una de estas herramientas como gestores de tareas son parecidas pero se diferencian en algunas cosas como la licencia que tiene, el esquema de precios o la funcionalidad que ofrece. Redmine tiene una <a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html">licencia de software libre GPL</a> y por tanto la podemos usar sin ningún coste, en la siguiente tabla podemos compararla con los <a href="https://www.atlassian.com/software/jira/pricing">precios de JIRA</a> que para pocos usuarios son asumibles pero que a medida que se aumentan los usuarios empiezan a ser notables aunque posiblemente alcanzables en función del tamaño de la empresa. En cualquier siendo JIRA también una herramienta excelente Redmine cumple perfectamente con la misma función. En la wikipedia podemos encontrar <a href="https://en.wikipedia.org/wiki/Comparison_of_issue-tracking_systems">más opciones y comparar unas con otras</a>.</p>
<p>Si queremos evaluar Redmine una forma sencilla podemos hacerlo mediante una imagen de Bitnami con VirtualBox. En la <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">introducción a Bitnami</a> comento qué es y como nos puede ayudar a disponer de software que en algunos casos no es simple de instalar y que con Bitnami podemos disponer de forma sencilla y rápida, además de como usar con VirtualBox cualquier imagen de Bitnami de las herramientas ofrecidas. Una vez seguidos los pasos de la guía anterior podemos acceder a Redmine con el navegador web y una dirección similar a <em>http://192.168.0.11</em>, el usuario y contraseña para acceder es user y bitnami respectivamente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/proyecto_huc5391f3bb2fe8f890f4052d1e1603f1a_23188_2560x1440_fit_box_3.png" data-gallery="" title="Proyecto"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/proyecto_huc5391f3bb2fe8f890f4052d1e1603f1a_23188_300x200_fit_box_3.png" width="300" height="181" alt="Proyecto" title="Proyecto"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/peticion_huee84518d778088ae20bd387a73d5293d_38867_2560x1440_fit_box_3.png" data-gallery="" title="Petición"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/peticion_huee84518d778088ae20bd387a73d5293d_38867_300x200_fit_box_3.png" width="300" height="185" alt="Petición" title="Petición"  class="lozad "></a></p>
</figure>
</div>
<p>Con Redmine podemos adaptar el flujo de las tareas a la forma de organización que empleemos, podemos personalizar el grafo de estados que siguen las tareas y que personas tiene permisos para hacer cada uno de los cambios de estado. También podemos añadir campos personalizados que queremos recoger para cada petición, por ejemplo, podemos querer dar un tamaño a las tareas en función de si estimamos que es grande, media o pequeña. También podemos crear filtros y guardarlos para encontrar fácilmente tareas.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/estados_hue0e3162886816900263a2154c8ee2e5e_42878_2560x1440_fit_box_3.png" data-gallery="" title="Estados"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/estados_hue0e3162886816900263a2154c8ee2e5e_42878_300x200_fit_box_3.png" width="300" height="181" alt="Estados" title="Estados"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/propiedades_hua076b1dfa17f61f58d8ee0d6df42ce47_38825_2560x1440_fit_box_3.png" data-gallery="" title="Propiedades"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/propiedades_hua076b1dfa17f61f58d8ee0d6df42ce47_38825_300x200_fit_box_3.png" width="300" height="181" alt="Propiedades" title="Propiedades"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/consulta_hub5bad320ba6632e1084e3f266f937585_41369_2560x1440_fit_box_3.png" data-gallery="" title="Filtros"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/consulta_hub5bad320ba6632e1084e3f266f937585_41369_300x200_fit_box_3.png" width="249" height="200" alt="Filtros" title="Filtros"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/flujo-estados_hu677460e55ab0aea1e8fac0028295eff7_59509_2560x1440_fit_box_3.png" data-gallery="" title="Flujo estados"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/flujo-estados_hu677460e55ab0aea1e8fac0028295eff7_59509_300x200_fit_box_3.png" width="300" height="177" alt="Flujo estados" title="Flujo estados"  class="lozad "></a></p>
</figure>
</div>
<p>Además de gestionar las tareas Redmine dispone de herramientas que nos pueden ser útiles en el proyecto como una wiki para recoger documentación del proyecto y un repositorio de documentos para aquellos que no queremos incluir en la herramienta de control de versiones por su tamaño pero que queremos que estén disponibles para cualquiera que trabaje con el proyecto.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/wiki_huc8ef37bf4091738b82bd6e3b425a7926_26237_2560x1440_fit_box_3.png" data-gallery="" title="Wiki"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/wiki_huc8ef37bf4091738b82bd6e3b425a7926_26237_300x200_fit_box_3.png" width="262" height="200" alt="Wiki" title="Wiki"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/archivos_huf26cedcb4ea27c3a1cb52eb9f4e24372_15256_2560x1440_fit_box_3.png" data-gallery="" title="Archivos"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/archivos_huf26cedcb4ea27c3a1cb52eb9f4e24372_15256_300x200_fit_box_3.png" width="300" height="133" alt="Archivos" title="Archivos"  class="lozad "></a></p>
</figure>
</div>
<p>Pero Redmine es más que una herramienta de gestión de tareas, los complementos pueden añadirle funcionalidad adicional que permite <a href="http://www.redminecrm.com/projects/crm/pages/1">convertirla en un CRM para gestionar las comunicaciones con clientes</a> o en un <a href="http://www.redminecrm.com/projects/helpdesk/pages/1">helpdesk para atender las tareas de clientes</a>. Además de otros como <a href="http://www.redminecrm.com/projects/people/pages/1">personalizar los usuarios de Redmine</a> o crear <a href="http://www.redminecrm.com/projects/checklist/pages/1">pequeñas listas de tareas</a> que nos evitará crear subtareas.</p>
<p>En el siguiente artículo comentaré como instalar el <a href="http://www.redminecrm.com/projects/agile/pages/1">plugin agile de Redmine</a> con la imagen de Bitnami en VirtualBox de forma que podamos visualizar las tareas en un panel kanban, y de un vistazo y rápidamente conozcamos las tareas que están terminadas, que están en progreso, a punto de empezarse o en la cola de tareas por hacer.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar plugin ágil en Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
<li><a href="http://www.luisblasco.com/5-plugins-gratuitos-instalar-en-redmine/">5 plugins gratuitos para instalar a Redmine</a></li>
<li><a href="http://www.redmine.org/projects/redmine/wiki/RedmineIssueList#Applying-and-saving-filters">Aplicar y guardar filtros</a></li>
<li><a href="https://stackoverflow.com/questions/9027479/how-do-you-modify-a-filter-in-redmine">Como modificar un filtro</a></li>
<li><a href="http://www.luisblasco.com/blog/">Blog con varios artículos interesantes sobre Redmine</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/</id>
        <title>Introducción a Bitnami</title>
        <updated>2017-05-28T01:00:00+02:00</updated>
        <published>2014-11-29T10:45:45+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bitnami.svg" width="200" height="224" alt="Bitnami" title="Bitnami"  class=""></p>
</div>
<p>Instalar algunas aplicaciones, herramientas o servicios no siempre es sencillo y rápido. En la mayoría de los casos los pasos están explicados suficientemente pero en la práctica nos pueden surgir dudas o problemas que no están documentados que pueden hacer que la experiencia de instalación no sea agradable o necesitar dependencias que hay que instalar a la vez para obtener un funcionamiento correcto. Además, sin emplear una máquina virtual se necesita instalar en el propio equipo o servidor cuando quizá solo interesa evaluar el producto con lo que al hacer la desinstalación se acaba con archivos temporales que quizá no se eliminen y permanezcan ocupando espacio para siempre o hasta ser eliminados.</p>
<p><a href="https://bitnami.com/">Bitnami</a> es una amplia colección de servicios populares que permite instalarlos y disponer de ellos rápidamente completamente configurados sin necesidad de dedicar tiempo a conocer como instalarlos, además, si empleamos virtualización con <a href="https://www.virtualbox.org/">VirtualBox</a> se consigue que el equipo quede completamente limpio una vez que el servicio sea desinstalado bastando únicamente eliminar la máquina virtual. Esta colección de servicios se pueden instalar en el propio equipo, en una máquina virtual con VirtualBox, <a href="https://www.vmware.com/">VMware</a>, <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a> o en la nube por ejemplo de <a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a>, <a href="https://azure.microsoft.com/es-es/">microsoft-azure</a> o <a href="https://cloud.google.com/">Google Cloud</a> y próximamente usando <a href="https://www.docker.com/">Docker</a>.</p>
<p>¿Alguna vez has querido probar <a href="https://wordpress.org/">Wordpress</a>, <a href="https://www.redmine.org/">Redmine</a>, <a href="https://www.drupal.org/">Drupal</a>, <a href="https://www.mediawiki.org/">MediaWiki</a>, <a href="https://www.phpbb.com/">phpBB</a>, <a href="https://www.liferay.com/">Liferay</a>, <a href="https://jenkins.io/">Jenkins</a>, <a href="https://plone.org/">Plone</a>, <a href="https://www.alfresco.com/">Alfresco</a>, &hellip;? Estos son solo unos pocos ejemplos de <a href="https://bitnami.com/stacks">todos los servicios que nos ofrece Bitnami</a> listos para que empecemos a usarlos en unos pocos minutos, hay muchos otros disponibles y en un futuro se agregarán más según las peticiones que realicen los usuarios de Bitnami. Algunas aplicaciones están compuestas de una pila completa de servicios como por ejemplo LAMP (Linux, Apache, MySQL, PHP) o LAPP (Linux, Apache, PostgreSQL, PHP) que incluyen una lista completa de dependencias que necesitan como FastCGI, OpenSSL, phpMyAdmin, ModSecurity, SQLite, Varnish, ImageMagick, xDebug, Xcache, OpenLDAP, ModSecurity, Memcache, OAuth, PEAR, PECL, APC, GD o cURL. Adicionalmente podemos usar una única pila como LAMP para instalar varios <a href="https://bitnami.com/stack/lamp/modules">módulos</a> en vez de instalar cada aplicación individualmente (Drupal, MediaWiki, &hellip;) de forma que todas las aplicación compartan la infraestructura de la misma pila.</p>
<p>En un futuro parece que Bitnami ofrecerá soporte para <a href="https://www.docker.com/">Docker</a> haciendo que no necesitemos ni siquiera un entorno de virtualización, ahorrando espacio en disco y ofreciendo el máximo rendimiento que ofrezca la máquina sin ningún tipo de penalización que impone virtualizar.</p>
<h3 id="cómo-empezar-a-usar-bitnami">¿Cómo empezar a usar Bitnami?</h3>
<p>A continuación explicaré la opción de usar Bitnami con VirtualBox, para el ejemplo usaré la aplicación de <a href="https://about.gitlab.com/">GitLab</a>. En la <a href="https://docs.bitnami.com/virtual-machine/">guía de inicio rápido de Bitnami</a> están explicadas otras opciones y preguntas frecuentes, en este caso nos interesa la <a href="https://docs.bitnami.com/virtual-machine/get-started-virtualbox/">sección para VirtualBox</a>.</p>
<p>Teniendo instalado previamente VirtualBox, primeramente necesitaremos descargar la imagen del disco que contiene la <a href="https://bitnami.com/stack/gitlab">aplicación de Bitnami para GitLab</a>. Accedida a la sección <a href="https://bitnami.com/stack/gitlab/virtual-machine"><em>Local Install</em></a> pulsamos el botón <em>Download</em> según la versión del sistema operativo que prefiramos, en este caso usaré la basada en <a href="https://www.debian.org/">Debian</a>. A continuación hay que crear una máquina virtual en VirtualBox mediante la opción <em>Importar servicio virtualizado&hellip;</em> del menú <em>Archivo</em> donde hay que seleccionar el archivo de extensión <em>ova</em> y cambiaremos la memoria asignada a la máquina virtual al menos 2048 MiB.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-importar-servicio-virtualizado_huea606d4532b9c289e2b465a836172f8b_108509_2560x1440_fit_box_3.png" data-gallery="" title="Importación de servicio virtualizado en VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-importar-servicio-virtualizado_huea606d4532b9c289e2b465a836172f8b_108509_300x200_fit_box_3.png" width="300" height="198" alt="Importación de servicio virtualizado en VirtualBox" title="Importación de servicio virtualizado en VirtualBox"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-gitlab_hu8207aa8b5020809288ce6ba68fd9735a_23848_2560x1440_fit_box_3.png" data-gallery="" title="Máquina virtual de GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-gitlab_hu8207aa8b5020809288ce6ba68fd9735a_23848_300x200_fit_box_3.png" width="296" height="200" alt="Máquina virtual de GitLab" title="Máquina virtual de GitLab"  class="lozad "></a></p>
<figcaption>Importación de servicio virtualizado de Bitnami en VirtualBox</figcaption>
</figure>
</div>
<p>Una vez importado el servicio y creada la máquina virtual la tratamos como cualquier otra máquina virtual para iniciarla la máquina virtual está lista para ser iniciada. Una vez iniciada completamente en la terminal se solicita un inicio de sesión con el usuario y contraseña que da acceso a una terminal para realizar tareas administrativas, en la misma página de inicio de sesión se indica el usuario y contraseña a usar y se indica la dirección IP (en el caso de las capturas mostradas es la <em>192.168.1.3</em>) que es necesario usar para acceder al servicio con el navegador. En el primer inicio de sesión se solicita cambiar la contraseña.</p>
<p>Accediendo con el navegador a la dirección <em>https://192.168.1.3</em> se accede a la aplicación de GitLab que pide un usuario y contraseña para iniciar sesión, el usuario y contraseña están indicados en la página de descarga de la imagen del servicio.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab-inicio-sesion_hua827c112ebc0dfe1f95fdf1511ae6469_60472_2560x1440_fit_box_3.png" data-gallery="" title="Inicio de sesión de GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab-inicio-sesion_hua827c112ebc0dfe1f95fdf1511ae6469_60472_300x200_fit_box_3.png" width="284" height="200" alt="Inicio de sesión de GitLab" title="Inicio de sesión de GitLab"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab_hu1c9450aa09534aa8f5ca35bf6de1a0dd_55744_2560x1440_fit_box_3.png" data-gallery="" title="GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab_hu1c9450aa09534aa8f5ca35bf6de1a0dd_55744_300x200_fit_box_3.png" width="266" height="200" alt="GitLab" title="GitLab"  class="lozad "></a></p>
<figcaption>Servicio de GitLab</figcaption>
</figure>
</div>
<p>En definitiva, Bitnami es de utilidad si se necesita usar cualquiera de los servicios que ofrece tanto para probarlos con una máquina virtual o para instalarlos en la nube de Amazon EC2, Azure o en Google Cloud. La nube evita adquirir hardware y posibilita escalarlo según las necesidades siempre estando dispuestos a pagar su coste, en algunos casos un mini PC como los <a href="https://amzn.to/2rauzYV">Brix</a>, <a href="https://amzn.to/2s8GYtI">NUC</a> o <a href="https://amzn.to/2r07KGS">Cubi</a> que soportan cantidades de memoria de 16 GiB y algunos 32 GiB son mas que suficientes para una infraestructura interna de una empresa pequeña que incluya control de versiones, gestor de peticiones, integración continua, base de datos, servidor de aplicaciones, &hellip; estos ordenadores pequeños en tamaño pero con una capacidad de proceso y memoria nada despreciable son una opción a considerar para algunas tareas y pueden actuar perfectamente como servidores en los que alojar algunos servicios para consumo interno.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://bitnami.com">Bitnami</a></li>
<li><a href="https://en.wikipedia.org/wiki/Bitnami">Wikipedia Bitnami</a></li>
<li><a href="http://www.jsitech.com/generales/bitnami-una-tienda-de-aplicaciones-para-servidores/">Bitnami, Una tienda de Aplicaciones para Servidores</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción a Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Guía de inicio básico de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">Introducción al gestor de proyectos y tareas Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar plugin ágil en Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/</id>
        <title>Integración entre Ansible y Docker</title>
        <updated>2014-12-29T19:00:00+01:00</updated>
        <published>2014-11-22T10:28:52+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ansible.svg" width="200" height="246" alt="Ansible" title="Ansible"  class=""></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>En la <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">introducción de Docker</a> y <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">inicio básico de docker</a> explicaba como usar Docker y en la <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">introducción a Ansible</a> explicaba las características de Ansible y como usarlo. Podemos usar <a href="https://www.docker.com/">Docker</a> y <a href="https://www.ansible.com/">Ansible</a> de forma separada pero también podemos combinarlas para beneficiarnos de las propiedades de cada una. En Ansible disponemos de dos módulos que nos permite manejar las imágenes y los contenedores de Docker, estos son <a href="http://docs.ansible.com/docker_module.html">docker</a> y <a href="http://docs.ansible.com/docker_image_module.html">docker_image</a>.</p>
<p>Usando tareas de ansible podemos automatizar el arranque del servicio de docker, la construcción de las imágenes con los Dokerfile y el inicio o parada de los contenedores de docker. En el ejemplo se construye una imagen base en la que se basarán el resto de imágenes, se crea una imagen con mysql, otra de redis y finalmente la imagen apps donde se ejecutarán las aplicaciones que usarán los servicios de mysql y redis.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start docker service</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">name=docker state=started</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">   &#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">build docker images</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker_image</span><span class="p">:</span><span class="w"> </span><span class="l">name=&#34;{{ item.name }}&#34; tag=&#34;{{ item.tag }}&#34; state=&#34;present&#34; path={{ item.path }}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/base&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/base&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/mysql&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/mysql&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/redis&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/redis&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/apps&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/apps&#34;</span><span class="w"> </span>}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.yml</span>
    </div>
</div>
<p>Una vez que disponemos de las imágenes de docker podemos arrancar contenedores con ellas automatizándolo con ansible. En este caso se inicia el servicio de docker, se inicializan los contenedores con los volúmenes donde se guardan los datos de forma persistente de mysql y redis, se inician los contenedores de mysql y redis usando los volúmenes anteriores y finalmente el contenedor de las aplicaciones. Al final, se muestra cierta información de las imágenes como sus direcciones IP.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start docker service</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">name=docker state=started</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start mysql data docker container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=busybox:latest name=picodotdev-mysql-data state=present volumes=&#34;/var/lib/mysql&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">mysql_data_container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start redis data docker container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=busybox:latest name=picodotdev-redis-data state=present volumes=&#34;/var/lib/redis&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">redis_data_container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start mysql docker container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/mysql:1.0 name=picodotdev-mysql state=running volumes_from=picodotdev-mysql-data hostname=mysql ports=3306:3306 command=/sbin/my_init</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">mysql_container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start redis docker container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/redis:1.0 name=picodotdev-redis state=running volumes_from=picodotdev-redis-data volumes=&#34;{{ keys_path }}:/mnt/keys&#34; hostname=redis ports=6379:6379 command=/sbin/my_init</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">redis_container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start apps docker container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/apps:1.0 name=picodotdev-apps state=running volumes=&#34;{{ projects_path }}:/mnt/projects,{{ grails_path }}:/root/.grails,{{ gradle_path }}:/root/.gradle,{{ keys_path }}:/mnt/keys&#34; hostname=apps ports=8080:8080,8443:8443 links=picodotdev-mysql:mysql,picodotdev-redis:redis command=/sbin/my_init</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">apps_container</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">update hosts with containers ip address</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">replace</span><span class="p">:</span><span class="w"> </span><span class="l">dest=/etc/hosts regexp=&#34;^(\d+\.\d+\.\d+\.\d+)(\s+{{ item.host }})$&#34; replace=&#34;{{ item.ip }}\2&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mysql&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;redis&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;apps&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">display containers info</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">debug</span><span class="p">:</span><span class="w"> </span><span class="l">msg=&#34;info&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>start.yml</span>
    </div>
</div>
<p>Ansible <a href="http://docs.ansible.com/list_of_all_modules.html">dispone muchos módulos</a> que nos permiten automatizar las tareas:</p>
<ul>
<li><a href="http://docs.ansible.com/list_of_cloud_modules.html">Módulos para manejo de entornos cloud</a> (<a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a>, <a href="https://azure.microsoft.com/es-es/">microsoft-azure</a>, <a href="https://www.digitalocean.com/">Digital Ocean</a>, <a href="https://www.openstack.org/">OpenStack</a>, <a href="https://www.rackspace.com/es">Rackspace</a>)</li>
<li><a href="http://docs.ansible.com/list_of_commands_modules.html">Módulos para ejecutar comandos</a></li>
<li><a href="http://docs.ansible.com/list_of_database_modules.html">Módulos para administración de bases de datos</a></li>
<li><a href="http://docs.ansible.com/modules_by_category.html">Módulos para manejo de archivos</a></li>
<li><a href="http://docs.ansible.com/list_of_packaging_modules.html">Módulos para manejo de paquetes</a></li>
<li><a href="http://docs.ansible.com/list_of_source_control_modules.html">Módulos para manejo de sistemas de control de versiones</a></li>
<li>Y algunos más</li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/</id>
        <title>Introducción a Ansible</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-11-15T10:35:39+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ansible.svg" width="200" height="246" alt="Ansible" title="Ansible"  class=""></p>
</div>
<p>Siempre que nos sea posible deberíamos automatizar las tareas que realizamos. Automatizar tareas hará sencillo realizarlas permitiéndonos hacer todos los despliegues de una aplicación que queramos con menos posibilidades de cometer errores manuales o nos permitirá disponer de una nueva máquina aprovisionada exactamente como pueda estar la máquina de producción en mucho menos tiempo. En el ámbito del aprovisionamiento de máquinas y administración de la infraestructura IT hay varias opciones, entre ellas están <a href="https://www.getchef.com/">Chef</a>, <a href="https://puppet.com/">Puppet</a> y <a href="https://www.ansible.com/">Ansible</a>.</p>
<p>En este artículo haré una breve introducción de Ansible que principalmente se emplea en servidores pero también podríamos emplearlo para nuestra propia máquina. Con Ansible podremos:</p>
<ul>
<li>Automatizar el aprovisionamiento de máquinas.</li>
<li>Gestionar la configuración de los servicios de esas máquinas.</li>
<li>Realizar despliegues y orquestar los servicios.</li>
</ul>
<p>Hay que destacar que Ansible no necesita instalar un agente (al contrario de Chef o Puppet) en cada una de las máquinas del inventario que queramos administrar lo que lo hace fácil de emplear, usa un modelo «push» en el que la máquina donde se ejecuta Ansible envía por ssh los comandos necesarios a aplicar en vez de ser cada una de las máquinas las que obtienen de un repositorio las recetas a usar. En los artículos <a href="https://www.ansible.com/application-deployment">Application Deployment</a>, <a href="https://www.ansible.com/configuration-management">Configuration Management</a> y <a href="https://www.ansible.com/continuous-delivery">Continous Delivery</a> nos describen algunos casos de uso y sus ventajas empleando Ansible.</p>
<p>Para trabajar con Ansible necesitaremos inventariar las máquinas y probablemente definir algunas variables. Podría ser de la siguiente forma en el caso de una máquina para desarrollar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">devbox ansible_connection=local ansible_python_interpreter=python2&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[devbox]&#10;</span></span><span class="line"><span class="cl">devbox&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[devbox:vars]&#10;</span></span><span class="line"><span class="cl">path = &#34;projects&#34;&#10;</span></span><span class="line"><span class="cl">subversion_user = &#34;picodotdev&#34;&#10;</span></span><span class="line"><span class="cl">subversion_password = &#34;***&#34;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hosts</span>
    </div>
</div>
<p>En el inventario descrito como un archivo en formato INI se asignan los nombres del host o sus direcciones IP, también se pueden hacer agrupaciones de máquinas por ejemplo en base al rol (base de datos, servidor web, &hellip;). Una vez que disponemos del inventario podemos empezar a usar Ansible, por ejemplo haciendo un ping a todas las máquinas o instalando un determinado paquete:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ansible devbox -i hosts -m ping&#10;</span></span><span class="line"><span class="cl">$ ansible devbox -i hosts -m pacman -a <span class="s2">&#34;name=docker state=installed&#34;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/images/ansible_hu0ee96d09f68b45023e964e4c0b8ce310_35028_2560x1440_fit_box_3.png" data-gallery="" title="Ansible"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/images/ansible_hu0ee96d09f68b45023e964e4c0b8ce310_35028_300x200_fit_box_3.png" width="300" height="155" alt="Ansible" title="Ansible"  class="lozad "></a></p>
</figure>
</div>
<p>El parámetro -m indica el módulo de Ansible que usamos y a continuación indicamos los parámetros. Ansible dispone de una amplia <a href="http://docs.ansible.com/list_of_all_modules.html">colección de módulos</a> que nos permiten hacer cantidad de tareas.</p>
<p>Pero en vez de usar Ansible mediante comandos podemos emplear recetas contenidas en <a href="http://docs.ansible.com/playbooks.html">playbooks</a> descritos en formato YAML en las que definimos varias tareas y podemos usar las variables del inventario. Con el siguiente playbook instalamos varios paquetes en una máquina Arch Linux y hacemos un checkout de dos proyectos de subversion, para ello usamos en la primera tarea el módulo para gestionar paquetes con pacman, hay módulos para los gestores de paquetes de otras distribuciones (apt, yum, &hellip;) y en la segunda tarea hacemos un checkout de dos proyectos usando el módulo del sistema de control de versiones subversion. Los módulos son idempotentes de forma que una vez que el sistema está en el estado deseado no se realiza la operación, esto hace que el mismo playbook pueda ser ejecutado tantas veces como se desee evitando efectos colaterales por reejecuciones, lo importante es el estado que se quiere conseguir, Ansible se encarga de realizar las acciones necesarias para llegar a él desde el estado actual del sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">install packages (Arch Linux)</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">pacman</span><span class="p">:</span><span class="w"> </span><span class="l">name={{ item }} state=present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">ansible_distribution == &#34;Archlinux&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">vim</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">subversion</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">mariadb</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">redis</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">docker</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">ansible</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">python2-pip</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">python2-virtualenv</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">checkout projects</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">LANG</span><span class="p">:</span><span class="w"> </span><span class="l">es_ES.UTF-8</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">LC_CTYPE</span><span class="p">:</span><span class="w"> </span><span class="l">es_ES.UTF-8</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">subversion</span><span class="p">:</span><span class="w"> </span><span class="l">repo={{ item.url }} dest={{ projects }}/{{ item.path }} username={{ subversion_user }} password={{ subversion_password }}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://server.com/svn/repos/project1/trunk&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;project1&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://server.com/svn/repos/project2/trunk&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;project2&#34;</span><span class="w"> </span>}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.yml</span>
    </div>
</div>
<p>Para ejecutar un playbook usamos el comando ansible-playbook en vez de simplemente el comando ansible.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ansible-playbook ansible/install.yml -i hosts&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible-playbook-install.sh</span>
    </div>
</div>
<p>En los playbooks podemos usar tareas, grupos de máquinas, variables, variables de grupos, asignar valores a variables, usar condicionales, bucles, hechos (facts, información obtenida por ansible), notificaciones y realizar acciones en base a ellas, aplicar etiquetas a tareas, hacer includes, plantillas (para los archivos de configuración de los servicios, por ejemplo de apache o mysql), esperar a condiciones, cifrar archivos que contengan información sensible y que podamos incluir en una herramienta de control de versiones sin riesgo a comprometer la información, usar roles que aplican todas estas cosas según la función que queramos que tenga una máquina.</p>
<p>El libro <a href="https://www.ansible.com/ansible-book">Ansible Up &amp; Running</a> es un buen punto de partida que explica los aspectos básicos ya en su versión de vista previa, por supuesto la propia <a href="http://docs.ansible.com/index.html">documentación del proyecto</a> y los <a href="https://www.ansible.com/resources">recursos de evangelización</a> están bastante bien. En la siguiente buena y completa presentación se explican con un poco más detalle más cosas:</p>
<div class="media">
    <script async class="speakerdeck-embed" data-id="e02a4f70ee4d01312be742839f79c6f5" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>
    <noscript>$TODO</noscript>
</div>
<p>También, en el siguiente <a href="https://github.com/ansible/ansible-examples">repositorio de GitHub hay varios ejemplos</a> que podemos revisar para ver como se organizan los archivos y carpetas y las convenciones en su estructura que se usan implícitamente.</p>
<p>Como me ha ocurrido con la <a href="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/">herramienta Elasticsearch</a> la documentación de Ansible no me ha resultado que esté escrita de forma didáctica para dominarla empezando desde ningún conocimiento, por ello un libro como <a href="https://amzn.to/37D5mIC">Ansible: Up and Running</a> es una opción interesante para aprender.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491915323&amp;linkId=4d1cc610f8b4b9439ae029cb32f80c76" title="Amazon" class="lozad"></iframe>
</div>
<p>Habiendo hecho una <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">introducción a Docker</a> y esta a Ansible en el siguiente artículo comentaré <a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">como usar Docker con Ansible</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Ansible_%28software%29">Artículo en la wikipedia</a></li>
<li><a href="https://speakerdeck.com/slok/ansible-all-the-things">Presentación sobre Ansible</a></li>
<li><a href="https://github.com/ansible/ansible-examples">Ansible examples</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción a Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Cómo instalar y guía de inicio básica de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/</id>
        <title>Cómo crear una imagen para Docker usando un Dockerfile</title>
        <updated>2020-12-28T17:30:00+01:00</updated>
        <published>2014-11-07T19:50:17+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Podemos usar los contenedores disponibles en Docker Hub, donde están disponibles las aplicaciones de bases de datos, servidores de aplicaciones de múltiples lenguajes, servidores web más populares y entre otras muchas herramientas. Pero también podemos definir nuestras propias imágenes personalizadas con las necesidades que tengamos. Lo que necesitamos es escribir un archivo que contenga la receta para construir la imagen del contenedor, este archivo es el Dockerfile.</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>Las imágenes de <a href="https://www.docker.com/">Docker</a> son el sistema de archivos que usa el proceso o procesos que se arrancan en los contenedores. Si nos convencen las <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">características de Docker</a> y estamos decididos a usarlo y ya sabemos <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">como administrar de forma básica los contenedores</a> si queremos disponer de una imagen adaptada a los servicios que necesitamos para iniciar contenedores tendremos que crearla, en este artículo explicaré cómo crear una imagen para docker personalizada.</p>
<p>Antes de crear una imagen para docker podemos buscar en el <a href="https://registry.hub.docker.com/">registro de imágenes de Docker</a> que han creado otros usuarios y los han compartido por si hay alguna que ya se adapte a nuestras necesidades, si nos sirve alguna y es algo popular nos evitaremos tener que modificarla nosotros mismos según salgan nuevas versiones de los servicios que use. El registro de imágenes de docker es un servicio en el que las organizaciones publican versiones oficiales junto a otros usuarios que comparten y colaboran en la creación de las imágenes. Para los servicios más conocidos dispondremos ya de las imágenes como podrían ser: <a href="https://registry.hub.docker.com/_/mysql/">mysql</a>, <a href="https://registry.hub.docker.com/_/redis/">redis</a>, <a href="https://registry.hub.docker.com/_/postgres/">postgresql</a>, <a href="https://registry.hub.docker.com/_/ubuntu/">ubuntu</a>, <a href="https://registry.hub.docker.com/_/wordpress/">wordpress</a>, <a href="https://registry.hub.docker.com/_/nginx/">nginx</a>, <a href="https://registry.hub.docker.com/_/mongo/">mongodb</a>, &hellip;</p>
<p>Si no hay ninguna que se adapte totalmente a nuestras necesidades, no nos gusta como están construidas las existes o no confiamos en el mantenimiento que puedan tener esas imágenes podemos crear las nuestras propias. Para crear una imagen de docker se necesita una receta en forma de <a href="http://docs.docker.com/reference/builder/">archivo Dockerfile</a> que contiene la descripción e instrucciones para construir la imagen. Para crear un dockerfile podemos basarnos en los de las imágenes del registro de docker.</p>
<div class="alert alert-warning tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="archivo-dockerfile">Archivo Dockerfile</h3>
<p>Este podría ser el contenido y la receta de un dockerfile si quisiésemos crear una imagen de docker con el servidor web nginx como servicio basada en la distribución <a href="https://www.ubuntu.com/">Ubuntu</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">FROM</span><span class="s"> ubuntu:20.04</span><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">MAINTAINER</span><span class="s"> picodotdev &lt;pico.dev@gmail.com&gt;</span><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> apt-get -y update <span class="o">&amp;&amp;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;apt-get -y install nginx<span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> ln -sf /dev/stdout /var/log/nginx/access.log <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> ln -sf /dev/stderr /var/log/nginx/error.log<span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">EXPOSE</span><span class="s"> 80</span><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">CMD</span> <span class="p">[</span><span class="s2">&#34;nginx&#34;</span><span class="p">,</span> <span class="s2">&#34;-g&#34;</span><span class="p">,</span> <span class="s2">&#34;daemon off;&#34;</span><span class="p">]</span><span class="err">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Dockerfile</span>
    </div>
</div>
<p>Los archivos Dockerfile son archivos de texto con una secuencia de directivas:</p>
<ul>
<li><em>FROM</em>: indica la imagen base a partir de la cual crearemos la imagen que construirá el Dockerfile.</li>
<li><em>MAINTAINER</em>: documenta el creador de la imagen.</li>
<li><em>ENV</em>: establece el valor de una variable de entorno para los siguientes comandos <em>RUN</em>.</li>
<li><em>RUN</em>: permite ejecutar una instrucción en el contenedor, por ejemplo, para instalar algún paquete mediante el gestor de paquetes (apt-get, yum, rpm, &hellip;).</li>
<li><em>ADD</em>: permite añadir un archivo al contenedor, en muchas ocasiones se utiliza para proporcionar la configuración de los servicios (ssh, mysql, &hellip;).</li>
<li><em>VOLUME</em>: establece puntos de montaje que al usar el contenedor se pueden proporcionar, los volúmenes son al forma de externalizar un determinado directorio y proporcionar persistencia (las imágenes de docker son de solo lectura y no almacenan datos entre diferentes ejecuciones).</li>
<li><em>EXPOSE</em>: indica los puertos TCP/IP por los que se pueden acceder a los servicios del contenedor, los típicos son 22 (SSH), 80 (HTTP) u 443 (HTTP).</li>
<li><em>CMD</em>: establece el comando del proceso de inicio que se usará si no se indica uno al iniciar un contenedor con la imagen.</li>
</ul>
<h3 id="construir-una-imagen-de-docker">Construir una imagen de Docker</h3>
<p>Las instrucciones RUN y ADD permiten aprovisionar la imagen a partir de la imagen base, ejecutando comandos para instalar paquetes como Nginx y añadir archivos de configuración si los hubiera copiados de la máquina anfitrión. El archivo <em>Dockerfile</em> es la receta con la que se construye una imagen de Docker.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>docker build -t <span class="s2">&#34;picodotdev/nginx:1.0&#34;</span> .&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-build.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Sending build context to Docker daemon  10.75kB&#10;</span></span><span class="line"><span class="cl">Step 1/6 : FROM ubuntu:20.04&#10;</span></span><span class="line"><span class="cl"> ---&gt; f643c72bc252&#10;</span></span><span class="line"><span class="cl">Step 2/6 : MAINTAINER picodotdev &lt;pico.dev@gmail.com&gt;&#10;</span></span><span class="line"><span class="cl"> ---&gt; Using cache&#10;</span></span><span class="line"><span class="cl"> ---&gt; 58c7c960b513&#10;</span></span><span class="line"><span class="cl">Step 3/6 : RUN apt-get -y update &amp;&amp;&nbsp;&nbsp;&nbsp;&nbsp; apt-get -y install nginx&#10;</span></span><span class="line"><span class="cl"> ---&gt; Running in a3dd3d05b2b9&#10;</span></span><span class="line"><span class="cl">Get:1 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]&#10;</span></span><span class="line"><span class="cl">Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [109 kB]&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">Setting up nginx (1.18.0-0ubuntu1) ...&#10;</span></span><span class="line"><span class="cl">Processing triggers for libc-bin (2.31-0ubuntu9.1) ...&#10;</span></span><span class="line"><span class="cl">Removing intermediate container a3dd3d05b2b9&#10;</span></span><span class="line"><span class="cl"> ---&gt; efa07d7c2e15&#10;</span></span><span class="line"><span class="cl">Step 4/6 : RUN ln -sf /dev/stdout /var/log/nginx/access.log&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; ln -sf /dev/stderr /var/log/nginx/error.log&#10;</span></span><span class="line"><span class="cl"> ---&gt; Running in feb46051e784&#10;</span></span><span class="line"><span class="cl">Removing intermediate container feb46051e784&#10;</span></span><span class="line"><span class="cl"> ---&gt; bf5cf443326a&#10;</span></span><span class="line"><span class="cl">Step 5/6 : EXPOSE 80&#10;</span></span><span class="line"><span class="cl"> ---&gt; Running in 5ee72ef91b9d&#10;</span></span><span class="line"><span class="cl">Removing intermediate container 5ee72ef91b9d&#10;</span></span><span class="line"><span class="cl"> ---&gt; 7c5f47295134&#10;</span></span><span class="line"><span class="cl">Step 6/6 : CMD [&#34;nginx&#34;, &#34;-g&#34;, &#34;daemon off;&#34;]&#10;</span></span><span class="line"><span class="cl"> ---&gt; Running in 6dc6c8054938&#10;</span></span><span class="line"><span class="cl">Removing intermediate container 6dc6c8054938&#10;</span></span><span class="line"><span class="cl"> ---&gt; d76e74522ce5&#10;</span></span><span class="line"><span class="cl">Successfully built d76e74522ce5&#10;</span></span><span class="line"><span class="cl">Successfully tagged picodotdev/nginx:1.0</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-build.out</span>
    </div>
</div>
<p>La imagen construida queda almacenada en el registro local de imágenes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker images&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-images.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">REPOSITORY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TAG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMAGE ID&nbsp;&nbsp;&nbsp;&nbsp;   CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SIZE&#10;</span></span><span class="line"><span class="cl">picodotdev/nginx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  1.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d76e74522ce5   About an hour ago   158MB&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-images.out</span>
    </div>
</div>
<h3 id="iniciar-un-contenedor-con-la-imagen">Iniciar un contenedor con la imagen</h3>
<p>El siguiente comando inicia una instancia del contenedor con un servidor web virtual para el dominio <em>www.127.0.0.1.xip.io</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>docker run -it --rm <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-v <span class="s2">&#34;</span><span class="si">${</span><span class="nv">PWD</span><span class="si">}</span><span class="s2">/www.127.0.0.1.xip.io.conf:/etc/nginx/conf.d/www.127.0.0.1.xip.io.conf:ro&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-v <span class="s2">&#34;</span><span class="si">${</span><span class="nv">PWD</span><span class="si">}</span><span class="s2">/nginx/log:/var/log/nginx&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-p <span class="s2">&#34;80:80&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;picodotdev/nginx:1.0</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="k">log_format</span> <span class="s">nginx_vcombined</span> <span class="s">&#39;</span><span class="nv">$host:$server_port</span> <span class="s">&#39;</span> <span class="s">&#39;</span><span class="nv">$remote_addr</span> <span class="s">-</span> <span class="nv">$remote_user</span> <span class="s">[</span><span class="nv">$time_local]</span> <span class="s">&#39;</span> <span class="s">&#39;&#34;</span><span class="nv">$request&#34;</span> <span class="nv">$status</span> <span class="nv">$body_bytes_sent</span> <span class="s">&#39;</span> <span class="s">&#39;&#34;</span><span class="nv">$http_referer&#34;</span> <span class="s">&#34;</span><span class="nv">$http_user_agent&#34;&#39;</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">server</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span> <span class="s">www.127.0.0.1.xip.io</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">access_log</span> <span class="s">/dev/stdout</span> <span class="s">nginx_vcombined</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">access_log</span> <span class="s">/var/log/nginx/nginx-access.log</span> <span class="s">nginx_vcombined</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">error_log</span> <span class="s">/var/log/nginx/nginx-error.log</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">error_log</span> <span class="s">/dev/stderr</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">root</span>   <span class="s">/usr/share/nginx/html</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>www.127.0.0.1.xip.io.conf</span>
    </div>
</div>
<p>Otra forma de iniciar el contenedor es con un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> que básicamente contiene los mismos parámetros del comando <em>docker run</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.9&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">nginx</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s2">&#34;80:80&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">${PWD}/www.127.0.0.1.xip.io.conf:/etc/nginx/conf.d/www.127.0.0.1.xip.io.conf:ro</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">${PWD}/nginx/log:/var/log/nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>docker-compose up&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<p>Accediendo con el navegador al servidor nginx del contenedor se devuelve la página por defecto.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/images/nginx_hu98cd059ed574f7206fe0ebc08b9a46f4_50303_2560x1440_fit_box_3.png" data-gallery="" title="Nginx"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/images/nginx_hu98cd059ed574f7206fe0ebc08b9a46f4_50303_300x200_fit_box_3.png" width="300" height="176" alt="Nginx" title="Nginx"  class="lozad "></a></p>
</figure>
</div>
<p>Para aprender más sobre Docker es buena idea seguir un manual de referencia como los libros <a href="https://amzn.to/3DgQj7G">Docker: Up &amp; Running</a> y <a href="https://amzn.to/3pH6uEr">Docker in Action</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DockerNginx">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-build.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://www.nkode.io/2014/08/24/valuable-docker-links.html">Lista de enlaces sobre Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/</id>
        <title>Cómo instalar y guía de inicio básica de Docker</title>
        <updated>2015-05-26T20:00:00+01:00</updated>
        <published>2014-11-01T09:47:51+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La tecnología de contenedores nos ofrece múltiples ventajas para nuestras aplicaciones. Docker es una de las más nombradas y que está creciendo muy rápidamente. Es muy sencillo empezarla a usar como mostraré en unos pocos comandos a continuación.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>En el <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">artículo anterior introductorio sobre Docker</a> comentaba cuales son sus principales características, que diferencias tiene con la virtualización y algunos casos y motivos por los que nos puede interesar usarlo. El objetivo de este artículo será a modo de guía rápida como empezar a usar <a href="https://www.docker.com/">Docker</a>. Comentaré cuales son los comandos básicos para manejar Docker, las imágenes y los contenedores.</p>
<p>Antes de empezar con la guía propiamente hay que tener en cuenta que otra de las características de Docker es que únicamente se inicia un solo proceso, cuando este finaliza finaliza la instancia del contenedor. Aunque en principio un contenedor solo tiene un proceso, podemos usar como proceso inicial uno que arranque otros, la <a href="https://registry.hub.docker.com/u/phusion/baseimage/">imagen pushion</a> tiene un sistema de inicio adaptado al funcionamiento de Docker (no siendo así upstart de las imágenes de ubuntu o systemd usado por otras distribuciones) con el que podemos iniciar otros procesos, en cualquier caso es recomendable que un contenedor sino tiene un solo proceso tenga unos pocos procesos relacionados con el servicio que proporciona la imagen, la recomendación es no proporcionar una imagen con un montón de servicios/procesos sino varias pequeñas cuyos servicios colaboren. Una imagen de un contenedor es básicamente el sistema de archivos que usará el proceso que iniciamos en el contenedor, necesitamos obtener o construir una imagen para iniciar los contenedores y trabajar con Docker.</p>
<p>Primeramente deberemos instalar el paquete de Docker, en el caso de <a href="https://www.archlinux.org/">Arch Linux</a> con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S docker&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-1.sh</span>
    </div>
</div>
<p>Para poder usar Docker sin emplear el comando <em>sudo</em> hay que añadir nuestro usuario al grupo <em>docker</em>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo groupadd docker&#10;</span></span><span class="line"><span class="cl">$ sudo usermod -aG docker picodotdev&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-2.sh</span>
    </div>
</div>
<p>Una vez instalado el paquete y añadido nuestro usuario al grupo <em>docker</em> podemos iniciar el servicio de Docker, en Arch Linux con systemd:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl start docker.service&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-3.sh</span>
    </div>
</div>
<p>Con el comando <em>docker images</em>, <em>docker ps</em>, <em>docker ps -a</em> podemos respectivamente ver las imágenes de Docker disponibles en nuestro sistema, las instancias de los contenedores iniciadas y las instancias de los contenedores incluyendo las no iniciadas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker images&#10;</span></span><span class="line"><span class="cl">$ docker ps&#10;</span></span><span class="line"><span class="cl">$ docker ps -a</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-4.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-images_hu4f130814d6c33440bf1026f0b7e1b513_32467_2560x1440_fit_box_3.png" data-gallery="" title="docker-images"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-images_hu4f130814d6c33440bf1026f0b7e1b513_32467_300x200_fit_box_3.png" width="300" height="163" alt="docker-images" title="docker-images"  class="lozad "></a></p>
</figure>
</div>
<p>Con los comandos <em>docker rm [contenedor]</em> y <em>docker rmi [imagen]</em> podemos eliminar las instancias de contenedores y las imágenes que no estén siendo usadas por ningún contenedor, si están siendo usadas deberemos eliminar primero el contenedor.</p>
<p>Una vez conocemos los comandos básicos para gestionar las imágenes y contenedores aún nos quedan conocer los comandos para obtener las imágenes y como iniciarlas. No hace falta que las imágenes las construyamos nosotros desde cero sino que podemos utilizar las que otras personas han construido. Docker dispone de un <a href="https://registry.hub.docker.com/">registro o repositorio de imágenes</a> en el que la comunidad (otras personas) publica las que ellos han construido, en este registro podemos encontrar imágenes para cualquier servicio de los más utilizados ya sea <a href="https://www.mysql.com/">MySQL</a>, <a href="https://nginx.org/">Nginx</a>, <a href="https://redis.io/">Redis</a>, <a href="https://wordpress.org/">WordPress</a>, <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://www.centos.org/">CentOS</a>, &hellip; Este repositorio de imágenes hace que podamos disponer de estos servicios muy fácilmente, sin embargo, hay que tener en cuenta que algunas imágenes no son construidas por alguien &ldquo;oficial&rdquo; de ese servicio, cualquier persona puede <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">construir una imagen de un servicio</a> y hacerlo disponible en el repositorio esto hace que algunas imágenes puedan no ser de la máxima calidad o que estén apropiadamente mantenidas. Por ello, es recomendable utilizar las imágenes más descargadas y usadas, a pesar de todo con Docker si una imagen no nos gusta podemos basarnos en ella para construir una que se adapte totalmente a nuestras necesidades y con la que nos sintamos cómodos.</p>
<p>Para obtener una imagen usamos el comando <em>docker pull [imagen]</em> indicando el usuario que creó la imagen, el nombre de la imagen y el tag. En el siguiente enlace en la pestaña tags podemos ver las <a href="https://registry.hub.docker.com/_/debian/">imágenes para Docker de Debian y sus tag</a>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker pull debian:7.7&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-5.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-pull_hu073f5b22e1c4ee836c55a2e8954480ce_27567_2560x1440_fit_box_3.png" data-gallery="" title="docker-pull"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-pull_hu073f5b22e1c4ee836c55a2e8954480ce_27567_300x200_fit_box_3.png" width="300" height="148" alt="docker-pull" title="docker-pull"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez descargada la imagen podemos iniciar un contenedor de la imagen con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm -i -t --name debian debian:7.7 /bin/bash&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-6.sh</span>
    </div>
</div>
<p>En la terminal que se inicia podemos usar cualquier comando que usaríamos en un sistema <a href="https://www.debian.org/">debian</a> como apt-get.</p>
<p>Este es el momento para explicar otra de las peculiaridades de los contenedores de Docker y es que estos no conservan el estado de una ejecución a otra y cada vez que ejecutemos el comando se creará una nueva instancia del contenedor. Para conseguir la persistencia al crear las imágenes se pueden establecer puntos de montaje, esta persistencia está externalizada en otros contenedores con el solo propósito de servir como volúmenes de datos, también se puede montar un directorio del sistema anfitrión.</p>
<p>Si usamos el comando «uname -a» puede verse que aunque el contenedor usa el sistema de archivos de una distribución debian el kernel empleado es el del sistema anfitrión, esto es así porque los contenedores Docker en esencia no son más que procesos dentro del sistema.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-run_huad4cd875eaead8a61488f479afd6d4bb_19394_2560x1440_fit_box_3.png" data-gallery="" title="docker-run"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-run_huad4cd875eaead8a61488f479afd6d4bb_19394_300x200_fit_box_3.png" width="300" height="163" alt="docker-run" title="docker-run"  class="lozad "></a></p>
</figure>
</div>
<p>Continuando esta serie de artículos sobre Docker explicaré como construir una imagen mediante los Dockerfiles con la que podamos usar una base de datos mysql y explicaré en más detalle como podemos conseguir la persistencia que necesitaremos para almacenar los datos de la base de datos usando otro contenedor con este propósito.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://registry.hub.docker.com/">Docker Hub Registry</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/</id>
        <title>Introducción y características de Docker</title>
        <updated>2017-05-02T23:00:00+02:00</updated>
        <published>2014-10-25T10:52:34+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los contenedores no son una tecnología nueva pero Docker ha reunido las características necesarias para hacerla sencilla y popular en Linux. Suponen un cambio en la infraestructura de las aplicaciones con algunas ventajas sobre la virtualización y la instalación de los servicios directamente en el sistema.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p><a href="https://www.docker.com/">Docker</a> es una de las herramientas de la que se está hablando mucho, esto es así ya que tiene varios aspectos interesantes que <a href="https://www.javaworld.com/article/2685223/java-app-dev/four-ways-docker-fundamentally-changes-application-development.html">cambian la forma de desarrollar aplicaciones</a>. Docker es una forma de ejecutar procesos de forma aislada pero también se compone de herramientas para construir imágenes y un repositorio para compartirlas.</p>
<p>Al contrario de la virtualización Docker no emula o virtualiza una máquina y su sistema operativo con lo que los procesos son mucho más ligeros y hace que el hardware pueda ser aprovechado más al poder aumentar la densidad de los servicios en una misma máquina. Los contenedores y servicios incluidos en ellos inician muy rápidamente, en pocos segundos. Además, no es necesario el sistema de archivos completo del sistema operativo invitado con lo que docker usa una fracción de espacio de almacenamiento necesario en la virtualización.</p>
<p>La tecnología de contenedores no es nueva y también está disponible en otros sistemas operativos como <a href="https://openvz.org/">OpenVZ</a> también en Linux, <a href="http://www.freebsd.org/doc/handbook/jails.html">FreeBSD Jails</a> o los <a href="https://www.oracle.com/technetwork/server-storage/solaris/containers-169727.html">contenedores de Solaris</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/virtual-machines_hu36dbd3e9a6507dbf52b85dcf00883824_27419_2560x1440_fit_box_3.png" data-gallery="" title="Máquinas virtuales"><img src="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/virtual-machines_hu36dbd3e9a6507dbf52b85dcf00883824_27419_300x200_fit_box_3.png" width="300" height="114" alt="Máquinas virtuales" title="Máquinas virtuales"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/docker_hu42f46de04f57b3d5bef570e2161e1676_25641_2560x1440_fit_box_3.png" data-gallery="" title="Docker"><img src="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/docker_hu42f46de04f57b3d5bef570e2161e1676_25641_300x200_fit_box_3.png" width="300" height="110" alt="Docker" title="Docker"  class="lozad "></a></p>
</figure>
</div>
<p>Docker tiene varias características interesantes. Es ligero ya que no hay virtualización aprovechándose mejor el hardware y únicamente necesitando el sistema de archivos mínimo para que funcionen los servicios. Los contenedores son autosuficientes (aunque pueden depender de otros contenedores, por ejemplo, un wordpress que necesita una base de datos mysql) no necesitando nada más que la imagen del contenedor para que funcionen los servicios que ofrece. Las imágenes de docker son portables entre diferentes plataformas el único requisito es que en el sistema huésped esté disponible docker. Es seguro, pudiendo hacer que los contenedores se comuniquen por un túnel solo disponible para ellos, los contenedores están aislados en el sistema mediante namespaces y control groups.</p>
<p>Para los desarrolladores tiene las siguientes ventajas:</p>
<ul>
<li>Podemos disponer de un entorno de desarrollo (devbox) o servicio en varios minutos/horas en vez de algún día. Esto es así porque la configuración y los servicios necesarios están automatizados en la construcción de las imágenes de los contenedores mediante <a href="https://docs.docker.com/reference/builder/">Dockerfiles</a>.</li>
<li>Al estar los servicios en contenedores no hace falta instalarlos en la máquina en la que son alojados, de forma que podemos disponer de los servicios y después eliminarlos de forma sencilla sin &ldquo;ensuciar&rdquo; el sistema huésped.</li>
<li>Nos permite tener versiones más parecidas o iguales a las usadas en producción. Por ejemplo, en Arch Linux nos permite tener un mysql de la distribución <a href="https://www.ubuntu.com/">Ubuntu</a> usando la misma versión.</li>
</ul>
<p>El <a href="https://registry.hub.docker.com/">registro de contenedores de Docker</a> es una forma colaborativa de ofrecer imágenes. Hay disponibles multitud de contenedores con los servicios más populares: <a href="https://www.mysql.com/">MySQL</a>, <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://redis.io/">Redis</a>, <a href="https://nginx.org/">Nginx</a>, <a href="https://wordpress.org/">WordPress</a>, &hellip;</p>
<p>Para los administradores de sistemas tiene las siguientes ventajas:</p>
<ul>
<li>Pueden proporcionar entornos similares o iguales a los entornos de pruebas, QA o producción independientemente de la distribución que se use.</li>
<li>Es posible desplegar un contenedor en cualquier infraestructura Linux.</li>
<li>La creación de los contenedores puede ponerse bajo un sistema de control de versiones.</li>
</ul>
<p>En la siguiente presentación muy completa están ampliados muchas de sus posibilidades y funcionalidades.</p>
<div class="media">
    <script async class="speakerdeck-embed" data-id="c02e6030ee52013165c72a37516b560d" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>
    <noscript>$TODO</noscript>
</div>
<p>Una vez conocidos los aspectos básicos y en que se diferencia docker de la virtualización así como el caso de uso de por ejemplo un <em>devbox</em> o disponer de entornos similares a los de producción de una aplicación, en el siguiente artículo comentaré <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">cómo instalar docker, cómo empezar a usarlo, cómo obtener imágenes de servicios y pararlos y administrarlos</a>. En la siguiente <a href="http://www.nkode.io/2014/08/24/valuable-docker-links.html">lista de enlaces sobre Docker</a> se puede encontrar mucha información reunida dispersa en la red, desde introducciones, opiniones, como usarlo, como empaquetar las aplicaciones, como monitorizar o como usarlo en microservicios.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.docker.com/">Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://docs.docker.com/articles/security/">Seguridad Docker</a></li>
<li><a href="https://www.javaworld.com/article/2685223/java-app-dev/four-ways-docker-fundamentally-changes-application-development.html">Four ways Docker fundamentally changes application development</a></li>
<li><a href="https://openwebinars.net/docker-que-es-sus-principales-caracteristicas/">Docker, qué es y sus principales características</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>