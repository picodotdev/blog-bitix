<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/gnu-linux/</id>
    <updated>2022-11-10T23:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/</id>
        <title>Introducción a Ansible</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-11-15T10:35:39+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ansible.svg" width="200" height="246" alt="Ansible" title="Ansible"  class=""></p>
</div>
<p>Siempre que nos sea posible deberíamos automatizar las tareas que realizamos. Automatizar tareas hará sencillo realizarlas permitiéndonos hacer todos los despliegues de una aplicación que queramos con menos posibilidades de cometer errores manuales o nos permitirá disponer de una nueva máquina aprovisionada exactamente como pueda estar la máquina de producción en mucho menos tiempo. En el ámbito del aprovisionamiento de máquinas y administración de la infraestructura IT hay varias opciones, entre ellas están <a href="https://www.getchef.com/">Chef</a>, <a href="https://puppet.com/">Puppet</a> y <a href="https://www.ansible.com/">Ansible</a>.</p>
<p>En este artículo haré una breve introducción de Ansible que principalmente se emplea en servidores pero también podríamos emplearlo para nuestra propia máquina. Con Ansible podremos:</p>
<ul>
<li>Automatizar el aprovisionamiento de máquinas.</li>
<li>Gestionar la configuración de los servicios de esas máquinas.</li>
<li>Realizar despliegues y orquestar los servicios.</li>
</ul>
<p>Hay que destacar que Ansible no necesita instalar un agente (al contrario de Chef o Puppet) en cada una de las máquinas del inventario que queramos administrar lo que lo hace fácil de emplear, usa un modelo «push» en el que la máquina donde se ejecuta Ansible envía por ssh los comandos necesarios a aplicar en vez de ser cada una de las máquinas las que obtienen de un repositorio las recetas a usar. En los artículos <a href="https://www.ansible.com/application-deployment">Application Deployment</a>, <a href="https://www.ansible.com/configuration-management">Configuration Management</a> y <a href="https://www.ansible.com/continuous-delivery">Continous Delivery</a> nos describen algunos casos de uso y sus ventajas empleando Ansible.</p>
<p>Para trabajar con Ansible necesitaremos inventariar las máquinas y probablemente definir algunas variables. Podría ser de la siguiente forma en el caso de una máquina para desarrollar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">devbox ansible_connection=local ansible_python_interpreter=python2&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[devbox]&#10;</span></span><span class="line"><span class="cl">devbox&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">[devbox:vars]&#10;</span></span><span class="line"><span class="cl">path = &#34;projects&#34;&#10;</span></span><span class="line"><span class="cl">subversion_user = &#34;picodotdev&#34;&#10;</span></span><span class="line"><span class="cl">subversion_password = &#34;***&#34;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hosts</span>
    </div>
</div>
<p>En el inventario descrito como un archivo en formato INI se asignan los nombres del host o sus direcciones IP, también se pueden hacer agrupaciones de máquinas por ejemplo en base al rol (base de datos, servidor web, &hellip;). Una vez que disponemos del inventario podemos empezar a usar Ansible, por ejemplo haciendo un ping a todas las máquinas o instalando un determinado paquete:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ansible devbox -i hosts -m ping&#10;</span></span><span class="line"><span class="cl">$ ansible devbox -i hosts -m pacman -a <span class="s2">&#34;name=docker state=installed&#34;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/images/ansible_hu0ee96d09f68b45023e964e4c0b8ce310_35028_2560x1440_fit_box_3.png" data-gallery="" title="Ansible"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/images/ansible_hu0ee96d09f68b45023e964e4c0b8ce310_35028_300x200_fit_box_3.png" width="300" height="155" alt="Ansible" title="Ansible"  class="lozad "></a></p>
</figure>
</div>
<p>El parámetro -m indica el módulo de Ansible que usamos y a continuación indicamos los parámetros. Ansible dispone de una amplia <a href="http://docs.ansible.com/list_of_all_modules.html">colección de módulos</a> que nos permiten hacer cantidad de tareas.</p>
<p>Pero en vez de usar Ansible mediante comandos podemos emplear recetas contenidas en <a href="http://docs.ansible.com/playbooks.html">playbooks</a> descritos en formato YAML en las que definimos varias tareas y podemos usar las variables del inventario. Con el siguiente playbook instalamos varios paquetes en una máquina Arch Linux y hacemos un checkout de dos proyectos de subversion, para ello usamos en la primera tarea el módulo para gestionar paquetes con pacman, hay módulos para los gestores de paquetes de otras distribuciones (apt, yum, &hellip;) y en la segunda tarea hacemos un checkout de dos proyectos usando el módulo del sistema de control de versiones subversion. Los módulos son idempotentes de forma que una vez que el sistema está en el estado deseado no se realiza la operación, esto hace que el mismo playbook pueda ser ejecutado tantas veces como se desee evitando efectos colaterales por reejecuciones, lo importante es el estado que se quiere conseguir, Ansible se encarga de realizar las acciones necesarias para llegar a él desde el estado actual del sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">install packages (Arch Linux)</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">pacman</span><span class="p">:</span><span class="w"> </span><span class="l">name={{ item }} state=present</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">ansible_distribution == &#34;Archlinux&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">vim</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">subversion</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">mariadb</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">redis</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">docker</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">ansible</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">python2-pip</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">python2-virtualenv</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">checkout projects</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">LANG</span><span class="p">:</span><span class="w"> </span><span class="l">es_ES.UTF-8</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">LC_CTYPE</span><span class="p">:</span><span class="w"> </span><span class="l">es_ES.UTF-8</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">subversion</span><span class="p">:</span><span class="w"> </span><span class="l">repo={{ item.url }} dest={{ projects }}/{{ item.path }} username={{ subversion_user }} password={{ subversion_password }}</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://server.com/svn/repos/project1/trunk&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;project1&#34;</span><span class="w"> </span>}<span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://server.com/svn/repos/project2/trunk&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;project2&#34;</span><span class="w"> </span>}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.yml</span>
    </div>
</div>
<p>Para ejecutar un playbook usamos el comando ansible-playbook en vez de simplemente el comando ansible.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ansible-playbook ansible/install.yml -i hosts&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible-playbook-install.sh</span>
    </div>
</div>
<p>En los playbooks podemos usar tareas, grupos de máquinas, variables, variables de grupos, asignar valores a variables, usar condicionales, bucles, hechos (facts, información obtenida por ansible), notificaciones y realizar acciones en base a ellas, aplicar etiquetas a tareas, hacer includes, plantillas (para los archivos de configuración de los servicios, por ejemplo de apache o mysql), esperar a condiciones, cifrar archivos que contengan información sensible y que podamos incluir en una herramienta de control de versiones sin riesgo a comprometer la información, usar roles que aplican todas estas cosas según la función que queramos que tenga una máquina.</p>
<p>El libro <a href="https://www.ansible.com/ansible-book">Ansible Up &amp; Running</a> es un buen punto de partida que explica los aspectos básicos ya en su versión de vista previa, por supuesto la propia <a href="http://docs.ansible.com/index.html">documentación del proyecto</a> y los <a href="https://www.ansible.com/resources">recursos de evangelización</a> están bastante bien. En la siguiente buena y completa presentación se explican con un poco más detalle más cosas:</p>
<div class="media">
    <script async class="speakerdeck-embed" data-id="e02a4f70ee4d01312be742839f79c6f5" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>
    <noscript>$TODO</noscript>
</div>
<p>También, en el siguiente <a href="https://github.com/ansible/ansible-examples">repositorio de GitHub hay varios ejemplos</a> que podemos revisar para ver como se organizan los archivos y carpetas y las convenciones en su estructura que se usan implícitamente.</p>
<p>Como me ha ocurrido con la <a href="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/">herramienta Elasticsearch</a> la documentación de Ansible no me ha resultado que esté escrita de forma didáctica para dominarla empezando desde ningún conocimiento, por ello un libro como <a href="https://amzn.to/37D5mIC">Ansible: Up and Running</a> es una opción interesante para aprender.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491915323&amp;linkId=4d1cc610f8b4b9439ae029cb32f80c76" title="Amazon" class="lozad"></iframe>
</div>
<p>Habiendo hecho una <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">introducción a Docker</a> y esta a Ansible en el siguiente artículo comentaré <a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">como usar Docker con Ansible</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Ansible_%28software%29">Artículo en la wikipedia</a></li>
<li><a href="https://speakerdeck.com/slok/ansible-all-the-things">Presentación sobre Ansible</a></li>
<li><a href="https://github.com/ansible/ansible-examples">Ansible examples</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción a Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Cómo instalar y guía de inicio básica de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/</id>
        <title>Cómo crear una imagen para Docker usando un Dockerfile</title>
        <updated>2020-12-28T17:30:00+01:00</updated>
        <published>2014-11-07T19:50:17+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Podemos usar los contenedores disponibles en Docker Hub, donde están disponibles las aplicaciones de bases de datos, servidores de aplicaciones de múltiples lenguajes, servidores web más populares y entre otras muchas herramientas. Pero también podemos definir nuestras propias imágenes personalizadas con las necesidades que tengamos. Lo que necesitamos es escribir un archivo que contenga la receta para construir la imagen del contenedor, este archivo es el Dockerfile.</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>Las imágenes de <a href="https://www.docker.com/">Docker</a> son el sistema de archivos que usa el proceso o procesos que se arrancan en los contenedores. Si nos convencen las <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">características de Docker</a> y estamos decididos a usarlo y ya sabemos <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">como administrar de forma básica los contenedores</a> si queremos disponer de una imagen adaptada a los servicios que necesitamos para iniciar contenedores tendremos que crearla, en este artículo explicaré cómo crear una imagen para docker personalizada.</p>
<p>Antes de crear una imagen para docker podemos buscar en el <a href="https://registry.hub.docker.com/">registro de imágenes de Docker</a> que han creado otros usuarios y los han compartido por si hay alguna que ya se adapte a nuestras necesidades, si nos sirve alguna y es algo popular nos evitaremos tener que modificarla nosotros mismos según salgan nuevas versiones de los servicios que use. El registro de imágenes de docker es un servicio en el que las organizaciones publican versiones oficiales junto a otros usuarios que comparten y colaboran en la creación de las imágenes. Para los servicios más conocidos dispondremos ya de las imágenes como podrían ser: <a href="https://registry.hub.docker.com/_/mysql/">mysql</a>, <a href="https://registry.hub.docker.com/_/redis/">redis</a>, <a href="https://registry.hub.docker.com/_/postgres/">postgresql</a>, <a href="https://registry.hub.docker.com/_/ubuntu/">ubuntu</a>, <a href="https://registry.hub.docker.com/_/wordpress/">wordpress</a>, <a href="https://registry.hub.docker.com/_/nginx/">nginx</a>, <a href="https://registry.hub.docker.com/_/mongo/">mongodb</a>, &hellip;</p>
<p>Si no hay ninguna que se adapte totalmente a nuestras necesidades, no nos gusta como están construidas las existes o no confiamos en el mantenimiento que puedan tener esas imágenes podemos crear las nuestras propias. Para crear una imagen de docker se necesita una receta en forma de <a href="http://docs.docker.com/reference/builder/">archivo Dockerfile</a> que contiene la descripción e instrucciones para construir la imagen. Para crear un dockerfile podemos basarnos en los de las imágenes del registro de docker.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="archivo-dockerfile">Archivo Dockerfile</h3>
<p>Este podría ser el contenido y la receta de un dockerfile si quisiésemos crear una imagen de docker con el servidor web nginx como servicio basada en la distribución <a href="https://www.ubuntu.com/">Ubuntu</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">FROM</span><span class="s"> ubuntu:20.04</span><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">MAINTAINER</span><span class="s"> picodotdev &lt;pico.dev@gmail.com&gt;</span><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> apt-get -y update <span class="o">&amp;&amp;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;apt-get -y install nginx<span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> ln -sf /dev/stdout /var/log/nginx/access.log <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> ln -sf /dev/stderr /var/log/nginx/error.log<span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">EXPOSE</span><span class="s"> 80</span><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err">&#10;</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">CMD</span> <span class="p">[</span><span class="s2">&#34;nginx&#34;</span><span class="p">,</span> <span class="s2">&#34;-g&#34;</span><span class="p">,</span> <span class="s2">&#34;daemon off;&#34;</span><span class="p">]</span><span class="err">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Dockerfile</span>
    </div>
</div>
<p>Los archivos Dockerfile son archivos de texto con una secuencia de directivas:</p>
<ul>
<li><em>FROM</em>: indica la imagen base a partir de la cual crearemos la imagen que construirá el Dockerfile.</li>
<li><em>MAINTAINER</em>: documenta el creador de la imagen.</li>
<li><em>ENV</em>: establece el valor de una variable de entorno para los siguientes comandos <em>RUN</em>.</li>
<li><em>RUN</em>: permite ejecutar una instrucción en el contenedor, por ejemplo, para instalar algún paquete mediante el gestor de paquetes (apt-get, yum, rpm, &hellip;).</li>
<li><em>ADD</em>: permite añadir un archivo al contenedor, en muchas ocasiones se utiliza para proporcionar la configuración de los servicios (ssh, mysql, &hellip;).</li>
<li><em>VOLUME</em>: establece puntos de montaje que al usar el contenedor se pueden proporcionar, los volúmenes son al forma de externalizar un determinado directorio y proporcionar persistencia (las imágenes de docker son de solo lectura y no almacenan datos entre diferentes ejecuciones).</li>
<li><em>EXPOSE</em>: indica los puertos TCP/IP por los que se pueden acceder a los servicios del contenedor, los típicos son 22 (SSH), 80 (HTTP) u 443 (HTTP).</li>
<li><em>CMD</em>: establece el comando del proceso de inicio que se usará si no se indica uno al iniciar un contenedor con la imagen.</li>
</ul>
<h3 id="construir-una-imagen-de-docker">Construir una imagen de Docker</h3>
<p>Las instrucciones RUN y ADD permiten aprovisionar la imagen a partir de la imagen base, ejecutando comandos para instalar paquetes como Nginx y añadir archivos de configuración si los hubiera copiados de la máquina anfitrión. El archivo <em>Dockerfile</em> es la receta con la que se construye una imagen de Docker.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>docker build -t <span class="s2">&#34;picodotdev/nginx:1.0&#34;</span> .&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-build.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Sending build context to Docker daemon  10.75kB&#10;</span></span><span class="line"><span class="cl">Step 1/6 : FROM ubuntu:20.04&#10;</span></span><span class="line"><span class="cl"> ---&gt; f643c72bc252&#10;</span></span><span class="line"><span class="cl">Step 2/6 : MAINTAINER picodotdev &lt;pico.dev@gmail.com&gt;&#10;</span></span><span class="line"><span class="cl"> ---&gt; Using cache&#10;</span></span><span class="line"><span class="cl"> ---&gt; 58c7c960b513&#10;</span></span><span class="line"><span class="cl">Step 3/6 : RUN apt-get -y update &amp;&amp;&nbsp;&nbsp;&nbsp;&nbsp; apt-get -y install nginx&#10;</span></span><span class="line"><span class="cl"> ---&gt; Running in a3dd3d05b2b9&#10;</span></span><span class="line"><span class="cl">Get:1 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]&#10;</span></span><span class="line"><span class="cl">Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [109 kB]&#10;</span></span><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">Setting up nginx (1.18.0-0ubuntu1) ...&#10;</span></span><span class="line"><span class="cl">Processing triggers for libc-bin (2.31-0ubuntu9.1) ...&#10;</span></span><span class="line"><span class="cl">Removing intermediate container a3dd3d05b2b9&#10;</span></span><span class="line"><span class="cl"> ---&gt; efa07d7c2e15&#10;</span></span><span class="line"><span class="cl">Step 4/6 : RUN ln -sf /dev/stdout /var/log/nginx/access.log&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; ln -sf /dev/stderr /var/log/nginx/error.log&#10;</span></span><span class="line"><span class="cl"> ---&gt; Running in feb46051e784&#10;</span></span><span class="line"><span class="cl">Removing intermediate container feb46051e784&#10;</span></span><span class="line"><span class="cl"> ---&gt; bf5cf443326a&#10;</span></span><span class="line"><span class="cl">Step 5/6 : EXPOSE 80&#10;</span></span><span class="line"><span class="cl"> ---&gt; Running in 5ee72ef91b9d&#10;</span></span><span class="line"><span class="cl">Removing intermediate container 5ee72ef91b9d&#10;</span></span><span class="line"><span class="cl"> ---&gt; 7c5f47295134&#10;</span></span><span class="line"><span class="cl">Step 6/6 : CMD [&#34;nginx&#34;, &#34;-g&#34;, &#34;daemon off;&#34;]&#10;</span></span><span class="line"><span class="cl"> ---&gt; Running in 6dc6c8054938&#10;</span></span><span class="line"><span class="cl">Removing intermediate container 6dc6c8054938&#10;</span></span><span class="line"><span class="cl"> ---&gt; d76e74522ce5&#10;</span></span><span class="line"><span class="cl">Successfully built d76e74522ce5&#10;</span></span><span class="line"><span class="cl">Successfully tagged picodotdev/nginx:1.0</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-build.out</span>
    </div>
</div>
<p>La imagen construida queda almacenada en el registro local de imágenes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker images&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-images.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">REPOSITORY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TAG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMAGE ID&nbsp;&nbsp;&nbsp;&nbsp;   CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SIZE&#10;</span></span><span class="line"><span class="cl">picodotdev/nginx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  1.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d76e74522ce5   About an hour ago   158MB&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-images.out</span>
    </div>
</div>
<h3 id="iniciar-un-contenedor-con-la-imagen">Iniciar un contenedor con la imagen</h3>
<p>El siguiente comando inicia una instancia del contenedor con un servidor web virtual para el dominio <em>www.127.0.0.1.xip.io</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>docker run -it --rm <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-v <span class="s2">&#34;</span><span class="si">${</span><span class="nv">PWD</span><span class="si">}</span><span class="s2">/www.127.0.0.1.xip.io.conf:/etc/nginx/conf.d/www.127.0.0.1.xip.io.conf:ro&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-v <span class="s2">&#34;</span><span class="si">${</span><span class="nv">PWD</span><span class="si">}</span><span class="s2">/nginx/log:/var/log/nginx&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-p <span class="s2">&#34;80:80&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;picodotdev/nginx:1.0</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="line"><span class="cl"><span class="k">log_format</span> <span class="s">nginx_vcombined</span> <span class="s">&#39;</span><span class="nv">$host:$server_port</span> <span class="s">&#39;</span> <span class="s">&#39;</span><span class="nv">$remote_addr</span> <span class="s">-</span> <span class="nv">$remote_user</span> <span class="s">[</span><span class="nv">$time_local]</span> <span class="s">&#39;</span> <span class="s">&#39;&#34;</span><span class="nv">$request&#34;</span> <span class="nv">$status</span> <span class="nv">$body_bytes_sent</span> <span class="s">&#39;</span> <span class="s">&#39;&#34;</span><span class="nv">$http_referer&#34;</span> <span class="s">&#34;</span><span class="nv">$http_user_agent&#34;&#39;</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">server</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span> <span class="s">www.127.0.0.1.xip.io</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">access_log</span> <span class="s">/dev/stdout</span> <span class="s">nginx_vcombined</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">access_log</span> <span class="s">/var/log/nginx/nginx-access.log</span> <span class="s">nginx_vcombined</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">error_log</span> <span class="s">/var/log/nginx/nginx-error.log</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">error_log</span> <span class="s">/dev/stderr</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">root</span>   <span class="s">/usr/share/nginx/html</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="p">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>www.127.0.0.1.xip.io.conf</span>
    </div>
</div>
<p>Otra forma de iniciar el contenedor es con un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> que básicamente contiene los mismos parámetros del comando <em>docker run</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.9&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">nginx</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s2">&#34;80:80&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">${PWD}/www.127.0.0.1.xip.io.conf:/etc/nginx/conf.d/www.127.0.0.1.xip.io.conf:ro</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">${PWD}/nginx/log:/var/log/nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>docker-compose up&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<p>Accediendo con el navegador al servidor nginx del contenedor se devuelve la página por defecto.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/images/nginx_hu98cd059ed574f7206fe0ebc08b9a46f4_50303_2560x1440_fit_box_3.png" data-gallery="" title="Nginx"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/images/nginx_hu98cd059ed574f7206fe0ebc08b9a46f4_50303_300x200_fit_box_3.png" width="300" height="176" alt="Nginx" title="Nginx"  class="lozad "></a></p>
</figure>
</div>
<p>Para aprender más sobre Docker es buena idea seguir un manual de referencia como los libros <a href="https://amzn.to/3DgQj7G">Docker: Up &amp; Running</a> y <a href="https://amzn.to/3pH6uEr">Docker in Action</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DockerNginx">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-build.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://www.nkode.io/2014/08/24/valuable-docker-links.html">Lista de enlaces sobre Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/</id>
        <title>Cómo instalar y guía de inicio básica de Docker</title>
        <updated>2015-05-26T20:00:00+01:00</updated>
        <published>2014-11-01T09:47:51+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La tecnología de contenedores nos ofrece múltiples ventajas para nuestras aplicaciones. Docker es una de las más nombradas y que está creciendo muy rápidamente. Es muy sencillo empezarla a usar como mostraré en unos pocos comandos a continuación.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>En el <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">artículo anterior introductorio sobre Docker</a> comentaba cuales son sus principales características, que diferencias tiene con la virtualización y algunos casos y motivos por los que nos puede interesar usarlo. El objetivo de este artículo será a modo de guía rápida como empezar a usar <a href="https://www.docker.com/">Docker</a>. Comentaré cuales son los comandos básicos para manejar Docker, las imágenes y los contenedores.</p>
<p>Antes de empezar con la guía propiamente hay que tener en cuenta que otra de las características de Docker es que únicamente se inicia un solo proceso, cuando este finaliza finaliza la instancia del contenedor. Aunque en principio un contenedor solo tiene un proceso, podemos usar como proceso inicial uno que arranque otros, la <a href="https://registry.hub.docker.com/u/phusion/baseimage/">imagen pushion</a> tiene un sistema de inicio adaptado al funcionamiento de Docker (no siendo así upstart de las imágenes de ubuntu o systemd usado por otras distribuciones) con el que podemos iniciar otros procesos, en cualquier caso es recomendable que un contenedor sino tiene un solo proceso tenga unos pocos procesos relacionados con el servicio que proporciona la imagen, la recomendación es no proporcionar una imagen con un montón de servicios/procesos sino varias pequeñas cuyos servicios colaboren. Una imagen de un contenedor es básicamente el sistema de archivos que usará el proceso que iniciamos en el contenedor, necesitamos obtener o construir una imagen para iniciar los contenedores y trabajar con Docker.</p>
<p>Primeramente deberemos instalar el paquete de Docker, en el caso de <a href="https://www.archlinux.org/">Arch Linux</a> con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S docker&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-1.sh</span>
    </div>
</div>
<p>Para poder usar Docker sin emplear el comando <em>sudo</em> hay que añadir nuestro usuario al grupo <em>docker</em>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo groupadd docker&#10;</span></span><span class="line"><span class="cl">$ sudo usermod -aG docker picodotdev&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-2.sh</span>
    </div>
</div>
<p>Una vez instalado el paquete y añadido nuestro usuario al grupo <em>docker</em> podemos iniciar el servicio de Docker, en Arch Linux con systemd:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl start docker.service&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-3.sh</span>
    </div>
</div>
<p>Con el comando <em>docker images</em>, <em>docker ps</em>, <em>docker ps -a</em> podemos respectivamente ver las imágenes de Docker disponibles en nuestro sistema, las instancias de los contenedores iniciadas y las instancias de los contenedores incluyendo las no iniciadas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker images&#10;</span></span><span class="line"><span class="cl">$ docker ps&#10;</span></span><span class="line"><span class="cl">$ docker ps -a</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-4.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-images_hu4f130814d6c33440bf1026f0b7e1b513_32467_2560x1440_fit_box_3.png" data-gallery="" title="docker-images"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-images_hu4f130814d6c33440bf1026f0b7e1b513_32467_300x200_fit_box_3.png" width="300" height="163" alt="docker-images" title="docker-images"  class="lozad "></a></p>
</figure>
</div>
<p>Con los comandos <em>docker rm [contenedor]</em> y <em>docker rmi [imagen]</em> podemos eliminar las instancias de contenedores y las imágenes que no estén siendo usadas por ningún contenedor, si están siendo usadas deberemos eliminar primero el contenedor.</p>
<p>Una vez conocemos los comandos básicos para gestionar las imágenes y contenedores aún nos quedan conocer los comandos para obtener las imágenes y como iniciarlas. No hace falta que las imágenes las construyamos nosotros desde cero sino que podemos utilizar las que otras personas han construido. Docker dispone de un <a href="https://registry.hub.docker.com/">registro o repositorio de imágenes</a> en el que la comunidad (otras personas) publica las que ellos han construido, en este registro podemos encontrar imágenes para cualquier servicio de los más utilizados ya sea <a href="https://www.mysql.com/">MySQL</a>, <a href="https://nginx.org/">Nginx</a>, <a href="https://redis.io/">Redis</a>, <a href="https://wordpress.org/">WordPress</a>, <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://www.centos.org/">CentOS</a>, &hellip; Este repositorio de imágenes hace que podamos disponer de estos servicios muy fácilmente, sin embargo, hay que tener en cuenta que algunas imágenes no son construidas por alguien &ldquo;oficial&rdquo; de ese servicio, cualquier persona puede <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">construir una imagen de un servicio</a> y hacerlo disponible en el repositorio esto hace que algunas imágenes puedan no ser de la máxima calidad o que estén apropiadamente mantenidas. Por ello, es recomendable utilizar las imágenes más descargadas y usadas, a pesar de todo con Docker si una imagen no nos gusta podemos basarnos en ella para construir una que se adapte totalmente a nuestras necesidades y con la que nos sintamos cómodos.</p>
<p>Para obtener una imagen usamos el comando <em>docker pull [imagen]</em> indicando el usuario que creó la imagen, el nombre de la imagen y el tag. En el siguiente enlace en la pestaña tags podemos ver las <a href="https://registry.hub.docker.com/_/debian/">imágenes para Docker de Debian y sus tag</a>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker pull debian:7.7&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-5.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-pull_hu073f5b22e1c4ee836c55a2e8954480ce_27567_2560x1440_fit_box_3.png" data-gallery="" title="docker-pull"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-pull_hu073f5b22e1c4ee836c55a2e8954480ce_27567_300x200_fit_box_3.png" width="300" height="148" alt="docker-pull" title="docker-pull"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez descargada la imagen podemos iniciar un contenedor de la imagen con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm -i -t --name debian debian:7.7 /bin/bash&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-6.sh</span>
    </div>
</div>
<p>En la terminal que se inicia podemos usar cualquier comando que usaríamos en un sistema <a href="https://www.debian.org/">debian</a> como apt-get.</p>
<p>Este es el momento para explicar otra de las peculiaridades de los contenedores de Docker y es que estos no conservan el estado de una ejecución a otra y cada vez que ejecutemos el comando se creará una nueva instancia del contenedor. Para conseguir la persistencia al crear las imágenes se pueden establecer puntos de montaje, esta persistencia está externalizada en otros contenedores con el solo propósito de servir como volúmenes de datos, también se puede montar un directorio del sistema anfitrión.</p>
<p>Si usamos el comando «uname -a» puede verse que aunque el contenedor usa el sistema de archivos de una distribución debian el kernel empleado es el del sistema anfitrión, esto es así porque los contenedores Docker en esencia no son más que procesos dentro del sistema.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-run_huad4cd875eaead8a61488f479afd6d4bb_19394_2560x1440_fit_box_3.png" data-gallery="" title="docker-run"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-run_huad4cd875eaead8a61488f479afd6d4bb_19394_300x200_fit_box_3.png" width="300" height="163" alt="docker-run" title="docker-run"  class="lozad "></a></p>
</figure>
</div>
<p>Continuando esta serie de artículos sobre Docker explicaré como construir una imagen mediante los Dockerfiles con la que podamos usar una base de datos mysql y explicaré en más detalle como podemos conseguir la persistencia que necesitaremos para almacenar los datos de la base de datos usando otro contenedor con este propósito.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://registry.hub.docker.com/">Docker Hub Registry</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/</id>
        <title>Introducción y características de Docker</title>
        <updated>2017-05-02T23:00:00+02:00</updated>
        <published>2014-10-25T10:52:34+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los contenedores no son una tecnología nueva pero Docker ha reunido las características necesarias para hacerla sencilla y popular en Linux. Suponen un cambio en la infraestructura de las aplicaciones con algunas ventajas sobre la virtualización y la instalación de los servicios directamente en el sistema.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p><a href="https://www.docker.com/">Docker</a> es una de las herramientas de la que se está hablando mucho, esto es así ya que tiene varios aspectos interesantes que <a href="https://www.javaworld.com/article/2685223/java-app-dev/four-ways-docker-fundamentally-changes-application-development.html">cambian la forma de desarrollar aplicaciones</a>. Docker es una forma de ejecutar procesos de forma aislada pero también se compone de herramientas para construir imágenes y un repositorio para compartirlas.</p>
<p>Al contrario de la virtualización Docker no emula o virtualiza una máquina y su sistema operativo con lo que los procesos son mucho más ligeros y hace que el hardware pueda ser aprovechado más al poder aumentar la densidad de los servicios en una misma máquina. Los contenedores y servicios incluidos en ellos inician muy rápidamente, en pocos segundos. Además, no es necesario el sistema de archivos completo del sistema operativo invitado con lo que docker usa una fracción de espacio de almacenamiento necesario en la virtualización.</p>
<p>La tecnología de contenedores no es nueva y también está disponible en otros sistemas operativos como <a href="https://openvz.org/">OpenVZ</a> también en Linux, <a href="http://www.freebsd.org/doc/handbook/jails.html">FreeBSD Jails</a> o los <a href="https://www.oracle.com/technetwork/server-storage/solaris/containers-169727.html">contenedores de Solaris</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/virtual-machines_hu36dbd3e9a6507dbf52b85dcf00883824_27419_2560x1440_fit_box_3.png" data-gallery="" title="Máquinas virtuales"><img src="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/virtual-machines_hu36dbd3e9a6507dbf52b85dcf00883824_27419_300x200_fit_box_3.png" width="300" height="114" alt="Máquinas virtuales" title="Máquinas virtuales"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/docker_hu42f46de04f57b3d5bef570e2161e1676_25641_2560x1440_fit_box_3.png" data-gallery="" title="Docker"><img src="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/docker_hu42f46de04f57b3d5bef570e2161e1676_25641_300x200_fit_box_3.png" width="300" height="110" alt="Docker" title="Docker"  class="lozad "></a></p>
</figure>
</div>
<p>Docker tiene varias características interesantes. Es ligero ya que no hay virtualización aprovechándose mejor el hardware y únicamente necesitando el sistema de archivos mínimo para que funcionen los servicios. Los contenedores son autosuficientes (aunque pueden depender de otros contenedores, por ejemplo, un wordpress que necesita una base de datos mysql) no necesitando nada más que la imagen del contenedor para que funcionen los servicios que ofrece. Las imágenes de docker son portables entre diferentes plataformas el único requisito es que en el sistema huésped esté disponible docker. Es seguro, pudiendo hacer que los contenedores se comuniquen por un túnel solo disponible para ellos, los contenedores están aislados en el sistema mediante namespaces y control groups.</p>
<p>Para los desarrolladores tiene las siguientes ventajas:</p>
<ul>
<li>Podemos disponer de un entorno de desarrollo (devbox) o servicio en varios minutos/horas en vez de algún día. Esto es así porque la configuración y los servicios necesarios están automatizados en la construcción de las imágenes de los contenedores mediante <a href="https://docs.docker.com/reference/builder/">Dockerfiles</a>.</li>
<li>Al estar los servicios en contenedores no hace falta instalarlos en la máquina en la que son alojados, de forma que podemos disponer de los servicios y después eliminarlos de forma sencilla sin &ldquo;ensuciar&rdquo; el sistema huésped.</li>
<li>Nos permite tener versiones más parecidas o iguales a las usadas en producción. Por ejemplo, en Arch Linux nos permite tener un mysql de la distribución <a href="https://www.ubuntu.com/">Ubuntu</a> usando la misma versión.</li>
</ul>
<p>El <a href="https://registry.hub.docker.com/">registro de contenedores de Docker</a> es una forma colaborativa de ofrecer imágenes. Hay disponibles multitud de contenedores con los servicios más populares: <a href="https://www.mysql.com/">MySQL</a>, <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://redis.io/">Redis</a>, <a href="https://nginx.org/">Nginx</a>, <a href="https://wordpress.org/">WordPress</a>, &hellip;</p>
<p>Para los administradores de sistemas tiene las siguientes ventajas:</p>
<ul>
<li>Pueden proporcionar entornos similares o iguales a los entornos de pruebas, QA o producción independientemente de la distribución que se use.</li>
<li>Es posible desplegar un contenedor en cualquier infraestructura Linux.</li>
<li>La creación de los contenedores puede ponerse bajo un sistema de control de versiones.</li>
</ul>
<p>En la siguiente presentación muy completa están ampliados muchas de sus posibilidades y funcionalidades.</p>
<div class="media">
    <script async class="speakerdeck-embed" data-id="c02e6030ee52013165c72a37516b560d" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>
    <noscript>$TODO</noscript>
</div>
<p>Una vez conocidos los aspectos básicos y en que se diferencia docker de la virtualización así como el caso de uso de por ejemplo un <em>devbox</em> o disponer de entornos similares a los de producción de una aplicación, en el siguiente artículo comentaré <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">cómo instalar docker, cómo empezar a usarlo, cómo obtener imágenes de servicios y pararlos y administrarlos</a>. En la siguiente <a href="http://www.nkode.io/2014/08/24/valuable-docker-links.html">lista de enlaces sobre Docker</a> se puede encontrar mucha información reunida dispersa en la red, desde introducciones, opiniones, como usarlo, como empaquetar las aplicaciones, como monitorizar o como usarlo en microservicios.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.docker.com/">Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://docs.docker.com/articles/security/">Seguridad Docker</a></li>
<li><a href="https://www.javaworld.com/article/2685223/java-app-dev/four-ways-docker-fundamentally-changes-application-development.html">Four ways Docker fundamentally changes application development</a></li>
<li><a href="https://openwebinars.net/docker-que-es-sus-principales-caracteristicas/">Docker, qué es y sus principales características</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/</id>
        <title>Experiencia instalando sistema operativo a ordenador viejo</title>
        <updated>2015-04-10T20:00:00+02:00</updated>
        <published>2014-08-15T09:18:07+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<p>Hace unos meses como suele ser habitual en los informáticos me pidieron que formatease e instalase los programas necesarios en un ordenador portátil, más concretamente en un ordenador que a la velocidad que evoluciona la tecnología podría considerarse obsoleto. El modelo exacto era un Acer Aspire 2000 diseñado para Windows XP con las siguientes características:</p>
<ul>
<li>CPU: Intel Pentium M (i686)</li>
<li>Memoria: 1 GiB</li>
<li>Pantalla: 15.4&quot;, 1280 x 800</li>
<li>Tarjeta gráfica: ATI Radeon 9200 (64 MiB)</li>
<li>WiFi: 802.11b</li>
<li><a href="http://www.miniputer.com/Acer/Aspire_2000.html">Características Acer Aspire 2000 completas</a></li>
</ul>
<p>Como puede verse por las características no es un ordenador muy potente para los días de hoy pero que puede ser suficiente para navegar por internet, ver vídeos, escuchar música y realizar tareas ofimáticas.</p>
<p>Teniendo claro las características del ordenador y el uso que se le iba a dar me tocaba decidir que sistema operativo le iba a instalar. La primera opción que consideré por ser la opción que usaba el portátil de fábrica fue instalarle Windows XP (por supuesto usando una copia sin la correspondiente licencia) pero una vez instalado comenzaron los problemas para que todo funcionase correctamente, la gráfica no era detectada y la pantalla se mostraba en una resolución menor que la que ofrecía la pantalla, la conexión WiFi no funcionaba por no tener los controladores necesarios y tampoco el sonido por el mismo motivo. A pesar de haber buscado no conseguí encontrar los controladores adecuados tanto para la tarjeta gráfica como para la WiFi con lo que el sistema resultante iba a quedar menos aprovechado de lo que pudiera.</p>
<p>Viendo que el resultado con Windows no era nada satisfactorio y que estoy convencido del uso del software libre empecé a buscar alguna distribución ligera que pudiese usar. Algunas de las que probé fueron <a href="https://www.gnewsense.org/">gNewSense</a>, luego <a href="https://trisquel.info/es">trisquel</a>, también <a href="https://www.linuxmint.com/">Mint</a> pero gNewSense usaba versiones de software algo antiguas y trisquel y Mint Xfce requería del procesador que tuviese PAE (o no lo detectaba). Al final pensé algo que antes de hacerlo me pareció descabellado, instalar <a href="https://www.archlinux.org/">Arch Linux</a>. Al ser Arch Linux una distribución rolling release y con el software siempre actualizado a las últimas versiones no sabía si iba a funcionar correctamente en un equipo antiguo. Pero sorprendentemente el CD de instalación de Arch no se me quejó por el PAE y aunque la instalación me fue lenta al tener que descargar los paquetes de internet y se descargaban a baja velocidad por algún motivo finalmente completé la instalación sin ningún problema. Después de la instalación base le instalé <a href="https://xfce.org/">Xfce</a> y como gestor de entorno de escritorio e inicio de sesión le puse <a href="https://en.wikipedia.org/wiki/SLiM">SLiM</a>. Una vez con el entorno de escritorio Xfce le instalé los programas: el navegador firefox, geary como gestor de correo, VLC para reproducir vídeos y música. Todo sin ningún problema incluso la WiFi B funcionaba, me bastó seguir lo <a href="https://wiki.archlinux.org/index.php/Wireless_network_configuration#Intel">indicado en la wiki</a> para el caso de una WiFi intel.</p>
<p>El equipo es viejo pero con Arch Linux tiene las versiones de los últimos programas en el momento que se los instalé, al contrario de windows no tuve que buscar los controladores y no malgasté tiempo en ello aparte de no usar un copia de windows sin licencia. El equipo era para un usuario con pocos conocimientos de informática que por supuesto no ha visto ni usado linux en ningún momento, hasta el momento no he recibido ninguna queja en cuanto al uso o que le haya dado problemas. Asi que al contrario de lo que pensé al principio Arch Linux fue una distribución adecuada para lo que quería, era lo que más conocía y más documentación tenía como en el caso de instalar la WiFi. Instalar la WiFI quizá en <a href="https://www.debian.org/">Debian</a> u otra distribución también lo hubiese conseguido pero la información para estas distribuciones probablemente la hubiese obtenido en un foro y no de una forma más oficial como la wiki de Arch Linux. Más que el rolling release lo que más me gusta de Arch es su <a href="https://wiki.archlinux.org/">wiki</a> por estas cosas con las que uno puede obtener información un poco más oficial y con un poco más de seguridad de que va a funcionar que en la respuesta de un foro que además cuesta tiempo encontrarla.</p>
<p>También puedes leer los pasos que he seguido <a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.htmlindex-amp.html">desde Windows a Arch Linux</a> con algunos motivos y características de Arch explicados más detalladamente y <a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/">De Arch Linux a Arch Linux</a> donde comento ya con más conocimiento porque después de 4 años sigo usando Arch Linux y no he cambiado de distribución GNU/Linux. En el siguiente <a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/">anexo a la guía de instalación</a> puedes encontrar los pasos que sigo para instalar Arch Linux.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.htmlindex-amp.html">De Windows a Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/">De Arch Linux a Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/">Anexo a la guía de instalación de Arch Linux</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch.htmlindex-amp.html">Guía instalación Raspberry Pi con Arch Linux ARM (Parte I, instalación base)</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="opinion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/</id>
        <title>De Arch Linux a Arch Linux</title>
        <updated>2015-04-10T20:00:00+02:00</updated>
        <published>2014-08-09T00:07:58+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<p>Ya llevo usando algo más de 4 años <a href="https://www.archlinux.org/">Arch Linux</a> de forma continuada desde que definitivamente hice el paso desde Windows según comentaba en <a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.htmlindex-amp.html">mi camino de Windows a Arch Linux</a> como sistema de mi ordenador personal. Pasé un poco de tiempo usando <a href="https://www.debian.org/">Debian</a> y evaluando <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://fedoraproject.org/">Fedora</a>, y <a href="https://www.opensuse.org/">openSUSE</a> pero al final la distribución que elegí fue Arch Linux.</p>
<p>La razón de elegir Arch Linux fue que me dio muchos menos problemas configurar todos los dispositivos, por ser una <a href="https://en.wikipedia.org/wiki/Rolling_release">distribución rolling release</a> con lo que en todo momento tenía las últimas versiones de cada programa y disponía en poco tiempo las nuevas mejoras que se iban incorporando a ellos evitando a los pocos meses estar con la sensación de tener programas que han quedado superados con nuevas versiones y no tener que esperar al siguiente iteración de una nueva versión para disponer de ellas (o usar para cada programa un PPA), además tenía los programas que yo decidía y no los que los desarrolladores de la distribución preinstalaban por mi. Cualquier otra distribución linux de las que he mencionado son de gran calidad y son usadas por mucha gente, simplemente en mi caso Arch Linux se adaptaba mejor a lo que buscaba y no era yo el que me adaptaba a la distribución. También me gustaba <a href="https://wiki.archlinux.org/index.php/Arch_Linux">su filosofía</a> y su <a href="https://wiki.archlinux.org/index.php/The_Arch_Way">«Arch way»</a> de una configuración simple no oculta, los paquetes lo normal es que no lleven modificaciones sobre lo que proporcionan sus desarrolladores aparte de tenerla actualizada en el momento que decidiese.</p>
<p>Durante este tiempo he estado tan a gusto con esta distribución que ahora incluso la uso como distribución para el ordenador con el que trabajo y nunca me ha entrado el gusanillo del «distro hopping». Alguna vez me ha dado algún problema como cargarme el sistema por actualizar GRUB mal por error mío con desenlace fatal que me obligo a reinstalarla y alguna otra vez algún fallo menor en los iconos de <a href="https://www.gnome.org/">GNOME</a>, pero al contrario de lo que pensaba inicialmente por ser Arch Linux una distribución con los paquetes en constante actualización rara vez da problemas y cuando hay alguno se encuentra en poco tiempo la solución o al menos la pregunta y poco más tarde en los <a href="https://bbs.archlinux.org/">foros de Arch Linux</a>. Si no hubiese sido por este error de GRUB que me obligó a reinstalar ahora tendría un Arch Linux que hubiese instalado hace cuatro años y durante este tiempo ha habido cambios importantes como la migración de SysVinit o las diferentes actualizaciones desde GNOME 3.0 a 3.12, el servidor de las X y otros muchos paquetes vitales del sistema. En el momento que hay que hacer alguna intervención manual al hacer una actualización se publica en la web de Arch Linux con los pasos a realizar, siguiéndolos no suele haber problemas.</p>
<p>También es la distribución que uso para una <a href="https://www.raspberrypi.org/">Raspberry Pi</a> desde que dispongo de ella y suelo utilizar como sistema para descargar mediante torrent o para escuchar música. La Raspberry Pi es un sistema con procesador ARM a pesar de lo cual no hay diferencia alguna en la administración con al <a href="https://archlinuxarm.org/">distribución de Arch Linux para procesadores ARM</a>. Es otro punto interesante ya que Arch Linux en su versión ARM también esta disponible para multitud de otros SoC como la Raspberry Pi, la distribución es la misma y lo mismo que nos sirve para nuestro ordenador personal x86_64 nos sirve para cualquiera de estos sistemas ARM.</p>
<p>Alguna gente se ve intimidada por <a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/">instalar Arch Linux paso a paso y desde la terminal</a>, es un proceso manual pero siguiendo la wiki y alguna guía para cualquier usuario con cierto tiempo usando Linux no debería ser ningún problema. A veces no todas las personas disponen de este poco de tiempo para investigar y hacer la instalación y se opta por otras distribuciones que tienen asistentes y guías en el proceso pero una vez hecho el pequeño esfuerzo se ve compensado por en teoría no tener que volverla a reinstalar nunca más.</p>
<p>Después de todo este tiempo creo que lo mejor de Arch Linux no es que sea una distribución «rolling release» con siempre las últimas versiones de cada programa, que sea un sistema cuya configuración es simple que no se oculta al usuario, que tenga los programas que yo elija, su comunidad y foros, que también son muy buenos, sino lo mejor me parece que es la wiki. La <a href="https://wiki.archlinux.org/">wiki de Arch Linux</a> tiene cantidad de información oficial actualizada sobre cantidad de temas, fáciles de encontrar y rápidamente, sin ser necesario buscar esta información en foros con google que no siempre tienen la solución, no son exactamente lo que buscamos o no tienen la respuesta correcta además de consumir mucho tiempo hasta encontrar la respuesta y si la encontramos. La wiki de Arch Linux es algo que no he encontrado en otras distribuciones y me parece de lo mejor que tiene incluso puede ser útil para quien no use Arch Linux. Finalmente, comentaré también que a pesar de ser una distribución que está a la última puede ser una muy buena opción para instalar en un sistema antiguo, en otro artículo comentaré la experiencia que tuve al <a href="https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/">instalar un sistema operativo en un Acer Aspire 2000</a> (i686 con 1 GiB de RAM) viejuno, probé muchas opciones Windows XP, <a href="https://www.linuxmint.com/">Linux Mint</a>, <a href="https://www.gnewsense.org/">gNewSense</a>, <a href="https://trisquel.info/es">trisquel</a> y al final Arch Linux fué la que mejor resultado me ofreció con un portátil antiguo pero con software completamente actualizado.</p>
<p>Aún así Arch Linux puede que no sea lo más adecuado para todo o todas las personas según sus preferencias o requerimientos. Una de las cosas a las que me refiero es a un entorno de servidor donde lo más importante es la seguridad, la estabilidad y el soporte. Con estas necesidades probablemente sea mejor <a href="https://www.debian.org/">Debian</a>, <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux">RHEL</a> o <a href="https://www.centos.org/">CentOS</a>. Sin embargo para uso personal, Arch Linux mientras mantenga la misma calidad como hasta ahora seguirá siendo la distribución que use.</p>
<p>¡Larga vida a Linux y a Arch Linux!</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.htmlindex-amp.html">De Windows a Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/">Experiencia instalando sistema operativo a ordenador viejo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/">Anexo a la guía de instalación de Arch Linux</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch.htmlindex-amp.html">Guía instalación Raspberry Pi con Arch Linux ARM (Parte I, instalación base)</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="opinion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/06/hemeroteca-5/</id>
        <title>Hemeroteca #5</title>
        <updated>2014-12-24T17:00:00+02:00</updated>
        <published>2014-06-27T21:10:29+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/06/hemeroteca-5/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/octopress.png" width="300" height="300" alt="Octopress" title="Octopress"  class=""></p>
</div>
<p>Cada seis meses hago un recopilatorio de los artículos que he publicado durante este periodo de tiempo. En estos seis meses he mantenido mi ritmo de publicación de una entrada a la semana que publico casi siempre los viernes a la tarde, en total han sido 26 nuevos artículos con este. Los temas tratados durante este tiempo han sido en gran medida la programación, un poco de linux y la Raspberry Pi y el análisis de un SSD.</p>
<p>A destacar durante este semestre ha sido que he publicado un proyecto personal, Blog Stack. <a href="http://www.blogstack.info/">Blog Stack</a> es una agregador o planeta de bitácoras sobre desarrollo, programación, gnu/linux y tecnología. A casi todos los bloggeros que le he propuesto agregarle a Blog Stack me han contestado positivamente. 17 son las bitácoras agregadas actualmente y aunque no son muchas hacen que prácticamente todos los días haya algo nuevo que leer. En un artículo hacía la presentación del proyecto y en otro explicaba cual es el funcionamiento en cuanto a hospedaje y arquitectura (interesante para aquellos que quieran realizar un proyecto en internet con un coste mínimo). Son los siguientes artículos:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/">Presentación de Blog Stack</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/">Arquitectura y hospedaje de Blog Stack</a></li>
</ul>
<p>En las últimas semanas del semestre he publicado unos cuantos artículos obre el <em>framework</em> de desarrollo de aplicaciones web <a href="http://tapestry.apache.org/">Apache Tapestry</a>. Con estas entradas y otras cuantas que tengo preparadas actualizaré y revisaré el libro <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry</a> y seguirá siendo totalmente gratuito.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/06/iniciar-rapidamente-aplicacion-con-apache-tapestry/">Iniciar rápidamente aplicación con Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/06/pagina-dashboard-de-apache-tapestry/">Página Dashboard de Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/06/ejecutar-apache-tapestry-en-el-servidor-de-aplicaciones-wildfly/">Ejecutar Apache Tapestry en el servidor de aplicaciones WildFly</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">Libro sobre desarrollo de aplicaciones con Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/presentacion-sobre-apache-tapestry/">Presentación sobre Apache Tapestry</a></li>
</ul>
<p>En otro par de artículos he comentado sobre <a href="https://grails.org/">Grails</a>. Ambas cosas que ofrece ya Tapestry de por si y que son muy útiles en una aplicación disponer de ellas por eso aporté estas dos soluciones a Grails.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/">Detectar problema N+1 y obtener estadísticas de Hibernate con Grails</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/pagina-de-excepcion-de-grails/">Página de excepción de Grails</a></li>
</ul>
<p>En la sección de programación están las novedades de Java 8 que recoge las interesantes novedades de esta nueva versión, también un nuevo artículo en la serie sobre JavaScript con la lista de tareas empleando <a href="http://backbonejs.org/">Backbone</a> y <a href="https://reactjs.org/">React</a> que empecé algo más de tiempo, una pequeña introducción a <a href="https://www.elastic.co/es/elasticsearch/">Elasticsearch</a>, otro ejemplo práctico de un patrón de diseño en programación en este caso del No Operation y algunos otros temas sobre Java.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/">Introducción a Elasticsearch</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/04/ejemplo-lista-de-tareas-con-backbone-y-react/">Ejemplo lista de tareas con Backbone y React</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/04/usar-grunt-para-ejecutar-teses-unitarios-de-codigo-javascript/">Usar Grunt para ejecutar teses unitarios de código JavaScript</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">Novedades y nuevas características de Java 8</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/">Introducción y ejemplo sencillo de Java Message Service (JMS)</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/el-servidor-de-aplicaciones-jboss-slash-wildfly/">Servidor de aplicaciones JBoss/WildFly</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/logging-usando-marcadores-con-slf4j-y-logback/">Logging usando marcadores con slf4j y logback</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/ejemplo-del-patron-de-diseno-no-operation/">Ejemplo del patrón de diseño No Operation</a></li>
</ul>
<p>Respecto a gnu/linux he actualizado la guía de instalación de <a href="https://www.archlinux.org/">Arch Linux</a>, he analizado un disco de estado sólido (SSD) que aumentan notablemente el rendimiento de un equipo, algún artículo sobre la <a href="https://www.raspberrypi.org/">Raspberry Pi</a>, otras sobre como configurar SSL en los servidores web y de aplicaciones más populares, los últimos artículos de esta lista son comentado mi experiencia con <a href="http://octopress.org/">Octopress</a> como sistema de <em>blogging</em> y que empecé a usar a principios de diciembre.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/">Anexo a la guía de instalación y del principiante de Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/desempaquetado-y-analisis-samsung-840-evo-ssd-250-gb/">Desempaquetado y análisis Samsung SSD 840 EVO 250 GB</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">Configurar SSL en un servidor Tomcat, JBoss, WildFly, Lighttpd, Nginx o Apache</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">Generar y convertir claves y certificados con OpenSSL</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/">Iniciar la Raspberry Pi desde un disco o memoria USB</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/">Raspberry Pi como Media Center con GeeXboX</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/guia-para-la-creacion-de-un-blog-con-octopress/">Guía para la creación de un blog con Octopress</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/mi-experiencia-y-consejos-para-un-blog/">Mi experiencia y consejos para un blog</a></li>
</ul>
<p>En el siguiente semestre seguiré escribiendo nuevos artículos sobre estos mismos temas y publicando uno nuevo cada semana de los que ya tengo preparados. Feliz lectura (o relectura)!</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/06/hemeroteca-3.html">Hemeroteca #3</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/12/el-blog-de-picodev-te-desea-un-2013.html">Hemeroteca #2</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/06/hemeroteca-1.html">Hemeroteca #1</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2011/12/feliz-navidad-y-prospero-2012.html">Hemeroteca #0</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/</id>
        <title>Presentación de Blog Stack</title>
        <updated>2014-05-06T21:00:00+02:00</updated>
        <published>2014-05-04T11:51:38+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogstack.png" width="300" height="65" alt="Blog Stack" title="Blog Stack"  class=""></p>
</div>
<p>Con este artículo quiero presentar un nuevo proyecto, Blog Stack. <a href="http://www.blogstack.info/">Blog Stack</a> (BS) es una agregador, planeta, o fuente de información de bitácoras sobre programación, desarrollo, desarrollo ágil, software, software libre, hardware, gnu/linux o en general temas relacionados con la tecnología.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/images/blogstack-portada_hu340b56fc393dee703dec6a4fb7fc71ae_275117_2560x1440_fit_box_3.png" data-gallery="" title="Portada de Blog Stack"><img src="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/images/blogstack-portada_hu340b56fc393dee703dec6a4fb7fc71ae_275117_300x200_fit_box_3.png" width="216" height="200" alt="Portada de Blog Stack" title="Portada de Blog Stack"  class="lozad "></a></p>
</figure>
</div>
<p>Otro agregador o planeta no es ninguna idea nueva pero BS incorpora alguna cosa adicional como poder suscribirse a únicamente el contenido etiquetado en que cada uno esté interesando (programación, desarrollo-ágil, java, python, linux, ubuntu, &hellip;) o recibir el contenido publicado en todas las bitácoras agregadas sin tener que suscribirse individualmente a cada una de ellas. BS aún está en desarrollo y posiblemente vaya incorporando nuevas ideas que me surjan o se me propongan pero en el estado actual ya cumple con la función básica de agregador.</p>
<p>Como comento en la <a href="http://www.blogstack.info/faq">página de pregutnas frecuentes</a> hay varios motivos por los que he iniciado el proyecto, la semilla es que quería hacer un proyecto personal con cierta utilidad para otras personas empleando de alguna forma el <em>framework</em> para el desarrollo de aplicaciones web <a href="http://tapestry.apache.org/">Apache Tapestry</a>. Como catalizador de la semilla ha sido que recientemente, abril de 2014, <a href="http://planetalinux.org/">Planeta Linux</a> ha dejado de estar accesible dejando un gran vacío entre las bitácoras sobre gnu/linux y el software libre y por tanto al igual que en el caso de muchos otros blogeros los artículos que publicaba en mi bitácora sobre estos temas ya no son agregados en este planeta y van a dejar de llegar a muchos potenciales lectores. Al menos, solo ha sido durante unas semanas, después de escribir un correo electrónico a la persona que se encarga de su mantenimiento preguntándole por la situación finalmente Planeta Linux está disponible. Por otro lado también tengo mi bitácora agregada a <a href="http://planetacodigo.com/">Planeta Código</a> y <a href="http://bitacoras.com/">Bitacoras.com</a> pero creo que se les podría hacer algunos añadidos para tener un mejor agregador, planeta, o fuente de información o al menos con alguna idea diferente. Desde darle un mejor aspecto hasta el permitir incluir el contenido que en la mayoría de agregadores es filtrado por seguridad como <a href="https://www.youtube.com/">vídeos de Youtube</a> o <a href="http://vimeo.com/">Vimeo</a>, <a href="http://speakerdeck.com/">presentaciones de Speaker Deck</a>, <a href="http://gist.github.com/">Gist de GitHub</a>, <a href="http://disqus.com/">comentarios de Disqus</a> y permitir monetizar el contenido con <a href="https://www.google.com/adsense/">publicidad de AdSense</a> o el programa de <a href="https://afiliados.amazon.es/">afiliados de Amazon</a> directamente desde Blog Stack. Como decía a través de las etiquetas los lectores pueden suscribirse únicamente a los temas que les interesen sin tener que suscribirse a cada bitácora de forma individual o descubrir nuevas bitácoras que se agreguen y su contenido sin tener que buscarlas. Otro planeta en el que tengo mi <a href="https://elblogdepicodev.blogspot.com.es/">antigua bitácora</a> agregada es <a href="http://planeta.archlinux-es.org/">Planeta Arch Linux</a> pero aún estoy esperando a que me agreguen <a href="https://picodotdev.github.io/blog-bitix/">el nuevo</a> supongo que por falta de tiempo por parte de las personas encargadas de su mantenimiento, en cualquier caso tampoco he recibido al menos una respuesta.</p>
<p>También quería poner a las bitácoras personales y al contenido, en los que algunos se escriben valiosas píldoras de conocimiento concentrado, en el lugar que se merecen en esta época de redes sociales en las que lo relevante es compartirlo o comentarlo, esto también es importante y valioso pero no siempre más que el propio contenido que parece que queda relegado en un segundo plano más allá de los titulares o entradillas. Por último, a veces encontrar las bitácoras de esas personas que publican contenido interesante no siempre es sencillo y a las nuevas bitácoras en los inicios les cuesta llegar a un número amplio de lectores hasta que es conocido o indexado en las páginas de resultados de los buscadores en las primeras posiciones. Blog Stack permitirá descubrir nuevo contenido a través de las etiquetas en las que se publican los artículos, también permitirá descubrir nuevas bitácoras que se agreguen y quizá en un futuro a medida que se vaya conociendo y en el que se vayan agregando bitácoras y atrayendo lectores hacer que el inicio de una bitácora no sea escribir para uno mismo.</p>
<p>Blog Stack es algo más que el agregador, es software libre con <a href="http://www.gnu.org/licenses/agpl-3.0.html">licencia AGPL</a> y el <a href="https://github.com/picodotdev/blog-stack">código fuente</a> usado para generarlo está disponible en un repositorio de GitHub. Cualquiera podría usarlo para crear un agregador de temática similar o de otra (deportes, música, conciertos, cocina, arte, ciencia, educación, ocio, juegos, moda, noticias, literatura, cine, sociedad, economía, política, &hellip;) y con las herramientas que ofrece GitHub cualquiera podría colaborar con su desarrollo, es más, sería bien recibido, a través de código con «pull request» o creando «issues» con cualquier sugerencia o problema que se detecte. Blog Stack está desarrollado usando <a href="https://www.oracle.com/es/technologies/java/overview/index.html">Java</a> y el <em>framework</em> <a href="http://tapestry.apache.org/">Apache Tapestry</a> no como aplicación web sino como motor de plantillas para generar el contenido. Usar Tapestry de esta forma no es lo habitual pero el modelo «pull» seguido por Tapestry en las plantillas que generan el html y el conjunto controlador + plantilla que siguen los componentes me resulta mejor que la separación entre controlador y vista que es lo habitual en encontrar en la mayoría de motores de plantillas o <em>frameworks</em> web. Además, si en un futuro BS se generase en vez como contenido estático mediante una aplicación web prácticamente podría reutilizar todo el código de la aplicación. El funcionamiento de BS es similar a <a href="http://octopress.org/">Octopress</a> (con el que estoy bastante contento al usarlo en mi bitácora) generando el sitio de forma estática en <a href="https://www.openshift.com/">OpenShift</a> y posteriormente hospedado en <a href="https://pages.github.com/">GitHub Pages</a>, generar el contenido de forma estática tiene algunas limitaciones pero por el momento es suficiente y para el proyecto es importante que sea una solución cuyo coste sea bajo. En el inicio está solo en la compra del dominio, con <a href="http://dondominio.com/">DonDominio</a> 10 € anuales. Con un poco de suerte la publicidad permitirá que BS genere en ingresos sus propios gastos lo que garantiza que el coste no lo asuma yo, si fuera así posiblemente pasado un tiempo provocaría que acabase cerrando el servicio.</p>
<p>Si tienes una bitácora sobre programación, desarrollo ágil, software, software libre, gnu/linux, hardware, tecnología o demás temas relacionados solo tienes que indicármelo como explico en la <a href="http://www.blogstack.info/faq">página de preguntas frecuentes</a> y en un poco de tiempo haré que BS agregue el contenido de tu bitácora. Y si estás interesado en información sobre estos temas y quieres descubrir nuevo contenido solo debes suscribirte a alguna de las etiquetas o a la <a href="http://www.blogstack.info/feed.atom.xml">fuente atom de la portada</a>. Por el momento, solo esta agregado el contenido de mis bitácoras pero espero que después de leer esta presentación algunos blogeros se animen a que agregue su contenido.</p>
<p>En las próximas semanas publicaré en mi blog de forma más detallada <a href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/">como está montado tecnológicamente Blog Stack por 10 € al año</a> y como he resuelto algunos asuntos comunes en las páginas o aplicaciones web.</p>
<p>¡Hola planeta!</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/">Arquitectura y hospedaje de Blog Stack</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="gnu-linux"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/</id>
        <title>Anexo a la guía de instalación y del principiante de Arch Linux</title>
        <updated>2015-05-25T23:00:00+02:00</updated>
        <published>2014-05-02T19:09:56+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Arch Linux es una distribución que deja al usuario decidir en gran medida los componentes que quiere usar. Desde el sistema de arranque, el entorno de escritorio hasta los programas. Para ello no proporciona un instalador ni en modo texto ni con interfaz gráfica que guíe al usuario en diferentes pasos en la instalación de la distribución, en vez de eso proporciona una guía con la información relevante que el usuario necesita conocer para el mismo mediante comandos instale y configure el sistema con los componentes que desee. Este anexo complementa y reúne los comandos que sigo para instalar Arch Linux desde la imagen de instalación hasta el entorno de escritorio GNOME.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<p>Antes de migrar a una distribución como <a href="https://www.archlinux.org/">Arch Linux</a> es recomendable ver si esta distribución GNU/Linux es la adecuada para nosotros en función de su <a href="https://wiki.archlinux.org/index.php/The_Arch_Way">filosofía (The Arch Way)</a>, sus <a href="https://wiki.archlinux.org/index.php/Arch_Linux">principales características</a> y las <a href="https://wiki.archlinux.org/index.php/FAQ">preguntas frecuentes</a>. Arch Linux es una distribución orientada a personas que no les importa dedicar un tiempo a aprender como instalarla y posteriormente mantenerla actualizada, esto tampoco debe asustarnos, la <a href="https://wiki.archlinux.org/">wiki de arch</a> es de las mejores fuentes de información que hay para cualquier cosa que necesitemos. Si la wiki no es suficiente ayuda en los <a href="https://bbs.archlinux.org/">foros</a> muy posiblemente encontraremos la solución. Pero para alguien que vaya a <a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html">migrar de Windows o Mac a Linux</a> creo que es más recomendable empezar con alguna distribución que lo pone más fácil para empezar con unos pocos clics, las más conocidas son <a href="http://www.ubuntu.com/">Ubuntu</a>, <a href="https://fedoraproject.org/">Fedora</a>, <a href="http://www.debian.org/">Debian</a>, <a href="https://www.opensuse.org/">openSUSE</a>, o al menos primeramente probarla en un máquina virtual como <a href="https://www.virtualbox.org/">VirtualBox</a>.</p>
<p>Dado que Arch Linux es una distribución <a href="https://en.wikipedia.org/wiki/Rolling_release">«rolling release»</a> hacer una guía de instalación detallada para ella haría que se quedase obsoleta en ciertos aparatados al cabo de un tiempo. Por ello y aunque a continuación escribiré una guía de instalación es muy recomendable leer la <a href="https://wiki.archlinux.org/index.php/Beginners%27_Guide">guía oficial de Arch Linux</a> y la <a href="https://wiki.archlinux.org/index.php/Beginners%27_Guide">guía de principiante</a> más detallada y en cualquier caso entendamos las acciones que estamos haciendo con cada comando.</p>
<p>Arch Linux no tiene un asistente de instalación y la misma se hace desde la terminal introduciendo comandos, además no hay una guía oficial única que sirva para todos los sistemas ya que algunas cosas cambian dependiendo de las características de nuestro sistema o preferencias, deberemos dedicar algo de tiempo a leer las guías oficiales y alguna otra guía en alguna bitácora como esta, quizá también alguna sección de la wiki. A cambio de este tiempo tendremos un sistema tal y como nosotros queremos y no como los desarrolladores del instalador quisieron. Una vez sabemos que pasos hay que realizar y que comandos hay que introducir y en que orden la instalación no es complicada, lo difícil está en que comandos son dependiendo de nuestro sistema, si tiene BIOS o EFI, si tiene una gráfica AMD, Intel o NVIDIA, si tiene un disco mecánico o SSD, y de nuestras preferencias si queremos una partición swap, el formato de las particiones (ext4, btrfs, &hellip;) y tamaño para cada una.</p>
<p>A pesar de que la guía oficial de Arch Linux está muy bien hay que leer varias páginas de la wiki y hay algunas cosas importantes que hay que tener en cuenta. Lo que aportará esta guía sobre la oficial son esos pequeños detalles a tener en cuenta y mi experiencia con la instalación en mi ordenador.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="1-instalación-base">1. Instalación base</h3>
<p>Sin más, comencemos con la guía. Lo primero que deberemos hacer es <a href="https://www.archlinux.org/download/">descargar el medio de instalación</a> de algún espejo de la red. Los medios con la coletilla -dual nos servirán tanto para sistemas de x86 (32 bits) como para sistemas x86_64 (64 bits). Una vez descargado deberemos grabarlo en un CD o más recomendable en una memoria USB.</p>
<p>Para grabarlo en una memoria USB deberemos usar el comando dd reemplazando /dev/sdx por el dispositivo de la memoria USB en la que queramos grabar el medio cosa que en linux podemos conocer usando el comando lsblk:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ lsblk&#10;</span></span><span class="line"><span class="cl"><span class="c1"># dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx &amp;&amp; sync</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-0.sh</span>
    </div>
</div>
<p>Una vez disponemos del CD o memoria USB deberemos iniciar el sistema con él. La forma de hacerlo cambiará según la marca de nuestro ordenador pero normalmente es usando alguna tecla de entre ESC, F2, F8, F10, F10, en el caso de mi Sony Vaio es usando la tecla ASSIST y con el sistema apagado.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/instalacion-arch-linux_hubb820d9a5eaf0d8ae98c7f69b9bf8a1b_54396_2560x1440_fit_box_3.png" data-gallery="" title="Menú instalación Arch Linux"><img src="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/instalacion-arch-linux_hubb820d9a5eaf0d8ae98c7f69b9bf8a1b_54396_300x200_fit_box_3.png" width="267" height="200" alt="Menú instalación Arch Linux" title="Menú instalación Arch Linux"  class="lozad "></a>
<a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/instalacion-arch-linux-prompt_hu99ffacce89647591c52857ba2efec9e0_2199_2560x1440_fit_box_3.png" data-gallery="" title="Inicio instalación Arch Linux"><img src="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/instalacion-arch-linux-prompt_hu99ffacce89647591c52857ba2efec9e0_2199_300x200_fit_box_3.png" width="300" height="167" alt="Inicio instalación Arch Linux" title="Inicio instalación Arch Linux"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez estemos en el prompt inicial de la instalación deberemos cargar el mapa según nuestro teclado, para un teclado español usaremos normalmente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># loadkeys es</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-1.sh</span>
    </div>
</div>
<p>Modificamos también el archivo locale.gen y descomentamos el dato es_ES.UTF-8 UTF-8, finalmente lo exportamos para el shell:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/locale.gen</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># export LANG=es_ES.UTF-8</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-2.sh</span>
    </div>
</div>
<h4 id="11-particionar-el-disco">1.1 Particionar el disco</h4>
<p>El siguiente paso es particionar el disco duro y antes de hacerlo deberemos asegurarnos de que hemos hecho una copia de seguridad de los datos ya que en el siguiente paso se perderá el contenido del disco duro o SSD. Usaremos el siguiente comando para hacer el <a href="https://wiki.archlinux.org/index.php/GUID_Partition_Table">particionado usando GPT</a>. En función de si nuestro sistema tiene BIOS o EFI las particiones son distintas, si es un ordenador de unos dos años o menos o venía con Windows 8 preinstalador probablemente tenga EFI.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># cgdisk /dev/sda</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-3.sh</span>
    </div>
</div>
<h5 id="111-para-un-sistema-con-bios">1.1.1 Para un sistema con BIOS</h5>
<p>En un sistema BIOS usando GPT el esquema de particiones será el siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Tamaño&nbsp;&nbsp;&nbsp;&nbsp; Tipo&#10;</span></span><span class="line"><span class="cl">10 MiB&nbsp;&nbsp;&nbsp;&nbsp; BIOS Boot Partition (ef02)&#10;</span></span><span class="line"><span class="cl">resto&nbsp;&nbsp;&nbsp;&nbsp;  Linux filesystem (8300)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-42.txt</span>
    </div>
</div>
<h5 id="112-para-un-sistema-con-efi">1.1.2 Para un sistema con EFI</h5>
<p>En un sistema EFI las particiones deberán ser las siguientes:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Tamaño&nbsp;&nbsp;&nbsp;&nbsp; Tipo&#10;</span></span><span class="line"><span class="cl">512 MiB&nbsp;&nbsp;&nbsp;&nbsp;EFI System Partition (ef00)&#10;</span></span><span class="line"><span class="cl">resto&nbsp;&nbsp;&nbsp;&nbsp;  Linux filesystem (8300)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-43.txt</span>
    </div>
</div>
<p>Si tenemos un sistema con 8 GiB o más de memoria probablemente podamos prescindir de la partición de swap. Sino podemos crear una tal que:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Tamaño&nbsp;&nbsp;&nbsp;&nbsp; Tipo&#10;</span></span><span class="line"><span class="cl">4 GiB&nbsp;&nbsp;&nbsp;&nbsp;  swap (8200)&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-44.txt</span>
    </div>
</div>
<h4 id="12-formatear-las-particiones">1.2 Formatear las particiones</h4>
<p>Una vez tenemos las particiones creados deberemos formatearlas, sustituimos sdaX por lo que corresponda según el orden en que hemos creado las particiones:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mkfs.fat -F32 /dev/sda1</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mkfs.ext4 /dev/sda2</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-4.sh</span>
    </div>
</div>
<p>Y si tenemos partición de swap:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mkswap /dev/sdaX</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># swapon /dev/sdaX</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-5.sh</span>
    </div>
</div>
<h4 id="13-montar-las-particiones">1.3 Montar las particiones</h4>
<p>Lo siguiente que haremos es montar las particiones para empezar a usarlas, primero la partición root (/), que en esta guía es sda2 y luego la partición boot (/boot):</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mount /dev/sda2 /mnt</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mkdir -p /mnt/boot</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mount /dev/sda1 /mnt/boot</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-6.sh</span>
    </div>
</div>
<p>Si nuestro sistema tiene EFI hacemos:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mount /dev/sda2 /mnt</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mkdir -p /mnt/boot</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mount /dev/sda1 /mnt/boot</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-7.sh</span>
    </div>
</div>
<p>Si tenemos un disco SSD montamos las particiones usando las opciones de montaje adecuados para que se use TRIM:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># mount -o noatime,discard /dev/sda2 /mnt</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mkdir -p /mnt/boot</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># mount -o noatime,discard /dev/sda1 /mnt/boot</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-8.sh</span>
    </div>
</div>
<h4 id="14-establecer-el-mirror">1.4 Establecer el mirror</h4>
<p>Debemos seleccionar un espejo del que se descargarán los paquetes del sistema base, modificamos el archivo /etc/pacman.d/mirrrorlist y ponemos el primero el que deseemos, yo suelo usar:</p>
<p>Server = http://mirrors.kernel.org/archlinux/$repo/os/$arch</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/pacman.d/mirrrorlist</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-9.sh</span>
    </div>
</div>
<h4 id="15-instalar-paquetes-del-sistema-base">1.5 Instalar paquetes del sistema base</h4>
<p>Lo siguiente será instalar los archivos del sistema base el siguiente comando que descargará del espejo de paquetes que hayamos elegido los paquetes del sistema base:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacstrap /mnt base base-devel</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-10.sh</span>
    </div>
</div>
<h4 id="16-generar-de-fstab">1.6 Generar de fstab</h4>
<p>Generamos el archivo fstab que contendrá las características de nuestras particiones y opciones de montaje:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstab</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-11.sh</span>
    </div>
</div>
<p>Si usamos un disco SSD revisaremos el archivo asegurándonos que contiene las opciones noatime y discard.</p>
<h4 id="17-chroot-y-configuración-de-sistema-base">1.7 Chroot y configuración de sistema base</h4>
<p>Hacemos un chroot para cambiar el directorio root que estamos usando para configurar nuestro sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># arch-chroot /mnt /bin/bash</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-12.sh</span>
    </div>
</div>
<p>Editamos /etc/locale.gen, lo generamos y exportamos las variables:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/locale.gen</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># locale-gen</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># echo LANG=es_ES.UTF-8 &gt; /etc/locale.conf</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-13.sh</span>
    </div>
</div>
<p>Editamos el archivo /etc/vconsole.conf para cambiar el mapa de teclas de las terminales TTY:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/vconsole.conf</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-14.sh</span>
    </div>
</div>
<p>Introducimos el siguiente contenido:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">KEYMAP=es&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-15.txt</span>
    </div>
</div>
<h4 id="18-establecer-la-zona-horaria">1.8 Establecer la zona horaria</h4>
<p>Establecemos la zona horaria de nuestro sistema:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ln -s /usr/share/zoneinfo/Europe/Madrid /etc/localtime</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-16.sh</span>
    </div>
</div>
<h4 id="19-modificar-el-nombre-de-nuesta-máquina">1.9 Modificar el nombre de nuesta máquina</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># echo archlinux &gt; /etc/hostname</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-17.sh</span>
    </div>
</div>
<h4 id="110-instalar-el-gestor-de-redes">1.10 Instalar el gestor de redes</h4>
<p>NetworkManager puede servirnos, lo instalamos con el gestor de paquetes de arch pacman y activamos el servicio:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S networkmanager</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># systemctl enable NetworkManager.service</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-18.sh</span>
    </div>
</div>
<h4 id="111-cambiar-la-contraseña-de-root">1.11 Cambiar la contraseña de root</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># passwd</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-19.sh</span>
    </div>
</div>
<h4 id="112-instalar-el-gestor-de-arranque">1.12 Instalar el gestor de arranque</h4>
<p>Este es el punto más delicado y que más problemas puede dar, ya que si no lo hacemos bien probablemente nuestro sistema no arrancará y por desgracia está al final de todo el proceso.</p>
<p>Para un sistema con BIOS:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S grub</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># grub-install --target=i386-pc --recheck /dev/sda</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># grub-mkconfig -o /boot/grub/grub.cfg</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-20.sh</span>
    </div>
</div>
<p>Para un sistema con EFI:</p>
<p>En mi equipo que es un Sony Vaio SVE con EFI aún no he conseguido que GRUB me arranque correctamente (al inicial parece que se queda con la pantalla en negro y aparentemente bloqueado aunque puedo reiniciarlo con ctrl-alt-supr) y he tenido que usar <a href="https://wiki.archlinux.org/index.php/REFInd">rEFInd</a>. Aún así también tengo instalado Grub que iniciándolo a través de rEFInd si funciona bien.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S grub efibootmgr dosfstools</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub --recheck</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># grub-mkconfig -o /boot/grub/grub.cfg</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-21.sh</span>
    </div>
</div>
<p>Posteriormente instalo rEFInd:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S rEFInd</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp /usr/share/refind/refind_x64.efi /boot/EFI/refind/refind_x64.efi</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp /usr/share/refind/refind.conf-sample  /boot/EFI/refind/refind.conf</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp -r /usr/share/refind/icons /boot/EFI/refind/</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp -r /usr/share/refind/fonts /boot/EFI/refind/</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># cp -r /usr/share/refind/drivers_x64 /boot/EFI/refind</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-22.sh</span>
    </div>
</div>
<p>Edito el archivo /boot/FI/refind/refind.conf modificando el timeout y la opción seleccionada por defecto:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">timeout 5&#10;</span></span><span class="line"><span class="cl">default_selection &#34;bzImage,vmlinuz&#34;&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-23.txt</span>
    </div>
</div>
<p>También debemos modificar el archivo /boot/refind_linux.conf</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># cp /usr/share/refind/refind_linux.conf-sample /boot/refind_linux.conf</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># blkid &gt;&gt; /boot/refind_linux.conf</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-24.sh</span>
    </div>
</div>
<p>En el archivo sustituiremos los PARTUUID por los que correspondan en nuestro sistema, con el comando blkid los habremos añadido al final del archivo, el contenido debe quedarnos algo como:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">## This file should be present in the same directory as the EFISTUB kernel and initramfs files&#10;</span></span><span class="line"><span class="cl">## More info at http://www.rodsbooks.com/refind/linux.html , http://www.rodsbooks.com/efi-bootloaders/efistub.html&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&#34;Boot with defaults&#34;&nbsp;&nbsp;&nbsp;&nbsp;&#34;root=PARTUUID=4e1f91cf-0e6c-41df-82f0-a16134c5973a rootfstype=ext4 rw initrd=/boot/initramfs-linux.img&#34;&#10;</span></span><span class="line"><span class="cl">&#34;Boot to terminal&#34;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;root=PARTUUID=4e1f91cf-0e6c-41df-82f0-a16134c5973a rootfstype=ext4 rw systemd.unit=multi-user.target initrd=/boot/initramfs-linux.img&#34;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-25.txt</span>
    </div>
</div>
<p>Además, con rEFInd hemos de crear el gestor de arranque con el comando efobootmgr. Pero en mi caso para que funcione primero he de borrar todos los que ya existen sino parece que en mi caso se recrea y usa el gestor de arranque EFI de Windows y al inicial el sistema me sale el mensaje «Operating System Not Found», podemos ver los gestores de arranque con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># efibootmgr</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-26.sh</span>
    </div>
</div>
<p>Los borramos con el siguiente comando, donde xxxx se corresponde con el número de gestor de arranque:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># efibootmgr -b xxxx -B</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-27.sh</span>
    </div>
</div>
<p>Finalmente, creamos el gestor de arranque para rEFInd:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># efibootmgr -c -d /dev/sda -p 1 -l /EFI/refind/refind_x64.efi -L &#34;rEFInd&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-28.sh</span>
    </div>
</div>
<h4 id="113-finalizar-la-instalación">1.13 Finalizar la instalación</h4>
<p>Finalmente, salimos del entorno enjaulado, desmontamos las particiones y reiniciamos el sistema:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># exit</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># umount -R /mnt</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># reboot</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-29.sh</span>
    </div>
</div>
<h3 id="2-post-instalación-base">2. Post instalación base</h3>
<p>Ya tenemos el sistema base pero para usarlo seguramente queramos un entorno gráfico, un usuario propio para no usar el usuario root y los programas que solemos usar habitualmente. Para ellos continuaremos en la postinstalación.</p>
<h4 id="21-creación-de-usuario">2.1 Creación de usuario</h4>
<p>Creamos un usuario para no usar el usuario root, sustituimos picodotdev por el nuestro:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># useradd -m -G wheel -s /bin/bash picodotdev</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># passwd picodotdev</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-30.sh</span>
    </div>
</div>
<p>Permitirmos a los usuarios del grupo wheel usar el comando sudo:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># pacman -S sudo</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># visudo</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-31.sh</span>
    </div>
</div>
<p>Descomentamos la siguiente linea:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">%wheel ALL=(ALL) ALL&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-32.txt</span>
    </div>
</div>
<p>Editamos el archivo <em>pacman.conf</em> según nuestras preferencias, por ejemplo, para permitir el color en la terminal y para mostrar el progreso global.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/pacman.conf</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-33.sh</span>
    </div>
</div>
<h4 id="22-instalar-el-entorno-gráfico">2.2 Instalar el entorno gráfico</h4>
<p>Instalamos los paquetes básicos del entorno gráfico, en este caso los controladores para una tarjeta gráfica intel:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S xorg-server xorg-xinit xorg-server-utils mesa xf86-video-intel&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-34.sh</span>
    </div>
</div>
<h4 id="23-instalar-el-entorno-de-escritorio">2.3 Instalar el entorno de escritorio</h4>
<p>Instalamos el entorno de escritorio según nuestras preferencias, en mi caso GNOME:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S gnome gnome-extra gnome-tweak-tool&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-35.sh</span>
    </div>
</div>
<p>Habilitamos el servicio del gestor de escritorio GDM:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl <span class="nb">enable</span> gdm.service&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-36.sh</span>
    </div>
</div>
<h4 id="24-instalación-de-yaourt">2.4 Instalación de yaourt</h4>
<p>Si pretendemos usar algún paquete de <a href="https://wiki.archlinux.org/index.php/Arch_User_Repository">AUR</a> deberemos instalar la herramienta <em>yaourt</em>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># nano /etc/pacman.conf</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-37.sh</span>
    </div>
</div>
<p>Añadimos su repositorio:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">[archlinuxfr]&#10;</span></span><span class="line"><span class="cl">SigLevel=Optional TrustAll&#10;</span></span><span class="line"><span class="cl">Server=http://repo.archlinux.fr/$arch</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-38.txt</span>
    </div>
</div>
<p>Lo instalamos con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -Syu&#10;</span></span><span class="line"><span class="cl">$ sudo pacman -S yaourt&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-39.sh</span>
    </div>
</div>
<p>A partir de este momento podemos usar el comando <em>yaourt</em> en vez de pacman.</p>
<h4 id="25-instalar-de-programas">2.5 Instalar de programas</h4>
<p>Los programas que instalaremos cambiarán según nuestras preferencias, estos son casi todos los que suelo utilizar:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ yaourt -S vim vim-spell-es chromium firefox firefox-i18n-es-es ntfs-3g faenza-icon-theme gimp filezilla imagemagick gparted ufw shotwell libreoffice vlc gstreamer0.10-plugins calibre ntp flashplugin tomcat-native rsync jdk7-openjdk mariadb redis wget git subversion openssh unrar base-devel&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-40.sh</span>
    </div>
</div>
<h4 id="26-activar-el-servicio-de-sincronización-de-hora">2.6 Activar el servicio de sincronización de hora</h4>
<p>Para mantener la hora de nuestro sistema correctamente podemos usar un servicio que se encargue de mantenerla con un servicio a través de la red.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl <span class="nb">enable</span> ntpd.service&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-41.sh</span>
    </div>
</div>
<p>El resultado de la instalación y usando GNOME es el siguiente:</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/escritorio-gnome_hu23bbeee9dabb636c901d0c64f6ff7acd_101598_2560x1440_fit_q90_box.jpg" data-gallery=""><img src="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/images/escritorio-gnome_hu23bbeee9dabb636c901d0c64f6ff7acd_101598_300x200_fit_q90_box.jpg" width="300" height="169"  class="lozad "></a></p>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
</feed>