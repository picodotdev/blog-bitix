<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/programacion/</id>
    <updated>2023-02-02T20:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/02/introduccion-conceptos-y-uso-basico-del-broker-de-mensajes-apache-kafka/</id>
        <title>Introducción, conceptos y uso básico del broker de mensajes Apache Kafka</title>
        <updated>2023-02-02T20:00:00+02:00</updated>
        <published>2023-02-02T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/02/introduccion-conceptos-y-uso-basico-del-broker-de-mensajes-apache-kafka/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>La comunicación mediante mensajes permite desacoplar las aplicaciones y procesar las peticiones de forma asíncrona. Apache Kafka es un <em>broker</em> de mensajes muy popular por su escalabilidad, tolerancia a fallos y adaptabilidad para ser usado en diferentes casos de uso. Es una herramienta compleja dado el número de casos de uso que soporta y la necesidad de ser distribuida para dotarse de escalabilidad y tolerancia a fallos.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/02/introduccion-conceptos-y-uso-basico-del-broker-de-mensajes-apache-kafka/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/</id>
        <title>Construir, desplegar y observar aplicaciones de forma uniforme con Waypoint</title>
        <updated>2023-01-19T20:00:00+01:00</updated>
        <published>2023-01-19T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Cuando se tienen muchas aplicaciones si no se tienen unos procesos definidos seguramente cada una requerirá su propio proceso, herramientas de construcción y despliegue. Estas diferencias añaden complejidad y no es deseable para tener un flujo de trabajo ágil. La herramienta Waypoint de HashiCorp permite construir una aplicación independientemente del lenguaje en el que esté implementada, desplegar en diferentes proveedores de computación en la nube y observar las aplicaciones una vez desplegadas, todo con la misma herramienta y de forma uniforme que simplifica en gran medida el flujo de desarrollo.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/construir-la-imagen-del-contenedor-de-la-aplicacion-usando-buildpacks/</id>
        <title>Construir la imagen del contenedor de la aplicación usando Buildpacks</title>
        <updated>2023-01-11T20:00:00+01:00</updated>
        <published>2023-01-11T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/construir-la-imagen-del-contenedor-de-la-aplicacion-usando-buildpacks/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los sistemas y servicios son significativamente complejos por sí mismos, además en sistemas que se componen de varios de ellos cada uno con sus diferencias añade más complejidad al sistema. Eliminar toda la complejidad posible y simplificar el sistema es algo deseable. La herramienta Buildpacks aplica a la construcción de las aplicaciones lo que los contenedores aplican en tiempo de ejecución de las mismas, uniformizando las aplicaciones independientemente del lenguaje y plataforma que usen.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-la-imagen-del-contenedor-de-la-aplicacion-usando-buildpacks/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/12/radar-tecnologico-y-otras-fuentes-de-informacion-sobre-programacion/</id>
        <title>Radar tecnológico y otras fuentes de información sobre programación</title>
        <updated>2022-12-15T21:00:00+02:00</updated>
        <published>2022-12-15T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/12/radar-tecnologico-y-otras-fuentes-de-informacion-sobre-programacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Conocer que herramientas hay disponibles permite elegir aquellas que más apropiadas sean para resolver un problema, las herramientas no son el fin pero si un medio determinante. Las herramientas usadas diariamente en el trabajo no permiten experimentar y conocer otras nuevas herramientas que en algún momento puedan pasar a considerarse una mejor opción. El radar tecnológico de Thoughtworks hace un resumen al menos dos veces al año a tener en cuenta con los cambios en las herramientas, además permite conocer nuevas herramientas.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/12/radar-tecnologico-y-otras-fuentes-de-informacion-sobre-programacion/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/12/base-de-datos-de-paises-regiones-ciudades-codigos-postales-y-otra-informacion-geografica/</id>
        <title>Base de datos de países, regiones, ciudades, códigos postales y otra información geográfica</title>
        <updated>2022-12-01T19:30:00+01:00</updated>
        <published>2022-12-01T19:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/12/base-de-datos-de-paises-regiones-ciudades-codigos-postales-y-otra-informacion-geografica/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Entre las funcionalidades habituales en una aplicación está un formulario para introducir una dirección. El formulario de dirección consta de varios campos en el que suele ser recomendable realizar unas mínimas validaciones como que el código postal o ciudad sea correcto para evitar errores inadvertidos del usuario o intencionados con información incorrecta. La base de datos de GeoNames proporciona información geográfica muy útil y de forma gratuita que incluye países, ciudades, subdivisiones administrativas, códigos postales, nombres en diferentes idiomas y mucha otra información de todos los paises del mundo.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/12/base-de-datos-de-paises-regiones-ciudades-codigos-postales-y-otra-informacion-geografica/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/</id>
        <title>Realizar peticiones a APIs con herramientas de línea comandos e interfaz gráfica</title>
        <updated>2022-11-03T23:00:00+02:00</updated>
        <published>2022-11-03T23:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El comando curl es la herramienta de línea de comandos para realizar cualquier petición que requiera probar un <em>endpoint</em> de una API o web que utilice el protocolo HTTP, tiene opciones para cualquier petición que sea requerida. Aunque curl es muy versátil y completa es una herramienta de línea de comandos sin algunas otras funcionalidades que las aplicaciones con interfaz gráfica son capaces de proporcionar. Postman es una aplicación con interfaz gráfica que cubre parte de las funcionalidades de curl y la mayoría que habitualmente un desarrollador necesita para probar una API, permite guardar colecciones y compartirlas con otros miembros de equipo de desarrollo asi como entornos y otras funcionalidades. Postman es la herramienta más conocida en su categoría y tiene una licencia comercial en base al numero de miembros de equipo que no es barata. Finalmente, Hoppscotch es una herramienta alternativa y equivalente a Postman de código abierto que no tiene coste de licencia y ofrece la mayoría de funcionalidades importantes como para sustituir a Postman.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/</id>
        <title>Las funcionalidades de un service mesh en una arquitectura de microservicios</title>
        <updated>2022-10-21T20:00:00+02:00</updated>
        <published>2022-10-21T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los monolitos son la opción más sencilla y mejor en la mayoría de casos, los microservicios solo son recomendables cuando los problemas que resuelven compensan los problemas asociados que generan, entre ellos una mayor complejidad en la infraestructura y de comunicación entre servicios que utilizan un medio con fallos, la red de comunicaciones entre diferentes computadoras. Esta mayor complejidad, mayor número de servicios y mayor probabilidad de que alguna falle requiere utilizar herramientas para en el sistema tener seguridad, observabilidad, resiliencia y control de tráfico. Estas son funcionalidades que como una capa de red para los servicios proporciona un <em>service mesh</em>.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/10/las-funcionalidades-de-un-service-mesh-en-una-arquitectura-de-microservicios/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/09/introduccion-al-protocolo-oauth-2-para-delegar-la-autorizacion/</id>
        <title>Introducción al protocolo OAuth 2 para delegar la autorización</title>
        <updated>2022-09-08T11:00:00+02:00</updated>
        <published>2022-09-08T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/09/introduccion-al-protocolo-oauth-2-para-delegar-la-autorizacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El protocolo OAuth es un protocolo en el ámbito de la seguridad que permite que el dueño de los recursos conceda permisos a un cliente sin necesidad de compartir las credenciales, el servidor de recursos unicamente necesita un <em>token</em> que certifique el cliente tiene permisos para acceder a los recursos, el <em>token</em> es emitido por el servidor de autorización en el que el usuario se autentica y en el que servidor de recursos confía en los <em>tokens</em> de autorización que emite. Gracias a la flexibilidad del protocolo OAuth y estar basado en la ubicuidad del protocolo HTTP este es el mecanismo de autorización adoptado predominantemente en la web por los diferentes servicios que ofrecen sus APIs mediante REST sin limitarse a este tipo de APIs. OAuth se compone de varias especificaciones que permiten delegar la autorización, OpenID Connect construido sobre OAuth proporciona otro aspecto de la seguridad, la autenticación.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/09/introduccion-al-protocolo-oauth-2-para-delegar-la-autorizacion/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/07/opciones-de-arquitectura-para-emitir-trazas-en-una-aplicacion-java/</id>
        <title>Opciones de arquitectura para emitir trazas en una aplicación Java</title>
        <updated>2022-07-28T19:30:00+02:00</updated>
        <published>2022-07-28T19:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/07/opciones-de-arquitectura-para-emitir-trazas-en-una-aplicacion-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Incluso para emitir trazas que en principio es algo sencillo y que se da por hecho surgen varias opciones de arquitectura o diseño. Dos de esas decisiones son acoplarse o no a la librería de <em>logging</em> que se use e inyectar de forma estática o por el constructor la instancia de la clase con la que se emiten trazas. Estas decisiones conviene recogerlas en un documento de <em>Architecture Decision Record</em> por si en un futuro hay que revisar las decisiones tomadas con anterioridad o para que una persona en un futuro tenga el contexto y un registro de las decisiones que se han tomado, el contexto, opciones evaluadas, argumentos y decisiones tomadas.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/07/opciones-de-arquitectura-para-emitir-trazas-en-una-aplicacion-java/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/</id>
        <title>Cómo usar el comando git bisect para descubrir el primer commit con un error</title>
        <updated>2022-04-28T19:00:00+02:00</updated>
        <published>2022-04-28T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>El comando <em>git bisect</em> es muy útil cuando se desea encontrar en que <em>commit</em> se ha introducido un error en un rango de <em>commits</em> ya que permite automatizar la búsqueda sin tener que hacerlo manualmente el desarrollador que simplemente se limita a indicar a Git si el <em>commit</em> a analizar en cada prueba es correcto o incorrecto. Una vez descubierto en que <em>commit</em> se ha introducido el error es cuestión de revisar los cambios de ese <em>commit</em>, analizar sus cambios e identificadas las líneas de código erróneas aplicar la solución.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/04/como-usar-el-comando-git-bisect-para-descubrir-el-primer-commit-con-un-error/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/</id>
        <title>Aplicación con interfaz gráfica para repositorios Git</title>
        <updated>2022-04-19T00:00:00+02:00</updated>
        <published>2022-04-19T00:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Una herramienta con interfaz gráfica hace más fácil algunas tareas que usar la línea de comandos directamente. Este también es el caso al trabajar con repositorios de código fuente con la herramienta de control de versiones Git. Usar la linea de comandos tiene sus propias ventajas como permitir automatizar tareas con <em>scripts</em> o realizar operaciones sin tener que usar la interfaz gráfica. La interfaz gráfica y la linea de comandos no son excluyentes, se pueden usar según convenga en cada ocasión. Al trabajar con múltiples repositorios de Git, para realizar operaciones comunes como <em>commits</em>, analizar el historial y ver las diferencias en un archivo entre dos versiones una herramienta gráfica también facilita la tarea.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2022/04/aplicacion-con-interfaz-grafica-para-repositorios-git/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/12/buenas-practicas-de-programacion-sencillas-en-el-codigo-fuente/</id>
        <title>Buenas prácticas de programación sencillas en el código fuente</title>
        <updated>2021-12-09T23:00:00+01:00</updated>
        <published>2021-12-09T23:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/12/buenas-practicas-de-programacion-sencillas-en-el-codigo-fuente/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Al escribir código uno de las principales objetivos además de que funcione es tan importante que sea código legible ya que la mayor parte del tiempo en la programación generalmente no se emplea a escribir código nuevo sino a mantener código existente. Las prácticas de este artículo para escribir código más legible son sencillas de comprender y de aplicar en cualquier lenguaje de programación.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/12/buenas-practicas-de-programacion-sencillas-en-el-codigo-fuente/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/</id>
        <title>Medidas de seguridad a implementar para prevenir y minimizar daños en ataques informáticos</title>
        <updated>2021-10-28T19:00:00+02:00</updated>
        <published>2021-10-28T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Los ataques informáticos dirigidos a los usuarios tienen el objetivo con una motivación económica del delincuente de robarles las credenciales de sus cuentas, datos de tarjetas de crédito y datos personales, otros ataques están dirigidos a los servicios que usan los usuarios. De los ataques dirigidos a los usuarios implementando las medidas de seguridad adecuadas en el servicio varios tipos de ataques son evitables como el <em>phishing</em> que es uno de los más comunes ofreciendo inicio de sesión con segundo factor de autenticación y con otras medidas los daños y riesgos son limitables. Otras medidas de seguridad implementadas en el servicio evita riesgos como usar <em>salted pasword hashing</em>. Como programadores los servicios deben hacer uso de buenas prácticas e implementar medidas adicionales para evitar riesgos y daños.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/09/los-diagramas-uml-para-documentar-y-una-aplicacion-para-crearlos/</id>
        <title>Los diagramas UML para documentar y una aplicación para crearlos</title>
        <updated>2021-09-02T20:00:00+02:00</updated>
        <published>2021-09-02T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/09/los-diagramas-uml-para-documentar-y-una-aplicacion-para-crearlos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>Todo el conocimiento está en el código fuente pero este no tiene una forma de fácil y rápida comprensión a alto nivel, para comprender un sistema es necesario una forma de documentación que muestre los detalles importantes de los que se compone el sistema. El lenguaje unificado de desarrollo o UML permite describir un sistema utilizando diferentes diagramas específicos para mostrar diferentes aspectos del sistema. Gaphor es una aplicación de software libre disponible para diferentes sistemas operativos que permite crear y exportar a imágenes los diferentes diagramas.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/09/los-diagramas-uml-para-documentar-y-una-aplicacion-para-crearlos/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/08/the-three-ways-y-the-five-ideals-de-los-libros-the-devops-handbook-the-phoenix-project-y-the-unicorn-project/</id>
        <title>The three ways y The five ideals de los libros The DevOps Handbook, The Phoenix Project y The Unicorn Project</title>
        <updated>2021-08-25T20:00:00+02:00</updated>
        <published>2021-08-25T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/08/the-three-ways-y-the-five-ideals-de-los-libros-the-devops-handbook-the-phoenix-project-y-the-unicorn-project/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[

        <p><strong>En la trilogía de los libros <em>The DevOps Handbook</em>, <em>The Phoenix Project</em> y <em>The Unicorn Project</em> se explican más detalladamente varios principios para conseguir que la cadena de valor en un producto de software funcione de forma correcta y evitar en gran medida muchos problemas comunes, son los principios denominados como <em>The three ways</em> y <em>The five ideals</em>.</strong></p>
        
        <p><a href="https://picodotdev.github.io/blog-bitix/2021/08/the-three-ways-y-the-five-ideals-de-los-libros-the-devops-handbook-the-phoenix-project-y-the-unicorn-project/">Continuar leyendo en Blog Bitix</a></p>

        ]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>