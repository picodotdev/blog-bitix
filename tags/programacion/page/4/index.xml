<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/programacion/</id>
    <updated>2021-12-09T23:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/</id>
        <title>Generar credenciales de conexión a base de datos bajo demanda con Vault</title>
        <updated>2019-08-15T09:00:00+02:00</updated>
        <published>2019-08-15T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Una de las funcionalidades proporcionada por Vault es generar credenciales dinámicas para la conexión a bases de datos. Generar las credenciales de forma dinámica proporciona varios beneficios: no hay unas credenciales que usen las aplicaciones que tengan un tiempo de vida indefinido, las aplicaciones no necesitan guardar en su configuración las credenciales, las credenciales se rotan de forma automática y los permisos para obtenerlas se pueden revocar de forma centralizada con Vault para cuales quiera bases de datos que se utilicen. Soporta las bases de datos más populares entre ellas PostgreSQL.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="206" alt="PostgreSQL" title="PostgreSQL"  class=""></p>
</div>
<p>Las base de datos para proteger los datos realizan autenticación del usuario que se conecta. Normalmente utilizando un usuario y contraseña, una vez autenticado el usuario mediante permisos se realiza la autorización de las operaciones que puede realizar, a que bases de datos se puede conectar, que tablas puede acceder y que operaciones puede realizar.</p>
<p>Este modelo de autenticación tiene algunos inconvenientes. Uno de los inconvenientes es que los usuarios y contraseñas para mayor seguridad han de cambiarse con cierta frecuencia para evitar que si las credenciales quedan comprometidas no puedan utilizarse indefinidamente. Otro problema es que cada aplicación ha de conocer las credenciales de la base de datos, esto hace que haya múltiples posibilidades de que las credenciales queden comprometidas. Por otro lado el uso de las credenciales no queda registrado de forma centralizada que es necesario para saber ante una brecha de seguridad qué datos han sido accedidos y por quien.</p>
<p>La herramienta <a href="https://www.vaultproject.io/">Vault</a> de <a href="https://www.hashicorp.com/">HashiCorp</a> da solución a estos problemas generando credenciales de acceso a las bases de datos de forma dinámica, bajo demanda y con un tiempo de concesión limitado. Las credenciales tiene un tiempo de vida limitado si no se renueva su concesión y la generación de las credenciales queda registrado. La forma que tiene Vault de generar credenciales de forma dinámica en una base de datos relacional como <a href="https://www.postgresql.org/">PostgreSQL</a> es conectarse a la base de datos con un usuario con permisos para generarlas y ejecutar una sentencia SQL que crea las credenciales.</p>
<p>Para permitir a Vault generar credenciales de conexión hay que activar el <em>backend</em> de bases de datos, configurarlo con la sentencia SQL que se utilizará para generar las credenciales y crear el rol de Vault que genera las credenciales cuando se le solicite. En este ejemplo se muestra para la base de datos PostgreSQL pero Vault también soporta otras bases de datos como <a href="https://www.mysql.com/">MySQL</a>. En el ejemplo la base de datos PostgreSQL se ejecuta en un contenedor de <a href="https://www.docker.com/">Docker</a> en el que se asignan el usuario y contraseña del usuario <em>root</em> que utiliza Vault para generar las credenciales de forma dinámica.</p>
<p>Con las siguientes comandos se inicia <a href="https://www.consul.io/">Consul</a> y Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev&#10;<span class="o">==</span>&gt; Starting Consul agent...&#10;<span class="o">==</span>&gt; Consul agent running!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: <span class="s1">&#39;v1.5.0&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID: <span class="s1">&#39;38d4f541-0958-6d7d-d49e-a31a15987286&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node name: <span class="s1">&#39;archlinux&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Datacenter: <span class="s1">&#39;dc1&#39;</span> <span class="o">(</span>Segment: <span class="s1">&#39;&lt;all&gt;&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span> <span class="o">(</span>Bootstrap: <span class="nb">false</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Client Addr: <span class="o">[</span>127.0.0.1<span class="o">]</span> <span class="o">(</span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  Cluster Addr: 127.0.0.1 <span class="o">(</span>LAN: 8301, WAN: 8302<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev -config vault.hcl&#10;<span class="o">==</span>&gt; Vault server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: consul <span class="o">(</span>HA available<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;&#10;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;and starts unsealed with a single unseal key. The root token is already&#10;authenticated to the CLI, so you can immediately begin using Vault.&#10;&#10;You may need to <span class="nb">set</span> the following environment variable:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;&#10;The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;seal/unseal the Vault or re-authenticate.&#10;&#10;Unseal Key: <span class="nv">jeW10eak6TxJzH2qFnwk7bWk7HcpDXd3KQOobi1rZTQ</span><span class="o">=</span>&#10;Root Token: s.0YRcRzojVcPG8LbbzyUd1MEA&#10;&#10;Development mode should NOT be used in production installations!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="n">ui</span> <span class="o">=</span> <span class="kt">true</span>&#10;&#10;<span class="k">storage</span> <span class="s2">&#34;consul&#34;</span> {&#10;<span class="n">  address</span> <span class="o">=</span> <span class="s2">&#34;127.0.0.1:8500&#34;</span>&#10;<span class="n">  path</span>  <span class="o">=</span> <span class="s2">&#34;vault&#34;</span>&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.hcl</span>
    </div>
</div>
<p>La base de datos se inicia en un contenedor de Docker, se crea una base de datos y una tabla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run -it -p <span class="s2">&#34;5432:5432&#34;</span> -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>postgres -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>postgres postgres:alpine&#10;$ docker ps &#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAMES&#10;2792b13c36c1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">3</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">3</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:5432-&gt;5432/tcp   distracted_keldysh&#10;$ docker <span class="nb">exec</span> -it 2792b13c36c1 bash&#10;bash-5.0# psql -U postgres&#10;psql <span class="o">(</span>11.4<span class="o">)</span>&#10;Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;&#10;<span class="nv">postgres</span><span class="o">=</span><span class="c1"># CREATE DATABASE app;</span>&#10;<span class="nv">postgres</span><span class="o">=</span><span class="c1"># \connect app</span>&#10;You are now connected to database <span class="s2">&#34;app&#34;</span> as user <span class="s2">&#34;postgres&#34;</span>.&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># CREATE TABLE product (</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bigint PRIMARY KEY,&#10;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;   varchar<span class="o">(</span>256<span class="o">)</span> NOT NULL&#10;<span class="o">)</span><span class="p">;</span>&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># \dt</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  List of relations&#10; Schema <span class="p">|</span>  Name   <span class="p">|</span> Type  <span class="p">|</span>  Owner   &#10;--------+---------+-------+----------&#10; public <span class="p">|</span> product <span class="p">|</span> table <span class="p">|</span> postgres&#10;<span class="o">(</span><span class="m">1</span> row<span class="o">)</span>&#10;$ docker inspect -f <span class="s1">&#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39;</span> 2792b13c36c1&#10;172.17.0.2</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql.sh</span>
    </div>
</div>
<p>En Vault hay que crear la configuración para conectarse a la base de datos y un rol que contiene la configuración para generar las credenciales y permitir obtenerlas, básicamente es un sentencia SQL con el nombre del usuario y contraseña, los permisos que se le asignan y el tiempo de concesión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span>http://127.0.0.1:8200&#10;$ vault login s.0YRcRzojVcPG8LbbzyUd1MEA&#10;$ vault secrets <span class="nb">enable</span> database</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-database.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault write database/config/app <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">plugin_name</span><span class="o">=</span>postgresql-database-plugin <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">allowed_roles</span><span class="o">=</span><span class="s2">&#34;app&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">connection_url</span><span class="o">=</span><span class="s2">&#34;postgresql://{{username}}:{{password}}@localhost:5432/?sslmode=disable&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">username</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">password</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span>&#10;$ vault write database/roles/app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">db_name</span><span class="o">=</span>app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">creation_statements</span><span class="o">=</span><span class="s2">&#34;CREATE ROLE \&#34;{{name}}\&#34; WITH LOGIN PASSWORD &#39;{{password}}&#39; VALID UNTIL &#39;{{expiration}}&#39;; GRANT SELECT ON ALL TABLES IN SCHEMA public TO \&#34;{{name}}\&#34;;&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">default_ttl</span><span class="o">=</span><span class="s2">&#34;1h&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">max_ttl</span><span class="o">=</span><span class="s2">&#34;24h&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-role.sh</span>
    </div>
</div>
<p>Las credenciales se generan en el momento de leer una propiedad de Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault <span class="nb">read</span> database/roles/app&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;creation_statements&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[</span>CREATE ROLE <span class="s2">&#34;{{name}}&#34;</span> WITH LOGIN PASSWORD <span class="s1">&#39;{{password}}&#39;</span> VALID UNTIL <span class="s1">&#39;{{expiration}}&#39;</span><span class="p">;</span> GRANT SELECT ON ALL TABLES IN SCHEMA public TO <span class="s2">&#34;{{name}}&#34;</span><span class="p">;</span><span class="o">]</span>&#10;db_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  app&#10;default_ttl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  1h&#10;max_ttl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  24h&#10;renew_statements&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">[]</span>&#10;revocation_statements&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[]</span>&#10;rollback_statements&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[]</span>&#10;$ vault <span class="nb">read</span> database/creds/app&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;lease_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   database/creds/app/rFFlNmpNoxezccTVh3WufZOT&#10;lease_duration&nbsp;&nbsp;&nbsp;&nbsp; 1h&#10;lease_renewable&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">true</span>&#10;password&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   A1a-6hRTGNaShFIEGLvp&#10;username&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-credentials.sh</span>
    </div>
</div>
<p>En PostgreSQL la conexión desde la máquina local se permiten sin necesidad de credenciales, para simular realizar la conexión desde otra máquina hay que iniciar otro contenedor. En la conexión se utilizan las credenciales que ha proporcionado Vault. Dado que se realiza una operación de red hay que desactivar el <em>firewall</em> del sistema o permitir la conexión al puerto de la base de datos que en PostgreSQL es el 5432 si fuera necesario. Listando los usuarios de la base de datos con el comando <em>\du</em> se muestra el creado por Vault y si tiempo de validez.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run -it postgres:alpine bash&#10;bash-5.0# <span class="nv">PGPASSWORD</span><span class="o">=</span>A1a-6hRTGNaShFIEGLvp psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app&#10;psql <span class="o">(</span>11.4<span class="o">)</span>&#10;Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;&#10;<span class="nv">app</span><span class="o">=</span>&gt; <span class="se">\d</span>t&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  List of relations&#10; Schema <span class="p">|</span>  Name   <span class="p">|</span> Type  <span class="p">|</span>  Owner   &#10;--------+---------+-------+----------&#10; public <span class="p">|</span> product <span class="p">|</span> table <span class="p">|</span> postgres&#10;<span class="o">(</span><span class="m">1</span> row<span class="o">)</span>&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># \du</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List of roles&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Role name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attributes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> Member of &#10;--------------------------------------------+------------------------------------------------------------+-----------&#10; postgres&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> Superuser, Create role, Create DB, Replication, Bypass RLS <span class="p">|</span> <span class="o">{}</span>&#10; v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 <span class="p">|</span> Password valid <span class="k">until</span> 2019-08-15 09:22:55+00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> <span class="o">{}</span>&#10;<span class="nv">app</span><span class="o">=</span>&gt; quit</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-connect.sh</span>
    </div>
</div>
<p>Si el usuario y contraseña no es correcto no se permite la conexión a la base de datos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-5.0# <span class="nv">PGPASSWORD</span><span class="o">=</span>tampered psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app&#10;psql: FATAL:  password authentication failed <span class="k">for</span> user <span class="s2">&#34;v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370&#34;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-connect-fail.sh</span>
    </div>
</div>
<p>En las aplicaciones Java que utilizan <a href="https://spring.io/">Spring</a> el proyecto <a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a> proporciona las utilidades para simplificar en gran medida la obtención de las credenciales a la base de datos utilizando Vault.</p>
<p>Esto permite que únicamente Vault conozca la cuenta <em>root</em> de la base de datos o una con suficientes permisos para crear credenciales, las aplicaciones no almacenan en su configuración las credenciales para conectarse la base de datos solo las de Vault que le permiten obtener unas credenciales para la base de datos con un tiempo de vida limitado y que pueden revocarse desde Vault en caso de un problema de seguridad para cuales quiera bases de datos que se utilicen.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/">Introducción a la base de datos relacional PostgreSQL</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/</id>
        <title>Iniciar una aplicación de Spring Boot en un puerto aleatorio</title>
        <updated>2019-08-09T18:00:00+02:00</updated>
        <published>2019-08-09T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/iniciar-una-aplicacion-de-spring-boot-en-un-puerto-aleatorio/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En una arquitectura basada en microservicios es normal iniciar varias instancias de un mismo servicio, si están en la misma máquina ha de asignarse a cada instancia un puerto diferente. Asignar los puertos manualmente no es recomendable cuando se quieren varias instancias, Spring Boot ofrece la funcionalidad de iniciar la aplicación en un puerto aleatorio.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Mediante configuración se puede especificar el puerto en el que se desea iniciar una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> que ofrece un servicio de red. El puerto por convención suele ser el <em>8080</em> y la propiedad de configuración de Spring Boot para modificarlo es <em>server.port</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:8080}</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-1.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew service:run&#10;...&#10;2019-08-09 17:02:40,417  INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port<span class="o">(</span>s<span class="o">)</span>: <span class="m">8080</span> <span class="o">(</span>http<span class="o">)</span> with context path <span class="s1">&#39;&#39;</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>run-1.sh</span>
    </div>
</div>
<p>Cuando se tiene únicamente una aplicación este puerto por defecto es suficiente pero si se desean iniciar varias instancias de una aplicación o microservicio en una misma máquina es necesario asignar a cada una de ellas un puerto diferente para que no haya conflictos a usar el mismo puerto de red. Se puede hacer manualmente aunque con muchas instancias también se puede dejar a Spring Boot elegir un puerto aleatorio.</p>
<p>Para dejar a Spring Boot elegir el puerto de forma aleatoria basta con especificar el puerto con valor <em>0</em> en la propiedad de configuración <em>server.port</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="l">${port:0}</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application-2.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew service:run --args<span class="o">=</span><span class="s2">&#34;--port=0&#34;</span>&#10;...&#10;2019-08-09 17:02:40,417  INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port<span class="o">(</span>s<span class="o">)</span>: <span class="m">45871</span> <span class="o">(</span>http<span class="o">)</span> with context path <span class="s1">&#39;&#39;</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>run-2.sh</span>
    </div>
</div>
<p>Usando un <a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">servicio de registro y descubrimiento como Eureka</a> el servicio registra su ubicación y los servicios que quieran acceder a él obtendrán del mismo servicio de registro y descubrimiento su ubicación, de forma que para los clientes es transparente en qué puerto se inicie.</p>
<p>Sin embargo, por algún motivo con Eureka los servicios no se registran en el puerto aleatorio en el que realmente se inician sino que se registran incorrectamente en el puerto <em>0</em>, quizá utilizando <a href="https://www.consul.io/">Consul</a> el servicio de Spring Boot si se inicie en un puerto aleatorio.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloud">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle-run.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://javadeveloperzone.com/spring-boot/spring-boot-random-server-port/">Spring Boot Random Server Port</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/</id>
        <title>Administrar secretos y proteger datos sensibles con Vault</title>
        <updated>2019-07-27T23:00:00+02:00</updated>
        <published>2019-07-27T18:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Herramientas de aprovisionamiento como Chef, Puppet y Ansible solucionan el problema de la seguridad de los secretos de forma similar, utilizando una única clave de cifrado. Los datos cifrados están siempre a un secreto (contraseña, clave, &hellip;) de ser descifrados y generalmente no está bien protegidos dado que en un entorno elástico cada servidor necesita disponer de este secreto para descifrar los datos. Adicionalmente el acceso a los datos cifrados no está registrado de modo que si hay una intrusión no está claro que dato ha sido accedido y por quien. Utilizar variables de entorno para proporcionar secretos tampoco es seguro, y en entornos Docker suele usarse.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>La seguridad es un aspecto muy importante de los sistemas informáticos, no darle la consideración necesaria puede dar lugar a caídas de servicio y robo de datos potencialmente ocasionando importantes pérdidas de dinero, sanciones y pérdida de confianza de los clientes y proveedores de una organización.</p>
<p>La seguridad se mantiene mediante mecanismos de autenticación identifican al solicitante solicitante, de autorización permitiendo realiza únicamente las acciones para las que se tienen permisos y mediante firma y cifrado para impedir la modificación de los datos y el acceso a la información sin las credenciales y autorización requerida.</p>
<p>La infraestructura informática de los sistemas actuales es cada vez más compleja por el número y tipo de las distintas de piezas que emplean como bases de datos, sistemas de mensajes u otros servicios, también por el aspecto efímero en la tendencia actual de microservicios como por la utilización de entornos en la nube con una infraestructura no confiable al estar fuera del control de una organización y estar compartida con otras organizaciones.</p>
<p>No es seguro utilizar archivos sin cifrar aún utilizando los permisos del sistema de archivos dado que una intrusión en el sistema posibilita el acceso al secreto. Cifrarlos los archivos es el mismo caso de herramientas como <a href="https://www.getchef.com/">Chef</a>, <a href="https://puppet.com/">Puppet</a> y <a href="https://www.ansible.com/">Ansible</a>. Utilizar variables de entorno para proporcionar secretos tampoco es seguro ya que aunque los secretos no están en el sistema de archivos se pueden inspeccionar las variables de entorno de un proceso.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ env <span class="p">|</span> grep SECRET&#10;$ docker inspect&#10;$ sudo cat /proc/<span class="nv">$pid</span>/environ</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>commands.sh</span>
    </div>
</div>
<p>Por otra parte las contraseñas y claves han de rotarse regularmente para limitar en el tiempo el acceso ante el filtrado de las credenciales en un sistema o para denegar el acceso a una persona que en algún momento haya tenido credenciales de acceso como un empleado que ya no pertenece a la compañía.</p>
<h3 id="vault">Vault</h3>
<p><a href="https://www.vaultproject.io/">Vault</a> es una herramienta para acceder de forma segura a secretos. Un secreto es cualquier cosa a la que se quiera tener severamente controlado como claves de API, contraseñas y certificados. Vault proporciona una interfaz para cualquier secreto a la vez que mantiene un control de acceso y un <em>log</em> de acceso detallado.</p>
<ul>
<li><a href="https://www.vaultproject.io/docs/what-is-vault/index.html">Introduction to Vault</a></li>
<li><a href="https://www.vaultproject.io/docs/use-cases/index.html">Use Cases</a></li>
</ul>
<p>Las características principales de Vault se engloban en tres aspectos de la seguridad: cifrado, control de acceso y ciclo de vida.</p>
<ul>
<li>Almacenamiento seguro de secretos: se pueden almacenar secretos arbitrarios clave/valor. Los secretos son cifrados previamente a ser almacenados en el almacenamiento persistente de modo que obtener acceso al almacenamiento persistente no es suficiente para acceder a los secretos. Vault puede almacenar los secretos en disco, <a href="https://www.consul.io/">Consul</a> y más.</li>
<li>Secretos dinámicos: puede <a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">generar secretos bajo demanda para bases de datos</a> o algunos sistemas como AWS. Por ejemplo, cuando una aplicación necesita acceso a una base de datos SQL solicita a Vault unas credenciales, Vault genera unas credenciales con los permisos adecuados. Después de crear estos secretos dinámicos también los revoca automáticamente una vez pasado su tiempo de concesión.</li>
<li>Cifrado de datos: puede <a href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/">cifrar y descifrar datos sin almacenarlos</a>. Esto permite definir parámetros de seguridad y los desarrolladores almacenar los datos cifrados en localizaciones como bases de datos sin tener que diseñar sus propios métodos de cifrado.</li>
<li>Concesión y renovación: todos los secretos en Vault tienen un tiempo de concesión asociado. Al finalizar la concesión Vault los revoca automáticamente, los clientes pueden solicitar renovar las concesiones mediante las API disponibles de Vault.</li>
<li>Revocación: integra la funcionalidad de revocación, no solo secretos individuales sino jerarquías de secretos. La revocación asiste en la rotación de las claves así como cerrar el sistema en caso de intrusión.</li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/VYfl-DpZ5wM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/NxL2-XuZ3kc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="conceptos">Conceptos</h3>
<p>Los motores de secretos son uno de los conceptos en el ámbito de Vault. Son componentes que permite almacenar, generar o cifrar datos. Algunos motores de secretos simplemente almacenan y leen datos, otros se conectan a otros servicios y generan credenciales dinámicamente bajo demanda. Otros motores de secretos proporcionan el cifrado como servicio, <em>tokens</em> de un solo uso, certificados y mucho más.</p>
<ul>
<li><a href="https://www.vaultproject.io/api/secret/index.html">Secrets Engines</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/kv/index.html">KV Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/databases/index.html">Databases Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/rabbitmq/index.html">RabbitMQ Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/pki/index.html">PKI Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/ssh/index.html">SSH Secrets Engine</a></li>
</ul>
<p>Otro concepto es la <a href="https://www.vaultproject.io/docs/auth/index.html">autenticación</a>. Permiten realizar la autenticación y son responsables de asignar una identidad y un conjunto de <em>policies</em> a un usuario. Por ejemplo, para los desarrolladores el método de autenticación de GitHub es fácil de usar pero para servidores el método <em>AppRole</em> es el recomendado</p>
<p>Los secretos necesitan <a href="https://www.vaultproject.io/docs/configuration/storage/index.html">almacenamiento</a>. Algunos tipos de almacenamiento son mejores para la alta disponibilidad y otros facilitan la copia de seguridad y la restauración. Puede ser en memoria, sistema de archivos, una herramienta como Consul o varias bases de datos entre ellas bases de datos relacionales.</p>
<p>La <a href="https://www.vaultproject.io/docs/audit/index.html">auditoria</a> permite obtener una trazabilidad de las operaciones que se han realizado, dado que todas las operaciones se realizan mediante una API el <em>log</em> de auditoría es simplemente cada interacción autenticada con Vault, incluidas los errores. Puede ser un archivo o un <em>socket</em>.</p>
<p>Todo en Vault está basado en <em>paths</em>. Las <a href="https://www.vaultproject.io/docs/concepts/policies.html"><em>policies</em></a> permiten o deniegan el acceso a ciertos <em>paths</em>.  Poseen la siguiente sintaxis, donde las <em>capabilities</em> son las operaciones CRUD permitidas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="k">path</span> <span class="s2">&#34;secret/*&#34;</span> {&#10;<span class="n">  capabilities</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;create&#34;, &#34;read&#34;, &#34;update&#34;, &#34;delete&#34;, &#34;list&#34;</span><span class="p">]</span>&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>policy.hcl</span>
    </div>
</div>
<h3 id="instalación-y-un-caso-de-uso">Instalación y un caso de uso</h3>
<p>La <a href="https://www.vaultproject.io/docs/install/index.html">instalación de Vault</a> es muy sencilla ya que es un único binario sin más dependencias. En una distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> estará en los repositorios oficiales. En <a href="https://www.archlinux.org/">Arch Linux</a> se instala con el comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -S vault&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.sh</span>
    </div>
</div>
<p>En el siguiente ejemplo en modo desarrollo de uso de Vault se inicia, se realiza la autenticación con el <em>token</em> <em>root</em> de superusuario y se crea un secreto. Aquí solo se muestra el caso de uso de guardar y recuperar secretos, otros son generar credenciales para conectarse a una base de datos y proporcionar cifrado y descifrado como servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev&#10;<span class="o">==</span>&gt; Vault server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: inmem&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;&#10;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;and starts unsealed with a single unseal key. The root token is already&#10;authenticated to the CLI, so you can immediately begin using Vault.&#10;&#10;You may need to <span class="nb">set</span> the following environment variable:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;&#10;The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;seal/unseal the Vault or re-authenticate.&#10;&#10;Unseal Key: <span class="nv">R6MKrMxcJtTTUuIjeQjwDxnv4sHbKtjmuRn0Fok98zk</span><span class="o">=</span>&#10;Root Token: s.hQoeIivTHHgl1AtsoVz1UF1G&#10;&#10;Development mode should NOT be used in production installations!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;$ vault kv put secret/key <span class="nv">key</span><span class="o">=</span>s3cr3t&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;created_time&nbsp;&nbsp;&nbsp;&nbsp; 2019-07-27T17:30:29.559274833Z&#10;deletion_time&nbsp;&nbsp;&nbsp;&nbsp;n/a&#10;destroyed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="m">1</span>&#10;$ vault kv get secret/key&#10;<span class="o">======</span> <span class="nv">Metadata</span> <span class="o">======</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;created_time&nbsp;&nbsp;&nbsp;&nbsp; 2019-07-27T17:30:29.559274833Z&#10;deletion_time&nbsp;&nbsp;&nbsp;&nbsp;n/a&#10;destroyed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nv">1</span>&#10;&#10;<span class="o">===</span> <span class="nv">Data</span> <span class="o">===</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;key&nbsp;&nbsp;&nbsp;&nbsp;s3cr3t</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>secret.sh</span>
    </div>
</div>
<p>Vault al igual que otras de las herramientas de <a href="https://www.hashicorp.com/">HashiCorp</a> como Consul y <a href="https://www.nomadproject.io/">Nomad</a> posee una interfaz gráfica accesible mediante el navegador que permite realizar las mismas operaciones que a través de la API o desde la linea de comandos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Interfaz gráfica de Vault"><img src="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_300x200_fit_box_3.png" width="300" height="188" alt="Interfaz gráfica de Vault" title="Interfaz gráfica de Vault"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_300x200_fit_box_3.png" width="300" height="188"  class="lozad "></a></p>
<figcaption>Interfaz gráfica de Vault</figcaption>
</figure>
</div>
<p>Vault a igual que otras de las herramientas de HashiCorp tiene una muy buena documentación en formato de <a href="https://learn.hashicorp.com/vault">guía</a> y en formato de <a href="https://www.vaultproject.io/docs/">documentación</a>. En una aplicación Java el proyecto <a href="https://spring.io/">Spring</a> facilita su uso con <a href="https://projects.spring.io/spring-vault/">Spring Vault</a> y <a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/vault">An Intro to Vault</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/</id>
        <title>Publicación y suscripción de eventos con Guava EventBus en una aplicación Java</title>
        <updated>2019-07-19T19:00:00+02:00</updated>
        <published>2019-07-19T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/publicacion-y-suscripcion-de-eventos-con-guava-eventbus-en-una-aplicacion-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Guava EventBus es una solución simple para la publicación y suscripción de eventos en una misma aplicación y como tal no posee muchas de las capacidades que si tiene JMS o RabbitMQ, sin embargo, en algunos casos puede ser muy útil, una solución sencilla y sin requerimientos adicionales de infraestructura.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En programación los eventos son una buena forma de comunicación que permite desacoplar el emisor del evento del receptor o receptores. Los eventos permiten reaccionar a situaciones que se producen a la aplicación. El emisor los lanza cuando considera adecuado y los receptores se suscriben a los eventos que quieren recibir y actúan según su funcionalidad.</p>
<p>Hay herramientas especificas para eventos en Java está JMS si la aplicación está basada en <a href="https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/">la plataforma en Java EE</a>, en caso de necesitar un servidor de mensajes adecuado para múltiples plataformas y lenguajes uno de los más conocidos es <a href="https://www.rabbitmq.com/">RabbitMQ</a>. Estas opciones permiten que el emisor y los receptores estén aplicaciones distintas.</p>
<p>En el caso de que el emisor y receptor estén en la misma aplicación una opción más sencilla por no requerir un servidor de mensajería es usando la librería <a href="https://github.com/google/guava">Guava</a> y su funcionalidad de <a href="https://github.com/google/guava/wiki/EventBusExplained">Event Bus</a>. Una de las ventajas de Guava Event Bus es que el receptor no requiere un registro explícito en el emisor como ocurre en algunas de las soluciones con clases <em>Listener</em> de Java.</p>
<p>Para hacer uso de Guava Event Bus hay que obtener una referencia a la clase <a href="https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/eventbus/EventBus.html">EventBus</a> que usando <a href="https://spring.io/">Spring</a> se puede definir como un <em>bean singleton</em> en el contenedor de dependencias y ser inyectado en las clases que lo necesiten. Los eventos se envían a haciendo uso del método <a href="https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/eventbus/EventBus.html#post-java.lang.Object-">post()</a> con el objeto que representa el evento como argumento. Los manejadores de los eventos o <em>listener</em> son simplemente un método anotado con <a href="https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/eventbus/Subscribe.html">@Suscribe</a> y el tipo del evento como argumento, la clases <em>listener</em> han de registrarse en el <em>EventBus</em> y una misma clase con múltiples métodos anotados puede manejar diferentes eventos.</p>
<p>En el contenedor de Spring se define como un <em>bean</em> la clase <em>EventBus</em> que es inicializada con las clases <em>listener</em> con métodos anotados con <em>@Suscribe</em> registradas con el método <a href="https://guava.dev/releases/snapshot-jre/api/docs/com/google/common/eventbus/EventBus.html#register-java.lang.Object-">register()</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.guava</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.google.common.eventbus.EventBus</span><span class="o">;</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Bean</span>&#10;	<span class="kd">public</span> <span class="n">EventBus</span> <span class="nf">eventBus</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">EventBus</span> <span class="n">eventbus</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EventBus</span><span class="o">();</span>&#10;		<span class="n">eventbus</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="k">new</span> <span class="n">EventListener</span><span class="o">());</span>&#10;		<span class="k">return</span> <span class="n">eventbus</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.guava</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">com.google.common.eventbus.Subscribe</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">EventListener</span> <span class="o">{</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Subscribe</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onEvent</span><span class="o">(</span><span class="n">Event</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Event: %s%n&#34;</span><span class="o">,</span> <span class="n">event</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>EventListener.java</span>
    </div>
</div>
<p>En este ejemplo sencillo se lanza un evento cuando se realiza una petición y como reacción a este evento se imprime un mensaje en la salida. Una aplicación real del <em>EventBus</em> será más complicada pero este ejemplo muestra perfectamente el mecanismo de lanzado y recepción de eventos en una misma aplicación. La clase que se lanza como evento en este caso es un <em>POJO</em> sin ningún requerimiento especial.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.guava</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestParam</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">com.google.common.eventbus.EventBus</span><span class="o">;</span>&#10;&#10;<span class="nd">@RestController</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultRestController</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">EventBus</span> <span class="n">eventbus</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Event</span> <span class="nf">hello</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">&#34;message&#34;</span><span class="o">,</span> <span class="n">defaultValue</span> <span class="o">=</span> <span class="s">&#34;Hello World!&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Event</span> <span class="n">event</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Event</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">eventbus</span><span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="n">event</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">event</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultRestController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.guava</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Event</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">message</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Event</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">message</span> <span class="o">=</span> <span class="n">message</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">message</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Event.java</span>
    </div>
</div>
<p>Al realizar peticiones a la aplicación el controlador emite un evento que es recibido por <em>listener</em> al procesar el evento, en la salida de la aplicación aparecen los mensajes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">Event: Hello World!&#10;Event: A message&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En el proyecto hay que incluir como dependencia la librería Guava en este caso usando <a href="https://gradle.org/">Gradle</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;	<span class="n">id</span> <span class="s1">&#39;java&#39;</span>&#10;	<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;	<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.1.6.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">group</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix&#39;</span>&#10;<span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;0.0.1-SNAPSHOT&#39;</span>&#10;<span class="n">sourceCompatibility</span> <span class="o">=</span> <span class="mi">11</span>&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.guava.Main&#39;</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;	<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;	<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s2">&#34;org.springframework.boot:spring-boot-dependencies:2.1.6.RELEASE&#34;</span><span class="o">)</span>&#10;&#10;	<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">)</span>&#10;	<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-jersey&#39;</span><span class="o">)</span>&#10;	<span class="n">implementation</span><span class="o">(</span><span class="s1">&#39;com.google.guava:guava:28.0-jre&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Guava">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/guava-eventbus">Guide to Guava’s EventBus</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/02/ejemplo-de-rabbitmq-con-java-para-enviar-y-recibir-mensajes/">Ejemplo de RabbitMQ con Java para enviar y recibir mensajes</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/introduccion-y-ejemplo-sencillo-de-java-message-service-jms/">Introducción y ejemplo sencillo de Java Message Service (JMS)</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/aplicacion-de-ejemplo-usando-varias-especificaciones-de-java-ee-7/">Aplicación de ejemplo usando varias especificaciones de Java EE 7</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/</id>
        <title>Recuperar datos eficientemente en GraphQL usando batching con data loaders</title>
        <updated>2020-08-22T21:00:00+02:00</updated>
        <published>2019-07-12T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/recuperar-datos-eficientemente-en-graphql-usando-batching-con-data-loaders/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Al diferencia de una API REST donde cada recurso posee un <em>endpoint</em> propio en GraphQL los recursos están relacionados y forman un grafo. Por otro lado las propiedades devueltas en una consulta de GraphQL son las que se indiquen en la consulta en vez de prefijadas como en una API REST. Hay que tener en cuenta que GraphQL para recuperar las propiedades de las entidades usa un <em>resolver</em> y las recupera una a una, si se devuelve una lista de elementos y de cada uno de esos elementos otra propiedad para la que hay que generar una consulta adicional a la base de datos el rendimiento no será bueno. Los <em>data loaders</em> permiten recuperar las propiedades relacionadas de una colección de entidades eficientemente evitando el problema 1+N.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/graphql.svg" width="200" height="200" alt="GraphQL" title="GraphQL"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una de las dificultades a resolver en GraphQL es evitar los problemas de generar 1+N consultas dado que en algunas peticiones se recupera una lista de elementos para recuperar alguna otra propiedad de esos elementos para la que se realiza otra consulta. Suele ocurrir al navegar las relaciones de las entidades, por ejemplo al solicitar una lista de libros y de cada libro obtener su autor, para obtener los libros se necesita una consulta y hay que evitar que para recuperar el autor de cada libro generar otra consulta, si el número de libros recuperados es grande el número de consultas será grande y la consulta será poco eficiente, lenta y generará una carga a evitar en el servidor de base de datos.</p>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/05/recuperar-datos-eficientemente-en-graphql-usando-batching/">Recuperar datos eficientemente en GraphQL usando batching</a> comentaba una estrategia para evitar este problema que consistía en dados una serie de elementos recuperados y si la propiedad estaba presente en la consulta se obtenían los identificativos de esos elementos y se recuperaba la propiedad para todos los elementos en una única consulta.</p>
<p>Sin embargo, GraphQL posee otra estrategia para resolver el problema de los 1+N, mediante <a href="https://www.graphql-java.com/documentation/v12/batching/">Data Loaders</a>. Para usar un <em>data loader</em> en una propiedad de un tipo hay que crear una clase que implemente la interfaz <em>MappedBatchLoader</em> o <em>MappedBatchLoaderWithContext</em> de <a href="https://github.com/graphql-java/java-dataloader">java-loader</a>. El método a implementar es <em>load(Set&lt;K&gt;)</em> que recibe un conjunto de instancias de las que se quiere recuperar la propiedad y devuelve un <em>Map&lt;K,V&gt;</em> cuya clave es la instancia de la colección y el valor de la propiedad recuperada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.dataloader</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.type.Book</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.dataloader.BatchLoaderEnvironment</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.dataloader.MappedBatchLoaderWithContext</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">IsbnDataLoader</span> <span class="kd">implements</span> <span class="n">MappedBatchLoaderWithContext</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;   <span class="kd">public</span> <span class="nf">IsbnDataLoader</span><span class="o">()</span> <span class="o">{</span>&#10;   <span class="o">}</span>&#10;&#10;   <span class="nd">@Override</span>&#10;   <span class="kd">public</span> <span class="n">CompletionStage</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="nf">load</span><span class="o">(</span><span class="n">Set</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="n">books</span><span class="o">,</span> <span class="n">BatchLoaderEnvironment</span> <span class="n">environment</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Map</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">isbns</span> <span class="o">=</span> <span class="n">books</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toMap</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Function</span><span class="o">.</span><span class="na">identity</span><span class="o">(),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="n">Book</span><span class="o">::</span><span class="n">getIsbn</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="k">return</span> <span class="n">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">isbns</span><span class="o">);</span>&#10;   <span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IsbnDataLoader.java</span>
    </div>
</div>
<p>Una vez definidos los <em>data loaders</em> hay que incluirlos en un registro e indicarlos en la clase del contexto de GraphQL. El método <em>contextBuilder</em> recibe todas las instancias de <em>data loaders</em>, el método <em>dataLoaderRegistry</em> crea el registro y finalmente se asigna el registro al contexto. Los <em>data loaders</em> cachean los datos de modo que si los datos no se deben compartir entre peticiones hay que construir los <em>data loaders</em> en cada petición.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLContextBuilder</span> <span class="nf">contextBuilder</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">MappedBatchLoaderWithContext</span><span class="o">&lt;?,</span> <span class="o">?&gt;&gt;</span> <span class="n">mappedBatchLoaders</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">GraphQLContextBuilder</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLContext</span> <span class="nf">build</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span> <span class="n">data</span> <span class="o">=</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span><span class="o">.</span><span class="na">newContext</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">GraphQLContext</span> <span class="n">context</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultGraphQLContext</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">context</span><span class="o">.</span><span class="na">setDataLoaderRegistry</span><span class="o">(</span><span class="n">buildDataLoaderRegistry</span><span class="o">(</span><span class="n">mappedBatchLoaders</span><span class="o">,</span> <span class="n">context</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">context</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLContext</span> <span class="nf">build</span><span class="o">(</span><span class="n">Session</span> <span class="n">session</span><span class="o">,</span> <span class="n">HandshakeRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span> <span class="n">data</span> <span class="o">=</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span><span class="o">.</span><span class="na">newContext</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">GraphQLContext</span> <span class="n">context</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultGraphQLContext</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">session</span><span class="o">,</span> <span class="n">request</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">context</span><span class="o">.</span><span class="na">setDataLoaderRegistry</span><span class="o">(</span><span class="n">buildDataLoaderRegistry</span><span class="o">(</span><span class="n">mappedBatchLoaders</span><span class="o">,</span> <span class="n">context</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">context</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">GraphQLContext</span> <span class="nf">build</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span> <span class="n">data</span> <span class="o">=</span> <span class="n">graphql</span><span class="o">.</span><span class="na">GraphQLContext</span><span class="o">.</span><span class="na">newContext</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">GraphQLContext</span> <span class="n">context</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultGraphQLContext</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">context</span><span class="o">.</span><span class="na">setDataLoaderRegistry</span><span class="o">(</span><span class="n">buildDataLoaderRegistry</span><span class="o">(</span><span class="n">mappedBatchLoaders</span><span class="o">,</span> <span class="n">context</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">context</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DataLoaderRegistry</span> <span class="nf">buildDataLoaderRegistry</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">MappedBatchLoaderWithContext</span><span class="o">&lt;?,</span> <span class="o">?&gt;&gt;</span> <span class="n">mappedBatchLoaders</span><span class="o">,</span> <span class="n">GraphQLContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DataLoaderRegistry</span> <span class="n">registry</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DataLoaderRegistry</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="n">MappedBatchLoaderWithContext</span><span class="o">&lt;?,</span> <span class="o">?&gt;</span> <span class="n">loader</span> <span class="o">:</span> <span class="n">mappedBatchLoaders</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">register</span><span class="o">(</span><span class="n">loader</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getSimpleName</span><span class="o">(),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DataLoader</span><span class="o">.</span><span class="na">newMappedDataLoader</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">loader</span><span class="o">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DataLoaderOptions</span><span class="o">.</span><span class="na">newOptions</span><span class="o">().</span><span class="na">setBatchLoaderContextProvider</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">context</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">registry</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Una vez creados los <em>data loaders</em> hay que usarlos en los <em>resolver</em> de las propiedades de una entidad en la que se desee que se cargue de forma <em>batched</em>. El método de la propiedad del resolver debe devolver un <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletableFuture.html">CompletableFuture</a>, el método recibe la instancia de la que se quiere recuperar una propiedad y una referencia de <em>DataFetchingEnvironment</em> de la librería <a href="https://www.graphql-java.com/">graphql-java</a>, se recupera el <em>data loader</em> de esa propiedad y se le indica que acumule el conjunto de instancias de las que se quiere recuperar. GraphQL en algún momento llamará al método <em>load(Set&lt;K&gt;)</em> que recibe un conjunto de instancias para realizar la carga de todas en una única consulta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.graphql.resolver</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BookResolver</span> <span class="kd">implements</span> <span class="n">GraphQLResolver</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">&gt;</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">CompletableFuture</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">getDataLoaderIsbn</span><span class="o">(</span><span class="n">Book</span> <span class="n">book</span><span class="o">,</span> <span class="n">DataFetchingEnvironment</span> <span class="n">environment</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">InterruptedException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DataLoader</span><span class="o">&lt;</span><span class="n">Book</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">dataLoader</span> <span class="o">=</span> <span class="n">environment</span><span class="o">.</span><span class="na">getDataLoader</span><span class="o">(</span><span class="n">IsbnDataLoader</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getSimpleName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">dataLoader</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">book</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>BookResolver.java</span>
    </div>
</div>
<p>Al obtener los datos del conjunto de libros que utilizan un <em>batch loader</em> se produce la siguiente salida.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -XPOST -H <span class="s1">&#39;Content-Type: application/json&#39;</span> -d <span class="s1">&#39;{&#34;query&#34;:&#34;query{books{id title dataLoaderIsbn}}&#34;}&#39;</span> http://localhost:8080/graphql&#10;<span class="o">{</span>&#10;  <span class="s2">&#34;data&#34;</span>: <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;books&#34;</span>: <span class="o">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;7&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ojo en el cielo&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;87c1342a-f46e-41ad-ad9a-dda88bb9d0dc&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;8&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Muerte de la luz&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;0e10de64-4b6e-403a-9cf0-082907525c7a&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;9&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;El nombre de la rosa&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;ea04f2a6-3f1d-4e1a-a2ee-cd370cd2a222&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;10&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Los tejedores de cabellos&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;c7a83503-fcbd-477e-862b-ab72575f72a7&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;id&#34;</span>: <span class="s2">&#34;11&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;title&#34;</span>: <span class="s2">&#34;Ready Player One&#34;</span>,&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;dataLoaderIsbn&#34;</span>: <span class="s2">&#34;0fee8cbb-8c0f-4fef-b89d-e6ac236fc31c&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">]</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/GraphQL">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/los-tipos-de-modulos-de-jmps-anadidos-a-partir-de-java-9/</id>
        <title>Los tipos de módulos de JPMS añadidos a partir de Java 9</title>
        <updated>2019-07-07T12:00:00+02:00</updated>
        <published>2019-07-07T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/los-tipos-de-modulos-de-jmps-anadidos-a-partir-de-java-9/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los módulos de Java dotan a la plataforma de nuevas características. Para garantiza la compatibilidad con las librerías existentes y permitir una transición progresiva de una versión sin módulos a una con módulos la plataforma de módulos de Java define varios tipos de módulos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Con la <a href="https://picodotdev.github.io/blog-bitix/2017/09/novedades-y-nuevas-caracteristicas-de-java2-los-modulos/">publicación de Java 9</a> el 2017 se introdujo la importante novedad de los módulos que proporciona a la plataforma Java varias características como encapsulación fuerte, interfaces bien definidas y dependencias explícitas. Todos las clases se organizan en paquetes y en Java 9 también en módulos para lo cual fue necesario reorganizar en módulos todos los paquetes de los que se compone la API de Java.</p>
<p>Antes de Java 9 todas las clases se proporcionaban en una lista ordenada de archivos <em>jar</em>, lo que se conocía como el <em>classpath</em> y donde cualquier clase tenía acceso a cualquier otra que se encontrase en él respetando los ámbitos de visibilidad (<em>public</em>, <em>protected</em>, <em>private</em> y <em>package</em>). En la definición de cada módulo en su archivo <em>module-info.java</em> se debe especificar cuales son los módulos requeridos para su funcionamiento no permitiendo la máquina virtual de Java el acceso a ninguna otra clase de otros módulos ni a ninguna clase de los paquetes no exportados.</p>
<p>Para mantener la compatibilidad hacia atrás y hacer más sencillo la transición hacía los módulos, algunas librerías puede que ya no tengan mantenimiento, se pueden dar tres tipos de módulos.</p>
<ul>
<li>Módulos con nombre: están compuestos por las librerías que tienen su definición de módulo en el archivo <em>module-info.java</em> y son colocados en el <em>modulepath</em> al iniciar la aplicación. Únicamente leen los módulos que explícitamente se ha indicado en la definición del módulo con la palabra <em>requires</em> y tiene acceso a los paquetes y sus clases exportados de los módulos requeridos.</li>
<li>Módulos automáticos: son las librerías que no tienen una definición de módulo pero que son colocadas en el <em>modulepath</em>. La máquina virtual de Java le asigna un nombre de módulo de forma automática según el nombre de la librería o según la propiedad <em>Automatic-Module-Name</em> del archivo de manifiesto. Leen todos los otros módulos del sistema, los que se encuentren en el <em>modulepath</em> (incluidos todos los otros automáticos) y de la imagen del JDK, y todas las clases del módulo anónimo. Los módulos automáticos son necesarios para que no requerir convertir una librería a un módulo, esto es no requerir convertir a un módulo todo el código ya existente lo cual es un problema ya que muchas librerías ya no tienen mantenimiento. Ya que no tienen una definición de módulo se exportan todos los paquetes.</li>
<li>Módulo anónimo: todas las librerías (incluso las que tienen su definición del módulo) que se colocan el <em>classpath</em> forman el módulo anónimo. Leen todos los módulos del sistema y tienen acceso a todos sus paquetes exportados.</li>
</ul>
<p>Ya se han publicado varios libros que explican detalladamente la modularidad introducida en Java 9. Cualquiera de ellos es una guía completa de la modularidad de Java.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1484225910&amp;linkId=9c7874501bb32fa3318e285022e0207a" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1484227123&amp;linkId=59d96101c25f9c16c4427b8ee9daef1a" title="Amazon" class="lozad"></iframe>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/orden-de-ejecucion-de-las-clausulas-de-las-sentencias-select-de-sql/</id>
        <title>Orden de ejecución de las cláusulas de las sentencias SELECT de SQL</title>
        <updated>2019-06-28T17:00:00+02:00</updated>
        <published>2019-06-28T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/orden-de-ejecucion-de-las-clausulas-de-las-sentencias-select-de-sql/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="206" alt="PostgreSQL" title="PostgreSQL"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/mysql.svg" width="200" height="136" alt="MySql" title="MySql"  class=""></p>
</div>
<p>El lenguaje SQL es un potente lenguaje declarativo usado en las bases de datos relacionales como <a href="https://www.mysql.com/">MySQL</a> o <a href="https://www.postgresql.org/">PostgreSQL</a>. En el lenguaje SQL se declara que datos se quieren recuperar, qué condiciones han de cumplir cumplir y qué funciones se aplican a los datos pero no se define como han de recuperarse los datos, es la base de datos la que decide como guardarlos e interpretando la sentencia SQL la que decide cómo recuperarlos.</p>
<p>El lenguaje SQL se compone de diferentes tipos de sentencias según el tipo de operación, lectura de datos con <em>SELECT</em>, inserción de datos con <em>INSERT</em>, actualización con <em>UPDATE</em> y eliminación con <em>DELETE</em>.</p>
<p>Las sentencias <em>SELECT</em> tienen la siguiente <a href="https://www.postgresql.org/docs/11/sql-select.html">sintaxis en PostgreSQL</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="p">[</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">RECURSIVE</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">with_query</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w"></span><span class="k">SELECT</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ALL</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">DISTINCT</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">output_name</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="n">from_item</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="n">condition</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">GROUP</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">grouping_element</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">HAVING</span><span class="w"> </span><span class="n">condition</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="n">WINDOW</span><span class="w"> </span><span class="n">window_name</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">window_definition</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">UNION</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">INTERSECT</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">EXCEPT</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ALL</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">DISTINCT</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">ORDER</span><span class="w"> </span><span class="k">BY</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ASC</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">DESC</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">USING</span><span class="w"> </span><span class="k">operator</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">NULLS</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">FIRST</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">LAST</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LIMIT</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">count</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">ALL</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">OFFSET</span><span class="w"> </span><span class="k">start</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ROW</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">ROWS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">FETCH</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">FIRST</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">NEXT</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">count</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">ROW</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">ROWS</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="k">ONLY</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">FOR</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="k">UPDATE</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">NO</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="k">UPDATE</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">SHARE</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="k">SHARE</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">OF</span><span class="w"> </span><span class="k">table_name</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">NOWAIT</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">SKIP</span><span class="w"> </span><span class="n">LOCKED</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[...]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="k">where</span><span class="w"> </span><span class="n">from_item</span><span class="w"> </span><span class="n">can</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">one</span><span class="w"> </span><span class="k">of</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">ONLY</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">table_name</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="n">TABLESAMPLE</span><span class="w"> </span><span class="n">sampling_method</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">REPEATABLE</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">seed</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">with_query_name</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">function_name</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="k">ORDINALITY</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">function_name</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_definition</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">function_name</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_definition</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">LATERAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">ROWS</span><span class="w"> </span><span class="k">FROM</span><span class="p">(</span><span class="w"> </span><span class="n">function_name</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="n">argument</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_definition</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">[</span><span class="w"> </span><span class="k">WITH</span><span class="w"> </span><span class="k">ORDINALITY</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">alias</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">column_alias</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">from_item</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">NATURAL</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="n">join_type</span><span class="w"> </span><span class="n">from_item</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ON</span><span class="w"> </span><span class="n">join_condition</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">USING</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">join_column</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="k">and</span><span class="w"> </span><span class="n">grouping_element</span><span class="w"> </span><span class="n">can</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">one</span><span class="w"> </span><span class="k">of</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">expression</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="p">(</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="k">ROLLUP</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="k">CUBE</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="err">{</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">expression</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="err">}</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="k">GROUPING</span><span class="w"> </span><span class="k">SETS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="n">grouping_element</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="k">and</span><span class="w"> </span><span class="n">with_query</span><span class="w"> </span><span class="k">is</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="n">with_query_name</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="k">column_name</span><span class="w"> </span><span class="p">[,</span><span class="w"> </span><span class="p">...]</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="k">select</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">values</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">insert</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">update</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="k">delete</span><span class="w"> </span><span class="p">)</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="k">TABLE</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="k">ONLY</span><span class="w"> </span><span class="p">]</span><span class="w"> </span><span class="k">table_name</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="p">]</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-sql-syntax.sql</span>
    </div>
</div>
<p>La sentencia <em>SELECT</em> se compone de varias cláusulas que se interpretan siguiendo una secuencia de operaciones tal que:</p>
<ol>
<li><em>FROM</em>: obtener los registros de todas las tablas fuentes de dato. Si hay <em>subqueries</em> en la cláusula <em>FROM</em> son evaluadas primero.</li>
<li><em>JOIN</em>: Realizar todas las posibles combinaciones descartando aquellas combinaciones que no cumplen las condiciones <em>JOIN</em> o estableciendo <em>NULL</em> en caso de <em>outer joins</em>.</li>
<li><em>WHERE</em>: Filtrar las combinaciones que cumplen las condiciones de la cláusula <em>WHERE</em>.</li>
<li><em>GROUP BY</em>: Construir los grupos basados en las expresiones de la lista de la cláusulas <em>GROUP BY</em>.</li>
<li><em>HAVING</em>: Filtrar los grupos que cumplen las condiciones de la cláusula <em>HAVING</em>.</li>
<li><em>SELECT</em>: Evaluar las expresiones de la lista <em>SELECT</em> para seleccionar los datos.</li>
<li><em>DISTINCT</em>: Eliminar filas duplicadas si se especifica <em>DISTINCT</em>.</li>
<li><em>UNION, EXCEPT, INTERSECT</em>: Aplicar las operaciones <em>UNION</em>, <em>EXCEPT</em> e <em>INTERSECT</em>.</li>
<li><em>ORDER BY</em>: Ordenar las filas de acuerdo a la cláusula <em>ORDER BY</em>.</li>
<li><em>OFFSET, LIMIT</em>: Descartar los registros de acuerdo <em>OFFSET</em> y <em>LIMIT</em>.</li>
</ol>
<p>Este es el orden general pero el algoritmo del planificador puede optimizar estos pasos realizándose en diferente orden o incluso simultáneamente. Por ejemplo, si se especifica un límite de 1 no es necesario obtener todas las filas de las tablas fuente sino solo una que cumpla la condición <em>WHERE</em>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://msdn.microsoft.com/en-us/library/ms189499.aspx">Logical Processing Order of the SELECT statement</a></li>
<li><a href="https://amzn.to/2Jai732">Libro Learning PostgreSQL 11</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/select.html">Sintaxis de sentencia SELECT en MySQL</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/teses-unitarios-parametrizados-con-junit/</id>
        <title>Teses unitarios parametrizados con JUnit</title>
        <updated>2019-06-07T17:00:00+02:00</updated>
        <published>2019-06-07T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/teses-unitarios-parametrizados-con-junit/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Hay múltiples lenguajes y librerías donde cada una publica nuevas versiones. Una vez elegida una esa decisión no tiene que ser para siempre si las circunstancias de un proyecto cambian o una nueva versión incorpora las funcionalidades por las que se eligió otra. Si se reconsideran de nuevo el conjunto de todos los parámetros la decisión puede ser distinta. Esto me ha ocurrido al evaluar de nuevo JUnit comparándolo con Spock, teniendo en cuenta que en JUnit 5 han incorporado los teses parametrizados y el lenguaje que utiliza cada una de ellas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/junit.png" width="200" height="200" alt="JUnit" title="JUnit"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En mis preferencias de herramientas que elegiría para un proyecto basado en la plataforma Java estaba <a href="https://code.google.com/p/spock/">Spock</a>, por la legibilidad de los teses con su lenguaje específico de dominio  o DSL con sus diferentes secciones <em>given</em>, <em>when</em>, <em>then</em>. Otro motivo era la posibilidad de ejercitar un mismo test pero con diferentes parámetros para ejecutar todas las condiciones del sujeto bajo prueba con la sección <em>where</em> y las posibilidades de <em>mocking</em> incorporadas. Pero Spock usa el lenguaje <a href="https://www.groovy-lang.org/">Groovy</a>. Es menos verboso, es dinámico pero que no posee igual la asistencia de código de los IDEs y por su naturaleza dinámica con posibilidad de errores de compilación no detectados hasta en tiempo de ejecución. En mis preferencias está el lenguaje Java así que he revisado si estás características de Spock son ofrecidas por <a href="https://junit.org/junit5/">JUnit</a> desde la última vez que lo use.</p>
<p>El primer motivo de usar Spock sobre la legibilidad del test se puede suplir añadiendo un comentario de línea con la sección. El segundo motivo es que en JUnit también se pueden crear teses parametrizados con varios casos de prueba. Para los teses parametrizados se puede usar la anotación <a href="https://junit.org/junit5/docs/current/api/org/junit/jupiter/params/ParameterizedTest.html">@ParameterizedTest</a> con una serie de valores que en el test se reciben como un parámetro.</p>
<p>Aquí se compara el mismo test usando Spock y luego JUnit.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="kn">import</span> <span class="nn">spock.lang.Specification</span>&#10;&#10;<span class="kd">class</span> <span class="nc">StringLengthCalculator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="nf">length</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">string</span><span class="o">.</span><span class="na">length</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kd">class</span> <span class="nc">StringLengthCalculatorSpock</span> <span class="kd">extends</span> <span class="n">Specification</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="s2">&#34;calculate string length&#34;</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">given:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringLengthCalculator</span><span class="o">()</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">expect:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">result</span> <span class="o">=</span> <span class="n">calculator</span><span class="o">.</span><span class="na">length</span><span class="o">(</span><span class="n">a</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">then:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expected</span> <span class="o">==</span> <span class="n">result</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">where:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">a</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">|</span> <span class="n">expected</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;&#34;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">|</span> <span class="mi">0</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;java&#34;</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">|</span> <span class="mi">4</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;groovy&#34;</span>  <span class="o">|</span> <span class="mi">5</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;go&#34;</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">|</span> <span class="mi">2</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>StringLengthCalculatorSpecification.groovy</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Assertions</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.DisplayName</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.params.provider.Arguments</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringLengthCalculator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">length</span><span class="o">(</span><span class="n">String</span> <span class="n">string</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">string</span><span class="o">.</span><span class="na">length</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringLengthCalculatorTest</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ParameterizedTest</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@DisplayName</span><span class="o">(</span><span class="s">&#34;calculate string length&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ValueSource</span><span class="o">(</span><span class="n">strings</span> <span class="o">=</span> <span class="o">{</span> <span class="s">&#34;&#34;</span><span class="o">,</span> <span class="s">&#34;java&#34;</span><span class="o">,</span> <span class="s">&#34;groovy&#34;</span><span class="o">,</span> <span class="s">&#34;go&#34;</span> <span class="o">})</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">lengthOfStrings</span><span class="o">(</span><span class="n">String</span> <span class="n">a</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">StringLengthCalculator</span> <span class="n">calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringLengthCalculator</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// expect&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">calculator</span><span class="o">.</span><span class="na">length</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Assertions</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="n">expected</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>StringLengthCalculatorTest.java</span>
    </div>
</div>
<p>O si la parametrización es más compleja usando un método que devuelve una lista de parámetros en Junit.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="kn">import</span> <span class="nn">spock.lang.Specification</span>&#10;&#10;<span class="kd">class</span> <span class="nc">Calculator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kd">class</span> <span class="nc">CalculatorSpock</span> <span class="kd">extends</span> <span class="n">Specification</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="s2">&#34;calculate sum&#34;</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">given:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculator</span><span class="o">()</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">expect:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">result</span> <span class="o">=</span> <span class="n">calculator</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">then:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">expected</span> <span class="o">==</span> <span class="n">result</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nl">where:</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">a</span> <span class="o">|</span>  <span class="n">b</span> <span class="o">|</span> <span class="n">expected</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="mi">1</span> <span class="o">|</span>  <span class="mi">3</span> <span class="o">|</span> <span class="mi">4</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="mi">2</span> <span class="o">|</span> <span class="o">-</span><span class="mi">1</span> <span class="o">|</span> <span class="mi">1</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="mi">0</span> <span class="o">|</span>  <span class="mi">6</span> <span class="o">|</span> <span class="mi">6</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CalculatorSpecification.groovy</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Assertions</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.DisplayName</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.Test</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Calculator</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CalculatorTest</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@ParameterizedTest</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@DisplayName</span><span class="o">(</span><span class="s">&#34;calculate sum&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">lengthOfStrings</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">,</span> <span class="kt">int</span> <span class="n">expected</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// given&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Calculator</span> <span class="n">calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Calculator</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// when&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="n">calculator</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// then&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Assertions</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="n">expected</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">static</span> <span class="n">Stream</span><span class="o">&lt;</span><span class="n">Arguments</span><span class="o">&gt;</span> <span class="nf">lengthOfStrings</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Stream</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Arguments</span><span class="o">.</span><span class="na">arguments</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">3</span><span class="o">,</span> <span class="n">4</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Arguments</span><span class="o">.</span><span class="na">arguments</span><span class="o">(</span><span class="n">2</span><span class="o">,</span> <span class="o">-</span><span class="n">1</span><span class="o">,</span> <span class="n">1</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Arguments</span><span class="o">.</span><span class="na">arguments</span><span class="o">(</span><span class="n">0</span><span class="o">,</span> <span class="n">6</span><span class="o">,</span> <span class="n">6</span><span class="o">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>CalculatorTest.java</span>
    </div>
</div>
<p>Con estas posibilidades de JUnit y para hacer <em>mocking</em> con <a href="https://site.mockito.org/">Mockito</a> realmente los dos motivos que tenía para usar Spock no son imprescindibles además de disponer de un lenguaje con buena asistencia de código en los IDEs. También para los teses igualmente se aplican las <a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">10 razones que tengo para seguir usando Java</a>.</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/implementar-la-paginacion-eficientemente-en-consultas-sql-con-seek/</id>
        <title>Implementar la paginación eficientemente en consultas SQL con seek</title>
        <updated>2019-05-31T18:00:00+02:00</updated>
        <published>2019-05-31T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/implementar-la-paginacion-eficientemente-en-consultas-sql-con-seek/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las aplicaciones que muestran listados probablemente necesiten mostrarlos paginados. Sin embargo, implementar la paginación correctamente para que sea eficiente no pasa por emplear las clausulas <em>limit</em> ni <em>offset</em> que habitualmente se utilizan sino con <em>seek</em>. Además de que <em>limit</em> y <em>offset</em> da lugar a resultados no deseados si entre obtención de página y página se insertan filas en páginas anteriores.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/jooq.png" width="200" height="200" alt="jOOQ" title="jOOQ"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La paginación habitualmente se implementa con las palabras reservadas <em>limit</em> y <em>offset</em> del lenguaje SQL pero esto es ineficiente ya que para llegar los resultados de las últimas páginas la base de datos ha de recuperar antes todos los resultados anteriores. Cuando hay varios cientos de miles o millones de filas en una tabla esto es ineficiente y hace que las consultas sean lentas y añadan una importante carga al servidor de base de datos que al final afecta al rendimiento de la aplicación o su capacidad para atender a gran número de peticiones.</p>
<p>Además del rendimiento, otro problema de la paginación con <em>limit</em> y <em>offset</em> es que si se insertan filas en una página anterior mientras se están recorriendo los resultados, uno o varios resultados al avanzar por las páginas en la típica tabla de resultados en una aplicación web podría aparecer dos veces, en un proceso automatizado sería aún peor ya que un resultado podría procesarse dos veces.</p>
<p>La paginación con <em>limit</em> y <em>offset</em> permite ir a una página directamente en una búsqueda pero en los casos que hay miles de resultados realmente a un usuario no le interesa ir a una determinada página cuando hay cientos de páginas, en un proceso automatizado ir a una página en concreto tampoco suele ser un requerimiento.</p>
<p><a href="https://www.jooq.org/">jOOQ</a> con la cláusula <a href="https://www.jooq.org/javadoc/latest/org/jooq/SelectSeekStep1.html">seek</a> permite hacer la paginación eficiente de una forma cómoda. La técnica se basa en ordenar los resultados por unas determinadas columnas y filtrar por condición <em>where</em> sobre las mismas columnas los resultados anteriores, los valores por los que se filtra en la condición son los obtenidos de la última página.</p>
<p>Haciendo <em>seek</em> la paginación es más eficiente ya que la base de datos no necesita recuperar los datos de las páginas anteriores ya que los descarta utilizando la cláusula <em>where</em> que al final es en lo que se traduce la clausula <em>seek</em>. Y se elimina el problema de que se inserten datos en páginas anteriores y alguno se pudiese aparecer dos veces en los resultados ya que manteniendo la ordenación de la consulta si se insertan filas en páginas anteriores no afectarán a las páginas siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">import</span> <span class="nn">org.jooq.DSLContext</span><span class="o">;</span>&#10;<span class="o">...</span>&#10;<span class="kd">private</span> <span class="n">DSLContext</span> <span class="n">context</span><span class="o">;</span>&#10;<span class="o">...</span>&#10;<span class="n">context</span><span class="o">.</span><span class="na">selectFrom</span><span class="o">(</span><span class="n">Tables</span><span class="o">.</span><span class="na">PRODUCTO</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">orderBy</span><span class="o">(</span><span class="n">PRODUCTO</span><span class="o">.</span><span class="na">CANTIDAD</span><span class="o">,</span> <span class="n">PRODUCTO</span><span class="o">.</span><span class="na">ID</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">seek</span><span class="o">(</span><span class="n">3l</span><span class="o">,</span> <span class="n">2l</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">limit</span><span class="o">(</span><span class="n">10</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">fetchInto</span><span class="o">(</span><span class="n">Producto</span><span class="o">.</span><span class="na">class</span><span class="o">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Seek.java</span>
    </div>
</div>
<p>La SQL generada por jOOQ es la siguiente donde la clausula <em>seek</em> se añade como una condición en la cláusula <em>where</em>. El campo de la clausula <em>seek</em> coincide con el campo del criterio de ordenación, el operador mayor que en la condición coincide también con el orden ascendente del <em>order by</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Sql" data-lang="Sql"><span class="w">   </span><span class="k">select</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;ID&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;NOMBRE&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;DESCRIPCION&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;CANTIDAD&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;FECHA&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="k">from</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="k">where</span><span class="w"> </span><span class="p">(</span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;CANTIDAD&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;ID&#34;</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="p">(</span><span class="k">cast</span><span class="p">(</span><span class="o">?</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nb">bigint</span><span class="p">),</span><span class="w"> </span><span class="k">cast</span><span class="p">(</span><span class="o">?</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nb">bigint</span><span class="p">))</span><span class="w">&#10;</span><span class="w"> </span><span class="k">order</span><span class="w"> </span><span class="k">by</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;CANTIDAD&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;PRODUCTO&#34;</span><span class="p">.</span><span class="s2">&#34;ID&#34;</span><span class="w"> </span><span class="k">limit</span><span class="w"> </span><span class="o">?</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Seek.sql</span>
    </div>
</div>
<p>Para que el <em>seek</em> sea correcto los valores de las filas para los campos que forman parte del <em>seek</em> han de ser únicos por eso entre los campos de los ejemplos se incluye el identificativo de la fila, que siempre se incluye como último campo si hubiese más criterios de ordenación y valores para el <em>seek</em>.</p>
<p>Si además se tiene un índice para los campos que forman parte del <em>seek</em> el rendimiento será muy alto y la diferencia entre la primera y la última página mínimo, además se puede considerar independiente del número de filas de la tabla. Son varias las ventajas perdiendo solo la capacidad de navegar a cierta página pero en la mayoría de los casos esto es asumible.</p>
<p>En los siguientes interesantes artículos se comenta detalladamente como implementar la paginación eficientemente y se dan más detalles.</p>
<ul>
<li><a href="https://wiki.postgresql.org/images/3/35/Pagination_Done_the_PostgreSQL_Way.pdf">Pagination Done the PostgreSQL Way</a></li>
<li><a href="https://blog.jooq.org/2016/08/10/why-most-programmers-get-pagination-wrong/">Why Most Programmers Get Pagination Wrong</a></li>
<li><a href="https://dba.stackexchange.com/questions/73175/pagination-with-postgresql-9-3-counting-number-of-pages">Pagination with PostgreSQL 9.3: counting number of pages</a></li>
</ul>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/</id>
        <title>Registro y descubrimiento de servicios en contenedores de Docker con Consul y Registrator</title>
        <updated>2019-05-26T11:30:00+02:00</updated>
        <published>2019-05-26T11:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En los microservicios se hace necesario un servicio de registro y descubrimiento como Eureka o Consul que permita conocer la ubicación de las instancias en cada momento. Las instancias de los servicios se pueden registrar ellas mismas o esta tarea se puede delegar en una en otro servicio. Al usar contenedores de Docker una herramienta que permite delegar el registro y desregistro en Consul de los servicios es GliderLabs Registrator.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="278" alt="HashiCorp Consul" title="HashiCorp Consul"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>El registro y descubrimiento de servicios permite a los servicios registrase y a los clientes descubrir la ubicación de otros servicios, la ubicación consiste en la dirección IP y el puerto en el que contactarles. Dado la naturaleza efímera de los servicios donde nuevas instancias de servicios se inician y se detienen en diferentes máquinas y puertos el servicio de descubrimiento es esencial.</p>
<p>La funcionalidad de registro y descubrimiento consiste en dos partes, por un lado cuando se inicia una instancia de un servicio se registra su ubicación en el servicio de registro y descubrimiento y por otro lado los clientes cuando requieren una instancia de un servicio la buscan en el servicio de descubrimiento.</p>
<p>El registro en el servicio de descubrimiento puede hacerse de dos formas, que sea el propio servicio el que se registra en el servicio de descubrimiento o que se sea otro servicio el que lo registra. Para el primer caso escribí un artículo con <a href="https://www.consul.io/">Consul</a> como servicio de descubrimiento en una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> que se registra al iniciarse. La ventaja es que es autosuficiente pero adquiere la tarea de autoregistrarse. Por el contrario delegar la tarea de registro permite extraerla de los servicios y ofrecer esa funcionalidad por un servicio con esa misión específicamente.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul</a></li>
</ul>
<p>En este artículo se usa <a href="https://github.com/gliderlabs/registrator">GliderLabs Registrator</a> como servicio que se encarga de registrar en un servicio de descubrimiento como Consul los servicios que se inicien en <a href="https://www.docker.com/">Docker</a>, aunque soporta otros como <a href="https://etcd.io/">etcd</a>.</p>
<p>Registrator es un contenedor de Docker, su funcionamiento es escuchar los eventos del demonio de Docker y monitorizar cuando se inician nuevos contenedores o cuando se paran. La monitorización la hace a través del <em>socket</em> del servicio de Docker, para lo que hay que montar un volumen en este contenedor con el archivo <em>/var/run/docker.sock</em> del <em>host</em>.</p>
<p>Primero se inicia el servicio de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<p>Luego se inicia el contenedor Registrator indicando la ubicación con dirección IP y puerto del servicio de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm --name<span class="o">=</span>registrator --net<span class="o">=</span>host --volume<span class="o">=</span>/var/run/docker.sock:/tmp/docker.sock gliderlabs/registrator:latest consul://localhost:8500&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-registrator.sh</span>
    </div>
</div>
<p>Iniciados estos dos servicios en la interfaz de estado de Consul se observa que no hay ningún servicio pero cuando se inicie un nuevo contenedor será registrado en Consul por Registrator.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul_hudf2f8b03877264bacf83a564e5686ede_36482_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dirección"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul_hudf2f8b03877264bacf83a564e5686ede_36482_300x200_fit_box_3.png" width="287" height="200" alt="Dirección" title="Dirección"  class="lozad "></a></p>
</figure>
</div>
<p>En este caso se utiliza como servicio una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a>. Dado que el puerto en el que esté disponible el servicio de PostgreSQL es indiferente al utilizar un servicio de registro y descubrimiento se indica el <em>-p</em> sin indicar el puerto del <em>host</em>, de este modo Docker le asigna un puerto público aleatorio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm --name postgres -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>user -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>password -e <span class="nv">POSTGRES_DB</span><span class="o">=</span>database -p <span class="m">5432</span> postgres:alpine&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-postgres.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NAMES&#10;cb7602605725&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">54</span> seconds ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">53</span> seconds&nbsp;&nbsp;&nbsp;&nbsp;   0.0.0.0:32777-&gt;5432/tcp   postgres&#10;d286341148cb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gliderlabs/registrator:latest   <span class="s2">&#34;/bin/registrator co…&#34;</span>   About a minute ago   Up About a minute&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registrator</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps.sh</span>
    </div>
</div>
<p>En la salida del contenedor de Registrator se emite una traza indicando que el servicio de PostgreSQL ha sido registrado en Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">2019/05/26 11:05:29 Starting registrator v7 ...&#10;2019/05/26 11:05:29 Using consul adapter: consul://localhost:8500&#10;2019/05/26 11:05:29 Connecting to backend (0/0)&#10;2019/05/26 11:05:29 consul: current leader  127.0.0.1:8300&#10;2019/05/26 11:05:29 Listening for Docker events ...&#10;2019/05/26 11:05:29 Syncing services on 1 containers&#10;2019/05/26 11:05:29 ignored: d286341148cb no published ports&#10;2019/05/26 11:05:50 added: cb7602605725 archlinux:postgres:5432</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-registrator.out</span>
    </div>
</div>
<p>Una vez iniciado el servicio de postgres en la consola de Consul se muestra con su dirección y puerto en el que se encuentra, en el contenedor utiliza su puerto por defecto <em>5432</em> pero hacia el exterior en este caso al no haber especificado uno Docker le asigna un puerto aleatorio en este caso el <em>32777</em>. Este puerto aleatorio es con el que los clientes acceden a la base de datos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-1_hu5336dadbc35299bcca8969f84d373cf0_39850_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Servicio de PostgreSQL registrado en Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-1_hu5336dadbc35299bcca8969f84d373cf0_39850_300x200_fit_box_3.png" width="300" height="165" alt="Servicio de PostgreSQL registrado en Consul" title="Servicio de PostgreSQL registrado en Consul"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-2_huf0df6f6a3d2138a93d9a38f4927788b0_43545_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Servicio de PostgreSQL registrado en Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-2_huf0df6f6a3d2138a93d9a38f4927788b0_43545_300x200_fit_box_3.png" width="300" height="165" alt="Servicio de PostgreSQL registrado en Consul" title="Servicio de PostgreSQL registrado en Consul"  class="lozad "></a></p>
<figcaption>Servicio de postgres registrado en Consul por Registrator</figcaption>
</figure>
</div>
<p>En vez de iniciar los servicios individualmente con comandos de Docker creando un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> con la definición de todos los contenedores se facilita iniciar todos los contenedores con un comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker-compose up&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.7&#34;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">consul</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">consul:latest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">consul</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;consul&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;agent&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;-dev&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;-ui&#34;</span><span class="p">]</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">registrator</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">gliderlabs/registrator:latest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">registrator</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">/var/run/docker.sock:/tmp/docker.sock</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">entrypoint</span><span class="p">:</span><span class="w"> </span><span class="l">/bin/registrator consul://localhost:8500</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">depends_on</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">consul</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">postgres</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres:alpine</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">postgres</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;5432&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_USER=user</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_PASSWORD=password</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_DB=database</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">depends_on</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">registrator</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>El proyecto de <a href="https://projects.spring.io/spring-cloud/">Spring Cloud</a> ofrece soporte para ambas tareas de registrar y descubrir servicios, aunque perfectamente la tarea de registro se puede delegar como en este caso a Registrator y utilizar en los servicios de Spring Boot únicamente la parte de descubrimiento.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Registrator">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-compose-up.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/</id>
        <title>Log de sentencias SQL, sentencias lentas y otra información en jOOQ</title>
        <updated>2019-05-24T18:00:00+02:00</updated>
        <published>2019-05-24T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Algunas de las causas del bajo rendimiento de una aplicación que utiliza una base de datos son el número de sentencias que se realizan junto con las sentencias lentas por su coste de ejecución. Cada ejecución de una sentencia significa una comunicación por la red y ejecutar muchas de ellas significa un considerable y perceptible tiempo para el usuario. Por ello es conveniente saber que sentencias se ejecutan, si hay algún problema de 1+N o sentencias innecesarias que se repiten. Un <em>log</em> de las sentencias que se ejecutan es muy útil para detectar ineficiencias en la aplicación y corregirlas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/jooq.png" width="200" height="200" alt="jOOQ" title="jOOQ"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>La librería <a href="https://www.jooq.org/">jOOQ</a> devuelve al lenguaje SQL de consultas para bases de datos relacionales al primer plano en una aplicación Java. En vez de crear una capa de abstracción como realiza la popular librería <a href="https://hibernate.org/">Hibernate</a> del modelo relacional al modelo orientado a objetos de Java permite construir con un DSL mediante su API fluída avanzadas sentencias SQL que soportan las versiones recientes de <a href="https://www.postgresql.org/">PostgreSQL</a> y <a href="https://www.mysql.com/">MySQL</a>.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/alternativa-a-hibernate-u-orm-y-ejemplo-de-jooq/">Alternativa a Hibernate u ORM y ejemplo de jOOQ</a></li>
</ul>
<p>En Hibernate la configuración de <em>statistics</em>, el <em>logger</em> <em>org.hibernate.SQL</em> y con el parámetro <em>show_sql</em> permiten visualizar que sentencias SQL se están lanzando, útil para conocer si algún <a href="https://picodotdev.github.io/blog-bitix/2014/05/detectar-problema-n-plus-1-y-obtener-estadisticas-de-hibernate-con-grails/">problema de 1+N al navegar relaciones</a> que ocasionalmente se producen si no son tenidas en cuenta. Además de que sentencias se están lanzando es también interesante conocer que tiempo de ejecución está tomando cada sentencia para conseguir que el rendimiento de la aplicación no sea lento, para detectar sentencias lentas.</p>
<p>Usando <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> y la dependencia de jOOQ hay que proporcionar una instancia que implemente la interfaz <a href="https://www.jooq.org/javadoc/latest/org/jooq/ExecuteListener.html">ExecuteListener</a> o crear una instancia de <a href="https://www.jooq.org/javadoc/latest/org/jooq/impl/DefaultExecuteListener.html">DefaultExecuteListener</a>. Esta clase contiene numerosos métodos que permiten conocer y realizar acciones, en este caso emitir trazas. Dos de los métodos son <a href="https://www.jooq.org/javadoc/latest/org/jooq/impl/DefaultExecuteListener.html#executeStart-org.jooq.ExecuteContext-">executeStart()</a> y <a href="https://www.jooq.org/javadoc/latest/org/jooq/impl/DefaultExecuteListener.html#executeEnd-org.jooq.ExecuteContext-">executeEnd()</a> invocados por jOOQ antes y después de cada sentencia que lanza. Usando <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/System.html#nanoTime%28%29">System.nanoTime()</a> se mide el tiempo de ejecución.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Configuration</span>&#10;<span class="nd">@ComponentScan</span><span class="o">({</span> <span class="s">&#34;io.github.picodotdev.plugintapestry&#34;</span> <span class="o">})</span>&#10;<span class="nd">@EnableTransactionManagement</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppConfiguration</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span><span class="o">(</span><span class="n">destroyMethod</span> <span class="o">=</span> <span class="s">&#34;close&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">DataSource</span> <span class="nf">dataSource</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BasicDataSource</span> <span class="n">ds</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BasicDataSource</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ds</span><span class="o">.</span><span class="na">setDriverClassName</span><span class="o">(</span><span class="n">Driver</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getCanonicalName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ds</span><span class="o">.</span><span class="na">setUrl</span><span class="o">(</span><span class="s">&#34;jdbc:h2:./misc/database/app&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ds</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">&#34;sa&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ds</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">&#34;sa&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">ds</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ConnectionProvider</span> <span class="nf">connectionProvider</span><span class="o">(</span><span class="n">DataSource</span> <span class="n">dataSource</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">DataSourceConnectionProvider</span><span class="o">(</span><span class="n">dataSource</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ExecuteListenerProvider</span> <span class="nf">executeListenerProvider</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">ExecuteListenerProvider</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ExecuteListener</span> <span class="nf">provide</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">JooqExecuteListener</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">org</span><span class="o">.</span><span class="na">jooq</span><span class="o">.</span><span class="na">Configuration</span> <span class="nf">config</span><span class="o">(</span><span class="n">ConnectionProvider</span> <span class="n">connectionProvider</span><span class="o">,</span> <span class="n">ExecuteListenerProvider</span> <span class="n">executeListenerProvider</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultConfiguration</span> <span class="n">config</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultConfiguration</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">config</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">connectionProvider</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">config</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">SQLDialect</span><span class="o">.</span><span class="na">H2</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">config</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">executeListenerProvider</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">config</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">DSLContext</span> <span class="nf">dsl</span><span class="o">(</span><span class="n">org</span><span class="o">.</span><span class="na">jooq</span><span class="o">.</span><span class="na">Configuration</span> <span class="n">config</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">DSL</span><span class="o">.</span><span class="na">using</span><span class="o">(</span><span class="n">config</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppConfiguration.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.misc</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.LogManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.logging.log4j.Logger</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.jooq.ExecuteContext</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.jooq.impl.DefaultExecuteListener</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.math.MathContext</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JooqExecuteListener</span> <span class="kd">extends</span> <span class="n">DefaultExecuteListener</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="n">LogManager</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="n">JooqExecuteListener</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">start</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">long</span> <span class="n">end</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">executeStart</span><span class="o">(</span><span class="n">ExecuteContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">start</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">executeEnd</span><span class="o">(</span><span class="n">ExecuteContext</span> <span class="n">ctx</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">end</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">nanoTime</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&#34;{} ({}ms)&#34;</span><span class="o">,</span> <span class="n">ctx</span><span class="o">.</span><span class="na">sql</span><span class="o">(),</span> <span class="n">getTime</span><span class="o">(</span><span class="n">start</span><span class="o">,</span> <span class="n">end</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getTime</span><span class="o">(</span><span class="kt">long</span> <span class="n">start</span><span class="o">,</span> <span class="kt">long</span> <span class="n">end</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">end</span> <span class="o">-</span> <span class="n">start</span><span class="o">,</span> <span class="k">new</span> <span class="n">MathContext</span><span class="o">(</span><span class="n">4</span><span class="o">)).</span><span class="na">divide</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1000000&#34;</span><span class="o">)).</span><span class="na">toString</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JooqExecuteListener.java</span>
    </div>
</div>
<p>En las siguientes trazas de ejecución de sentencias se observa una inserción de un registro (1), una posterior muestra del listado para lo que se realizan dos sentencias una que cuenta el número de elementos en la tabla con un <em>select count(*)</em> que junto con el número de elementos por página permite conocer cuantas páginas hay y un <em>select</em> con un <em>limit ?</em> para recuperar los datos de la primera página (2). Con el suficiente número de elementos en la tabla se hace una consulta con un <em>limit ?</em> y un <em>offset ?</em> para los elementos de una página posterior a la primera (3). Al eliminar un elemento de la tabla se ejecuta una sentencia <em>delete</em> con el identificativo de la fila a eliminar en la clausula <em>where</em> (4), finalmente si se utiliza el botón <em>Eliminar todos</em> se elimina todas las filas con otra sentencia <em>delete</em> pero sin especificar la clausula <em>where</em> (5). En cada sentencia se muestra el tiempo que ha tardado.</p>
<p>Estas sentencias se ejecutan en unos pocos milisegundos, en una aplicación con tablas de algún millón de registros, varios <em>joins</em>, condiciones <em>where</em> complejas, ordenación y paginación las sentencias SQL pueden tardar varias segundos y decenas de segundos, conocer sus tiempos de ejecución es importante.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">// (1)&#10;2019-05-24 19:00:00,829 ... INFO  ...JooqExecuteListener insert into &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; (&#34;ID&#34;, &#34;NOMBRE&#34;, &#34;DESCRIPCION&#34;, &#34;CANTIDAD&#34;, &#34;FECHA&#34;) values (cast(? as bigint), cast(? as varchar), cast(? as varchar), cast(? as bigint), cast(? as timestamp)) (1.887ms)&#10;&#10;// (2)&#10;2019-05-24 19:01:00,843 ... INFO  ...JooqExecuteListener select count(*) from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; (0.1474ms)&#10;2019-05-24 19:01:00,879 ... INFO  ...JooqExecuteListener select &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;ID&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;NOMBRE&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;DESCRIPCION&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;CANTIDAD&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;FECHA&#34; from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; limit ? (0.2915ms)&#10;&#10;// (3)&#10;2019-05-24 19:02:00,289 ... INFO  ...JooqExecuteListener select count(*) from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; (0.1092ms)&#10;2019-05-24 19:02:00,291 ... INFO  ...JooqExecuteListener select &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;ID&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;NOMBRE&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;DESCRIPCION&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;CANTIDAD&#34;, &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;FECHA&#34; from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; limit ? offset ? (0.1623ms)&#10;&#10;// (4)&#10;2019-05-24 19:03:00,224 ... INFO  ...JooqExecuteListener delete from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; where &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34;.&#34;ID&#34; = cast(? as bigint) (1.19ms)&#10;&#10;// (5)&#10;2019-05-24 19:04:00,037 ... INFO  ...JooqExecuteListener delete from &#34;PLUGINTAPESTRY&#34;.&#34;PRODUCTO&#34; (0.391ms)&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/images/pagina-listado_hu3ecc29f36cbb587ee4f6a50927c3fc02_37205_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Listado de elementos"><img src="https://picodotdev.github.io/blog-bitix/2019/05/log-de-sentencias-sql-sentencias-lentas-y-otra-informacion-en-jooq/images/pagina-listado_hu3ecc29f36cbb587ee4f6a50927c3fc02_37205_650x450_fit_box_3.png" width="611" height="450" alt="Listado de elementos" title="Listado de elementos"  class="lozad "></a></p>
<figcaption>Listado de elementos</figcaption>
</figure>
</div>
<p>La clase <a href="https://www.jooq.org/javadoc/latest/org/jooq/ExecuteContext.html">ExecuteContext</a> proporciona numerosa información sobre la ejecución de la sentencia como número de filas afectadas, si se ha producido una excepción, el tipo de sentencia (<em>READ</em>, <em>WRITE</em>, <em>DDL</em>, <em>BATCH</em>, <em>ROUTINE</em> u <em>OTHER</em>), sentencias <em>batch</em> u obtener los parámetros a través del objeto <a href="https://www.jooq.org/javadoc/latest/org/jooq/Query.html">Query</a>.</p>
<p>Simplemente mostrando las trazas de sentencias me ha permitido detectar que en el ejemplo se estaba realizando una pequeña ineficiencia. La sentencia <em>select count(*)</em> se lanzaba dos veces en la página de listado, una al querer saber si hay alguna fila y otra usada por el <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Grid.html">componente Grid</a> de <a href="https://tapestry.apache.org/">Tapestry</a>. Para resolverlo se cachea el resultado en la clase anónima <em>JooqGridDataSource</em> con el siguiente código.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.pages.admin</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProductoAdmin</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;	<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">hasProductos</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="n">source</span><span class="o">.</span><span class="na">getAvailableRows</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">0</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;	<span class="kd">private</span> <span class="kt">void</span> <span class="nf">setModo</span><span class="o">(</span><span class="n">Modo</span> <span class="n">modo</span><span class="o">,</span> <span class="n">Producto</span> <span class="n">producto</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">switch</span> <span class="o">(</span><span class="n">modo</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;			<span class="k">case</span> <span class="n">LISTA</span><span class="o">:</span>&#10;				<span class="k">this</span><span class="o">.</span><span class="na">producto</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;				<span class="k">this</span><span class="o">.</span><span class="na">source</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JooqGridDataSource</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">Producto</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>&#10;&#10;					<span class="kd">private</span> <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="o">-</span><span class="n">1</span><span class="o">;</span>&#10;					<span class="kd">private</span> <span class="n">List</span> <span class="n">list</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;&#10;					<span class="nd">@Override</span>&#10;					<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getAvailableRows</span><span class="o">()</span> <span class="o">{</span>&#10;						<span class="k">if</span> <span class="o">(</span><span class="n">count</span> <span class="o">==</span> <span class="o">-</span><span class="n">1</span><span class="o">)</span> <span class="o">{</span>&#10;							<span class="n">count</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">dao</span><span class="o">.</span><span class="na">countAll</span><span class="o">();</span>&#10;						<span class="o">}</span>&#10;						<span class="k">return</span> <span class="n">count</span><span class="o">;</span>&#10;					<span class="o">}</span>&#10;&#10;					<span class="nd">@Override</span>&#10;					<span class="kd">public</span> <span class="n">List</span> <span class="nf">find</span><span class="o">(</span><span class="n">Pagination</span> <span class="n">pagination</span><span class="o">)</span> <span class="o">{</span>&#10;						<span class="k">if</span> <span class="o">(</span><span class="n">list</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;							<span class="n">list</span> <span class="o">=</span> <span class="n">dao</span><span class="o">.</span><span class="na">findAll</span><span class="o">(</span><span class="n">pagination</span><span class="o">);</span>&#10;						<span class="o">}</span>&#10;						<span class="k">return</span> <span class="n">list</span><span class="o">;</span>&#10;					<span class="o">}</span>&#10;				<span class="o">};</span>&#10;				<span class="k">break</span><span class="o">;</span>&#10;&#10;		<span class="o">}</span>&#10;		<span class="k">this</span><span class="o">.</span><span class="na">modo</span> <span class="o">=</span> <span class="n">modo</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProductoAdmin.java</span>
    </div>
</div>
<p>Las bases de datos MySQL y PostgreSQL también ofrecen la posibilidad de <a href="https://picodotdev.github.io/blog-bitix/2019/02/log-de-sqls-y-de-sqls-lentas-en-myql-y-postgresql/">emitir en las sentencias en un <em>log</em></a> incluidas las sentencias lentas. Otra posibilidad es <a href="https://picodotdev.github.io/blog-bitix/2018/11/formatear-con-color-sentencias-sql-o-codigo-fuente-en-la-terminal-con-java-y-jansi/">resaltar la sintaxis de las sentencias en la salida a la terminal</a> para una mejor lectura dando color a las palabras claves.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/</id>
        <title>Combinaciones de teclado en HTML, JavaScript y páginas web</title>
        <updated>2019-05-19T09:00:00+02:00</updated>
        <published>2019-05-19T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En las páginas y aplicaciones web también es posible utilizar combinaciones de teclas para proporcionar acceso rápido a funciones usadas frecuentemente. Utilizando la propiedad global <em>accesskey</em> para los campos de texto la acción es ubicar el foco en el campo y para los botones realizar la acción de clic. Los <em>listeners</em> como <em>onkeydown</em> permiten conocer que teclas modificadoras como <kbd>Ctrl</kbd>, <kbd>Shift</kbd> y <kbd>Alt</kbd> se han pulsado al mismo tiempo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/javascript.svg" width="200" height="200" alt="JavaScript" title="JavaScript"  class=""></p>
</div>
<p>En las aplicaciones de escritorio es habitual usar atajos de teclado o combinaciones de teclas para realizar acciones sin necesidad del ratón y sin requerir levantar las manos del teclado. Estos atajos de teclado permiten ahorrar tiempo al realizar acciones habituales ya que conociendo y usando la combinación de teclas es mucho más rápido que usar el ratón. Los usuarios que trabajan con una aplicación gran cantidad de tiempo les facilita la tarea. En las aplicaciones web ya no es tan habitual encontrar asignaciones de combinación de teclas pero también se pueden emplear y son igual de útiles.</p>
<p>La forma de utilizar combinaciones de teclas en una página web es haciendo uso de los eventos <em>onKeyDown</em> y <em>onKeyUp</em> o el <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey">atributo global <em>accesskey</em></a> que puede ser empleado en cualquier elemento aunque dependiendo del tipo de elemento el comportamiento puede ser distinto. El <em>listener</em> del evento recibe como argumento un objeto que representa el evento, entre la información que contiene está la tecla pulsada y las teclas de control adicionales pulsadas al mismo tiempo.</p>
<p>En este ejemplo se captura la combinación de teclas <kbd>Ctrl + Shift + s</kbd> a nivel de página que muestra una ventana emergente utilizando la función <em>alert()</em> de JavaScript. El <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent">objeto del evento</a> que se recibe como parámetro del <em>listener</em> posee las propiedades <em>ctrlKey</em>, <em>shiftKey</em> y <em>altKey</em> con las que determinar además de la tecla pulsada las teclas modificadoras adicionales pulsadas al mismo tiempo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Key combinations test<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://code.jquery.com/jquery-3.3.1.min.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Press Ctrl + Shift + s<span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;&lt;</span><span class="nt">br</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text&#34;</span> <span class="na">accesskey</span><span class="o">=</span><span class="s">&#34;t&#34;</span><span class="p">&gt;&lt;</span><span class="nt">br</span><span class="p">&gt;&lt;</span><span class="nt">br</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">id </span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">accesskey</span><span class="o">=</span><span class="s">&#34;b&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Button&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&#34;keydown&#34;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">ctrlKey</span> <span class="o">&amp;&amp;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">shiftKey</span> <span class="o">&amp;&amp;</span> <span class="nx">e</span><span class="p">.</span><span class="nx">which</span> <span class="o">===</span> <span class="mi">83</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">alert</span><span class="p">(</span><span class="s2">&#34;You pressed Ctrl + Shift + s&#34;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;#button&#34;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&#34;click&#34;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">alert</span><span class="p">(</span><span class="s2">&#34;You clicked button&#34;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>HtmlKeyCombinations.html</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-1_hucdbf9b80216b5889f92e6ea3089b108a_13920_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ejemplo combinaciones de teclas"><img src="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-1_hucdbf9b80216b5889f92e6ea3089b108a_13920_300x200_fit_box_3.png" width="300" height="167" alt="Ejemplo combinaciones de teclas" title="Ejemplo combinaciones de teclas"  class="lozad "></a></p>
<figcaption>Ejemplo combinaciones de teclas</figcaption>
</figure>
</div>
<p>Los usos que se les pueden dar a estas combinaciones de teclas van desde posicionar el foco en un determinado campo de entrada o realizar alguna acción como enviar los datos de un formulario una vez están rellenados y son válidos o cualquiera otra acción mediante <a href="https://es.wikipedia.org/wiki/JavaScript">JavaScript</a>. Haciendo uso del método <a href="https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault">preventDefault()</a> del objeto evento se evita que el evento dispare la acción por defecto si tiene una asignada.</p>
<p>La propiedad global <em>accesskey</em> puede utilizarse en cualquier elemento de HTML, en el ejemplo en un elemento de formulario <em>input</em> y en un botón. En <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> y <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> la combinación de teclas es <kbd>Alt + Shift + [key]</kbd>, para el campo de texto la combinación es <kbd>Alt + Shift + t</kbd> y para el botón <kbd>Alt + Shift + b</kbd>, en el botón la acción es ubicar el foco de entrada en el campo de texto y para el botón realizar la acción clic.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-2_hucb0a71650a1fecca4774a5fbc5f53aea_17644_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Captura de Ctrl &amp;#43; Shift &amp;#43; s"><img src="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-2_hucb0a71650a1fecca4774a5fbc5f53aea_17644_200x150_fit_box_3.png" width="200" height="110" alt="Captura de Ctrl &amp;#43; Shift &amp;#43; s" title="Captura de Ctrl &amp;#43; Shift &amp;#43; s"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-3_hu8f2ee8de5de0b6cc5962cdd220a09655_14112_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Captura de Alt &amp;#43; Shift &amp;#43; t, ubica el foco en el campo de texto"><img src="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-3_hu8f2ee8de5de0b6cc5962cdd220a09655_14112_200x150_fit_box_3.png" width="200" height="111" alt="Captura de Alt &amp;#43; Shift &amp;#43; t, ubica el foco en el campo de texto" title="Captura de Alt &amp;#43; Shift &amp;#43; t, ubica el foco en el campo de texto"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-4_hu28de0382bc89a65a2ee12340ecc6d3a9_17581_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Captura de Alt &amp;#43; Shift &amp;#43; b, ejecuta la acción clic del botón"><img src="https://picodotdev.github.io/blog-bitix/2019/05/combinaciones-de-teclado-en-html-javascript-y-paginas-web/images/key-combinations-4_hu28de0382bc89a65a2ee12340ecc6d3a9_17581_200x150_fit_box_3.png" width="200" height="111" alt="Captura de Alt &amp;#43; Shift &amp;#43; b, ejecuta la acción clic del botón" title="Captura de Alt &amp;#43; Shift &amp;#43; b, ejecuta la acción clic del botón"  class="lozad "></a></p>
<figcaption>Acciones con combinaciones de teclas</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li>[Atributos globales][https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes]</li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/12/introduccion-al-javascript-de-ecmascript-6/">Introducción al JavaScript de ECMAScript 6</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="javascript"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/</id>
        <title>Crear de forma sencilla y rápida máquinas virtuales de VirtualBox con Vagrant</title>
        <updated>2019-05-10T17:00:00+02:00</updated>
        <published>2019-05-10T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vagrant.svg" width="200" height="200" alt="Vagrant" title="Vagrant"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p><a href="https://www.virtualbox.org/">VirtualBox</a> es una de las herramientas que permiten virtualizar un sistema operativo completo y sus aplicaciones dentro de otra máquina. Como es un sistema operativo completo requiere que el sistema que la alberga tenga RAM suficiente para sí mismo y RAM suficiente para el sistema virtualizado, se puede configurar la cantidad de RAM y almacenamiento persistente de la máquina virtual. En el proceso de virtualización se pierde algo de rendimiento por la sobrecarga que añade virtualizar un sistema operativo completo, los procesadores modernos ofrecen soporte para que el rendimiento sea lo mayor posible pero no es igual a ejecutar el sistema de forma nativa en el sistema, sobre todo en el aspecto de interfaces gráficas y aceleración 2D y 3D.</p>
<p>La virtualización es una buena forma de probar una distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> para evaluarla o ejecutar <a href="https://www.microsoft.com/es-es/windows/">Windows</a> en un Linux. Hay otras herramientas de virtualización como <a href="https://www.qemu.org/">QEMU</a> y <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a> pero la virtud de VirtualBox es que es muy sencilla y está disponible para Windows, GNU/Linux y <a href="https://www.apple.com/macos/">macOS</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox_hu714198bdeca98f2fa85206e0a2e30ff9_109657_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox_hu714198bdeca98f2fa85206e0a2e30ff9_109657_300x200_fit_box_3.png" width="300" height="181" alt="VirtualBox" title="VirtualBox"  class="lozad "></a></p>
<figcaption>VirtualBox</figcaption>
</figure>
</div>
<p>Para tener una máquina virtual el proceso se puede hacer desde el principio desde el medio de instalación ofrecido siguiendo los de su instalador. Pero para hacer alguna prueba de desarrollo y si se necesitan virtualizar varias máquinas el proceso manual es incómodo además de repetitivo. <a href="https://www.vagrantup.com/">Vagrant</a> es una de las herramientas ofrecidas por <a href="https://www.hashicorp.com/">HashiCorp</a> que permite automatizar la creación y aprovisionamiento de máquinas virtuales en VirtualBox mediante la especificación de un archivo de configuración. Permite replicar entornos y crear un cluster de máquinas que resulta muy útil al desarrollar o probar cierto software.</p>
<p>En este ejemplo se configura una máquina virtual usando como sistema operativo base Ubuntu 18.04, y se aprovisiona configurando ella <a href="https://www.docker.com/">Docker</a>. El aprovisionamiento se realiza mediante una serie de comandos y archivos que se añaden del <em>host</em> al sistema virtualizado tal como se hace en un sistema Ubuntu desde su estado de instalación inicial. Entre las opciones de configuración permitidas están el nombre de la máquina virtual, su sistema operativo, la cantidad de memoria que se le asigna, propiedades de red, asignar direcciones IP estáticas, &hellip;</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="err">#</span> <span class="o">-*-</span> <span class="n">mode</span><span class="o">:</span> <span class="n">ruby</span> <span class="o">-*-</span>&#10;<span class="err">#</span> <span class="n">vi</span><span class="o">:</span> <span class="n">set</span> <span class="n">ft</span><span class="o">=</span><span class="n">ruby</span> <span class="o">:</span>&#10;&#10;<span class="n">Vagrant</span><span class="o">.</span><span class="na">configure</span><span class="o">(</span><span class="s">&#34;2&#34;</span><span class="o">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>&#10;&#10;  <span class="n">config</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">define</span> <span class="s">&#34;ubuntu-docker&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">instance</span><span class="o">|</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">box</span> <span class="o">=</span> <span class="s">&#34;ubuntu/bionic64&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provider</span> <span class="o">:</span><span class="n">virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">vb</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="s">&#34;Ubuntu Docker (Vagrant)&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">end</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">network</span> <span class="s">&#34;private_network&#34;</span><span class="o">,</span> <span class="n">ip</span><span class="o">:</span> <span class="s">&#34;192.168.33.10&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provider</span> <span class="s">&#34;virtualbox&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">vb</span><span class="o">.</span><span class="na">memory</span> <span class="o">=</span> <span class="s">&#34;1024&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provision</span> <span class="s">&#34;file&#34;</span><span class="o">,</span> <span class="n">source</span><span class="o">:</span> <span class="s">&#34;docker-compose.yml&#34;</span><span class="o">,</span> <span class="n">destination</span><span class="o">:</span> <span class="s">&#34;/home/vagrant/docker-compose.yml&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provision</span> <span class="s">&#34;shell&#34;</span><span class="o">,</span> <span class="n">inline</span><span class="o">:</span> <span class="n">$docker_role_script</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">end</span>&#10;  <span class="n">end</span>&#10;&#10;  <span class="n">$docker_role_script</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="n">SCRIPT</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Updating...&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">upgrade</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Installing docker...&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">apt</span><span class="o">-</span><span class="n">transport</span><span class="o">-</span><span class="n">https</span> <span class="n">ca</span><span class="o">-</span><span class="n">certificates</span> <span class="n">curl</span> <span class="n">gnupg</span><span class="o">-</span><span class="n">agent</span> <span class="n">software</span><span class="o">-</span><span class="n">properties</span><span class="o">-</span><span class="n">common</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">curl</span> <span class="o">-</span><span class="n">fsSL</span> <span class="n">https</span><span class="o">:</span><span class="c1">//download.docker.com/linux/ubuntu/gpg | sudo apt-key add -&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">key</span> <span class="n">fingerprint</span> <span class="n">0EBFCD88</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">add</span><span class="o">-</span><span class="n">apt</span><span class="o">-</span><span class="n">repository</span> <span class="s">&#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span><span class="o">-</span><span class="n">cli</span> <span class="n">containerd</span><span class="o">.</span><span class="na">io</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">usermod</span> <span class="o">-</span><span class="n">aG</span> <span class="n">docker</span> <span class="n">vagrant</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="s">&#34;https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)&#34;</span> <span class="o">-</span><span class="n">o</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">compose</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">compose</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Starting Docker service...&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">daemon</span><span class="o">-</span><span class="n">reload</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">enable</span> <span class="n">docker</span><span class="o">.</span><span class="na">service</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">start</span> <span class="n">docker</span><span class="o">.</span><span class="na">service</span>&#10;  <span class="n">SCRIPT</span>&#10;<span class="n">end</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Vagrantfile</span>
    </div>
</div>
<p>Se puede crear un archivo inicia con comentarios para empezar a configurar la máquina virtual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vagrant init ubuntu/bionic64&#10; &#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-init.sh</span>
    </div>
</div>
<p>Definido el archivo de configuración para Vagrant se inician las máquina virtual con un comando. Y se detienen con otro. Si hay necesidad en el mismo archivo se pueden definir varias máquinas virtuales.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vagrant up&#10;$ vagrant halt&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-up.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox-vagrant-vm_hu714198bdeca98f2fa85206e0a2e30ff9_116254_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="VirtualBox Vagrant VM"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox-vagrant-vm_hu714198bdeca98f2fa85206e0a2e30ff9_116254_300x200_fit_box_3.png" width="300" height="181" alt="VirtualBox Vagrant VM" title="VirtualBox Vagrant VM"  class="lozad "></a></p>
<figcaption>VirtualBox Vagrant VM</figcaption>
</figure>
</div>
<p>Una vez iniciada la máquina virtual Vagrant configura SSH para tener acceso a su terminal, hay que especificar el nombre de la máquina virtual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vagrant ssh ubuntu-docker&#10; &#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-ssh.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/vagrant-ssh_huf84e0a9edfdc6e443883ef5a755439df_64066_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Vagrant SSH"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/vagrant-ssh_huf84e0a9edfdc6e443883ef5a755439df_64066_300x200_fit_box_3.png" width="244" height="200" alt="Vagrant SSH" title="Vagrant SSH"  class="lozad "></a></p>
<figcaption>Vagrant SSH</figcaption>
</figure>
</div>
<p>La máquina en el ejemplo ha sido aprovisionada con Docker mediante un <em>script</em> con los comandos para instalarlo y un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> con un servicio del servidor web <a href="https://nginx.org/">nginx</a>. Desde la terminal de la máquina virtual se inicia el servicio con Docker que queda accesible tanto desde la propia máquina virtual como desde el <em>host</em> indicando la dirección IP que se le ha asignado.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/docker-compose-up_huee84648a7050cd57115fd67bb683562f_66997_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="docker-compose up y curl (desde la MV)"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/docker-compose-up_huee84648a7050cd57115fd67bb683562f_66997_300x200_fit_box_3.png" width="281" height="200" alt="docker-compose up y curl (desde la MV)" title="docker-compose up y curl (desde la MV)"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/curl_hu26f710045e8e9b42060c9d2ccd60a851_58845_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="curl (desde el host)"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/curl_hu26f710045e8e9b42060c9d2ccd60a851_58845_300x200_fit_box_3.png" width="244" height="200" alt="curl (desde el host)" title="curl (desde el host)"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/firefox_hue938310a76fc8e72c31d7b54d72579d5_35132_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página devuelta por nginx"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/firefox_hue938310a76fc8e72c31d7b54d72579d5_35132_300x200_fit_box_3.png" width="300" height="172" alt="Página devuelta por nginx" title="Página devuelta por nginx"  class="lozad "></a></p>
<figcaption>docker-compose up y curl desde la MV y desde el host</figcaption>
</figure>
</div>
<p>Vagrant tiene un <a href="https://app.vagrantup.com/boxes/search">repositorio de imágenes</a> entre las que elegir para el sistema, están las más populares como <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://fedoraproject.org/">Fedora</a>, <a href="https://www.debian.org/">Debian</a> y <a href="https://www.centos.org/">CentOS</a>. Es un repositorio en donde los usuarios pueden subir sus propias imágenes aunque por defecto es mejor usar las oficiales de cada sistema.</p>
<p>Posee varias <a href="https://www.vagrantup.com/docs/index.html">páginas de documentación</a> bastante completas donde conocer los todos los detalles de uso de Vagrant.</p>
<ul>
<li><a href="https://www.vagrantup.com/docs/vagrantfile/">Vagrantfile</a></li>
<li><a href="https://www.vagrantup.com/docs/cli/">Commands</a></li>
<li><a href="https://www.vagrantup.com/docs/networking/">Networking</a></li>
<li><a href="https://www.vagrantup.com/docs/provisioning/">Provisioning</a></li>
<li><a href="https://www.vagrantup.com/docs/multi-machine/">Multi-machine</a></li>
<li><a href="https://www.vagrantup.com/docs/providers/">Providers</a></li>
<li><a href="https://www.vagrantup.com/docs/synced-folders/">Synced folders</a></li>
</ul>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Vagrant">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>vagrant up</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicios-nomad/</id>
        <title>Servicios con persistencia en el orquestador de microservicios Nomad</title>
        <updated>2019-04-26T20:00:00+02:00</updated>
        <published>2019-04-26T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicios-nomad/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los servicios que necesitan almacenar datos como las bases de datos o un sistema de archivos tienen más restricciones que los servicios sin estado por la necesidad de tener acceso a esos datos. Esto hace que los contenedores puedan no tener tanta libertad para iniciarse en cualquier nodo. En Nomad una estrategia es imponer ciertas restricciones a los servicios que almacenen estado para que solo se puedan iniciar en el nodo que donde estén almacenados.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="260" alt="HashiCorp Nomad" title="HashiCorp Nomad"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>Algunos servicios no necesitan almacenar ningún estado porque no lo necesitan o porque el estado se mantiene en otro servicio. Que un servicio no necesite mantener estado es bueno porque de esta manera el servicio se puede escalar al número de instancias adecuadas para prestar el servicio, también porque si falla una instancia la petición puede ser reenviada a otra instancia, una instancia que falla puede ser reemplazada sin problema en otro <em>host</em>. Sin embargo, hay otro tipo de instancias que si almacenan estado como las bases de datos ya sea <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://www.mysql.com/">MySQL</a>, <a href="https://redis.io/">Redis</a>, <a href="https://www.mongodb.com/">MongoDB</a>, otra o simplemente archivos en el sistema de archivos.</p>
<p>Las instancias que tienen estado no son tan fáciles de reemplazar dado que los datos son necesarios para su funcionamiento, una instancia de un servicio con estado como no puede iniciarse en otro nodo libremente solo se puede iniciar en el nodo que contenga los datos. Eso o cuando el servicio se inicia en otro nodo los datos son trasladados o por algún mecanismo transparente a los servicios están disponibles en el nuevo nodo.</p>
<p>En <a href="https://docs.docker.com/swarm/">Docker Swarm</a> ciertos <em>drivers</em> de volúmenes pueden proporcionar volúmenes accesibles desde cualquier <em>host</em> del <em>cluster</em> pero por defecto <em>Swarm</em> no lo ofrece. En <a href="https://kubernetes.io/">Kubernetes</a> los volúmenes pueden ser dispositivos de almacenamiento provenientes de <a href="https://aws.amazon.com/es/ebs/">EBS</a> de modo que si un <em>pod</em> es movido a otro <em>host</em> basta con que el <em>pod</em> sea conectado de nuevo al EBS anterior y los datos están accesibles en el nuevo nodo.</p>
<p><a href="https://www.nomadproject.io/">Nomad</a> no proporciona soporte para que el almacenamiento persistente sea migrado a un nuevo nodo de Nomad si el servicio cambiado de ubicación. Para solventar esta limitación en el caso de los servicios con estado estos pueden ser tratados en cierta forma como animales de compañía o <em>pets</em> haciendo que siempre se ubiquen en el mismo nodo, una vez tiene siempre la misma ubicación basta con proporcionar el almacenamiento en el <em>host</em> ya sea en su sistema de archivos o para externalizarlo montando un almacenamiento <em>EBS</em>.</p>
<p>Para conseguir que un <em>job</em> de Nomad se ubique siempre en un mismo nodo hay que usar <a href="https://www.nomadproject.io/docs/job-specification/constraint.html">restricciones o <em>costraints</em> en la especificación del <em>job</em></a>. Las restricciones son las reglas que utiliza Nomad para elegir como candidatos los posibles nodos en los que ubicar el <em>job</em>, <em>task group</em> o <em>task</em>. Se pueden utilizar varios operadores entre los que está el de igualdad utilizado en el ejemplo. Una de las variables utilizables es el identificativo del nodo de Nomad, con él es posible conseguir que el <em>job</em> se ubique siempre en el mismo nodo. Los identificativos de los nodos son asignados por Nomad cuando se unen al <em>cluster</em>.</p>
<p>Con los siguientes comandos se inspecciona los nodos que forman parte del cluster de Nomad, entre sus datos está el identificativo de cada nodo formado por una cadena de 36 caracteres. En el modo verboso se emite el identificativo completo y una lista de propiedades del nodo entre los que están detalles de Consul, la CPU, <em>driver</em> que soporta, kernel, sistema operativo, &hellip; En documentación sobre <a href="https://www.nomadproject.io/docs/runtime/interpolation.html">interpolación de variables</a> hay una lista de variables disponibles.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad node status&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Name&nbsp;&nbsp;&nbsp;&nbsp;   Class   Drain  Eligibility  Status&#10;44511e01  localhost  archlinux  &lt;none&gt;  <span class="nb">false</span>  eligible&nbsp;&nbsp;&nbsp;&nbsp; ready&#10;&#10;$ nomad node status 44511e01&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 44511e01&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> archlinux&#10;<span class="nv">Class</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> &lt;none&gt;&#10;<span class="nv">DC</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> localhost&#10;<span class="nv">Drain</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Eligibility</span>   <span class="o">=</span> eligible&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> ready&#10;<span class="nv">Uptime</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 1h40m31s&#10;Driver <span class="nv">Status</span> <span class="o">=</span> docker,exec,java,qemu,raw_exec&#10;&#10;Node Events&#10;Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Subsystem  Message&#10;2019-04-26T17:57:41+02:00  Cluster&nbsp;&nbsp;&nbsp;&nbsp;Node registered&#10;&#10;Allocated Resources&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Memory&nbsp;&nbsp;&nbsp;&nbsp;  Disk&#10;0/30400 MHz  <span class="m">0</span> B/31 GiB  <span class="m">0</span> B/16 GiB&#10;&#10;Allocation Resource Utilization&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Memory&#10;0/30400 MHz  <span class="m">0</span> B/31 GiB&#10;&#10;Host Resource Utilization&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Disk&#10;3288/30400 MHz  5.2 GiB/31 GiB  <span class="o">(</span>tmpfs<span class="o">)</span>&#10;&#10;Allocations&#10;No allocations placed&#10;&#10;$ nomad node status -verbose 44511e01&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 44511e01-34b8-c1e6-7fe5-60be0ff35d0e&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> archlinux&#10;<span class="nv">Class</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> &lt;none&gt;&#10;<span class="nv">DC</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> localhost&#10;<span class="nv">Drain</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Eligibility</span> <span class="o">=</span> eligible&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> ready&#10;<span class="nv">Uptime</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 1h44m39s&#10;&#10;Drivers&#10;Driver&nbsp;&nbsp;&nbsp;&nbsp;Detected  Healthy  Message&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Time&#10;docker&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;<span class="nb">exec</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;java&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;qemu&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;raw_exec  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;rkt&nbsp;&nbsp;&nbsp;&nbsp;   <span class="nb">false</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">false</span>&nbsp;&nbsp;&nbsp;&nbsp;Failed to execute rkt version: exec: <span class="s2">&#34;rkt&#34;</span>: executable file not found in <span class="nv">$PATH</span>  2019-04-26T17:57:41+02:00&#10;&#10;Node Events&#10;Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Subsystem  Message&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Details&#10;2019-04-26T17:57:41+02:00  Cluster&nbsp;&nbsp;&nbsp;&nbsp;Node registered  &lt;none&gt;&#10;&#10;Allocated Resources&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Disk&#10;100/30400 MHz  1.0 GiB/31 GiB  <span class="m">300</span> MiB/16 GiB&#10;&#10;Allocation Resource Utilization&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Memory&#10;19/30400 MHz  <span class="m">38</span> MiB/31 GiB&#10;&#10;Host Resource Utilization&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Disk&#10;4564/30400 MHz  5.5 GiB/31 GiB  <span class="o">(</span>tmpfs<span class="o">)</span>&#10;&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Eval ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Task Group  Version  Desired  Status   Created&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Modified&#10;cd45371d-501a-1373-dfde-bb16c4ff20d3  ab9f5675-b5cb-9e5f-8e20-cb308dbfba32  44511e01-34b8-c1e6-7fe5-60be0ff35d0e  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">3</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  2019-04-26T18:14:28+02:00  2019-04-26T18:16:32+02:00&#10;&#10;Attributes&#10;consul.datacenter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> localhost&#10;consul.revision&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> ea5210a30&#10;consul.server&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="nb">true</span>&#10;consul.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 1.4.4&#10;cpu.arch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> amd64&#10;cpu.frequency&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">3800</span>&#10;cpu.modelname&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> Intel<span class="o">(</span>R<span class="o">)</span> Core<span class="o">(</span>TM<span class="o">)</span> i5-8259U CPU @ 2.30GHz&#10;cpu.numcores&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">8</span>&#10;cpu.totalcompute&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">30400</span>&#10;driver.docker&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">1</span>&#10;driver.docker.bridge_ip&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 172.17.0.1&#10;driver.docker.os_type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> linux&#10;driver.docker.runtimes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> runc&#10;driver.docker.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 18.09.4-ce&#10;driver.docker.volumes.enabled <span class="o">=</span> <span class="nb">true</span>&#10;driver.exec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="m">1</span>&#10;driver.java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="m">1</span>&#10;driver.java.runtime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> OpenJDK Runtime Environment <span class="o">(</span>build 1.8.0_212-b01<span class="o">)</span>&#10;driver.java.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 1.8.0_212&#10;driver.java.vm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> OpenJDK 64-Bit Server VM <span class="o">(</span>build 25.212-b01, mixed mode<span class="o">)</span>&#10;driver.qemu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="m">1</span>&#10;driver.qemu.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 3.1.0&#10;driver.raw_exec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="m">1</span>&#10;kernel.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> linux&#10;kernel.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 5.0.7-arch1-1-ARCH&#10;memory.totalbytes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">33592107008</span>&#10;nomad.advertise.address&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 127.0.0.1:4646&#10;nomad.revision&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 18dd59056ee1d7b2df51256fe900a98460d3d6b9&#10;nomad.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 0.9.0&#10;os.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> arch&#10;os.signals&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> SIGQUIT,SIGTTOU,SIGFPE,SIGTRAP,SIGTSTP,SIGINT,SIGURG,SIGTTIN,SIGUSR1,SIGIO,SIGIOT,SIGKILL,SIGSTOP,SIGCONT,SIGILL,SIGPROF,SIGSEGV,SIGSYS,SIGTERM,SIGXFSZ,SIGHUP,SIGWINCH,SIGABRT,SIGBUS,SIGCHLD,SIGPIPE,SIGUSR2,SIGXCPU,SIGALRM&#10;unique.cgroup.mountpoint&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> /sys/fs/cgroup&#10;unique.consul.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> archlinux&#10;unique.hostname&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> archlinux&#10;unique.network.ip-address&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 127.0.0.1&#10;unique.storage.bytesfree&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">16795955200</span>&#10;unique.storage.bytestotal&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">16796053504</span>&#10;unique.storage.volume&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> tmpfs&#10;&#10;Meta</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-status.sh</span>
    </div>
</div>
<p>En este caso solo hay un nodo registrado en Nomad, la siguiente definición de <em>job</em> en el fragmento <em>constraint</em> hace que Nomad lo ubique siempre en él.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">job &#34;mongodb&#34; {&#10;  datacenters = [&#34;localhost&#34;]&#10;&#10;  type = &#34;service&#34;&#10;&#10;  constraint {&#10;&nbsp;&nbsp;&nbsp;&nbsp;attribute = &#34;${node.unique.id}&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;&nbsp;&nbsp;&nbsp; = &#34;44511e01-34b8-c1e6-7fe5-60be0ff35d0e&#34;&#10;  }&#10;&#10;  group &#34;services&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;count = 1&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;task &#34;mongodb&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;  driver = &#34;docker&#34;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  config {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image = &#34;mongo:latest&#34;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port_map {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port = 27017&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;volumes = [&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;/home/picodotdev/Software/nomad/mongodb:/data/db/&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  resources {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory = 1024 # MB&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port &#34;port&#34; {}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;}&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mongodb.nomad</span>
    </div>
</div>
<p>Como el <em>job</em> se ubica en el mismo nodo siempre montando un directorio del nodo como un volumen de datos en el <em>job</em> y contenedor de <a href="https://www.docker.com/">Docker</a>, los datos se persisten en el sistema de archivos y transcienden al tiempo de vida del <em>job</em>, se puede iniciar el <em>job</em>, insertar datos en la base de datos en este caso de MongoDB, eliminar el <em>job</em>, volverlo a iniciar y los mismos datos están presentes en MongoDB.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job run mongodb.nomad&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAMES&#10;b0d3f42c92fc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mongo:latest&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">3</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">3</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:20180-&gt;27017/tcp, 127.0.0.1:20180-&gt;27017/udp   mongodb-ea10d440-1176-3bfb-5301-7ccd17af0281&#10;$ docker <span class="nb">exec</span> -it b0d3f42c92fc bash&#10;root@b0d3f42c92fc:/# mongo&#10;MongoDB shell version v4.0.9&#10;connecting to: mongodb://127.0.0.1:27017/?gssapiServiceName<span class="o">=</span>mongodb&#10;Implicit session: session <span class="o">{</span> <span class="s2">&#34;id&#34;</span> : UUID<span class="o">(</span><span class="s2">&#34;ba120679-b965-49d0-a774-dff39d6b630a&#34;</span><span class="o">)</span> <span class="o">}</span>&#10;MongoDB server version: 4.0.9&#10;Server has startup warnings: &#10;2019-04-26T16:47:49.308+0000 I STORAGE  <span class="o">[</span>initandlisten<span class="o">]</span> &#10;2019-04-26T16:47:49.308+0000 I STORAGE  <span class="o">[</span>initandlisten<span class="o">]</span> ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine&#10;2019-04-26T16:47:49.308+0000 I STORAGE  <span class="o">[</span>initandlisten<span class="o">]</span> **&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  See http://dochub.mongodb.org/core/prodnotes-filesystem&#10;2019-04-26T16:47:50.133+0000 I CONTROL  <span class="o">[</span>initandlisten<span class="o">]</span> &#10;2019-04-26T16:47:50.133+0000 I CONTROL  <span class="o">[</span>initandlisten<span class="o">]</span> ** WARNING: Access control is not enabled <span class="k">for</span> the database.&#10;2019-04-26T16:47:50.133+0000 I CONTROL  <span class="o">[</span>initandlisten<span class="o">]</span> **&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Read and write access to data and configuration is unrestricted.&#10;2019-04-26T16:47:50.133+0000 I CONTROL  <span class="o">[</span>initandlisten<span class="o">]</span> &#10;---&#10;Enable MongoDB<span class="s1">&#39;s free cloud-based monitoring service, which will then receive and display&#10;</span><span class="s1">metrics about your deployment (disk utilization, CPU, operation statistics, etc).&#10;</span><span class="s1">&#10;</span><span class="s1">The monitoring data will be available on a MongoDB website with a unique URL accessible to you&#10;</span><span class="s1">and anyone you share the URL with. MongoDB may use this information to make product&#10;</span><span class="s1">improvements and to suggest MongoDB products and deployment options to you.&#10;</span><span class="s1">&#10;</span><span class="s1">To enable free monitoring, run the following command: db.enableFreeMonitoring()&#10;</span><span class="s1">To permanently disable this reminder, run the following command: db.disableFreeMonitoring()&#10;</span><span class="s1">---&#10;</span><span class="s1">&#10;</span><span class="s1">&gt; db.articles.insert({title: &#34;Introducción a la base de datos NoSQL MongoDB&#34;, author: &#34;picodotdev&#34;, date: new Date(2017,05,18,12,30), tags: [&#39;</span>mongodb<span class="s1">&#39;, &#39;</span>database<span class="s1">&#39;, &#39;</span>NoSQL<span class="s1">&#39;], comments: [{user: &#34;jones&#34;, message: &#34;MongoDB is great!&#34;}, {user: &#34;lina&#34;, message: &#34;MongoDB is great!&#34;}]})&#10;</span><span class="s1">WriteResult({ &#34;nInserted&#34; : 1 })&#10;</span><span class="s1">&gt; db.articles.insert({title: &#34;Introducción a la base de datos relacional PostgreSQL&#34;, author: &#34;picodotdev&#34;, date: new Date(2017,05,17,12,00), likes: 100, tags: [&#39;</span>postgresql<span class="s1">&#39;, &#39;</span>database<span class="s1">&#39;, &#39;</span>SQL<span class="err">&#39;</span><span class="o">]</span>, comments: <span class="o">[{</span>user: <span class="s2">&#34;katy&#34;</span>, message: <span class="s2">&#34;PostgreSQL rocks!&#34;</span><span class="o">}</span>, <span class="o">{</span>user: <span class="s2">&#34;smith&#34;</span>, message: <span class="s2">&#34;SQL language is powerful!&#34;</span><span class="o">}]})</span>&#10;WriteResult<span class="o">({</span> <span class="s2">&#34;nInserted&#34;</span> : <span class="m">1</span> <span class="o">})</span>&#10;&gt; db.articles.find<span class="o">()</span>&#10;<span class="o">{</span> <span class="s2">&#34;_id&#34;</span> : ObjectId<span class="o">(</span><span class="s2">&#34;5cc335873b17081f2ca1d4d5&#34;</span><span class="o">)</span>, <span class="s2">&#34;title&#34;</span> : <span class="s2">&#34;Introducción a la base de datos NoSQL MongoDB&#34;</span>, <span class="s2">&#34;author&#34;</span> : <span class="s2">&#34;picodotdev&#34;</span>, <span class="s2">&#34;date&#34;</span> : ISODate<span class="o">(</span><span class="s2">&#34;2017-06-18T12:30:00Z&#34;</span><span class="o">)</span>, <span class="s2">&#34;tags&#34;</span> : <span class="o">[</span> <span class="s2">&#34;mongodb&#34;</span>, <span class="s2">&#34;database&#34;</span>, <span class="s2">&#34;NoSQL&#34;</span> <span class="o">]</span>, <span class="s2">&#34;comments&#34;</span> : <span class="o">[</span> <span class="o">{</span> <span class="s2">&#34;user&#34;</span> : <span class="s2">&#34;jones&#34;</span>, <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;MongoDB is great!&#34;</span> <span class="o">}</span>, <span class="o">{</span> <span class="s2">&#34;user&#34;</span> : <span class="s2">&#34;lina&#34;</span>, <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;MongoDB is great!&#34;</span> <span class="o">}</span> <span class="o">]</span> <span class="o">}</span>&#10;<span class="o">{</span> <span class="s2">&#34;_id&#34;</span> : ObjectId<span class="o">(</span><span class="s2">&#34;5cc335993b17081f2ca1d4d6&#34;</span><span class="o">)</span>, <span class="s2">&#34;title&#34;</span> : <span class="s2">&#34;Introducción a la base de datos relacional PostgreSQL&#34;</span>, <span class="s2">&#34;author&#34;</span> : <span class="s2">&#34;picodotdev&#34;</span>, <span class="s2">&#34;date&#34;</span> : ISODate<span class="o">(</span><span class="s2">&#34;2017-06-17T12:00:00Z&#34;</span><span class="o">)</span>, <span class="s2">&#34;likes&#34;</span> : 100, <span class="s2">&#34;tags&#34;</span> : <span class="o">[</span> <span class="s2">&#34;postgresql&#34;</span>, <span class="s2">&#34;database&#34;</span>, <span class="s2">&#34;SQL&#34;</span> <span class="o">]</span>, <span class="s2">&#34;comments&#34;</span> : <span class="o">[</span> <span class="o">{</span> <span class="s2">&#34;user&#34;</span> : <span class="s2">&#34;katy&#34;</span>, <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;PostgreSQL rocks!&#34;</span> <span class="o">}</span>, <span class="o">{</span> <span class="s2">&#34;user&#34;</span> : <span class="s2">&#34;smith&#34;</span>, <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;SQL language is powerful!&#34;</span> <span class="o">}</span> <span class="o">]</span> <span class="o">}</span>&#10;&gt; db.articles.count<span class="o">()</span>&#10;<span class="m">2</span>&#10;&gt; <span class="nb">exit</span>&#10;bye&#10;root@b0d3f42c92fc:/# <span class="nb">exit</span>&#10;<span class="nb">exit</span>&#10;$ nomad job stop --purge <span class="nv">mongodb</span>&#10;<span class="o">==</span>&gt; Monitoring evaluation <span class="s2">&#34;f10589c6&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation triggered by job <span class="s2">&#34;mongodb&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation status changed: <span class="s2">&#34;pending&#34;</span> -&gt; <span class="s2">&#34;complete&#34;</span>&#10;<span class="o">==</span>&gt; Evaluation <span class="s2">&#34;f10589c6&#34;</span> finished with status <span class="s2">&#34;complete&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mongodb.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job stop --prune mongodb&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-stop.sh</span>
    </div>
</div>
<p>Para iniciar <a href="https://www.consul.io/">Consul</a> y Nomad hay que utilizar los siguientes comandos y para el ejecutar <em>job</em> es requisito haber instalado Docker dado que en este ejemplo lo utiliza.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev -datacenter <span class="nv">localhost</span>&#10;<span class="o">==</span>&gt; Starting Consul agent...&#10;<span class="o">==</span>&gt; Consul agent running!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: <span class="s1">&#39;v1.4.4&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID: <span class="s1">&#39;34294bf0-5802-0d94-4acd-cf8c9d090205&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node name: <span class="s1">&#39;archlinux&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Datacenter: <span class="s1">&#39;localhost&#39;</span> <span class="o">(</span>Segment: <span class="s1">&#39;&lt;all&gt;&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span> <span class="o">(</span>Bootstrap: <span class="nb">false</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Client Addr: <span class="o">[</span>127.0.0.1<span class="o">]</span> <span class="o">(</span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  Cluster Addr: 127.0.0.1 <span class="o">(</span>LAN: 8301, WAN: 8302<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: <span class="nb">false</span>&#10;&#10;$ sudo nomad agent -dev -dc localhost&#10;<span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> picodotdev: &#10;<span class="o">==</span>&gt; No configuration files <span class="nv">loaded</span>&#10;<span class="o">==</span>&gt; Starting Nomad agent...&#10;<span class="o">==</span>&gt; Nomad agent configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Advertise Addrs: HTTP: 127.0.0.1:4646<span class="p">;</span> RPC: 127.0.0.1:4647<span class="p">;</span> Serf: 127.0.0.1:4648&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bind Addrs: HTTP: 127.0.0.1:4646<span class="p">;</span> RPC: 127.0.0.1:4647<span class="p">;</span> Serf: 127.0.0.1:4648&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Client: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Log Level: DEBUG&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Region: global <span class="o">(</span>DC: localhost<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: 0.9.0</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul-nomad.sh</span>
    </div>
</div>
<p>Las restricciones se han de cumplir para elegir un nodo, por otro lado está también la afinidad. La <a href="https://www.nomadproject.io/docs/job-specification/affinity.html">afinidad</a> es una preferencia utilizada por Nomad al seleccionar los nodos que tratará de cumplir si hay algún nodo disponible con las propiedades de afinidad deseadas pero si no hay un nodo disponible se elige algún otro.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad</a></li>
<li><a href="https://www.nomadproject.io/guides/stateful-workloads/portworx.html">Portworx</a></li>
<li><a href="https://www.nomadproject.io/docs/job-specification/ephemeral_disk.html">Ephemeral Disk</a></li>
<li><a href="https://tech.trivago.com/2019/01/25/nomad-our-experiences-and-best-practices/">Nomad - our experiences and best practices</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/</id>
        <title>Estrategias de despliegue para microservicios con Nomad</title>
        <updated>2019-04-18T11:30:00+02:00</updated>
        <published>2019-04-18T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Ciertos servicios requieren que al hacer un despliegue el servicio continue funcionando. Para esto no es posible parar todas las instancias de un servicio a la vez, actualizarla y volverlas a iniciar porque durante este proceso se dejaría de prestar el servicio durante un corto periodo de tiempo en el mejor de los casos. Hay que hacer el despliegue de forma progresiva en las instancias. Algunas estrategias son <em>Rolling Update</em>, <em>Blue/Green</em> y <em>Canary</em>, el orquestador de servicios Nomad soporta y realiza de forma automatizada los despliegues usando una de estas estrategias.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="260" alt="HashiCorp Nomad" title="HashiCorp Nomad"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>El ciclo de vida de una aplicación no consiste solo en desarrollarla, incluye también su puesta en producción o despliegue en un entorno de pruebas, pero también una vez la aplicación está desplegada en algún momento será necesario actualizarla con una nueva versión.</p>
<p>Las aplicaciones monolíticas tienen otros problemas pero en el aspecto de despliegue es sencillo ya que solo hay una aplicación, basta con desplegar la nueva versión. En una aplicación con arquitectura de microservicios es un reto mayor debido a que hay múltiples aplicaciones.</p>
<p>En cualquiera de ellas puede darse el caso de que para ganar en escalabilidad o para aumentar la disponibilidad o tolerancia a fallos es posible que haya varias instancias, las cuales han de ser actualizadas con el requisito si es necesario de que el servicio no deje de prestar su servicio, es decir que el despliegue no suponga una caída del servicio.</p>
<p>Hay varias estrategias para desplegar una nueva versión de una aplicación:</p>
<ul>
<li><em>Rolling update</em>: actualizar todas las instancias de forma progresiva. Una vez se termina de actualizar una se espera un tiempo y se actualiza la siguiente hasta que todas estén actualizadas.</li>
<li><em>Blue/Green</em>: manteniendo en funcionamiento las instancias con la versión antigua se crea el mismo número de instancias con la nueva versión y se redirige tráfico hacia ellas. Una vez se ha comprobado que la nueva versión funciona correctamente se promociona la nueva versión y se eliminan las instancias de con la versión antigua. Esta estrategia permite volver a la versión anterior rápidamente si se detecta algún problema.</li>
<li><em>Canary</em>: se siguen manteniendo las instancias con la versión antigua, a diferencia de la estrategia <em>blue/green</em> se crea un número menor de instancias con la versión nueva que el número de instancias con la versión antigua. Una vez comprobado que la nueva versión es correcta se promociona la nueva versión y se actualizan todas las instancias restantes mediante <em>rolling update</em> a la nueva versión. También permite volver a la versión antigua si se detecta algún problema.</li>
</ul>
<p><a href="https://docs.docker.com/swarm/">Docker Swarm</a> permite la estrategia de despliegue <em>rolling update</em> sin embargo las estrategias <em>blue/green</em> y <em>canary</em> son interesante para tratar de que un error en una versión nueva no afecte al funcionamiento de la aplicación y obligue hacer un <em>rollback</em> que posiblemente tarde más tiempo durante el cual el servicio funcionará con el defecto descubierto. <a href="https://www.nomadproject.io/">Nomad</a> permite despliegues con las estrategias <em>blue/gree</em> y <em>canary</em>.</p>
<p>Para actualizar un servicio en Nomad basta con modificar la definición del <em>job</em> y enviarlo a <em>Nomad</em>, y este se encarga de orquestar la actualización en las instancias según la estrategia de despliegue
configurada. En este caso se actualiza la versión de <em>nginx</em> de la versión <em>nginx:stable-alpine</em> a <em>nginx:alpine</em> usando una estrategia <em>rolling update</em> para las cinco instancias del servicio.</p>
<p>La estrategia de despliegue en <em>Nomad</em> se define en la <a href="https://www.nomadproject.io/docs/job-specification/update.html">sección de configuración <em>update</em></a>. El parámetro <em>min_healthy_time</em> es el tiempo que se espera cuando se hace un <em>rolling update</em> para considerar una instancia como sana y continuar la actualización con la siguiente, <em>max_parallel</em> indica el número de instancias que se migran al mismo tiempo. El parámetro <em>canary</em> indica el número de instancias que se crean en las estrategias <em>blue/green</em> y <em>canary</em>, en la primera el número de instancias coincidirá con el parámetro <em>canary</em> que indica el número de instancias de un servicio. Nomad con los parámetros <em>health_check</em>, <em>min_healthy_time</em>, <em>healthy_deadline</em>, <em>progress_deadline</em>, <em>stagger</em> y <em>auto_revert</em> se puede poner unos límites para considerar válido un despliegue y en caso de no serlo realizar un <em>rollback</em> de forma automática.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">job &#34;nginx&#34; {&#10;  datacenters = [&#34;localhost&#34;]&#10;&#10;  type = &#34;service&#34;&#10;&#10;  update {&#10;&nbsp;&nbsp;&nbsp;&nbsp;min_healthy_time = &#34;15s&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;max_parallel = 1&#10;  }&#10;&#10;  group &#34;services&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;count = 5&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;task &#34;nginx&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;  driver = &#34;docker&#34;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  config {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image = &#34;nginx:stable-alpine&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port_map {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  http = 80&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  resources {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory = 1024 # MB&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port &#34;http&#34; {}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;}&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.nomad</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job run nginx.nomad&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-run.sh</span>
    </div>
</div>
<p>En el caso de los despliegues <em>blue/green</em> y <em>canary</em> una vez comprobado que la versión de los nuevos servicios funcionan correctamente se promocionan y actualizan el resto de instancias en el caso de <em>canary</em> o se detienen las instancias antiguas en el caso de <em>blue/green</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job promote nginx&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-promote.sh</span>
    </div>
</div>
<p>Desde la línea de comandos se puede observar el estado del servicio y el proceso de actualización, el primero es el estado previo a realizar el despliegue, el segundo durante el proceso de actualización con <em>rolling update</em> y el tercero una vez finalizado el proceso de despliegue y marcado como exitoso en el que todas las instancias han pasado de la versión 0 a la 1.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job status nginx&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> nginx&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> nginx&#10;Submit <span class="nv">Date</span>   <span class="o">=</span> 2019-04-18T19:13:07+02:00&#10;<span class="nv">Type</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> service&#10;<span class="nv">Priority</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">50</span>&#10;<span class="nv">Datacenters</span>   <span class="o">=</span> localhost&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> running&#10;<span class="nv">Periodic</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Parameterized</span> <span class="o">=</span> <span class="nb">false</span>&#10;&#10;Summary&#10;Task Group  Queued  Starting  Running  Failed  Complete  Lost&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">0</span>&#10;&#10;Latest Deployment&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 81f57b6d&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> successful&#10;<span class="nv">Description</span> <span class="o">=</span> Deployment completed successfully&#10;&#10;Deployed&#10;Task Group  Desired  Placed  Healthy  Unhealthy  Progress Deadline&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2019-04-18T19:23:23+02:00&#10;&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node ID   Task Group  Version  Desired  Status   Created  Modified&#10;3747eb07  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;500575e9  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;c8094cf3  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;ea58300c  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;ead6d23f  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;&#10;$ nomad alloc status 3747eb07&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 3747eb07&#10;Eval <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 781fb5f2&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> nginx.services<span class="o">[</span>3<span class="o">]</span>&#10;Node <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> d18851d5&#10;Job <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> nginx&#10;Job <span class="nv">Version</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">0</span>&#10;Client <span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> running&#10;Client <span class="nv">Description</span>  <span class="o">=</span> Tasks are running&#10;Desired <span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> run&#10;Desired <span class="nv">Description</span> <span class="o">=</span> &lt;none&gt;&#10;<span class="nv">Created</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 56s ago&#10;<span class="nv">Modified</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 40s ago&#10;Deployment <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 81f57b6d&#10;Deployment <span class="nv">Health</span>   <span class="o">=</span> healthy&#10;&#10;Task <span class="s2">&#34;nginx&#34;</span> is <span class="s2">&#34;running&#34;</span>&#10;Task Resources&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Disk&nbsp;&nbsp;&nbsp;&nbsp; Addresses&#10;0/100 MHz  <span class="m">788</span> KiB/1.0 GiB  <span class="m">300</span> MiB  http: 127.0.0.1:29939&#10;&#10;Task Events:&#10;Started <span class="nv">At</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 2019-04-18T17:13:08Z&#10;Finished <span class="nv">At</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> N/A&#10;Total <span class="nv">Restarts</span> <span class="o">=</span> <span class="m">0</span>&#10;Last <span class="nv">Restart</span>   <span class="o">=</span> N/A&#10;&#10;Recent Events:&#10;Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Description&#10;2019-04-18T19:13:08+02:00  Started&nbsp;&nbsp;&nbsp;&nbsp; Task started by client&#10;2019-04-18T19:13:07+02:00  Task Setup  Building Task Directory&#10;2019-04-18T19:13:07+02:00  Received&nbsp;&nbsp;&nbsp;&nbsp;Task received by client</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-status-before.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job status nginx&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> nginx&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> nginx&#10;Submit <span class="nv">Date</span>   <span class="o">=</span> 2019-04-18T19:17:54+02:00&#10;<span class="nv">Type</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> service&#10;<span class="nv">Priority</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">50</span>&#10;<span class="nv">Datacenters</span>   <span class="o">=</span> localhost&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> running&#10;<span class="nv">Periodic</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Parameterized</span> <span class="o">=</span> <span class="nb">false</span>&#10;&#10;Summary&#10;Task Group  Queued  Starting  Running  Failed  Complete  Lost&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">0</span>&#10;&#10;Latest Deployment&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> ba20066a&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> successful&#10;<span class="nv">Description</span> <span class="o">=</span> Deployment completed successfully&#10;&#10;Deployed&#10;Task Group  Desired  Placed  Healthy  Unhealthy  Progress Deadline&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2019-04-18T19:29:19+02:00&#10;&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node ID   Task Group  Version  Desired  Status&nbsp;&nbsp;&nbsp;&nbsp;Created&nbsp;&nbsp;&nbsp;&nbsp;Modified&#10;fabcf384  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   2m36s ago  2m20s ago&#10;ccb57008  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   2m53s ago  2m37s ago&#10;b06c743d  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   3m10s ago  2m54s ago&#10;<span class="m">56733896</span>  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   3m28s ago  3m12s ago&#10;71c8bb5b  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   3m45s ago  3m29s ago&#10;500575e9  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  3m44s ago&#10;c8094cf3  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  3m10s ago&#10;3747eb07  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  2m53s ago&#10;ea58300c  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  3m27s ago&#10;ead6d23f  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  2m35s ago</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-status-after.sh</span>
    </div>
</div>
<div class="media">
<script type="text/javascript" src="https://asciinema.org/a/241669.js" id="asciicast-241669" async></script>
<noscript><a href="https://asciinema.org/a/241669" target="_blank"><img src="https://asciinema.org/a/241669.png" width="650" height="450"></a></noscript>
</div>
<p>El proceso de despliegue también se puede monitorizar desde la interfaz web que ofrece Nomad.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-before_hu67a332684efae6ed992319050f36f296_119290_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Antes del proceso de despliegue rolling update en Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-before_hu67a332684efae6ed992319050f36f296_119290_300x200_fit_box_3.png" width="197" height="200" alt="Antes del proceso de despliegue rolling update en Nomad" title="Antes del proceso de despliegue rolling update en Nomad"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-while_hu1bb43ff17075cacd6588f52ea91a2b44_119731_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Durante el proceso de despliegue rolling update en Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-while_hu1bb43ff17075cacd6588f52ea91a2b44_119731_300x200_fit_box_3.png" width="197" height="200" alt="Durante el proceso de despliegue rolling update en Nomad" title="Durante el proceso de despliegue rolling update en Nomad"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-after_hu07bde1516a5a8318da3a99b05cb30d02_122603_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Después del proceso de despliegue rolling update en Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-after_hu07bde1516a5a8318da3a99b05cb30d02_122603_300x200_fit_box_3.png" width="197" height="200" alt="Después del proceso de despliegue rolling update en Nomad" title="Después del proceso de despliegue rolling update en Nomad"  class="lozad "></a></p>
<figcaption>Progreso del despliegue rolling update en Nomad</figcaption>
</figure>
</div>
<p>En este ejemplo los servicios están en contenedores docker, también se observa que la versión de los contenedores en ejecución pasan de la versión <em>stable-alpine</em> a <em>alpine</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  NAMES&#10;476d2063b64b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:29939-&gt;80/tcp, 127.0.0.1:29939-&gt;80/udp   nginx-3747eb07-f9da-a9f5-0720-1b2314baac12&#10;e0a533348f44&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:21085-&gt;80/tcp, 127.0.0.1:21085-&gt;80/udp   nginx-ea58300c-c4a1-cc3d-46a0-d5b30c276ede&#10;4da9babdd549&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:30061-&gt;80/tcp, 127.0.0.1:30061-&gt;80/udp   nginx-c8094cf3-5c3c-eaaa-1bcf-9368100bb0ef&#10;068c6db6a86c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:26606-&gt;80/tcp, 127.0.0.1:26606-&gt;80/udp   nginx-ead6d23f-abdd-8b33-7b61-c2ad64dede5c&#10;19190e778a5a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:29835-&gt;80/tcp, 127.0.0.1:29835-&gt;80/udp   nginx-500575e9-62ce-868a-f142-869475aacde5</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps-before.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  NAMES&#10;03faf7ed4467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:27212-&gt;80/tcp, 127.0.0.1:27212-&gt;80/udp   nginx-fabcf384-5675-fe7f-4c61-5fa7385c54d2&#10;4185977fbddb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   <span class="m">2</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up <span class="m">2</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:26686-&gt;80/tcp, 127.0.0.1:26686-&gt;80/udp   nginx-ccb57008-e426-1684-fd39-97cb0f3b51f7&#10;c6586d22406e&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   <span class="m">2</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up <span class="m">2</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:23508-&gt;80/tcp, 127.0.0.1:23508-&gt;80/udp   nginx-b06c743d-d2b3-0be3-d82b-762184dda4ec&#10;046253c1972b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   <span class="m">2</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up <span class="m">2</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:31800-&gt;80/tcp, 127.0.0.1:31800-&gt;80/udp   nginx-56733896-ab20-ab8f-36c9-ac1d13b0f1a2&#10;88788b4133ea&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   <span class="m">3</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up <span class="m">3</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:30844-&gt;80/tcp, 127.0.0.1:30844-&gt;80/udp   nginx-71c8bb5b-a23b-7edc-cbb3-f9d0b6bdffe6</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps-after.sh</span>
    </div>
</div>
<p>Nomad y <a href="https://www.consul.io/">Consul</a> se inician con los siguientes comandos en modo desarrollo comentados en el artículo <a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev -datacenter localhost&#10;$ sudo nomad agent -dev -dc localhost&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul-nomad.sh</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicios-nomad/">Servicios con persistencia en el orquestador Nomad</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    
</feed>