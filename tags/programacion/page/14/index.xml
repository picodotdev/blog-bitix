<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/programacion/</id>
    <updated>2023-01-19T20:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/</id>
        <title>Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot</title>
        <updated>2016-10-08T00:30:00+02:00</updated>
        <published>2016-10-07T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>OAuth es un protocolo usado para permitir a una aplicación acceder a los recursos de un usuario sin que este proporcione a la aplicación cliente sus credenciales y manteniendo el control de revocar los permisos concedidos. Es ampliamente usado por los servicios de redes sociales de las empresas más conocidas, también lo podemos usar en nuestras aplicaciones. En el ejemplo usaré Keycloak y una aplicación Java con Spring Boot, Apache Shiro y Apache Tapestry.</strong></p>]]>
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/generacion-de-codigo-en-tiempo-de-ejecucion-con-byte-buddy/</id>
        <title>Generación de código en tiempo de ejecución con Byte Buddy</title>
        <updated>2016-10-07T09:15:00+02:00</updated>
        <published>2016-10-02T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/generacion-de-codigo-en-tiempo-de-ejecucion-con-byte-buddy/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El tipado seguro y el sistema de tipos es sin duda una de las características más importante del lenguaje de programación Java que han contribuido a su éxito. Cuando no conocemos los tipos en tiempo de compilación el sistema de tipos es una limitación donde los lenguajes dinámicos son capaces de resolver el problema sin necesidad de los tipos pero perdiendo la ayuda del compilador. Usando una librería de generación de código en tiempo de compilación o ejecución tenemos la posibilidad en Java de realizar algunas tareas que los lenguajes dinámicos permiten.</strong></p>]]>
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth-en-java/</id>
        <title>Cliente de un servicio REST autenticado con OAuth en Java</title>
        <updated>2022-09-16T19:00:00+02:00</updated>
        <published>2016-10-01T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Teniendo un servicio REST securizado con OAuth2 al invocarlo deberemos realizar el flujo necesario para obtener un <em>access token</em> y posteriormente enviarlo al servicio REST como forma de autenticación y autorización. Usando un cliente programado en el lenguaje Java y usando la librería HttpClient podemos hacer las peticiones HTTP necesarias para la invocación del servicio.</strong></p>]]>
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/</id>
        <title>Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</title>
        <updated>2022-09-16T19:00:00+02:00</updated>
        <published>2016-09-24T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Keycloak es un proveedor de OAuth que podemos usar en nuestras aplicaciones y servicios para proporcionar autenticación, autorización, SSO y también añadir seguridad a los servicios REST que desarrollemos como muestro en este artículo. OAuth tiene varias ventajas sobre usar autenticación <em>Basic</em>.</strong></p>]]>
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/monitorizar-con-eventos-de-google-analytics-una-pagina-web/</id>
        <title>Monitorizar con eventos de Google Analytics una página web</title>
        <updated>2016-09-19T23:00:00+02:00</updated>
        <published>2016-09-18T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/monitorizar-con-eventos-de-google-analytics-una-pagina-web/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Conociendo cómo usar los eventos de Analytics podemos conocer información interesante acerca de qué forma los usuarios interactúan con nuestra propia página web. Cualquier cosa que podamos realizar con JavaScript o ante cualquier evento que podamos reaccionar podemos medirla con Analytics.</strong></p>]]>
        
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/</id>
        <title>Ejemplo de API REST en Java con JAX-RS y Spring Boot</title>
        <updated>2016-09-17T12:00:00+02:00</updated>
        <published>2016-09-17T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/por-que-guardar-las-fechas-en-utc-en-la-base-de-datos/</id>
        <title>Por qué guardar las fechas en UTC en la base de datos</title>
        <updated>2016-08-14T02:30:00+02:00</updated>
        <published>2016-08-13T01:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/por-que-guardar-las-fechas-en-utc-en-la-base-de-datos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/</id>
        <title>No, un tag JSP o un tag de Grails no es equivalente a un componente de Tapestry</title>
        <updated>2016-07-25T12:00:00+02:00</updated>
        <published>2016-07-25T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Alguna vez que he dado una presentación sobre Apache Tapestry después de la misma me comentaron que eso mismo que explicaba se podía hacer con el <em>framework</em> que esa persona usaba. En un proyecto la tecnología no es es lo más importante pero es una herramienta que puede facilitar en gran medida el desarrollo. Respecto a los componentes de Tapestry alguien puede pensar que son iguales a los <em>tag</em> que existen en las tecnologías de presentación como JSP o Grails. En este artículo comentaré algunas diferencias importantes que los hace más y muy interesantes junto con otras características de <em>framework</em>.</strong></p>]]>
        
        </content>
        
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/</id>
        <title>Hemeroteca #9</title>
        <updated>2016-07-02T12:00:00+02:00</updated>
        <published>2016-07-01T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/hemeroteca-9/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>6 meses más y 35 nuevos artículos escritos sobre temas de programación, java, software libre y opinión. No son muchos artículos pero tampoco son artículos breves sobre noticias efímeras, en cada artículo trato de compartir no solo información sino conocimiento en los que además suelo incluir el código completo de un ejemplo totalmente funcional.</strong></p>]]>
        
        </content>
        
            
                <category term="blog"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="tapestry"/>
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/</id>
        <title>El lenguaje de programación, framework y librerías importan</title>
        <updated>2016-06-26T12:00:00+02:00</updated>
        <published>2016-06-25T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        
        </content>
        
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/moment-js-libreria-javascript-para-fechas/</id>
        <title>Moment.js, librería JavaScript para fechas</title>
        <updated>2016-06-05T17:00:00+02:00</updated>
        <published>2016-06-05T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/moment-js-libreria-javascript-para-fechas/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        
        </content>
        
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/</id>
        <title>Ofrecer contenido personalizado al usuario basado en su ubicación</title>
        <updated>2016-06-06T19:00:00+02:00</updated>
        <published>2016-06-03T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/06/ofrecer-contenido-personalizado-al-usuario-basado-en-su-ubicacion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Cuando navegamos por internet el navegador envía mútiple información sobre nosotros y algunas páginas web recopilan esa información y la procesan para ofrecer contenido personalizado que creen nos resultaría de interés. Contenido con mayor relevancia para el usuario mejora la experiencia de usuario y la páginas web mejorarán su ratio de conversión y facturación. La información que proporcionamos sin ser conscientes son las <em>cookies</em>, la dirección IP, el navegador que usamos, el sistema operativo, nuestra resolución de pantalla, la hora a la que accedemos a la página, &hellip; en base a ella y aunque la información está impersonalizada sirve para identificarnos como inequivocamente usuarios. Con la dirección IP y usando una base de datos es posible obtener al menos el país desde el que se accede a una web y muy posiblemente la ciudad.</strong></p>]]>
        
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/</id>
        <title>Ejemplo sencillo de como crear un Excel o CSV en Java con Apache POI y OpenCSV</title>
        <updated>2018-10-26T13:00:00+02:00</updated>
        <published>2016-05-29T13:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/ejemplo-sencillo-de-como-crear-un-excel-o-csv-en-java-con-apache-poi-y-opencsv/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los archivos Excel y separados por comas o CSV son muy utilizados como formato para intercambiar datos entre aplicaciones o como formato para exportar cantidades grandes de datos de una aplicación. Por su utilidad es probable que tarde o temprano surja en una aplicación la necesidad de crear archivos o exportar datos a estos formatos. Con la librería Apache POI se pueden crear Excel desde Java y con la librería OpenCSV exportar datos a archivos CSV con el formato correcto.</strong></p>]]>
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/</id>
        <title>Incluir información de la versión en el artefacto distribuible con Gradle</title>
        <updated>2016-05-27T21:00:00+02:00</updated>
        <published>2016-05-27T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/incluir-informacion-de-la-version-en-el-artefacto-distribuible-con-gradle/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Tener trazabilidad entre el código fuente y el código que se está ejecutando en el entorno de producción es importante para saber cual es el origen de alguna excepción o error que se produzca. Con Gradle podemos conseguir esta trazabilidad haciendo unas pocas modificaciones al <em>script</em> de construcción.</strong></p>]]>
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/05/la-clase-threadlocal-de-java-y-usos-practicos/</id>
        <title>La clase ThreadLocal de Java y usos prácticos</title>
        <updated>2016-05-14T13:00:00+02:00</updated>
        <published>2016-05-13T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/05/la-clase-threadlocal-de-java-y-usos-practicos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En Java existe una clase con la que podemos asociar un dato al hilo o <em>thread</em> que ejecuta el código. Podemos usar esta clase para evitar incluir en cada método el parámetro de ese dato si es usado en multitud de métodos simplificando en gran medida el código. En las aplicaciones web este dato puede ser el usuario que se ha autenticado, el dominio por el que se ha accedido a la aplicación, el dispositivo móvil, el idioma del usuario o cualquier otra información que queramos esté disponible de forma global en el hilo de ejecución.</strong></p>]]>
        
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    
</feed>