<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/seguridad/</id>
    <updated>2022-01-06T11:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/01/analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java/</id>
        <title>Analizar y detectar fallos de seguridad en las dependencias de Java</title>
        <updated>2022-01-06T11:00:00+01:00</updated>
        <published>2022-01-06T11:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/01/analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Dada la complejidad de muchas aplicaciones de software hace que estas usen gran cantidad de dependencias, muchas de proyectos de software libre o código abierto. Es muy probable que con el paso del tiempo en alguna de las dependencias de las aplicaciones se descubra un error de seguridad importante y requiera una actualización lo más pronto posible. No es posible estar completamente a salvo de estar afectado por un fallo de seguridad en el software por mucho que se intente, por este motivo la mejor estrategia es detectar proactivamente y temprana los errores de seguridad y actualizar las dependencias a nuevas versiones con el fallo corregido. Varias organizaciones identifican, definen, describen y catalogan los fallos de seguridad de forma pública en una base de datos y hay herramientas automatizadas que con las bases de datos de fallos de seguridad permiten analizar las dependencias de un proyecto. Un ejemplo ha sido el caso de la librería Log4j 2 que por su gravedad y y popularidad muchas organizaciones han estado afectadas.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una vez desarrollada una aplicación esta entra en un modo de mantenimiento en el que se añaden nuevas funcionalidades a las existentes y se corrigen errores. La mayor parte de la vida de una aplicación es empleada en su mantenimiento con generalmente pequeños cambios incrementales. Algunas aplicaciones son empleadas durante periodos de tiempo muy largos, de lustros o décadas, que quizá ya se consideren como heredadas y en las que ya únicamente se hacen cambios en caso de errores graves.</p>
<p>Aunque en una aplicación heredada ya no se hagan mejoras, ni se actualicen versiones mayores de librerías otro de los motivos por los que una aplicación requiere mantenimiento es por fallos de seguridad. Con el paso del tiempo es muy posible que en una aplicación que tenga dependencias de versiones antiguas de librerías se descubran fallos de seguridad. Si es posible y dependiendo de la gravedad del fallo de seguridad descubierto y la forma de explotarlo es conveniente actualizar a la última versión de la librería o al menos a la última versión compatible con el fallo de seguridad corregido. En una aplicación heredada quizá no sea posible actualizar a la última versión ya que posiblemente por un lado requiere cambios importantes en el código y tiempo para hacerlos y por otro lado se trate de evitar hacer cambios para no introducir errores en el código que está funcionando.</p>
<p>Una de las formas de analizar el código fuente de una aplicación es analizar sus dependencias para conocer si en alguna de ellas se descubre alguna vulnerabilidad. Hay herramientas automatizadas que realizan las dependencias y generan un informe con las vulnerabilidades que tienen.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="base-de-datos-de-fallos-de-seguridad">Base de datos de fallos de seguridad</h3>
<p>Los fallos de seguridad descubiertos se identifican, definen y catalogan con un nombre y se añaden a una <a href="https://www.cve.org/">base de datos pública de vulnerabilidades de seguridad</a>. Al definir los fallos de seguridad se les asigna un nivel orientativo de gravedad, dos propiedades importantes que sirven para asignar la gravedad son como es la forma de explotar el fallo de seguridad, si requiere acceso físico al sistema o es posible explotarlo de forma remota, y que permite el fallo de seguridad, como ejecución de código remoto o obtención de información confidencial.</p>
<p>Aunque algunos fallos de seguridad permiten la ejecución remota de código no se consideran tan importantes si requieren acceso físico al sistema. Los más graves son aquellos que concurren ambas circunstancias, permiten explotar los fallos de seguridad de forma remota y permite realizar acciones graves como ejecución de código remoto, escalar privilegios u obtener información confidencial.</p>
<p>Por otro lado, la organización <a href="https://owasp.org/">OWASP</a> tiene documentados fallos de seguridad comunes en las aplicaciones y que conviene evitar, por ejemplo, el error de <em>sql injection</em> o <em>cross site scripting</em> que no por ser ya muy conocidos y no complicados de evitar dejan de ser graves si la aplicación no se implementa adecuadamente.</p>
<h3 id="el-problema-de-seguridad-de-log4j-2">El problema de seguridad de Log4j 2</h3>
<p>Un caso de error grave de seguridad denominado identificado con el nivel máximo en la escala de gravedad es el de la librería <a href="https://logging.apache.org/log4j/2.x/">Log4j 2</a> en las versiones menores a 2.3.2 (para Java 6), 2.12.4 (para Java 7) y 2.17.1 (para Java 8 y posteriores) que es posible explotarlo de forma remota y permite ejecución remota de código denominado <em>Log4Shell</em>. Log4j 2 es una librería de Java muy utilizada en los proyectos por ser una funcionalidad fundamental para cualquier aplicación que sirve para emitir trazas o <em>logging</em>.</p>
<ul>
<li><a href="https://www.lunasec.io/docs/blog/log4j-zero-day/">Log4Shell: RCE 0-day exploit found in log4j 2, a popular Java logging package</a></li>
</ul>
<p>Dada la gravedad del error descubierto y el amplio uso de la librería en los proyectos Java muchas organizaciones se han visto afectadas por el error de seguridad. La corrección del error requiere actualizar la versión de la dependencia de Log4j a una que no sea vulnerable al error. El problema es que muchas aplicaciones heredadas actualizar a la última versión no es posible e incluso actualizar a una versión compatible no vulnerable supone gran esfuerzo que requiere actualizar la dependencia en el código fuente, generar el nuevo artefacto, validarlo y hacer su despliegue en el entorno de producción.</p>
<p>Mientras se realiza la corrección conviene observar los registros de trazas, el uso de la CPU, red, memoria, almacenamiento y registros de <em>log</em> ante cualquier comportamiento anómalo para ver si la aplicación está siendo objeto de ataque.</p>
<p>Aún siendo Log4j una librería mantenida por tres personas de forma voluntaria su licencia de código abierto y alta calidad que muchas veces es mayor incluso que las opciones equivalentes comerciales es utilizada por muchas empresas incluso con facturaciones mil millonarias debido a que no necesitan pagar licencias de software para usarla. Sin embargo, no todas las empresas mil millonarias que usan un software que es vital para su negocio apoyan económicamente a esos proyectos de software que usan. Aún así, esos tres voluntarios pocas horas después de hacerse público el error con la ayuda de los interesados han publicado varias versiones de la librería con el fallo original y posteriores descubiertos corregidos.</p>
<p>Esta misma historia ya se repitió en el 2014 con <a href="https://www.openssl.org/">OpenSSL</a> con el denominado <a href="https://en.wikipedia.org/wiki/Heartbleed">Heartbleed</a> y se volverá a repetir con otro ejemplo en el futuro. Proyectos en los que no solo se fundamenta ya una empresa sino en los que se fundamenta internet cuyos desarrolladores trabajan de forma voluntaria sin apoyo económico.</p>
<ul>
<li><a href="https://arstechnica.com/information-technology/2014/04/tech-giants-chastened-by-heartbleed-finally-agree-to-fund-openssl/">Tech giants, chastened by Heartbleed, finally agree to fund OpenSSL</a></li>
<li><a href="https://veridicalsystems.com/blog/of-money-responsibility-and-pride/">Of Money, Responsibility, and Pride</a></li>
</ul>
<h3 id="analizar-y-detectar-fallos-de-seguridad-en-las-dependencias-de-java-con-gradle-y-maven">Analizar y detectar fallos de seguridad en las dependencias de Java con Gradle y Maven</h3>
<p>Dado que se volverá a repetir un fallo de seguridad como Log4 2 o <em>Heartbleed</em> y dado que es imposible estar seguro de que una dependencia no se vea afectada en algún momento por un fallo grave de seguridad conviene estar suscrito a los boletines de seguridad y analizar las dependencias, automatizar el análisis de las dependencias es la mejor opción para que la mayor parte del trabajo lo hagan las computadoras en vez de personas y detectar los fallos de seguridad en cuanto sean publicados.</p>
<p>La misma organización OWASP proporciona una herramienta automatizada para comprobar la seguridad de las dependencias de un proyecto. La herramienta se usa como un complemento en las herramientas de construcción <a href="https://gradle.org/">Gradle</a> o <a href="https://maven.apache.org/">Maven</a> y al ejecutar las tareas que añaden analizan las dependencias y versiones del proyecto y las compara con las bases de datos de errores conocidos. El resultado es un informe con una lista de las vulnerabilidades de cada librería del proyecto si es que tienen alguna.</p>
<p>En el siguiente ejemplo de proyecto con Gradle se incluye como dependencia una versión de Log4j 2 vulnerable, con el <em>plugin</em> de OWASP para detectar vulnerabilidades y la tarea <em>dependencyCheckAnalyze</em> se identifican los CVE a los que es vulnerable cada una de las dependencias en este caso la de Log4j 2. En cada uno de los CVE y en las referencias asociadas se detalla el fallo de seguridad.</p>
<ul>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2021-44228">CVE-2021-44228</a>, <a href="https://www.cve.org/CVERecord?id=CVE-2021-44832">CVE-2021-44832</a>, <a href="https://www.cve.org/CVERecord?id=CVE-2021-45046">CVE-2021-45046</a>, <a href="https://www.cve.org/CVERecord?id=CVE-2021-45105">CVE-2021-45105</a></li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s2">&#34;org.owasp.dependencycheck&#34;</span> <span class="n">version</span> <span class="s2">&#34;6.5.2.1&#34;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s2">&#34;org.apache.logging.log4j:log4j-core:2.14.1&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//implementation(&#34;org.apache.logging.log4j:log4j-core:2.17.1&#34;)&#10;</span><span class="c1"></span><span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.dependencycheck.App&#39;</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build-1.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew dependencyCheckAnalyze&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-dependencycheck.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">&gt; Task :app:dependencyCheckAnalyze&#10;Verifying dependencies for project app&#10;Checking for updates and analyzing dependencies for vulnerabilities&#10;Generating report for project app&#10;Found 4 vulnerabilities in project app&#10;&#10;One or more dependencies were identified with known vulnerabilities in app:&#10;&#10;log4j-core-2.14.1.jar (pkg:maven/org.apache.logging.log4j/log4j-core@2.14.1, cpe:2.3:a:apache:log4j:2.14.1:*:*:*:*:*:*:*) : CVE-2021-44228, CVE-2021-44832, CVE-2021-45046, CVE-2021-45105&#10;&#10;See the dependency-check report for more details.&#10;&#10;BUILD SUCCESSFUL in 2m 47s&#10;1 actionable task: 1 executed</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-dependencycheck-1.out</span>
    </div>
</div>
<p>Detectado el fallo de seguridad basta con cambiar la versión de Log4j 2 a la última no vulnerable y el error desaparece del informe.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s2">&#34;org.owasp.dependencycheck&#34;</span> <span class="n">version</span> <span class="s2">&#34;6.5.2.1&#34;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//implementation(&#34;org.apache.logging.log4j:log4j-core:2.14.1&#34;)&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span><span class="o">(</span><span class="s2">&#34;org.apache.logging.log4j:log4j-core:2.17.1&#34;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">application</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mainClass</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.dependencycheck.App&#39;</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build-2.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">&gt; Task :app:dependencyCheckAnalyze&#10;Verifying dependencies for project app&#10;Checking for updates and analyzing dependencies for vulnerabilities&#10;Generating report for project app&#10;Found 0 vulnerabilities in project app</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradle-dependencycheck-2.out</span>
    </div>
</div>
<p>En un proyecto con Maven el análisis se realiza con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">$</span> <span class="n">mvn</span> <span class="n">org</span><span class="o">.</span><span class="na">owasp</span><span class="o">:</span><span class="n">dependency</span><span class="o">-</span><span class="n">check</span><span class="o">-</span><span class="n">maven</span><span class="o">:</span><span class="n">6</span><span class="o">.</span><span class="na">5</span><span class="o">.</span><span class="na">2</span><span class="o">.</span><span class="na">1</span><span class="o">:</span><span class="n">check</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mvn.sh</span>
    </div>
</div>
<h4 id="analizar-repositorios-de-git">Analizar repositorios de Git</h4>
<p>En una organización con gran cantidad de repositorios de Git un error como este supone analizar cada uno de los proyectos, para automatizar la tarea el siguiente <em>script</em> clona los repositorios a analizar, detecta si es un repositorio Gradle o Maven y ejecuta la tarea de análisis de las dependencias.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">initscript</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">repositories</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">mavenCentral</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">classpath</span> <span class="s1">&#39;org.owasp:dependency-check-gradle:6.5.2.1&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">allprojects</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">apply</span> <span class="nl">plugin:</span> <span class="n">org</span><span class="o">.</span><span class="na">owasp</span><span class="o">.</span><span class="na">dependencycheck</span><span class="o">.</span><span class="na">gradle</span><span class="o">.</span><span class="na">DependencyCheckPlugin</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>init.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>&#10;<span class="nt">&lt;settings</span> <span class="na">xmlns=</span><span class="s">&#34;http://maven.apache.org/SETTINGS/1.0.0&#34;</span> <span class="na">xmlns:xsi=</span><span class="s">&#34;http://www.w3.org/2001/XMLSchema-instance&#34;</span> <span class="na">xsi:schemaLocation=</span><span class="s">&#34;http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd&#34;</span><span class="nt">&gt;</span>&#10;<span class="nt">&lt;/settings&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>settings.xml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">&#10;<span class="c1">#!/usr/bin/env bash</span>&#10;&#10;<span class="c1"># Checks Maven and Gradle dependencies vulnerabilities using OWASP plugins.</span>&#10;<span class="c1"># https://owasp.org/www-project-dependency-check/</span>&#10;&#10;<span class="nv">WORKDIR</span><span class="o">=</span><span class="s2">&#34;repositories&#34;</span>&#10;<span class="nv">USER</span><span class="o">=</span>picodotdev&#10;<span class="nv">REPOSITORIES</span><span class="o">=()</span>&#10;<span class="nv">REGEXP</span><span class="o">=</span><span class="s2">&#34;log4j-core&#34;</span>&#10;&#10;<span class="k">function</span> main<span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;mkdir -p <span class="nv">$WORKDIR</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">cd</span> <span class="nv">$WORKDIR</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> I in <span class="si">${</span><span class="p">!REPOSITORIES[@]</span><span class="si">}</span><span class="p">;</span> <span class="k">do</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">REPOSITORY</span><span class="o">=</span><span class="si">${</span><span class="nv">REPOSITORIES</span><span class="p">[</span><span class="si">${</span><span class="nv">I</span><span class="si">}</span><span class="p">]</span><span class="si">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="s2">&#34;Checking </span><span class="nv">$REPOSITORY</span><span class="s2"> (https://github.com/</span><span class="nv">$USER</span><span class="s2">/</span><span class="nv">$REPOSITORY</span><span class="s2">)&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&#34;</span><span class="nv">$REPOSITORY</span><span class="s2">&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git clone <span class="s2">&#34;git@github.com:</span><span class="nv">$USER</span><span class="s2">/</span><span class="nv">$REPOSITORY</span><span class="s2">.git&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">else</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">(</span><span class="nb">cd</span> <span class="nv">$REPOSITORY</span> <span class="o">&amp;&amp;</span> git pull origin<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">fi</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">[</span> -f <span class="s2">&#34;</span><span class="nv">$REPOSITORY</span><span class="s2">/pom.xml&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;checkMaven <span class="nv">$REPOSITORY</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">elif</span> <span class="o">[</span> -f <span class="s2">&#34;</span><span class="nv">$REPOSITORY</span><span class="s2">/build.gradle&#34;</span> -o -f <span class="s2">&#34;</span><span class="nv">$REPOSITORY</span><span class="s2">/settings.gradle&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;checkGradle <span class="nv">$REPOSITORY</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">else</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="s2">&#34;Not checkeable project </span><span class="nv">$REPOSITORY</span><span class="s2"> (not detected as Maven or Gradle project)&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">fi</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">done</span>&#10;<span class="o">}</span>&#10;&#10;<span class="k">function</span> checkMaven<span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">REPOSITORY</span><span class="o">=</span><span class="nv">$1</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">(</span><span class="nb">cd</span> <span class="nv">$REPOSITORY</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&#34;Checking </span><span class="nv">$REPOSITORY</span><span class="s2"> dependencies...&#34;</span> <span class="o">&amp;&amp;</span> mvn --settings ../../settings.xml org.owasp:dependency-check-maven:6.5.2.1:check<span class="o">)</span><span class="p">;</span> <span class="nv">EXIT_CODE</span><span class="o">=</span><span class="nv">$?</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">#(cd $REPOSITORY &amp;&amp; echo &#34;Checking $REPOSITORY dependencies...&#34; &amp;&amp; mvn --settings ../../settings.xml org.owasp:dependency-check-maven:6.5.2.1:check) | grep -E &#34;$REGEXP&#34; | sort | uniq; EXIT_CODE=${PIPESTATUS[0]}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$EXIT_CODE</span><span class="s2">&#34;</span> !<span class="o">=</span> <span class="s2">&#34;0&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="s2">&#34;Check not completed with success (</span><span class="nv">$EXIT_CODE</span><span class="s2">)&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">fi</span>&#10;<span class="o">}</span>&#10;&#10;<span class="k">function</span> checkGradle<span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">REPOSITORY</span><span class="o">=</span><span class="nv">$1</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">(</span><span class="nb">cd</span> <span class="nv">$REPOSITORY</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&#34;Checking </span><span class="nv">$REPOSITORY</span><span class="s2"> dependencies...&#34;</span> <span class="o">&amp;&amp;</span> gradle --init-script ../../init.gradle dependencyCheckAnalyze<span class="o">)</span><span class="p">;</span> <span class="nv">EXIT_CODE</span><span class="o">=</span><span class="nv">$?</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">#(cd $REPOSITORY &amp;&amp; echo &#34;Checking $REPOSITORY dependencies...&#34; &amp;&amp; gradle --init-script ../../init.gradle dependencyCheckAnalyze) | grep -E &#34;$REGEXP&#34; | sort | uniq; EXIT_CODE=${PIPESTATUS[0]}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="nv">$EXIT_CODE</span><span class="s2">&#34;</span> !<span class="o">=</span> <span class="s2">&#34;0&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="s2">&#34;Check not completed with success (</span><span class="nv">$EXIT_CODE</span><span class="s2">)&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">fi</span>&#10;<span class="o">}</span>&#10;&#10;main&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>owasp-vulnerabilities-check.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DependencyCheck">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew dependencyCheckAnalyze</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/index.html">Dependency Check Gradle Usage</a></li>
<li><a href="https://owasp.org/www-project-dependency-check/">OWASP Dependency-Check</a></li>
<li><a href="https://nullbeans.com/how-to-identify-vulnerable-dependencies-in-a-maven-project/">How to identify vulnerable dependencies in a Maven project</a></li>
<li><a href="https://www.infoworld.com/article/3644492/how-to-detect-the-log4j-vulnerability-in-your-applications.html">How to detect the Log4j vulnerability in your applications</a></li>
<li><a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/enabling-and-disabling-dependabot-version-updates#enabling-dependabot-version-updates">Enabling Dependabot version updates</a></li>
<li><a href="https://plugins.jenkins.io/dependency-check-jenkins-plugin/">Jenkins Plugin OWASP Dependency-Check</a></li>
<li><a href="https://anchore.com/opensource/">Anchore</a></li>
<li><a href="https://github.com/anchore/syft">Syft</a></li>
<li><a href="https://github.com/anchore/grype">Grype</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/11/ejemplo-de-un-potencial-ataque-informatico-de-phishing-el-caso-de-el-gatico-biever/</id>
        <title>Ejemplo de un potencial ataque informático de phishing, El caso de El Gatico Biever</title>
        <updated>2021-11-11T19:00:00+01:00</updated>
        <published>2021-11-11T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/11/ejemplo-de-un-potencial-ataque-informatico-de-phishing-el-caso-de-el-gatico-biever/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>A estas alturas la mayoría de la gente seguramente ya haya recibido a través de un medio u otro algún intento de tipo de ataque informático, ya sea a través del correo electrónico, mensajes SMS con enlaces o a través de aplicaciones de mensajería instantánea. Los ataques informáticos cada vez van a ir a más y serán más peligrosos a medida que más operaciones se realicen a través de internet, surgirán medidas adicionales de seguridad para evitarlos como el segundo factor de autenticación pero también surgirán nuevas formas de ataque, donde el componente humano seguramente siga siendo la parte más débil del sistema de seguridad. Este artículo es el relato de la historia de un potencial ataque informático de <em>phishing</em>.</strong></p>]]>
        <![CDATA[<p>Los ataques informáticos ya no se producen solo por descargar de una una fuente no confiable y ejecutar un programa en el ordenador, ni siquiera estos son los más peligrosos. Un virus informático requiere conocimientos avanzados de programación, tiempo para desarrollar un programa con la función maliciosa que no sea bloqueada por las medidas de seguridad del sistema operativo y distribuirla de alguna forma entre las potenciales víctimas para que se lo descarguen, los virus informáticos son una forma muy elaborada de realizar un ataque informático.</p>
<p>Aparte de los virus hay otras formas de ataque informático mucho más sencillas de desarrollar y de distribuir. Una ataque de <em>phishing</em> simplemente requiere desarrollar una página en la que la víctima introduzca los datos que se deseen robar que van desde información personal hasta credenciales de inicio de sesión en la banca online, servicios como <a href="https://www.google.com/intl/es/gmail/about/">Gmail</a> o <a href="https://www.paypal.com/">PayPal</a> o los datos de la tarjeta de crédito con los que robar el límite de saldo diariamente que la tarjeta permita hasta que el usuario o el banco la bloqueen.</p>
<p>Una vez está desarrollada la página de <em>phising</em> el siguiente paso es hacer que las víctimas accedan a ella, tan simple como enviar un enlace por algún medio como un mensaje de correo electrónico, mensaje SMS o una aplicación de mensajería instantánea a través del móvil.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="el-caso-de-el-gatico-biever">El caso de El Gatico Biever</h3>
<p>En este artículo comento un potencial caso como ejemplo y una vez leído me puedes comentar si crees que este era un ataque informático. En el que denominaré El caso del Gatico Biever está basado en una conversación real que mantuve por correo electrónico a la que he cambiado el nombre real del contacto y comentado los hechos relevantes del contenido de los mensajes.</p>
<p>Sin más, os dejo con la narración de El caso del Gatico Biever.</p>
<h4 id="el-contacto">El contacto</h4>
<p>Tengo un blog con ya casi una década de vida y más de 600 artículos publicados algunos posicionados en las primeras posiciones de las páginas de resultados por algunas combinaciones de palabras clave. El blog tiene casi 2.5K páginas vistas diariamente y unas 65K páginas mensuales.</p>
<p>Por algún motivo que desconozco pero supongo por el buen posicionamiento de algunas páginas y la autoridad del dominio, me sorprende la buena cantidad de comerciales que me contactan solicitando publicar algún artículo a cambio de una pequeña compensación económica. Quizá no todas las semanas recibo una oferta para publicar un artículo pero si cada uno o dos meses, algunas llegan a buen fin otras simplemente se quedan en el conocimiento de las condiciones.</p>
<p>El interés de estos comerciales al publicar el artículo es incluir algún enlace en los artículos hacia alguna página o servicio por motivos de SEO, a veces el interés es simplemente insertar un enlace en un artículo ya posicionado. Dar a conocer una página web o servicio desde cero o hacerlo crecer es difícil y requiere tiempo, para reducir este tiempo están dispuestos a pagar a sitios web existentes.</p>
<p>Uno de estos meses recibí un correo electrónico como remitente el Gatico Biever utilizando una dirección de Gmail precisamente proponiendome una oferta de colaboración para el blog con la intención de publicar hasta seis artículos al mes durante varios meses. Una oferta extraordinaria fuera de lo normal que suele ser exclusivamente de un artículo. El correo electrónico estaba redactado en inglés pero haciendo referencia al dominio de mi blog en el asunto del mensaje y diciendo que era un lector asiduo de mi blog.</p>
<p>El primer paso en estos contactos comerciales suele ser la negociación de las condiciones.</p>
<h4 id="la-negociación-y-la-propuesta">La negociación y la propuesta</h4>
<p>Una oferta de seis artículos al mes y durante varios meses parece una oferta muy atractiva. Los primeros puntos a conocer es en qué consiste el acuerdo si en la inserción de enlaces, publicar un artículo ya redactado o que escriba yo un artículo original en función de lo cual se determina el precio ya que cada una me requiere menos  o más tiempo.</p>
<p>Una vez conocida en qué consiste la colaboración está en la aceptación de las condiciones como que la temática de los artículos esté relacionado la programación, tecnología o software libre así como vetar algunas temáticas de artículos como apuestas, juegos de azar y otras temáticas controvertidas. Otras condiciones es que en el caso de los artículos deben ser únicos para evitar penalizaciones por contenido de publicar y ser detectado como un sitio de contenido no deseado. Comprar artículos y enlaces es una actividad que en caso de que Google la detecte la penaliza ya que es una forma de alternar y algoritmo de posicionamiento de una forma no permitida por Google.</p>
<p>Seis artículos patrocinados al mes son muchos artículos, casi más de los que escribo como contenido del blog. Para limitar el contenido patrocinado le propongo que solo acepto uno o dos artículos al mes.</p>
<p>Otro asunto importante de la colaboración es llegar a un acuerdo en el tema económico, poner un precio por publicar el artículo. Yo suelo ser claro y aunque puedo dejar ver que oferta me hacen suelo ir directo al tema para acabar negociar este punto sin mucha demora. Casi siempre empiezo con mi propuesta de oferta económica.</p>
<p>Hecha mi primera oferta económica al Gatito Biever este me responde con que esta le parece demasiado alta diciendo que su artículos son de calidad y la colaboración serán varios, no me indica en qué precio a él le parece bien el acuerdo económico sino que me deja en una pregunta abierta a que le haga otra oferta. Le hago una segunda oferta económica, que también rechaza y me propone su oferta económica que si fuera por un único artículo probablemente no aceptaría.</p>
<p>Como la colaboración iba a ser de varios artículos acepto su oferta con la condición de que los dos primeros fueran a un precio intermedio entre lo que ambos proponíamos, en los siguientes artículos al precio de lo que él proponía.</p>
<h4 id="las-sospechas">Las sospechas</h4>
<p>Acordados los términos de la colaboración y el precio comienza la colaboración que en este caso es simplemente que el Gatico Biever me proporcione el contenido del artículo, yo lo publique lo cual no suelo tardar más de uno o dos días y procedamos al pago en los términos acordados.</p>
<p>Pasa casi una semana sin que sepa nada del Gatico Biever con lo que me pongo en contacto con él para ver qué hay del asunto. Me responde al cabo de unos días diciendo que está trabajando en ello y me pide que elimine la página el publicidad en la que detallo que mi blog ofrece la posibilidad de este tipo de colaboraciones, en el correo me incluye la dirección de la página que quiere que elimine con el texto el de la dirección de la página pero el enlace tiene una dirección de un dominio que desconozco, le hago un <em>curl</em> a esa URL y parece simplemente una redirección a la página de mi blog pero a través de un dominio extraño.</p>
<ul>
<li><a href="https://www.google.es/">Google</a></li>
<li><a href="https://duckduckgo.com/">Google</a></li>
</ul>
<p>El motivo para solicitar la eliminación de esta página es para evitar penalizaciones por SEO ya que este tipo de colaboraciones no es algo aceptado por Google y seguramente lo penalice en casos extremos. La página de publicidad la tengo desde hace mucho tiempo y no he notado estar penalizado por Google.</p>
<p>Aquí es donde empiezo a sospechar ya que  en sus correos utiliza el típico lenguaje  de acción rápida como <em>hazlo lo más pronto posible</em>, <em>respondeme hoy</em> cuando él tarda en contestar varios días. Le insisto en que esa página de publicidad no es ningún problema y que me proporcione el contenido del artículo ya poniéndome un poco borde saludándose con un <em>Hola Gatico</em> y para finalizar su misma urgencia con un <em>ASAP</em>.</p>
<p>Él tarda nuevamente en responder un par de días. Me pongo de nuevo en contacto con él siendo nuevamente borde con que su actitud no es nada profesional. Si alguien me contesta en los mismos términos en los que yo lo hago inmediatamente termino con la colaboración, pero él no, no cae en la provocación me dice que él es un experto en SEO y que eliminar esa página es un requisito indispensable para su cliente.</p>
<p>Me doy cuenta que en realidad se poco de el Gatico Biever, me escribe en inglés y el dominio oculto del enlace de redirección parece de UK. Le pregunto que si es de UK y que tal van las cosas por UK con la situación que tienen del Brexit con un tono burlesco porque en un primer momento pienso que es alguien gastando una broma. Nuevamente si alguien se dirige a mi en los mismos términos que yo lo hago yo terminaría la colaboración. Pero él no, él responde con un «Sí, sí, lo has entendido bien» a lo de que él es de UK y que hablaremos más adelante cuando tenga un poco más de tiempo.</p>
<p>Otro correo me responde con un «Seguro querido», un ¿querido?, me dice que nos centremos en los negocios y que su cliente «Indulgente» está esperando a que elimine la página de publicidad.</p>
<p>Me doy cuenta de que en realidad se poco de el Gatico Biever, su «sí, sí» parece irónico y condescendiente y el «indulgente» parece muy&hellip; no se como definirlo ¿sacro? ¿de practicante, creyente, fiel religioso?, hacer colaboraciones profesionales con una cuenta que como nombre tiene Gatico Biever con una foto de catálogo que se encuentra y he encontrado fácilmente en una búsqueda por imágenes no parece profesional.</p>
<p>Llega la trampa, mi pequeña trampa.</p>
<h4 id="la-trampa">La trampa</h4>
<p>No estoy dispuesto a eliminar esa página de publicidad y ya estoy sospechando de que este sea un ataque informático aunque aún no se qué forma tendrá el ataque.</p>
<p>Me doy cuenta de que en realidad se poco del Gatico Biever, no es una cuenta profesional ni pone de que empresa de consultoría SEO pertenece, simplemente se identifica con un equipo SEO como organización en la despedida del mensaje.</p>
<p>Preparo un enlace a una página que tiene un enlace similar a la página de publicidad pero algo modificada que si uno no se fija en detalle pasa desapercibido que las páginas son diferentes. Si la página de publicidad es <em>/publicidad</em> le preparo una página <em>/publiciidad</em> que simula un error de página no encontrada como desea el Gatico Biever que haga.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/pages/advertising/">Publicidad</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/pages/advertiising/">Publicidad</a></li>
</ul>
<p>Le envío en un nuevo correo electrónico el enlace de la página de publicidad trucado esperando que él haga clic en él. Esta es la misma técnica para realizar un ataque de <em>phishing</em> en vez de utilizando otro dominio añadiendo simplemente un caracter de una nueva URL parecida a la original, como el dominio y sus URLs lo controlo yo puedo hacerlo y lo hago.</p>
<p>¿Caerá en la trampa? Necesita hacer clic en el enlace que le he enviado yo, si entra directamente a la página para comprobar si he eliminado la página de publicidad no es de mucha utilidad.</p>
<p>Pues Gatico Biever cae en la trampa hace clic en enlace directamente desde el correo electrónico y como se que ese enlace solo lo tiene él sé que ha sido él, ahora analizo los datos que me proporciona <a href="https://www.google.es/intl/es/analytics/">Google Analytics</a> para conocer algo más de el Gatico Biever.</p>
<h4 id="la-exploración">La exploración</h4>
<p>Los datos de Analytics me permiten ver unos datos básicos anónimos pero algo más de quien es el Gatico Biever como su país de origen, que navegador utiliza y que sistema operativo utiliza. Veo que su país de origen es Pakistan, su sistema operativo es Windows 10 y el navegador web que utiliza es <a href="https://www.google.es/chrome/browser/desktop/">Google Chrome</a> actualizado a la última versión.</p>
<p>El país de origen me pone en alerta ya que es un país de oriente medio en una zona posiblemente en conflictos armados. Seguramente no tenga muchos visitantes de Pakistan asi que creo un segmento con los visitantes de este país y miro qué páginas ha visitado. No ha visitado muchas páginas pero veo que se ha parado alguna algo más de tiempo en la que hablaba de PayPal, la hemeroteca donde también hablaba de dinero y otra donde mencionaba la aplicación autenticador de Google. Otro dato que veo es que además de visitar la página preparada por mi ha visitado la página de publicidad original después de proporcionarle el enlace, asi que sé que sabe que en realidad no he eliminado la página de publicidad.</p>
<p>El primer correo ya me debería haber hecho sospechar, por el mismo nombre del remitente, parecer una plantilla, decir que me visita regularmente alguien que habla en inglés. Ahora con estos datos tengo aún más sospechas. Aún no sé de qué forma será el ataque ni qué interés tiene esta yincana de eliminar la página de publicidad en todo ello, igual es un filtro para discriminar a usuarios fáciles de los difíciles o de adoctrinar a la víctima para que haga lo que se le dice.</p>
<p>El Gatico Biever ignora que en realidad no he eliminado la página de publicidad y me envía el contenido del artículo. Analizó el contenido del artículo que está en buen español, no parece un artículo que esté obteniendo de internet ni esté ya publicado en otro sitio web. Me dice que lo publique cuanto antes porque tiene varios artículos más.</p>
<p>Le digo que mientras lo publico me conteste de qué forma me va a pagar con una pregunta abierta. Me contesta que me paga con PayPal pero no cuál será el procedimiento, así que le insisto con cual es el procedimiento que suele utilizar para hacer el pago. Me responde con un «querido» y me dice con un tono imperativo en lo que yo haré que su procedimiento es que yo le proporcione mi dirección de PayPal en la que hacerme el pago y que me envía un enlace para que compruebe que me ha hecho el pago.</p>
<p>Vale ahora tengo claro cual es su forma de ataque si es que es un ataque, un ataque de <em>phishing</em> sobre la página de PayPal. Pobre Gatico Biever que si este es su ataque no sabe que tengo activado el segundo factor de autenticación, no es infalible pero si no lo impide al menos limita el tiempo en el que es posible el ataque, concretamente tienen unos 30 segundos en caso de que sea víctima si su ataque de <em>phishing</em> soporta el segundo factor de autenticación que no creo.</p>
<p>Le pido más información con la excusa de que por razones legales le tengo que emitir una factura para pagar impuestos, con lo que le pido cierta información como nombre y apellidos, dirección y nombre de la compañía.</p>
<p>Parece que se ha cansado de esta pequeña yincana que le estoy haciendo y me propone sin yo haber publicado el artículo todavía hacerme el pago por adelantado con lo que me pide mi dirección de correo asociada a PayPal y nuevamente me repite que me proporcionará un enlace que podré usar para comprobar el pago.</p>
<p>Aquí ya tengo la intención de dejarlo pasar, podría ir más lejos para que me envíe el enlace de la página de <em>phishing</em>, podría inventarme cualquier dirección de correo electrónico como por ejemplo <em>felipin.demaritxalar.yvorvon[at]gmail.com</em> a ver si es capaz de hacer el pago y enviarme el enlace para que lo compruebe que sospecho es de <em>phishing</em>. ¿O será ese nombre demasiado evidente que se de cuenta? Posiblemente para alguien de Pakistan no sea tan evidente. Si le doy una dirección de PayPal, supongo que me insistirá en que me ha hecho el pago y que lo compruebe.</p>
<p>Como ve que ya no respondo me envía un nuevo correo al cabo de una semana con unos datos para atender a mi petición. Me dice que es de Reino Unido y me da como nombre real Ethan Biever. Busco por el nombre que me da y las primeras referencias son los nombres de dos personajes de un película.</p>
<p>Llegar hasta el punto de que me de el enlace de <em>phishing</em> tampoco tiene ninguna utilidad, no soy policía, muy posiblemente ni ellos podrían hacer algo aunque fuese víctima del ataque y aunque le denuncie ante Google es seguro que será capaz de crearse una nueva dirección de correo electrónico con la que seguir haciendo ataques.</p>
<h4 id="el-final-tú-que-crees">El final, ¿tú que crees?</h4>
<p>Bueno, la mayoría sois lectores, otras personas equivalentes a mi serán <em>youtubers</em>, <em>podcasters</em> o <em>streamers</em> pero todavía quedamos algunos <em>bloggers</em> de la vieja escuela, en cualquier caso este es solo un ejemplo, podría llegar en realidad a cualquiera persona ni siquiera estar englobada en ningún colectivo y podría ser de otra forma con alguna excusa que un delincuente tenga su correo electrónico y una forma de contactarte por el ordenador o con teléfono inteligente.</p>
<p>Los indicios que parecen indicar ser un ataque informático son el nombre de la cuenta, la forma de dirigirse a mí con un «querido», una oferta de colaboración muy atractiva respecto de lo que suele ser lo habitualmente, algunas respuestas que me da condescendientes, ignora mi mala educación y falta de respeto, ignora que no he hecho lo que me ha pedido de eliminar la página de publicidad, su país de origen, utilizar lenguaje imperativo, pedir inmediatez y se ofrece a hacerme el pago por adelantado sin yo haber publicado el artículo.</p>
<p>El perfil de la persona que me hago del tipo de Gatico Biever es el siguiente. Aceptan tus insultos y faltas de respeto mientras te están esperando a que cometas un error, tus insultos los soportan hasta que cometes el error, disfrutan de tu desorientación como cuando le pregunto si es de UK y me responde con un «si, si». Es como si buscarán duelos o peleas, pero no son duelos cara a cara son duelos de engaño, en los que dan la imagen de ir todo bien, pierde es el que cae en la trampa. Se burlan a su modo, de forma velada con lo de «Indulgente», igual que yo con lo de «froilin» o su propio nombre sacado de una película.</p>
<p>No se que criterio ha elegido para realizar un ataque, no sé si entenderá algo de español y habrá investigado algo sobre la víctima en este caso yo con lo que he publicado en en blog y mi cuenta de <a href="https://twitter.com/">Twitter</a>, posiblemente haya recopilado un conjunto de direcciones de correo electrónico públicas y enviado un mensaje a ver cuantos responden. Porque elegir como víctima de un ataque informático a un usuario que es informático y que usa GNU/Linux no parece la víctima ideal, es como intentar ir a robar la casa de un cerrajero. Qué lo puede intentar pero ambos sabemos mucho más de las técnicas que utilizan los delincuentes para cometer sus delitos y seguramente las medidas de seguridad que tenemos son mucho mejores. El cerrajero utilizando una puerta acorazada, una cerradura que evite las técnicas conocidas de apertura sin forzado, técnicas para detectar si una casa está habitada o un escudo en la cerradura que evite ciertas técnicas de forzado. Yo por mi parte como informático es posible que conozco y conozco el segundo factor de autenticación y tengo las nociones básicas de ataques informáticos.</p>
<p>Parece un ataque de <em>phishing</em> ¿tu que crees? Porque claro no voy a seguir hasta el final para comprobarlo. Al menos le he hecho perder un poco de tiempo, he marcado sus correos como no deseados o <em>spam</em> y le he denunciado en Gmail como ataque de <em>phishing</em> que no sé si servirá de algo o será suficiente para que Google tome alguna acción.</p>
<p>Fin.</p>
<h3 id="cómo-denunciar-el-intento-o-ataque-informático">Cómo denunciar el intento o ataque informático</h3>
<p>Cómo comentaba en el artículo <a href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/">nociones básicas para detectar un ataque y evitarlo</a> en caso de ser víctima de un ataque conviene denunciarlo. La unidad de delitos informáticos de los diferentes cuerpos de policía y un perito judicial informático seguro que os podría contar cientos de casos, pero seguramente el mejor consejo que den sea evitar ser víctima de un ataque informático. Ellos están para ayudar, proteger, minimizar daños, prevenir nuevos delitos, obtener pruebas y poner a disposición de la justicia a delincuentes pero muchas veces tras haber ocurrido los hechos el grave daño causado ya no es reparable. Y a veces les será muy difícil por estar los delincuentes en otros países. Muchos ataques informáticos como este ejemplo no son difíciles de detectar con las nociones básicas.</p>
<p>En los términos y condiciones del correo electrónico de Gmail no permite utilizarlo para realizar actividades ilegales incluyendo el <em>phishing</em> y ofrecen herramientas para denunciarlo, desde el propio Gmail y desde páginas específicas. Para <a href="https://www.google.com/gmail/about/policy/">denunciar una cuenta de correo</a> que esté siendo utilizada para realizar actividades ilegales es posible tomar dos medidas, una marcar el correo como <em>spam</em> que Gmail tiene en cuenta, si son varios usuarios lo que lo hacen los correos del remitente a los usuarios les llegará a la carpeta de <em>spam</em> en vez de a la bandeja de entrada. La segunda opción es denunciar un mensaje como suplantación de identidad, aunque en realidad el Gatico Biever no me ha enviado el enlace de <em>phishing</em>.</p>
<p>En caso de recibir el enlace es posible además <a href="https://support.google.com/a/answer/134413?hl=en">denunciar la página de <em>phishing</em></a> para que esta sea incluida en la lista negra de páginas identificadas maliciosas. Supongo una persona que trabaje para Google analizará estas peticiones y en caso de corroborarlo la página será añadida a la lista negra. Esta lista negra es utilizada por los navegadores para mostrar un mensaje de advertencia cuando un usuario intente entrar en ella, poniendo sobre aviso al usuario y aconsejando no entrar.</p>
<h3 id="minimizar-daños-de-posibles-ataques-informáticos">Minimizar daños de posibles ataques informáticos</h3>
<p>Nadie está exento de ataques, ni alguien como yo que tiene conocimientos en informática y conozco las nociones básicas de los ataques, que inicialmente me resultó extraño el correo pero que hasta bastante avanzada la conversación con unos cuantos correos electrónicos enviados no empecé a realmente sospechar.</p>
<p>Por ello conviene tomar una serie de medidas como establecer límites transferencias y tarjeta de crédito más bajos que los que establecen por defecto los bancos que suelen ser muy generosos, activar el segundo factor de autenticación para que aunque roben las credenciales de una cuenta evitar el ataque o permitirlo únicamente durante un breve periodo de tiempo si la página de <em>phishing</em> fuera tan avanzada como para estar preparada para obtener también el segundo factor de autenticación.</p>
<p>En una de estas situaciones de ataque informático conviene que el atacante sepa lo menos posible de uno, por ello conviene <a href="https://picodotdev.github.io/blog-bitix/2021/11/por-que-proteger-tu-privacidad-y-que-informacion-tuya-se-puede-encontrar-con-una-busqueda-en-internet/">proteger tu privacidad y minimizar la información tuya se puede encontrar con una búsqueda en internet</a>.</p>
<p>No hay otra opción de que quede impune, si es un delincuente y parece serlo por los varios indicios va a continuar haciendo su actividad y algún usuario más incauto sea su víctima, está claro que si realizan esta actividad es porque obtienen algún beneficio. La conclusión en cualquier caso es, se bueno pero ten un poco de joputismo para conocer a los malos, hay una buena cantidad de joputas malos por ahí.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/11/por-que-proteger-tu-privacidad-y-que-informacion-tuya-se-puede-encontrar-con-una-busqueda-en-internet/</id>
        <title>Por qué proteger tu privacidad y qué información tuya se puede encontrar con una búsqueda en internet</title>
        <updated>2021-11-04T19:00:00+01:00</updated>
        <published>2021-11-04T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/11/por-que-proteger-tu-privacidad-y-que-informacion-tuya-se-puede-encontrar-con-una-busqueda-en-internet/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>La privacidad de las personas es un derecho. Un derecho que con internet y el tratamiento de datos que hacen ya todos los negocios y servicios no es fácil proteger. O aceptas los términos y condiciones de los servicios en los que quieres crear una cuenta o no permiten crearla, algunos servicios permiten cambiar algunas opciones para no recibir comunicaciones comerciales por correo electrónico pero el tratamiento de datos está implícito en la aceptación de las condiciones.</p>
<p>Un buscador como <a href="https://www.google.es/">Google</a> permite encontrar datos de una persona relacionada con ella incluso pasado algún lustro. A través de las redes sociales es posible conocer cualquier cosa que una persona comparta de forma pública.</p>
<h3 id="por-qué-proteger-tu-privacidad">Por qué proteger tu privacidad</h3>
<p>Internet ofrece muchas posibilidades pero también tiene otros inconvenientes. Uno de ellos es que es muy fácil perder el control de la privacidad. Una vez algo se ha publicado a través de internet es difícil revocar la información y ejercer el derecho al olvido para que esa información que se desea eliminar lo sea. Una vez publicado algo en internet cualquier persona que tenga acceso lo puede copiar o republicar en cualquier otra ubicación en la que ya no se tiene el control. Lo que en un momento se considera como poco importante publicar más adelante puede desearse que no hubiese sido publicado, el problema es que publicar algo es muy fácil pero eliminar algo publicado es muy difícil.</p>
<p>Las redes sociales como <a href="https://www.facebook.com/">Facebook</a>, <a href="https://www.instagram.com/">Instagram</a> o <a href="https://twitter.com/">Twitter</a> permiten relacionarse con personas en cualquier parte del mundo, conocidas y desconocidas. En estas redes sociales se publica gran cantidad de información personal que alguien interesado en conocerla le permite un acceso sencillo. Con algo tan simple como publicar el nombre y apellidos de una persona ya es posible encontrar mucha otra información utilizando un buscador como Google, cualquier página pública a la que Google tenga acceso la indexa en su buscador, y a partir de aquí a más información en las redes sociales que esté como pública.</p>
<p>En los términos y condiciones que nadie lee al crear una cuenta en un servicio se detallan las autorizaciones que se otorga a la empresa por el hecho de usar su servicio, en esos términos con una jerga legal dificil de entender y larga para agotar en su lectura se incluyen apartados que suele detallar que el propietario del servicio procesa y compartirá los datos con terceras partes. A partir de compartir estos datos luego uno no sabe porque le llegan llamadas comerciales telefónicas cuando no se ha tenido relación ninguna con esa empresa de la que nos llama el comercial o mensajes SMS al teléfono móvil.</p>
<p>Algunos ataques informáticos son realizados de forma masiva pero otros son llevados a cabo de forma individualizada más laboriosa pero menos, que alguien que está intentando perpetrar un ataque informático sepa cosas de la víctima le da mayor conocimiento para realizar un ataque de ingeniería social.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/">Manual básico sobre ataques informáticos, peligros, tipos, cómo detectarlos, cómo evitarlos y medidas de prevención</a></li>
</ul>
<h3 id="busca-información-tuya-a-través-de-datos-que-te-identifican">Busca información tuya a través de datos que te identifican</h3>
<p>Es fácil averiguar cuánta información personal de uno mismo hay publicada en internet con una simple búsqueda en Google cualquier dato personal que identifique a una persona. A partir de uno de estos datos personales es posible encontrar mucha información de lo que hace una persona, que piensa a través de lo que dice, fotos suyas, de sus familiares y amigos, su ciudad y lugar de residencia, de vacaciones, lugar de trabajo y profesión, aficiones, &hellip;</p>
<p>Los datos personales a través de los que averiguar la información que haya en internet de una persona son: nombre y un apellido, nombre y dos apellidos, DNI, número de teléfono móvil, dirección de correo electrónico o si utiliza su seudónimo. Si se sabe algo de esa persona como su ciudad de residencia permite descartar coincidencias en caso de obtener varias.</p>
<p>Pon en Google tu nombre y apellidos, DNI, tu correo electrónico, tu número de móvil que son algunas cosas que te identifican y mira la información que encuentras de ti mismo. Cuando se dice que Google conoce más de ti que tú mismo es cierto en el aspecto de que muy posiblemente hay cosas que tu ya has olvidado pero Google es capaz de encontrar.</p>
<p>Y Google también es capaz de reconocer texto en las imágenes. Busca también en <a href="https://www.google.com/imghp">Google Imágenes</a> ahí también se encuentran fotos a partir de los datos identificativos.</p>
<h3 id="conclusión">Conclusión</h3>
<p>Quizá te asustes de lo que puede conocer alguien de ti con interés por información que tú mismo has publicado. En el momento de publicar la información quizá no se le da importancia pero en el futuro en alguna circunstancia quizá se desease eliminar esa información cosa que erá muy difícil o quizá no sea posible.</p>
<p>Cada uno es libre de hacer con su privacidad lo que mejor le parezca. Yo recomiendo protegerla porque es fácil perderla pero muy difícil recuperarla. La privacidad no involucra solo la de uno mismo sino también la de los demás, si tú no le das importancia a tu privacidad otras personas si se la damos por ello si publicas datos o fotos no publiques ninguna que incluya a ninguna persona de la que no tengas su consentimiento.</p>
<p>La razón de utilizar un pseudónimo en internet es para utilizar un nombre que no sea el nombre y apellidos reales, esto permite separar en parte el <em>alter ego</em> de la persona real y desecharlo en caso de desearlo.</p>
<p>Yo suelo decir&hellip;</p>
<blockquote>
<p>A mi me encanta LinkedIn, y eso que no tengo cuenta.</p>
<p>-  picodotdev</p>
</blockquote>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/</id>
        <title>Medidas de seguridad a implementar para prevenir y minimizar daños en ataques informáticos</title>
        <updated>2021-10-28T19:00:00+02:00</updated>
        <published>2021-10-28T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los ataques informáticos dirigidos a los usuarios tienen el objetivo con una motivación económica del delincuente de robarles las credenciales de sus cuentas, datos de tarjetas de crédito y datos personales, otros ataques están dirigidos a los servicios que usan los usuarios. De los ataques dirigidos a los usuarios implementando las medidas de seguridad adecuadas en el servicio varios tipos de ataques son evitables como el <em>phishing</em> que es uno de los más comunes ofreciendo inicio de sesión con segundo factor de autenticación y con otras medidas los daños y riesgos son limitables. Otras medidas de seguridad implementadas en el servicio evita riesgos como usar <em>salted pasword hashing</em>. Como programadores los servicios deben hacer uso de buenas prácticas e implementar medidas adicionales para evitar riesgos y daños.</strong></p>]]>
        <![CDATA[<p>Algunos ataques informáticos están dirigidos a las empresas y sus sistemas de computación explotando alguna vulnerabilidad de seguridad. Tener un fallo de seguridad ya de por sí es un grave problema para la imagen de la empresa también con consecuencias económicas de pérdida de clientes o valor en la bolsa sino también legales con posibles cuantiosas multas , además de otras consecuencias intangibles como la reputación entre sus clientes y usuarios.</p>
<p>Otros ataques están dirigidos hacia los usuarios como el robo de datos personales, bancarios o credenciales con técnicas de suplantación de identidad o <em>phishing</em>. Aún hoy en día muchas personas apenas tienen unos conocimientos básicos de tecnología y la mayoría desconoce las medidas básicas de seguridad. Estas personas aún con una alfabetización digital muy básica están rodeadas de tecnología y realizan importantes tareas como compras y transacciones bancarias. Muchas personas son víctimas de fraudes y estafas por internet, a veces por su desconocimiento pero también a veces porque las empresas no implementan medidas de seguridad suficientes para que sus servicios sean más difícil de ser explotados.</p>
<p>Los informáticos tenemos una gran responsabilidad para diseñar sistemas seguros aplicando las mejores prácticas de seguridad no solo como algo adicional a la finalización de una funcionalidad, sino involucrando al rol de <em>security operations</em>  o <em>SecOps</em> desde el inicio, al igual que no se deben dejar las pruebas de aseguramiento de calidad para el final la seguridad tampoco debería.
Los bancos utilizan medidas adicionales para realizar operaciones pero algunas medidas de seguridad dejan que desear en varios aspectos como requerir para todas las cuentas bancarias  iniciar sesión en la banca <em>online</em> con el número del DNI y un código de seis dígitos, no implementar medidas de notificación de pagos, transferencias o falta un registro de actividad completo en la cuenta digital.</p>
<p>Sin embargo, me da miedo que un banco que debería ser un referente en medidas de seguridad incluyan en la página donde los usuarios introducen sus credenciales para el acceso a la banca online recursos JavaScript de <a href="https://www.facebook.com/">Facebook</a>, <a href="https://twitter.com/">Twitter</a> y de dominios ajenos al banco que no controlan para hacer analítica web de seguimiento de usuarios.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="inyección-de-sql-xss-_tabnabbing_-y-otras-vulnerabilidades-básicas">Inyección de SQL, XSS, <em>tabnabbing</em> y otras vulnerabilidades básicas</h3>
<p>Hay errores de seguridad comunes identificados hace ya tiempo que aún no están obsoletos, no son errores de seguridad complejos de explotar y tampoco son errores complejos de evitar usando las técnicas adecuadas de programación o evitando utilizar ciertas operaciones en la manipulación de datos. Varios de los errores de seguridad son por usar datos provenientes de fuentes no confiables sin aplicar el tratamiento adecuado. Aún siendo errores simples son peligrosos en una aplicación vulnerable.</p>
<p>La fundación OWASP mantiene un registro detallado de los diferentes tipos de seguridad, explicando el problema de seguridad y cómo evitarlos. También publicar cada ciertos años una lista de los 10 errores más comunes durante ese año.</p>
<ul>
<li><a href="https://owasp.org/www-community/attacks/">List of Attacks</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html">SQL Injection Prevention Cheat Sheet</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/XSS_Filter_Evasion_Cheat_Sheet.html">XSS Filter Evasion Cheat Sheet</a></li>
<li><a href="https://owasp.org/www-community/attacks/Reverse_Tabnabbing">Reverse Tabnabbing</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/">El problema de seguridad tabnabbing y phishing en los enlaces en nuevas pestañas a páginas externas y cómo solucionarlo</a></li>
</ul>
<h3 id="_salted-password-hashing_"><em>Salted Password Hashing</em></h3>
<p>Una aplicación que guarda credenciales para autenticar a los usuarios habitualmente solicita dos datos, un identificador del usuario o de la cuenta y una contraseña que como solo conoce el legítimo usuario permite identificarle en el sistema al iniciar sesión. Los identificadores de los usuarios y las contraseñas la aplicación necesita guardarlas en una base de datos para que la aplicación las compare con las que proporciona un usuario al iniciar sesión.</p>
<p>Guardar la contraseña en la base de datos el valor original que el usuario ha proporcionado es un peligro ya que cualquier persona con acceso a la base de datos es capaz de conocer el valor de la contraseña. Para no guardar el valor original es posible utilizar una función de <em>hash</em> de un solo sentido que permite transformar el valor original en otro derivador a partir del cual no es posible conocer el valor original pero permite conocer si es válido aplicando la función al dato proporcionado y comparándolo con el guardado en la base de datos. Sin embargo, usar una función <em>hash</em> no es suficiente ya que utilizando un ataque de diccionario con valores precalculados de <em>hashes</em> de  valores comunes de contraseñas permite identificar cuentas con contraseñas débiles.</p>
<p>La forma correcta de guardar contraseñas es utilizando cifrado o sin cifrado utilizando una versión modificada de <em>hash</em> denominada <em>salted password hashing</em> que evita ataques de diccionario.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/">Guardar contraseñas usando «Salted Password Hashing» y otras formas correctas</a></li>
</ul>
<h3 id="implementación-de-segundo-factor-de-autenticación">Implementación de segundo factor de autenticación</h3>
<p>Muchos usuarios no tienen conocimientos de informática, ni una alfabetización digital avanzada. Estos usuarios con unos conocimientos mínimos utilizan la tecnología por ser necesaria ya para muchas tareas o permitir realizarlas de forma más rápida y sencilla. Pero incluso usuarios con muchos conocimientos avanzados de tecnología también son vulnerables a ciertos tipos de ataques como los de <em>phishing</em> sin las precauciones adecuadas. Los ataques de suplantación de identidad o <em>phishing</em> son empleados por los delincuentes para robar información personal, credenciales de acceso a cualquier tipo de servicio y datos bancarios como tarjetas de crédito.</p>
<p>Las aplicaciones que ofrecen el segundo factor de autenticación y los usuarios que lo emplean mantienen su cuenta a salvo incluso si son víctimas de un ataque de <em>phishing</em>. Con el segundo factor de autenticación además de la contraseña que es el algo que solo el usuario sabe se requiere algo que se tiene que sería un generador de códigos temporales. En un ataque de <em>phishing</em> los delincuentes se hacen con lo que se sabe, si esto es lo único que permite el acceso a una cuenta es suficiente para que los delincuentes accedan a ella. Con el segundo factor de autenticación la contraseña no es suficiente se requiere un código adicional, en caso de que un ataque de <em>phishing</em> robase el código temporal sólo permitiría iniciar sesión en la cuenta durante un breve periodo de tiempo habitualmente de 30 segundos.</p>
<p>Los servicios más conocidos implementan el segundo factor de autenticación que los usuarios deben activar, no es difícil de implementar en Java.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/">Qué es, por qué y cómo activar un segundo factor de autenticación en Google, Amazon, PayPal y otros servicios</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/">Implementar un segundo factor de autenticación en una aplicación web Java con Spring</a></li>
</ul>
<h3 id="notificación-de-acciones-relevantes">Notificación de acciones relevantes</h3>
<p>Algunas operaciones son relevantes desde el punto de vista de seguridad, como el inicio de sesión, un intento fallido de inicio de sesión, cambio de contraseña o realización de algunas operaciones en el ámbito de la aplicación. Para mejorar la seguridad conviene enviar en este tipo de acciones una notificación al usuario que permita advertir ante acciones que se puedan realizar sin su conocimiento. Las notificaciones permiten al usuario tomar medidas en caso de que detecte acciones fraudulentas. Las notificaciones pueden ser a través de un correo electrónico, mensaje SMS o a través de mensajería instantánea.</p>
<p>Estos son dos ejemplos de correos electrónicos que envía <a href="https://www.google.com/intl/es/gmail/about/">Gmail</a> y <a href="https://es.wallapop.com/">Wallapop</a> para notificar al usuario de un nuevo inicio de sesión en su cuenta.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/images/gmail-inicio-sesion_huee3b0496a171157529c82e29f9f8cebc_80671_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Notificación de Gmail de inicio de sesión"><img src="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/images/gmail-inicio-sesion_huee3b0496a171157529c82e29f9f8cebc_80671_300x200_fit_box_3.png" width="161" height="200" alt="Notificación de Gmail de inicio de sesión" title="Notificación de Gmail de inicio de sesión"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/images/wallapop-inicio-sesion_hu62f37908c47c484e5c6522c4c79fd755_123506_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Notificación de Wallapop de inicio de sesión"><img src="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/images/wallapop-inicio-sesion_hu62f37908c47c484e5c6522c4c79fd755_123506_300x200_fit_box_3.png" width="103" height="200" alt="Notificación de Wallapop de inicio de sesión" title="Notificación de Wallapop de inicio de sesión"  class="lozad "></a></p>
<figcaption>Correos electrónicos de notificación de inicio de sesión</figcaption>
</figure>
</div>
<h3 id="registro-de-actividad">Registro de actividad</h3>
<p>Mantener un registro de la actividad es otra variante para dar visibilidad y permitirle al usuario identificar actividad fraudulenta en su cuenta en caso de que haya sido víctima de un ataque o sus credenciales hayan sido robadas. Algunos servicios mantienen un registro con las fechas de los últimos inicios de sesión, la dirección IP de la computadora junto con su geolocalización que permite conocer su ubicación aproximada, el navegador usado, sistema operativo o fecha de últimos cambios de contraseña.</p>
<p>Además de proporcionar al usuario un registro de actividad al mismo tiempo este conviene guardarlo en los registros del propio servicio en caso de necesitar investigar actividad sospechosa.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/images/gmail-registro-actividad_hu684b93583f6beeef0a82426816b767c2_138167_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Registro de actividad en una cuenta de Gmail"><img src="https://picodotdev.github.io/blog-bitix/2021/10/medidas-de-seguridad-a-implementar-para-prevenir-y-minimizar-danos-en-ataques-informaticos/images/gmail-registro-actividad_hu684b93583f6beeef0a82426816b767c2_138167_300x200_fit_box_3.png" width="178" height="200" alt="Registro de actividad en una cuenta de Gmail" title="Registro de actividad en una cuenta de Gmail"  class="lozad "></a></p>
<figcaption>Registro de actividad en una cuenta de Gmail</figcaption>
</figure>
</div>
<h3 id="establecer-límites-de-uso">Establecer límites de uso</h3>
<p>Ya sea por una fallo de seguridad en un servicio vulnerable que ha sufrido un ataque o por un ataque dirigido al usuario por ejemplo con un ataque de <em>phishing</em> es posible implementar medidas no dirigidas a evitar los ataques sino a mitigar o reducir los posibles daños de un posible ataque.</p>
<p>Para mitigar los posibles daños un servicio puede implementar medidas para limitar los datos como establecer un límite de intentos fallidos de inicio de sesión antes de bloquear la cuenta de forma temporal. Los bancos por ejemplo permiten activar o desactivar las tarjetas de crédito a petición del cliente que impidan la autorización de operaciones, con esta medida aunque un usuario haya sido atacado y un delincuente haya robado los datos de su tarjeta de crédito este puede desactivarla para evitar operaciones fraudulentas con ella unido a la notificación de acciones relevante un usuario puede actuar para evitar más daños. Otras medidas que utilizan los bancos son establecer límites de disposición de efectivo diario, importe máximo de transferencias, importe máximo en comercios físicos y electrónicos y de compras por internet.</p>
<h3 id="cifrar-información-personal">Cifrar información personal</h3>
<p>Los datos personales están protegidos por leyes, un fallo de seguridad con el resultado de robo de datos personales también tiene consecuencias legales para la empresa con importantes multas y económicas por pérdida de clientes y mala imagen.</p>
<p>Los datos a proteger de los usuario son aquellos que permita identificarlos como nombre y apellidos, DNI, dirección de correo electrónico, dirección del domicilio, número de teléfono y por supuesto datos bancarios como número de cuenta y tarjetas de crédito.</p>
<p>Para evitar el riesgo de un ataque dirigido al servicio que ocasione una fuga de datos es conveniente cifrarlos. Incluso para que los empleados que trabajan en la empresa no conozcan a quién corresponden esos datos.</p>
<p>Cifrados los datos aun teniendo acceso a ellos la información está protegida ya que es necesario descifrarlos para obtener el valor original.</p>
<p>Vault es una aplicación que ofrece el cifrado como servicio entre otras funcionalidades de seguridad.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/">Cifrado y descifrado como servicio con Vault</a></li>
</ul>
<h3 id="informar-a-los-usuarios">Informar a los usuarios</h3>
<p>Para prevenir fraudes otras medidas sencillas son informar a los usuarios de unas medidas básicas de prevención de fraude y explicar cómo son los procedimientos de comunicación.</p>
<p>Algunos son desconfiar de mensajes inesperados, no acceder a enlaces de mensajes SMS, de mensajería instantánea y leer con atención la dirección en el navegador de los enlaces a los que se acceder.</p>
<p>Nunca facilitar datos personales, credenciales de acceso a una cuenta no datos de tarjetas bancarias. Tampoco descargar ni instalar aplicaciones si no provienen de las tiendas oficiales del dispositivo. Y activar las notificaciones para conocer la actividad en la cuenta del servicio.</p>
<h3 id="comunicaciones-entre-servicios">Comunicaciones entre servicios</h3>
<p>La arquitectura de las aplicaciones tienden a diseñarse de forma que ofrezcan un medio de invocar sus funcionalidades mediante llamadas de red ya sea con el protocolo HTTP mediante REST, GraphQL o gRPC.</p>
<p>Para autorizar las llamadas a los servicios estos han de implementar alguna forma de autenticación y autorización por ejemplo con OAuth y JWT.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</a></li>
</ul>
<p>Otra forma de proteger los servicios más sencilla sin que cada uno de ellos tenga que implementar las funcionalidades de autenticación y autorización es utilizar un <em>service mesh</em>. <a href="https://www.consul.io/">Consul</a> además de ser un servicio que ofrece registro y descubrimiento ofrece la funcionalidad de conexión entre servicios con cifrado, autenticación mutua y autorización especificando qué servicio está autorizado a comunicarse con cual.</p>
<p>Con las funcionalidades de conexión de Consul los servicios no es necesario que implementen el cifrado, autenticación y autorización. Los servicios tienen menos responsabilidades, son más sencillos y la autorización de la comunicación es gestionada desde Consul.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/07/comunicaciones-seguras-autenticacion-mutua-y-autorizaciones-con-intenciones-entre-servicios-usando-consul-connect-y-nomad/">Comunicaciones seguras, autenticación mutua y autorizaciones con intenciones entre servicios usando Consul Connect y Nomad</a></li>
</ul>
<h3 id="contraseñas-en-repositorios-de-código-fuente-y-artefactos-compilados">Contraseñas en repositorios de código fuente y artefactos compilados</h3>
<p>La seguridad de las aplicaciones se basa en contraseñas, claves privadas y certificados que únicamente las aplicaciones y los administradores de los servicios deben tener acceso.</p>
<p>Las credenciales deben ser guardadas aparte del código fuente de la aplicación, fuera de la herramienta de control de versiones. Incluso las credenciales en una clase Java compila a <em>bytecode</em> es posible acceder a ellas.</p>
<p>Estos secretos deben proporcionarse a las aplicaciones en tiempo de ejecución por el orquestador de procesos, el entorno de ejecución en la nube o de un servicio específico de seguridad del que obtenerlo. Para mayor seguridad las propiedades con secretos de los archivos de configuración en el sistema de archivos deben evitarse.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/">Las contraseñas e información sensible en el código fuente o <em>bytecode</em> de Java no son seguras</a></li>
</ul>
<h3 id="otras">Otras</h3>
<p>Otra medida de seguridad es ofrecer la posibilidad de eliminar una cuenta o desactivarla tras un periodo de inactividad prolongado.</p>
<ul>
<li><a href="https://www.whitesourcesoftware.com/resources/blog/application-security-best-practices/">Application Security Best Practices</a></li>
<li><a href="https://techbeacon.com/security/7-must-dos-delivering-app-focused-security">7 must-dos for delivering app-focused security</a></li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Application_security">Application security</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/</id>
        <title>Manual básico sobre ataques informáticos, peligros, tipos, cómo detectarlos, cómo evitarlos y medidas de prevención</title>
        <updated>2021-10-21T20:00:00+02:00</updated>
        <published>2021-10-21T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las compañías realizan importantes esfuerzos para implementar medidas de seguridad pero aún con ellas si el usuario no toma las medidas oportunas muchas de las medidas de seguridad de una organización, computadora o de un dispositivo electrónico son inútiles. En vez de atacar la seguridad de los servicios o dispositivos los delincuentes pueden atacar una parte que suele ser más débil, el usuario. Para evitar ser víctima de un ataque informático conviene conocer unas pocas medidas preventivas que son sencillas para detectar la mayoría de potenciales ataques.</strong></p>]]>
        <![CDATA[<p>La informática ha dejado de ser la de los ordenadores personales aislados para trabajos ofimáticos. La evolución de la tecnología informática por un lado llegando hasta los teléfonos inteligentes y la tecnología de internet permitiendo comunicaciones electrónicas a nivel mundial es una de las siguientes revoluciones a la revolución industrial en el siglo pasado. La informática hace tan solo unos pocos lustros era algo adoptado por personas interesadas en la tecnología, hoy quien no tiene un ordenador personal o portátil tiene un teléfono inteligente o <em>smartphone</em>. La tecnología se ha masificado y democratizado.</p>
<p>Al mismo tiempo que la tecnología informática ofrece gran cantidad de beneficios para personas y empresas pueden ser utilizadas por personas sin escrúpulos para hacer el mal de forma intencionada y totalmente consciente de lo que hacen. A través de internet quizá los delincuentes no amenacen tu integridad física en la calle de las personas pero el daño psicológico o estafa económica tiene el potencial de ser igual de dañino.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="cuales-son-los-peligros-de-los-ataques-informáticos">Cuales son los peligros de los ataques informáticos</h3>
<p>Los peligros y consecuencias de sufrir un ataque informático están a la misma altura de las tareas que hacemos de la informática, que ya son muchas y cada vez serán más.</p>
<p>En el caso personal muchas cosas se puede hacer ya a través de internet, dos de ellas son especialmente sensibles. Una son las que involucran dinero como compras por internet con tarjeta de crédito o acceso a cuentas bancarias a través de la oficina digital que ya ofrecen y exigen todos los bancos para realizar transferencias y pagos. La segunda es aquellas que tienen que ver con datos personales dónde las redes sociales como <a href="https://www.facebook.com/">Facebook</a>, <a href="https://twitter.com/">Twitter</a> o <a href="https://www.linkedin.com/">LinkedIn</a> recopilan y cualquier persona tiene acceso. En el ámbito profesional existen los mismos peligros con graves consecuencias para la empresa  que sea víctima de un ataque.</p>
<p>En un mundo capitalista en el que para la mayoría de las cosas se necesita dinero los ataques generalmente tienen un móvil económico en el que los delincuentes roban o estafan a las víctimas. El robo puede ser directamente a través de la tarjeta de crédito, de la cuenta bancaria o, de <a href="https://www.paypal.com/">PayPal</a> entre otros medios para transferir dinero entre cuentas y realizar pagos. Otra forma es indirecta, a través de la extorsión en el que el delincuente a través de una situación de poder exige a la víctima realizar acciones como la transferencia de dinero bajo la amenaza de por ejemplo publicar datos o información sensible robada exprimiendo a la víctima haciéndole creer que acatar sus exigencias la única posibilidad de recuperar datos importantes o cuentas de algún servicio, el desconocimiento o inocencia de la víctima es otra situación para perpetrar la estafa.</p>
<p>Por un momento imagina que te roban las credenciales que dan acceso a un servicio importante como la del correo electrónico, las del banco, los datos de la tarjeta de crédito, los de la cuenta de <a href="https://www.google.es/">Google</a> con todos sus datos como correo electrónico, documentos, fotos y se ha configurado como medio de pago, de PayPal, de <a href="https://www.amazon.es">Amazon</a> por poner solo unos ejemplos pero la lista seguramente sea mucho más larga. Las consecuencias son que te pueden joder la vida mucho y convertir de repente tu vida en una pesadilla por simplemente un pequeño error de unos minutos del que ni siquiera has sido consciente. Puedes perder los ahorros de varios años de trabajo y dejarte la cuenta del banco vacía con problemas adicionales asociados si no se pueden afrontar pagos de hipoteca o ese dinero era el medio de afrontar los gastos. No te van a hacer daño físico pero el daño económico puede ser extremadamente importante también con un daño psicológico que quizá esté a mayor o la misma altura.</p>
<p>Este es un mensaje de audio de lo que parece una comercial o trabajadora en una sucursal de una entidad bancaria ante un número de ataques masivo no solo en la suya que muestra el grado de alarma y caos que es capaz de generar un ataque masivo con la capacidad de ser a nivel nacional.</p>
<div class="media">
<figure>
<video src="videos/audio-ataque-masivo-banco.mp4" controls width="640" height="360" autoplay="false" poster="images/poster.jpg">
</video>
<figcaption>Audio con un mensaje de advertencia después de un ataque informático</figcaption>
</figure>
</div>
<p>En el caso de sufrir un ataque informático los grupos dedicados a delitos informáticos de los diferentes cuerpos de policía harán todo lo posible para evitar más daños, reparar el causado que quizá no sea mucho y poner a disposición de la justicia a los delincuentes si pueden dependiendo del país el país en el que está el delincuente pero tampoco son todo poderosos y sus recursos materiales y de personal son limitados. La policía no da a basto con el número de casos que ya se dan, y los ataques parece que solo van a ir a mayor en número y gravedad. La policía únicamente se centrará en los más graves o en aquellos que se produzcan por bandas organizadas, por reiteración o por la posibilidad de acabar con ataques futuros. El mejor consejo que te va a dar la policía seguramente es la prevención, que evites ser víctima de un ataque informático. Con unas pautas sencillas la mayoría de ataques son detectables y evitables.</p>
<p>Quizá los seguros del banco o vivienda previstos a tal efecto permitan recuperar a la víctima parte del dinero que le han estafado pero seguramente sea una pequeña parte del total y por supuesto el daño psicológico no es reparable vivido durante un periodo de incertidumbre que puede durar semanas y meses.</p>
<h3 id="medios-de-ataque-informático">Medios de ataque informático</h3>
<p>Antes de la llegada de internet el mayor peligro eran los virus informáticos que eran programas con funciones maliciosas que causaban pérdida de datos o bloqueos en el sistema que requerían un reinicio. Su medio de transmisión era a través discos extraíbles y estaban ocultos en programas con funciones legítimas, al ejecutar estos el virus se ejecutaba al mismo tiempo. Una vez ejecutado el virus este se replicaba en el ejecutable del resto de programas con lo que al llevar discos de una computadora a otra la infección se extendía.</p>
<p>La mayoría de ataques son masivos aunque algunos aún costando más trabajo por parte del delincuente son individuales.</p>
<h4 id="en-computadores-correo-electrónico-y-documentos">En computadores, correo electrónico y documentos</h4>
<p>Hoy en día los virus informáticos siguen existiendo pero el medio por el que se transmiten ha cambiado de los discos extraíbles a programas descargados por internet o archivos adjuntos en correos electrónicos. Los virus no solo se ejecutan al ejecutar un programa infectado sino que los documentos de datos también pueden contenerlos como un documento de Word, hoja Excel o presentación de PowerPoint y documentos de otros programas. Además de realizar la función maliciosa una forma de transmitirse es enviando un correo electrónico a todos los contactos del usuario.</p>
<p>Las acciones de un virus informático son diversas como secuestrar los documentos del usuario, posteriormente el delincuente solicita un pago si la víctima quiere recuperarlos. Otra acción es registrar todas las pulsaciones del teclado denominada <em>keylogger</em> que también es peligrosa ya que al mismo tiempo envía al delincuente el registro con potencialmente el usuario y contraseñas de cuentas importantes como las mencionas de bancos Google o Amazon, además los <em>keyloggers</em> pasan desapercibidos.</p>
<h4 id="en-dispositivos-móviles-correo-electrónico-sms-whatsapp">En dispositivos móviles, correo electrónico, SMS, WhatsApp</h4>
<p>Los dispositivos móviles ya sean teléfonos móviles inteligentes o tabletas con conexión a internet mediante WIFI son dispositivos también vulnerables y medios que utiliza el usuario a través de los que realizar ataques. Además del correo electrónico los dispositivos móviles añaden otros vectores de ataque como las aplicaciones de mensajería instantánea como <a href="https://www.whatsapp.com/">WhatsApp</a>, <a href="https://telegram.org/">Telegram</a> o simplemente mensajes SMS. Lo único que se necesita para hacer llegar de forma directa un ataque a un usuario de forma muy precisa es su número de teléfono, un dato que no es especialmente difícil de conseguir. En los dispositivos móviles, además, detectar algunos ataques es un poco más complicado por la forma de interactuar.</p>
<ul>
<li><a href="https://www.adslzone.net/noticias/seguridad/correos-phishing-correo-chatbot-octubre-2021/">El último timo que azota a España mezcla a Correos y un móvil por 1,5€</a></li>
</ul>
<h4 id="ejemplo-de-ataque-mediante-suplantación-de-identidad-o-_phishing_">Ejemplo de ataque mediante suplantación de identidad o <em>phishing</em></h4>
<p>Este es un ejemplo de mensaje SMS con una alarmante supuesta desactivación de la cuenta que solicita una verificación por motivos de seguridad. En realidad el enlace lleva a una página de <em>phishing</em> que trata de suplantar la identidad de la página de inicio de sesión de la banca <em>online</em> del banco <a href="https://www.bancosantander.es">Santander</a> que en caso de que el usuario introduzca los datos de inicio de sesión será una víctima si este banco no implementa medidas adicionales de seguridad. Y aún implementando medidas adicionales que simplemente consisten en enviar un mensaje SMS al móvil asociado a la cuenta <em>online</em>, los delincuentes se las pueden saltar sin dificultad solicitando un duplicado de la SIM de la víctima y usando <em>SIM swapping</em>.</p>
<p>Una combinación de <em>phishing</em> para obtener las credenciales de acceso a la banca <em>online</em>, conocido el número de la víctima junto con un <em>SIM swapping</em> y las medidas de seguridad de algunos bancos resultan insuficientes para evitar operaciones fraudulentas.</p>
<ul>
<li><a href="https://www.elconfidencial.com/espana/andalucia/2021-11-09/ciberdelincuencia-atraco-virtual-bizum_3319443/">Así se gestó un «atraco virtual» de 240.000 euros a través de Bizum</a></li>
<li><a href="https://www.elconfidencial.com/espana/galicia/2021-04-21/desarticulada-una-banda-de-estafa-con-sim-swapping-que-operaba-entre-a-coruna-y-brasil_3043704/">Desarticulada una banda de estafa con «SIM swapping» que operaba entre A Coruña y Brasil</a></li>
</ul>
<p>El enlace del mensaje SMS usa un acortador de direcciones para ocultar la dirección destino a la que se dirige. Este tipo de ataques son más difíciles de detectar en los móviles por no poder examinar el destino del enlace y por la limitación de las pantallas que son más pequeñas y no permiten ver la dirección completa una vez cargadas en el navegador. Este tipo de ataques también son posibles en ordenadores con enlaces que llegan a través de correo electrónico.</p>
<p>En este ejemplo la página que suplanta la identidad de la banca online del banco tiene un aspecto que perfectamente podría considerarse válido si no se compara con la página real. Utiliza los colores corporativos del banco, el logotipo oficial y un aspecto bastante similar al real. La diferencia para darse cuenta de ser una página de suplantación de identidad está en la dirección de la página que muestra el navegador en la barra de direcciones con un dominio que no se corresponde con el oficial del banco y por el detalle del marcador en la parte inferior del <em>Powered by</em>.</p>
<p>Este es el caso de un ejemplo potencialmente de un ataque de <em>phishing</em> que he recibido.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2021/11/ejemplo-de-un-potencial-ataque-informatico-de-phishing-el-caso-de-el-gatico-biever/">Ejemplo de un potencial ataque informático de <em>phishing</em>, El caso de El Gatico Biever</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/images/phishing-sms_hu03cb6217d1368b94ea82aee1ee6f8c95_145731_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Mensaje SMS de alarma y urgencia con un enlace a una página de phishing"><img src="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/images/phishing-sms_hu03cb6217d1368b94ea82aee1ee6f8c95_145731_300x250_fit_box_3.png" width="141" height="250" alt="Mensaje SMS de alarma y urgencia con un enlace a una página de phishing" title="Mensaje SMS de alarma y urgencia con un enlace a una página de phishing"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/images/phishing-web_hua01b18eebb12ecf3c492fab776b2d978_127747_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Página web de phishing que suplanta la identidad del inicio de sesión en la banca online"><img src="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/images/phishing-web_hua01b18eebb12ecf3c492fab776b2d978_127747_300x250_fit_q90_box.jpg" width="300" height="225" alt="Página web de phishing que suplanta la identidad del inicio de sesión en la banca online" title="Página web de phishing que suplanta la identidad del inicio de sesión en la banca online"  class="lozad "></a></p>
<figcaption>Ejemplo de los pasos en un ataque de phishing a través de un mensaje SMS</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/images/santander-banca-online_hu4fe8fcaa3dcb9f97f9516f9f646ed954_244795_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Página real de inicio de sesión de la banca online"><img src="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/images/santander-banca-online_hu4fe8fcaa3dcb9f97f9516f9f646ed954_244795_300x250_fit_q90_box.jpg" width="300" height="240" alt="Página real de inicio de sesión de la banca online" title="Página real de inicio de sesión de la banca online"  class="lozad "></a></p>
<figcaption>Página real de inicio de sesión de la banca online</figcaption>
</figure>
</div>
<h4 id="ataques-personalizados">Ataques personalizados</h4>
<p>Otros ataques comienzan con un mensajes basado en un texto genérico. Al responder al correo electrónico el receptor válida que la dirección de correo electrónico es correcta y en uso y el destinatario original muestra interés. Una vez iniciada la conversación el objetivo es algún tipo de solicitud aparentemente buena pero que al finalizar requiera un pago momento en el que se produce algún tipo de ataque informático. Los más perseverantes quizá involucre una transacción que haya ido perfectamente pero una vez ganada la confianza en las siguientes con algún tipo de excusa haber algún cambio en el proceso de forma de pago donde se produce el ataque.</p>
<h4 id="páginas-peligrosas">Páginas peligrosas</h4>
<p>Algunas páginas tratan de ofrecer algo muy demandado por muchos usuarios que suelen ser del tipo obtener algo gratis que cuesta dinero comprarlo. Dada la cantidad de usuarios que visitan esas páginas si contienen algún tipo de ataque informático seguro que algunos visitantes se conviertan en víctimas. Algunos tipos de cosas muy buscadas por los usuarios son piratear la licencia de <a href="https://www.microsoft.com/es-es/windows/">Microsoft Windows</a> y la suite ofimática de <a href="https://products.office.com/es-es/">Microsoft Office</a>, pirateo de programas profesionales como la herramienta de retoque fotográfico <a href="https://www.adobe.com/es/products/photoshop.html">Adobe Photoshop</a>, descarga de contenido digital como películas de estreno, series, libros electrónicos y música, pirateo de televisión de pago y por supuesto páginas pr0n.</p>
<p>Muchas de estas páginas al acceder a ellas abren pestañas y ventanas emergentes aún con las medidas que implementan los navegadores para evitarlo, las ventanas emergentes son muy molestas y suelen contener algún tipo de publicidad de baja calidad. El abrir ventanas emergentes es el tipo de entorno en el que emplear <a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/">un ataque de <em>tabnabbing</em></a>.</p>
<h3 id="tipos-y-formas-de-ataque-informático">Tipos y formas de ataque informático</h3>
<p>La mayoría de ataques comienzan de la misma forma en cualquiera de sus variantes, con una oferta tentadora por muy inverosimil que parezca para que el usuario no se resista a responder.</p>
<h4 id="secuestro-de-datos">Secuestro de datos</h4>
<p>En los ataques informáticos que consisten en el secuestro de datos los delincuentes extorsionan a la víctima posteriormente si quiere recuperarlos exigiendo un pago. Aunque el ataque está dirigido contra los datos de la víctima el móvil suele ser uno económico. Aceptar el chantaje no es la opción recomendada ya que no hay garantía de recuperar los datos, el delincuente podría seguir chantajeando más a la víctima con un monto total de dinero estafado importante sin garantías. Una vez de haber sufrido el ataque informático contra los datos la mejor opción para no caer en la extorsión es recuperar los datos de una copia de seguridad. Tener una copia de seguridad de los datos es una forma de prevención para estos casos y otros de pérdida de datos.</p>
<h4 id="robo-de-credenciales-y-datos-bancarios">Robo de credenciales y datos bancarios</h4>
<p>Otros ataques informáticos están dirigidos a robar las credenciales o los datos de su tarjeta de crédito de una cuenta importante del usuario. El robo de las credenciales de una cuenta o datos de la tarjeta de crédito ocurre sin ni siquiera ser la víctima consciente del robo. El delincuente hace llegar a la víctima a través de cualquier medio y dispositivo un enlace que lleva a una página aparentemente igual que la legítima pero que en realidad es una página maliciosa que simula ser una legítima, en algún punto a la víctima se le presenta el formulario que solicita las credenciales de la cuenta o los datos de la tarjeta bancaria. La víctima los introduce y la página controlada por el delincuente ahora en posesión de los datos puede ir a la página legítima y realizar las mismas acciones que pudiera hacer el usuario.</p>
<p>Este tipo de ataques de suplantación de identidad son denominados de <em>phishing</em>. Son muy peligrosos por dos motivos, porque son muy simples de realidad y porque se pueden hacer de forma masiva a muchos usuarios. Seguramente muchos usuarios potenciales víctimas no caigan en la trampa pero por probabilidad y estadística con que unos pocos se conviertan en víctimas compensa a los delincuentes.</p>
<p>Si son los datos de la tarjeta de crédito es posible realizar compras y pagos en cualquier página que la acepte hasta el límite que permita. Si se trata de las credenciales de una cuenta bancaria y el banco no tiene medidas adicionales de seguridad es posible realizar transferencias bancarias.</p>
<p>Para cuando la víctima se da cuenta puede ser demasiado tarde de que está siendo o ha sido estafado de una cantidad importante de dinero con un límite de los fondos de la cuenta bancaria que respalde las transferencias o los pagos de la tarjeta de crédito. Esto es, la víctima puede llegar a perder la totalidad de los fondos de su cuenta bancaria en un plazo de varios días.</p>
<h4 id="estafa-o-timo-nigeriano">Estafa o timo nigeriano</h4>
<p>La estafa o <a href="https://es.wikipedia.org/wiki/Estafa_nigeriana">timo nigeriano</a> o la estafa nigeriana es su encarnación en internet al <a href="https://es.wikipedia.org/wiki/Timo_de_la_estampita">timo de la estampita</a> que se daba en las calles. El timo del nigeriano y el timo de la estampita al igual que otros timos por internet basan su efectividad en la avaricia de la víctima.</p>
<p>En el caso del timo del nigeriano suele darse a través de mensajes de correo electrónico. Hay muchas versiones en el contenido del mensajes pero todas se basan en el contar una historia en el que una persona muy rica a punto de fallecer con mucho dinero desea donar su fortuna de varios millones al receptor del mensaje por muy raro que parezca ya que que en realidad se conocen de nada. Si el receptor del mensaje se cree por avaricia e inocencia algo tan bueno pero que no es verdad entrando en el juego se convertirá en víctima.</p>
<p>Iniciada la conversación el delincuente pide un pequeño pago para desbloquear los fondos del supuesto rico para que la víctima pueda recibirlos. Por supuesto, el delincuente no realizará ninguna transferencia y con alguna excusa seguirá pidiendo más pagos a la víctima. El resultado es que la víctima dependiendo de lo que tarde en darse cuenta de que está siendo objeto de una estafa pierde más o menos dinero en las transferencias que haya hecho. Otra forma de estafa es que el delincuente pida los datos bancarios o de tarjeta de crédito, información que nunca bajo ningún concepto hay que proporcionar a nadie por internet ni siquiera a alguien que diga ser un empleado de nuestro banco.</p>
<h3 id="cómo-detectar-potenciales-ataques-con-consejos-simples">Cómo detectar potenciales ataques con consejos simples</h3>
<p>Aunque algunos de los ataque son muy burdos, por su capacidad de causar daños muy graves conviene estar prevenidos y alerta. Por suerte, muchos de los potenciales intentos de ataque informático son muy sencillos de detectar con unas pocas y sencillas pautas.</p>
<p>Los servicios de correo electrónicos en la nube como Gmail son capaces de detectar la mayoría de correos electrónicos con potenciales ataques y de <em>spam</em>, sin embargo, como crear una cuenta de correo electrónico es gratuita los delincuentes y personas dedicadas a enviar correos electrónicos no deseados o <em>spammers</em> les resulta fácil continuar con su actividad en caso de que su cuenta sea cerrada por actividad ilegal según los términos de Google o el servicio que utilicen. Aún con la tasa de acierto de Google de detectar <em>spam</em> y correos fraudulentos con ataques el sistema no es perfecto y algunos llegan a la bandeja de entrada como cualquier otro correo válido. Con caer en un único ataque es suficiente con tener una buena cantidad de problemas y daños.</p>
<p>Una forma muy utilizada es a través de correos electrónicos por su sencillez y posibilidad de hacerlo masivo. Como muchos ataques tienen origen en otros países el lenguaje en los correos electrónicos recibidos está en inglés. En el caso de los hispano hablantes recibir un correo electrónico en inglés ya es un potencial indicio de potencial ataque que junto con otros factores es reconocible.</p>
<p>Por el mismo motivo que los ataques tienen un origen extranjero aún cuando los correos electrónicos llegan en español es porque los delincuentes realizan una traducción desde su idioma nativo, normalmente con alguna herramienta automatizada o la hacen ellos mismos. El texto en español aunque entendible suele tener fallos ortográficos, de sintaxis o utilizar expresiones que no se suelen utilizar. Los correos que tienen este tipo de errores también son potenciales correos de ataques.</p>
<p>Un dato importante es saber cual es la cuenta origen que envía el correo electrónico, si es una desconocida ya es sospechoso más cuando al mismo tiempo se trata de un correo inesperado. Conviene fijarse bien tanto en el nombre del usuario como en el dominio del correo electrónico ya que algunos cambian una letra para parecer el mismo que uno legítimo siendo totalmente uno diferente. Por ejemplo, si el correo legítimo es <em>gestor@bancosantander.es</em> uno fraudulento podría ser <em>gestor@bancosantander.ink</em>, conviene conocer cuál es el dominio legítimo del emisor para identificar este tipo de avisos, este ejemplo es muy claro pero hay otros más difíciles de identificar.</p>
<p>Enviar correos de forma masiva una gran cantidad de usuarios requiere utiliza el mismo texto para todos, esto hace que los correos electrónicos no estén personalizados y su salida sea un simple «Hola» ni el texto del mensaje incluya ningún detalle relacionado con el usuario. En estos correos el texto es creado a partir de una plantilla genérica.</p>
<p>Para tratar de incitar a la potencial víctima a realizar la acción que los delincuentes desean, tanto el asunto del mensaje como el texto del mismo suelen usar un lenguaje que provoque urgencia, requerir una acción inmediata, tiene un contenido emocional y se autodefinen como correos importantes. El motivo de este lenguaje es evitar que el usuario reaccione de forma inmediata sin pensar, para evitar la detección del fraude. Los mensajes que utilizan este lenguaje de urgencia e inmediatez suelen ser otra forma de detectar correos electrónicos potencialmente con ataques informáticos.</p>
<p>Otros correos de ataques aunque en menor cantidad están más elaborados y son más difíciles de detectar. Los más avanzados no son tan burdos y pueden utilizar un correo electrónico bien diseñado con el logotipo original de la compañía y sin faltas de ortografía en un perfecto español. En estos casos la forma de detectarlos es por el origen de la dirección de correo electrónico comentada anteriormente y por incluir enlaces que llevan a páginas que no son las legítimas. Al igual que en el caso de la dirección de correo electrónico, un correo fraudulento puede incluir un enlace con una dirección parecida a la legítima pero algo diferente. Por ejemplo, si la dirección legítima y correcta es <em>https://particulares.bancosantander.es/login/</em> la fraudulenta podría ser <em>https://particulares.bancosantander.ink/login/</em>, si no se presta atención a ese <em>ink</em> en la barra de direcciones del navegador pasa perfectamente desapercibido. Por ello, siempre conviene fijarse en la barra de direcciones del navegador. Hay que tener en cuenta que aunque el texto que el usuario ve de un enlace sea <em>https://particulares.bancosantander.es/login/</em> la dirección del mismo ser la página fraudulenta <em>https://particulares.bancosantander.ink/login/</em>.</p>
<p>Los navegadores al pasar con el ratón por encima del texto de un enlace suelen mostrar la dirección del mismo, esto permite saber cual es su dirección real sin tener que pulsarlo. Los navegadores de los dispositivos móviles no ofrecen esta funcionalidad por no utilizarse un ratón y este tipo de trucos son más difíciles de detectar.</p>
<p>Especialmente hay que tener en cuenta los correos electrónicos con comunicaciones de los bancos. Otros asuntos muy utilizados son la de mensajes con paquetes que no hemos pedido pero que solicitan un pago para recogerlo tan bajo muchos usuarios  pican en la trampa. O correos relacionados con algún organismos estatal SEPE, la seguridad social o servicio de salud.</p>
<p>Como norma básica nunca se deben enviar o proporcionar las credenciales de ningún servicio o datos de tarjeta bancaria a alguien que los solicite ni introducir en ninguna otra página. Los delincuentes se aprovechan de que por naturaleza muchas personas son muy confiadas. Ningún empleado de ningún banco va a pedir nunca las credenciales de inicio de sesión en la banca electrónica o tarjeta de crédito de un cliente ni por correo electrónico ni por teléfono. Conviene conocer estos casos que nunca se pueden dar y en caso de que una comunicación o alguien lo intente saber de forma inmediata que es un muy potencial ataque informático.</p>
<p>Este es el manual de Google conocer que es el <em>phishing</em> y que datos se suelen robar demás para <a href="https://support.google.com/mail/answer/8253?hl=es">evitar y denunciar los correos electrónicos de <em>phishing</em></a> con varios de los consejos comentados en este artículo y con algunos detalles más, por ejemplo, como denunciar una cuenta de Gmail que esté siendo utilizada para realizar ataques de <em>phishing</em>. La versión en inglés de la misma página es más detallada, <a href="https://support.google.com/mail/answer/8253?hl=en">Avoid and report phishing emails</a>.</p>
<h3 id="medidas-preventivas-para-evitar-problemas-de-seguridad">Medidas preventivas para evitar problemas de seguridad</h3>
<p>Aún conociendo los indicios de potenciales correos electrónicos o direcciones de páginas nadie está a salvo de los ataques por las múltiples formas en las que estos se presentan. En este artículo se comentan los más básicos y habituales pero hay algunos más elaborados en los que incluso alguien experto puede ser víctima perfectamente. Para evitar riesgos conviene tomar unas medidas de prevención básicas.</p>
<p>Hay que estar siempre alerta y sospechar cuando algunas cosas no encajan o parezcan demasiado buenas de personas desconocidas o con pseudónimos. Ante un correo electrónico o mensaje considerado como un ataque informático lo mejor es ignorarlo, no interactuar con él, ni siquiera abrirlo, ni descargar sus adjuntos si los tiene. En caso de ser un mensaje sospechoso pero no estar seguros lo mejor es estar alerta analizando la dirección del origen, enlaces que contiene y cuidado con los adjuntos.</p>
<p>En el caso de una computadora nunca hay que ejecutar programas obtenidos de adjuntos de un correo electrónico ni obtenidos en internet que no sean de fuentes fiables. Abrir documentos también es peligroso, por ejemplo esos típicos correos con una presentación de Power Point con algo gracioso o emocional que se difunden en cadenas con los contactos son candidatos a tener funciones maliciosas que exploten alguna vulnerabilidad del programa que los abre.</p>
<h4 id="utilizar-un-programa-gestor-de-contraseñas">Utilizar un programa gestor de contraseñas</h4>
<p>Cada servicio ha de tener sus propias credenciales y contraseña de inicio de sesión, esto hace que en caso de que las credenciales de un servicio sean robadas no afecte ni sirvan para otros servicios. Aunque uno no haya tenido el ataque de forma directa los puede sufrir a consecuencia del ataque que haya sufrido un servicio, los propios servicios también reciben ataques informáticos y robo de credenciales, en caso de que las mismas credenciales de un servicio se utilicen en otros todos de esos otros también están en peligro.</p>
<p>Ya, pero si tengo que tener unas credenciales y contraseña para cada servicio&hellip; ¿cómo recuerdo las contraseñas de todos?. Sencillo, utilizando un <a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">programa gestor de contraseñas KeePassXC</a> o similar. Los programas gestores de contraseñas son bases de datos de credenciales que las guardan cifradas, la base de datos está protegida con una contraseña maestra con lo que solo es necesario recordar una contraseña. Los programas gestores de contraseñas tienen otras funciones útiles como generador de contraseñas fuertes, soporte como generador de segundo factor de autenticación y mantener cifradas las contraseñas en la base de datos con lo que aunque el archivo de base de datos fuera robado las contraseñas seguirán estando seguras.</p>
<h4 id="configurar-el-segundo-factor-de-autenticación-para-iniciar-sesión">Configurar el segundo factor de autenticación para iniciar sesión</h4>
<p>Los servicios de grandes compañías e importantes ofrecen configurar <a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/">segundo factor de autenticación como medida adicional a las credenciales</a> de usuario y contraseña. El segundo factor de autenticación además de la contraseña requiere un código temporal generado con un dispositivo que tiene el usuario como un <em>smartphone</em>, aunque la contraseña haya sido robada el código temporal mantiene protegida la cuenta. Conviene activar el segundo factor de autenticación en aquellos servicios importantes que lo ofrezcan como Google, Amazon y PayPal. El programa KeePassXC ofrece soporte para actuar como generador de códigos temporales del segundo factor de autenticación.</p>
<h4 id="utilizar-tarjetas-de-crédito-virtuales">Utilizar tarjetas de crédito virtuales</h4>
<p>Seguramente todos los bancos ofrezcan la posibilidad de crear tarjetas de crédito virtuales. En vez de introducir los datos de la tarjeta física, una tarjeta virtual es una tarjeta que actua como una tarjeta real pero que existe físicamente y se crea bajo lo demanda del usuario en unos pocos segundos, permiten realizar el pago de una compra en internet con mayor seguridad que las tarjetas físicas. Al crear la tarjeta virtual los datos asociados a la misma son los mismos de una tarjeta física real como los 16 dígitos del número de tarjeta, fecha de caducidad y código de seguridad.</p>
<p>Adicionalmente al crear la tarjeta virtual es posible especificar el importe máximo permitido a cargar en la tarjeta que será un poco superior al importe de la compra en la que se pretenda usar. También es posible especificar los meses deseados de su caducidad pudiendo elegir entre ser de tan solo tres meses o un año.</p>
<p>Al no usar los datos de la tarjeta real, establecer un límite máximo en el importe que se puede cargar en la tarjeta virtual y establecer una fecha de caducidad menor aumenta la seguridad en una compra por internet.</p>
<h4 id="hacer-copias-de-seguridad">Hacer copias de seguridad</h4>
<p>No solo por los ataques de seguridad sino por corrupción de datos y fallos de hardware es necesario hacer copias de seguridad de forma periódica. Los datos son más importantes que el propio hardware donde se almacena, el hardware es reemplazable en caso de fallo pero los datos no son reemplazables en caso de pérdida por cualquier motivo. El programa <a href="https://picodotdev.github.io/blog-bitix/2016/05/como-realizar-copias-de-seguridad-en-windows-con-freefilesync/">FreeFileSync permite hacer copias de seguridad</a> de forma sencilla.</p>
<h4 id="comprobar-registros-de-actividad">Comprobar registros de actividad</h4>
<p>Algunos servicios mantienen un registro de la actividad de la cuenta, como dirección IP de los dispositivos con sesión iniciada, ubicación estimada, navegador, fecha y hora, envían correos electrónicos para notificar la realización de acciones críticas como inicio de sesión en dispositivos nuevos, cambio de contraseña o realización de pagos.</p>
<p>Ante dudas de actividad sospechosa se puede consultar estos registros, y comprobar que las notificaciones del servicio legítimo solo llegan como consecuencia de una acción que realiza el usuario y no por actividad de un delincuente. Si hay sospechas fundadas o se detecta actividad fraudulenta hay que cambiar la contraseña si aún es posible.</p>
<h3 id="que-hacer-en-caso-de-sufrir-un-ataque-informático">Que hacer en caso de sufrir un ataque informático</h3>
<p>En caso de un ataque informático según su gravedad algunas de las acciones a realizar son recopilar todos los datos posibles del ataque incluyendo los datos que se tenga del delincuente y como se ha producido el ataque, denunciar ante la policía, avisar al banco para que bloqueen la cuenta o tarjeta de crédito para impedir más daños y cambiar de contraseñas de los servicios afectados si aún se puede. En caso de extorsión atender las exigencias de los delincuentes posiblemente no sea una buena idea, en estos casos la opción es denunciar ante la policía.</p>
<h3 id="conclusión-tómatelo-muy-en-serio">Conclusión, tómatelo muy en serio</h3>
<p>Mantened los dispositivos y programas actualizados y seguros instalados únicamente de fuentes fiables. Conoced las mínimas nociones de los ataques de robo de credenciales y <em>phishing</em> y estar alerta ante mensajes no esperados por cualquier medio, asi como conocer los tipos de ataques habituales e ser capaz de identificarlos.</p>
<p>Internet permite estar conectados con muchas personas que están lejos o no veis en persona a las que queréis, pero también permite a cualquier persona del mundo contactarnos directamente. En las redes sociales se comparte mucha información personal demasiado alegremente (fotos propias, de hijos menores de edad, de otras personas sin su consentimiento, trabajo, &hellip;) y en este mundo hay personas que cometen delitos  muy graves intencionadamente y conscientemente (robo, extorsión, &hellip;). La información pública y las redes sociales son un filón para ellos para realizar ataques informáticos.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/</id>
        <title>Autenticación con segundo factor de autenticación en SSH</title>
        <updated>2021-03-26T17:00:00+01:00</updated>
        <published>2021-03-26T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El servicio SSH permite el acceso a equipos remotos a un usuario desde cualquier ubicación en la que se encuentre el usuario siempre que tenga conectividad desde el punto de acceso a internet y el equipo remoto. La autenticación se realiza mediante un usuario y contraseña o mediante clave privada y pública, adicionalmente SSH también se puede configurar para requerir un segundo factor de autenticación o 2FA que consituye una segunda clave.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Una forma de acceso a sistemas remotos para realizar tareas de administración es mediante SSH. La red permite acceder a sistemas remotos con SSH siempre que haya conectividad entre el la red del usuario y la red del servidor, con el auge de los servidores ofrecidos por los proveedores de hospedaje o los servicios de computación en la nube en la que lo servidores ya no son físicos sino lógicos SSH es la forma de acceder a los sistemas desde cualquier lugar.</p>
<p>SSH es un protocolo seguro y cifrado que utiliza como método de autenticación un usuario y contraseña o para mayor seguridad una clave SSH, también se puede configurar para añadir adicionalmente un segundo factor de autenticación o 2FA para mayor seguridad.</p>
<p>En el artículo específico comento como <a href="https://picodotdev.github.io/blog-bitix/2019/05/autenticacion-mediante-clave-publica-y-privada-con-ssh/">configurar SSH con autenticación mediante clave pública y privada</a>, en otro artículo comento como tener <a href="https://picodotdev.github.io/blog-bitix/2021/03/acceso-simple-y-seguro-a-sistemas-remotos-con-boundary/">acceso simple y seguro a sistemas remotos con Boundary</a>.</p>
<p>Es recomendable <a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/">usar segundo factor de autenticación en servicios como Google, Amazon y Paypal</a> y otros relevantes que lo ofrezcan. También es recomendable utilizar un <a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">gestor de contraseñas como KeePassXC</a> para guardar las contraseñas únicas y como aplicación para generar los <em>tokens</em> de 2FA.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="instalar-el-módulo-ssh-de-google-2fa">Instalar el módulo SSH de Google 2FA</h3>
<p>Usar 2FA con SSH requiere instalar un módulo de autenticación que valide el proceso de autenticación. El módulo permite usar los <em>tokens</em> de un solo uso en el proceso de autenticación adicionalmente a la contraseña o clave SSH.</p>
<p>En los sistemas basados en <a href="https://www.debian.org/">Debian</a> como <a href="https://www.ubuntu.com/">Ubuntu</a> hay que instalar el siguiente paquete que añade un nuevo módulo de PAM para 2FA.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">$ sudo apt install libpam-google-authenticator&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>apt-install-libpam-google-authenticator.sh</span>
    </div>
</div>
<p>Posteriormente hay que configurar SSH para que haga uso del módulo PAM de Google Authenticator añadiendo la siguiente línea en el archivo <em>/etc/pam.d/sshd</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo vim /etc/pam.d/sshd&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">auth required pam_google_authenticator.so&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd-1</span>
    </div>
</div>
<p>También hay que modificar el archivo de configuración de SSH <em>/etc/ssh/sshd_config</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo vim /etc/ssh/sshd_config&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd_config.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">UsePAM yes&#10;ChallengeResponseAuthentication yes&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd_config-1</span>
    </div>
</div>
<h3 id="configurar-el-módulo-ssh-de-google-2fa">Configurar el módulo SSH de Google 2FA</h3>
<p>La autenticación con 2FA es una segunda contraseña o código a introducir al iniciar sesión en el sistema remoto. Para utilizar 2FA hay que configurar previamente una aplicación que proporcione los códigos temporales.</p>
<p>El siguiente comando ejecutado con el usuario permite generar un código QR y la información para generar los <em>tokens</em> o configurar una aplicación como <a href="https://keepassxc.org/">KeePassXC</a> para generarlos. El comando realiza varias preguntas a las que se puede contestar con los siguientes valores.</p>
<ul>
<li><em>Make tokens &ldquo;time-base&rdquo;</em>: yes</li>
<li><em>Update the .google_authenticator file</em>: yes</li>
<li><em>Disallow multiple uses</em>: yes</li>
<li><em>Increase the original generation time limit</em>: no</li>
<li><em>Enable rate-limiting</em>: yes</li>
</ul>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">pi@raspberrypi:~ $ google-authenticator&#10;&#10;Do you want authentication tokens to be time-based (y/n) y&#10;Warning: pasting the following URL into your browser exposes the OTP secret to Google:&#10;  https://www.google.com/chart?chs=200x200&amp;chld=M|0&amp;cht=qr&amp;chl=otpauth://totp/pi@raspberrypi%3Fsecret%3DZDLUAXH4UI3AJIX6EPHVQSVD5E%26issuer%3Draspberrypi&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#10;Your new secret key is: ZDLUAXH4UI3AJIX6EPHVQSVD5E&#10;Your verification code is 998007&#10;Your emergency scratch codes are:&#10;  46891237&#10;  64319086&#10;  49832138&#10;  91155656&#10;  34340292&#10;&#10;Do you want me to update your &#34;/home/pi/.google_authenticator&#34; file? (y/n) y&#10;&#10;Do you want to disallow multiple uses of the same authentication&#10;token? This restricts you to one login about every 30s, but it increases&#10;your chances to notice or even prevent man-in-the-middle attacks (y/n) y&#10;&#10;By default, a new token is generated every 30 seconds by the mobile app.&#10;In order to compensate for possible time-skew between the client and the server,&#10;we allow an extra token before and after the current time. This allows for a&#10;time skew of up to 30 seconds between authentication server and client. If you&#10;experience problems with poor time synchronization, you can increase the window&#10;from its default size of 3 permitted codes (one previous code, the current&#10;code, the next code) to 17 permitted codes (the 8 previous codes, the current&#10;code, and the 8 next codes). This will permit for a time skew of up to 4 minutes&#10;between client and server.&#10;Do you want to do so? (y/n) n&#10;&#10;If the computer that you are logging into isn&#39;t hardened against brute-force&#10;login attempts, you can enable rate-limiting for the authentication module.&#10;By default, this limits attackers to no more than 3 login attempts every 30s.&#10;Do you want to enable rate-limiting? (y/n) y&#10;pi@raspberrypi:~ $ &#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>google-authenticator.sh</span>
    </div>
</div>
<p>El resultado del comando es un código QR que se puede escanear con la aplicación de Google Authenticator para teléfono inteligente o con la clave secreta utilizar KeePassXC para generar los <em>tokens</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/images/google-authenticator_hu2c255425ff58f8fdbcff60b77bb4ef5f_68013_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de Google Authenticator"><img src="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/images/google-authenticator_hu2c255425ff58f8fdbcff60b77bb4ef5f_68013_300x200_fit_box_3.png" width="157" height="200" alt="Configuración de Google Authenticator" title="Configuración de Google Authenticator"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/images/keepassxc-1_hu23fbfb18afe0b0b47c4376c042088074_40451_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración OTP en KeePassXC"><img src="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/images/keepassxc-1_hu23fbfb18afe0b0b47c4376c042088074_40451_300x200_fit_box_3.png" width="149" height="200" alt="Configuración OTP en KeePassXC" title="Configuración OTP en KeePassXC"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/images/keepassxc-2_hu53fa4e18c12c13dc801784161862cd29_29257_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Obtención de OTP en KeePassXC"><img src="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/images/keepassxc-2_hu53fa4e18c12c13dc801784161862cd29_29257_300x200_fit_box_3.png" width="231" height="200" alt="Obtención de OTP en KeePassXC" title="Obtención de OTP en KeePassXC"  class="lozad "></a></p>
<figcaption>Configuracón para Google Authenticator, KeePassXC y obtención OTP desde KeePassXC</figcaption>
</figure>
</div>
<p>Una vez modificada la configuración hay que reiniciar el servicio de SSH.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">$ sudo systemctl restart sshd.service&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd-restart.sh</span>
    </div>
</div>
<h3 id="usar-autenticación-2fa-con-claves-ssh">Usar autenticación 2FA con claves SSH</h3>
<p>Al utilizar la autenticación mediante claves públicas y privadas con la configuración por defecto es suficiente para otorgar acceso al sistema remoto, con lo que no se solicitará el segundo factor de autenticación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ ssh-copy-id -i <span class="s2">&#34;/home/picodotdev/pico.dev@gmail.com&#34;</span> pi@192.168.1.101&#10;/usr/bin/ssh-copy-id: INFO: Source of key<span class="o">(</span>s<span class="o">)</span> to be installed: <span class="s2">&#34;/home/picodotdev/pico.dev@gmail.com.pub&#34;</span>&#10;/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key<span class="o">(</span>s<span class="o">)</span>, to filter out any that are already installed&#10;/usr/bin/ssh-copy-id: INFO: <span class="m">1</span> key<span class="o">(</span>s<span class="o">)</span> remain to be installed -- <span class="k">if</span> you are prompted now it is to install the new keys&#10;<span class="o">(</span>pi@192.168.1.101<span class="o">)</span> Password: &#10;<span class="o">(</span>pi@192.168.1.101<span class="o">)</span> Verification code: &#10;&#10;Number of key<span class="o">(</span>s<span class="o">)</span> added: <span class="m">1</span>&#10;&#10;Now try logging into the machine, with:   <span class="s2">&#34;ssh &#39;pi@192.168.1.101&#39;&#34;</span>&#10;and check to make sure that only the key<span class="o">(</span>s<span class="o">)</span> you wanted were added.&#10;&#10;<span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-copy-id.sh</span>
    </div>
</div>
<p>Para que se pida el segundo factor de autenticación aún utilizando la autenticación mediante clave pública y privada hay que modificar la configuración de SSH de nuevo con los siguientes cambios de adicionales.</p>
<p>La siguiente línea del archivo <em>/etc/pam.d/sshd</em> ha de estar comentada de esta forma y añadir al final de archivo los métodos de autenticación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">#@include common-auth&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd-2</span>
    </div>
</div>
<p>Nuevamente hay que modificar el archivo <em>/etc/ssh/sshd_config</em> y añadir esta línea al final.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">AuthenticationMethods publickey,keyboard-interactive&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd_config-2</span>
    </div>
</div>
<p>Y después reiniciar el servicio de SSH.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">$ sudo systemctl restart sshd.service&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd-restart.sh</span>
    </div>
</div>
<h3 id="probar-la-autenticación-ssh">Probar la autenticación SSH</h3>
<p>Una vez realizada la configuración es recomendable probar que la autenticación se realiza de forma correcta tanto con usuario y contraseña como en el caso de claves. Una vez proporcionado el usuario y la contraseña se solicita el <em>token</em> del segundo factor de autenticación que es generado por la aplicación Google Authenticator, KeePassXC u otra aplicación configurada para generarlos.</p>
<p>En este caso realizando la autenticación con usuario y contraseña se solicita el <em>token</em> 2FA.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ ssh pi@192.168.1.101&#10;<span class="o">(</span>pi@192.168.1.101<span class="o">)</span> Password: &#10;<span class="o">(</span>pi@192.168.1.101<span class="o">)</span> Verification code: &#10;Linux raspberrypi 5.10.17+ <span class="c1">#1403 Mon Feb 22 11:26:13 GMT 2021 armv6l</span>&#10;&#10;The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>&#10;the exact distribution terms <span class="k">for</span> each program are described in the&#10;individual files in /usr/share/doc/*/copyright.&#10;&#10;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent&#10;permitted by applicable law.&#10;Last login: Fri Mar <span class="m">26</span> 16:49:20 <span class="m">2021</span> from 192.168.1.4&#10;&#10;SSH is enabled and the default password <span class="k">for</span> the <span class="s1">&#39;pi&#39;</span> user has not been changed.&#10;This is a security risk - please login as the <span class="s1">&#39;pi&#39;</span> user and <span class="nb">type</span> <span class="s1">&#39;passwd&#39;</span> to <span class="nb">set</span> a new password.&#10;&#10;pi@raspberrypi:~ $ </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-pi-password.sh</span>
    </div>
</div>
<p>En este otro caso con clave privada y pública también se solicita el <em>token</em> 2FA.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>picodotdev@archlinux ~<span class="o">]</span>$ ssh pi@192.168.1.101&#10;<span class="o">(</span>pi@192.168.1.101<span class="o">)</span> Verification code: &#10;Linux raspberrypi 5.10.17+ <span class="c1">#1403 Mon Feb 22 11:26:13 GMT 2021 armv6l</span>&#10;&#10;The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>&#10;the exact distribution terms <span class="k">for</span> each program are described in the&#10;individual files in /usr/share/doc/*/copyright.&#10;&#10;Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent&#10;permitted by applicable law.&#10;Last login: Fri Mar <span class="m">26</span> 16:47:26 <span class="m">2021</span> from 192.168.1.4&#10;&#10;SSH is enabled and the default password <span class="k">for</span> the <span class="s1">&#39;pi&#39;</span> user has not been changed.&#10;This is a security risk - please login as the <span class="s1">&#39;pi&#39;</span> user and <span class="nb">type</span> <span class="s1">&#39;passwd&#39;</span> to <span class="nb">set</span> a new password.&#10;&#10;pi@raspberrypi:~ $ </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-pi-pubkey.sh</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://ubuntu.com/tutorials/configure-ssh-2fa#1-overview">Configure SSH to use two-factor authentication</a></li>
<li><a href="https://pimylifeup.com/setup-2fa-ssh/">Using Two-Factor Authentication for SSH</a></li>
<li><a href="https://www.rosehosting.com/blog/how-to-set-up-multi-factor-authentication-for-ssh-on-ubuntu-20-04/">Set Up Multi-Factor Authentication for SSH on Ubuntu 20.04</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="seguridad"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/</id>
        <title>Qué es, por qué y cómo activar un segundo factor de autenticación en Google, Amazon, PayPal y otros servicios</title>
        <updated>2020-11-07T23:30:00+01:00</updated>
        <published>2020-11-07T23:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las contraseñas son un mecanismo de seguridad empleado para autenticar a un usuario en un servicio al iniciar sesión. Pero las contraseñas son un mecanismo potencialmente débil, por ello varios de los servicios más importantes implementan mecanismos de seguridad adicionales para proteger en mayor medida las cuentas de los usuarios. El segundo factor de autenticación o 2FA es un mecanismo adicional, las contraseñas son algo que se conoce, el 2FA es algo que se tiene. Varios de los servicios más importantes como Google, Amazon y PayPal entre otros lo ofrecen y es recomendable activarlos en aquellos en los que lo hacen.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/keepassxc.png" width="200" height="200" alt="KeePassXC" title="KeePassXC"  class=""></p>
</div>
<p>La autenticación es el mecanismo de seguridad que permite identificar a un usuario y es quien dice ser. Para comprobar que el usuario es quien dice ser se utiliza una contraseña que solo conoce el usuario. Pero las contraseñas como medida de seguridad no son perfectas, ya que algunos de los usuarios utilizan contraseñas débiles con pocos caracteres, con palabras de diccionario o conocidas y utilizan la misma contraseña en varias cuentas de modo que si un servicio sufre un problema de seguridad las cuentas de otros servicios con la misma contraseña quedan vulnerables.</p>
<p>Toda la seguridad de las contraseñas depende de que solo sea conocida por el propietario de la cuenta, las contraseñas son un factor de seguridad de algo que sólo el legítimo propietario conoce. Otro mecanismo de seguridad es basar la seguridad adicionalmente en algo que se tiene, esto es el segundo factor de autenticación.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="qué-es-un-segundo-factor-de-autenticación-o-2fa">Qué es un segundo factor de autenticación o 2FA</h3>
<p>El segundo factor de autenticación o 2FA es un mecanismo de seguridad que se suele utilizar adicionalmente al mecanismo de seguridad de contraseña. Adicionalmente a la contraseña el usuario ha de proporcionar un código generado con el segundo factor de autenticación.</p>
<p>El generador de segundo factor de autenticación puede ser de diferentes formas, una de ellas es una aplicación para móvil y otra una aplicación de escritorio, también hay dispositivos hardware específicos de 2FA que se conectan por USB al ordenador. También se denomina doble factor de autenticación o autenticación de dos factores.</p>
<h3 id="por-qué-activar-un-segundo-factor-de-autenticación">Por qué activar un segundo factor de autenticación</h3>
<p>Con el segundo factor de autenticación activado aunque la contraseña de un servicio se vea comprometida la cuenta seguirá protegida ya que adicionalmente a la contraseña se necesita el segundo factor de seguridad. Las contraseñas quedan expuestas si un servicio tiene una vulnerabilidad de seguridad o por alguno de los varios <a href="https://picodotdev.github.io/blog-bitix/2021/10/manual-basico-sobre-ataques-informaticos-peligros-tipos-como-detectarlos-como-evitarlos-y-medidas-de-prevencion/">tipos de ataque informático contra el usuario</a> que es aprovechada por delincuentes para obtener las contraseñas de seguridad de usuarios con el objetivo de poder acceder a sus cuentas. Estos fallos de seguridad son explotables a través de la red sin necesidad de acceso físico a los servidores del servicio.</p>
<p>El segundo factor de autenticación añade más seguridad ya que los delincuentes deben comprometer no solo el servicio sino adicionalmente el dispositivo generador de segundo factor de autenticación.</p>
<p>Activar el segundo factor de autenticación es recomendable porque añade una seguridad adicional mucho mayor que utilizando únicamente una contraseña. Los servicios como el correo electrónico de <a href="https://www.google.es/">Google</a>, la plataforma de comercio electrónico <a href="https://amzn.to/2flFhHA">Amazon</a>, el sistema de pagos <a href="https://www.paypal.com/">PayPal</a> permite a los usuarios activar el 2FA. Es recomendable hacerlo cuando sea posible ya que servicios como estos se utilizan para tareas importantes como toda la comunicación e información del usuario, compras por internet donde se guardan tarjetas de crédito y números de cuenta bancaria.</p>
<h3 id="cómo-funciona-un-segundo-factor-de-autenticación">Cómo funciona un segundo factor de autenticación</h3>
<p>Al realizar la autenticación en un servicio para iniciar sesión se ha de introducir el identificativo del usuario y la contraseña, después con el segundo factor de autenticación activado adicionalmente se solicita un código adicional que el usuario ha de proporcionar. El código adicional es proporcionado por las aplicaciones generadores de 2FA.</p>
<p>Las aplicaciones generadoras de códigos 2FA se inicializan al activar el 2FA en la cuenta, en el caso de una aplicación móvil normalmente se hace escaneando un código QR con la cámara de fotos, para otros dispositivos se proporciona una secuencia de letras. El código QR o la secuencia de letras son la semilla con la que se generan los códigos.</p>
<p>Los códigos 2FA que se generan adicionalmente son temporales y solo son válidos durante un periodo corto de tiempo, a estos códigos 2FA se les denomina TOTP acrónimo de <em>time-based one-time password</em> normalmente formados por 6 dígitos. De modo que aunque un código quedase comprometido sólo sería válido durante un periodo corto de tiempo de unos segundos, habitualmente de unos 30 segundos. Los generadores de códigos generan un nuevo código de forma periódica. Dado que la validez de los códigos generados dependen de la fecha y hora actual el dispositivo generador de códigos TOTP debe <a href="https://picodotdev.github.io/blog-bitix/2021/10/sincronizacion-de-hora-automatica-con-el-protocolo-ntp-en-gnu-linux/">mantener la fecha y hora sincronizada con el protocolo NTP</a>.</p>
<p>En la autenticación en dos pasos las credenciales para autenticar un usuario están compuestas de dos factores, la contraseña y el código TOTP.</p>
<h3 id="cómo-activar-un-segundo-factor-de-autenticación">Cómo activar un segundo factor de autenticación</h3>
<p>El segundo factor de autenticación ha de activarse en cada servicio de forma individual. Al realizar la activación se proporciona el código QR a escanear por la aplicación móvil del generador de códigos con la cámara de fotos y alternativamente la secuencia de letras para otro tipo de aplicaciones o dispositivos que no tiene cámara de fotos.</p>
<p>El proceso de activar el 2FA es similar en todos los servicios, varía la interfaz que se utilizan pero básicamente todos proporcionan el código QR y la secuencia de letras. En este caso muestro como activar el segundo factor de autenticación en los servicios de Google, Amazon y PayPal, para otros servicios como <a href="https://twitter.com/">Twitter</a>, <a href="https://www.facebook.com/">Facebook</a> u cualquier otro el proceso es similar.</p>
<h4 id="cómo-activar-2fa-en-una-cuenta-de-google">Cómo activar 2FA en una cuenta de Google</h4>
<p>Para activar el segundo factor de autenticación en una cuenta de Google hay que realizar la configuración desde <em>Gestionar tu cuenta de Google</em> ubicado en el desplegable del menú del usuario, después acceder a las opciones de seguridad del menú <em>Protegemos tu cuenta</em>. En la <em>Revisión de seguridad</em> el proceso de configuración de 2FA se inicia desde la opción <em>Verificación en dos pasos</em>, hay varios opciones de utilizar 2FA una de ellas es con una notificación de Google en el teléfono móvil, un SMS o un código de seguridad, la otra opción es utilizar una aplicación de autenticación o <em>authenticator</em>.</p>
<p>La autenticación con una aplicación de <em>authenticator</em> se inicia desde el enlace <em>configuración de la verificación en dos pasos</em> para configurar la aplicación <em>authenticator</em>. Es un proceso de varios pasos en el que se muestra el código QR a escánear por la aplicación <em>authenticator</em> y el código formado por varios grupos de 4 letras equivalente, el código de letras solo se muestra con el enlace <em>¿No puedes escanearlo?</em> debajo del código QR. Para asegurar que la aplicación <em>authenticator</em> ha escaneado correctamente el código QR y genéra códigos de 6 dígitos se ha de verificar introduciendo su valor actual.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-1_hu41c54525a76ffa08caea9179c927f894_174413_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Google"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-1_hu41c54525a76ffa08caea9179c927f894_174413_200x150_fit_box_3.png" width="177" height="150" alt="Activación de 2FA en una cuenta de Google" title="Activación de 2FA en una cuenta de Google"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-2_hu5784146e25ea53a2616725e18932885d_119518_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Google"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-2_hu5784146e25ea53a2616725e18932885d_119518_200x150_fit_box_3.png" width="83" height="150" alt="Activación de 2FA en una cuenta de Google" title="Activación de 2FA en una cuenta de Google"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-3_hu1eac63d605add8910dab27af1a44b687_197376_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Google"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-3_hu1eac63d605add8910dab27af1a44b687_197376_200x150_fit_box_3.png" width="66" height="150" alt="Activación de 2FA en una cuenta de Google" title="Activación de 2FA en una cuenta de Google"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-4_hu07129b6f585ee0d2f7753f538e4c95aa_52452_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Google"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-4_hu07129b6f585ee0d2f7753f538e4c95aa_52452_200x150_fit_box_3.png" width="139" height="150" alt="Activación de 2FA en una cuenta de Google" title="Activación de 2FA en una cuenta de Google"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-5_hu0ecf2fc2c8f04f0a4cc1aafb7b4038a9_48615_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Google"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-5_hu0ecf2fc2c8f04f0a4cc1aafb7b4038a9_48615_200x150_fit_box_3.png" width="127" height="150" alt="Activación de 2FA en una cuenta de Google" title="Activación de 2FA en una cuenta de Google"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-6_hu5af182af9be00f114045c1bb72547069_65002_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Google"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-6_hu5af182af9be00f114045c1bb72547069_65002_200x150_fit_box_3.png" width="145" height="150" alt="Activación de 2FA en una cuenta de Google" title="Activación de 2FA en una cuenta de Google"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-7_hue71134a81c9b8d4b3e7d76827113c78b_38389_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Google"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-7_hue71134a81c9b8d4b3e7d76827113c78b_38389_200x150_fit_box_3.png" width="163" height="150" alt="Activación de 2FA en una cuenta de Google" title="Activación de 2FA en una cuenta de Google"  class="lozad "></a></p>
<figcaption>Activación de 2FA en una cuenta de Google</figcaption>
</figure>
</div>
<p>Una vez configurado 2FA al iniciar sesión Google por defecto envía una notificación al teléfono móvil con la que solo es necesario realizar la confirmación del inicio de sesión desde el móvil, con la opción <em>Probar de otra manera</em> permite usar otro método de autenticación 2FA entre ellos el de la aplicación <em>authenticator</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-8_hu3dbc2f61f9acebbe1293826509d8006a_33409_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en una cuenta de Google con 2FA"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-8_hu3dbc2f61f9acebbe1293826509d8006a_33409_200x150_fit_box_3.png" width="125" height="150" alt="Inicio de sesión en una cuenta de Google con 2FA" title="Inicio de sesión en una cuenta de Google con 2FA"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-9_hudafb16e2af5afd28eec81cfc0ba7008a_56956_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en una cuenta de Google con 2FA"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-9_hudafb16e2af5afd28eec81cfc0ba7008a_56956_200x150_fit_box_3.png" width="107" height="150" alt="Inicio de sesión en una cuenta de Google con 2FA" title="Inicio de sesión en una cuenta de Google con 2FA"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-10_hu92447999cf1f9f687c02a02f2c2fec67_83014_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en una cuenta de Google con 2FA"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-10_hu92447999cf1f9f687c02a02f2c2fec67_83014_200x150_fit_box_3.png" width="85" height="150" alt="Inicio de sesión en una cuenta de Google con 2FA" title="Inicio de sesión en una cuenta de Google con 2FA"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-11_hua90795ee4d5a1f0a2ffb8a3206201908_51721_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en una cuenta de Google con 2FA"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-2fa-11_hua90795ee4d5a1f0a2ffb8a3206201908_51721_200x150_fit_box_3.png" width="122" height="150" alt="Inicio de sesión en una cuenta de Google con 2FA" title="Inicio de sesión en una cuenta de Google con 2FA"  class="lozad "></a></p>
<figcaption>Inicio de sesión en una cuenta de Google con 2FA</figcaption>
</figure>
</div>
<h4 id="cómo-activar-2fa-en-una-cuenta-de-amazon">Cómo activar 2FA en una cuenta de Amazon</h4>
<p>En el caso de Amazon la configuración del segundo factor de autenticación se realiza desde <em>Mi cuenta &gt; Inicio de sesión y seguridad &gt; Configuración de la verificación en dos pasos (2SV)</em>. Hay que registra un autenticador de verificación de dos pasos, al seleccionar utilizar una <em>app</em> de verificación se muestra el cogido QR y en código de letras en el enlace <em>¿No puedes escanear el código de barras?</em>. Escáneado el código QR el y el código de letras se verifica la aplicación <em>autenticator</em> está configurada correctamente y genera códigos TOTP correctos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-1_hu8e311b3f4e42c5e3eca85dee328a10e9_48106_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-1_hu8e311b3f4e42c5e3eca85dee328a10e9_48106_200x150_fit_box_3.png" width="160" height="150" alt="Activación de 2FA en una cuenta de Amazon" title="Activación de 2FA en una cuenta de Amazon"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-2_huaaee53ac1137fde3720ce07275ac29a7_105167_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-2_huaaee53ac1137fde3720ce07275ac29a7_105167_200x150_fit_box_3.png" width="197" height="150" alt="Activación de 2FA en una cuenta de Amazon" title="Activación de 2FA en una cuenta de Amazon"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-3_hu23f7c03fd7f53bf4f8221a4d453e936b_92560_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-3_hu23f7c03fd7f53bf4f8221a4d453e936b_92560_200x150_fit_box_3.png" width="182" height="150" alt="Activación de 2FA en una cuenta de Amazon" title="Activación de 2FA en una cuenta de Amazon"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-4_huf7a1c52b3e119e3762cceeebf732056b_105115_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-4_huf7a1c52b3e119e3762cceeebf732056b_105115_200x150_fit_box_3.png" width="196" height="150" alt="Activación de 2FA en una cuenta de Amazon" title="Activación de 2FA en una cuenta de Amazon"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-5_hu88a46cd58e8a5eec821028252b467812_51889_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-5_hu88a46cd58e8a5eec821028252b467812_51889_200x150_fit_box_3.png" width="200" height="94" alt="Activación de 2FA en una cuenta de Amazon" title="Activación de 2FA en una cuenta de Amazon"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-6_hue61014966430a8b8edd3e808efad952c_252968_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-6_hue61014966430a8b8edd3e808efad952c_252968_200x150_fit_box_3.png" width="116" height="150" alt="Activación de 2FA en una cuenta de Amazon" title="Activación de 2FA en una cuenta de Amazon"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-7_hu642cbe9d1d5d89bee73eaae48d0ca621_105861_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-7_hu642cbe9d1d5d89bee73eaae48d0ca621_105861_200x150_fit_box_3.png" width="162" height="150" alt="Activación de 2FA en una cuenta de Amazon" title="Activación de 2FA en una cuenta de Amazon"  class="lozad "></a></p>
<figcaption>Activación de 2FA en una cuenta de Amazon</figcaption>
</figure>
</div>
<p>Al iniciar sesión en la cuenta de Amazon se solicita el correo electrónico y la contraseña, con 2FA activado adicionalmente se solicita el cógido TOTP, marcando la opción <em>No vuelvas a pedir ningún código en este navegador</em> el código TOTP solo se solicita una vez por dispositivo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-8_hu2a0c1aa7ad36bb758b2798746347c2c8_31680_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-8_hu2a0c1aa7ad36bb758b2798746347c2c8_31680_200x150_fit_box_3.png" width="119" height="150" alt="Inicio de sesión en una cuenta de Amazon" title="Inicio de sesión en una cuenta de Amazon"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-9_hu8c38a10d72b0adb13850656701035461_31140_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en una cuenta de Amazon"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/amazon-2fa-9_hu8c38a10d72b0adb13850656701035461_31140_200x150_fit_box_3.png" width="119" height="150" alt="Inicio de sesión en una cuenta de Amazon" title="Inicio de sesión en una cuenta de Amazon"  class="lozad "></a></p>
<figcaption>Inicio de sesión en una cuenta de Amazon</figcaption>
</figure>
</div>
<h4 id="cómo-activar-2fa-en-una-cuenta-de-paypal">Cómo activar 2FA en una cuenta de PayPal</h4>
<p>En PayPal la configuración de segundo factor de autenticación se realiza desde el <em>Centro de seguridad</em> con la opción <em>Verificación en dos pasos</em> para configurarlo. En la configuración se muestra el código QR y el código de letras introducir en la aplicación <em>authenticator</em>. Como en los otros casos para verificar que la aplicación <em>authenticator</em> se ha configurado correctamente para generar los código TOTP se solicita validar uno.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-1_hu4f4bedabb6e81457e9c2e3e09b0909e5_165795_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de PayPal"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-1_hu4f4bedabb6e81457e9c2e3e09b0909e5_165795_200x150_fit_box_3.png" width="112" height="150" alt="Activación de 2FA en una cuenta de PayPal" title="Activación de 2FA en una cuenta de PayPal"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-2_hu649eb672996bd37528e41668ac07392c_66523_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de PayPal"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-2_hu649eb672996bd37528e41668ac07392c_66523_200x150_fit_box_3.png" width="138" height="150" alt="Activación de 2FA en una cuenta de PayPal" title="Activación de 2FA en una cuenta de PayPal"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-3_hu22cfaf350d787691667f023b99c22384_60370_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Activación de 2FA en una cuenta de PayPal"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-3_hu22cfaf350d787691667f023b99c22384_60370_200x150_fit_box_3.png" width="132" height="150" alt="Activación de 2FA en una cuenta de PayPal" title="Activación de 2FA en una cuenta de PayPal"  class="lozad "></a></p>
<figcaption>Activación de 2FA en una cuenta de PayPal</figcaption>
</figure>
</div>
<p>Al iniciar sesión en la cuenta de PayPal se solicita también el correo electrónico y la contraseña, con 2FA activado adicionalmente se solicita el código TOTP, marcando la opción <em>Confiar en este dispositivo</em> el código TOTP solo se solicita una vez por dispositivo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-4_hu9a2b8ab0e64d0272a4f2eb2e11b1739d_12493_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en una cuenta de PayPal"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-4_hu9a2b8ab0e64d0272a4f2eb2e11b1739d_12493_200x150_fit_box_3.png" width="200" height="150" alt="Inicio de sesión en una cuenta de PayPal" title="Inicio de sesión en una cuenta de PayPal"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-5_hu9cdd340fec763b783a8c1baab4e0c2a7_33442_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión en una cuenta de PayPal"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/paypal-2fa-5_hu9cdd340fec763b783a8c1baab4e0c2a7_33442_200x150_fit_box_3.png" width="149" height="150" alt="Inicio de sesión en una cuenta de PayPal" title="Inicio de sesión en una cuenta de PayPal"  class="lozad "></a></p>
<figcaption>Inicio de sesión en una cuenta de PayPal</figcaption>
</figure>
</div>
<h3 id="aplicación-para-_smartphone_-generador-de-totp">Aplicación para <em>smartphone</em> generador de TOTP</h3>
<p>Dos aplicaciones gratuitas para teléfono inteligente o <em>smartphone</em> son <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2">Google Authenticator</a> y <a href="https://play.google.com/store/apps/details?id=com.azure.authenticator">Microsoft Authenticator</a> disponibles tanto para los que utilizan <a href="https://www.android.com/">Android</a> como <a href="https://www.apple.com/es/ios/ios-12/">iOS</a> como sistema operativo en sus respectivas tiendas de aplicaciones.</p>
<p>Instalada la aplicación en el <em>smartphone</em> el primer paso es iniciar el proceso de activación de 2FA en un servicio, este servicio proporciona el código QR que escaneándolo con la aplicación permite generar generar los códigos temporales 2FA. Una vez escaneado el código QR se muestra como información el servicio y cuenta, el código temporal válido y un indicador de tiempo que una vez expirado se genera un nuevo código.</p>
<p>Las aplicaciones móviles ofrecen comodidad pero ¿qué ocurre si el móvil se pierde, nos lo roban o se estropea? No disponer del dispositivo generador de 2FA es un problema ya que sin él no se impide el inicio de sesión ya que en algún momento se solicitará el código 2FA.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-authenticator-1_huda658359a0b9c8ecf79de3da37848ad5_99081_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Google Authenticator"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-authenticator-1_huda658359a0b9c8ecf79de3da37848ad5_99081_200x150_fit_box_3.png" width="75" height="150" alt="Google Authenticator" title="Google Authenticator"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-authenticator-2_huc20cc5feba301ca6e426b55a263b049f_70777_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Google Authenticator"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/google-authenticator-2_huc20cc5feba301ca6e426b55a263b049f_70777_200x150_fit_box_3.png" width="75" height="150" alt="Google Authenticator" title="Google Authenticator"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/microsoft-authenticator-1_hu15b8a56f8a5f26012ae5f16a9bf923d6_124814_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Microsoft Authenticator"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/microsoft-authenticator-1_hu15b8a56f8a5f26012ae5f16a9bf923d6_124814_200x150_fit_box_3.png" width="84" height="150" alt="Microsoft Authenticator" title="Microsoft Authenticator"  class="lozad "></a></p>
<figcaption>Aplicaciones Google Authenticator y Microsoft Authenticator</figcaption>
</figure>
</div>
<h3 id="aplicación-de-escritorio-generador-de-totp">Aplicación de escritorio generador de TOTP</h3>
<p><a href="https://keepassxc.org/">KeePassXC</a> es una aplicación de escritorio que sirve como base de datos para <a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">guardar contraseñas de forma segura y generar contraseñas únicas seguras</a> para los servicios. Está disponible para los sistemas operativos <a href="https://www.microsoft.com/es-es/windows/">Windows</a>, <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> y <a href="https://www.apple.com/macos/">macOS</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/keepass-1_hu70875c171f83b4b38a2169b2f7801d89_109852_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Aplicación gestor de contraseñas KeePassXC"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/keepass-1_hu70875c171f83b4b38a2169b2f7801d89_109852_300x200_fit_box_3.png" width="211" height="200" alt="Aplicación gestor de contraseñas KeePassXC" title="Aplicación gestor de contraseñas KeePassXC"  class="lozad "></a></p>
<figcaption>Aplicación gestor de contraseñas KeePassXC</figcaption>
</figure>
</div>
<p>KeePassXC también sirve para guardar el 2FA siendo capaz de generar los mismo códigos TOTP de las aplicaciones de <em>smartphone</em>. Para guardar la semilla con la que se generan los TOTP hay que ir a la opción del menú <em>Apuntes &gt; TOTP &gt; Configurar TOTP</em> o con el menú contextual del botón derecho sobre el apunte, esta opción muestra una ventana en la que introducir el código de letras alternativo al código QR al activar el 2FA del servicio. También es capaz de mostrar el código QR original, lo que permite migrar el 2FA a otro móvil.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/keepass-2_hue4c925b4b6e246f1976167894bc8e2b5_44709_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Código TOTP generador por KeePassXC"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/keepass-2_hue4c925b4b6e246f1976167894bc8e2b5_44709_300x200_fit_box_3.png" width="149" height="200" alt="Código TOTP generador por KeePassXC" title="Código TOTP generador por KeePassXC"  class="lozad "></a></p>
<figcaption>Configuración TOTP en KeePassXC</figcaption>
</figure>
</div>
<p>Si se configura como generador de códigos un <em>smartphone</em> y KeePassXC es posible comprobar que generan los mismos TOTP y están bien configurados, con la opción <em>Apuntes &gt; TOTP &gt; Mostrar TOTP</em> se muestra un diálogo con el código TOTP válido.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/keepass-3_hu3752946182f50a4a3a8601b142307d50_24508_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Código TOTP generador por KeePassXC"><img src="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/images/keepass-3_hu3752946182f50a4a3a8601b142307d50_24508_300x200_fit_box_3.png" width="220" height="200" alt="Código TOTP generador por KeePassXC" title="Código TOTP generador por KeePassXC"  class="lozad "></a></p>
<figcaption>Código TOTP generador por KeePassXC</figcaption>
</figure>
</div>
<h4 id="por-qué-utilizar-keepassxc-adicionalmente-a-una-aplicación-del-móvil">Por qué utilizar KeePassXC adicionalmente a una aplicación del móvil</h4>
<p>No conviene guardar los 2FA únicamente en el <em>smartphone</em>, perder el dispositivo generador de códigos 2FA impide iniciar sesión en los servicios cuando se solicite el TOTP. Algunos servicios permiten recuperar la cuenta utilizando otras formas de autenticación pero algunos otros servicios perder el 2FA quizá suponga la pérdida del acceso a la cuenta.</p>
<p>Utilizar KeePassXC permite tener un segundo dispositivo con el que generar los TOTP, además es fácil <a href="https://picodotdev.github.io/blog-bitix/2016/05/como-realizar-copias-de-seguridad-en-windows-con-freefilesync/">hacer una copia de seguridad</a> del archivo de la base de datos de las contraseñas de KeePassXC ya que es simplemente un archivo cifrado y permite configurar otros dispositivos como generadores de TOTP a través del código QR original.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/</id>
        <title>El problema de seguridad tabnabbing y phishing en los enlaces en nuevas pestañas a páginas externas y cómo solucionarlo</title>
        <updated>2020-05-24T10:00:00+02:00</updated>
        <published>2020-05-24T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>A medida que las personas dependen en mayor medida para operar en internet como compras, acceso a cuentas bancarias o trámites administrativos la seguridad de las aplicaciones web es más crítica. Una parte de la seguridad es responsabilidad del usuario pero otra parte importante es responsabilidad del sitio web. Un potencial problema de seguridad está en los simples y aparentemente inocentes enlaces abiertos en nuevas páginas si al mismo tiempo es posible insertar contenido en la página que otros usuarios obtengan. El resultado es una vulnerabilidad de <em>tabnabbing</em> y <em>phishing</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<p>Es bueno conocer los problemas de seguridad más comunes en las aplicaciones web. Aún siendo la lista de <a href="https://owasp.org/www-project-top-ten/">los 10 problemas de seguridad más importantes</a> muy conocidos aún siguen siendo de los más importantes por seguir habiendo aplicaciones vulnerables a ellos y por su gravedad para la seguridad de los datos así como para explotar una aplicación.</p>
<p>Aún así no son los únicos importantes, algunos ni siquiera requieren complejas técnicas para explotarlos. Uno de ellos son los enlaces externos que se abren en páginas en blanco. El problema de seguridad reside en que el modo de funcionamiento por defecto de estos enlaces se permite el acceso a la ventana origen desde la página abierta. Esto hace que la página abierta potencialmente sea capaz de tomar el control de la ventana origen y modificar su contenido, por ejemplo cargando una página maliciosa para hacer un peligroso ataque de suplantación de identidad o <em>phishing</em> que simule una página legítima con la intención de robar las contraseñas de algún servicio importante de un usuario.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="hl"><span class="lnt"> 8&#10;</span></span><span class="hl"><span class="lnt"> 9&#10;</span></span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Page<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="hl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;external.html&#34;</span> <span class="na">target</span><span class="o">=</span><span class="s">&#34;_blank&#34;</span><span class="p">&gt;</span>Open page<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span><span class="hl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;external.html&#34;</span> <span class="na">target</span><span class="o">=</span><span class="s">&#34;_blank&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;noopener noreferrer&#34;</span><span class="p">&gt;</span>Open page (secure)<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;</span><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>page.html</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-1_hue72212653050e8e7191533ee0a6df7cd_19649_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página con enlaces a otras páginas abiertas en una nueva pestaña"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-1_hue72212653050e8e7191533ee0a6df7cd_19649_300x200_fit_box_3.png" width="261" height="200" alt="Página con enlaces a otras páginas abiertas en una nueva pestaña" title="Página con enlaces a otras páginas abiertas en una nueva pestaña"  class="lozad "></a></p>
<figcaption>Página con enlaces a otras páginas abiertas en una nueva pestaña</figcaption>
</figure>
</div>
<p>El problema es que los navegadores cuando se abre un enlace en una página en blanco o nueva, el navegador hace accesible a la ventana abierta el <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window">objeto Window</a> de la página que lo abre. Y teniendo acceso al objeto <em>Window</em> una página maliciosa cargada tiene la posibilidad de cargar una nueva página en la página original o acceder a las cookies entre ellas las que permiten mantener la sesión en el servidor. Por ejemplo, con la variable <em>window.location</em> es posible cargar una página de autenticación falsa que le pida al usuario introducir sus datos y realmente realice el robo de la contraseña.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="hl"><span class="lnt"> 7&#10;</span></span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span> <span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Unknown<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span>&#10;<span class="hl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">window</span><span class="p">.</span><span class="nx">opener</span><span class="p">.</span><span class="nx">location</span> <span class="o">=</span> <span class="s1">&#39;https://www.google.com&#39;</span><span class="p">;</span>&#10;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;You have heen tabnabbed!&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>external.html</span>
    </div>
</div>
<p>Es un problema peligroso porque se aprovecha de los navegadores basados en pestañas, en este caso en una página fuera de la atención del usuario se carga un contenido nuevo, el usuario inadvertido al volver a esa pestaña puede pensar que el contenido cambiado de esa pestaña es legítimo sin ser consciente de que no lo es, sin embargo, ser víctima de este peligro de seguridad conocido como <a href="https://en.wikipedia.org/wiki/Tabnabbing">tabnabbing</a> combinado con <a href="https://es.wikipedia.org/wiki/Phishing">phishing</a>. Por ello se recomienda y es importante comprobar que el dominio de la página mostrado por el navegador en la barra de direcciones se corresponda con el contenido, que la página utilice un protocolo seguro no es suficiente si el ataque es de <em>phishing</em>.</p>
<p>Este ataque es realmente sencillo pero ha de complementarse con una forma de ataque <a href="https://es.wikipedia.org/wiki/Cross-site_scripting">XSS</a> no tanto por permitir insertar código JavaScript pero si por permitir insertar contenido inseguro sin control de forma que otros usuarios tangan posibilidad de abrirlos y ser potenciales victimas en este caso enlaces que abran una página maliciosa.</p>
<p>El enlace que abre una página en una nueva pestaña es vulnerable a <em>tabnabbing</em>. Al ir al enlace se abre una pestaña, el usuario pierde el foco de la página original y en ella la página abierta carga una nueva página produciéndose el <em>tabnabbing</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-2_hu22643fffb0ba0f7644311b38531b1ce2_19858_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-2_hu22643fffb0ba0f7644311b38531b1ce2_19858_300x200_fit_box_3.png" width="261" height="200" alt="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña" title="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-3_hu560700057f11b8d116c6384704b49653_44735_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-3_hu560700057f11b8d116c6384704b49653_44735_300x200_fit_box_3.png" width="177" height="200" alt="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña" title="Problema de tabnabbing en enlaces que abren páginas en nueva pestaña"  class="lozad "></a></p>
<figcaption>Problema de tabnabbing en enlaces que abren páginas en nueva pestaña</figcaption>
</figure>
</div>
<p>La solución más sencilla es añadir el atributo <em>rel=&ldquo;noopener noreferrer&rdquo;</em> a los enlaces que se abran en una nueva página, esto informa al navegador para que no proporcione a la página abierta el acceso a la variable <em>window.opener</em>, como se muestra en el segundo enlace del ejemplo de código <em>page.html</em>, si la página abierta hace uso de ella se produce un error de JavaScript.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-4_hu097818c1a0d12ef276d1e1742bc40f22_34321_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="La variable window.opener es nula en el enlace seguro"><img src="https://picodotdev.github.io/blog-bitix/2020/05/el-problema-de-seguridad-tabnabbing-y-phishing-en-los-enlaces-en-nuevas-pestanas-a-paginas-externas-y-como-solucionarlo/images/link-target-blank-4_hu097818c1a0d12ef276d1e1742bc40f22_34321_300x200_fit_box_3.png" width="261" height="200" alt="La variable window.opener es nula en el enlace seguro" title="La variable window.opener es nula en el enlace seguro"  class="lozad "></a></p>
<figcaption>La variable window.opener es nula en el enlace seguro</figcaption>
</figure>
</div>
<p>Otras medidas recomendables son <a href="https://picodotdev.github.io/blog-bitix/2019/03/codificar-los-datos-para-evitar-ataques-xss-en-una-pagina-web/">codificar los datos para evitar ataques XSS</a> y <a href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/">filtrar el contenido enviado por los usuarios o devuelto por la página</a> sobre todo si proviene de fuentes externas a la aplicación ya sea de formularios introducidos por el usuario, parámetros, cabeceras u otras aplicaciones.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/opener">window.opener</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/</id>
        <title>Implementar un segundo factor de autenticación en una aplicación web Java con Spring</title>
        <updated>2019-11-29T18:00:00+01:00</updated>
        <published>2019-11-29T18:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El segundo factor de autenticación es una medida adicional en la autenticación que proporciona una notable mayor seguridad que utilizar solo un usuario y contraseña. Utilizando Spring y la aplicación para <em>smatphone</em> Google Authenticator se puede implementar en una aplicación Java el segundo factor de autenticación o 2FA con códigos temporales o TOTP.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p>Comúnmente para realizar el proceso de autenticar a un usuario se ha realizado simplemente con el método de usuario y contraseña. Sin embargo, verificar la identidad mediante usuario y contraseña para algunos usuarios no es suficientemente seguro dado que los usuarios pueden elegir contraseñas débiles con pocos caracteres o sin usar una combinación que incluya letras, números y símbolos, pueden elegir contraseñas comunes muy utilizadas fáciles de adivinar con un ataque de diccionario, pueden usar la misma contraseña para varios servicios de modo que si las contraseñas de un servicio son descubiertas cualquier otro servicio que las utilice potencialmente corre un riesgo de seguridad. Usar solo usuario y contraseña no proporciona la suficiente seguridad para ciertos servicios que permiten realizar transacciones que involucra dinero, tratan datos sensibles o son servicios atractivos para ser atacados.</p>
<p>Para que las contraseñas sean seguras las aplicaciones en sus bases de datos <a href="https://picodotdev.github.io/blog-bitix/2015/04/guardar-contrasenas-usando-salted-password-hashing-y-otras-formas-correctas/">guardar las contraseñas usando <em>Salted Password Hashing</em></a>, los usuarios por su parte deben utilizar un generador de contraseñas, utilizar una contraseña distinta para cada servicio y <a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">guardalas en una base de datos cifrada como KeePassXC</a> para recordar cada una de ellas. Las contraseñas son algo que se conoce, cualquier persona que conozca la contraseña puede autenticarse, más recientemente una capa adicional de seguridad es requerir algo que se tiene, el segundo factor de autenticación, doble factor de autenticación o 2FA.</p>
<p>La aplicación <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2">Google Authenticator</a> para dispositivos móviles <a href="https://www.android.com/">Android</a> permite utilizarse como segundo factor de autenticación, esta aplicación genera códigos con un tiempo corto de duración que son requeridos en un segundo paso de la autenticación después de introducir el usuario y contraseña. Con un segundo factor de autenticación se requiere algo que se sabe, el usuario y contraseña, y algo que se tiene, el dispositivo móvil que genera códigos con lo que aunque la contraseña quede comprometida no se podría realizar la autenticación sin poseer el segundo factor de autenticación.</p>
<p>Dado que los códigos de verificación tienen un tiempo de vida corto, habitualmente de 30 segundos, y acceder al generador del segundo factor de autenticación requiere acceso físico al dispositivo móvil la combinación de que las credenciales queden comprometidas es significativamente más difícil y por tanto la seguridad aumenta al mismo tiempo. Los principales servicios de internet como <a href="https://www.google.es/">Google</a>, <a href="https://amzn.to/2flFhHA">Amazon</a>, <a href="https://www.paypal.com/">PayPal</a> o <a href="https://twitter.com/">Twitter</a> y otros servicios utilizados por millones de usuarios permiten ya utilizar 2FA, un fallo en su seguridad por la cantidad de usuarios e importante información que registran les supondría una muy mala imagen, pérdida de ingresos, costes, reputación, usuarios o dependiendo de la gravedad del fallo y los datos comprometidos multas millonarias. Cualquiera de estos servicios importantes por el número de usuarios que los utilizan a diario a nivel mundial que deben garantizar gran seguridad ofrecen la posibilidad de <a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/">activar la verificación en dos pasos</a>.</p>
<h3 id="librería-para-implementar-segundo-factor-de-autenticación-en-java">Librería para implementar segundo factor de autenticación en Java</h3>
<p>A través de <a href="https://spring.io/projects/spring-security">Spring Security</a> y la librería <a href="https://github.com/aerogear/aerogear-otp-java">aerogear-otp-java</a> una aplicación Java puede implementar el segundo factor de autenticación o verificación en dos pasos de la misma forma que los servicios de Google, Amazon, PayPal o Twitter, incluso posibilitar de que el requerimiento de solicitar segundo factor de autenticación sea opcional según la preferencia de un usuario o como forma de que los usuarios progresivamente habiliten el 2FA. El primer paso es proporcionar al usuario una clave secreta a través de un código QR que codifica una clave secreta que se utiliza para generar los códigos de verificación, el usuario debe escanearlo con la aplicación Google Authenticator con la cámara para que genere código de 6 dígitos con una validez de 30 segundos en el momento de autenticarse, este paso se realiza en el momento de registrarse o de activar el 2FA si es opcional. Con Google Authenticator el código en vez con la cámara también se puede introducir mediante el teclado si la aplicación se lo proporciona en forma de texto en vez de como imagen QR. La ventaja del código QR es que es más rápido y cómodo.</p>
<p>El primer paso de la autenticación utilizando 2FA es introducir el usuario y contraseña. El segundo paso es introducir el código del segundo factor de autenticación. Introducidos ambos el usuario es redirigido a la página de inicio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-1_hu175ef601d8d42f30e72518b43891e47e_45868_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Autenticación con segundo factor de autenticación"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-1_hu175ef601d8d42f30e72518b43891e47e_45868_200x150_fit_box_3.png" width="119" height="150" alt="Autenticación con segundo factor de autenticación" title="Autenticación con segundo factor de autenticación"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-2_hu9c9348bffc4af6776fabcf5eb81bd349_26010_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Autenticación con segundo factor de autenticación"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-2_hu9c9348bffc4af6776fabcf5eb81bd349_26010_200x150_fit_box_3.png" width="119" height="150" alt="Autenticación con segundo factor de autenticación" title="Autenticación con segundo factor de autenticación"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-3_huae1ec02b78b99a03807b17d0f330701d_21531_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Autenticación con segundo factor de autenticación"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/autenticacion-2fa-3_huae1ec02b78b99a03807b17d0f330701d_21531_200x150_fit_box_3.png" width="119" height="150" alt="Autenticación con segundo factor de autenticación" title="Autenticación con segundo factor de autenticación"  class="lozad "></a></p>
<figcaption>Autenticación con segundo factor de autenticación</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/google-authenticator_hu7c66848b0f7ec1a179fb56278c70ceeb_103534_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Aplicación Google Authenticator con varios generadores de códigos temporales"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/google-authenticator_hu7c66848b0f7ec1a179fb56278c70ceeb_103534_300x200_fit_box_3.png" width="113" height="200" alt="Aplicación Google Authenticator con varios generadores de códigos temporales" title="Aplicación Google Authenticator con varios generadores de códigos temporales"  class="lozad "></a></p>
<figcaption>Aplicación Google Authenticator con varios generadores de códigos temporales</figcaption>
</figure>
</div>
<p>Validado el código del 2FA al usuario se le asignan los permisos que le corresponden en el sistema y que le otorgan permisos para realizar acciones, en este caso entrar a la página de inicio.</p>
<h3 id="ejemplo-de-implementación-de-segundo-factor-de-autenticación-en-una-aplicación-java">Ejemplo de implementación de segundo factor de autenticación en una aplicación Java</h3>
<p>La implementación en código contiene las clases que representan una cuenta en el sistema, en <em>InMemoryAccountRepository</em> se crean dos usuarios <em>admin</em> y <em>user</em> con sus contraseñas en el ejemplo en texto plano y los roles que tiene asignados que les otorgarán permisos para realizar acciones en la aplicación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.account</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">AccountRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Account</span> <span class="nf">find</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">);</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AccountRepository.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.account</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Repository</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">InMemoryAccountRepository</span> <span class="kd">implements</span> <span class="n">AccountRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">ADMIN_SECRET</span> <span class="o">=</span> <span class="s">&#34;6YFX5TVT76OHHNMS&#34;</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Account</span><span class="o">&gt;</span> <span class="n">accounts</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">InMemoryAccountRepository</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accounts</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Account</span><span class="o">&gt;();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">init</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Account</span> <span class="n">admin</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Account</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">&#34;admin&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">&#34;{noop}password&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setAuth2fa</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setSecret</span><span class="o">(</span><span class="n">ADMIN_SECRET</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">admin</span><span class="o">.</span><span class="na">setRoles</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">&#34;ROLE_USER&#34;</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Account</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Account</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span><span class="o">.</span><span class="na">setUsername</span><span class="o">(</span><span class="s">&#34;user&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="s">&#34;{noop}password&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span><span class="o">.</span><span class="na">setAuth2fa</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">user</span><span class="o">.</span><span class="na">setRoles</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="s">&#34;ROLE_USER&#34;</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accounts</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">admin</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">accounts</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Account</span> <span class="nf">find</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">accounts</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">filter</span><span class="o">(</span><span class="n">account</span> <span class="o">-&gt;</span> <span class="n">account</span><span class="o">.</span><span class="na">getUsername</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">username</span><span class="o">)).</span><span class="na">findFirst</span><span class="o">().</span><span class="na">orElse</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>InMemoryAccountRepository.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.account</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Account</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">username</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">password</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">secret</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Boolean</span> <span class="n">auth2fa</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">roles</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getUsername</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">username</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUsername</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">username</span> <span class="o">=</span> <span class="n">username</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getPassword</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">password</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPassword</span><span class="o">(</span><span class="n">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getSecret</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">secret</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSecret</span><span class="o">(</span><span class="n">String</span> <span class="n">secret</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">secret</span> <span class="o">=</span> <span class="n">secret</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Boolean</span> <span class="nf">isAuth2fa</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">auth2fa</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAuth2fa</span><span class="o">(</span><span class="n">Boolean</span> <span class="n">auth2fa</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">auth2fa</span> <span class="o">=</span> <span class="n">auth2fa</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">getRoles</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">roles</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRoles</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">roles</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">roles</span> <span class="o">=</span> <span class="n">roles</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Account.java</span>
    </div>
</div>
<p>La configuración de seguridad en Spring Security indica para cada URL que permisos se requieren. Para acceder a la página de contenido <em>/home</em> de la aplicación se requiere el rol <em>USER</em>, a la página de inicio de sesión <em>/login</em> se permite acceder a los usuario no autenticados donde introducen sus credenciales de usuario y contraseña, una vez validado el usuario y contraseña el usuario autenticado tiene el rol <em>PRE_AUTH_USER</em>, dependiendo de si el usuario en su preferencia usa 2FA o no en el manejador de autenticación exitosa <em>SecondFactorAuthenticationSuccessHandler</em> redirige al usuario a la página <em>/home</em> o la página <em>/code</em> para introducir el código de verificación del segundo factor autenticación. Al usuario autenticado exitosamente de forma completa se le sustituye el permiso <em>PRE_AUTH_USER</em> por los que tenga asignado, en el ejemplo el rol <em>USER</em>.</p>
<p>La verificación del código del segundo paso de autenticación se realiza en la clase <em>CodeController</em> con la clase <em>Totp</em> a partir del código enviado y el código secreto con el cual se generó la imagen de código QR.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Configuration</span>&#10;<span class="nd">@EnableWebSecurity</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WebSecurityConfig</span> <span class="kd">extends</span> <span class="n">WebSecurityConfigurerAdapter</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">UserDetailsService</span> <span class="n">userDetailsService</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">AuthenticationSuccessHandler</span> <span class="n">authenticationSuccessHandler</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">PasswordEncoder</span> <span class="nf">encoder</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">PasswordEncoderFactories</span><span class="o">.</span><span class="na">createDelegatingPasswordEncoder</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">AuthenticationSuccessHandler</span> <span class="nf">authenticationSuccessHandler</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">SecondFactorAuthenticationSuccessHandler</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">HttpSecurity</span> <span class="n">http</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">http</span><span class="o">.</span><span class="na">authorizeRequests</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&#34;/static/**&#34;</span><span class="o">).</span><span class="na">permitAll</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&#34;/code&#34;</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">&#34;PRE_AUTH_USER&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&#34;/home&#34;</span><span class="o">).</span><span class="na">hasRole</span><span class="o">(</span><span class="s">&#34;USER&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">anyRequest</span><span class="o">().</span><span class="na">authenticated</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">http</span><span class="o">.</span><span class="na">formLogin</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">loginPage</span><span class="o">(</span><span class="s">&#34;/login&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">permitAll</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">successHandler</span><span class="o">(</span><span class="n">authenticationSuccessHandler</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">http</span><span class="o">.</span><span class="na">logout</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">permitAll</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">registerAuthentication</span><span class="o">(</span><span class="n">AuthenticationManagerBuilder</span> <span class="n">auth</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">auth</span><span class="o">.</span><span class="na">userDetailsService</span><span class="o">(</span><span class="n">userDetailsService</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>WebSecurityConfig.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@EnableWebMvc</span>&#10;<span class="nd">@Configuration</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WebMvcConfig</span> <span class="kd">implements</span> <span class="n">WebMvcConfigurer</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addViewControllers</span><span class="o">(</span><span class="n">ViewControllerRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">addViewController</span><span class="o">(</span><span class="s">&#34;/login&#34;</span><span class="o">).</span><span class="na">setViewName</span><span class="o">(</span><span class="s">&#34;login&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">addViewController</span><span class="o">(</span><span class="s">&#34;/code&#34;</span><span class="o">).</span><span class="na">setViewName</span><span class="o">(</span><span class="s">&#34;code&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">addViewController</span><span class="o">(</span><span class="s">&#34;/home&#34;</span><span class="o">).</span><span class="na">setViewName</span><span class="o">(</span><span class="s">&#34;home&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addResourceHandlers</span><span class="o">(</span><span class="n">ResourceHandlerRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">registry</span><span class="o">.</span><span class="na">addResourceHandler</span><span class="o">(</span><span class="s">&#34;/static/**&#34;</span><span class="o">).</span><span class="na">addResourceLocations</span><span class="o">(</span><span class="s">&#34;classpath:/static/&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ClassLoaderTemplateResolver</span> <span class="nf">templateResolver</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ClassLoaderTemplateResolver</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ClassLoaderTemplateResolver</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span><span class="o">.</span><span class="na">setPrefix</span><span class="o">(</span><span class="s">&#34;templates/&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span><span class="o">.</span><span class="na">setSuffix</span><span class="o">(</span><span class="s">&#34;.html&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">result</span><span class="o">.</span><span class="na">setTemplateMode</span><span class="o">(</span><span class="s">&#34;HTML&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">result</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">SpringTemplateEngine</span> <span class="nf">templateEngine</span><span class="o">(</span><span class="n">ClassLoaderTemplateResolver</span> <span class="n">templateResolver</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SpringTemplateEngine</span> <span class="n">templateEngine</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SpringTemplateEngine</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">templateEngine</span><span class="o">.</span><span class="na">addDialect</span><span class="o">(</span><span class="k">new</span> <span class="n">LayoutDialect</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">templateEngine</span><span class="o">.</span><span class="na">setTemplateResolver</span><span class="o">(</span><span class="n">templateResolver</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">templateEngine</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ThymeleafViewResolver</span> <span class="nf">viewResolver</span><span class="o">(</span><span class="n">SpringTemplateEngine</span> <span class="n">engine</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ThymeleafViewResolver</span> <span class="n">viewResolver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ThymeleafViewResolver</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">viewResolver</span><span class="o">.</span><span class="na">setTemplateEngine</span><span class="o">(</span><span class="n">engine</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">viewResolver</span><span class="o">.</span><span class="na">setCache</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">viewResolver</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>WebMvcConfig.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SecondFactorAuthenticationSuccessHandler</span> <span class="kd">implements</span> <span class="n">AuthenticationSuccessHandler</span> <span class="o">{</span>&#10;  &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">RedirectStrategy</span> <span class="n">redirectStrategy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultRedirectStrategy</span><span class="o">();</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAuthenticationSuccess</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">Authentication</span> <span class="n">authentication</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">handle</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">,</span> <span class="n">authentication</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">clearAuthenticationAttributes</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">handle</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">Authentication</span> <span class="n">authentication</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">String</span> <span class="n">targetUrl</span> <span class="o">=</span> <span class="n">getTargetUrl</span><span class="o">(</span><span class="n">authentication</span><span class="o">);</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">isCommitted</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">redirectStrategy</span><span class="o">.</span><span class="na">sendRedirect</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">,</span> <span class="n">targetUrl</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="n">String</span> <span class="nf">getTargetUrl</span><span class="o">(</span><span class="n">Authentication</span> <span class="n">authentication</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">UserDetailsAdapter</span> <span class="n">userDetailsAdapter</span> <span class="o">=</span> <span class="o">(</span><span class="n">UserDetailsAdapter</span><span class="o">)</span> <span class="n">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">getAuthentication</span><span class="o">().</span><span class="na">getPrincipal</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">userDetailsAdapter</span><span class="o">.</span><span class="na">getAccount</span><span class="o">().</span><span class="na">isAuth2fa</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;/code&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Utils</span><span class="o">.</span><span class="na">setAuthentication</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;/home&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">clearAuthenticationAttributes</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpSession</span> <span class="n">session</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getSession</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">session</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">session</span><span class="o">.</span><span class="na">removeAttribute</span><span class="o">(</span><span class="n">WebAttributes</span><span class="o">.</span><span class="na">AUTHENTICATION_EXCEPTION</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRedirectStrategy</span><span class="o">(</span><span class="n">RedirectStrategy</span> <span class="n">redirectStrategy</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">redirectStrategy</span> <span class="o">=</span> <span class="n">redirectStrategy</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="n">RedirectStrategy</span> <span class="nf">getRedirectStrategy</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">redirectStrategy</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>SecondFactorAuthenticationSuccessHandler.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Utils</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">setAuthentication</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Authentication</span> <span class="n">authentication</span> <span class="o">=</span> <span class="n">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">getAuthentication</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">UserDetailsAdapter</span> <span class="n">userDetailsAdapter</span> <span class="o">=</span> <span class="o">(</span><span class="n">UserDetailsAdapter</span><span class="o">)</span> <span class="n">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">getAuthentication</span><span class="o">().</span><span class="na">getPrincipal</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">GrantedAuthority</span><span class="o">&gt;</span> <span class="n">authorities</span> <span class="o">=</span> <span class="n">AuthorityUtils</span><span class="o">.</span><span class="na">createAuthorityList</span><span class="o">(</span><span class="n">userDetailsAdapter</span><span class="o">.</span><span class="na">getAccount</span><span class="o">().</span><span class="na">getRoles</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">0</span><span class="o">]));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Authentication</span> <span class="n">newAuth</span> <span class="o">=</span> <span class="k">new</span> <span class="n">UsernamePasswordAuthenticationToken</span><span class="o">(</span><span class="n">authentication</span><span class="o">.</span><span class="na">getPrincipal</span><span class="o">(),</span> <span class="n">authentication</span><span class="o">.</span><span class="na">getCredentials</span><span class="o">(),</span> <span class="n">authorities</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">setAuthentication</span><span class="o">(</span><span class="n">newAuth</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Utils.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserDetailsAdapter</span> <span class="kd">implements</span> <span class="n">UserDetails</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Account</span> <span class="n">account</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">UserDetailsAdapter</span><span class="o">(</span><span class="n">Account</span> <span class="n">account</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">account</span> <span class="o">=</span> <span class="n">account</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Collection</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">GrantedAuthority</span><span class="o">&gt;</span> <span class="nf">getAuthorities</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">AuthorityUtils</span><span class="o">.</span><span class="na">createAuthorityList</span><span class="o">(</span><span class="s">&#34;ROLE_PRE_AUTH_USER&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getUsername</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">account</span><span class="o">.</span><span class="na">getUsername</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getPassword</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">account</span><span class="o">.</span><span class="na">getPassword</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isAccountNonExpired</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isAccountNonLocked</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCredentialsNonExpired</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isEnabled</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Account</span> <span class="nf">getAccount</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">account</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>UserDetailsAdapter.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.spring2fa.spring</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="nd">@Primary</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserDetailsServiceAdapter</span> <span class="kd">implements</span> <span class="n">UserDetailsService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">AccountRepository</span> <span class="n">accountRepository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">UserDetails</span> <span class="nf">loadUserByUsername</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">UsernameNotFoundException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Account</span> <span class="n">account</span> <span class="o">=</span> <span class="n">accountRepository</span><span class="o">.</span><span class="na">find</span><span class="o">(</span><span class="n">username</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">account</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">throw</span> <span class="k">new</span> <span class="n">UsernameNotFoundException</span><span class="o">(</span><span class="n">username</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">UserDetailsAdapter</span><span class="o">(</span><span class="n">account</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>UserDetailsServiceAdapter.java</span>
    </div>
</div>
<p>El código QR es una imagen generada a partir del código secreto y una información adicional que al usuario le permite identificar la cuenta, hay <em>webs</em> que permiten <a href="https://zxing.org/w/decode.jspx">decodificar una imagen QR</a> para analizar que información incorpora, en esta la información de la cuenta <em>Spring2FA (admin)</em> y el secreto <em>6YFX5TVT76OHHNMS</em> utilizado para generar los códigos temporales. En el HTML devuelto se incluye una imagen con la información embebida en el enlace de la imagen, la imagen se genera por un servicio de Google.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/qr-code-decoder_hub6e902ccd53b26d50ca9243601464eba_47627_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Decodificador de imágenes código QR"><img src="https://picodotdev.github.io/blog-bitix/2019/11/implementar-un-segundo-factor-de-autenticacion-en-una-aplicacion-web-java-con-spring/images/qr-code-decoder_hub6e902ccd53b26d50ca9243601464eba_47627_300x200_fit_box_3.png" width="300" height="142" alt="Decodificador de imágenes código QR" title="Decodificador de imágenes código QR"  class="lozad "></a></p>
<figcaption>Decodificador de imágenes código QR</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:th</span><span class="o">=</span><span class="s">&#34;http://www.thymeleaf.org&#34;</span> <span class="na">xmlns:layout</span><span class="o">=</span><span class="s">&#34;http://www.ultraq.net.nz/web/thymeleaf/layout&#34;</span> <span class="na">layout:decorate</span><span class="o">=</span><span class="s">&#34;~{layout}&#34;</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;...&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;&lt;</span><span class="nt">img</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://chart.googleapis.com/chart?chs=200x200&amp;chld=M%7C0&amp;cht=qr&amp;chl=otpauth%3A%2F%2Ftotp%2FSpring2FA%20(admin)%3Fsecret%3D6YFX5TVT76OHHNMS&#34;</span> <span class="p">/&gt;&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;...&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>login.html</span>
    </div>
</div>
<p>Las dependencias de librerías son las siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="o">...</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;org.springframework.boot:spring-boot-starter-security&#39;</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;org.thymeleaf:thymeleaf-spring5:3.0.11.RELEASE&#39;</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1&#39;</span>&#10;	<span class="n">implementation</span> <span class="s1">&#39;org.jboss.aerogear:aerogear-otp-java:1.0.0&#39;</span>&#10;<span class="o">}</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Este ejemplo está hecho con la infraestructura que proporciona Spring pero el proceso de autenticación es igualmente implementable con cualquier otro <em>framework</em> o librería.</p>
<p>Muchos de los servicios populares en internet implementan 2FA como medida de proteger las cuentas de los usuarios y la información en esos servicios. Hay bancos que como contraseña de acceso solo tienen un número de seis dígitos con el riesgo que representa sus usuarios por la importancia que tiene la banca en línea de los datos que se trata.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Spring2FA">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/spring-security-two-factor-authentication-with-soft-token">Two Factor Auth with Spring Security</a></li>
<li><a href="https://www.baeldung.com/spring_redirect_after_login">Redirect to Different Pages after Login with Spring Security</a></li>
<li><a href="https://github.com/altfatterz/two-step-login/">Two Step Login Example</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/</id>
        <title>Comprobar la seguridad de un sitio web que use SSL/TLS</title>
        <updated>2019-06-23T12:00:00+02:00</updated>
        <published>2019-06-23T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Aunque un sitio web no trate datos sensibles como tarjetas de crédito o datos personales es muy recomendable que use el protocolo seguro HTTPS para proporcionar cifrado entre el servidor y el navegador del usuario para dotar de confidencialidad a las comunicaciones a la vez que evitar modificaciones por terceras personas de los datos transmitidos. Además, el buscador Google lo tiene en cuenta para el SEO o posicionamiento en su buscador.</p>
<p>Para usar HTTPS lo difícil era conseguir un certificado firmado por una autoridad de confianza que los navegadores tengan instalada, la obtención y renovación de un certificado tenía un coste. Desde hace un tiempo la autoridad <a href="https://letsencrypt.org/">Let’s encrypt</a> emite certificados digitales gratuitamente que proporciona uno en pocos minutos y de forma automatizada incluida la renovación para usar un protocolo seguro. <a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/">Usar un certificado de Let’s encrypt en el servidor web nginx</a> no es complicado.</p>
<p>Sin embargo, usar HTTPS simplemente no es suficiente y ha de configurarse el servidor web para que utilice algoritmos de cifrado fuertes y que no tengan problemas seguridad conocidos o hoy estén ya considerados débiles. Para analizar el nivel de seguridad proporcionado en las conexiones HTTPS de un servidor web se puede utilizar la herramienta <a href="https://www.ssllabs.com/">Qualys SSL Labs</a>. Por ejemplo, analizando la seguridad del protocolo HTTPS ofrecido por <a href="https://pages.github.com/">GitHub Pages</a> basta con introducir el dominio a analizar.</p>
<p>El informe que proporciona incluye información sobre el certificado del servidor entre ella su tiempo de validez y fecha de expiración, y si es de confianza para los navegadores y plataformas como Mozilla, Apple, Android, Java o Windows. Los datos de configuración como protocolos soportados, <em>cipher suites</em> y una simulación de <em>handshake</em> con una gran variedad de versiones de navegadores en diferentes plataformas y versiones incluyendo dispositivos móviles y de escritorio que permite conocer si algún dispositivo pudiera tener algún problema con la configuración de TLS en la conexión, también otros detalle del protocolo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/images/ssllabs_hu45897026cba3d1771fd184de0c40861a_124032_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Informe de seguridad TLS"><img src="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/images/ssllabs_hu45897026cba3d1771fd184de0c40861a_124032_650x450_fit_box_3.png" width="373" height="450" alt="Informe de seguridad TLS" title="Informe de seguridad TLS"  class="lozad "></a></p>
<figcaption>Informe de seguridad TLS</figcaption>
</figure>
</div>
<p>La herramienta proporciona una nota entre A y F siendo la A la mejor calificación posible. Como se observa en la captura para GitHub Pages la herramienta proporciona una calificación de A.</p>
<p>Hay múltiples combinaciones de algoritmos de cifrado o <em>cipher suites</em> usados en una conexión SSL/TLS. La primera parte de los siguientes se refieren a TLS, está el tamaño de la clave y el modo y el algoritmo de autenticación del mensaje. Algunas recomendaciones de uso es usar tamaños de clave de más de 128 bits, evitar usar RC4, DES y 3DES, preferir ECDHE y DHE ya que ofrecen <em>forward secrecy</em> que protege las comunicaciones pasadas aún habiéndose comprometida la clave privada del servidor.</p>
<ul>
<li>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_DHE_DSS_WITH_AES_256_CBC_SHA256</li>
<li>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_DHE_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_DHE_DSS_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</li>
</ul>
<p>Y algunas propiedades de los servidores web <a href="https://httpd.apache.org/">Apache HTTP</a> y <a href="https://nginx.org/">nginx</a> que afectan a los algoritmos de cifrado soportados son las siguientes. Algunos navegadores antiguos puede que no soporten los últimos algoritmos de cifrado por lo que hay que permitir en el servidor web unos que sean considerados como seguros pero que también soporten los navegadores de los usuarios del sitio web.</p>
<ul>
<li><a href="https://httpd.apache.org/docs/current/mod/mod_ssl.html">Apache Module mod_ssl</a></li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html">Nginx Module ngx_http_ssl_module</a></li>
</ul>
<p>Uan vez configurada la seguridad con TLS/SSL es recomendable <a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/">redirigir el tráfico del protocolo HTTP no seguro al protocolo HTTPS seguro</a>.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/autenticacion-mediante-clave-publica-y-privada-con-ssh/</id>
        <title>Autenticación mediante clave pública y privada con SSH</title>
        <updated>2019-05-03T20:00:00+02:00</updated>
        <published>2019-05-03T20:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/autenticacion-mediante-clave-publica-y-privada-con-ssh/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Una de las formas más comunes de autenticar a un usuario, comprobar que un usuario es quien dice ser, es mediante un usuario y contraseña. Contraseña que (en principio) solo conoce el usuario por lo que si este proporciona la correcta se determina que es quien dice ser. Sin embargo, las contraseñas son débiles si no incluyen letras en mayúsculas y minúsculas, números y símbolos pero también difíciles de recordar agravado porque en cada servicio se debería usar una diferente para impedir que ante el descubrimiento de una no sea posible acceder a todos los otros servicios donde se usase la misma.</p>
<p>Para generar contraseñas fuertes se puede usar <a href="https://strongpasswordgenerator.com/">Strong Password Generator</a> y para almacenarlas <a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">el programa KeePassXC</a>.</p>
<p>Con <a href="https://www.openssh.com/">OpenSSH</a> también se puede iniciar sesión de línea de comandos en otro sistema proporcionando un usuario y una contraseña que se solicitará. O mejor aún con una clave pública y privada sin necesidad de introducir una contraseña.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ssh ubuntu@192.168.33.10&#10;Welcome to Ubuntu 18.04.2 LTS <span class="o">(</span>GNU/Linux 4.15.0-48-generic x86_64<span class="o">)</span>&#10;&#10; * Documentation:  https://help.ubuntu.com&#10; * Management:&nbsp;&nbsp;&nbsp;&nbsp; https://landscape.canonical.com&#10; * Support:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;https://ubuntu.com/advantage&#10;&#10;  System information as of Fri May  <span class="m">3</span> 18:04:48 UTC <span class="m">2019</span>&#10;&#10;  System load:  0.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Processes:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">102</span>&#10;  Usage of /:   10.0% of 9.63GB   Users logged in:&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">1</span>&#10;  Memory usage: 6%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IP address <span class="k">for</span> enp0s3: 10.0.2.15&#10;  Swap usage:   0%&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IP address <span class="k">for</span> enp0s8: 192.168.33.10&#10;&#10;&#10;<span class="m">0</span> packages can be updated.&#10;<span class="m">0</span> updates are security updates.&#10;&#10;&#10;Last login: Fri May  <span class="m">3</span> 18:04:00 <span class="m">2019</span> from 192.168.33.1&#10;To run a <span class="nb">command</span> as administrator <span class="o">(</span>user <span class="s2">&#34;root&#34;</span><span class="o">)</span>, use <span class="s2">&#34;sudo &lt;command&gt;&#34;</span>.&#10;See <span class="s2">&#34;man sudo_root&#34;</span> <span class="k">for</span> details.&#10;&#10;ubuntu@ubuntu-bionic:~$&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/2019/05/autenticacion-mediante-clave-publica-y-privada-con-ssh/images/openssh_hua00e364d197fb1857da25b410a64f760_83550_2560x1440_fit_box_3.png" width="578" height="191" alt="OpenSSH" title="OpenSSH"  class="lozad "></p>
</figure>
</div>
<p>Usar SSH es más seguro y más cómodo que usar contraseñas para realizar la autenticación, es más seguro ya que una clave pública y privada son más largas y es más cómodo ya que no se solicita contraseña constantemente que de otra manera al cabo de un tiempo se convierte en un paso tedioso y molesto. Lo primero que hay que hacer es <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">generar una clave SSH pública y privada</a> propia. Una clave de 2048 bits ya se considera segura pero como cuesta lo mismo generar una de más bits se puede generar una de 8192 bits para más seguridad.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl genrsa -out ubuntu <span class="m">8192</span>&#10;$ ssh-keygen -y -f ubuntu &gt; ubuntu.pub&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-keygen.sh</span>
    </div>
</div>
<p>En el servidor SSH se deben modificar algunas propiedades de configuración del archivo de configuración <em>/etc/ssh/sshd_config</em> para permitir la autenticación con usuario y contraseña para poder copiar la clave pública y una vez copiada la clave para mayor seguridad no permitir la autenticación mediante usuario y contraseña.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain">PasswordAuthentication yes&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sshd_config</span>
    </div>
</div>
<p>Una vez generado el par de claves hay que copiar la clave pública al servidor donde se desee iniciar sesión. Manualmente concatenando la clave pública al archivo <em>.ssh/authorized_keys</em> del directorio <em>home</em> del usuario con el que se quiere iniciar sesión o también se puede copiar la clave pública usando el comando <em>ssh-copy-id</em>. Para revocar el acceso mediante esa clave basta con eliminar su linea del archivo de claves autorizadas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ssh-copy-id -i ~/.ssh/ubuntu ubuntu@192.168.33.10&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-copy-id.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo passwd ubuntu&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>passwd.sh</span>
    </div>
</div>
<p>Si se poseen varios pares de claves públicas y privadas se puede especificar que clave privada usar para cada máquina a la que se desee conectar en el archivo <em>~/.ssh/config</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">Host</span> <span class="n">192</span><span class="o">.</span><span class="na">168</span><span class="o">.</span><span class="na">33</span><span class="o">.</span><span class="na">10</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HostName</span> <span class="n">192</span><span class="o">.</span><span class="na">168</span><span class="o">.</span><span class="na">33</span><span class="o">.</span><span class="na">10</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">User</span> <span class="n">ubuntu</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">IdentityFile</span> <span class="o">~/.</span><span class="na">ssh</span><span class="o">/</span><span class="n">ubuntu</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ssh-config</span>
    </div>
</div>
<p>La clave privada debe tener permisos restringidos sino se muestra una advertencia e impide el inicio de sesión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">$</span> <span class="n">chmod</span> <span class="n">600</span> <span class="n">ubuntu</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>chmod.sh</span>
    </div>
</div>
<p>Para probar la autenticación con SSH se puede utilizar una máquina virtual de <a href="https://www.virtualbox.org/">VirtualBox</a> creada con <a href="https://www.vagrantup.com/">Vagrant</a>. En el caso de utilizar el usuario <em>ubuntu</em> hay que asignarle una clave con el comando <em>passwd</em> para ejecutar comando <em>ssh-copy-id</em> ya que se solicita su contraseña en este paso, una vez realizado se puede desactivar la autenticación mediante usuario y contraseña cambiando el valor de la configuración <em>PasswordAuthentication</em> a <em>no</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"># -*- mode: ruby -*-&#10;# vi: set ft=ruby :&#10;&#10;Vagrant.configure(&#34;2&#34;) do |config|&#10;  config.vm.box = &#34;ubuntu/bionic64&#34;&#10;&#10;  config.vm.provider :virtualbox do |vb|&#10;&nbsp;&nbsp;&nbsp;&nbsp;vb.name = &#34;Ubuntu 18.04 (Vagrant)&#34;&#10;  end&#10;&#10;  config.vm.network &#34;private_network&#34;, ip: &#34;192.168.33.10&#34;&#10;&#10;  config.vm.provider &#34;virtualbox&#34; do |vb|&#10;&nbsp;&nbsp;&nbsp;&nbsp;vb.memory = &#34;2048&#34;&#10;  end&#10;end</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Vagrantfile</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vagrant up&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant.sh</span>
    </div>
</div>
<p>Para mayor seguridad en caso de que la clave publica y privada sean comprometidas es posible <a href="https://picodotdev.github.io/blog-bitix/2021/03/autenticacion-con-segundo-factor-de-autenticacion-en-ssh/">configurar un segundo factor de autenticación con SSH</a> que adicionalmente a la clave privada pide un <a href="https://picodotdev.github.io/blog-bitix/2020/11/que-es-por-que-y-como-activar-un-segundo-factor-de-autenticacion-en-google-amazon-paypal-y-otros-servicios/">segundo factor de autenticación generado con la aplicación Google Authenticator o con KeePassXC</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://askubuntu.com/questions/30788/does-ssh-key-need-to-be-named-id-rsa#30792">Does ssh key need to be named id_rsa?</a></li>
<li><a href="http://stackoverflow.com/questions/3466626/add-private-key-permanently-with-ssh-add-on-ubuntu">How to permanently add a private key with ssh-add on Ubuntu?</a></li>
<li><a href="http://stackoverflow.com/questions/112396/how-do-i-remove-the-passphrase-for-the-ssh-key-without-having-to-create-a-new-ke">How do I remove the passphrase for the SSH key without having to create a new key?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/</id>
        <title>Aumentar el tamaño del identificativo de la cookie de sesión de Tomcat o Spring Session</title>
        <updated>2019-04-12T19:00:00+02:00</updated>
        <published>2019-04-12T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/tomcat.svg" width="200" height="133" alt="Tomcat" title="Tomcat"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring-boot.svg" width="200" height="166" alt="Spring Boot" title="Spring Boot"  class=""></p>
</div>
<p>El protocolo HTTP es un protocolo sin estado que quiere decir que entre las peticiones no se comparte estado ni se recuerda ningún dato. Por otro lado las <em>cookies</em> es pequeño conjunto de datos que son almacenados en el cliente y son enviados en cada petición que se hace a un sitio web, cada sitio web mantiene su propia colección de <em>cookies</em>, dos sitios distintos no comparten sus <em>cookies</em>. Para mantener estado entre dos peticiones se hace uso de las <em>cookies</em>.</p>
<p>En Java los servidores web envían al cliente una <em>cookie</em> con simplemente un identificativo de la sesión, el estado se suele mantener en el servidor en memoria, en almacenamiento de disco o <a href="https://picodotdev.github.io/blog-bitix/2015/03/datos-de-sesion-externalizados-con-spring-session/">persistido en una base de datos como Redis</a>. El identificativo de la sesión por defecto usando un contenedor de <em>servlets</em> como <a href="https://tomcat.apache.org/">Tomcat</a> tiene una longitud de 16 bytes que codificados en hexadecimal da lugar a 32 caracteres o 128 bits. Para aumentar la seguridad por si alguien intenta adivinar el identificativo de cualquier usuario que tenga sesión iniciada por fuerza bruta de casualidad es posible aumentar el número de caracteres para identificar la <em>cookie</em> de sesión. La clase de la API que lo permite en Tomcat es <a href="https://tomcat.apache.org/tomcat-9.0-doc/config/manager.html">Manager</a>.</p>
<p>Según <a href="https://www.owasp.org/index.php/Insufficient_Session-ID_Length">Insufficient Session-ID Length</a> un identificativo con solo 64 bits (32 de entropía) un atacante haciendo 1000 intentos por segundo y 10000 sesiones válidas tarda solo 7,15 minutos en obtener una sesión válida (32 bit = 4294967296 / 10.000 = 429496, a 1000 intentos por segundo da 429 segundos o 7,15 minutos). Con 128 bits el tiempo crece a 292 años haciendo 10000 intentos por segundo y teniendo 100000 sesiones válidas, pero podría reducirse si el número de intentos por segundo aumentase o sesiones aumentase.</p>
<p>Los datos se guardan en el servidor y la <em>cookie</em> con el identicativo de sesión no ocupa mucho aún pasando de 32 caracteres hexadecimales a una cifra mayor como 128, el número de caracteres no es significativo para el rendimiento pero se dificulta en varios órdenes de magnitud la dificultad de adivinar una <em>cookie</em>.</p>
<p>Usando <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> y <em>Tomcat</em> basta con usar la clase <em>Manager</em> para cambiar el valor por defecto de longitud de la sesión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.springsession</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@ComponentScan</span><span class="o">(</span><span class="s">&#34;io.github.picodotdev.springsession&#34;</span><span class="o">)</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">SESSION_ID_LENGTH</span> <span class="o">=</span> <span class="n">64</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Bean</span>&#10;	<span class="kd">public</span> <span class="n">WebServerFactoryCustomizer</span><span class="o">&lt;</span><span class="n">TomcatServletWebServerFactory</span><span class="o">&gt;</span> <span class="nf">cookieProcessorCustomizer</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="o">(</span><span class="n">TomcatServletWebServerFactory</span> <span class="n">factory</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;			<span class="n">factory</span><span class="o">.</span><span class="na">addContextCustomizers</span><span class="o">((</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;				<span class="k">if</span> <span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getManager</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;					<span class="n">context</span><span class="o">.</span><span class="na">setManager</span><span class="o">(</span><span class="k">new</span> <span class="n">StandardManager</span><span class="o">());</span>&#10;				<span class="o">}</span>&#10;				<span class="n">context</span><span class="o">.</span><span class="na">getManager</span><span class="o">().</span><span class="na">getSessionIdGenerator</span><span class="o">().</span><span class="na">setSessionIdLength</span><span class="o">(</span><span class="n">SESSION_ID_LENGTH</span><span class="o">);</span>&#10;			<span class="o">});</span>&#10;		<span class="o">};</span>&#10;	<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">...</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-1.java</span>
    </div>
</div>
<p>Persistiendo la sesión en <a href="https://redis.io/">Redis</a> con <a href="https://projects.spring.io/spring-session/">Spring Sesion</a> por defecto el identificativo de la sesión es generado a partir de un <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/UUID.html">UUID</a>, el identificativo de la sesión tiene el mismo valor por defecto de 128 bits pero para cambiar la longitud hay que proporcionar una clase que cambia el comportamiento.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.springsession</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableRedisHttpSession</span>&#10;<span class="nd">@ComponentScan</span><span class="o">(</span><span class="s">&#34;io.github.picodotdev.springsession&#34;</span><span class="o">)</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">SESSION_ID_LENGTH</span> <span class="o">=</span> <span class="n">64</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Bean</span>&#10;	<span class="kd">public</span> <span class="n">DefaultCookieSerializer</span> <span class="nf">cookieSerializer</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">DefaultCookieSerializer</span> <span class="n">cookieSerializer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultCookieSerializer</span><span class="o">();</span>&#10;		<span class="n">cookieSerializer</span><span class="o">.</span><span class="na">setUseBase64Encoding</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;		<span class="k">return</span> <span class="n">cookieSerializer</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Bean</span>&#10;	<span class="nd">@Primary</span>&#10;	<span class="kd">public</span> <span class="n">RedisOperationsSessionRepository</span> <span class="nf">defaultSessionRepository</span><span class="o">(</span><span class="n">RedisOperations</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">sessionRedisOperations</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="k">new</span> <span class="n">DefaultRedisOperationSessionRespository</span><span class="o">(</span><span class="n">sessionRedisOperations</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-2.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">org.springframework.session.data.redis</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultRedisOperationSessionRespository</span> <span class="kd">extends</span> <span class="n">RedisOperationsSessionRepository</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">HEX_CHARACTERS</span> <span class="o">=</span> <span class="s">&#34;0123456789ABCDEF&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">MAX_INACTIVE_INTERVAL_MINUTES</span> <span class="o">=</span> <span class="n">30</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">SESSION_ID_LENGTH</span> <span class="o">=</span> <span class="n">127</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">SecureRandom</span> <span class="n">randomGenerator</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">DefaultRedisOperationSessionRespository</span><span class="o">(</span><span class="n">RedisOperations</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">sessionRedisOperations</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">super</span><span class="o">(</span><span class="n">sessionRedisOperations</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">RedisOperationsSessionRepository</span><span class="o">.</span><span class="na">RedisSession</span> <span class="nf">createSession</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">randomGenerator</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">randomGenerator</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SecureRandom</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">byte</span><span class="o">[]</span> <span class="n">bytes</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="n">SESSION_ID_LENGTH</span><span class="o">];</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">randomGenerator</span><span class="o">.</span><span class="na">nextBytes</span><span class="o">(</span><span class="n">bytes</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">getHex</span><span class="o">(</span><span class="n">bytes</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">RedisOperationsSessionRepository</span><span class="o">.</span><span class="na">RedisSession</span> <span class="n">redisSession</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RedisOperationsSessionRepository</span><span class="o">.</span><span class="na">RedisSession</span><span class="o">(</span><span class="k">new</span> <span class="n">MapSession</span><span class="o">(</span><span class="n">id</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">redisSession</span><span class="o">.</span><span class="na">setMaxInactiveInterval</span><span class="o">(</span><span class="n">Duration</span><span class="o">.</span><span class="na">ofMinutes</span><span class="o">(</span><span class="n">MAX_INACTIVE_INTERVAL_MINUTES</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">redisSession</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getHex</span><span class="o">(</span><span class="kt">byte</span> <span class="o">[]</span> <span class="n">bytes</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">bytes</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">StringBuilder</span> <span class="n">hex</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">(</span> <span class="n">2</span> <span class="o">*</span> <span class="n">bytes</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">for</span> <span class="o">(</span><span class="kt">byte</span> <span class="n">b</span> <span class="o">:</span> <span class="n">bytes</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">hex</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">HEX_CHARACTERS</span><span class="o">.</span><span class="na">charAt</span><span class="o">((</span><span class="n">b</span> <span class="o">&amp;</span> <span class="n">0xF0</span><span class="o">)</span> <span class="o">&gt;&gt;</span> <span class="n">4</span><span class="o">)).</span><span class="na">append</span><span class="o">(</span><span class="n">HEX_CHARACTERS</span><span class="o">.</span><span class="na">charAt</span><span class="o">((</span><span class="n">b</span> <span class="o">&amp;</span> <span class="n">0x0F</span><span class="o">)));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">hex</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultRedisOperationSessionRespository.java</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/images/spring-session_hu753693623e6b310d1a7f380031e464c8_72218_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Longitud del identificativo de sesión de 64 bytes o 128 caracteres hexadecimales"><img src="https://picodotdev.github.io/blog-bitix/2019/04/aumentar-el-tamano-del-identificativo-de-la-cookie-de-sesion-de-tomcat-o-spring-session/images/spring-session_hu753693623e6b310d1a7f380031e464c8_72218_600x450_fit_box_3.png" width="600" height="229" alt="Longitud del identificativo de sesión de 64 bytes o 128 caracteres hexadecimales" title="Longitud del identificativo de sesión de 64 bytes o 128 caracteres hexadecimales"  class="lozad "></a></p>
<figcaption>Longitud del identificativo de sesión de 64 bytes o 128 caracteres hexadecimales</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">D2C631033F477F9A3111F40CFDBB83DA041BC7EB4C7CD3F824349945E9CA73E660FE3E0D4DC75A685E9255F7F3C538AC1CE07ED055547CA379BA2CB7B8A52516</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>session-id.txt</span>
    </div>
</div>
<p>Un libro dedicado a la seguridad muy bueno que he leído es <a href="https://amzn.to/2DeAdi1">Iron-Clad Java Applications</a>, tiene montón de detalles dedicados a la seguridad de las aplicaciones web sean seguras, incluido como este dedicado a la longitud de los identificativos de la sesión.</p>
<p>Una clave asimétrica considerada segura puedes ser de 2048 bits pero se puede <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">generar una de hasta 8192 bits</a> con el mismo esfuerzo lo que aumenta la seguridad de forma exponencial ante un ataque de fuerza bruta que con el aumento de la capacidad de cómputo y en el futuro puede ser viable. El tiempo de cómputo requerido por usar una clave de mayor tamaño no creo que sea significativo para la mayoría de los casos pero igualmente la seguridad aumenta.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringSession">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://stackoverflow.com/questions/35062780/how-to-change-the-session-id-length-in-spring-boot">How to change the session id length in Spring Boot</a></li>
<li><a href="https://github.com/spring-projects/spring-session/pull/204">Spring Session, Allow for configuration of session id generation and format</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/</id>
        <title>Las contraseñas e información sensible en el código fuente o bytecode de Java no son seguras</title>
        <updated>2019-01-05T13:00:00+01:00</updated>
        <published>2019-01-04T19:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En Java el código fuente se compila a una representación en <em>bytecode</em> independiente de la arquitectura del procesador y sistema operativo donde posteriormente se ejecuta. Este <em>bytecode</em> es un formato binario pero que puede ser descompilado fácilmente con la herramienta <em>javap</em> incluida en el propio JDK o examinado su contenido simplemente con un editor de texto hexadecimal. Con estas herramientas es fácil ver las instrucciones del programa para la máquina virtual y los caracteres de las cadenas que fueron incluidas en el código fuente.</p>
<p>Lógicamente, de este modo <em>hardcodear</em> una contraseña en el código fuente hace que el código fuente sea inseguro pero es que incluso distribuir el binario compilado no es seguro ya que cualquier usuario que tenga acceso al binario de la aplicación es potencialmente capaz de recuperar la contraseña, tener acceso al binario quizá no sea sencillo pero aparte de eso no hay ninguna medida de seguridad adicional que añada más dificultad. Quien dice contraseña dice igualmente una clave privada de cifrado simétrico usada para cifrar o descifrar datos o un <em>bearer token</em> de OAuth. En definitiva es un problema de seguridad.</p>
<p>Compilado el programa y utilizando la herramienta <em>javap</em> se puede obtener el valor de la contraseña. ¿Adivinas cual es la contraseña en este archivo binario de <em>bytecode</em> examinado el contenido?</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/images/java-class-hex_hucc38684a2f2e126dcaa28adc7d18c1d8_94339_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Contenido hexadecimal de un archivo binario de bytecode Java"><img src="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/images/java-class-hex_hucc38684a2f2e126dcaa28adc7d18c1d8_94339_300x200_fit_box_3.png" width="284" height="200" alt="Contenido hexadecimal de un archivo binario de bytecode Java" title="Contenido hexadecimal de un archivo binario de bytecode Java"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/images/c-bin-hex_huba456bb72be79b51d2898e9d10ffeae8_61110_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Contenido hexadecimal de un archivo binario de C"><img src="https://picodotdev.github.io/blog-bitix/2019/01/las-contrasenas-e-informacion-sensible-en-el-codigo-fuente-o-bytecode-de-java-no-son-seguras/images/c-bin-hex_huba456bb72be79b51d2898e9d10ffeae8_61110_300x200_fit_box_3.png" width="284" height="200" alt="Contenido hexadecimal de un archivo binario de C" title="Contenido hexadecimal de un archivo binario de C"  class="lozad "></a></p>
<figcaption>Contenido hexadecimal de un archivo binario de bytecode Java y C</figcaption>
</figure>
</div>
<p>El siguiente ejemplo sencillo de un programa Java incluye una cadena con una supuesta contraseña. Se observa que en el archivo visualizado en formato hexadecimal o descompilado los caracteres de la cadena son fácilmente reconocibles.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">password</span> <span class="o">=</span> <span class="s">&#34;Mz6K3P9rDZ7G6wH&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>Para compilar este pequeño programa se utiliza el comando <em>javac</em> que genera el archivo de <em>bytecode</em> <em>Main.class</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ javac Main.java&#10;$ xxd Main.class&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>javac.sh</span>
    </div>
</div>
<p>Para decompilar este pequeño programa se utiliza el comando <em>javap</em>, con él se ven las instrucciones interpretadas por la máquina virtual de Java y la cadena con la contraseña.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ javap -c Main.class&#10;Compiled from <span class="s2">&#34;Main.java&#34;</span>&#10;public class Main <span class="o">{</span>&#10;  public Main<span class="o">()</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Code:&#10;&nbsp;&nbsp;&nbsp;&nbsp;   0: aload_0&#10;&nbsp;&nbsp;&nbsp;&nbsp;   1: invokespecial <span class="c1">#1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // Method java/lang/Object.&#34;&lt;init&gt;&#34;:()V</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   4: <span class="k">return</span>&#10;&#10;  public static void main<span class="o">(</span>java.lang.String<span class="o">[])</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Code:&#10;&nbsp;&nbsp;&nbsp;&nbsp;   0: ldc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="c1">#2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // String Mz6K3P9rDZ7G6wH</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   2: astore_1&#10;&nbsp;&nbsp;&nbsp;&nbsp;   3: getstatic&nbsp;&nbsp;&nbsp;&nbsp; <span class="c1">#3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // Field java/lang/System.out:Ljava/io/PrintStream;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   6: ldc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="c1">#4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // String Hello World!</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   8: invokevirtual <span class="c1">#5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  // Method java/io/PrintStream.println:(Ljava/lang/String;)V</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  11: <span class="k">return</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>javap.sh</span>
    </div>
</div>
<p>Que el contenido de la constante de las cadenas del programa sea incluido en el binario y examinable con un editor hexadecimal no es exclusivo de Java, en otros lenguajes de programación como C y formatos de ejecutables como ELF para Linux se da el mismo caso al examinar el binario como se observa en las imágenes anteriores. Seguramente en la mayoría de lenguajes, como C#, ocurra lo mismo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-C" data-lang="C"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">&#10;</span><span class="cp"></span>&#10;<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>&#10;<span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">password</span> <span class="o">=</span> <span class="s">&#34;Mz6K3P9rDZ7G6wH&#34;</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">printf</span><span class="p">(</span><span class="s">&#34;Hello World!&#34;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.c</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ gcc Main.c -o Main&#10;$ xxd Main&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gcc.sh</span>
    </div>
</div>
<p>Una solución para evitar este problema de seguridad es <a href="https://picodotdev.github.io/blog-bitix/2018/09/almacenar-cifrados-los-valores-de-configuracion-sensibles-en-spring-cloud-config/">ubicar la contraseña a un archivo de configuración incluso con los valores sensibles cifrados</a> y que sean descifrados únicamente por la aplicación en el momento de iniciarse. En el caso de ubicar este archivo de configuración en un servidor se puede proteger mediante permisos para que solo los administradores o algunos desarrolladores tenga acceso a él y no cualquier usuario que consiga acceso al sistema.</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/</id>
        <title>Explicación del fallo de seguridad Meltdown y Spectre en los microprocesadores Intel</title>
        <updated>2018-01-07T01:30:00+01:00</updated>
        <published>2018-01-06T10:30:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2018/01/explicacion-del-fallo-de-seguridad-meltdown-y-spectre-en-los-microprocesadores-intel/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los procesadores Intel se han visto afectados por un grave error de seguridad debido a que fueron diseñados con ejecución especulativa sin tener algunas consideraciones de seguridad, técnica empleada para aumentar el rendimiento pero que tiene efectos colaterales en la cache que pueden se aprovechados para realizar ataques <em>side-channel</em> con los que leer el contenido de la memoria del <em>kernel</em>, independientemente del sistema operativo utilizado.</strong></p>]]>
        <![CDATA[<p>El año 2018 ha empezando haciéndose público uno de los peores <em>bugs</em> de seguridad que afecta a absolutamente todos los procesadores <a href="https://www.intel.es">Intel</a> que esta compañía ha fabricado en la última década, denominado <a href="https://meltdownattack.com/"><em>Meltdown</em> y su variante <em>Spectre</em></a>, el error tiene su propio nombre, logotipo y página web. Un error de diseño en los procesadores que solo se puede corregir reemplazando el microprocesador o modificando los sistemas operativos aunque se especula con una pérdida de rendimiento en ciertas cargas de trabajo, entre un 5% y un 30%. El error es tan grave que permite leer a un programa la memoria del núcleo del sistema operativo que debería estar protegida. En la memoria del <em>kernel</em> residen las claves de acceso a sistemas o datos sensibles que obtenidos y utilizados pueden ocasionar graves problemas de seguridad con consecuencias económicas o de acceso no autorizado a información. Este error es tan grave que deja al viejo conocido <a href="https://en.wikipedia.org/wiki/Pentium_FDIV_bug">fallo de la división de los Pentium</a> a la altura de chiste. Hace unos meses por si fuera poco se conocía otro error de seguridad en el <a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">Management Engine (ME)</a> de Intel.</p>
<ul>
<li><a href="https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00088&amp;languageid=en-fr">Listado de procesadores Intel afectados por Meltdown y Spectre</a></li>
</ul>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/meltdown.svg" width="200" height="200" alt="Meltdown" title="Meltdown"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spectre.svg" width="200" height="200" alt="Spectre" title="Spectre"  class="lozad "></p>
<figcaption>Logotipos de Meltdown y Spectre</figcaption>
</figure>
</div>
<p>Reemplazar todos los microprocesadores es tremendamente caro además de que primero hay que diseñar y fabricar unos que estén exentos del <em>bug</em> que lleva tiempo, meses o años hasta que estén preparados, por lo que la solución hasta el momento pasa por hacer modificaciones en el software y en los sistemas operativos, compiladores y programas para resolver o mitigar el problema. En el sistema operativo la solución consiste en separar el espacio de direcciones del <em>kernel</em> de la de los programas, sin embargo, cada vez que el microprocesador cambia entre un espacio de direcciones a otro hay una penalización en tiempo por lo que en ciertas cargas de trabajo muy intensivas en las que se cambia frecuentemente de contextos como operaciones de red, de almacenamiento rápido o E/S el rendimiento se ve afectado. Para un usuario doméstico, ofimático o juegos la perdida de rendimiento será insignificante y no será apreciable ya que en estos casos el microprocesador no trabaja a la máxima carga o no está cambiando frecuentemente del espacio de direcciones del <em>kernel</em> al de usuario. En grandes centros de datos como la computación en la nube de <a href="https://aws.amazon.com/es/">Amazon Web Services</a>, <a href="https://cloud.google.com/">Google Cloud Platform</a> o <a href="https://azure.microsoft.com/es-es/">Microsoft Azure</a> el rendimiento será más apreciable.</p>
<p>Como usuarios domésticos para estar protegidos conviene descargar únicamente software de fuentes confiables pero para los usuarios empresariales con sus servicios en la nube en donde los sistemas están aislados pero usando infraestructura compartida y con el descubrimiento de este <em>bug</em> es más grave si no se parchea, los proveedores de infraestructura en la nube ya han planificando tareas de mantenimiento y reinicios obligatorios.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/intel.svg" width="200" height="200" alt="Intel" title="Intel"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/amd.svg" width="200" height="200" alt="AMD" title="AMD"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/arm.svg" width="200" height="200" alt="ARM" title="ARM"  class="lozad "></p>
</figure>
</div>
<h3 id="técnicas-para-aumentar-el-rendimiento">Técnicas para aumentar el rendimiento</h3>
<p>Los microprocesadores modernos implementan varias técnicas para aumentar el rendimiento. Una de las mas simples es aumentar la frecuencia de trabajo del microprocesador, uno de los primeros Pentium trabajaba únicamente a 100 Mhz y los actuales llegan hasta los 3 Ghz, casi 30 veces más. Pero aumentar la frecuencia solo es posible hasta cierto límite a partir del cual el microprocesador se calienta mucho y consume mucha energía. Por lo que hay que emplear otras técnicas al mismo tiempo.</p>
<p>Otra de las mas simples es reducir el tamaño de los transistores, unos transistores más pequeños hace que sea posible incluir más transistores en el mismo espacio físico para incluir caches de mayor tamaño o nuevas funcionalidades, con más velocidad y con menor consumo de energía. El tamaño de los transistores de los Pentium originales era de 800 nanómetros e incluía 3.1 millones, los Intel Core de octava generación se fabrican a 14 nanómetros incluyendo unos 5000 millones, unas 60 veces más pequeños. Aún así cada vez es más difícil cumplir con la <a href="https://es.wikipedia.org/wiki/Ley_de_Moore">ley de Moore</a> ya que se está llegando a límite físico de los átomos de los materiales, consistía en que cada dos años se duplica el número de transistores de un microprocesador.</p>
<p>Con la ayuda de unos transistores más pequeños y más espacio se aprovecha para aumentar el rendimiento incluyendo más núcleos de cómputo. Pero para aumentar el rendimiento de un núcleo de cómputo individual o el <abbr title="Instructions Per Cicle">IPC</abbr> se emplean otras técnicas como utilizar múltiples <em>pipelines</em> para ejecutar varias instrucciones simultáneamente, ejecución fuera de orden para reorganizar las instrucciones y la ejecución especulativa para mantener llenos esos <em>pipelines</em>.</p>
<h3 id="escalar">Escalar</h3>
<p>En un microprocesador escalar se ejecuta una instrucción por ciclo, por ejemplo, en esta secuencia de instrucciones que realizan unas sumas se tardarían 6 ciclos de reloj. A estos microprocesadores que ejecutan una instrucción por ciclo de reloj se les denomina escalares, siendo ejemplos el Intel 486 y el ARM1176 usado en la Raspberry Pi 1.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">m</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>&#10;<span class="n">n</span> <span class="o">=</span> <span class="n">c</span><span class="o">+</span><span class="n">d</span>&#10;<span class="n">o</span> <span class="o">=</span> <span class="n">d</span><span class="o">+</span><span class="n">e</span>&#10;<span class="n">x</span> <span class="o">=</span> <span class="n">f</span><span class="o">+</span><span class="n">o</span>&#10;<span class="n">y</span> <span class="o">=</span> <span class="n">h</span><span class="o">+</span><span class="n">i</span>&#10;<span class="n">z</span> <span class="o">=</span> <span class="n">j</span><span class="o">+</span><span class="n">k</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>escalar.py</span>
    </div>
</div>
<h3 id="superescalar">Superescalar</h3>
<p>En un microprocesador con dos <em>pipelines</em> o <a href="https://en.wikipedia.org/wiki/Superscalar_processor">superescalar</a> se pueden realizar varias operaciones simultáneamente, es decir, mientras se realiza la primera operación en la variable <em>m</em> se realiza al mismo tiempo la segunda operación de <em>n</em>, con lo que estas operaciones podrían completarse en únicamente tres ciclos de reloj con la siguiente equivalencia de programa. Ejemplos de microprocesadores superescalares son el Intel Pentium y los <a href="https://www.arm.com/">ARM</a> Cortex-A7 y Cortex-A53 estos últimos usados en la Raspberry Pi 2 y 3 respectivamente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">+</span><span class="n">d</span>&#10;<span class="n">o</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">,</span> <span class="n">f</span><span class="o">+</span><span class="n">o</span>&#10;<span class="n">y</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="n">h</span><span class="o">+</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="n">k</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>superescalar-1.py</span>
    </div>
</div>
<p>Sin embargo, hacer la suma de <em>o</em> y <em>x</em> al mismo tiempo no es posible ya que antes de calcular <em>x</em> hay que calcular <em>o</em> debido a que uno de los operandos en la suma de <em>x</em> es <em>o</em>, es decir, hay una dependencia en estas instrucciones y se han de ejecutar una después de otra. Con lo que en vez de tres ciclos habría que conformase en ejecutar estas instrucciones en cuatro ciclos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">+</span><span class="n">d</span> &#10;<span class="n">o</span> <span class="o">=</span> <span class="n">d</span><span class="o">+</span><span class="n">e</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="c1"># el segundo pipeline está ocioso</span>&#10;<span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">f</span><span class="o">+</span><span class="n">o</span><span class="p">,</span> <span class="n">h</span><span class="o">+</span><span class="n">i</span> &#10;<span class="n">z</span> <span class="o">=</span> <span class="n">j</span><span class="o">+</span><span class="n">k</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="c1"># el segundo pipeline está ocioso</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>suprescalar-2.py</span>
    </div>
</div>
<h3 id="fuera-de-orden">Fuera de orden</h3>
<p>Los microprocesadores <a href="https://en.wikipedia.org/wiki/Out-of-order_execution">fuera de orden</a> reordenan las instrucciones de la forma adecuada para que el programa sea equivalente pero manteniendo los <em>pipelines</em> llenos. Cambiando el orden entre las instrucciones <em>x</em> e <em>y</em> se consigue ejecutar las instrucciones en tres ciclos de reloj. Ejemplos de microprocesadores fuera de orden son el Pentium 2 y siguientes microprocesadores Intel y <a href="https://www.amd.com/es">AMD</a> incluyendo varios ARM Cortex-A9, A15, A17 y A57.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">m</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="o">+</span><span class="n">d</span>&#10;<span class="n">o</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">,</span> <span class="n">h</span><span class="o">+</span><span class="n">i</span>&#10;<span class="n">x</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="n">f</span><span class="o">+</span><span class="n">o</span><span class="p">,</span> <span class="n">j</span><span class="o">+</span><span class="n">k</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>fuera-de-orden.py</span>
    </div>
</div>
<h3 id="predicción-de-salto-y-ejecución-especulativa">Predicción de salto y ejecución especulativa</h3>
<p>Los programas incluyen saltos con sentencias condicionales <em>if</em> o de bucle. Los microprocesadores tratan de adivinar si una sentencia de salto se producirá o no (con heurísticas y son bastante buenos acertando) para recuperar y tener preparadas las siguientes instrucciones. Mantener los <em>pipelines</em> llenos es difícil al aumentar su número a tres o cuatro. Para tratar de mantenerlos llenos los microprocesadores usan la predicción de salto y van ejecutando las instrucciones desechando las operaciones si finalmente no se acierta en el salto pero habiendo aumentado el rendimiento si se ha acertado, realizan <a href="https://en.wikipedia.org/wiki/Speculative_execution">ejecución especulativa</a> de las instrucciones.</p>
<p>En este otro caso, <em>v</em> depende de <em>u</em> y <em>u</em> depende de <em>t</em> de modo que un microprocesador superescalar sin ejecución especulativa tardará tres ciclos computando <em>t</em>, <em>u</em> y <em>v</em> para determinar el valor de <em>v</em> en la sentencia condicional <em>if</em> (en otro ciclo) momento en que pasa otros tres ciclos calculando <em>w</em>, <em>x</em> e <em>y</em>, en total 4 o 7 ciclos dependiendo de si hay salto en la sentencia condicional.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">t</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>&#10;<span class="n">u</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span>&#10;<span class="n">v</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span>&#10;<span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;   <span class="n">w</span> <span class="o">=</span> <span class="n">e</span><span class="o">+</span><span class="n">f</span>&#10;   <span class="n">x</span> <span class="o">=</span> <span class="n">w</span><span class="o">+</span><span class="n">g</span>&#10;   <span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="o">+</span><span class="n">h</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ejecucion-especulativa-1.py</span>
    </div>
</div>
<p>Si el predictor de salto determina que es probable que la condición sea cierta la ejecución especulativa reordena el programa de la siguiente manera:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">t</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>&#10;<span class="n">u</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span>&#10;<span class="n">v</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span>&#10;<span class="n">w_</span> <span class="o">=</span> <span class="n">e</span><span class="o">+</span><span class="n">f</span>&#10;<span class="n">x_</span> <span class="o">=</span> <span class="n">w_</span><span class="o">+</span><span class="n">g</span>&#10;<span class="n">y_</span> <span class="o">=</span> <span class="n">x_</span><span class="o">+</span><span class="n">h</span>&#10;<span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;   <span class="n">w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">w_</span><span class="p">,</span> <span class="n">x_</span><span class="p">,</span> <span class="n">y_</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ejecucion-especulativa-2.py</span>
    </div>
</div>
<p>Y con la ejecución superescalar se mantiene los <em>pipelines</em> ocupados de modo que el ejemplo tiene la siguiente equivalencia y tardando aproximadamente 3 ciclos cuando antes se necesitaban 7.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">t</span><span class="p">,</span> <span class="n">w_</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">e</span><span class="o">+</span><span class="n">f</span>&#10;<span class="n">u</span><span class="p">,</span> <span class="n">x_</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span><span class="p">,</span> <span class="n">w_</span><span class="o">+</span><span class="n">g</span>&#10;<span class="n">v</span><span class="p">,</span> <span class="n">y_</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span><span class="p">,</span> <span class="n">x_</span><span class="o">+</span><span class="n">h</span>&#10;<span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;   <span class="n">w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">w_</span><span class="p">,</span> <span class="n">x_</span><span class="p">,</span> <span class="n">y_</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ejecucion-especulativa-3.py</span>
    </div>
</div>
<h3 id="cache">Cache</h3>
<p>Los microprocesadores son muy rápidos comparados con la memoria o el acceso al almacenamiento secundario. Un Cortex-A53 de una Raspberry Pi puede ejecutar una instrucción en 0.5 nanosegundos pero el acceso a memoria costar 100 nanosegundos. Esto no es bueno pero por fortuna los accesos a memoria siguen patrones, accediendo repetidamente a variables recientemente accedidas y accediendo a variables en posiciones cercanas, de forma que colocando estas variables en una cache más rápida y cercana al procesador que la memoria principal se mitiga en gran medida el problema.</p>
<h3 id="relación-entre-ejecución-especulativa-cache-y-_meltdown_-y-_spectre_">Relación entre ejecución especulativa, cache y <em>Meltdown</em> y <em>Spectre</em></h3>
<p>La ejecución especulativa tiene el efecto colateral de colocar datos en la memoria cache del microprocesador y esto es utilizado para realizar una forma de <a href="https://en.wikipedia.org/wiki/Side-channel_attack">ataque side-channel</a>. Desde el punto de vista de <em>Meltdown</em> y <em>Spectre</em> y la ejecución especulativa lo importante es que midiendo el tiempo que tarda el acceso a memoria se puede conocer si el dato está en la cache (tarda poco) o no (tarda mucho).</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">t</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span>&#10;<span class="n">u</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span>&#10;<span class="n">v</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span>&#10;<span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;   <span class="n">w</span> <span class="o">=</span> <span class="n">kern_mem</span><span class="p">[</span><span class="n">address</span><span class="p">]</span>   <span class="c1"># si se llega aquí se produce un fallo</span>&#10;   <span class="n">x</span> <span class="o">=</span> <span class="n">w</span> <span class="o">&amp;</span> <span class="mh">0x100</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="c1"># operación de bit and</span>&#10;   <span class="n">y</span> <span class="o">=</span> <span class="n">user_mem</span><span class="p">[</span><span class="n">x</span><span class="p">]</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>meltdown-1.py</span>
    </div>
</div>
<p><em>u</em> tiene una dependencia sobre <em>t</em> y <em>v</em> sobre <em>u</em> con lo que el microprocesador usando la superescalabilidad, la ejecución fuera de orden y ejecución especulativa acabaría transformando el programa en la siguiente secuencia de operaciones:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="n">t</span><span class="p">,</span> <span class="n">w_</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">,</span> <span class="n">kern_mem</span><span class="p">[</span><span class="n">address</span><span class="p">]</span>&#10;<span class="n">u</span><span class="p">,</span> <span class="n">x_</span> <span class="o">=</span> <span class="n">t</span><span class="o">+</span><span class="n">c</span><span class="p">,</span> <span class="n">w_</span> <span class="o">&amp;</span> <span class="mh">0x100</span>&#10;<span class="n">v</span><span class="p">,</span> <span class="n">y_</span> <span class="o">=</span> <span class="n">u</span><span class="o">+</span><span class="n">d</span><span class="p">,</span> <span class="n">user_mem</span><span class="p">[</span><span class="n">x_</span><span class="p">]</span>&#10;<span class="k">if</span> <span class="n">v</span><span class="p">:</span>&#10;   <span class="n">w</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">w_</span><span class="p">,</span> <span class="n">x_</span><span class="p">,</span> <span class="n">y_</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="c1"># nunca se llega aquí, si no fallo</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>meltdown-2.py</span>
    </div>
</div>
<p>El microprocesador lee de el valor de una dirección del <em>kernel</em> de forma especulativa pero el fallo en la operación de acceso no se produce hasta se conoce el valor de <em>v</em> utilizando en la sentencia condicional no es cero. Limpiando la cache previamente y haciendo que <em>v</em> de cero para que no se produzca la excepción con los valores adecuados de las variables (<em>a</em>, <em>b</em>, <em>c</em>, <em>d</em>) la ejecución especulativa de <code>v, y_ = u+d, user_mem[x_]</code> producirá un acceso a la dirección de memoria <em>0x000</em> o <em>0x100</em> dependiendo del valor del octavo bit recuperado en el acceso ilegal a la dirección de memoria <code>kern_mem[address]</code>. El ataque <em>side-channel</em> se produce midiendo el tiempo que tarda una instrucción posterior que utilice estas direcciones, si está o no está en la cache (por el tiempo que tarda) determina a que dirección de memoria se ha accedido y cual es el valor del octavo bit de una dirección del <em>kernel</em>. ¡Felicidades has leído un bit de la memoria del kernel!. Bit a bit y con tiempo se puede leer todo el contenido de la memoria del <em>kernel</em> aplicando esta operación millones de veces.</p>
<h3 id="notas-finales">Notas finales</h3>
<p>Los microprocesadores ARM1176, Cortex-A7, and Cortex-A53 usados en la Raspberry Pi no se ven afectados por el <em>Meltdown</em> ya que no poseen ejecución especulativa, los AMD Ryzen tampoco se ven afectados por el <em>Meltdown</em> ya que aunque si soportan ejecución especulativa al contrario de Intel la ejecución especulativa no se permite entre diferentes anillos de seguridad, el <em>kernel</em> se ejecuta en el anillo 0 y las aplicaciones en el anillo 3. Sin embargo, una variante de <em>Meltdown</em> es <em>Spectre</em> que es el mismo caso pero en vez de con la memoria del <em>kernel</em> con la memoria de otra aplicación. Como las aplicaciones se ejecutan en el mismo anillo en este caso los AMD Ryzen y algunos modelos de ARM si se ven afectados por <em>Spectre</em> al igual que también los Intel.</p>
<p>La ejecución especulativa hace más rápidos los microprocesadores pero habiéndose descubierto este fallo muy inseguros en el caso de los Intel ya que se ve afectados por <em>Meltdown</em> y <em>Spectre</em> a menos que se implementen parches por software ya que por microcódigo no es posible darle solución. <em>Meltdown</em> es más grave pero se puede corregir modificando el <em>kernel</em> aún con una pérdida de rendimiento, <em>Spectre</em> es más difícil de explotar pero más difícil de corregir y lo que se hará en este último caso es mitigar el problema modificando el sistema operativo, compilador y aplicaciones.</p>
<p>Intel tiene un problema importante, con AMD y sus Ryzen a buen precio, con buen rendimiento y&hellip; sin el problema del <em>Meltdown</em>. Para corregir el fallo en el diseño de la arquitectura del hardware Intel va a tener que rediseñar en parte su arquitectura y esto le va a llevar meses hasta tener preparados nuevos modelos de microprocesadores sin el error.</p>
<p>En el <em>kernel</em> de Linux 4.14.11 ya se han aplicado varios parches al igual que posteriormente se implementarán en Windows y macOS. Yo como usuario de Linux con un Intel Core i5-3210M que posee la característica <em>pcid</em> y esa versión del <em>kernel</em> no he notado ninguna perdida de rendimiento apreciable.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.raspberrypi.org/blog/why-raspberry-pi-isnt-vulnerable-to-spectre-or-meltdown/">Why Raspberry Pi isn’t vulnerable to Spectre or Meltdown</a></li>
<li><a href="https://pdfs.semanticscholar.org/2209/42809262c17b6631c0f6536c91aaf7756857.pdf">The Intel 80x86 Processor Architecture: Pitfalls for Secure Systems</a></li>
<li><a href="https://www.amd.com/en/corporate/speculative-execution">An Update on AMD Processor Security</a></li>
<li><a href="https://lkml.org/lkml/2017/12/27/2">x86/cpu, x86/pti: Do not enable PTI on AMD processors</a></li>
<li><a href="https://en.wikipedia.org/wiki/List_of_ARM_microarchitectures">List of ARM microarchitectures</a></li>
<li><a href="https://geeks.ms/etomas/2018/01/05/meltdown-y-spectre-algunos-comentarios/">Meltdown y Spectre algunos comentarios</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/</id>
        <title>Instalar y renovar un certificado de Let&#39;s Encrypt en Nginx</title>
        <updated>2017-08-18T17:00:00+02:00</updated>
        <published>2017-08-12T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Let&rsquo;s Encrypt es una entidad que emite certificados TLS/SSL que son reconocidos como de confianza por los navegadores web. Usando esta entidad de certificación es posible obtener y renovar un certificado TLS/SSL de forma automatizada, rápida y sin coste alguno.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/lets-encrypt.svg" width="350" height="83" alt="Let&amp;#39;s Encrypt" title="Let&amp;#39;s Encrypt"  class=""></p>
</div>
<p><a href="https://www.google.es/">Google</a> ha anunciado que su buscador va a considerar el uso del protocolo seguro HTTPS como un criterio de <abbr title="Search Engine Optimization">SEO</abbr> y posicionamiento en la lista de resultados, posicionando mejor aquellas páginas web que usen el protocolo seguro. Además, el navegador <a href="https://www.google.es/chrome/browser/desktop/">Chrome</a> va a advertir al usuario para algunas páginas que usen solo HTTP que esas páginas son inseguras. Por estos motivos y para mayor seguridad y privacidad del usuario es conveniente usar el protocolo seguro HTTPS.</p>
<p>El mayor inconveniente de usar el protocolo seguro HTTPS es que es necesario un certificado firmado por una autoridad de confianza instalada en el navegador del usuario. Hasta ahora había que comprar el certificado que puede llegar a tener un coste de más de 100 €, instalarlo en el servidor y renovarlo antes de su fecha de expiración. Tareas quizá manuales por tanto tediosas y propensas a que surjan errores o se nos olvide hacer la renovación del certificado sobre todo si son múltiples los certificados a gestionar.</p>
<p>Para mejorar la seguridad en la web y facilitar la administración de certificados hace un tiempo se creó una entidad <a href="https://letsencrypt.org/">Let’s Encrypt</a> asociado a la <a href="https://www.linuxfoundation.org/">Linux Foundation</a> con la que es posible automatizar la obtención y renovación de un certificado TLS/SSL firmado por una autoridad de confianza para los navegadores. Además Let&rsquo;s Encrypt permite obtener un certificado sin ningún coste, de forma gratuita.</p>
<p>Los pasos para usar en un servidor web un certificado de Let&rsquo;s Encrypt son los siguientes. Primero hay que instalar el <a href="https://www.archlinux.org/packages/community/any/certbot/">paquete certbot</a> según la distribución de GNU/Linux, en <a href="https://www.archlinux.org/">Arch Linux</a>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pacman -S certbot</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.sh</span>
    </div>
</div>
<p>En el proceso de obtención del certificado demostraremos que somos los propietarios del sitio web a certificar. Usando <a href="https://nginx.org/">nginx</a> como servidor web, iniciado y el dominio a certificar con la opción <em>-d</em> se usa el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># certbot certonly --webroot -w /usr/share/nginx/html -d smaug.l5.ca</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>certbot.sh</span>
    </div>
</div>
<p>El certificado obtenido tiene una fecha de expiración de únicamente tres meses periodo antes del cual hay que renovarlo. Para hacer la renovación hay que usar el comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># certbot renew</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>certbot-renew.sh</span>
    </div>
</div>
<p>La renovación del certificado se realiza cuando queda poco tiempo para que expire, unos 30 días, el siguiente comando permite comprobar antes si la configuración es correcta para realizar la renovación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># certbot renew --dry-run</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>certbot-renew-dry-run.sh</span>
    </div>
</div>
<p>La clave privada y certificado que Let&rsquo;s Encrypt genera una vez el dominio se ha validado se ubican en el directorio <em>/etc/letsencrypt/live/</em> con una carpeta por cada dominio. También se puede ver desde la linea de comandos los certificados existentes y sus fechas de expiración.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># ls /etc/letsencrypt/live/smaug.l5.ca</span>&#10;cert.pem  chain.pem  fullchain.pem  privkey.pem&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>key-cert.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo certbot certificates&#10;<span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> raspberrypi: &#10;Saving debug log to /var/log/letsencrypt/letsencrypt.log&#10;&#10;-------------------------------------------------------------------------------&#10;Found the following certs:&#10;  Certificate Name: smaug.l5.ca&#10;&nbsp;&nbsp;&nbsp;&nbsp;Domains: smaug.l5.ca&#10;&nbsp;&nbsp;&nbsp;&nbsp;Expiry Date: 2017-10-21 09:18:00+00:00 <span class="o">(</span>VALID: <span class="m">70</span> days<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Certificate Path: /etc/letsencrypt/live/smaug.l5.ca/fullchain.pem&#10;&nbsp;&nbsp;&nbsp;&nbsp;Private Key Path: /etc/letsencrypt/live/smaug.l5.ca/privkey.pem&#10;-------------------------------------------------------------------------------</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>certbot-certificates.sh</span>
    </div>
</div>
<p>Dado el relativo poco tiempo de validez de los certificados es recomendable automatizar la renovación empleando una <a href="https://es.wikipedia.org/wiki/Cron_%28Unix%29">expresión cron</a>. La utilidad <em>certbot</em> solo hace la renovación del certificado cuando queda menos de un més para su expiración aunque se programe su ejecución en este caso cada 6 horas y en un minuto aleatorio que Let&rsquo;s Encrypt recomienda para que todos los usuarios no programen sus renovaciones al mismo tiempo:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo su&#10;<span class="c1"># crontab -e</span>&#10;<span class="m">0</span> */6 * * * sleep <span class="si">${</span><span class="nv">RANDOM</span><span class="p">:</span><span class="nv">0</span><span class="p">:</span><span class="nv">2</span><span class="si">}</span>m <span class="p">;</span> certbot renew --quiet --renew-hook <span class="s2">&#34;systemctl restart nginx.service&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>cron.sh</span>
    </div>
</div>
<p>Una vez que se ha renovado el certificado hay que reiniciar el servidor web para que lo utilice y para ello está el parámetro <em>--renew-hook</em> que ejecuta un comando cuando se produce una renovación. En el ejemplo anterior está el comando para reiniciar el servicio de nginx con el sistema gestión de procesos de <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a>.</p>
<p>Let&rsquo;s Encrypt con <em>certbot</em> comprueba si somos el propietario de un sitio web instalando en el servidor web un archivo que posteriormente antes de generar el certificado lo valida. Este archivo para nginx se ubica en el directorio <em>/usr/share/nginx/html/.well-known/acme-challenge/</em> y ha de estar accesible desde internet con el protocolo HTTP en la dirección <em>/.well-known/acme-challenge/</em> del servidor web.</p>
<p>La siguiente configuración del servidor web nginx redirige todo el tráfico usando el protocolo HTTPS excepto el contenido del directorio <em>/.well-known/acme-challenge/</em> que queda accesible por HTTP.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="k">worker_processes</span>  <span class="mi">1</span><span class="p">;</span>&#10;&#10;<span class="k">events</span> <span class="p">{</span>&#10;  <span class="kn">worker_connections</span> <span class="mi">64</span><span class="p">;</span>&#10;<span class="p">}</span>&#10;&#10;<span class="k">http</span> <span class="p">{</span>&#10;  <span class="kn">include</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="s">mime.types</span><span class="p">;</span>&#10;  <span class="kn">default_type</span>  <span class="s">application/octet-stream</span><span class="p">;</span>&#10;&#10;  <span class="kn">sendfile</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="no">on</span><span class="p">;</span>&#10;  <span class="c1">#tcp_nopush&nbsp;&nbsp;&nbsp;&nbsp; on;&#10;</span><span class="c1"></span>&#10;  <span class="kn">keepalive_timeout</span>  <span class="mi">65</span><span class="p">;</span>&#10;&#10;  <span class="kn">gzip</span> <span class="no">on</span><span class="p">;</span>&#10;  <span class="kn">gzip_disable</span> <span class="s">&#34;msie6&#34;</span><span class="p">;</span>&#10;  <span class="kn">gzip_vary</span> <span class="no">on</span><span class="p">;</span>&#10;  <span class="kn">gzip_proxied</span> <span class="s">any</span><span class="p">;</span>&#10;  <span class="kn">gzip_comp_level</span> <span class="mi">6</span><span class="p">;</span>&#10;  <span class="kn">gzip_buffers</span> <span class="mi">16</span> <span class="mi">8k</span><span class="p">;</span>&#10;  <span class="kn">gzip_http_version</span> <span class="mi">1</span><span class="s">.1</span><span class="p">;</span>&#10;  <span class="kn">gzip_types</span> <span class="s">text/plain</span> <span class="s">text/css</span> <span class="s">application/json</span> <span class="s">application/x-javascript</span> <span class="s">text/xml</span> <span class="s">application/xml</span> <span class="s">application/xml+rss</span> <span class="s">text/javascript</span><span class="p">;</span>&#10;&#10;  <span class="kn">server</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="mi">80</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span>  <span class="s">localhost</span> <span class="s">smaug.l5.ca</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">location</span> <span class="s">/.well-known/</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">allow</span> <span class="s">all</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">alias</span> <span class="s">/usr/share/nginx/html/.well-known/</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">return</span> <span class="mi">301</span> <span class="s">https://</span><span class="nv">$host$request_uri</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;  <span class="p">}</span>&#10;&#10;  <span class="kn">server</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="mi">443</span> <span class="s">ssl</span> <span class="s">http2</span> <span class="s">default_server</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span>  <span class="s">localhost</span> <span class="s">smaug.l5.ca</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_certificate</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s">/etc/letsencrypt/live/smaug.l5.ca/cert.pem</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_certificate_key</span>  <span class="s">/etc/letsencrypt/live/smaug.l5.ca/privkey.pem</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_protocols</span> <span class="s">TLSv1.1</span> <span class="s">TLSv1.2</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_ciphers</span>   <span class="s">HIGH:!aNULL:!MD5</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_session_cache</span>   <span class="s">shared:SSL:1m</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">ssl_session_timeout</span> <span class="mi">3m</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">root</span>   <span class="s">/usr/share/nginx/html</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;  <span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.conf</span>
    </div>
</div>
<p>Y este es el resultado al acceder con el navegador al sitio web que tengo instalado en una <a href="https://www.raspberrypi.org/">Raspberry Pi</a> accesible desde internet con un dominio de <a href="https://freedns.afraid.org/">FreeDNS</a>:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/images/smaug-1_hu12a4623b7f6c5a899b17fffa3e5f273d_39940_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Sitio web con certificado de Let&amp;#39;s Encrypt"><img src="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/images/smaug-1_hu12a4623b7f6c5a899b17fffa3e5f273d_39940_300x200_fit_box_3.png" width="285" height="200" alt="Sitio web con certificado de Let&amp;#39;s Encrypt" title="Sitio web con certificado de Let&amp;#39;s Encrypt"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/images/smaug-2_hu4cb5bdb44c9d0e30ac5cc5600a4ff243_32417_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Sitio web con certificado de Let&amp;#39;s Encrypt"><img src="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/images/smaug-2_hu4cb5bdb44c9d0e30ac5cc5600a4ff243_32417_300x200_fit_box_3.png" width="300" height="198" alt="Sitio web con certificado de Let&amp;#39;s Encrypt" title="Sitio web con certificado de Let&amp;#39;s Encrypt"  class="lozad "></a></p>
<figcaption>Sitio web con certificado de Let&#39;s Encrypt</figcaption>
</figure>
</div>
<p>En la documentación del proyecto de Let&rsquo;s Encrypt hay explicaciones más detalladas sobre <a href="https://letsencrypt.org/how-it-works/">como funciona</a>, <a href="https://letsencrypt.org/docs/rate-limits/">límites de uso</a>, <a href="https://certbot.eff.org/docs/using.html">como usarlo</a> y <a href="https://certbot.eff.org/">varias guías según el servidor web y distribución GNU/Linux</a>.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="web"/>
            
        
    </entry>
    
</feed>