<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/software/</id>
    <updated>2019-12-11T17:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/</id>
        <title>Buscar en el historial desde la barra de direcciones inteligente de Firefox</title>
        <updated>2019-12-11T17:00:00+01:00</updated>
        <published>2019-12-11T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/firefox.svg" width="200" height="188" alt="Firefox" title="Firefox"  class=""></p>
</div>
<p>Los navegadores web guardan un historial de todas las páginas a las que se acceden, además de los marcadores que los usuarios creen. Este historial en Firefox se guarda en orden cronológico pudiendo consultar todas las páginas accedidas en el día actual, el de ayer y anteriores fechas. También es posible realizar búsquedas para encontrar una cierta página. En Firefox al historial se accede desde en menú con la opción <em>Historial &gt; Mostrar todo el historial</em>. El historial se muestra en una ventana.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/historial-firefox_huafb4b7f59bbf1e2f6492c5417b522249_48002_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Historial de páginas en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/historial-firefox_huafb4b7f59bbf1e2f6492c5417b522249_48002_650x450_fit_box_3.png" width="650" height="346" alt="Historial de páginas en Firefox" title="Historial de páginas en Firefox"  class="lozad "></a></p>
<figcaption>Historial de páginas en Firefox</figcaption>
</figure>
</div>
<p>Acceder al historial requiere abrir una ventana y luego hacer una búsqueda pero sin necesidad de abrir la ventana del historial desde la barra de direcciones inteligente también pueden hacerse búsquedas, no solo para las páginas del historial sino también entre los marcadores, pestañas abiertas, por títulos de página o por coincidencias en la dirección web. Con ciertos caracteres especiales se determina el comportamiento de la búsqueda.</p>
<ul>
<li><code>^</code>: para buscar coincidencias en el historial de búsqueda.</li>
<li><code>*</code>: para buscar coincidencias en los marcadores.</li>
<li><code>+</code>: para buscar coincidencias en las etiquetas de las páginas.</li>
<li><code>%</code>: para buscar entre las pestañas abiertas actualmente.</li>
<li><code>#</code>: Para buscar coincidencias en usando los títulos de página.</li>
</ul>
<ul>
<li><code>$</code>: para buscar coincidencias en la dirección web.</li>
</ul>
<p>En esta captura de hace una búsqueda por el título de las páginas en el historial.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/barra-de-busqueda-firefox_huf6ad5650de6e3bff9124953c89123401_61128_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Barra de búsqueda inteligente de Firefox"><img src="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/barra-de-busqueda-firefox_huf6ad5650de6e3bff9124953c89123401_61128_650x450_fit_box_3.png" width="650" height="430" alt="Barra de búsqueda inteligente de Firefox" title="Barra de búsqueda inteligente de Firefox"  class="lozad "></a></p>
<figcaption>Barra de búsqueda inteligente de Firefox</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://support.mozilla.org/en-US/kb/address-bar-autocomplete-firefox?redirectlocale=en-US&amp;redirectslug=awesome-bar-search-firefox-bookmarks-history-tabs">Address bar autocomplete in Firefox - Search your bookmarks, history and tabs</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/</id>
        <title>Nube privada para documentos personales con Nextcloud y OnlyOffice</title>
        <updated>2019-12-05T12:00:00+01:00</updated>
        <published>2019-12-05T12:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Empresas como Google ofrecen servicios gratuitos que los usuarios pueden utilizar, algunos de ellos a cambio de entregrarles documentos con información personal con la consiguiente potencial pérdida de privacidad. Algunos de estos servicios son sustituibles con alternativas como Nextcloud y OnlyOffice que permiten a sus usuarios ser dueños de su información ya sea utilizando una Raspberry Pi como servidor que debe ser administrada o incluso en la nube con servicios como DigitalOcean o AWS.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/nextcloud.svg" width="200" height="141" alt="Nextcloud" title="Nextcloud"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/onlyoffice.svg" width="200" height="186" alt="OnlyOffice" title="OnlyOffice"  class=""></p>
</div>
<p>Una cuenta de Google da acceso a múltiples servicios gratuitos, útiles y con un servicio más que correcto. Algunas de estos servicios está el de correo electrónico de <a href="https://www.google.com/intl/es/gmail/about/">GMail</a>, la sincronización y unidad de documentos de <a href="https://www.google.es/drive/apps.html">Google Drive</a>, calendario para apuntar citas y recordatorios con <a href="https://www.google.com/calendar/about/">Google Calendar</a>, el acceso a la <em>suite</em> ofimática colaborativa <a href="https://www.google.es/intl/es/docs/about/">Google Docs</a> o fotos con <a href="https://www.google.com/photos/about/">Google Photos</a>. Estos son los servicios que uso de Google por su comodidad.</p>
<p>Los servicios en la nube permiten guardar los documentos e información fuera del dispositivo donde se usen, esto permite tener sincronizados y compartir todos los documentos entre varios dispositivos como el ordenador personal en casa, tener disponibles los documentos en el ordenador del trabajo y en un dispositivo móvil como un <em>smartphone</em> en cualquier lugar. El problema de los servicios en la nube es que no somos realmente propietarios de nuestra información y documentos, son entregados a esos servicios como los de Google, esto genera una pérdida de privacidad sin ser conscientes de los usos que le pueda dar Google. Para proteger nuestra privacidad hay alternativas para disponer de nuestra propia nube que proporcione la mayoría de estos servicios.</p>
<p><a href="https://nextcloud.com/">Nextcloud</a> es un software que permite alojar en nuestro propio servidor nuestros documentos sustituyendo a varios de los servicios de Google. Nextcloud permite almacenar archivos y documentos ofimáticos, fotos, música, calendarios, un visor de PDF, editor de <em>markdown</em>, gestor de tareas o nuestros contactos. Permite complementos con los que añadir las funcionalidad que necesitemos como un reproductor de música o un paquete ofimático con <a href="https://www.onlyoffice.com/es/">OnlyOffice</a> que sustituya a Google Docs.</p>
<p>Una <a href="https://www.raspberrypi.org/">Raspberry Pi 4</a> o una de sus <a href="https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/">7 computadoras alternativas</a> similares es una buena opción como servidor por su pequeño tamaño, bajo consumo, totalmente silencioso con un recomendable disipador pasivo y suficiente para ejecutar con normalidad Nextcloud con los 4 GiB de memoria del modelo con más capacidad. Hay <a href="https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/">otras placas similares</a> o incluso se puede utilizar un <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Intel NUC</a> que permiten más cantidad de memoria y sus procesadores son más capaces. Para una nube privada una Raspberry Pi es interesante por su pequeño tamaño y bajo consumo eléctrico dado que su funcionamiento sería constante.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07TC2BK1X&amp;linkId=6e87726b77e92056e7ac168add1bc747" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07XNVPK8X&amp;linkId=bef0fad42b2cc046799c66f7fa220c0f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B073JWXGNT&amp;linkId=d64d66fda7d25defd2018c4119aa7e46" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B014I8U33I&amp;linkId=df5c52be4ca21b9991d26145edb0b642" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VMXHJ4Q&amp;linkId=39ee0802cdc202ce8259d463b59224ed" title="Amazon" class="lozad"></iframe>
</div>
<p>Usando <a href="https://www.docker.com/">Docker</a> y el <a href="https://github.com/ONLYOFFICE/docker-onlyoffice-nextcloud">repositorio de GitHub</a> es sencillo iniciar el servidor de Nextcloud realizando los siguientes pasos.</p>
<ul>
<li>Instalar Docker.</li>
<li>Descargar o clonar el repositorio de GitHub.</li>
<li>Iniciar con Docker Compose los contenedores de Nextcloud y OnlyOffice.</li>
<li>Acceder <em>http://localhost</em> y realizar la configuración inicial, introducir el usuario y contraseña de administrador.</li>
<li>Ejecutar <em>bash set_configuration.sh</em>.</li>
<li>Añadir el complemento de OnlyOffice.</li>
<li>Acceder a <em>http://localhost</em>.</li>
</ul>
<p>Este archivo de Docker Compose incluye Nextcloud con OnlyOffice sin usar una base de datos externa.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">app-server</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nextcloud:fpm</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">expose</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;80&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;9000&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">app_data:/var/www/html</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">onlyoffice-document-server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">onlyoffice-document-server</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">onlyoffice/documentserver:latest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">expose</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;80&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;443&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">document_data:/var/www/onlyoffice/Data</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">document_log:/var/log/onlyoffice</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">nginx</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-server</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">./nginx.conf:/etc/nginx/nginx.conf</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">app_data:/var/www/html</span><span class="w">&#10;</span><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">document_data</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">document_log</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">app_data</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">mysql_data</span><span class="p">:</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker-compose up&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-configuracion_hu7348f075c395873d91de02a5fb57b540_592428_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de Nextcloud"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-configuracion_hu7348f075c395873d91de02a5fb57b540_592428_300x200_fit_box_3.png" width="300" height="198" alt="Configuración de Nextcloud" title="Configuración de Nextcloud"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-inicio_hu8b8d704537521248ed406d67202f5cb8_498606_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de Nextcluod"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-inicio_hu8b8d704537521248ed406d67202f5cb8_498606_300x200_fit_box_3.png" width="300" height="198" alt="Inicio de Nextcluod" title="Inicio de Nextcluod"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-archivos_hu0e5f45861c65c3026f8a6d9908487425_77402_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivos en Nextcloud"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-archivos_hu0e5f45861c65c3026f8a6d9908487425_77402_300x200_fit_box_3.png" width="300" height="198" alt="Archivos en Nextcloud" title="Archivos en Nextcloud"  class="lozad "></a></p>
<figcaption>Configuración y archivos en Nextcloud</figcaption>
</figure>
</div>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/">OnlyOffice es un paquete ofimático alternativa a Microsoft Office</a> que ofrece un editor de documentos de texto, una hoja de cálculo y una aplicación para realizar presentaciones integrables en Nextcloud. Son aplicaciones con menos opciones que las ofrecidas por Microsoft Office pero suficientes para un uso sencillo, también dispone de una versión como aplicaciones de escritorio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-documento_hu75d514e1af687067042b36db0d8cca97_82529_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Documento con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-documento_hu75d514e1af687067042b36db0d8cca97_82529_300x200_fit_box_3.png" width="300" height="198" alt="Documento con OnlyOffice" title="Documento con OnlyOffice"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-hoja-de-calculo_hu1e880885d1b87bcaeedc67cdcf30656f_90253_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Hola de cálculo con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-hoja-de-calculo_hu1e880885d1b87bcaeedc67cdcf30656f_90253_300x200_fit_box_3.png" width="300" height="198" alt="Hola de cálculo con OnlyOffice" title="Hola de cálculo con OnlyOffice"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-presentacion_huf80b231b0357f81b45055c61fc87e78a_89511_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Presentación con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-presentacion_huf80b231b0357f81b45055c61fc87e78a_89511_300x200_fit_box_3.png" width="300" height="198" alt="Presentación con OnlyOffice" title="Presentación con OnlyOffice"  class="lozad "></a></p>
<figcaption>Ofimática con OnlyOffice y Nextcloud alternativa a Google Docs</figcaption>
</figure>
</div>
<p>Otras utilidades es un reproductor de música, calendario o galería de fotos, hay un complemento para añadir estas funcionalidades.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-pdf_hu9c375447dbaadb6118d44af382ae6dc2_244274_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Visor de documento PDF"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-pdf_hu9c375447dbaadb6118d44af382ae6dc2_244274_300x200_fit_box_3.png" width="300" height="198" alt="Visor de documento PDF" title="Visor de documento PDF"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-calendario_hua3364b511a687c3dd051fba1e58308cd_55308_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Calendario"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-calendario_hua3364b511a687c3dd051fba1e58308cd_55308_300x200_fit_box_3.png" width="300" height="198" alt="Calendario" title="Calendario"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-fotos_hu8fa48cc6dd28b15761dd535ce8c3e54c_529797_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Visor de fotos"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-fotos_hu8fa48cc6dd28b15761dd535ce8c3e54c_529797_300x200_fit_box_3.png" width="300" height="198" alt="Visor de fotos" title="Visor de fotos"  class="lozad "></a></p>
<figcaption>Aplicaciones y complementos</figcaption>
</figure>
</div>
<p>Con <a href="https://en.wikipedia.org/wiki/WebDAV">WebDAV</a> los documentos son accesibles como si fuese una unidad local proporcionando la misma funcionalidad de Google Drive. En GNOME con el explorador de archivos Nautilus es posible conectarse a dispositivo WebDAV, en el caso de Nextcloud la dirección es <em>dav://localhost/remote.php/dav/files/admin</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-webdav_hu654eea6c2f2a8913b74ce780deb20881_51637_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivos en el explorador de archivos Nautilus con WebDAV"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-webdav_hu654eea6c2f2a8913b74ce780deb20881_51637_300x200_fit_box_3.png" width="289" height="200" alt="Archivos en el explorador de archivos Nautilus con WebDAV" title="Archivos en el explorador de archivos Nautilus con WebDAV"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-administracion_hub414e9a557d957a8ac86576d54dc2a39_111099_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Opciones de administración"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-administracion_hub414e9a557d957a8ac86576d54dc2a39_111099_300x200_fit_box_3.png" width="251" height="200" alt="Opciones de administración" title="Opciones de administración"  class="lozad "></a></p>
<figcaption>Archivos en el explorador de archivos Nautilus con WebDAV y opciones de administración</figcaption>
</figure>
</div>
<p>Con las <a href="https://nextcloud.com/install/#">aplicaciones para <em>smatphone</em></a> los documentos quedan accesibles en cualquier lugar teniendo un dispositivo móvil, <em>smartphone</em> o tableta. Tener una nube propia que esté accesible en internet hace necesario tener un dominio propio, añadir seguridad para lo que es necesario configurar Nextcloud de modo que utilice el protocolo seguro que cifre las comunicaciones con TLS, esto requiere obtener <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">un certificado autofirmado</a> al menos o mejor obteniéndolo de <a href="https://letsencrypt.org/">Let’s Encrypt</a>, que proporciona certificados de forma automatizada y gratuita. Otra medida para aumentar la seguridad es utilizar un segundo factor de autenticación o <em>2FA</em>.</p>
<p>Hay <a href="https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/postgres/fpm/docker-compose.yml">ejemplo de archivo de Docker Compose para tener Nextcloud con un certificado</a> creado y renovado de forma automática con Let&rsquo;s Encrypt a través del contenedor <a href="https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion">jrcs/letsencrypt-nginx-proxy-companion</a> y configurando las variables de entorno <em>LETSENCRYPT_HOST</em>, <em>LETSENCRYPT_EMAIL</em> con el dominio propio para Nextcloud y un correo electrónico.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/</id>
        <title>Gestionar biblioteca y convertir entre formatos de libros electrónicos con Calibre</title>
        <updated>2019-11-22T16:00:00+01:00</updated>
        <published>2019-11-22T16:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Dado que los libros electrónicos ocupan muy poco se puede llegar a tener una biblioteca grande de libros que necesitan de una herramienta para ser catalogados y para realizar conversión entre formatos si es necesario para uno de entre los que soporte el dispositivo de libros electrónicos. Calibre es una aplicación que ofrece estas dos principales funciones.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/calibre.png" width="200" height="80" alt="Calibre" title="Calibre"  class=""></p>
</div>
<p>Hace ya unos años que tengo un lector de libros electrónicos y estoy muy contento con él, el popular <a href="https://amzn.to/3Dd5Q8p">Amazon Kindle</a> aún echando de menos la luz integrada y el modelo <em>paperwhite</em> que tiene la pantalla más blanca de los modelos más recientes que el mío. Una de las ventajas de los libros electrónicos es que una vez leídos no ocupan espacio físico con lo que no hay que tener varias baldas de libros ocupando espacio, al ser electrónicos no son más que un archivo de ordenador que ocupan muy poco no llegando muchos de ellos al megabyte de espacio. Teniendo una gran cantidad de libros según se obtienen o se empiezan a leer un libro se puede añadir a la biblioteca para tenerlo catalogado. Para gestionar la biblioteca de libros una de las mejores opciones sino la mejor es <a href="https://calibre-ebook.com/">Calibre</a> no solo por su completa funcionalidad sino porque es software libre.</p>
<p>Calibre permite organizar los libros por autor y muestra las portadas de los mismos, además permite convertir entre formatos de libros electrónicos. Dos de los formatos mayormente soportados por los lectores de libros electrónicos son el <em>EPUB</em> y <em>MOBI</em>. Los Amazon Kindle soportan <em>MOBI</em>, <em>AZW</em>, <em>AZW3</em> y muchas de otras marcas soportan <em>EPUB</em>, dependiendo del dispositivo en que vayan a ser leídos los libros y el formato en el que se tenga el libro puede ser necesaria una conversión.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre_hu46ff9abe2a9e46774fd89681d1ab6ae2_1940986_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Biblioteca y conversor de libros electrónicos Calibre"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre_hu46ff9abe2a9e46774fd89681d1ab6ae2_1940986_300x200_fit_box_3.png" width="292" height="200" alt="Biblioteca y conversor de libros electrónicos Calibre" title="Biblioteca y conversor de libros electrónicos Calibre"  class="lozad "></a></p>
<figcaption>Biblioteca y conversor de libros electrónicos Calibre</figcaption>
</figure>
</div>
<p>La conversión entre formatos no tarda muchos y en ningún momento me he encontrado que el resultado sea malo si el original está correctamente formateado. Como los libros electrónicos son archivos pequeños la conversión se realiza en unos pocos decenas de segundos. Además, Calibre permite realizar la conversión de forma masiva sobre varios libros guardando los libros en diferentes formatos en la biblioteca.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-convertir_hub994f0718b34dec5877192624f544a1e_826817_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Convertir un libro electrónico a otro formato con Calibre"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-convertir_hub994f0718b34dec5877192624f544a1e_826817_300x200_fit_box_3.png" width="213" height="200" alt="Convertir un libro electrónico a otro formato con Calibre" title="Convertir un libro electrónico a otro formato con Calibre"  class="lozad "></a></p>
<figcaption>Convertir un libro electrónico a otro formato</figcaption>
</figure>
</div>
<p>La biblioteca se guarda en el sistema de archivos del ordenador en una estructura de directorios organizados por autor, títulos del libro y en los formatos en los que se haya realizado la conversión.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-biblioteca-autores_huc9ea6d610438a4f3fb3049ad0dc871db_88941_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Organización por autores de los archivos en la biblioteca"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-biblioteca-autores_huc9ea6d610438a4f3fb3049ad0dc871db_88941_300x200_fit_box_3.png" width="300" height="160" alt="Organización por autores de los archivos en la biblioteca" title="Organización por autores de los archivos en la biblioteca"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-biblioteca-libros_huc259eb10d2e5d664a2f4e8df954d51f5_62215_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Organización por autor de los archivos en la biblioteca"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-biblioteca-libros_huc259eb10d2e5d664a2f4e8df954d51f5_62215_300x200_fit_box_3.png" width="300" height="160" alt="Organización por autor de los archivos en la biblioteca" title="Organización por autor de los archivos en la biblioteca"  class="lozad "></a></p>
<figcaption>Organización de los archivos en la biblioteca</figcaption>
</figure>
</div>
<p>Quizá algunos de los libros no tenga los metadatos correctos como el título, nombre del autor o el número del libro si forma parte de una serie de libros relacionados, mediante otro diálogo se puede editar y catalogar correctamente el libro.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-metadatos_hud488a9e5a6701fe8f1402d14b2a219a4_748874_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Convertir un libro electrónico a otro formato con Calibre"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-metadatos_hud488a9e5a6701fe8f1402d14b2a219a4_748874_300x200_fit_box_3.png" width="300" height="191" alt="Convertir un libro electrónico a otro formato con Calibre" title="Convertir un libro electrónico a otro formato con Calibre"  class="lozad "></a></p>
<figcaption>Metadatos de un libro electrónico</figcaption>
</figure>
</div>
<p>Calibre tiene más funciones pero la catalogar los libros en una biblioteca digital y la realizar la conversión entre formatos para diferentes dispositivos son las dos principales. Está <a href="https://calibre-ebook.com/download">disponible para los principales sistemas operativos</a> como <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> en forma de paquete proporcionado por la distribución o como <a href="https://flathub.org/apps/details/com.calibre_ebook.calibre">aplicación Flatpak universal para cualquier distribución</a>, <a href="https://www.microsoft.com/es-es/windows/">Windows</a> y <a href="https://www.apple.com/macos/">macOS</a>. Puedes conocer la <a href="https://calibre-ebook.com/about#history">historia de Calibre</a> y cmo surgió como una necesidad de su autor.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/flatpak-distribucion-e-instalacion-de-programas-de-escritorio-en-las-distribuciones-gnu-linux/">Flatpak, distribución e instalación de programas de escritorio en las distribuciones GNU/Linux</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/</id>
        <title>Microservicios con Spring Cloud, Consul, Nomad y Traefik</title>
        <updated>2020-03-11T11:00:00+01:00</updated>
        <published>2019-10-12T02:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Sin entrar a si los microservicios son adecuados o no son adecuados en una aplicación, está claro que si se utilizan estos tienen varias necesidades. Un servicio de registro y descubrimiento, configuración centralizada, tolerancia a fallos, <em>gateway/load balancer/reverse proxy</em>, trazabilidad y métricas, autenticación, orquestación, &hellip; Los microservicios quizá no sean un gran monolito, quizá mas pequeños y con funcinalidad más acotada, pero el hecho de que se comuniquen a través de un medio más complejo y menos fiable como la red en vez de una llamada a un método y sean más numerosos hacen que la complejidad sea incluso mayor. Este artículo propone un ejemplo con Spring Cloud para los servicios, Consul para el registro y descubrimiento, Nomad para la orquestación y Traefik como <em>gateway</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<p>En otro artículo mostraba un ejemplo de <a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">microservicios con Spring Cloud</a> usando únicamente herramientas de <a href="https://spring.io/">Spring</a>. Cada una de esas herramientas cubren una funcionalidad que necesitan los microservicios. Entre ellas:</p>
<ul>
<li>Registro y descubrimiento, con <a href="https://github.com/Netflix/eureka">Eureka</a>. Los microservicios son numerosos, de vida efímera creándose y destruyéndose en diferentes ubicaciones por lo tanto necesitan una forma de localizarse unos a otros, la forma para encontrarse es acudiendo a un servicio donde se registran cuando se inician y se descubren cuando necesitan la ubicación de otro servicio.</li>
<li>Configuración centralizada, con <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a>. Dado el número de microservicios actualizar la configuración de cada uno de ellos puede ser un problema, además dado que se pueden iniciar en diferentes ubicaciones aprovisionarles la configuración adecuada es un reto. En vez de aprovisionar la configuración otra técnica es hacer que cuando se inicien la obtengan de un servicio donde queda centralizada la configuración.</li>
<li>Tolerancia a fallos, con <a href="https://github.com/Netflix/Hystrix">Hyxtrix</a> y <a href="https://github.com/resilience4j/resilience4j">Resilience4j</a>. El medio de comunicación de los microservicios es a través de la red un medio mucho menos confiable que una llamada a un método en un lenguaje de programación en una aplicación monolítica. De modo que los microservicios han de estar preparados para tolerar fallos en sus comunicaciones con otros servicios.</li>
<li><em>Gateway</em>, <em>load balancer</em> y <em>reverse proxy</em> con tolerancia a fallos, con <a href="https://github.com/Netflix/zuul">Zuul</a>. Para aumentar la disponibilidad, escalabilidad y tolerar fallos en algunos servicios se suelen crear varias instancias de cada microservicio pero tener varias instancias hace que sea necesario balancear la carga entre cada una de las instancias. Para que los clientes sean agnósticos del número de instancias se emplea un <em>gateway</em> que proporciona balanceo de carga e implementa a su vez patrones de tolerancia a fallos.</li>
<li>Trazabilidad y correlación de trazas entre diferentes servicios, con <a href="https://spring.io/projects/spring-cloud-sleuth">Spring Cloud Sleuth</a>. Una petición puede desencadenar una cadena de peticiones entre diferentes servicios ubicados en múltiples nodos, para tareas de diagnóstico en caso de querer investigar un <em>bug</em> o que ha ocurrido es necesario correlacionar todas las trazas que ha desencadenado una petición, se implementa asignado un identificativo global a la petición que es transmitido en las llamadas de microservicio a microservicio.</li>
</ul>
<p>En otro <a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/">ejemplo sobre OAuth con Spring</a> mostraba otra funcionalidad:</p>
<ul>
<li><em>Gateway</em>, con <a href="https://spring.io/projects/spring-cloud-gateway">Spring Cloud Gateway</a>.</li>
<li>Autenticación y autorización, con <a href="https://spring.io/projects/spring-security-oauth">Spring Security OAuth</a>.</li>
</ul>
<p>Los microservicios también necesitan monitorización y métricas, en el ejemplo <a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/">Monitorizar una aplicación Java de Spring Boot con Micrometer, Prometheus y Grafana</a>:</p>
<ul>
<li>Con <a href="https://prometheus.io/">Prometheus</a> y <a href="https://grafana.com/">Grafana</a>. Nuevamente el número de instancias que requiere una arquitectura orientada a microservicios origina la necesidad en mayor medida de conocer el estado del sistema, ya sean métricas de los sistemas como uso de CPU, memoria o almacenamiento o de la aplicación como peticiones por segundo y porcentaje de correctas e incorrectas.</li>
</ul>
<p>En esta lista falta un orquestador para el despliegue de los microservicios, que se encargue de su ciclo de vida, escalado de instancias y despliegue con estrategias <em>rolling</em>, <em>blue/green</em> y <em>canary</em>. Es una cosa que le faltaba al ejemplo de microservicios con Spring Cloud.</p>
<ul>
<li>Orquestador de servicios, con <a href="https://www.nomadproject.io/">Nomad</a>. <a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a>, <a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad</a>.</li>
</ul>
<p>Además, en este ejemplo reemplazo varias de estas herramientas de Spring. Sustituyo el servicio de registro y descubrimiento proporcionado por Eureka por <a href="https://www.consul.io/">Consul</a>, el <em>gateway</em>, <em>load balancer</em> y <em>reverse proxy</em> proporcionado por Zuul por <a href="https://traefik.io/">Traefik</a> y añado el orquestador de microservicios <a href="https://www.nomadproject.io/">Nomad</a>.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="200" alt="Traefik" title="Traefik"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="200"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/traefik.svg" width="200" height="200"  class="lozad "></p>
</figure>
</div>
<p>Traefik se configura con los servicios iniciados en los contenedores de Docker utilizando junto con los bloques o <em>stanzas</em> de <em>config</em> y <em>tags</em> en la definición de los servicios de Nomad. Según el criterio definido por el servicio Traefik es capaz de redirigir el tráfico que le llegue al servicio apropiado, entre las posibilidades que puede realizar Traefik es balanceo de carga entre las múltiples instancias que se hayan definido pero también implementa patrones de tolerancia a fallos con reintentos, el patrón <em>circuit breaker</em> o limitar el tráfico para evitar saturar a un servicio con demasiadas peticiones.</p>
<p>El esquema de servicios sería el siguiente. Los <em>job</em> son enviados a Nomad desde la linea de comandos que inicia los contenedores en Docker y registra los servicios en Consul, Traefik monitoriza el catálogo de servicios registrados en Consul y se autoconfigura según los <em>tags</em> asociados a los servicios, los <em>tags</em> se especificar en los archivos de los servicios para Nomad. Una vez iniciados los servicios desde la terminal con un <em>curl</em> o desde la aplicación cliente que accede a Consul para conocer la ubicación del servicio de Traefik envían una petición a Traefik que haciendo balanceo de carga la reenvía a una de las instancias del servicio, el servicio responde y Traefik envía la respuesta al cliente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/esquema-arquitectura_hu4a60e9874e21fb74b7496e4608f1c5ff_356960_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Esquema arquitectura"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/esquema-arquitectura_hu4a60e9874e21fb74b7496e4608f1c5ff_356960_600x450_fit_box_3.png" width="600" height="382" alt="Esquema arquitectura" title="Esquema arquitectura"  class="lozad "></a></p>
<figcaption>Esquema arquitectura</figcaption>
</figure>
</div>
<p>La ejecución del ejemplo requiere <a href="https://www.docker.com/">Docker</a> ya que es en este caso el <em>driver</em> empleado en Nomad para ejecutar los servicios del servicio de configuración, el <em>gateway</em>, el servicio y el cliente del servicio. Nomad además se encarga de registrar los servicios en el servicio de registro y descubrimiento de Consul.</p>
<p>Los contenedores de Docker se añade a una misma red para que puedan comunicarse entre ellos, ha de ser así hasta que no se resuelva una <a href="https://github.com/docker/for-linux/issues/264">petición de Docker para que los contenedores puedan comunicarse con la máquina <em>host</em></a> que los alberga.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker network create --subnet 172.30.0.0/16 nomad&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-network-create.sh</span>
    </div>
</div>
<p>Posteriormente hay que ejecutar Consul y Nomad tras lo cual se puede acceder a sus consolas de estado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev -ui -client<span class="o">=</span>0.0.0.0&#10;$ nomad agent -dev&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-consul-run.sh</span>
    </div>
</div>
<p>Enviar a Nomad los <em>job</em> de Traefik tras lo cual se puede acceder a su consola de estado. El siguiente paso es enviar el <em>job</em> del servicio que proporciona la configuración a los microservicios. Lo anterior únicamente es infraestructura aún no hay ningún servicio que proporcione alguna funcionalidad, la funcionalidad que proporciona el servicio implementado con Spring es simplemente devolver un mensaje como respuesta a la petición que se le realice, se envía el <em>job</em> del servicio a Nomad. Finalmente, el servicio es consumido por un cliente que realiza una petición al servicio cada 1 segundo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./gradlew assemble&#10;&#10;$ nomad job run nomad/traefik.nomad&#10;$ nomad job run nomad/configserver.nomad&#10;$ nomad job run nomad/service.nomad&#10;$ nomad job run nomad/client.nomad</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-run.sh</span>
    </div>
</div>
<p>Definición de un servicio en un <em>job</em> para Nomad. <em>count</em> define cuantas instancias del servicio se inicia, la <em>stanza</em> <em>update</em> define como será la actualización cuando se actualice el servicio, la <em>stanza</em> <em>labels</em> contiene la configuración para Traefik, <em>check</em> define los parámetros para la monitorización.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="k">job</span> <span class="s2">&#34;service&#34;</span> {&#10;<span class="n">  datacenters</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;dc1&#34;</span><span class="p">]</span>&#10;&#10;  <span class="k">group</span> <span class="s2">&#34;service&#34;</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;count</span> <span class="o">=</span> <span class="m">2</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">update</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  max_parallel</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">1</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  health_check</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s2">&#34;checks&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  min_healthy_time</span>  <span class="o">=</span> <span class="s2">&#34;20s&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  healthy_deadline</span>  <span class="o">=</span> <span class="s2">&#34;10m&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  progress_deadline</span> <span class="o">=</span> <span class="s2">&#34;20m&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  canary</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">1</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  stagger</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s2">&#34;15s&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">task</span> <span class="s2">&#34;service&#34;</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">config</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image</span> <span class="o">=</span> <span class="s2">&#34;openjdk:11-jdk&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args</span> <span class="o">=</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;bash&#34;</span><span class="p">,</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;-c&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;(cd /app &amp;&amp; java -jar /app/service/build/libs/service-1.0.jar --port</span><span class="o">=</span><span class="m">8080</span><span class="p">)</span><span class="err">&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">port_map</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  http</span> <span class="o">=</span> <span class="s2">&#34;8080&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network_mode</span> <span class="o">=</span> <span class="s2">&#34;nomad&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extra_hosts</span> <span class="o">=</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;traefik:172.30.0.3&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;volumes</span> <span class="o">=</span> <span class="p">[</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;/home/picodotdev/Software/personal/blog-ejemplos/SpringCloudConsulNomadTraefik/:/app&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">service</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name</span> <span class="o">=</span> <span class="s2">&#34;service&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port</span> <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">check</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  type</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  path</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;/actuator/health&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  interval</span> <span class="o">=</span> <span class="s2">&#34;5s&#34;</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  timeout</span>  <span class="o">=</span> <span class="s2">&#34;2s&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tags</span> <span class="o">=</span> <span class="p">[</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.middlewares.service1-stripprefix.stripprefix.prefixes</span><span class="o">=</span><span class="err">/</span><span class="k">service</span><span class="err">&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.middlewares.service1-retry.retry.attempts</span><span class="o">=</span><span class="m">10</span><span class="err">&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.routers.service1.middlewares</span><span class="o">=</span><span class="k">service1</span><span class="err">-</span><span class="k">stripprefix</span><span class="p">,</span><span class="k">service1</span><span class="err">-</span><span class="k">retry</span><span class="err">&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.routers.service1.rule</span><span class="o">=</span><span class="k">PathPrefix</span><span class="p">(</span><span class="err">`/</span><span class="k">service</span><span class="err">`</span><span class="p">)</span><span class="err">&#34;</span><span class="p">,</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.services.service1.loadbalancer.server.port</span><span class="o">=</span><span class="m">8080</span><span class="err">&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">resources</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cpu</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">200</span>&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory</span> <span class="o">=</span> <span class="m">1024</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">network</span> {&#10;<span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  mbits</span> <span class="o">=</span> <span class="m">20</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">port</span> <span class="s2">&#34;http&#34;</span> {}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service.nomad</span>
    </div>
</div>
<p>Tanto Consul, Nomad como Traefik ofrecen una consola para ver su estado ubicadas en las siguientes direcciones respectivamente accesibles con el navegador <em>http://127.0.0.1:8500</em>, <em>http://127.0.0.1:4646</em>, <em>http://127.0.0.1:8092</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/consul_hud3df5263e4ff8422559f6f7fab94c175_89169_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/consul_hud3df5263e4ff8422559f6f7fab94c175_89169_200x150_fit_box_3.png" width="160" height="150" alt="Consul" title="Consul"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-1_hu7dea68e7f0ccfcb1f8f0def4178aee0e_68294_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-1_hu7dea68e7f0ccfcb1f8f0def4178aee0e_68294_200x150_fit_box_3.png" width="160" height="150" alt="Nomad" title="Nomad"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-2_hu8ddf74c95bb84f5e3e2ed8d218a76259_132025_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-2_hu8ddf74c95bb84f5e3e2ed8d218a76259_132025_200x150_fit_box_3.png" width="160" height="150" alt="Nomad" title="Nomad"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-1_hu3af731e91707f43f4848927f9f158b51_144944_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Traefik"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-1_hu3af731e91707f43f4848927f9f158b51_144944_200x150_fit_box_3.png" width="160" height="150" alt="Traefik" title="Traefik"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-2_huaf1df74fbd86c4da2a3168542bc294a4_157667_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Traefik"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-2_huaf1df74fbd86c4da2a3168542bc294a4_157667_200x150_fit_box_3.png" width="160" height="150" alt="Traefik" title="Traefik"  class="lozad "></a></p>
<figcaption>Consolas de administración de Consul, Nomad y Traefik</figcaption>
</figure>
</div>
<p>El código del servicio, del cliente implementados con Spring y la salida del cliente son los siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@RestController</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracing</span> <span class="n">tracing</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracer</span> <span class="n">tracer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Counter</span> <span class="n">counter</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">(</span><span class="n">MeterRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">counter</span> <span class="o">=</span> <span class="n">Counter</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">&#34;service.invocations&#34;</span><span class="o">).</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;Total service invocations&#34;</span><span class="o">).</span><span class="na">register</span><span class="o">(</span><span class="n">registry</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">counter</span><span class="o">.</span><span class="na">increment</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Timeout simulation&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//Thread.sleep(random.nextInt(4000));&#10;</span><span class="c1"></span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TraceContext</span><span class="o">.</span><span class="na">Extractor</span><span class="o">&lt;</span><span class="n">HttpServletRequest</span><span class="o">&gt;</span> <span class="n">extractor</span> <span class="o">=</span> <span class="n">tracing</span><span class="o">.</span><span class="na">propagation</span><span class="o">().</span><span class="na">extractor</span><span class="o">((</span><span class="n">HttpServletRequest</span> <span class="n">carrier</span><span class="o">,</span> <span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">carrier</span><span class="o">.</span><span class="na">getHeader</span><span class="o">(</span><span class="n">key</span><span class="o">);</span> <span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Span</span> <span class="n">span</span> <span class="o">=</span> <span class="n">tracer</span><span class="o">.</span><span class="na">nextSpan</span><span class="o">(</span><span class="n">extractor</span><span class="o">.</span><span class="na">extract</span><span class="o">(</span><span class="n">request</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service Span (traceId: %s, spanId: %s)%n&#34;</span><span class="o">,</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (url: %s, remoteAddress_%s, localAddress: %s, traceId: %s, spanId: %s, key: %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">(),</span> <span class="n">request</span><span class="o">.</span><span class="na">getLocalAddr</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProxyService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracing</span> <span class="n">tracing</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracer</span> <span class="n">tracer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">CircuitBreakerConfig</span> <span class="n">circuitBreakerConfiguration</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TimeLimiterConfig</span> <span class="n">timeLimiterConfiguration</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">HttpClient</span> <span class="n">client</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">ProxyService</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">circuitBreakerConfiguration</span> <span class="o">=</span> <span class="n">CircuitBreakerConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">failureRateThreshold</span><span class="o">(</span><span class="n">50</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">recordExceptions</span><span class="o">(</span><span class="n">IOException</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">TimeoutException</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">timeLimiterConfiguration</span> <span class="o">=</span> <span class="n">TimeLimiterConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">timeoutDuration</span><span class="o">(</span><span class="n">Duration</span><span class="o">.</span><span class="na">ofMillis</span><span class="o">(</span><span class="n">2500</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">cancelRunningFuture</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">client</span> <span class="o">=</span> <span class="n">HttpClient</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">().</span><span class="na">version</span><span class="o">(</span><span class="n">HttpClient</span><span class="o">.</span><span class="na">Version</span><span class="o">.</span><span class="na">HTTP_2</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;traefik&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">resource</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s%s&#34;</span><span class="o">,</span> <span class="n">uri</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="s">&#34;127.0.0.1&#34;</span><span class="o">,</span> <span class="s">&#34;traefik&#34;</span><span class="o">),</span> <span class="s">&#34;/service&#34;</span><span class="o">);</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">r</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span> <span class="o">=</span> <span class="n">HttpRequest</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="k">new</span> <span class="n">URI</span><span class="o">(</span><span class="n">resource</span><span class="o">)).</span><span class="na">GET</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getFallback</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">final</span> <span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">request</span> <span class="o">=</span> <span class="n">r</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Span</span> <span class="n">span</span> <span class="o">=</span> <span class="n">tracer</span><span class="o">.</span><span class="na">newTrace</span><span class="o">().</span><span class="na">start</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TraceContext</span><span class="o">.</span><span class="na">Injector</span><span class="o">&lt;</span><span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span><span class="o">&gt;</span> <span class="n">injector</span> <span class="o">=</span> <span class="n">tracing</span><span class="o">.</span><span class="na">propagation</span><span class="o">().</span><span class="na">injector</span><span class="o">((</span><span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">carrier</span><span class="o">,</span> <span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">String</span> <span class="n">value</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="n">carrier</span><span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">value</span><span class="o">);</span> <span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">injector</span><span class="o">.</span><span class="na">inject</span><span class="o">(</span><span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">(),</span> <span class="n">request</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Client Span (traceId: %s, spanId: %s)%n&#34;</span><span class="o">,</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CircuitBreaker</span> <span class="n">circuitBreaker</span> <span class="o">=</span> <span class="n">CircuitBreaker</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;resilience4jCircuitBreakerProxyService&#34;</span><span class="o">,</span> <span class="n">circuitBreakerConfiguration</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TimeLimiter</span> <span class="n">timeLimiter</span> <span class="o">=</span> <span class="n">TimeLimiter</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">timeLimiterConfiguration</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Supplier</span><span class="o">&lt;</span><span class="n">CompletableFuture</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">get</span> <span class="o">=</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span> &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpResponse</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">build</span><span class="o">(),</span> <span class="n">HttpResponse</span><span class="o">.</span><span class="na">BodyHandlers</span><span class="o">.</span><span class="na">ofString</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getFallback</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getLimiter</span> <span class="o">=</span> <span class="n">TimeLimiter</span><span class="o">.</span><span class="na">decorateFutureSupplier</span><span class="o">(</span><span class="n">timeLimiter</span><span class="o">,</span> <span class="n">get</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getCircuitBreaker</span> <span class="o">=</span> <span class="n">CircuitBreaker</span><span class="o">.</span><span class="na">decorateCallable</span><span class="o">(</span><span class="n">circuitBreaker</span><span class="o">,</span> <span class="n">getLimiter</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">getCircuitBreaker</span><span class="o">::</span><span class="n">call</span><span class="o">).</span><span class="na">recover</span><span class="o">((</span><span class="n">throwable</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">getFallback</span><span class="o">()).</span><span class="na">get</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProxyService.java</span>
    </div>
</div>
<p>Como hay 2 instancias del servicio y Traefik realiza balanceo de carga utilizando el algoritmo <em>round robbin</em> se observa en la salida con las respuestas que la dirección IP que ha atendido la petición es alternativamente una de las dos instancias del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">...&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 63afa4d0cd4f466c, spanId: 4719dfcc16b6104e, key: value)&#10;Client Span (traceId: 57eeaa436aa09238, spanId: 57eeaa436aa09238)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: 57eeaa436aa09238, spanId: 26dc213be2d933ac, key: value)&#10;Client Span (traceId: 23c748bf222052a6, spanId: 23c748bf222052a6)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 23c748bf222052a6, spanId: 0404d949c6e04c18, key: value)&#10;Client Span (traceId: c45d66a4ec9cf14c, spanId: c45d66a4ec9cf14c)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: c45d66a4ec9cf14c, spanId: e7f6ccf2efb8234b, key: value)&#10;Client Span (traceId: 2fdb3b71a682d2e6, spanId: 2fdb3b71a682d2e6)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 2fdb3b71a682d2e6, spanId: 24ac2a8d2bfb1e6e, key: value)&#10;Client Span (traceId: a33b010e02709c6a, spanId: a33b010e02709c6a)&#10;Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: a33b010e02709c6a, spanId: 0abe6074fc277af6, key: value)&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En un momento posterior si surge la necesidad de querer desplegar una nueva versión del microservicio basta con generar de nuevo el artefacto del microservicio, cambiando la versión en el archivo <em>build.gradle</em>. El despliegue de la nueva versión se realizan mediante la estrategia <em>canary</em>, manteniendo las instancias con la versión anterior del servicio y añadiendo una nueva con la nueva versión. Si se descubre algún error en la instancia <em>canary</em> se puede revertir el estado a la versión anterior, que consiste en detener la instancia <em>canary</em>. Una vez se comprueba que la instancia con la nueva versión funciona correctamente analizando sus trazas y métricas se envía la order a Nomad de promocionar las instancias de forma progresiva con la versión antigua a la nueva versión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job run nomad/service.nomad&#10;$ nomad job promote service&#10;$ nomad job revert service <span class="m">0</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-promote.sh</span>
    </div>
</div>
<p>El servicio exporta métricas en formato para Prometheus que con Grafana. Según se realizan peticiones al servicio el valor de métrica de contador de llamadas al servicio aumenta de forma progresiva.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl http://127.0.0.1:8093/service/actuator/prometheus <span class="p">|</span> grep <span class="s2">&#34;service.invocations&#34;</span>&#10;<span class="c1"># HELP service_invocations_total Total service invocations</span>&#10;<span class="c1"># TYPE service_invocations_total counter</span>&#10;service_invocations_total 20.0&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service-prometheus.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudConsulNomadTraefik">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./run.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/</id>
        <title>Guía de inicio del gestor de terminales y sesiones tmux</title>
        <updated>2019-10-04T18:00:00+02:00</updated>
        <published>2019-10-04T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las personas que usan de forma intensiva la terminal seguramente usando un multiplexador de terminales como tmux su trabajo es facilitado. Tmux permite dividir una terminal en paneles, ventanas independiente y sesiones. Usando sus múltiples combinaciones de teclas se divide una terminal o una ventana de forma horizontal y vertical en paneles del tamaño que se desee pudiendo de esta forma visualizar al mismo tiempo varias terminales ubicadas en cada panel. También se puede crear una configuración para iniciar tmux con la misma disposición de paneles, ventanas y sesiones.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Las terminales gráficas como <a href="https://www.gnome.org/">GNOME</a> Terminal y <a href="https://www.kde.org/">KDE</a> Konsole soportan pestañas e incluso desde un entorno gráfico en GNU/Linux están disponibles según la distribución varias terminales de texto accesibles con la combinación de teclas <kbd>Ctrl+Alt+F3</kbd> y <kbd>Ctrl+Alt+F4</kbd>, con <kbd>Ctrl+Alt+F2</kbd> se puede retornar a la interfaz gráfica. Sin embargo, ninguna de estas opciones permite dividir la misma terminal en varias ventanas o paneles para realizar operaciones y ver los resultados al mismo tiempo. Por otro lado cuando realizamos una sesión SSH y esta finaliza o termina abruptamente por un fallo en la conexión los procesos que se hayan iniciado desde ella son terminados lo que es especialmente grave si se está realizando una operación importante que puede ocasionar problemas.</p>
<p><a href="https://github.com/tmux/tmux/wiki">Tmux</a> es un multiplexador de terminales con soporte para iniciar sesiones. Con tmux en una misma terminal o sesión SSH es posible dividirla en varios paneles y ventanas. También permite iniciar sesiones y salir de ellas sin que los procesos que están corriendo sean terminados lo que permite iniciar una sesión por ejemplo en el trabajo, dejarla suspendida y luego continuarla desde otro equipo, ubicación o ser iniciada por una persona y continuada por otra.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/images/tmux_hu77ea831290e4496781697c4e09451f28_32101_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Sesión de tmux en la terminal de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/images/tmux_hu77ea831290e4496781697c4e09451f28_32101_300x200_fit_box_3.png" width="300" height="166" alt="Sesión de tmux en la terminal de GNOME" title="Sesión de tmux en la terminal de GNOME"  class="lozad "></a></p>
<figcaption>Sesión de tmux en la terminal de GNOME</figcaption>
</figure>
</div>
<p>Tmux al ser un programa de la terminal todas sus opciones se realizan con el teclado, y no son pocas <a href="https://tmuxcheatsheet.com/">las combinaciones de teclas de su <em>cheatsheet</em> o chuleta</a>. Algunas opciones básicas necesario conocer con son:</p>
<ul>
<li>Dividir una terminal en paneles verticales y horizontales, <kbd>Ctrl-b &ldquo;</kbd>, <kbd>Ctrl-b %</kbd>.</li>
<li>Cambiar entre paneles, <kbd>Ctrl-b q 0..9</kbd>.</li>
<li>Cambiar tamaño de un panel, <kbd>Ctrl-b Up</kbd>, <kbd>Ctrl-b Down</kbd>, <kbd>Ctrl-b Left</kbd>, <kbd>Ctrl-b Right</kbd>. Una panel se maximiza y minimiza con <kbd>Ctrl-b z</kbd>.</li>
<li>Cerrar un panel, <kbd>Ctrl-b x</kbd>.</li>
<li>Cerrar una sesión <kbd>Ctrl-b :, kill-session</kbd>.</li>
<li>Crear, moverse a otra ventana y cerrar una ventana, <kbd>Ctrl-b c</kbd>, <kbd>Ctrl-b 0..9</kbd>, <kbd>Ctrl-b ,</kbd>.</li>
<li>Hacer <em>scroll</em> en las ventanas, <kbd>Ctrl-b [</kbd>.</li>
</ul>
<p>Para facilitar un poco su uso y poder cambiar entre paneles y hacer <em>scroll</em> si se usa en un entorno gráfico se pueden habilitar las funciones del ratón. Basta editar el archivo de configuración <em>~/.tmux.conf</em> o introducir la opción con <kbd>Ctrl-b :</kbd>. En un entorno gráfico habilitar el soporte para el ratón cambia el comportamiento de copiar y pegar, para seleccionar texto hay que hacer uso de la tecla <kbd>Shift</kbd> a la vez que se selecciona el texto con el botón izquierdo del ratón.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">set-option -g mouse on&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tmux.conf</span>
    </div>
</div>
<p>Para automatizar la configuración inicial de tmux soporta un archivo para personalizarlo a través de un <em>script</em> con comandos. Así por ejemplo si siempre se desea una misma configuración de paneles y ventanas con la misma disposición es posible realizarlo con un <em>script</em> como el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>tmux new-session -s <span class="s2">&#34;Session&#34;</span> -d&#10;tmux set-option -g mouse on&#10;tmux split-window -h&#10;tmux split-window -v&#10;tmux attach-session -t <span class="s2">&#34;Session&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tmux.sh</span>
    </div>
</div>
<p>En el <a href="http://man.openbsd.org/OpenBSD-current/man1/tmux.1">manpage de tmux</a> y los enlaces de referencia hay guías con una lista más completa que las operaciones básicas que incluyo en este artículo.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/gmjyMxezIWU" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://robots.thoughtbot.com/a-tmux-crash-course">A tmux Crash Course</a></li>
<li><a href="http://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/">A Quick and Easy Guide to tmux</a></li>
<li><a href="https://www.linode.com/docs/networking/ssh/persistent-terminal-sessions-with-tmux/">How to Use tmux the Terminal Multiplexer</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Tmux">Archlinux Wiki tmux</a></li>
<li><a href="https://leanpub.com/the-tao-of-tmux/read">The Tao of tmux</a></li>
<li><a href="http://www.sromero.org/wiki/linux/aplicaciones/tmux">tmux: Multiplexador de terminal</a></li>
<li><a href="https://askubuntu.com/questions/830484/how-to-start-tmux-with-several-panes-open-at-the-same-time">How to start tmux with several panes open at the same time?</a></li>
<li><a href="https://superuser.com/questions/209437/how-do-i-scroll-in-tmux#209608">How do I scroll in tmux?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/</id>
        <title>Generar credenciales de conexión a base de datos bajo demanda con Vault</title>
        <updated>2019-08-15T09:00:00+02:00</updated>
        <published>2019-08-15T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Una de las funcionalidades proporcionada por Vault es generar credenciales dinámicas para la conexión a bases de datos. Generar las credenciales de forma dinámica proporciona varios beneficios: no hay unas credenciales que usen las aplicaciones que tengan un tiempo de vida indefinido, las aplicaciones no necesitan guardar en su configuración las credenciales, las credenciales se rotan de forma automática y los permisos para obtenerlas se pueden revocar de forma centralizada con Vault para cuales quiera bases de datos que se utilicen. Soporta las bases de datos más populares entre ellas PostgreSQL.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="206" alt="PostgreSQL" title="PostgreSQL"  class=""></p>
</div>
<p>Las base de datos para proteger los datos realizan autenticación del usuario que se conecta. Normalmente utilizando un usuario y contraseña, una vez autenticado el usuario mediante permisos se realiza la autorización de las operaciones que puede realizar, a que bases de datos se puede conectar, que tablas puede acceder y que operaciones puede realizar.</p>
<p>Este modelo de autenticación tiene algunos inconvenientes. Uno de los inconvenientes es que los usuarios y contraseñas para mayor seguridad han de cambiarse con cierta frecuencia para evitar que si las credenciales quedan comprometidas no puedan utilizarse indefinidamente. Otro problema es que cada aplicación ha de conocer las credenciales de la base de datos, esto hace que haya múltiples posibilidades de que las credenciales queden comprometidas. Por otro lado el uso de las credenciales no queda registrado de forma centralizada que es necesario para saber ante una brecha de seguridad qué datos han sido accedidos y por quien.</p>
<p>La herramienta <a href="https://www.vaultproject.io/">Vault</a> de <a href="https://www.hashicorp.com/">HashiCorp</a> da solución a estos problemas generando credenciales de acceso a las bases de datos de forma dinámica, bajo demanda y con un tiempo de concesión limitado. Las credenciales tiene un tiempo de vida limitado si no se renueva su concesión y la generación de las credenciales queda registrado. La forma que tiene Vault de generar credenciales de forma dinámica en una base de datos relacional como <a href="https://www.postgresql.org/">PostgreSQL</a> es conectarse a la base de datos con un usuario con permisos para generarlas y ejecutar una sentencia SQL que crea las credenciales.</p>
<p>Para permitir a Vault generar credenciales de conexión hay que activar el <em>backend</em> de bases de datos, configurarlo con la sentencia SQL que se utilizará para generar las credenciales y crear el rol de Vault que genera las credenciales cuando se le solicite. En este ejemplo se muestra para la base de datos PostgreSQL pero Vault también soporta otras bases de datos como <a href="https://www.mysql.com/">MySQL</a>. En el ejemplo la base de datos PostgreSQL se ejecuta en un contenedor de <a href="https://www.docker.com/">Docker</a> en el que se asignan el usuario y contraseña del usuario <em>root</em> que utiliza Vault para generar las credenciales de forma dinámica.</p>
<p>Con las siguientes comandos se inicia <a href="https://www.consul.io/">Consul</a> y Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev&#10;<span class="o">==</span>&gt; Starting Consul agent...&#10;<span class="o">==</span>&gt; Consul agent running!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: <span class="s1">&#39;v1.5.0&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID: <span class="s1">&#39;38d4f541-0958-6d7d-d49e-a31a15987286&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node name: <span class="s1">&#39;archlinux&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Datacenter: <span class="s1">&#39;dc1&#39;</span> <span class="o">(</span>Segment: <span class="s1">&#39;&lt;all&gt;&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span> <span class="o">(</span>Bootstrap: <span class="nb">false</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Client Addr: <span class="o">[</span>127.0.0.1<span class="o">]</span> <span class="o">(</span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  Cluster Addr: 127.0.0.1 <span class="o">(</span>LAN: 8301, WAN: 8302<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev -config vault.hcl&#10;<span class="o">==</span>&gt; Vault server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: consul <span class="o">(</span>HA available<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;&#10;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;and starts unsealed with a single unseal key. The root token is already&#10;authenticated to the CLI, so you can immediately begin using Vault.&#10;&#10;You may need to <span class="nb">set</span> the following environment variable:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;&#10;The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;seal/unseal the Vault or re-authenticate.&#10;&#10;Unseal Key: <span class="nv">jeW10eak6TxJzH2qFnwk7bWk7HcpDXd3KQOobi1rZTQ</span><span class="o">=</span>&#10;Root Token: s.0YRcRzojVcPG8LbbzyUd1MEA&#10;&#10;Development mode should NOT be used in production installations!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="n">ui</span> <span class="o">=</span> <span class="kt">true</span>&#10;&#10;<span class="k">storage</span> <span class="s2">&#34;consul&#34;</span> {&#10;<span class="n">  address</span> <span class="o">=</span> <span class="s2">&#34;127.0.0.1:8500&#34;</span>&#10;<span class="n">  path</span>  <span class="o">=</span> <span class="s2">&#34;vault&#34;</span>&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.hcl</span>
    </div>
</div>
<p>La base de datos se inicia en un contenedor de Docker, se crea una base de datos y una tabla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run -it -p <span class="s2">&#34;5432:5432&#34;</span> -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>postgres -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>postgres postgres:alpine&#10;$ docker ps &#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAMES&#10;2792b13c36c1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">3</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">3</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:5432-&gt;5432/tcp   distracted_keldysh&#10;$ docker <span class="nb">exec</span> -it 2792b13c36c1 bash&#10;bash-5.0# psql -U postgres&#10;psql <span class="o">(</span>11.4<span class="o">)</span>&#10;Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;&#10;<span class="nv">postgres</span><span class="o">=</span><span class="c1"># CREATE DATABASE app;</span>&#10;<span class="nv">postgres</span><span class="o">=</span><span class="c1"># \connect app</span>&#10;You are now connected to database <span class="s2">&#34;app&#34;</span> as user <span class="s2">&#34;postgres&#34;</span>.&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># CREATE TABLE product (</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bigint PRIMARY KEY,&#10;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;   varchar<span class="o">(</span>256<span class="o">)</span> NOT NULL&#10;<span class="o">)</span><span class="p">;</span>&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># \dt</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  List of relations&#10; Schema <span class="p">|</span>  Name   <span class="p">|</span> Type  <span class="p">|</span>  Owner   &#10;--------+---------+-------+----------&#10; public <span class="p">|</span> product <span class="p">|</span> table <span class="p">|</span> postgres&#10;<span class="o">(</span><span class="m">1</span> row<span class="o">)</span>&#10;$ docker inspect -f <span class="s1">&#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39;</span> 2792b13c36c1&#10;172.17.0.2</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql.sh</span>
    </div>
</div>
<p>En Vault hay que crear la configuración para conectarse a la base de datos y un rol que contiene la configuración para generar las credenciales y permitir obtenerlas, básicamente es un sentencia SQL con el nombre del usuario y contraseña, los permisos que se le asignan y el tiempo de concesión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span>http://127.0.0.1:8200&#10;$ vault login s.0YRcRzojVcPG8LbbzyUd1MEA&#10;$ vault secrets <span class="nb">enable</span> database</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-database.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault write database/config/app <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">plugin_name</span><span class="o">=</span>postgresql-database-plugin <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">allowed_roles</span><span class="o">=</span><span class="s2">&#34;app&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">connection_url</span><span class="o">=</span><span class="s2">&#34;postgresql://{{username}}:{{password}}@localhost:5432/?sslmode=disable&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">username</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span> <span class="se">\&#10;</span><span class="se"></span>   <span class="nv">password</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span>&#10;$ vault write database/roles/app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">db_name</span><span class="o">=</span>app <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">creation_statements</span><span class="o">=</span><span class="s2">&#34;CREATE ROLE \&#34;{{name}}\&#34; WITH LOGIN PASSWORD &#39;{{password}}&#39; VALID UNTIL &#39;{{expiration}}&#39;; GRANT SELECT ON ALL TABLES IN SCHEMA public TO \&#34;{{name}}\&#34;;&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">default_ttl</span><span class="o">=</span><span class="s2">&#34;1h&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">max_ttl</span><span class="o">=</span><span class="s2">&#34;24h&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-role.sh</span>
    </div>
</div>
<p>Las credenciales se generan en el momento de leer una propiedad de Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault <span class="nb">read</span> database/roles/app&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;creation_statements&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[</span>CREATE ROLE <span class="s2">&#34;{{name}}&#34;</span> WITH LOGIN PASSWORD <span class="s1">&#39;{{password}}&#39;</span> VALID UNTIL <span class="s1">&#39;{{expiration}}&#39;</span><span class="p">;</span> GRANT SELECT ON ALL TABLES IN SCHEMA public TO <span class="s2">&#34;{{name}}&#34;</span><span class="p">;</span><span class="o">]</span>&#10;db_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  app&#10;default_ttl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  1h&#10;max_ttl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  24h&#10;renew_statements&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">[]</span>&#10;revocation_statements&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[]</span>&#10;rollback_statements&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[]</span>&#10;$ vault <span class="nb">read</span> database/creds/app&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;lease_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   database/creds/app/rFFlNmpNoxezccTVh3WufZOT&#10;lease_duration&nbsp;&nbsp;&nbsp;&nbsp; 1h&#10;lease_renewable&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">true</span>&#10;password&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   A1a-6hRTGNaShFIEGLvp&#10;username&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-credentials.sh</span>
    </div>
</div>
<p>En PostgreSQL la conexión desde la máquina local se permiten sin necesidad de credenciales, para simular realizar la conexión desde otra máquina hay que iniciar otro contenedor. En la conexión se utilizan las credenciales que ha proporcionado Vault. Dado que se realiza una operación de red hay que desactivar el <em>firewall</em> del sistema o permitir la conexión al puerto de la base de datos que en PostgreSQL es el 5432 si fuera necesario. Listando los usuarios de la base de datos con el comando <em>\du</em> se muestra el creado por Vault y si tiempo de validez.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run -it postgres:alpine bash&#10;bash-5.0# <span class="nv">PGPASSWORD</span><span class="o">=</span>A1a-6hRTGNaShFIEGLvp psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app&#10;psql <span class="o">(</span>11.4<span class="o">)</span>&#10;Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;&#10;<span class="nv">app</span><span class="o">=</span>&gt; <span class="se">\d</span>t&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  List of relations&#10; Schema <span class="p">|</span>  Name   <span class="p">|</span> Type  <span class="p">|</span>  Owner   &#10;--------+---------+-------+----------&#10; public <span class="p">|</span> product <span class="p">|</span> table <span class="p">|</span> postgres&#10;<span class="o">(</span><span class="m">1</span> row<span class="o">)</span>&#10;<span class="nv">app</span><span class="o">=</span><span class="c1"># \du</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List of roles&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Role name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attributes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> Member of &#10;--------------------------------------------+------------------------------------------------------------+-----------&#10; postgres&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> Superuser, Create role, Create DB, Replication, Bypass RLS <span class="p">|</span> <span class="o">{}</span>&#10; v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 <span class="p">|</span> Password valid <span class="k">until</span> 2019-08-15 09:22:55+00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> <span class="o">{}</span>&#10;<span class="nv">app</span><span class="o">=</span>&gt; quit</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-connect.sh</span>
    </div>
</div>
<p>Si el usuario y contraseña no es correcto no se permite la conexión a la base de datos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">bash-5.0# <span class="nv">PGPASSWORD</span><span class="o">=</span>tampered psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app&#10;psql: FATAL:  password authentication failed <span class="k">for</span> user <span class="s2">&#34;v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370&#34;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-connect-fail.sh</span>
    </div>
</div>
<p>En las aplicaciones Java que utilizan <a href="https://spring.io/">Spring</a> el proyecto <a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a> proporciona las utilidades para simplificar en gran medida la obtención de las credenciales a la base de datos utilizando Vault.</p>
<p>Esto permite que únicamente Vault conozca la cuenta <em>root</em> de la base de datos o una con suficientes permisos para crear credenciales, las aplicaciones no almacenan en su configuración las credenciales para conectarse la base de datos solo las de Vault que le permiten obtener unas credenciales para la base de datos con un tiempo de vida limitado y que pueden revocarse desde Vault en caso de un problema de seguridad para cuales quiera bases de datos que se utilicen.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/">Introducción a la base de datos relacional PostgreSQL</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/</id>
        <title>Administrar secretos y proteger datos sensibles con Vault</title>
        <updated>2019-07-27T23:00:00+02:00</updated>
        <published>2019-07-27T18:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Herramientas de aprovisionamiento como Chef, Puppet y Ansible solucionan el problema de la seguridad de los secretos de forma similar, utilizando una única clave de cifrado. Los datos cifrados están siempre a un secreto (contraseña, clave, &hellip;) de ser descifrados y generalmente no está bien protegidos dado que en un entorno elástico cada servidor necesita disponer de este secreto para descifrar los datos. Adicionalmente el acceso a los datos cifrados no está registrado de modo que si hay una intrusión no está claro que dato ha sido accedido y por quien. Utilizar variables de entorno para proporcionar secretos tampoco es seguro, y en entornos Docker suele usarse.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>La seguridad es un aspecto muy importante de los sistemas informáticos, no darle la consideración necesaria puede dar lugar a caídas de servicio y robo de datos potencialmente ocasionando importantes pérdidas de dinero, sanciones y pérdida de confianza de los clientes y proveedores de una organización.</p>
<p>La seguridad se mantiene mediante mecanismos de autenticación identifican al solicitante solicitante, de autorización permitiendo realiza únicamente las acciones para las que se tienen permisos y mediante firma y cifrado para impedir la modificación de los datos y el acceso a la información sin las credenciales y autorización requerida.</p>
<p>La infraestructura informática de los sistemas actuales es cada vez más compleja por el número y tipo de las distintas de piezas que emplean como bases de datos, sistemas de mensajes u otros servicios, también por el aspecto efímero en la tendencia actual de microservicios como por la utilización de entornos en la nube con una infraestructura no confiable al estar fuera del control de una organización y estar compartida con otras organizaciones.</p>
<p>No es seguro utilizar archivos sin cifrar aún utilizando los permisos del sistema de archivos dado que una intrusión en el sistema posibilita el acceso al secreto. Cifrarlos los archivos es el mismo caso de herramientas como <a href="https://www.getchef.com/">Chef</a>, <a href="https://puppet.com/">Puppet</a> y <a href="https://www.ansible.com/">Ansible</a>. Utilizar variables de entorno para proporcionar secretos tampoco es seguro ya que aunque los secretos no están en el sistema de archivos se pueden inspeccionar las variables de entorno de un proceso.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ env <span class="p">|</span> grep SECRET&#10;$ docker inspect&#10;$ sudo cat /proc/<span class="nv">$pid</span>/environ</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>commands.sh</span>
    </div>
</div>
<p>Por otra parte las contraseñas y claves han de rotarse regularmente para limitar en el tiempo el acceso ante el filtrado de las credenciales en un sistema o para denegar el acceso a una persona que en algún momento haya tenido credenciales de acceso como un empleado que ya no pertenece a la compañía.</p>
<h3 id="vault">Vault</h3>
<p><a href="https://www.vaultproject.io/">Vault</a> es una herramienta para acceder de forma segura a secretos. Un secreto es cualquier cosa a la que se quiera tener severamente controlado como claves de API, contraseñas y certificados. Vault proporciona una interfaz para cualquier secreto a la vez que mantiene un control de acceso y un <em>log</em> de acceso detallado.</p>
<ul>
<li><a href="https://www.vaultproject.io/docs/what-is-vault/index.html">Introduction to Vault</a></li>
<li><a href="https://www.vaultproject.io/docs/use-cases/index.html">Use Cases</a></li>
</ul>
<p>Las características principales de Vault se engloban en tres aspectos de la seguridad: cifrado, control de acceso y ciclo de vida.</p>
<ul>
<li>Almacenamiento seguro de secretos: se pueden almacenar secretos arbitrarios clave/valor. Los secretos son cifrados previamente a ser almacenados en el almacenamiento persistente de modo que obtener acceso al almacenamiento persistente no es suficiente para acceder a los secretos. Vault puede almacenar los secretos en disco, <a href="https://www.consul.io/">Consul</a> y más.</li>
<li>Secretos dinámicos: puede <a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">generar secretos bajo demanda para bases de datos</a> o algunos sistemas como AWS. Por ejemplo, cuando una aplicación necesita acceso a una base de datos SQL solicita a Vault unas credenciales, Vault genera unas credenciales con los permisos adecuados. Después de crear estos secretos dinámicos también los revoca automáticamente una vez pasado su tiempo de concesión.</li>
<li>Cifrado de datos: puede <a href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/">cifrar y descifrar datos sin almacenarlos</a>. Esto permite definir parámetros de seguridad y los desarrolladores almacenar los datos cifrados en localizaciones como bases de datos sin tener que diseñar sus propios métodos de cifrado.</li>
<li>Concesión y renovación: todos los secretos en Vault tienen un tiempo de concesión asociado. Al finalizar la concesión Vault los revoca automáticamente, los clientes pueden solicitar renovar las concesiones mediante las API disponibles de Vault.</li>
<li>Revocación: integra la funcionalidad de revocación, no solo secretos individuales sino jerarquías de secretos. La revocación asiste en la rotación de las claves así como cerrar el sistema en caso de intrusión.</li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/VYfl-DpZ5wM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/NxL2-XuZ3kc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="conceptos">Conceptos</h3>
<p>Los motores de secretos son uno de los conceptos en el ámbito de Vault. Son componentes que permite almacenar, generar o cifrar datos. Algunos motores de secretos simplemente almacenan y leen datos, otros se conectan a otros servicios y generan credenciales dinámicamente bajo demanda. Otros motores de secretos proporcionan el cifrado como servicio, <em>tokens</em> de un solo uso, certificados y mucho más.</p>
<ul>
<li><a href="https://www.vaultproject.io/api/secret/index.html">Secrets Engines</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/kv/index.html">KV Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/databases/index.html">Databases Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/rabbitmq/index.html">RabbitMQ Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/pki/index.html">PKI Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/ssh/index.html">SSH Secrets Engine</a></li>
</ul>
<p>Otro concepto es la <a href="https://www.vaultproject.io/docs/auth/index.html">autenticación</a>. Permiten realizar la autenticación y son responsables de asignar una identidad y un conjunto de <em>policies</em> a un usuario. Por ejemplo, para los desarrolladores el método de autenticación de GitHub es fácil de usar pero para servidores el método <em>AppRole</em> es el recomendado</p>
<p>Los secretos necesitan <a href="https://www.vaultproject.io/docs/configuration/storage/index.html">almacenamiento</a>. Algunos tipos de almacenamiento son mejores para la alta disponibilidad y otros facilitan la copia de seguridad y la restauración. Puede ser en memoria, sistema de archivos, una herramienta como Consul o varias bases de datos entre ellas bases de datos relacionales.</p>
<p>La <a href="https://www.vaultproject.io/docs/audit/index.html">auditoria</a> permite obtener una trazabilidad de las operaciones que se han realizado, dado que todas las operaciones se realizan mediante una API el <em>log</em> de auditoría es simplemente cada interacción autenticada con Vault, incluidas los errores. Puede ser un archivo o un <em>socket</em>.</p>
<p>Todo en Vault está basado en <em>paths</em>. Las <a href="https://www.vaultproject.io/docs/concepts/policies.html"><em>policies</em></a> permiten o deniegan el acceso a ciertos <em>paths</em>.  Poseen la siguiente sintaxis, donde las <em>capabilities</em> son las operaciones CRUD permitidas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="k">path</span> <span class="s2">&#34;secret/*&#34;</span> {&#10;<span class="n">  capabilities</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;create&#34;, &#34;read&#34;, &#34;update&#34;, &#34;delete&#34;, &#34;list&#34;</span><span class="p">]</span>&#10;}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>policy.hcl</span>
    </div>
</div>
<h3 id="instalación-y-un-caso-de-uso">Instalación y un caso de uso</h3>
<p>La <a href="https://www.vaultproject.io/docs/install/index.html">instalación de Vault</a> es muy sencilla ya que es un único binario sin más dependencias. En una distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> estará en los repositorios oficiales. En <a href="https://www.archlinux.org/">Arch Linux</a> se instala con el comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -S vault&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.sh</span>
    </div>
</div>
<p>En el siguiente ejemplo en modo desarrollo de uso de Vault se inicia, se realiza la autenticación con el <em>token</em> <em>root</em> de superusuario y se crea un secreto. Aquí solo se muestra el caso de uso de guardar y recuperar secretos, otros son generar credenciales para conectarse a una base de datos y proporcionar cifrado y descifrado como servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vault server -dev&#10;<span class="o">==</span>&gt; Vault server configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: inmem&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;&#10;WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;and starts unsealed with a single unseal key. The root token is already&#10;authenticated to the CLI, so you can immediately begin using Vault.&#10;&#10;You may need to <span class="nb">set</span> the following environment variable:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;&#10;The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;seal/unseal the Vault or re-authenticate.&#10;&#10;Unseal Key: <span class="nv">R6MKrMxcJtTTUuIjeQjwDxnv4sHbKtjmuRn0Fok98zk</span><span class="o">=</span>&#10;Root Token: s.hQoeIivTHHgl1AtsoVz1UF1G&#10;&#10;Development mode should NOT be used in production installations!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;$ vault kv put secret/key <span class="nv">key</span><span class="o">=</span>s3cr3t&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;created_time&nbsp;&nbsp;&nbsp;&nbsp; 2019-07-27T17:30:29.559274833Z&#10;deletion_time&nbsp;&nbsp;&nbsp;&nbsp;n/a&#10;destroyed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="m">1</span>&#10;$ vault kv get secret/key&#10;<span class="o">======</span> <span class="nv">Metadata</span> <span class="o">======</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;created_time&nbsp;&nbsp;&nbsp;&nbsp; 2019-07-27T17:30:29.559274833Z&#10;deletion_time&nbsp;&nbsp;&nbsp;&nbsp;n/a&#10;destroyed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nv">1</span>&#10;&#10;<span class="o">===</span> <span class="nv">Data</span> <span class="o">===</span>&#10;Key&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;---&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;key&nbsp;&nbsp;&nbsp;&nbsp;s3cr3t</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>secret.sh</span>
    </div>
</div>
<p>Vault al igual que otras de las herramientas de <a href="https://www.hashicorp.com/">HashiCorp</a> como Consul y <a href="https://www.nomadproject.io/">Nomad</a> posee una interfaz gráfica accesible mediante el navegador que permite realizar las mismas operaciones que a través de la API o desde la linea de comandos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Interfaz gráfica de Vault"><img src="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_300x200_fit_box_3.png" width="300" height="188" alt="Interfaz gráfica de Vault" title="Interfaz gráfica de Vault"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_300x200_fit_box_3.png" width="300" height="188"  class="lozad "></a></p>
<figcaption>Interfaz gráfica de Vault</figcaption>
</figure>
</div>
<p>Vault a igual que otras de las herramientas de HashiCorp tiene una muy buena documentación en formato de <a href="https://learn.hashicorp.com/vault">guía</a> y en formato de <a href="https://www.vaultproject.io/docs/">documentación</a>. En una aplicación Java el proyecto <a href="https://spring.io/">Spring</a> facilita su uso con <a href="https://projects.spring.io/spring-vault/">Spring Vault</a> y <a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/vault">An Intro to Vault</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/</id>
        <title>Comprobar la seguridad de un sitio web que use SSL/TLS</title>
        <updated>2019-06-23T12:00:00+02:00</updated>
        <published>2019-06-23T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Aunque un sitio web no trate datos sensibles como tarjetas de crédito o datos personales es muy recomendable que use el protocolo seguro HTTPS para proporcionar cifrado entre el servidor y el navegador del usuario para dotar de confidencialidad a las comunicaciones a la vez que evitar modificaciones por terceras personas de los datos transmitidos. Además, el buscador Google lo tiene en cuenta para el SEO o posicionamiento en su buscador.</p>
<p>Para usar HTTPS lo difícil era conseguir un certificado firmado por una autoridad de confianza que los navegadores tengan instalada, la obtención y renovación de un certificado tenía un coste. Desde hace un tiempo la autoridad <a href="https://letsencrypt.org/">Let’s encrypt</a> emite certificados digitales gratuitamente que proporciona uno en pocos minutos y de forma automatizada incluida la renovación para usar un protocolo seguro. <a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/">Usar un certificado de Let’s encrypt en el servidor web nginx</a> no es complicado.</p>
<p>Sin embargo, usar HTTPS simplemente no es suficiente y ha de configurarse el servidor web para que utilice algoritmos de cifrado fuertes y que no tengan problemas seguridad conocidos o hoy estén ya considerados débiles. Para analizar el nivel de seguridad proporcionado en las conexiones HTTPS de un servidor web se puede utilizar la herramienta <a href="https://www.ssllabs.com/">Qualys SSL Labs</a>. Por ejemplo, analizando la seguridad del protocolo HTTPS ofrecido por <a href="https://pages.github.com/">GitHub Pages</a> basta con introducir el dominio a analizar.</p>
<p>El informe que proporciona incluye información sobre el certificado del servidor entre ella su tiempo de validez y fecha de expiración, y si es de confianza para los navegadores y plataformas como Mozilla, Apple, Android, Java o Windows. Los datos de configuración como protocolos soportados, <em>cipher suites</em> y una simulación de <em>handshake</em> con una gran variedad de versiones de navegadores en diferentes plataformas y versiones incluyendo dispositivos móviles y de escritorio que permite conocer si algún dispositivo pudiera tener algún problema con la configuración de TLS en la conexión, también otros detalle del protocolo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/images/ssllabs_hu45897026cba3d1771fd184de0c40861a_124032_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Informe de seguridad TLS"><img src="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/images/ssllabs_hu45897026cba3d1771fd184de0c40861a_124032_650x450_fit_box_3.png" width="373" height="450" alt="Informe de seguridad TLS" title="Informe de seguridad TLS"  class="lozad "></a></p>
<figcaption>Informe de seguridad TLS</figcaption>
</figure>
</div>
<p>La herramienta proporciona una nota entre A y F siendo la A la mejor calificación posible. Como se observa en la captura para GitHub Pages la herramienta proporciona una calificación de A.</p>
<p>Hay múltiples combinaciones de algoritmos de cifrado o <em>cipher suites</em> usados en una conexión SSL/TLS. La primera parte de los siguientes se refieren a TLS, está el tamaño de la clave y el modo y el algoritmo de autenticación del mensaje. Algunas recomendaciones de uso es usar tamaños de clave de más de 128 bits, evitar usar RC4, DES y 3DES, preferir ECDHE y DHE ya que ofrecen <em>forward secrecy</em> que protege las comunicaciones pasadas aún habiéndose comprometida la clave privada del servidor.</p>
<ul>
<li>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_DHE_DSS_WITH_AES_256_CBC_SHA256</li>
<li>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_DHE_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_DHE_DSS_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</li>
</ul>
<p>Y algunas propiedades de los servidores web <a href="https://httpd.apache.org/">Apache HTTP</a> y <a href="https://nginx.org/">nginx</a> que afectan a los algoritmos de cifrado soportados son las siguientes. Algunos navegadores antiguos puede que no soporten los últimos algoritmos de cifrado por lo que hay que permitir en el servidor web unos que sean considerados como seguros pero que también soporten los navegadores de los usuarios del sitio web.</p>
<ul>
<li><a href="https://httpd.apache.org/docs/current/mod/mod_ssl.html">Apache Module mod_ssl</a></li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html">Nginx Module ngx_http_ssl_module</a></li>
</ul>
<p>Uan vez configurada la seguridad con TLS/SSL es recomendable <a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/">redirigir el tráfico del protocolo HTTP no seguro al protocolo HTTPS seguro</a>.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/pruebas-de-carga-y-rendimiento-de-un-servicio-web-con-apache-bench/</id>
        <title>Pruebas de carga y rendimiento de un servicio web con Apache Bench</title>
        <updated>2019-06-14T17:00:00+02:00</updated>
        <published>2019-06-14T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/pruebas-de-carga-y-rendimiento-de-un-servicio-web-con-apache-bench/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En algunos que un servicio devuelva los datos esperados no es suficiente, otros requisitos no funcionales o de términos de servicio son que sus tiempos de respuesta sean menores al especificado en sus requisitos, que sea capaz de soportar cierto número de peticiones concurrentes o de atender un número de peticiones por minuto. Para asegurar que el servicio es capaz de cumplir estos requisitos funcionales hay que utilizar herramientas que permitan evaluar su desempeño, una de ellas muy fácil de utilizar y que proporciona valiosa información es Apache Bench.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache.svg" width="200" height="353" alt="Apache" title="Apache"  class=""></p>
</div>
<p>Para hacer pruebas de carga o medir el rendimiento de cualquier servicio que funcione mediante el protocolo HTTP hay multitud de herramientas. Una de las más sencillas de utilizar y con un informe con información interesante es <a href="https://httpd.apache.org/docs/current/programs/ab.html">Apache Bench</a> o simplemente <em>ab</em>. Este comando se puede utilizar con simplemente tres parámetros el <em>endpoint</em> a probar, el número de peticiones en total a realizar (<em>-n</em>) y cuantas peticiones concurrentes al mismo tiempo (<em>-c</em>). Otos parámetros son los datos POST a enviar, cabeceras (<em>-H</em>) y <em>cookies</em> (<em>-C</em>) de las peticiones, tiempos de <em>timeout</em> (<em>-s</em>) o certificado de cliente (<em>-E</em>) entre algunos otros. En vez limitar las pruebas a un número de peticiones las pruebas se pueden limitar a un tiempo determinado por ejemplo 60 segundos (<em>-t</em>).</p>
<p>Es una herramienta que se utiliza para medir el rendimiento de el servidor Apache pero utilizable para cualquier otro servicio por ejemplo una web o una API REST o <a href="https://graphql.org/">GraphQL</a>. Está disponible por supuesto para <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> pero también para <a href="https://www.apple.com/macos/">macOS</a> y para <a href="https://www.microsoft.com/es-es/windows/">Windows</a>.</p>
<p>Si quisiese medir el rendimiento en mi blog alojado en <a href="https://pages.github.com/">GitHub Pages</a> podría hacerlo lanzando 1000 peticiones para que sea una muestra suficientemente amplia con 20 usuarios de forma concurrente que son los que en los momentos de más tráfico tiene mi blog. Mi conexión de internet es un ADSL que no llega a 1 MB/s de subida por lo que la conexión en cierta medida limite el test.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ab -n <span class="m">1000</span> -c <span class="m">20</span> https://picodotdev.github.io/blog-bitix/&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ab.sh</span>
    </div>
</div>
<p>El informe de resultado que ofrece <em>ab</em> al finalizar la prueba incluye el tiempo dedicado en la conexión, en el procesado, esperando y en total con los valores para cada uno de ellos con mínimo y máximo, de media y la mediana. El tiempo total empleado por la prueba, el protocolo SSL/TLS usado, los bytes devueltos en la petición, el número de peticiones servidas por segundo, el tiempo de media empleado de media por cada petición y de media teniendo en cuenta la concurrencia, la tasa de transferencia en la respuesta y finalmente el tiempo de respuesta según percentil que van que desde el 50 al 100, es decir, que el 50% de las peticiones se han respondido en el tiempo en milisegundos indicado. Si las hubiera también muestra las peticiones fallidas y las que han devuelto un código de respuesta distinto de 200.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">This is ApacheBench, Version 2.3 &lt;$Revision: 1843412 $&gt;&#10;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&#10;Licensed to The Apache Software Foundation, http://www.apache.org/&#10;&#10;Benchmarking picodotdev.github.io (be patient)&#10;Completed 100 requests&#10;Completed 200 requests&#10;Completed 300 requests&#10;Completed 400 requests&#10;Completed 500 requests&#10;Completed 600 requests&#10;Completed 700 requests&#10;Completed 800 requests&#10;Completed 900 requests&#10;Completed 1000 requests&#10;Finished 1000 requests&#10;&#10;&#10;Server Software:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GitHub.com&#10;Server Hostname:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picodotdev.github.io&#10;Server Port:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;443&#10;SSL/TLS Protocol:&nbsp;&nbsp;&nbsp;&nbsp;   TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128&#10;Server Temp Key:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X25519 253 bits&#10;TLS Server Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picodotdev.github.io&#10;&#10;Document Path:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  /blog-bitix/&#10;Document Length:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;28389 bytes&#10;&#10;Concurrency Level:&nbsp;&nbsp;&nbsp;&nbsp;  20&#10;Time taken for tests:   29.220 seconds&#10;Complete requests:&nbsp;&nbsp;&nbsp;&nbsp;  1000&#10;Failed requests:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&#10;Total transferred:&nbsp;&nbsp;&nbsp;&nbsp;  29007394 bytes&#10;HTML transferred:&nbsp;&nbsp;&nbsp;&nbsp;   28389000 bytes&#10;Requests per second:&nbsp;&nbsp;&nbsp;&nbsp;34.22 [#/sec] (mean)&#10;Time per request:&nbsp;&nbsp;&nbsp;&nbsp;   584.404 [ms] (mean)&#10;Time per request:&nbsp;&nbsp;&nbsp;&nbsp;   29.220 [ms] (mean, across all concurrent requests)&#10;Transfer rate:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  969.45 [Kbytes/sec] received&#10;&#10;Connection Times (ms)&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  min  mean[+/-sd] median   max&#10;Connect:&nbsp;&nbsp;&nbsp;&nbsp;  149  349 149.7&nbsp;&nbsp;&nbsp;&nbsp;303&nbsp;&nbsp;&nbsp;&nbsp;1361&#10;Processing:   122  225  75.5&nbsp;&nbsp;&nbsp;&nbsp;207&nbsp;&nbsp;&nbsp;&nbsp; 586&#10;Waiting:&nbsp;&nbsp;&nbsp;&nbsp;   53  122  68.8&nbsp;&nbsp;&nbsp;&nbsp;108&nbsp;&nbsp;&nbsp;&nbsp; 481&#10;Total:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;329  574 174.0&nbsp;&nbsp;&nbsp;&nbsp;512&nbsp;&nbsp;&nbsp;&nbsp;1612&#10;&#10;Percentage of the requests served within a certain time (ms)&#10;  50%&nbsp;&nbsp;&nbsp;&nbsp;512&#10;  66%&nbsp;&nbsp;&nbsp;&nbsp;534&#10;  75%&nbsp;&nbsp;&nbsp;&nbsp;555&#10;  80%&nbsp;&nbsp;&nbsp;&nbsp;744&#10;  90%&nbsp;&nbsp;&nbsp;&nbsp;832&#10;  95%&nbsp;&nbsp;&nbsp;&nbsp;915&#10;  98%   1104&#10;  99%   1171&#10; 100%   1612 (longest request)</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ab.out</span>
    </div>
</div>
<p>Esta herramienta puede ser utilizada para par medir el rendimiento de cualquier servicio web. Un blog de <a href="https://wordpress.org/">Wordpress</a>, una página de una organización, un <em>endpoint</em> de un servicio REST o GraphQL, etc&hellip; Es muy sencilla de utilizar y genera un informe corto pero con interesante información sobre el rendimiento. Si se hacen cambios se puede medir el antes y el después y comparar los resultados para observar de que modo han afectado al rendimiento si de forma positiva o negativa y en que grado.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/</id>
        <title>Registro y descubrimiento de servicios en contenedores de Docker con Consul y Registrator</title>
        <updated>2019-05-26T11:30:00+02:00</updated>
        <published>2019-05-26T11:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En los microservicios se hace necesario un servicio de registro y descubrimiento como Eureka o Consul que permita conocer la ubicación de las instancias en cada momento. Las instancias de los servicios se pueden registrar ellas mismas o esta tarea se puede delegar en una en otro servicio. Al usar contenedores de Docker una herramienta que permite delegar el registro y desregistro en Consul de los servicios es GliderLabs Registrator.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="278" alt="HashiCorp Consul" title="HashiCorp Consul"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>El registro y descubrimiento de servicios permite a los servicios registrase y a los clientes descubrir la ubicación de otros servicios, la ubicación consiste en la dirección IP y el puerto en el que contactarles. Dado la naturaleza efímera de los servicios donde nuevas instancias de servicios se inician y se detienen en diferentes máquinas y puertos el servicio de descubrimiento es esencial.</p>
<p>La funcionalidad de registro y descubrimiento consiste en dos partes, por un lado cuando se inicia una instancia de un servicio se registra su ubicación en el servicio de registro y descubrimiento y por otro lado los clientes cuando requieren una instancia de un servicio la buscan en el servicio de descubrimiento.</p>
<p>El registro en el servicio de descubrimiento puede hacerse de dos formas, que sea el propio servicio el que se registra en el servicio de descubrimiento o que se sea otro servicio el que lo registra. Para el primer caso escribí un artículo con <a href="https://www.consul.io/">Consul</a> como servicio de descubrimiento en una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> que se registra al iniciarse. La ventaja es que es autosuficiente pero adquiere la tarea de autoregistrarse. Por el contrario delegar la tarea de registro permite extraerla de los servicios y ofrecer esa funcionalidad por un servicio con esa misión específicamente.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul</a></li>
</ul>
<p>En este artículo se usa <a href="https://github.com/gliderlabs/registrator">GliderLabs Registrator</a> como servicio que se encarga de registrar en un servicio de descubrimiento como Consul los servicios que se inicien en <a href="https://www.docker.com/">Docker</a>, aunque soporta otros como <a href="https://etcd.io/">etcd</a>.</p>
<p>Registrator es un contenedor de Docker, su funcionamiento es escuchar los eventos del demonio de Docker y monitorizar cuando se inician nuevos contenedores o cuando se paran. La monitorización la hace a través del <em>socket</em> del servicio de Docker, para lo que hay que montar un volumen en este contenedor con el archivo <em>/var/run/docker.sock</em> del <em>host</em>.</p>
<p>Primero se inicia el servicio de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<p>Luego se inicia el contenedor Registrator indicando la ubicación con dirección IP y puerto del servicio de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm --name<span class="o">=</span>registrator --net<span class="o">=</span>host --volume<span class="o">=</span>/var/run/docker.sock:/tmp/docker.sock gliderlabs/registrator:latest consul://localhost:8500&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-registrator.sh</span>
    </div>
</div>
<p>Iniciados estos dos servicios en la interfaz de estado de Consul se observa que no hay ningún servicio pero cuando se inicie un nuevo contenedor será registrado en Consul por Registrator.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul_hudf2f8b03877264bacf83a564e5686ede_36482_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dirección"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul_hudf2f8b03877264bacf83a564e5686ede_36482_300x200_fit_box_3.png" width="287" height="200" alt="Dirección" title="Dirección"  class="lozad "></a></p>
</figure>
</div>
<p>En este caso se utiliza como servicio una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a>. Dado que el puerto en el que esté disponible el servicio de PostgreSQL es indiferente al utilizar un servicio de registro y descubrimiento se indica el <em>-p</em> sin indicar el puerto del <em>host</em>, de este modo Docker le asigna un puerto público aleatorio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm --name postgres -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>user -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>password -e <span class="nv">POSTGRES_DB</span><span class="o">=</span>database -p <span class="m">5432</span> postgres:alpine&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-postgres.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NAMES&#10;cb7602605725&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">54</span> seconds ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">53</span> seconds&nbsp;&nbsp;&nbsp;&nbsp;   0.0.0.0:32777-&gt;5432/tcp   postgres&#10;d286341148cb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gliderlabs/registrator:latest   <span class="s2">&#34;/bin/registrator co…&#34;</span>   About a minute ago   Up About a minute&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registrator</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps.sh</span>
    </div>
</div>
<p>En la salida del contenedor de Registrator se emite una traza indicando que el servicio de PostgreSQL ha sido registrado en Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">2019/05/26 11:05:29 Starting registrator v7 ...&#10;2019/05/26 11:05:29 Using consul adapter: consul://localhost:8500&#10;2019/05/26 11:05:29 Connecting to backend (0/0)&#10;2019/05/26 11:05:29 consul: current leader  127.0.0.1:8300&#10;2019/05/26 11:05:29 Listening for Docker events ...&#10;2019/05/26 11:05:29 Syncing services on 1 containers&#10;2019/05/26 11:05:29 ignored: d286341148cb no published ports&#10;2019/05/26 11:05:50 added: cb7602605725 archlinux:postgres:5432</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-registrator.out</span>
    </div>
</div>
<p>Una vez iniciado el servicio de postgres en la consola de Consul se muestra con su dirección y puerto en el que se encuentra, en el contenedor utiliza su puerto por defecto <em>5432</em> pero hacia el exterior en este caso al no haber especificado uno Docker le asigna un puerto aleatorio en este caso el <em>32777</em>. Este puerto aleatorio es con el que los clientes acceden a la base de datos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-1_hu5336dadbc35299bcca8969f84d373cf0_39850_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Servicio de PostgreSQL registrado en Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-1_hu5336dadbc35299bcca8969f84d373cf0_39850_300x200_fit_box_3.png" width="300" height="165" alt="Servicio de PostgreSQL registrado en Consul" title="Servicio de PostgreSQL registrado en Consul"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-2_huf0df6f6a3d2138a93d9a38f4927788b0_43545_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Servicio de PostgreSQL registrado en Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-2_huf0df6f6a3d2138a93d9a38f4927788b0_43545_300x200_fit_box_3.png" width="300" height="165" alt="Servicio de PostgreSQL registrado en Consul" title="Servicio de PostgreSQL registrado en Consul"  class="lozad "></a></p>
<figcaption>Servicio de postgres registrado en Consul por Registrator</figcaption>
</figure>
</div>
<p>En vez de iniciar los servicios individualmente con comandos de Docker creando un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> con la definición de todos los contenedores se facilita iniciar todos los contenedores con un comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker-compose up&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.7&#34;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">consul</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">consul:latest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">consul</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;consul&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;agent&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;-dev&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;-ui&#34;</span><span class="p">]</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">registrator</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">gliderlabs/registrator:latest</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">registrator</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">/var/run/docker.sock:/tmp/docker.sock</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">entrypoint</span><span class="p">:</span><span class="w"> </span><span class="l">/bin/registrator consul://localhost:8500</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">depends_on</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">consul</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">postgres</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres:alpine</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">postgres</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;5432&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_USER=user</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_PASSWORD=password</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_DB=database</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">depends_on</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">registrator</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>El proyecto de <a href="https://projects.spring.io/spring-cloud/">Spring Cloud</a> ofrece soporte para ambas tareas de registrar y descubrir servicios, aunque perfectamente la tarea de registro se puede delegar como en este caso a Registrator y utilizar en los servicios de Spring Boot únicamente la parte de descubrimiento.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Registrator">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-compose-up.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/</id>
        <title>Crear de forma sencilla y rápida máquinas virtuales de VirtualBox con Vagrant</title>
        <updated>2019-05-10T17:00:00+02:00</updated>
        <published>2019-05-10T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vagrant.svg" width="200" height="200" alt="Vagrant" title="Vagrant"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p><a href="https://www.virtualbox.org/">VirtualBox</a> es una de las herramientas que permiten virtualizar un sistema operativo completo y sus aplicaciones dentro de otra máquina. Como es un sistema operativo completo requiere que el sistema que la alberga tenga RAM suficiente para sí mismo y RAM suficiente para el sistema virtualizado, se puede configurar la cantidad de RAM y almacenamiento persistente de la máquina virtual. En el proceso de virtualización se pierde algo de rendimiento por la sobrecarga que añade virtualizar un sistema operativo completo, los procesadores modernos ofrecen soporte para que el rendimiento sea lo mayor posible pero no es igual a ejecutar el sistema de forma nativa en el sistema, sobre todo en el aspecto de interfaces gráficas y aceleración 2D y 3D.</p>
<p>La virtualización es una buena forma de probar una distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> para evaluarla o ejecutar <a href="https://www.microsoft.com/es-es/windows/">Windows</a> en un Linux. Hay otras herramientas de virtualización como <a href="https://www.qemu.org/">QEMU</a> y <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a> pero la virtud de VirtualBox es que es muy sencilla y está disponible para Windows, GNU/Linux y <a href="https://www.apple.com/macos/">macOS</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox_hu714198bdeca98f2fa85206e0a2e30ff9_109657_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox_hu714198bdeca98f2fa85206e0a2e30ff9_109657_300x200_fit_box_3.png" width="300" height="181" alt="VirtualBox" title="VirtualBox"  class="lozad "></a></p>
<figcaption>VirtualBox</figcaption>
</figure>
</div>
<p>Para tener una máquina virtual el proceso se puede hacer desde el principio desde el medio de instalación ofrecido siguiendo los de su instalador. Pero para hacer alguna prueba de desarrollo y si se necesitan virtualizar varias máquinas el proceso manual es incómodo además de repetitivo. <a href="https://www.vagrantup.com/">Vagrant</a> es una de las herramientas ofrecidas por <a href="https://www.hashicorp.com/">HashiCorp</a> que permite automatizar la creación y aprovisionamiento de máquinas virtuales en VirtualBox mediante la especificación de un archivo de configuración. Permite replicar entornos y crear un cluster de máquinas que resulta muy útil al desarrollar o probar cierto software.</p>
<p>En este ejemplo se configura una máquina virtual usando como sistema operativo base Ubuntu 18.04, y se aprovisiona configurando ella <a href="https://www.docker.com/">Docker</a>. El aprovisionamiento se realiza mediante una serie de comandos y archivos que se añaden del <em>host</em> al sistema virtualizado tal como se hace en un sistema Ubuntu desde su estado de instalación inicial. Entre las opciones de configuración permitidas están el nombre de la máquina virtual, su sistema operativo, la cantidad de memoria que se le asigna, propiedades de red, asignar direcciones IP estáticas, &hellip;</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="err">#</span> <span class="o">-*-</span> <span class="n">mode</span><span class="o">:</span> <span class="n">ruby</span> <span class="o">-*-</span>&#10;<span class="err">#</span> <span class="n">vi</span><span class="o">:</span> <span class="n">set</span> <span class="n">ft</span><span class="o">=</span><span class="n">ruby</span> <span class="o">:</span>&#10;&#10;<span class="n">Vagrant</span><span class="o">.</span><span class="na">configure</span><span class="o">(</span><span class="s">&#34;2&#34;</span><span class="o">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>&#10;&#10;  <span class="n">config</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">define</span> <span class="s">&#34;ubuntu-docker&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">instance</span><span class="o">|</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">box</span> <span class="o">=</span> <span class="s">&#34;ubuntu/bionic64&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provider</span> <span class="o">:</span><span class="n">virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">vb</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="s">&#34;Ubuntu Docker (Vagrant)&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">end</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">network</span> <span class="s">&#34;private_network&#34;</span><span class="o">,</span> <span class="n">ip</span><span class="o">:</span> <span class="s">&#34;192.168.33.10&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provider</span> <span class="s">&#34;virtualbox&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">vb</span><span class="o">.</span><span class="na">memory</span> <span class="o">=</span> <span class="s">&#34;1024&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provision</span> <span class="s">&#34;file&#34;</span><span class="o">,</span> <span class="n">source</span><span class="o">:</span> <span class="s">&#34;docker-compose.yml&#34;</span><span class="o">,</span> <span class="n">destination</span><span class="o">:</span> <span class="s">&#34;/home/vagrant/docker-compose.yml&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provision</span> <span class="s">&#34;shell&#34;</span><span class="o">,</span> <span class="n">inline</span><span class="o">:</span> <span class="n">$docker_role_script</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">end</span>&#10;  <span class="n">end</span>&#10;&#10;  <span class="n">$docker_role_script</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="n">SCRIPT</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Updating...&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">upgrade</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Installing docker...&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">apt</span><span class="o">-</span><span class="n">transport</span><span class="o">-</span><span class="n">https</span> <span class="n">ca</span><span class="o">-</span><span class="n">certificates</span> <span class="n">curl</span> <span class="n">gnupg</span><span class="o">-</span><span class="n">agent</span> <span class="n">software</span><span class="o">-</span><span class="n">properties</span><span class="o">-</span><span class="n">common</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">curl</span> <span class="o">-</span><span class="n">fsSL</span> <span class="n">https</span><span class="o">:</span><span class="c1">//download.docker.com/linux/ubuntu/gpg | sudo apt-key add -&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">key</span> <span class="n">fingerprint</span> <span class="n">0EBFCD88</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">add</span><span class="o">-</span><span class="n">apt</span><span class="o">-</span><span class="n">repository</span> <span class="s">&#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&#34;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span><span class="o">-</span><span class="n">cli</span> <span class="n">containerd</span><span class="o">.</span><span class="na">io</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">usermod</span> <span class="o">-</span><span class="n">aG</span> <span class="n">docker</span> <span class="n">vagrant</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="s">&#34;https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)&#34;</span> <span class="o">-</span><span class="n">o</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">compose</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">compose</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Starting Docker service...&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">daemon</span><span class="o">-</span><span class="n">reload</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">enable</span> <span class="n">docker</span><span class="o">.</span><span class="na">service</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">start</span> <span class="n">docker</span><span class="o">.</span><span class="na">service</span>&#10;  <span class="n">SCRIPT</span>&#10;<span class="n">end</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Vagrantfile</span>
    </div>
</div>
<p>Se puede crear un archivo inicia con comentarios para empezar a configurar la máquina virtual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vagrant init ubuntu/bionic64&#10; &#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-init.sh</span>
    </div>
</div>
<p>Definido el archivo de configuración para Vagrant se inician las máquina virtual con un comando. Y se detienen con otro. Si hay necesidad en el mismo archivo se pueden definir varias máquinas virtuales.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vagrant up&#10;$ vagrant halt&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-up.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox-vagrant-vm_hu714198bdeca98f2fa85206e0a2e30ff9_116254_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="VirtualBox Vagrant VM"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox-vagrant-vm_hu714198bdeca98f2fa85206e0a2e30ff9_116254_300x200_fit_box_3.png" width="300" height="181" alt="VirtualBox Vagrant VM" title="VirtualBox Vagrant VM"  class="lozad "></a></p>
<figcaption>VirtualBox Vagrant VM</figcaption>
</figure>
</div>
<p>Una vez iniciada la máquina virtual Vagrant configura SSH para tener acceso a su terminal, hay que especificar el nombre de la máquina virtual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ vagrant ssh ubuntu-docker&#10; &#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-ssh.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/vagrant-ssh_huf84e0a9edfdc6e443883ef5a755439df_64066_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Vagrant SSH"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/vagrant-ssh_huf84e0a9edfdc6e443883ef5a755439df_64066_300x200_fit_box_3.png" width="244" height="200" alt="Vagrant SSH" title="Vagrant SSH"  class="lozad "></a></p>
<figcaption>Vagrant SSH</figcaption>
</figure>
</div>
<p>La máquina en el ejemplo ha sido aprovisionada con Docker mediante un <em>script</em> con los comandos para instalarlo y un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> con un servicio del servidor web <a href="https://nginx.org/">nginx</a>. Desde la terminal de la máquina virtual se inicia el servicio con Docker que queda accesible tanto desde la propia máquina virtual como desde el <em>host</em> indicando la dirección IP que se le ha asignado.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/docker-compose-up_huee84648a7050cd57115fd67bb683562f_66997_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="docker-compose up y curl (desde la MV)"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/docker-compose-up_huee84648a7050cd57115fd67bb683562f_66997_300x200_fit_box_3.png" width="281" height="200" alt="docker-compose up y curl (desde la MV)" title="docker-compose up y curl (desde la MV)"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/curl_hu26f710045e8e9b42060c9d2ccd60a851_58845_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="curl (desde el host)"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/curl_hu26f710045e8e9b42060c9d2ccd60a851_58845_300x200_fit_box_3.png" width="244" height="200" alt="curl (desde el host)" title="curl (desde el host)"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/firefox_hue938310a76fc8e72c31d7b54d72579d5_35132_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Página devuelta por nginx"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/firefox_hue938310a76fc8e72c31d7b54d72579d5_35132_300x200_fit_box_3.png" width="300" height="172" alt="Página devuelta por nginx" title="Página devuelta por nginx"  class="lozad "></a></p>
<figcaption>docker-compose up y curl desde la MV y desde el host</figcaption>
</figure>
</div>
<p>Vagrant tiene un <a href="https://app.vagrantup.com/boxes/search">repositorio de imágenes</a> entre las que elegir para el sistema, están las más populares como <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://fedoraproject.org/">Fedora</a>, <a href="https://www.debian.org/">Debian</a> y <a href="https://www.centos.org/">CentOS</a>. Es un repositorio en donde los usuarios pueden subir sus propias imágenes aunque por defecto es mejor usar las oficiales de cada sistema.</p>
<p>Posee varias <a href="https://www.vagrantup.com/docs/index.html">páginas de documentación</a> bastante completas donde conocer los todos los detalles de uso de Vagrant.</p>
<ul>
<li><a href="https://www.vagrantup.com/docs/vagrantfile/">Vagrantfile</a></li>
<li><a href="https://www.vagrantup.com/docs/cli/">Commands</a></li>
<li><a href="https://www.vagrantup.com/docs/networking/">Networking</a></li>
<li><a href="https://www.vagrantup.com/docs/provisioning/">Provisioning</a></li>
<li><a href="https://www.vagrantup.com/docs/multi-machine/">Multi-machine</a></li>
<li><a href="https://www.vagrantup.com/docs/providers/">Providers</a></li>
<li><a href="https://www.vagrantup.com/docs/synced-folders/">Synced folders</a></li>
</ul>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Vagrant">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>vagrant up</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicios-nomad/</id>
        <title>Servicios con persistencia en el orquestador de microservicios Nomad</title>
        <updated>2019-04-26T20:00:00+02:00</updated>
        <published>2019-04-26T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicios-nomad/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los servicios que necesitan almacenar datos como las bases de datos o un sistema de archivos tienen más restricciones que los servicios sin estado por la necesidad de tener acceso a esos datos. Esto hace que los contenedores puedan no tener tanta libertad para iniciarse en cualquier nodo. En Nomad una estrategia es imponer ciertas restricciones a los servicios que almacenen estado para que solo se puedan iniciar en el nodo que donde estén almacenados.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="260" alt="HashiCorp Nomad" title="HashiCorp Nomad"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>Algunos servicios no necesitan almacenar ningún estado porque no lo necesitan o porque el estado se mantiene en otro servicio. Que un servicio no necesite mantener estado es bueno porque de esta manera el servicio se puede escalar al número de instancias adecuadas para prestar el servicio, también porque si falla una instancia la petición puede ser reenviada a otra instancia, una instancia que falla puede ser reemplazada sin problema en otro <em>host</em>. Sin embargo, hay otro tipo de instancias que si almacenan estado como las bases de datos ya sea <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://www.mysql.com/">MySQL</a>, <a href="https://redis.io/">Redis</a>, <a href="https://www.mongodb.com/">MongoDB</a>, otra o simplemente archivos en el sistema de archivos.</p>
<p>Las instancias que tienen estado no son tan fáciles de reemplazar dado que los datos son necesarios para su funcionamiento, una instancia de un servicio con estado como no puede iniciarse en otro nodo libremente solo se puede iniciar en el nodo que contenga los datos. Eso o cuando el servicio se inicia en otro nodo los datos son trasladados o por algún mecanismo transparente a los servicios están disponibles en el nuevo nodo.</p>
<p>En <a href="https://docs.docker.com/swarm/">Docker Swarm</a> ciertos <em>drivers</em> de volúmenes pueden proporcionar volúmenes accesibles desde cualquier <em>host</em> del <em>cluster</em> pero por defecto <em>Swarm</em> no lo ofrece. En <a href="https://kubernetes.io/">Kubernetes</a> los volúmenes pueden ser dispositivos de almacenamiento provenientes de <a href="https://aws.amazon.com/es/ebs/">EBS</a> de modo que si un <em>pod</em> es movido a otro <em>host</em> basta con que el <em>pod</em> sea conectado de nuevo al EBS anterior y los datos están accesibles en el nuevo nodo.</p>
<p><a href="https://www.nomadproject.io/">Nomad</a> no proporciona soporte para que el almacenamiento persistente sea migrado a un nuevo nodo de Nomad si el servicio cambiado de ubicación. Para solventar esta limitación en el caso de los servicios con estado estos pueden ser tratados en cierta forma como animales de compañía o <em>pets</em> haciendo que siempre se ubiquen en el mismo nodo, una vez tiene siempre la misma ubicación basta con proporcionar el almacenamiento en el <em>host</em> ya sea en su sistema de archivos o para externalizarlo montando un almacenamiento <em>EBS</em>.</p>
<p>Para conseguir que un <em>job</em> de Nomad se ubique siempre en un mismo nodo hay que usar <a href="https://www.nomadproject.io/docs/job-specification/constraint.html">restricciones o <em>costraints</em> en la especificación del <em>job</em></a>. Las restricciones son las reglas que utiliza Nomad para elegir como candidatos los posibles nodos en los que ubicar el <em>job</em>, <em>task group</em> o <em>task</em>. Se pueden utilizar varios operadores entre los que está el de igualdad utilizado en el ejemplo. Una de las variables utilizables es el identificativo del nodo de Nomad, con él es posible conseguir que el <em>job</em> se ubique siempre en el mismo nodo. Los identificativos de los nodos son asignados por Nomad cuando se unen al <em>cluster</em>.</p>
<p>Con los siguientes comandos se inspecciona los nodos que forman parte del cluster de Nomad, entre sus datos está el identificativo de cada nodo formado por una cadena de 36 caracteres. En el modo verboso se emite el identificativo completo y una lista de propiedades del nodo entre los que están detalles de Consul, la CPU, <em>driver</em> que soporta, kernel, sistema operativo, &hellip; En documentación sobre <a href="https://www.nomadproject.io/docs/runtime/interpolation.html">interpolación de variables</a> hay una lista de variables disponibles.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span><span class="lnt">110&#10;</span><span class="lnt">111&#10;</span><span class="lnt">112&#10;</span><span class="lnt">113&#10;</span><span class="lnt">114&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad node status&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Name&nbsp;&nbsp;&nbsp;&nbsp;   Class   Drain  Eligibility  Status&#10;44511e01  localhost  archlinux  &lt;none&gt;  <span class="nb">false</span>  eligible&nbsp;&nbsp;&nbsp;&nbsp; ready&#10;&#10;$ nomad node status 44511e01&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 44511e01&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> archlinux&#10;<span class="nv">Class</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> &lt;none&gt;&#10;<span class="nv">DC</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> localhost&#10;<span class="nv">Drain</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Eligibility</span>   <span class="o">=</span> eligible&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> ready&#10;<span class="nv">Uptime</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 1h40m31s&#10;Driver <span class="nv">Status</span> <span class="o">=</span> docker,exec,java,qemu,raw_exec&#10;&#10;Node Events&#10;Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Subsystem  Message&#10;2019-04-26T17:57:41+02:00  Cluster&nbsp;&nbsp;&nbsp;&nbsp;Node registered&#10;&#10;Allocated Resources&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Memory&nbsp;&nbsp;&nbsp;&nbsp;  Disk&#10;0/30400 MHz  <span class="m">0</span> B/31 GiB  <span class="m">0</span> B/16 GiB&#10;&#10;Allocation Resource Utilization&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Memory&#10;0/30400 MHz  <span class="m">0</span> B/31 GiB&#10;&#10;Host Resource Utilization&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Disk&#10;3288/30400 MHz  5.2 GiB/31 GiB  <span class="o">(</span>tmpfs<span class="o">)</span>&#10;&#10;Allocations&#10;No allocations placed&#10;&#10;$ nomad node status -verbose 44511e01&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 44511e01-34b8-c1e6-7fe5-60be0ff35d0e&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> archlinux&#10;<span class="nv">Class</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> &lt;none&gt;&#10;<span class="nv">DC</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> localhost&#10;<span class="nv">Drain</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Eligibility</span> <span class="o">=</span> eligible&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> ready&#10;<span class="nv">Uptime</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 1h44m39s&#10;&#10;Drivers&#10;Driver&nbsp;&nbsp;&nbsp;&nbsp;Detected  Healthy  Message&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Time&#10;docker&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;<span class="nb">exec</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;java&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;qemu&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;raw_exec  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nb">true</span>&nbsp;&nbsp;&nbsp;&nbsp; Healthy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2019-04-26T17:57:41+02:00&#10;rkt&nbsp;&nbsp;&nbsp;&nbsp;   <span class="nb">false</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">false</span>&nbsp;&nbsp;&nbsp;&nbsp;Failed to execute rkt version: exec: <span class="s2">&#34;rkt&#34;</span>: executable file not found in <span class="nv">$PATH</span>  2019-04-26T17:57:41+02:00&#10;&#10;Node Events&#10;Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Subsystem  Message&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Details&#10;2019-04-26T17:57:41+02:00  Cluster&nbsp;&nbsp;&nbsp;&nbsp;Node registered  &lt;none&gt;&#10;&#10;Allocated Resources&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Disk&#10;100/30400 MHz  1.0 GiB/31 GiB  <span class="m">300</span> MiB/16 GiB&#10;&#10;Allocation Resource Utilization&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Memory&#10;19/30400 MHz  <span class="m">38</span> MiB/31 GiB&#10;&#10;Host Resource Utilization&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Disk&#10;4564/30400 MHz  5.5 GiB/31 GiB  <span class="o">(</span>tmpfs<span class="o">)</span>&#10;&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Eval ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Task Group  Version  Desired  Status   Created&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Modified&#10;cd45371d-501a-1373-dfde-bb16c4ff20d3  ab9f5675-b5cb-9e5f-8e20-cb308dbfba32  44511e01-34b8-c1e6-7fe5-60be0ff35d0e  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">3</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  2019-04-26T18:14:28+02:00  2019-04-26T18:16:32+02:00&#10;&#10;Attributes&#10;consul.datacenter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> localhost&#10;consul.revision&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> ea5210a30&#10;consul.server&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="nb">true</span>&#10;consul.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 1.4.4&#10;cpu.arch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> amd64&#10;cpu.frequency&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">3800</span>&#10;cpu.modelname&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> Intel<span class="o">(</span>R<span class="o">)</span> Core<span class="o">(</span>TM<span class="o">)</span> i5-8259U CPU @ 2.30GHz&#10;cpu.numcores&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">8</span>&#10;cpu.totalcompute&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">30400</span>&#10;driver.docker&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">1</span>&#10;driver.docker.bridge_ip&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 172.17.0.1&#10;driver.docker.os_type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> linux&#10;driver.docker.runtimes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> runc&#10;driver.docker.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 18.09.4-ce&#10;driver.docker.volumes.enabled <span class="o">=</span> <span class="nb">true</span>&#10;driver.exec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="m">1</span>&#10;driver.java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="m">1</span>&#10;driver.java.runtime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> OpenJDK Runtime Environment <span class="o">(</span>build 1.8.0_212-b01<span class="o">)</span>&#10;driver.java.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 1.8.0_212&#10;driver.java.vm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> OpenJDK 64-Bit Server VM <span class="o">(</span>build 25.212-b01, mixed mode<span class="o">)</span>&#10;driver.qemu&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="m">1</span>&#10;driver.qemu.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 3.1.0&#10;driver.raw_exec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="m">1</span>&#10;kernel.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> linux&#10;kernel.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 5.0.7-arch1-1-ARCH&#10;memory.totalbytes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">33592107008</span>&#10;nomad.advertise.address&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 127.0.0.1:4646&#10;nomad.revision&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 18dd59056ee1d7b2df51256fe900a98460d3d6b9&#10;nomad.version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 0.9.0&#10;os.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> arch&#10;os.signals&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> SIGQUIT,SIGTTOU,SIGFPE,SIGTRAP,SIGTSTP,SIGINT,SIGURG,SIGTTIN,SIGUSR1,SIGIO,SIGIOT,SIGKILL,SIGSTOP,SIGCONT,SIGILL,SIGPROF,SIGSEGV,SIGSYS,SIGTERM,SIGXFSZ,SIGHUP,SIGWINCH,SIGABRT,SIGBUS,SIGCHLD,SIGPIPE,SIGUSR2,SIGXCPU,SIGALRM&#10;unique.cgroup.mountpoint&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> /sys/fs/cgroup&#10;unique.consul.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> archlinux&#10;unique.hostname&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> archlinux&#10;unique.network.ip-address&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 127.0.0.1&#10;unique.storage.bytesfree&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">16795955200</span>&#10;unique.storage.bytestotal&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">16796053504</span>&#10;unique.storage.volume&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> tmpfs&#10;&#10;Meta</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-status.sh</span>
    </div>
</div>
<p>En este caso solo hay un nodo registrado en Nomad, la siguiente definición de <em>job</em> en el fragmento <em>constraint</em> hace que Nomad lo ubique siempre en él.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">job &#34;mongodb&#34; {&#10;  datacenters = [&#34;localhost&#34;]&#10;&#10;  type = &#34;service&#34;&#10;&#10;  constraint {&#10;&nbsp;&nbsp;&nbsp;&nbsp;attribute = &#34;${node.unique.id}&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;&nbsp;&nbsp;&nbsp; = &#34;44511e01-34b8-c1e6-7fe5-60be0ff35d0e&#34;&#10;  }&#10;&#10;  group &#34;services&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;count = 1&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;task &#34;mongodb&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;  driver = &#34;docker&#34;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  config {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image = &#34;mongo:latest&#34;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port_map {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port = 27017&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;volumes = [&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;/home/picodotdev/Software/nomad/mongodb:/data/db/&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  resources {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory = 1024 # MB&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port &#34;port&#34; {}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;}&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mongodb.nomad</span>
    </div>
</div>
<p>Como el <em>job</em> se ubica en el mismo nodo siempre montando un directorio del nodo como un volumen de datos en el <em>job</em> y contenedor de <a href="https://www.docker.com/">Docker</a>, los datos se persisten en el sistema de archivos y transcienden al tiempo de vida del <em>job</em>, se puede iniciar el <em>job</em>, insertar datos en la base de datos en este caso de MongoDB, eliminar el <em>job</em>, volverlo a iniciar y los mismos datos están presentes en MongoDB.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job run mongodb.nomad&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAMES&#10;b0d3f42c92fc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mongo:latest&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">3</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">3</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:20180-&gt;27017/tcp, 127.0.0.1:20180-&gt;27017/udp   mongodb-ea10d440-1176-3bfb-5301-7ccd17af0281&#10;$ docker <span class="nb">exec</span> -it b0d3f42c92fc bash&#10;root@b0d3f42c92fc:/# mongo&#10;MongoDB shell version v4.0.9&#10;connecting to: mongodb://127.0.0.1:27017/?gssapiServiceName<span class="o">=</span>mongodb&#10;Implicit session: session <span class="o">{</span> <span class="s2">&#34;id&#34;</span> : UUID<span class="o">(</span><span class="s2">&#34;ba120679-b965-49d0-a774-dff39d6b630a&#34;</span><span class="o">)</span> <span class="o">}</span>&#10;MongoDB server version: 4.0.9&#10;Server has startup warnings: &#10;2019-04-26T16:47:49.308+0000 I STORAGE  <span class="o">[</span>initandlisten<span class="o">]</span> &#10;2019-04-26T16:47:49.308+0000 I STORAGE  <span class="o">[</span>initandlisten<span class="o">]</span> ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine&#10;2019-04-26T16:47:49.308+0000 I STORAGE  <span class="o">[</span>initandlisten<span class="o">]</span> **&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  See http://dochub.mongodb.org/core/prodnotes-filesystem&#10;2019-04-26T16:47:50.133+0000 I CONTROL  <span class="o">[</span>initandlisten<span class="o">]</span> &#10;2019-04-26T16:47:50.133+0000 I CONTROL  <span class="o">[</span>initandlisten<span class="o">]</span> ** WARNING: Access control is not enabled <span class="k">for</span> the database.&#10;2019-04-26T16:47:50.133+0000 I CONTROL  <span class="o">[</span>initandlisten<span class="o">]</span> **&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Read and write access to data and configuration is unrestricted.&#10;2019-04-26T16:47:50.133+0000 I CONTROL  <span class="o">[</span>initandlisten<span class="o">]</span> &#10;---&#10;Enable MongoDB<span class="s1">&#39;s free cloud-based monitoring service, which will then receive and display&#10;</span><span class="s1">metrics about your deployment (disk utilization, CPU, operation statistics, etc).&#10;</span><span class="s1">&#10;</span><span class="s1">The monitoring data will be available on a MongoDB website with a unique URL accessible to you&#10;</span><span class="s1">and anyone you share the URL with. MongoDB may use this information to make product&#10;</span><span class="s1">improvements and to suggest MongoDB products and deployment options to you.&#10;</span><span class="s1">&#10;</span><span class="s1">To enable free monitoring, run the following command: db.enableFreeMonitoring()&#10;</span><span class="s1">To permanently disable this reminder, run the following command: db.disableFreeMonitoring()&#10;</span><span class="s1">---&#10;</span><span class="s1">&#10;</span><span class="s1">&gt; db.articles.insert({title: &#34;Introducción a la base de datos NoSQL MongoDB&#34;, author: &#34;picodotdev&#34;, date: new Date(2017,05,18,12,30), tags: [&#39;</span>mongodb<span class="s1">&#39;, &#39;</span>database<span class="s1">&#39;, &#39;</span>NoSQL<span class="s1">&#39;], comments: [{user: &#34;jones&#34;, message: &#34;MongoDB is great!&#34;}, {user: &#34;lina&#34;, message: &#34;MongoDB is great!&#34;}]})&#10;</span><span class="s1">WriteResult({ &#34;nInserted&#34; : 1 })&#10;</span><span class="s1">&gt; db.articles.insert({title: &#34;Introducción a la base de datos relacional PostgreSQL&#34;, author: &#34;picodotdev&#34;, date: new Date(2017,05,17,12,00), likes: 100, tags: [&#39;</span>postgresql<span class="s1">&#39;, &#39;</span>database<span class="s1">&#39;, &#39;</span>SQL<span class="err">&#39;</span><span class="o">]</span>, comments: <span class="o">[{</span>user: <span class="s2">&#34;katy&#34;</span>, message: <span class="s2">&#34;PostgreSQL rocks!&#34;</span><span class="o">}</span>, <span class="o">{</span>user: <span class="s2">&#34;smith&#34;</span>, message: <span class="s2">&#34;SQL language is powerful!&#34;</span><span class="o">}]})</span>&#10;WriteResult<span class="o">({</span> <span class="s2">&#34;nInserted&#34;</span> : <span class="m">1</span> <span class="o">})</span>&#10;&gt; db.articles.find<span class="o">()</span>&#10;<span class="o">{</span> <span class="s2">&#34;_id&#34;</span> : ObjectId<span class="o">(</span><span class="s2">&#34;5cc335873b17081f2ca1d4d5&#34;</span><span class="o">)</span>, <span class="s2">&#34;title&#34;</span> : <span class="s2">&#34;Introducción a la base de datos NoSQL MongoDB&#34;</span>, <span class="s2">&#34;author&#34;</span> : <span class="s2">&#34;picodotdev&#34;</span>, <span class="s2">&#34;date&#34;</span> : ISODate<span class="o">(</span><span class="s2">&#34;2017-06-18T12:30:00Z&#34;</span><span class="o">)</span>, <span class="s2">&#34;tags&#34;</span> : <span class="o">[</span> <span class="s2">&#34;mongodb&#34;</span>, <span class="s2">&#34;database&#34;</span>, <span class="s2">&#34;NoSQL&#34;</span> <span class="o">]</span>, <span class="s2">&#34;comments&#34;</span> : <span class="o">[</span> <span class="o">{</span> <span class="s2">&#34;user&#34;</span> : <span class="s2">&#34;jones&#34;</span>, <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;MongoDB is great!&#34;</span> <span class="o">}</span>, <span class="o">{</span> <span class="s2">&#34;user&#34;</span> : <span class="s2">&#34;lina&#34;</span>, <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;MongoDB is great!&#34;</span> <span class="o">}</span> <span class="o">]</span> <span class="o">}</span>&#10;<span class="o">{</span> <span class="s2">&#34;_id&#34;</span> : ObjectId<span class="o">(</span><span class="s2">&#34;5cc335993b17081f2ca1d4d6&#34;</span><span class="o">)</span>, <span class="s2">&#34;title&#34;</span> : <span class="s2">&#34;Introducción a la base de datos relacional PostgreSQL&#34;</span>, <span class="s2">&#34;author&#34;</span> : <span class="s2">&#34;picodotdev&#34;</span>, <span class="s2">&#34;date&#34;</span> : ISODate<span class="o">(</span><span class="s2">&#34;2017-06-17T12:00:00Z&#34;</span><span class="o">)</span>, <span class="s2">&#34;likes&#34;</span> : 100, <span class="s2">&#34;tags&#34;</span> : <span class="o">[</span> <span class="s2">&#34;postgresql&#34;</span>, <span class="s2">&#34;database&#34;</span>, <span class="s2">&#34;SQL&#34;</span> <span class="o">]</span>, <span class="s2">&#34;comments&#34;</span> : <span class="o">[</span> <span class="o">{</span> <span class="s2">&#34;user&#34;</span> : <span class="s2">&#34;katy&#34;</span>, <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;PostgreSQL rocks!&#34;</span> <span class="o">}</span>, <span class="o">{</span> <span class="s2">&#34;user&#34;</span> : <span class="s2">&#34;smith&#34;</span>, <span class="s2">&#34;message&#34;</span> : <span class="s2">&#34;SQL language is powerful!&#34;</span> <span class="o">}</span> <span class="o">]</span> <span class="o">}</span>&#10;&gt; db.articles.count<span class="o">()</span>&#10;<span class="m">2</span>&#10;&gt; <span class="nb">exit</span>&#10;bye&#10;root@b0d3f42c92fc:/# <span class="nb">exit</span>&#10;<span class="nb">exit</span>&#10;$ nomad job stop --purge <span class="nv">mongodb</span>&#10;<span class="o">==</span>&gt; Monitoring evaluation <span class="s2">&#34;f10589c6&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation triggered by job <span class="s2">&#34;mongodb&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation status changed: <span class="s2">&#34;pending&#34;</span> -&gt; <span class="s2">&#34;complete&#34;</span>&#10;<span class="o">==</span>&gt; Evaluation <span class="s2">&#34;f10589c6&#34;</span> finished with status <span class="s2">&#34;complete&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>mongodb.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job stop --prune mongodb&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-stop.sh</span>
    </div>
</div>
<p>Para iniciar <a href="https://www.consul.io/">Consul</a> y Nomad hay que utilizar los siguientes comandos y para el ejecutar <em>job</em> es requisito haber instalado Docker dado que en este ejemplo lo utiliza.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev -datacenter <span class="nv">localhost</span>&#10;<span class="o">==</span>&gt; Starting Consul agent...&#10;<span class="o">==</span>&gt; Consul agent running!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: <span class="s1">&#39;v1.4.4&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID: <span class="s1">&#39;34294bf0-5802-0d94-4acd-cf8c9d090205&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node name: <span class="s1">&#39;archlinux&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Datacenter: <span class="s1">&#39;localhost&#39;</span> <span class="o">(</span>Segment: <span class="s1">&#39;&lt;all&gt;&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span> <span class="o">(</span>Bootstrap: <span class="nb">false</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Client Addr: <span class="o">[</span>127.0.0.1<span class="o">]</span> <span class="o">(</span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  Cluster Addr: 127.0.0.1 <span class="o">(</span>LAN: 8301, WAN: 8302<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: <span class="nb">false</span>&#10;&#10;$ sudo nomad agent -dev -dc localhost&#10;<span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> picodotdev: &#10;<span class="o">==</span>&gt; No configuration files <span class="nv">loaded</span>&#10;<span class="o">==</span>&gt; Starting Nomad agent...&#10;<span class="o">==</span>&gt; Nomad agent configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Advertise Addrs: HTTP: 127.0.0.1:4646<span class="p">;</span> RPC: 127.0.0.1:4647<span class="p">;</span> Serf: 127.0.0.1:4648&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bind Addrs: HTTP: 127.0.0.1:4646<span class="p">;</span> RPC: 127.0.0.1:4647<span class="p">;</span> Serf: 127.0.0.1:4648&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Client: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Log Level: DEBUG&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Region: global <span class="o">(</span>DC: localhost<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: 0.9.0</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul-nomad.sh</span>
    </div>
</div>
<p>Las restricciones se han de cumplir para elegir un nodo, por otro lado está también la afinidad. La <a href="https://www.nomadproject.io/docs/job-specification/affinity.html">afinidad</a> es una preferencia utilizada por Nomad al seleccionar los nodos que tratará de cumplir si hay algún nodo disponible con las propiedades de afinidad deseadas pero si no hay un nodo disponible se elige algún otro.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad</a></li>
<li><a href="https://www.nomadproject.io/guides/stateful-workloads/portworx.html">Portworx</a></li>
<li><a href="https://www.nomadproject.io/docs/job-specification/ephemeral_disk.html">Ephemeral Disk</a></li>
<li><a href="https://tech.trivago.com/2019/01/25/nomad-our-experiences-and-best-practices/">Nomad - our experiences and best practices</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/</id>
        <title>Estrategias de despliegue para microservicios con Nomad</title>
        <updated>2019-04-18T11:30:00+02:00</updated>
        <published>2019-04-18T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Ciertos servicios requieren que al hacer un despliegue el servicio continue funcionando. Para esto no es posible parar todas las instancias de un servicio a la vez, actualizarla y volverlas a iniciar porque durante este proceso se dejaría de prestar el servicio durante un corto periodo de tiempo en el mejor de los casos. Hay que hacer el despliegue de forma progresiva en las instancias. Algunas estrategias son <em>Rolling Update</em>, <em>Blue/Green</em> y <em>Canary</em>, el orquestador de servicios Nomad soporta y realiza de forma automatizada los despliegues usando una de estas estrategias.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="260" alt="HashiCorp Nomad" title="HashiCorp Nomad"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>El ciclo de vida de una aplicación no consiste solo en desarrollarla, incluye también su puesta en producción o despliegue en un entorno de pruebas, pero también una vez la aplicación está desplegada en algún momento será necesario actualizarla con una nueva versión.</p>
<p>Las aplicaciones monolíticas tienen otros problemas pero en el aspecto de despliegue es sencillo ya que solo hay una aplicación, basta con desplegar la nueva versión. En una aplicación con arquitectura de microservicios es un reto mayor debido a que hay múltiples aplicaciones.</p>
<p>En cualquiera de ellas puede darse el caso de que para ganar en escalabilidad o para aumentar la disponibilidad o tolerancia a fallos es posible que haya varias instancias, las cuales han de ser actualizadas con el requisito si es necesario de que el servicio no deje de prestar su servicio, es decir que el despliegue no suponga una caída del servicio.</p>
<p>Hay varias estrategias para desplegar una nueva versión de una aplicación:</p>
<ul>
<li><em>Rolling update</em>: actualizar todas las instancias de forma progresiva. Una vez se termina de actualizar una se espera un tiempo y se actualiza la siguiente hasta que todas estén actualizadas.</li>
<li><em>Blue/Green</em>: manteniendo en funcionamiento las instancias con la versión antigua se crea el mismo número de instancias con la nueva versión y se redirige tráfico hacia ellas. Una vez se ha comprobado que la nueva versión funciona correctamente se promociona la nueva versión y se eliminan las instancias de con la versión antigua. Esta estrategia permite volver a la versión anterior rápidamente si se detecta algún problema.</li>
<li><em>Canary</em>: se siguen manteniendo las instancias con la versión antigua, a diferencia de la estrategia <em>blue/green</em> se crea un número menor de instancias con la versión nueva que el número de instancias con la versión antigua. Una vez comprobado que la nueva versión es correcta se promociona la nueva versión y se actualizan todas las instancias restantes mediante <em>rolling update</em> a la nueva versión. También permite volver a la versión antigua si se detecta algún problema.</li>
</ul>
<p><a href="https://docs.docker.com/swarm/">Docker Swarm</a> permite la estrategia de despliegue <em>rolling update</em> sin embargo las estrategias <em>blue/green</em> y <em>canary</em> son interesante para tratar de que un error en una versión nueva no afecte al funcionamiento de la aplicación y obligue hacer un <em>rollback</em> que posiblemente tarde más tiempo durante el cual el servicio funcionará con el defecto descubierto. <a href="https://www.nomadproject.io/">Nomad</a> permite despliegues con las estrategias <em>blue/gree</em> y <em>canary</em>.</p>
<p>Para actualizar un servicio en Nomad basta con modificar la definición del <em>job</em> y enviarlo a <em>Nomad</em>, y este se encarga de orquestar la actualización en las instancias según la estrategia de despliegue
configurada. En este caso se actualiza la versión de <em>nginx</em> de la versión <em>nginx:stable-alpine</em> a <em>nginx:alpine</em> usando una estrategia <em>rolling update</em> para las cinco instancias del servicio.</p>
<p>La estrategia de despliegue en <em>Nomad</em> se define en la <a href="https://www.nomadproject.io/docs/job-specification/update.html">sección de configuración <em>update</em></a>. El parámetro <em>min_healthy_time</em> es el tiempo que se espera cuando se hace un <em>rolling update</em> para considerar una instancia como sana y continuar la actualización con la siguiente, <em>max_parallel</em> indica el número de instancias que se migran al mismo tiempo. El parámetro <em>canary</em> indica el número de instancias que se crean en las estrategias <em>blue/green</em> y <em>canary</em>, en la primera el número de instancias coincidirá con el parámetro <em>canary</em> que indica el número de instancias de un servicio. Nomad con los parámetros <em>health_check</em>, <em>min_healthy_time</em>, <em>healthy_deadline</em>, <em>progress_deadline</em>, <em>stagger</em> y <em>auto_revert</em> se puede poner unos límites para considerar válido un despliegue y en caso de no serlo realizar un <em>rollback</em> de forma automática.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">job &#34;nginx&#34; {&#10;  datacenters = [&#34;localhost&#34;]&#10;&#10;  type = &#34;service&#34;&#10;&#10;  update {&#10;&nbsp;&nbsp;&nbsp;&nbsp;min_healthy_time = &#34;15s&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;max_parallel = 1&#10;  }&#10;&#10;  group &#34;services&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;count = 5&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;task &#34;nginx&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;  driver = &#34;docker&#34;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  config {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image = &#34;nginx:stable-alpine&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port_map {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  http = 80&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  resources {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory = 1024 # MB&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port &#34;http&#34; {}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;}&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.nomad</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job run nginx.nomad&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-run.sh</span>
    </div>
</div>
<p>En el caso de los despliegues <em>blue/green</em> y <em>canary</em> una vez comprobado que la versión de los nuevos servicios funcionan correctamente se promocionan y actualizan el resto de instancias en el caso de <em>canary</em> o se detienen las instancias antiguas en el caso de <em>blue/green</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job promote nginx&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-promote.sh</span>
    </div>
</div>
<p>Desde la línea de comandos se puede observar el estado del servicio y el proceso de actualización, el primero es el estado previo a realizar el despliegue, el segundo durante el proceso de actualización con <em>rolling update</em> y el tercero una vez finalizado el proceso de despliegue y marcado como exitoso en el que todas las instancias han pasado de la versión 0 a la 1.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job status nginx&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> nginx&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> nginx&#10;Submit <span class="nv">Date</span>   <span class="o">=</span> 2019-04-18T19:13:07+02:00&#10;<span class="nv">Type</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> service&#10;<span class="nv">Priority</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">50</span>&#10;<span class="nv">Datacenters</span>   <span class="o">=</span> localhost&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> running&#10;<span class="nv">Periodic</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Parameterized</span> <span class="o">=</span> <span class="nb">false</span>&#10;&#10;Summary&#10;Task Group  Queued  Starting  Running  Failed  Complete  Lost&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">0</span>&#10;&#10;Latest Deployment&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 81f57b6d&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> successful&#10;<span class="nv">Description</span> <span class="o">=</span> Deployment completed successfully&#10;&#10;Deployed&#10;Task Group  Desired  Placed  Healthy  Unhealthy  Progress Deadline&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2019-04-18T19:23:23+02:00&#10;&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node ID   Task Group  Version  Desired  Status   Created  Modified&#10;3747eb07  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;500575e9  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;c8094cf3  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;ea58300c  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;ead6d23f  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  29s ago  13s ago&#10;&#10;$ nomad alloc status 3747eb07&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 3747eb07&#10;Eval <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 781fb5f2&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> nginx.services<span class="o">[</span>3<span class="o">]</span>&#10;Node <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> d18851d5&#10;Job <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> nginx&#10;Job <span class="nv">Version</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">0</span>&#10;Client <span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> running&#10;Client <span class="nv">Description</span>  <span class="o">=</span> Tasks are running&#10;Desired <span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> run&#10;Desired <span class="nv">Description</span> <span class="o">=</span> &lt;none&gt;&#10;<span class="nv">Created</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 56s ago&#10;<span class="nv">Modified</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 40s ago&#10;Deployment <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 81f57b6d&#10;Deployment <span class="nv">Health</span>   <span class="o">=</span> healthy&#10;&#10;Task <span class="s2">&#34;nginx&#34;</span> is <span class="s2">&#34;running&#34;</span>&#10;Task Resources&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Disk&nbsp;&nbsp;&nbsp;&nbsp; Addresses&#10;0/100 MHz  <span class="m">788</span> KiB/1.0 GiB  <span class="m">300</span> MiB  http: 127.0.0.1:29939&#10;&#10;Task Events:&#10;Started <span class="nv">At</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 2019-04-18T17:13:08Z&#10;Finished <span class="nv">At</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> N/A&#10;Total <span class="nv">Restarts</span> <span class="o">=</span> <span class="m">0</span>&#10;Last <span class="nv">Restart</span>   <span class="o">=</span> N/A&#10;&#10;Recent Events:&#10;Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Description&#10;2019-04-18T19:13:08+02:00  Started&nbsp;&nbsp;&nbsp;&nbsp; Task started by client&#10;2019-04-18T19:13:07+02:00  Task Setup  Building Task Directory&#10;2019-04-18T19:13:07+02:00  Received&nbsp;&nbsp;&nbsp;&nbsp;Task received by client</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-status-before.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job status nginx&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> nginx&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> nginx&#10;Submit <span class="nv">Date</span>   <span class="o">=</span> 2019-04-18T19:17:54+02:00&#10;<span class="nv">Type</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> service&#10;<span class="nv">Priority</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">50</span>&#10;<span class="nv">Datacenters</span>   <span class="o">=</span> localhost&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> running&#10;<span class="nv">Periodic</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Parameterized</span> <span class="o">=</span> <span class="nb">false</span>&#10;&#10;Summary&#10;Task Group  Queued  Starting  Running  Failed  Complete  Lost&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">0</span>&#10;&#10;Latest Deployment&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> ba20066a&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> successful&#10;<span class="nv">Description</span> <span class="o">=</span> Deployment completed successfully&#10;&#10;Deployed&#10;Task Group  Desired  Placed  Healthy  Unhealthy  Progress Deadline&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">5</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2019-04-18T19:29:19+02:00&#10;&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node ID   Task Group  Version  Desired  Status&nbsp;&nbsp;&nbsp;&nbsp;Created&nbsp;&nbsp;&nbsp;&nbsp;Modified&#10;fabcf384  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   2m36s ago  2m20s ago&#10;ccb57008  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   2m53s ago  2m37s ago&#10;b06c743d  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   3m10s ago  2m54s ago&#10;<span class="m">56733896</span>  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   3m28s ago  3m12s ago&#10;71c8bb5b  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">1</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running   3m45s ago  3m29s ago&#10;500575e9  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  3m44s ago&#10;c8094cf3  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  3m10s ago&#10;3747eb07  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  2m53s ago&#10;ea58300c  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  3m27s ago&#10;ead6d23f  d18851d5  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp; <span class="nb">complete</span>  8m31s ago  2m35s ago</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-status-after.sh</span>
    </div>
</div>
<div class="media">
<script type="text/javascript" src="https://asciinema.org/a/241669.js" id="asciicast-241669" async></script>
<noscript><a href="https://asciinema.org/a/241669" target="_blank"><img src="https://asciinema.org/a/241669.png" width="650" height="450"></a></noscript>
</div>
<p>El proceso de despliegue también se puede monitorizar desde la interfaz web que ofrece Nomad.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-before_hu67a332684efae6ed992319050f36f296_119290_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Antes del proceso de despliegue rolling update en Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-before_hu67a332684efae6ed992319050f36f296_119290_300x200_fit_box_3.png" width="197" height="200" alt="Antes del proceso de despliegue rolling update en Nomad" title="Antes del proceso de despliegue rolling update en Nomad"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-while_hu1bb43ff17075cacd6588f52ea91a2b44_119731_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Durante el proceso de despliegue rolling update en Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-while_hu1bb43ff17075cacd6588f52ea91a2b44_119731_300x200_fit_box_3.png" width="197" height="200" alt="Durante el proceso de despliegue rolling update en Nomad" title="Durante el proceso de despliegue rolling update en Nomad"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-after_hu07bde1516a5a8318da3a99b05cb30d02_122603_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Después del proceso de despliegue rolling update en Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/images/nomad-rolling-update-after_hu07bde1516a5a8318da3a99b05cb30d02_122603_300x200_fit_box_3.png" width="197" height="200" alt="Después del proceso de despliegue rolling update en Nomad" title="Después del proceso de despliegue rolling update en Nomad"  class="lozad "></a></p>
<figcaption>Progreso del despliegue rolling update en Nomad</figcaption>
</figure>
</div>
<p>En este ejemplo los servicios están en contenedores docker, también se observa que la versión de los contenedores en ejecución pasan de la versión <em>stable-alpine</em> a <em>alpine</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  NAMES&#10;476d2063b64b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:29939-&gt;80/tcp, 127.0.0.1:29939-&gt;80/udp   nginx-3747eb07-f9da-a9f5-0720-1b2314baac12&#10;e0a533348f44&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:21085-&gt;80/tcp, 127.0.0.1:21085-&gt;80/udp   nginx-ea58300c-c4a1-cc3d-46a0-d5b30c276ede&#10;4da9babdd549&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:30061-&gt;80/tcp, 127.0.0.1:30061-&gt;80/udp   nginx-c8094cf3-5c3c-eaaa-1bcf-9368100bb0ef&#10;068c6db6a86c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:26606-&gt;80/tcp, 127.0.0.1:26606-&gt;80/udp   nginx-ead6d23f-abdd-8b33-7b61-c2ad64dede5c&#10;19190e778a5a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:stable-alpine   <span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:29835-&gt;80/tcp, 127.0.0.1:29835-&gt;80/udp   nginx-500575e9-62ce-868a-f142-869475aacde5</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps-before.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker ps&#10;CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  NAMES&#10;03faf7ed4467&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   About a minute ago   Up About a minute   127.0.0.1:27212-&gt;80/tcp, 127.0.0.1:27212-&gt;80/udp   nginx-fabcf384-5675-fe7f-4c61-5fa7385c54d2&#10;4185977fbddb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   <span class="m">2</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up <span class="m">2</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:26686-&gt;80/tcp, 127.0.0.1:26686-&gt;80/udp   nginx-ccb57008-e426-1684-fd39-97cb0f3b51f7&#10;c6586d22406e&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   <span class="m">2</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up <span class="m">2</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:23508-&gt;80/tcp, 127.0.0.1:23508-&gt;80/udp   nginx-b06c743d-d2b3-0be3-d82b-762184dda4ec&#10;046253c1972b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   <span class="m">2</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up <span class="m">2</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:31800-&gt;80/tcp, 127.0.0.1:31800-&gt;80/udp   nginx-56733896-ab20-ab8f-36c9-ac1d13b0f1a2&#10;88788b4133ea&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nginx:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s2">&#34;nginx -g &#39;daemon of…&#34;</span>   <span class="m">3</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Up <span class="m">3</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;127.0.0.1:30844-&gt;80/tcp, 127.0.0.1:30844-&gt;80/udp   nginx-71c8bb5b-a23b-7edc-cbb3-f9d0b6bdffe6</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps-after.sh</span>
    </div>
</div>
<p>Nomad y <a href="https://www.consul.io/">Consul</a> se inician con los siguientes comandos en modo desarrollo comentados en el artículo <a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev -datacenter localhost&#10;$ sudo nomad agent -dev -dc localhost&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul-nomad.sh</span>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicios-nomad/">Servicios con persistencia en el orquestador Nomad</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/</id>
        <title>Introducción a Nomad para gestionar aplicaciones y microservicios</title>
        <updated>2019-04-17T23:00:00+02:00</updated>
        <published>2019-04-14T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En las aplicaciones basadas en microservicios dado el número de ellos y de instancias tienen han de gestionarse como si fuesen ganado en vez como si fuesen animales de compañía. Nomad es un orquestador de servicios que a diferencia de Docker Swarm permite gestionar servicios con otros sistemas de ejecución además de contenedores docker y a diferencia de Kubernetes es más sencillo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="260" alt="HashiCorp Nomad" title="HashiCorp Nomad"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="278" alt="HashiCorp Consul" title="HashiCorp Consul"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp"  class=""></p>
</div>
<p>En las arquitecturas de aplicaciones basadas en microservicios cada microservicio o simplemente servicio es una aplicación distinta e independiente, son varias aplicaciones que hay que gestionar y desplegar de forma individual o de forma coordinada.</p>
<p>Dado su número hay que automatizar todas las tareas para tratar de conseguir la menor intervención manual, ningún proceso manual si es posible. Para que no sean inmanejables han de tratarse como ganado de forma masiva en vez de como animales de compañía que requieran atención individual para continuar generando valor en un proyecto con el tiempo disponible en vez de dedicarlo a tareas que no lo aportan.</p>
<p>Dado que cada microservicio puede emplear una tecnología diferente es necesario algo que permita tratarlos a todos por igual, esta tecnología son los contenedores que hacen un papel similar al que hacen en el transporte de mercancías en barcos.</p>
<p>Hay varias tecnologías para orquestar o gestionar los microservicios y crear <em>clusters</em> de máquinas en las que desplegarlos, una de ellas es <a href="https://docs.docker.com/swarm/">Docker Swarm</a> sencilla e integrada con <a href="https://www.docker.com/">Docker</a> pero no con tantas funcionalidades como otra de las populares que es <a href="https://kubernetes.io/">Kubernetes</a> y para usarlo en una máquina local <a href="https://kubernetes.io/docs/setup/minikube/">minikube</a>, ofrece mas funcionalidad pero añade una complejidad significativa que para algunos casos de uso no compensa además requiere mas tiempo para dominarla. Una solución intermedia conservando la sencillez pero con mas funcionalidad es <a href="https://www.nomadproject.io/">Nomad</a> de <a href="https://www.hashicorp.com/">HashiCorp</a>. Otra de sus características destacadas es que el <em>cluster</em> de Nomad puede estar formado en diferentes centros de datos y proveedores de la nube al mismo tiempo, por ejemplo en <a href="https://aws.amazon.com/es/">AWS</a>, <a href="https://cloud.google.com/">GCP</a> entre otros o centros de datos híbridos en la nube y propios. En la sección <a href="https://www.nomadproject.io/intro/vs/index.html">Nomad vs. Other Software</a> de su documentación se compara con otras opciones.</p>
<p>Nomad es distribuido, con alta disponibilidad y escalable a cientos de nodos en múltiples centros de datos y regiones. No es una solución completa por si sola pero se integra con otras. No ofrece descubrimiento de servicios pero se integra muy bien con <a href="https://www.consul.io/">Consul</a>. No es un balanceador de carga pero se integra con <a href="https://nginx.org/">Nginx</a>, <a href="https://fabiolb.net/">Fabio</a>, <a href="https://traefik.io/">Traefik</a> y <a href="https://www.haproxy.org/">HAproxy</a> automatizando su configuración desde Consul. No integra un gestor de secretos pero se integra con <a href="https://www.vaultproject.io/">Vault</a>. No soporta escalado y no integra de por sí varias de estas funcionalidades como Kubernetes pero es más simple.</p>
<p>Nomad a diferencia Docker no solo puede gestionar contenedores docker sino también tareas del sistema y otras como máquinas virtuales <a href="https://www.qemu.org/">qemu</a> o contenedores con <a href="https://coreos.com/rkt/">rkt</a>, a diferencia de Kubernetes es mucho mas sencilla pero conservando funcionalidad suficiente para muchos casos de uso. Nomad requiere de otra de las herramientas de HashiCorp que es Consul para el registro y descubrimiento y para la configuración del <em>cluster</em>, también se integra con otras de sus herramientas como Vault para guardar cifrados datos sensibles como contraseñas y certificados. Con <a href="https://www.consul.io/docs/connect/platform/nomad.html">Connect</a> es capaz de proporcionar conexión TLS con autenticación mutua de forma transparente para los servicios.</p>
<p>Los <em>jobs</em> son la unidad de trabajo que contienen la definición de los servicios, se definen en un <a href="https://www.nomadproject.io/docs/job-specification/index.html">archivo de configuración</a> donde los elementos son el nombre, los grupos de tareas, las tareas y en cada tarea el <em>driver</em> que usa dependiendo del cual se proporciona la configuración apropiada. El <em>driver</em> determina como es gestionada el tipo de tarea puede ser un contenedor de docker, un proceso del sistema, una máquina virtual de <em>qemu</em> o un contenedor <em>rkt</em>, a diferencia de Docker Swarm que solo puede gestionar contenedores docker. Se pueden configurar variables de entorno, memoria asignada a cada tarea, propiedades de red y CPU.</p>
<p>Nomad y Nomad cada uno son un binario ejecutable sin ninguna otra dependencia. Basta con descargarlos e incluirlos en el <em>path</em> del sistema. En este ejemplo hay definido un <em>job</em> compuesto por una tarea de un contenedor docker de <a href="https://nginx.org/">nginx</a> configurado en un puerto aleatorio y con 1 GB de memoria para cada una de las dos instancias del servicio. Dado que lo usa es necesario <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">instalar Docker</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">job &#34;nginx&#34; {&#10;  datacenters = [&#34;localhost&#34;]&#10;&#10;  type = &#34;service&#34;&#10;&#10;  update {&#10;&nbsp;&nbsp;&nbsp;&nbsp;stagger&nbsp;&nbsp;&nbsp;&nbsp;  = &#34;30s&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;canary&nbsp;&nbsp;&nbsp;&nbsp;   = 2&#10;&nbsp;&nbsp;&nbsp;&nbsp;max_parallel = 2&#10;  }&#10;&#10;  group &#34;services&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;count = 2&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;task &#34;nginx&#34; {&#10;&nbsp;&nbsp;&nbsp;&nbsp;  driver = &#34;docker&#34;&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  config {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image = &#34;nginx:alpine&#34;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port_map {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  http = 80&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  resources {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory = 1024 # MB&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network {&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port &#34;http&#34; {}&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;  }&#10;}&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.nomad</span>
    </div>
</div>
<p>Nomad y Nomad se ejecutan con los siguientes comandos en modo desarrollo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ consul agent -dev -datacenter <span class="nv">localhost</span>&#10;<span class="o">==</span>&gt; Starting Consul agent...&#10;<span class="o">==</span>&gt; Consul agent running!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: <span class="s1">&#39;v1.4.4&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID: <span class="s1">&#39;1934d5b2-0f3f-ffdd-8378-7ab8a6207bb1&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node name: <span class="s1">&#39;archlinux&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Datacenter: <span class="s1">&#39;localhost&#39;</span> <span class="o">(</span>Segment: <span class="s1">&#39;&lt;all&gt;&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span> <span class="o">(</span>Bootstrap: <span class="nb">false</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Client Addr: <span class="o">[</span>127.0.0.1<span class="o">]</span> <span class="o">(</span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  Cluster Addr: 127.0.0.1 <span class="o">(</span>LAN: 8301, WAN: 8302<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: <span class="nb">false</span>&#10;&#10;$ sudo nomad agent -dev -dc localhost&#10;<span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> picodotdev: &#10;<span class="o">==</span>&gt; No configuration files <span class="nv">loaded</span>&#10;<span class="o">==</span>&gt; Starting Nomad agent...&#10;<span class="o">==</span>&gt; Nomad agent configuration:&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Advertise Addrs: HTTP: 127.0.0.1:4646<span class="p">;</span> RPC: 127.0.0.1:4647<span class="p">;</span> Serf: 127.0.0.1:4648&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bind Addrs: HTTP: 127.0.0.1:4646<span class="p">;</span> RPC: 127.0.0.1:4647<span class="p">;</span> Serf: 127.0.0.1:4648&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Client: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Log Level: DEBUG&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Region: global <span class="o">(</span>DC: localhost<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: 0.9.0</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-consul.sh</span>
    </div>
</div>
<p>Iniciados se pueden enviar <em>jobs</em> y ver su estado, dirección y puerto asignado así como los <em>logs</em> generados.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nomad job plan nginx.nomad&#10;$ nomad job run nginx.nomad&#10;<span class="o">==</span>&gt; Monitoring evaluation <span class="s2">&#34;b2b07746&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation triggered by job <span class="s2">&#34;nginx&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Allocation <span class="s2">&#34;60f3d102&#34;</span> created: node <span class="s2">&#34;58823be1&#34;</span>, group <span class="s2">&#34;services&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Allocation <span class="s2">&#34;6e12ae8f&#34;</span> created: node <span class="s2">&#34;58823be1&#34;</span>, group <span class="s2">&#34;services&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation within deployment: <span class="s2">&#34;0dddab79&#34;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Allocation <span class="s2">&#34;6e12ae8f&#34;</span> status changed: <span class="s2">&#34;pending&#34;</span> -&gt; <span class="s2">&#34;running&#34;</span> <span class="o">(</span>Tasks are running<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Allocation <span class="s2">&#34;60f3d102&#34;</span> status changed: <span class="s2">&#34;pending&#34;</span> -&gt; <span class="s2">&#34;running&#34;</span> <span class="o">(</span>Tasks are running<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;Evaluation status changed: <span class="s2">&#34;pending&#34;</span> -&gt; <span class="s2">&#34;complete&#34;</span>&#10;<span class="o">==</span>&gt; Evaluation <span class="s2">&#34;b2b07746&#34;</span> finished with status <span class="s2">&#34;complete&#34;</span>&#10;&#10;$ nomad job status nginx&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> nginx&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> nginx&#10;Submit <span class="nv">Date</span>   <span class="o">=</span> 2019-04-14T13:31:53+02:00&#10;<span class="nv">Type</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> service&#10;<span class="nv">Priority</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">50</span>&#10;<span class="nv">Datacenters</span>   <span class="o">=</span> localhost&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> running&#10;<span class="nv">Periodic</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="nb">false</span>&#10;<span class="nv">Parameterized</span> <span class="o">=</span> <span class="nb">false</span>&#10;&#10;Summary&#10;Task Group  Queued  Starting  Running  Failed  Complete  Lost&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">2</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="m">0</span>&#10;&#10;Latest Deployment&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 0dddab79&#10;<span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> running&#10;<span class="nv">Description</span> <span class="o">=</span> Deployment is running&#10;&#10;Deployed&#10;Task Group  Desired  Placed  Healthy  Unhealthy  Progress Deadline&#10;services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">2</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">2</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="m">2</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  2019-04-14T13:42:04+02:00&#10;&#10;Allocations&#10;ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node ID   Task Group  Version  Desired  Status   Created  Modified&#10;60f3d102  58823be1  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  12s ago  1s ago&#10;6e12ae8f  58823be1  services&nbsp;&nbsp;&nbsp;&nbsp;<span class="m">0</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;run&nbsp;&nbsp;&nbsp;&nbsp;  running  12s ago  1s ago&#10;&#10;$ nomad alloc status 60f3d102&#10;<span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> 60f3d102&#10;Eval <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> b2b07746&#10;<span class="nv">Name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> nginx.services<span class="o">[</span>1<span class="o">]</span>&#10;Node <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 58823be1&#10;Job <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> nginx&#10;Job <span class="nv">Version</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="m">0</span>&#10;Client <span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> running&#10;Client <span class="nv">Description</span>  <span class="o">=</span> Tasks are running&#10;Desired <span class="nv">Status</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> run&#10;Desired <span class="nv">Description</span> <span class="o">=</span> &lt;none&gt;&#10;<span class="nv">Created</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 56s ago&#10;<span class="nv">Modified</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> 45s ago&#10;Deployment <span class="nv">ID</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> 0dddab79&#10;Deployment <span class="nv">Health</span>   <span class="o">=</span> healthy&#10;&#10;Task <span class="s2">&#34;nginx&#34;</span> is <span class="s2">&#34;running&#34;</span>&#10;Task Resources&#10;CPU&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Memory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Disk&nbsp;&nbsp;&nbsp;&nbsp; Addresses&#10;0/100 MHz  <span class="m">820</span> KiB/1.0 GiB  <span class="m">300</span> MiB  http: 127.0.0.1:28421&#10;&#10;Task Events:&#10;Started <span class="nv">At</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> 2019-04-14T11:31:54Z&#10;Finished <span class="nv">At</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> N/A&#10;Total <span class="nv">Restarts</span> <span class="o">=</span> <span class="m">0</span>&#10;Last <span class="nv">Restart</span>   <span class="o">=</span> N/A&#10;&#10;Recent Events:&#10;Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Description&#10;2019-04-14T13:31:54+02:00  Started&nbsp;&nbsp;&nbsp;&nbsp; Task started by client&#10;2019-04-14T13:31:53+02:00  Task Setup  Building Task Directory&#10;2019-04-14T13:31:53+02:00  Received&nbsp;&nbsp;&nbsp;&nbsp;Task received by client&#10;&#10;$ nomad alloc logs 60f3d102&#10;172.17.0.1 - - <span class="o">[</span>14/Apr/2019:11:33:17 +0000<span class="o">]</span> <span class="s2">&#34;GET / HTTP/1.1&#34;</span> <span class="m">200</span> <span class="m">612</span> <span class="s2">&#34;-&#34;</span> <span class="s2">&#34;Mozilla/5.0 (X11; Linux x86_64; rv:66.0) Gecko/20100101 Firefox/66.0&#34;</span> <span class="s2">&#34;-&#34;</span>&#10;172.17.0.1 - - <span class="o">[</span>14/Apr/2019:11:33:17 +0000<span class="o">]</span> <span class="s2">&#34;GET /favicon.ico HTTP/1.1&#34;</span> <span class="m">404</span> <span class="m">154</span> <span class="s2">&#34;-&#34;</span> <span class="s2">&#34;Mozilla/5.0 (X11; Linux x86_64; rv:66.0) Gecko/20100101 Firefox/66.0&#34;</span> <span class="s2">&#34;-&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad.sh</span>
    </div>
</div>
<p>También poseen una interfaz web integrada en la que consultar la misma información, la de Consul está en el puerto <em>8500</em> y la de Nomad en el <em>4646</em> donde ver el estado de los <em>jobs</em> y el progreso de los despliegues.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/images/consul_hu04dfd0a784258ffab8de29ae08a6fa53_49981_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/images/consul_hu04dfd0a784258ffab8de29ae08a6fa53_49981_200x150_fit_box_3.png" width="200" height="99" alt="Consul" title="Consul"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/images/nomad-1_hu543e80f6165a80d0eda612b240feaa6b_34563_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/images/nomad-1_hu543e80f6165a80d0eda612b240feaa6b_34563_200x150_fit_box_3.png" width="200" height="99" alt="Nomad" title="Nomad"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/images/nomad-2_hu78cafc3dc4ae78de08bf9c5133a990a6_67847_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/images/nomad-2_hu78cafc3dc4ae78de08bf9c5133a990a6_67847_200x150_fit_box_3.png" width="200" height="136" alt="Nomad" title="Nomad"  class="lozad "></a></p>
<figcaption>Interfaces web de Consul y Nomad</figcaption>
</figure>
</div>
<p>Nomad permite varias estrategias para actualizar los <em>jobs</em> a una nueva versión de un servicio, basta modificar la configuración del <em>job</em>, volverlo a enviar a Nomad y este se encarga de <a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">actualizar las instancias siguiendo la estrategia <em>rolling</em>, <em>blue/green</em> o <em>canary</em></a> definida en el <em>job</em>, pero eso lo muestro mas detalladamente en otro artículo.</p>
<p>La <a href="https://www.nomadproject.io/docs/index.html">documentación de Nomad</a>, Nomad y otros productos de HashiCorp dedicados a la infraestructura en la nube esta muy bien explicada y detallada, este artículo solo es un resumen de las partes básicas para conocer como empezar a usarlo. En el siguiente vídeo se hace una pequeña explicación y demostración.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/A6CuZUoINX0" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/04/servicios-con-persistencia-en-el-orquestador-de-microservicios-nomad/">Servicios con persistencia en el orquestador Nomad</a></li>
<li><a href="http://targetveb.com/nomad-simple-deployment-monitoring-applications.html">Nomad – Simple deployment and monitoring of applications</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/</id>
        <title>Servidor OAuth, gateway y servicio REST utilizando tokens JWT con Spring</title>
        <updated>2019-02-08T20:00:00+01:00</updated>
        <published>2019-02-08T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Hace unos días encontré un <a href="https://www.idealista.com/labs/blog/spring-framework/autenticando-el-api-de-idealista-hipotecas-con-spring-oauth2-y-zuul/">articulo del blog técnico de los desarrolladores de Idealista</a>. En él comentaban que tenían una API para realizar simulaciones hipotecarias usando <a href="https://spring.io/">Spring</a> como <em>framework</em>, <a href="https://spring.io/projects/spring-security-oauth">Spring Security OAuth</a> como forma de autenticación y autorización y JWT como forma de codificar el <em>token</em> que otorga el servidor OAuth y contiene la información necesaria para que el servidor de recursos permita o no el acceso al recurso que aloja.</p>
<p>Ya había oído mencionar JWT pero este artículo me ha permitido conocer su utilidad, y no es poca. Como se menciona en el artículo JWT tiene la ventaja de que que no es necesario persistirlo en una base de datos y contiene toda la información que el servidor de recursos necesita para realizar la autorización ya que es capaz de cargar con información arbitraria que el servicio desee en el momento de la emisión, la autenticación y comprobación de que ha sido emitido por el servidor OAuth la realiza sabiendo que el <em>token</em> está firmado.</p>
<p>Los <em>tokens</em> son una serie de caracteres aparentemente sin sentido al estar <em>hasheados</em> y firmados con una clave compartida entre servidor OAuth y el servidor de recurso o para mayor seguridad mediante clave privada en el servidor OAuth y su clave pública asociada en el servidor de recursos, con la firma el servidor de recursos el capaz de comprobar la autenticidad del <em>token</em> sin necesidad de comunicarse con él. Los <em>tokens</em> de OAuth son más cortos, los <em>tokens</em> JWT con más largos ya que contienen información adicional. Se componen de tres partes separadas por un punto, una cabecera con el algoritmo <em>hash</em> utilizado y tipo de <em>token</em>, un documento JSON con datos y una firma de verificación.</p>
<p>El hecho de que los <em>tokens</em> JWT no sea necesario persistirlos en base de datos elimina la necesidad de tener su infraestructura, como desventaja es que no es tan fácil de revocar el acceso a un <em>token</em> JWT y por ello se les concede un tiempo de expiración corto. En el articulo se analizaba su infraestructura y hay varios elementos configurables de diferentes formas, son:</p>
<ul>
<li>El servidor OAuth que proporciona los tokens, realiza la autenticación y proporciona las autorizaciones.</li>
<li>El servidor del recurso al que se le envía el <em>token</em>, en base a las autorizaciones otorgadas por el servidor OAuth al token y las autorizaciones necesarias para acceder al recurso concedo o no acceso al recurso.</li>
<li>En el caso de múltiples servicios con múltiples recursos es conveniente un <em>gateway</em> para que sea el punto de entrada de todos los servicios, de esta forma los clientes solo necesitarán conocer el <em>gateway</em> en vez de los múltiples servicios individuales. El <em>gateway</em> se encarga de hacer de <em>proxy</em> en base a información en la petición como ruta, <em>host</em>, parámetros, cabeceras, &hellip; de redirigir la petición al servicio encargado de atenderla y devolver la respuesta. Un ejemplo de <em>gateway</em> es <a href="https://github.com/Netflix/zuul">Zuul</a> como ya he mostrado en el artículo <a href="https://picodotdev.github.io/blog-bitix/2018/10/proxy-para-microservicios-con-spring-cloud-netflix-y-zuul/">Proxy para microservicios con Spring Cloud Netflix y Zuul</a>.</li>
</ul>
<p>Puede haber más elementos en la infraestructura y quizá sea el caso de un sistema real como sería un servidor de descubrimiento con <a href="https://github.com/Netflix/eureka">Eureka</a> o un servidor de configuración con <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a>, en la <a href="https://picodotdev.github.io/blog-bitix/series/spring-cloud/">serie de artículos sobre Spring Cloud</a> los muestro. Para este ejemplo obvio estos otros servidores y me centro en los más relacionados con el artículo. Aunque lógicamente son diferentes servicios se puede crear uno que proporcione varios de ellos al mismo tiempo, por ejemplo, un servicio que haga al mismo tiempo de servidor de OAuth y de <em>gateway</em> que es una de las posibles cambios que dejan al final en el artículo de Idealista.</p>
<p>Spring ha creado su propio proyecto de <em>gateway</em> para sustituir a Zuul, <a href="https://spring.io/projects/spring-cloud-gateway">Spring Cloud Gateway</a> y será el que use en este artículo. Soporta <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> 2, <a href="https://projects.spring.io/spring-framework/">Spring Framework</a> 5, coincidencia por cualquier parámetro de la petición, filtros y transformaciones o predicados, el patrón <em>circuit breaker</em>, limitación de peticiones y reescritura de rutas.</p>
<p>Los servicios los mantengo separados ya que al combinarlos pueden surgir problemas de integración al usar diferentes versiones de librerías de Spring aún cuando todos los proyectos son de Spring. Por ejemplo, Spring Cloud Gateway utiliza Spring WebFlux que puede ser diferente del lo que utilice Spring Security OAuth y la integración puede no estar exenta de problemas.</p>
<div class="media">
<figure>
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/oauth.svg" width="200" height="200" alt="OAuth" title="OAuth"  class="lozad ">

<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/jwt.svg" width="318" height="168" alt="JWT" title="JWT"  class="lozad "></p>
</figure>
</div>
<h3 id="servidor-oauth">Servidor OAuth</h3>
<div class="alert alert-warning">
<p>Spring ha marcado como obsoleta su implementación de servidor OAuth mostrada a continuación y recomienda usar un proveedor alternativo de autenticación como <a href="https://www.keycloak.org/">Keycloak</a> o <a href="https://www.okta.com/">Okta</a> u otros servicios como <a href="https://www.google.es/">Google</a> o <a href="https://github.com/">Github</a>.</p>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</a> muestro un ejemplo con Keycloak y en <a href="https://picodotdev.github.io/blog-bitix/2020/11/autenticacion-con-openid-oauth-en-cualquier-web-con-nginx-y-de-forma-nativa-con-spring-boot/">Autenticación con OpenID/OAuth en cualquier web con Nginx y de forma nativa con Spring Boot</a> como añadir autenticación OAuth a cualquier página web y de forma nativa en una aplicación de Spring Boot.</p>
</div>
<p>Empezando por el servidor OAuth y las dependencias que necesita, son <em>spring-security-oauth2</em> y para generar <em>tokens</em> JWT <em>spring-security-jwt</em>, el resto son dependencias necesarias de Spring Boot</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.0.8.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springoauth.oauth.Main&#39;</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-security&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.security:spring-security-jwt:1.0.10.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;javax.xml.bind:jaxb-api:2.3.0&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.sun.xml.bind:jaxb-impl:2.3.0&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jaxb:jaxb-runtime:2.3.0&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;javax.activation:activation:1.1.1&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>oauth/build.gradle</span>
    </div>
</div>
<p>La clase principal de Spring Boot y que inicia la aplicación no tiene nada especial salvo la necesaria anotación <em>@EnableAuthorizationServer</em> para habilitar el servidor OAuth.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springoauth.oauth</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="nd">@EnableAuthorizationServer</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>oauth/Main.java</span>
    </div>
</div>
<p>La parte importante está en la clase de configuración. La clase <em>JwtAccessTokenConverter</em> se encarga de codificar el token, la clase <em>TokenStore</em> de generarlos, <em>DefaultTokenServices</em> contiene referencias a ambos, los métodos heredados <em>configure()</em> configuran diferentes aspectos del servicio como los requisitos para acceder a los <em>endpoint</em> para ver el contenido de un <em>token</em> o los clientes OAuth que reconoce. Para cada cliente se necesita proporcionar el identificativo del cliente, su clave privada o <em>secret</em>, identificativo del recurso, que tipos de concesiones, <em>grants</em>, formas o flujos de obtener el <em>token</em>, que autoridades y ámbitos o <em>scopes</em> se le asigna al token.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springoauth.oauth</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Configuration</span>&#10;<span class="nd">@EnableAuthorizationServer</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AuthorizationServerConfiguration</span> <span class="kd">extends</span> <span class="n">AuthorizationServerConfigurerAdapter</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ClientDetailsService</span> <span class="n">clientDetailsService</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DefaultTokenServices</span> <span class="n">tokenServices</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">JwtAccessTokenConverter</span> <span class="nf">tokenConverter</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JwtAccessTokenConverter</span> <span class="n">converter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JwtAccessTokenConverter</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">converter</span><span class="o">.</span><span class="na">setSigningKey</span><span class="o">(</span><span class="s">&#34;1234567890&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">converter</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">TokenStore</span> <span class="nf">tokenStore</span><span class="o">(</span><span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">JwtTokenStore</span><span class="o">(</span><span class="n">tokenConverter</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultTokenServices</span> <span class="nf">tokenServices</span><span class="o">(</span><span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">,</span> <span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultTokenServices</span> <span class="n">tokenServices</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTokenServices</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenServices</span><span class="o">.</span><span class="na">setTokenStore</span><span class="o">(</span><span class="n">tokenStore</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenServices</span><span class="o">.</span><span class="na">setTokenEnhancer</span><span class="o">(</span><span class="n">tokenConverter</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">tokenServices</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">TokenStoreUserApprovalHandler</span> <span class="nf">userApprovalHandler</span><span class="o">(</span><span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">,</span> <span class="n">ClientDetailsService</span> <span class="n">clientDetailsService</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TokenStoreUserApprovalHandler</span> <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TokenStoreUserApprovalHandler</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">handler</span><span class="o">.</span><span class="na">setTokenStore</span><span class="o">(</span><span class="n">tokenStore</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">handler</span><span class="o">.</span><span class="na">setRequestFactory</span><span class="o">(</span><span class="k">new</span> <span class="n">DefaultOAuth2RequestFactory</span><span class="o">(</span><span class="n">clientDetailsService</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">handler</span><span class="o">.</span><span class="na">setClientDetailsService</span><span class="o">(</span><span class="n">clientDetailsService</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">handler</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10; &#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ApprovalStore</span> <span class="nf">approvalStore</span><span class="o">(</span><span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TokenApprovalStore</span> <span class="n">store</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TokenApprovalStore</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">store</span><span class="o">.</span><span class="na">setTokenStore</span><span class="o">(</span><span class="n">tokenStore</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">store</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">AuthorizationServerSecurityConfigurer</span> <span class="n">security</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">security</span><span class="o">.</span><span class="na">allowFormAuthenticationForClients</span><span class="o">().</span><span class="na">tokenKeyAccess</span><span class="o">(</span><span class="s">&#34;isAuthenticated()&#34;</span><span class="o">).</span><span class="na">checkTokenAccess</span><span class="o">(</span><span class="s">&#34;isAuthenticated()&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">AuthorizationServerEndpointsConfigurer</span> <span class="n">endpoints</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">endpoints</span><span class="o">.</span><span class="na">tokenServices</span><span class="o">(</span><span class="n">tokenServices</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">ClientDetailsServiceConfigurer</span> <span class="n">clients</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">clients</span><span class="o">.</span><span class="na">inMemory</span><span class="o">().</span><span class="na">withClient</span><span class="o">(</span><span class="s">&#34;client&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">secret</span><span class="o">(</span><span class="s">&#34;{noop}1234567890&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">resourceIds</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">authorizedGrantTypes</span><span class="o">(</span><span class="s">&#34;client_credentials&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">authorities</span><span class="o">(</span><span class="s">&#34;CLIENT&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">scopes</span><span class="o">(</span><span class="s">&#34;read&#34;</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>oauth/AuthorizationServerConfiguration.java</span>
    </div>
</div>
<p>El servidor OAuth de ejemplo se inicia con el comando <em>./gradlew oauth:run</em>. Para obtener un <em>token</em> se realiza con las siguientes peticiones. Por defecto, se solicita autenticación <em>basic</em> pero la invocación al método <em>allowFormAuthenticationForClients()</em> hace que los parámetros de las credenciales se puedan indicar por parámetros.</p>
<p>Con el <em>endpoint</em> <em>/oauth/check_token</em> se decodifica el <em>token</em>. En la página de JWT hay una herramienta para decodificar el token y verificar de la firma introduciendo clave de firma en la casilla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -X POST -u <span class="s2">&#34;client:1234567890&#34;</span> -d <span class="s2">&#34;grant_type=client_credentials&#34;</span> <span class="s2">&#34;http://localhost:8095/oauth/token&#34;</span>&#10;<span class="o">{</span><span class="s2">&#34;access_token&#34;</span>:<span class="s2">&#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ0MSwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEwMzE0NTk4LTRjZDctNDRmNi1hMmM4LTNjYjA5MGE1MjUxZSIsImNsaWVudF9pZCI6ImNsaWVudCJ9.n8Dwcd8YTms2Hl0YgTho9QdBWD1hAnOEmkcS-Wefy6c&#34;</span>,<span class="s2">&#34;token_type&#34;</span>:<span class="s2">&#34;bearer&#34;</span>,<span class="s2">&#34;expires_in&#34;</span>:43199,<span class="s2">&#34;scope&#34;</span>:<span class="s2">&#34;read&#34;</span>,<span class="s2">&#34;jti&#34;</span>:<span class="s2">&#34;10314598-4cd7-44f6-a2c8-3cb090a5251e&#34;</span><span class="o">}</span>&#10;$ curl -X POST <span class="s2">&#34;http://localhost:8095/oauth/token?grant_type=client_credentials&amp;client_id=client&amp;client_secret=1234567890&#34;</span>&#10;<span class="o">{</span><span class="s2">&#34;access_token&#34;</span>:<span class="s2">&#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&#34;</span>,<span class="s2">&#34;token_type&#34;</span>:<span class="s2">&#34;bearer&#34;</span>,<span class="s2">&#34;expires_in&#34;</span>:43199,<span class="s2">&#34;scope&#34;</span>:<span class="s2">&#34;read&#34;</span>,<span class="s2">&#34;jti&#34;</span>:<span class="s2">&#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&#34;</span><span class="o">}</span>&#10;&#10;$ curl -X POST -u <span class="s2">&#34;client:1234567890&#34;</span> -d <span class="s2">&#34;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&#34;</span> http://localhost:8095/oauth/check_token&#10;<span class="o">{</span><span class="s2">&#34;aud&#34;</span>:<span class="o">[</span><span class="s2">&#34;service&#34;</span><span class="o">]</span>,<span class="s2">&#34;scope&#34;</span>:<span class="o">[</span><span class="s2">&#34;read&#34;</span><span class="o">]</span>,<span class="s2">&#34;active&#34;</span>:true,<span class="s2">&#34;exp&#34;</span>:1549692458,<span class="s2">&#34;authorities&#34;</span>:<span class="o">[</span><span class="s2">&#34;CLIENT&#34;</span><span class="o">]</span>,<span class="s2">&#34;jti&#34;</span>:<span class="s2">&#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&#34;</span>,<span class="s2">&#34;client_id&#34;</span>:<span class="s2">&#34;client&#34;</span><span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>oauth/curl.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/images/encoded-decoded-jwt_hu1ab378b072a97342bd947994d891fa06_108022_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Token JWT codificado y decodificado"><img src="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/images/encoded-decoded-jwt_hu1ab378b072a97342bd947994d891fa06_108022_600x450_fit_box_3.png" width="494" height="450" alt="Token JWT codificado y decodificado" title="Token JWT codificado y decodificado"  class="lozad "></a></p>
<figcaption>Token JWT codificado y decodificado</figcaption>
</figure>
</div>
<h3 id="servidor-gateway">Servidor Gateway</h3>
<p>El servidor <em>gateway</em> en realidad no interviene en la lógica de OAuth porque la autorización se delega en cada servicio que contiene el recurso. Como se indicaba en Idealista estaría bien que el <em>gateway</em> librase de la responsabilidad de autorización a los servicios de los recursos para hacerlos más sencillos, creo que Spring Security en el momento del artículo no está soportado en Spring WebFlux que utiliza el <em>gateway</em>.</p>
<p>Lo único necesario par definir el <em>gateway</em> son las dependencias del proyecto, poco más que <em>spring-cloud-starter-gateway</em>, y la configuración de enrutado que <em>matchea</em> peticiones según el parámetro <em>predicates</em>, reescribe la URL hacia el servicio  según el filtro <em>RewritePath</em> y finalmente redirige la petición a la ubicación del servicio indicada en <em>uri</em>. Se inicia con <em>./gradlew gateway:run</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.0.8.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springoauth.gateway.Main&#39;</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-gateway&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gateway/build.gradle</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server.port</span><span class="p">:</span><span class="w"> </span><span class="m">8090</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">spring</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">cloud</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">gateway</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">routes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">path_route</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">uri</span><span class="p">:</span><span class="w"> </span><span class="l">http://localhost:8080/</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">predicates</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">Path=/service/</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">filters</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">RewritePath=/service/, /</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gateway/application.yml</span>
    </div>
</div>
<h3 id="servicio-servidor-de-recurso">Servicio, servidor de recurso</h3>
<p>Dado que el servicio interpreta los <em>tokens</em> JWT y aplica reglas de seguridad necesita las mismas dependencias que utiliza el servidor OAuth.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">plugins</span> <span class="o">{</span>&#10;	<span class="n">id</span> <span class="s1">&#39;application&#39;</span>&#10;	<span class="n">id</span> <span class="s1">&#39;org.springframework.boot&#39;</span> <span class="n">version</span> <span class="s1">&#39;2.0.8.RELEASE&#39;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="n">mainClassName</span> <span class="o">=</span> <span class="s1">&#39;io.github.picodotdev.blogbitix.springoauth.service.Main&#39;</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;	<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-dependencies:2.0.8.RELEASE&#39;</span><span class="o">)</span>&#10;	<span class="n">implementation</span> <span class="nf">platform</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2&#39;</span><span class="o">)</span>&#10;&#10;	<span class="kt">def</span> <span class="n">excludeSpringBootStarterLogging</span> <span class="o">=</span> <span class="o">{</span> <span class="n">exclude</span><span class="o">(</span><span class="nl">group:</span> <span class="s1">&#39;org.springframework.boot&#39;</span><span class="o">,</span> <span class="nl">module:</span> <span class="s1">&#39;spring-boot-starter-logging&#39;</span><span class="o">)</span> <span class="o">}</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-log4j2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-security&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.cloud:spring-cloud-starter-oauth2&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.security:spring-security-jwt:1.0.10.RELEASE&#39;</span><span class="o">,</span> <span class="n">excludeSpringBootStarterLogging</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&#10;	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.google.code.gson:gson:2.8.5&#39;</span><span class="o">)</span>&#10;	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.core:jackson-databind:2.9.6&#39;</span><span class="o">)</span>&#10;	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6&#39;</span><span class="o">)</span>&#10;&#10;	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;javax.xml.bind:jaxb-api:2.3.0&#39;</span><span class="o">)</span>&#10;	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;com.sun.xml.bind:jaxb-impl:2.3.0&#39;</span><span class="o">)</span>&#10;	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;org.glassfish.jaxb:jaxb-runtime:2.3.0&#39;</span><span class="o">)</span>&#10;	<span class="n">runtime</span><span class="o">(</span><span class="s1">&#39;javax.activation:activation:1.1.1&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service/build.gradle</span>
    </div>
</div>
<p>El recurso es muy simple, solo devuelve un mensaje.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springoauth.service</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@RestController</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;&#10;	<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;&#10;	<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;	<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (%s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">());</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service/DefaultController.java</span>
    </div>
</div>
<p>El servicio comparte configuración similar al servidor de Ouath par el <em>JwtAccessTokenConverter</em>, <em>TokenStore</em> y <em>DefaultTokenServices</em>. En el método configure se define que el <em>endpoint</em> <em>/</em> requiere el rol <em>CLIENT</em> que se obtiene del token JWT enviado. Hay que utilizar la anotación <em>@EnableResourceServer</em>, se inicia con el comando <em>./gradlew service:run</em>.</p>
<p>Hay que recalcar que el servicio para verificar el <em>token</em> y comprobar la autorización no necesita comunicarse con el servidor OAuth toda la información que necesita está en el <em>token</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springoauth.service</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="nd">@Configuration</span>&#10;<span class="nd">@EnableResourceServer</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ResourceServerConfiguration</span> <span class="kd">extends</span> <span class="n">ResourceServerConfigurerAdapter</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DefaultTokenServices</span> <span class="n">tokenServices</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">JwtAccessTokenConverter</span> <span class="nf">tokenConverter</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JwtAccessTokenConverter</span> <span class="n">converter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JwtAccessTokenConverter</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">converter</span><span class="o">.</span><span class="na">setSigningKey</span><span class="o">(</span><span class="s">&#34;1234567890&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">converter</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">TokenStore</span> <span class="nf">tokenStore</span><span class="o">(</span><span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">JwtTokenStore</span><span class="o">(</span><span class="n">tokenConverter</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Bean</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultTokenServices</span> <span class="nf">tokenServices</span><span class="o">(</span><span class="n">TokenStore</span> <span class="n">tokenStore</span><span class="o">,</span> <span class="n">JwtAccessTokenConverter</span> <span class="n">tokenConverter</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">DefaultTokenServices</span> <span class="n">tokenServices</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultTokenServices</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenServices</span><span class="o">.</span><span class="na">setTokenStore</span><span class="o">(</span><span class="n">tokenStore</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenServices</span><span class="o">.</span><span class="na">setTokenEnhancer</span><span class="o">(</span><span class="n">tokenConverter</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">tokenServices</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">ResourceServerSecurityConfigurer</span> <span class="n">resources</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">resources</span><span class="o">.</span><span class="na">tokenServices</span><span class="o">(</span><span class="n">tokenServices</span><span class="o">).</span><span class="na">resourceId</span><span class="o">(</span><span class="s">&#34;service&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">HttpSecurity</span> <span class="n">http</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">http</span><span class="o">.</span><span class="na">authorizeRequests</span><span class="o">().</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">).</span><span class="na">hasAuthority</span><span class="o">(</span><span class="s">&#34;CLIENT&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service/ResourceServerConfiguration.java</span>
    </div>
</div>
<p>Si no se envía el <em>token</em> JWT se produce un error de autenticación con código de error <em>401 Unauthorized</em>, si se envía un token correcto y la autoridad requerida del recurso la petición se devuelve el mensaje u el código de estado <em>200 OK</em>, si se envía un <em>token</em> JWT con una autoridad que no corresponde con la necesaria para el recurso, en el ejemplo una autoridad <em>DUMMY</em>, se devuelve un código de estado <em>403 Forbbiden</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -v http://localhost:8090/service/&#10;*   Trying ::1...&#10;* TCP_NODELAY <span class="nb">set</span>&#10;* Connected to localhost <span class="o">(</span>::1<span class="o">)</span> port <span class="m">8090</span> <span class="o">(</span><span class="c1">#0)</span>&#10;&gt; GET /service/ HTTP/1.1&#10;&gt; Host: localhost:8090&#10;&gt; User-Agent: curl/7.63.0&#10;&gt; Accept: */*&#10;&gt;&#10;&lt; HTTP/1.1 <span class="m">401</span> Unauthorized&#10;&lt; transfer-encoding: chunked&#10;&lt; Cache-Control: no-store&#10;&lt; Pragma: no-cache&#10;&lt; WWW-Authenticate: Bearer <span class="nv">realm</span><span class="o">=</span><span class="s2">&#34;service&#34;</span>, <span class="nv">error</span><span class="o">=</span><span class="s2">&#34;unauthorized&#34;</span>, <span class="nv">error_description</span><span class="o">=</span><span class="s2">&#34;Full authentication is required to access this resource&#34;</span>&#10;&lt; X-Content-Type-Options: nosniff&#10;&lt; X-XSS-Protection: 1<span class="p">;</span> <span class="nv">mode</span><span class="o">=</span>block&#10;&lt; X-Frame-Options: DENY&#10;&lt; Content-Type: application/json<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>UTF-8&#10;&lt; Date: Fri, <span class="m">08</span> Feb <span class="m">2019</span> 18:58:03 GMT&#10;&lt;&#10;* Connection <span class="c1">#0 to host localhost left intact</span>&#10;<span class="o">{</span><span class="s2">&#34;error&#34;</span>:<span class="s2">&#34;unauthorized&#34;</span>,<span class="s2">&#34;error_description&#34;</span>:<span class="s2">&#34;Full authentication is required to access this resource&#34;</span><span class="o">}</span>&#10;&#10;$ curl -H <span class="s2">&#34;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiQ0xJRU5UIl0sImp0aSI6IjEzYjM1M2Q2LTQwODUtNDdiMS1hYzkyLTRiZDJhNDg3MzFhOCIsImNsaWVudF9pZCI6ImNsaWVudCJ9.CueMcwrD7pTp3pj37_BzzcUODG7PcjCacSa14-l5_Hw&#34;</span> http://localhost:8090/service/&#10;Hello world <span class="o">(</span>http://localhost:8080/<span class="o">)</span>&#10;&#10;$ curl -X POST -u <span class="s2">&#34;client:1234567890&#34;</span> -d <span class="s2">&#34;token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2xpZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc&#34;</span> http://localhost:8095/oauth/check_token&#10;<span class="o">{</span><span class="s2">&#34;aud&#34;</span>:<span class="o">[</span><span class="s2">&#34;service&#34;</span><span class="o">]</span>,<span class="s2">&#34;scope&#34;</span>:<span class="o">[</span><span class="s2">&#34;read&#34;</span><span class="o">]</span>,<span class="s2">&#34;active&#34;</span>:true,<span class="s2">&#34;exp&#34;</span>:1549692458,<span class="s2">&#34;authorities&#34;</span>:<span class="o">[</span><span class="s2">&#34;DUMMY&#34;</span><span class="o">]</span>,<span class="s2">&#34;jti&#34;</span>:<span class="s2">&#34;13b353d6-4085-47b1-ac92-4bd2a48731a8&#34;</span>,<span class="s2">&#34;client_id&#34;</span>:<span class="s2">&#34;client&#34;</span><span class="o">}</span>&#10;$ curl -v -H <span class="s2">&#34;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2xpZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc&#34;</span> http://localhost:8090/service/&#10;<span class="o">{</span><span class="s2">&#34;error&#34;</span>:<span class="s2">&#34;access_denied&#34;</span>,<span class="s2">&#34;error_description&#34;</span>:<span class="s2">&#34;Access is denied&#34;</span><span class="o">}</span>&#10;*   Trying ::1...&#10;* TCP_NODELAY <span class="nb">set</span>&#10;* Connected to localhost <span class="o">(</span>::1<span class="o">)</span> port <span class="m">8090</span> <span class="o">(</span><span class="c1">#0)</span>&#10;&gt; GET /service/ HTTP/1.1&#10;&gt; Host: localhost:8090&#10;&gt; User-Agent: curl/7.63.0&#10;&gt; Accept: */*&#10;&gt; Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsic2VydmljZSJdLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU0OTY5MjQ1OCwiYXV0aG9yaXRpZXMiOlsiRFVNTVkiXSwianRpIjoiMTNiMzUzZDYtNDA4NS00N2IxLWFjOTItNGJkMmE0ODczMWE4IiwiY2xpZW50X2lkIjoiY2x&#10;pZW50In0.RaeQYdukn8Xr8S9ld5Vy2UnYboUjPyMkutNgyfVN-Bc&#10;&gt;&#10;&lt; HTTP/1.1 <span class="m">403</span> Forbidden&#10;&lt; transfer-encoding: chunked&#10;&lt; Cache-Control: no-store&#10;&lt; Pragma: no-cache&#10;&lt; X-Content-Type-Options: nosniff&#10;&lt; X-XSS-Protection: 1<span class="p">;</span> <span class="nv">mode</span><span class="o">=</span>block&#10;&lt; X-Frame-Options: DENY&#10;&lt; Content-Type: application/json<span class="p">;</span><span class="nv">charset</span><span class="o">=</span>UTF-8&#10;&lt; Date: Fri, <span class="m">08</span> Feb <span class="m">2019</span> 19:02:14 GMT&#10;&lt;&#10;* Connection <span class="c1">#0 to host localhost left intact</span>&#10;<span class="o">{</span><span class="s2">&#34;error&#34;</span>:<span class="s2">&#34;access_denied&#34;</span>,<span class="s2">&#34;error_description&#34;</span>:<span class="s2">&#34;Access is denied&#34;</span><span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service/curl.sh</span>
    </div>
</div>
<p>Los <em>tokens</em> JWT además de firmar se pueden cifrar, en el ejemplo se usa una conexión no segura con el protocolo HTTP usando una conexión segura HTTPS ya se proporcionaría confidencialidad para los <em>tokens</em> y es lo recomendado.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringOauth">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew oauth:run, ./gradlew gateway:run, ./gradlew service:run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/spring-security-oauth-jwt">Using JWT with Spring Security OAuth</a></li>
<li><a href="http://websystique.com/spring-security/secure-spring-rest-api-using-oauth2/">Secure Spring REST API using OAuth2</a></li>
<li><a href="https://www.devglan.com/spring-security/spring-boot-oauth2-jwt-example">Spring Boot Security OAuth2 Jwt Auth Example</a></li>
<li><a href="https://www.jorgehernandezramirez.com/2017/04/17/spring-boot-oauth-server/">Spring Boot – OAuth Server</a></li>
<li><a href="https://stackoverflow.com/questions/23950068/spring-oauth2-full-authentication-is-required-to-access-this-resource">Spring OAuth2 “Full authentication is required to access this resource”</a></li>
<li><a href="https://stackoverflow.com/questions/52606720/issue-with-having-multiple-websecurityconfigureradapter-in-spring-boot">Issue with having multiple WebSecurityConfigurerAdapter in spring-boot</a></li>
<li><a href="https://stackoverflow.com/questions/49654143/spring-security-5-there-is-no-passwordencoder-mapped-for-the-id-null">Spring Security 5: There is no PasswordEncoder mapped for the id “null”</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="spring"/>
            
        
    </entry>
    
</feed>