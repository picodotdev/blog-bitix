<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/software/</id>
    <updated>2023-01-19T20:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/</id>
        <title>Construir, desplegar y observar aplicaciones de forma uniforme con Waypoint</title>
        <updated>2023-01-19T20:00:00+01:00</updated>
        <published>2023-01-19T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Cuando se tienen muchas aplicaciones si no se tienen unos procesos definidos seguramente cada una requerirá su propio proceso, herramientas de construcción y despliegue. Estas diferencias añaden complejidad y no es deseable para tener un flujo de trabajo ágil. La herramienta Waypoint de Hashicorp permite construir una aplicación independientemente del lenguaje en el que esté implementada, desplegar en diferentes proveedores de computación en la nube y observar las aplicaciones una vez desplegadas, todo con la misma herramienta y de forma uniforme que simplifica en gran medida el flujo de desarrollo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-waypoint.svg" width="200" height="205" alt="HashiCorp Waypoint" title="HashiCorp Waypoint" class="" loading="false&#34;"></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp" class="" loading="false&#34;"></p>
</div>
<p>No son pocas los lenguajes de programación actuales y hay varias plataformas de computación en la nube. En una organización grande seguramente haya una diversidad de aplicaciones en cuanto a lenguaje de programación e incluso quizá utiliza varios proveedores de computación en la nube, cuanto menos es deseable tratar a todas las aplicaciones igual independientemente de su lenguaje para que el flujo sea uniforme para todas las aplicaciones ni es bueno acoplarse a un determinado proveedor de computación para tener la libertad y flexibilidad en un futuro de cambiar a otro si las circunstancias cambian.</p>
<p>Las aplicaciones para se ejecución en su ciclo de vida esencialmente necesitan al menos dos operaciones, una es su construcción a partir de código fuente y la segunda es su despliegue en el entorno de ejecución. Hay una tercera adicional que es la de publicación consistente en enviarle tráfico, el despliegue simplemente consiste en ejecutar en el entorno pero sin tráfico para la versión desplegada, esto es, separando el despliegue de la publicación.</p>
<p><a href="https://www.hashicorp.com/">Hashicorp</a> ofrece varias herramientas que cada una cubre una necesidad de las aplicaciones, y de las que varias ya he escrito algunos artículos. Algunas de sus herramientas más conocidas son <a href="https://www.terraform.io/">Terraform</a> para tratar la infraestructura como código, <a href="https://www.consul.io/">Consul</a> para la conectividad entre servicios y <a href="https://www.vaultproject.io/">Vault</a> centrada en la seguridad como servicio pero tiene otras muy interesantes como <a href="https://www.vagrantup.com/">Vagrant</a> para la virtualización en local, <a href="https://www.packer.io/">Packer</a> para la construcción de imágenes de máquinas virtuales, <a href="https://www.boundaryproject.io/">Boundary</a> también el apartado de seguridad o <a href="https://www.nomadproject.io/">Nomad</a> una alternativa similar a <a href="https://kubernetes.io/">Kubernetes</a> pero mucho más sencilla de ejecutar en local.</p>
<p>En el caso de la construcción y despliegue, la herramienta que proporciona Hashicorp es <a href="https://www.waypointproject.io/">Waypoint</a>.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="waypoint">Waypoint</h3>
<p>Waypoint de Hashicorp es una herramienta que permite construir una aplicación y realizar el despliegue independientemente del lenguaje empleado por la aplicación y la infraestructura de ejecución que se utilice.</p>
<p>Con Waypoint es posible construir cualquier aplicación ya se trate de una aplicación programada en <a href="https://www.oracle.com/java/">Java</a>, <a href="https://nodejs.org/en/">Node</a> o <a href="https://www.python.org/">Python</a> y desplegarla en cualquier proveedor en la nube soportado como <a href="https://aws.amazon.com/es/">Amazon Web Services</a>, <a href="https://cloud.google.com/">Google Cloud Platform</a> o <a href="https://azure.microsoft.com/es-es/">Microsoft Azure</a>.</p>
<p>El utilizar la misma herramienta uniformiza el ciclo de vida de las aplicaciones y tratan a todas por igual simplificando el flujo de desarrollo, de forma similar que una propiedad de los contenedores es que permiten ejecutar procesos independientemente del lenguaje de programación en el que están programados, Waypoint uniformiza la construcción y despliegue.</p>
<p>Waypoint en la <a href="https://developer.hashicorp.com/waypoint/docs/lifecycle/build">fase de construcción</a> o <em>build</em> en esencia lo que hace es construir una imagen de contenedor que luego es la que es desplegada. La construcción de la imagen puede ser con un habitual archivo Dockerfile de <a href="https://www.docker.com/">Docker</a> pero también a través de <a href="https://buildpacks.io/">Buildpacks</a>. Una vez construida la imagen es almacenada en un registro de imágenes. La fase de construcción suele estar automatizada por una herramienta de CI/CD como <a href="https://jenkins.io/">Jenkins</a>, además se soportan otras como <a href="https://developer.hashicorp.com/waypoint/docs/automating-execution/github-actions">GitHub Actions</a>.</p>
<p>En la <a href="https://developer.hashicorp.com/waypoint/docs/lifecycle/deploy">fase de despliegue</a> o <em>deploy</em> la imagen es puesta en ejecución en la plataforma de despliegue seleccionada, se soportan varias incluyendo las más conocidas como Kubernetes, Nomad, AWS EC2, AWS ECS, AWS Lambdas, Google Cloud Run y Azure Containers Instances incluyendo Docker en local.</p>
<p>Si la plataforma de despliegue lo soporta la <a href="https://developer.hashicorp.com/waypoint/docs/lifecycle/release">fase de publicación</a> o <em>release</em> consiste en enviar tráfico a la aplicación.</p>
<ul>
<li><a href="https://developer.hashicorp.com/waypoint/tutorials/get-started-docker/get-started-docker">Use Waypoint with Docker</a></li>
<li><a href="https://developer.hashicorp.com/waypoint/docs/automating-execution/github-actions">Integrating Waypoint with GitHub Actions</a></li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/DsZVvv2dlUs" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="instalación-de-waypoint">Instalación de Waypoint</h4>
<p>Al igual que muchas de las otras herramientas de Hashicorp que están implementadas con el lenguaje de programación <a href="https://golang.org/">Go</a>, Waypoint es un único binario con lo que basta descargar la última versión disponible y en el caso de <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> copiarla al directorio <em>/usr/local/bin/</em> donde los usuarios pueden instalar programas sin que entren en conflicto con los instalados por los paquetes de la distribución.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ls -lh /usr/local/bin/&#10;</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> picodotdev picodotdev  23M ene <span class="m">10</span> 11:31 pack&#10;</span></span><span class="line"><span class="cl">-rwxr-xr-x <span class="m">1</span> picodotdev picodotdev 180M dic <span class="m">15</span> 18:59 waypoint</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ls-bin.sh</span>
    </div>
</div>
<h4 id="inicio-del-servidor-de-waypoint">Inicio del servidor de Waypoint</h4>
<p>Waypoint se ejecuta en modo servidor, en este ejemplo se inicia como un contenedor de Docker en local y ejecutar un comando para su inicialización.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ waypoint install -platform<span class="o">=</span>docker -accept-tos&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-install.sh</span>
    </div>
</div>
<p>Ofrece una interfaz gráfica en la que monitorizar trazas, builds, deployment y otros detalles. a la interfaz web se accede con el siguiente comando con la interfaz web accesible en la dirección <em>https://localhost:9702/</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ waypoint ui -authenticate&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-ui-authenticate.sh</span>
    </div>
</div>
<p>Una vez inicializado el servidor se puede iniciar sin necesidad de inicializarlo otra vez.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ waypoint server run -accept-tos&#10;</span></span><span class="line"><span class="cl">$ waypoint server bootstrap -server-addr<span class="o">=</span>127.0.0.1:9701 -server-tls-skip-verify&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-server-run.sh</span>
    </div>
</div>
<h4 id="construcción-de-un-proyecto-con-waypoint-utilizando-buildpacks">Construcción de un proyecto con Waypoint utilizando Buildpacks</h4>
<p>En un artículo anterior mostraba cómo construir una aplicación con el lenguaje Java de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> con <a href="https://gradle.org/">Gradle</a> y Buildpacks para generar la imagen del contenedor.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-la-imagen-del-contenedor-de-la-aplicacion-usando-buildpacks/">Construir la imagen del contenedor de la aplicación usando Buildpacks</a></li>
</ul>
<p>Para la construcción con Buildpacks utilizaba el siguiente comando que a través de argumentos configuraban los <em>buidpacks</em> y construcción de la aplicación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ pack build spring-injection-point <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--env <span class="s2">&#34;BP_JVM_TYPE=JDK&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--env <span class="s2">&#34;BP_JVM_VERSION=11&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--env <span class="s2">&#34;BP_GRADLE_BUILT_ARTIFACT=app/build/distributions/app.zip&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--builder paketobuildpacks/builder-jammy-base <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--buildpack gcr.io/paketo-buildpacks/ca-certificates <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--buildpack gcr.io/paketo-buildpacks/syft <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--buildpack gcr.io/paketo-buildpacks/procfile <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--buildpack gcr.io/paketo-buildpacks/adoptium <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--buildpack gcr.io/paketo-buildpacks/gradle <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--buildpack gcr.io/paketo-buildpacks/executable-jar <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--buildpack gcr.io/paketo-buildpacks/spring-boot <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--default-process app <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;--path .</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pack-build.sh</span>
    </div>
</div>
<p>Utilizando el soporte de Buildpacks de Waypoint la definición de la construcción se especifican los mismos argumentos pero definidos en el archivo configuración de Waypoint. El comando <em>init</em> inicializa el proyecto en Waypoint a partir del archivo de su definición.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ waypoint init&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-init.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="n">project</span> <span class="o">=</span> <span class="s2">&#34;Waypoint&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="k">app</span> <span class="s2">&#34;spring-injection-point&#34;</span> {&#10;</span></span><span class="line"><span class="cl">  <span class="k">build</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">use</span> <span class="s2">&#34;pack&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  builder</span> <span class="o">=</span> <span class="s2">&#34;paketobuildpacks/builder:base&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  buildpacks</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;gcr.io/paketo-buildpacks/ca-certificates&#34;, &#34;gcr.io/paketo-buildpacks/syft&#34;, &#34;gcr.io/paketo-buildpacks/procfile&#34;, &#34;gcr.io/paketo-buildpacks/adoptium&#34;, &#34;gcr.io/paketo-buildpacks/gradle&#34;, &#34;gcr.io/paketo-buildpacks/executable-jar&#34;, &#34;gcr.io/paketo-buildpacks/spring-boot&#34;</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  process_type</span> <span class="o">=</span> <span class="s2">&#34;app&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  static_environment</span> <span class="o">=</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BP_JVM_TYPE</span> <span class="o">=</span> <span class="s2">&#34;JRE&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BP_JVM_VERSION</span> <span class="o">=</span> <span class="s2">&#34;11&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BP_GRADLE_BUILT_ARTIFACT</span> <span class="o">=</span> <span class="s2">&#34;app/build/distributions/app.zip&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">  <span class="k">deploy</span> {&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">use</span> <span class="s2">&#34;docker&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  service_port</span> <span class="o">=</span> <span class="m">8080</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">}&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint.hcl</span>
    </div>
</div>
<p>En la documentación de Waypoint están especificados los argumentos que soporta cada uno de los <em>builders</em>.</p>
<ul>
<li><a href="https://developer.hashicorp.com/waypoint/plugins/pack#pack-builder">pack (builder)</a></li>
<li><a href="https://developer.hashicorp.com/waypoint/plugins/docker#docker-builder">docker (builder)</a></li>
<li><a href="https://developer.hashicorp.com/waypoint/plugins/docker#docker-platform">docker (platform)</a></li>
</ul>
<p>Para lanzar únicamente construcción se puede lanzar con el siguiente comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ waypoint build&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-build.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">» Building spring-injection-point...&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">» Performing operation locally&#10;</span></span><span class="line"><span class="cl">✓ Running build v3&#10;</span></span><span class="line"><span class="cl">Creating new buildpack-based image using builder: paketobuildpacks/builder:base&#10;</span></span><span class="line"><span class="cl">✓ Creating pack client&#10;</span></span><span class="line"><span class="cl">✓ Building image&#10;</span></span><span class="line"><span class="cl"> │ [exporter] Adding label &#39;io.buildpacks.build.metadata&#39;&#10;</span></span><span class="line"><span class="cl"> │ [exporter] Adding label &#39;io.buildpacks.project.metadata&#39;&#10;</span></span><span class="line"><span class="cl"> │ [exporter] Setting default process type &#39;app&#39;&#10;</span></span><span class="line"><span class="cl"> │ [exporter] Saving spring-injection-point...&#10;</span></span><span class="line"><span class="cl"> │ [exporter] *** Images (029d19ed3f4b):&#10;</span></span><span class="line"><span class="cl"> │ [exporter]&nbsp;&nbsp;&nbsp;&nbsp;   spring-injection-point&#10;</span></span><span class="line"><span class="cl"> │ [exporter] Reusing cache layer &#39;paketo-buildpacks/syft:syft&#39;&#10;</span></span><span class="line"><span class="cl"> │ [exporter] Reusing cache layer &#39;paketo-buildpacks/adoptium:jdk&#39;&#10;</span></span><span class="line"><span class="cl"> │ [exporter] Adding cache layer &#39;paketo-buildpacks/gradle:application&#39;&#10;</span></span><span class="line"><span class="cl"> │ [exporter] Adding cache layer &#39;paketo-buildpacks/gradle:cache&#39;&#10;</span></span><span class="line"><span class="cl">✓ Injecting entrypoint binary to image&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Generated new Docker image: spring-injection-point:latest&#10;</span></span><span class="line"><span class="cl">✓ Running push build v2&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Created artifact v2&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">» Variables used:&#10;</span></span><span class="line"><span class="cl">  VARIABLE | VALUE | TYPE | SOURCE  &#10;</span></span><span class="line"><span class="cl">-----------+-------+------+---------&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-build.out</span>
    </div>
</div>
<p>En este ejemplo donde todo se muestra en local no hace falta especificar una <em>stanza</em> <em>registry</em> ya que Buildpacks de por sí ya añade al Docker local la imagen construida, haría falta en caso de querer enviar la imagen un un registro de imágenes y artefactos remoto.</p>
<p>La imagen construida no es más que una imagen de Docker normal que se lista con el comando de Docker.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker images&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-images.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">REPOSITORY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TAG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE ID&nbsp;&nbsp;&nbsp;&nbsp;   CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  SIZE&#10;</span></span><span class="line"><span class="cl">spring-injection-point&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; latest&nbsp;&nbsp;&nbsp;&nbsp; 8f069f971d7b   10 minutes ago   358MB&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-images.out</span>
    </div>
</div>
<h4 id="despliegue-de-la-aplicación-con-waypoint">Despliegue de la aplicación con Waypoint</h4>
<p>En este ejemplo el despliegue consiste en ejecutar una instancia del contenedor con Docker en local, su <em>stanza</em> es muy sencilla en la que solo se especifica el puerto en el que arrancar el el contenedor aunque también a través de diferentes propiedades se podrían especificar argumentos distintos.</p>
<p>El comando que realiza el <em>deploy</em> es el siguiente. Y siguiendo la misma lógica hay un comando para el <em>release</em> si fuera necesario.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ waypoint deploy&#10;</span></span><span class="line"><span class="cl">$ waypoint release&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-deploy-release.sh</span>
    </div>
</div>
<p>Es posible hacer la construcción y despliegue con un único comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ waypoint up&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-up.sh</span>
    </div>
</div>
<p>El servicio se inicia en la máquina y puede ser visto a través de la consola de Waypoint o con los comandos de Docker ya que en esencia no es más que una instancia de contenedor.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker ps&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">CONTAINER ID   IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NAMES&#10;</span></span><span class="line"><span class="cl">ce8c73a2f468   spring-injection-point:latest   &#34;/waypoint-entrypoin…&#34;   8 seconds ago   Up 7 seconds   0.0.0.0:32768-&gt;8080/tcp, :::32768-&gt;8080/tcp   spring-injection-point-01GQ5SA9SQ9KZKWJMKSQ1PHAWJ&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps.out</span>
    </div>
</div>
<p>La aplicación y su <em>endpoint</em> <em>web</em> responden al realizar una petición.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl http://localhost:32768/&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">Hello World!&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.out</span>
    </div>
</div>
<h4 id="interfaz-web-y-de-linea-de-comandos">Interfaz web y de linea de comandos</h4>
<p>La interfaz web de Waypoint accesible con un navegador ofrece información de los proyectos, <em>builds</em>, <em>deployments</em> y <em>releases</em> además de <em>logs</em>.</p>
<p>La linea de comandos también ofrece información acerca de la aplicación con los comandos de Waypoint sin utilizar la interfaz web. La línea de comandos soporta más operaciones como destruir los recursos de un proyecto o eliminar el proyecto completamente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ waypoint deployment list&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-deployment-list.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">» spring-injection-point&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> ID <span class="p">|</span> PLATFORM <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DETAILS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;STARTED&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>   COMPLETED&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;   HEALTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">  🚀 <span class="p">|</span>  <span class="m">1</span> <span class="p">|</span> docker   <span class="p">|</span> image:8f069f9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span> <span class="m">33</span> minutes ago <span class="p">|</span> <span class="m">33</span> minutes ago <span class="p">|</span> ✔ - <span class="m">33</span> minutes ago  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span> languages:ca-certificates,&nbsp;&nbsp;&nbsp;&nbsp;  &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span> syft, procfile, adoptium,&nbsp;&nbsp;&nbsp;&nbsp;   &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span> gradle, executable-jar,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span> spring-boo</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>waypoint-deployment-list.out</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/images/waypoint_hu8cdc5af5db3d063a447dbf08d12596c5_63265_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Interfaz web de Waypoint"><img src="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/images/waypoint_hu8cdc5af5db3d063a447dbf08d12596c5_63265_650x450_fit_q90_h2_box_3.webp" width="465" height="450" alt="Interfaz web de Waypoint" title="Interfaz web de Waypoint" class="&#34; " loading="lazy"></a></p>
<figcaption>Interfaz web de Waypoint</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/images/waypoint-builds_hu223ae1c194bb402030d2743562a55f44_116223_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Builds"><img src="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/images/waypoint-builds_hu223ae1c194bb402030d2743562a55f44_116223_200x150_fit_q90_h2_box_3.webp" width="155" height="150" alt="Builds" title="Builds" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/images/waypoint-deployments_hu28e10d00ec4f33e8dedeff88520950d4_202768_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Deployments"><img src="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/images/waypoint-deployments_hu28e10d00ec4f33e8dedeff88520950d4_202768_200x150_fit_q90_h2_box_3.webp" width="155" height="150" alt="Deployments" title="Deployments" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/images/waypoint-releases_hu956fb436e82f155b792458aa0ea7526a_86031_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Relases"><img src="https://picodotdev.github.io/blog-bitix/2023/01/construir-desplegar-y-observar-aplicaciones-de-forma-uniforme-con-waypoint/images/waypoint-releases_hu956fb436e82f155b792458aa0ea7526a_86031_200x150_fit_q90_h2_box_3.webp" width="155" height="150" alt="Relases" title="Relases" class="&#34; " loading="lazy"></a></p>
<figcaption>Builds, deployments y releases de una aplicación en un proyecto</figcaption>
</figure>
</div>
<h3 id="desarrollo-en-local">Desarrollo en local</h3>
<p>Para desarrollar en local todo este proceso de Buildpacks y Waypoint no es necesario, en el caso de la aplicación de ejemplo al estar basada en Spring Boot y utilizar Gradle es posible iniciarla con un comando directamente sin necesidad de construir una imagen de contenedor ni iniciar un contenedor en local.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew run&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>gradlew-run.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringInjectionPoint">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/</id>
        <title>Realizar peticiones a APIs con herramientas de línea comandos e interfaz gráfica</title>
        <updated>2022-11-03T23:00:00+02:00</updated>
        <published>2022-11-03T23:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El comando curl es la herramienta de línea de comandos para realizar cualquier petición que requiera probar un <em>endpoint</em> de una API o web que utilice el protocolo HTTP, tiene opciones para cualquier petición que sea requerida. Aunque curl es muy versátil y completa es una herramienta de línea de comandos sin algunas otras funcionalidades que las aplicaciones con interfaz gráfica son capaces de proporcionar. Postman es una aplicación con interfaz gráfica que cubre parte de las funcionalidades de curl y la mayoría que habitualmente un desarrollador necesita para probar una API, permite guardar colecciones y compartirlas con otros miembros de equipo de desarrollo asi como entornos y otras funcionalidades. Postman es la herramienta más conocida en su categoría y tiene una licencia comercial en base al numero de miembros de equipo que no es barata. Finalmente, Hoppscotch es una herramienta alternativa y equivalente a Postman de código abierto que no tiene coste de licencia y ofrece la mayoría de funcionalidades importantes como para sustituir a Postman.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hoppscotch.svg" width="200" height="200" alt="Hoppscotch" title="Hoppscotch" class="" loading="false&#34;"></p>
</div>
<p>Las aplicaciones monolíticas son más simples y más sencillas de programar, la llamada de un módulo a otro de una aplicación consiste simplemente en una invocación de un método, sin embargo tiene sus propios problemas.</p>
<p>Las aplicaciones compuestas por múltiples microservicios, algunos de esos microservicios publica una API para que la invoquen otros microservicios. Los microservicios se comunican mediante llamadas remotas a través de la red, habitualmente utilizando el protocolo HTTP y REST aunque también es posible utilizar <a href="https://graphql.org/">GraphQL</a> y si se prefiere una API más RPC con <a href="https://grpc.io/">gRPC</a>.</p>
<p>Para desarrollar y probar pero también para conocer los datos devueltos por un microservicio en alguna de sus <em>endpoints</em> que expone en su API es muy útil utilizar alguna de las siguientes herramientas para hacer peticiones directamente al servicio sin tener que usar la interfaz web que utiliza el usuario hasta llegar al punto donde se realiza la petición.</p>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="el-comando-curl">El comando curl</h3>
<p>La herramienta de línea de comandos curl permite realizar cualquier operación y obtener cualquier detalle tanto de la petición como de la respuesta del servidor del protocolo HTTP. Permite ver los certificados cuando se utiliza el protocolo HTTPS, las cabeceras enviadas y de respuesta de la petición, así como realizar peticiones utilizando cualquier verbo del protocolo HTTP.</p>
<p>El comando curl permite realizar una petición sin tener que implementar en código la llamada que se quiera probar. Cómo es un comando, no una aplicación, no permite guardar la colección de peticiones ni compartir con otros miembros del equipo de desarrollo una colección de peticiones ni mantener sincronizadas las colecciones y variables para los diferentes entornos de una aplicación.</p>
<p>Es posible utilizar un repositorio de código fuente como <a href="https://git-scm.com/">Git</a> para guardar, compartir y mantener sincronizadas las colecciones peticiones pero el comando curl no ofrece ningún soporte para esto ni para utilizar variables y datos para diferentes entornos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl -v https://picodotdev.github.io/blog-bitix/&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">&gt; GET /blog-bitix/ HTTP/2&#10;</span></span><span class="line"><span class="cl">&gt; Host: picodotdev.github.io&#10;</span></span><span class="line"><span class="cl">&gt; user-agent: curl/7.86.0&#10;</span></span><span class="line"><span class="cl">&gt; accept: */*&#10;</span></span><span class="line"><span class="cl">&gt; &#10;</span></span><span class="line"><span class="cl">* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):&#10;</span></span><span class="line"><span class="cl">&lt; HTTP/2 200 &#10;</span></span><span class="line"><span class="cl">&lt; server: GitHub.com&#10;</span></span><span class="line"><span class="cl">&lt; content-type: text/html; charset=utf-8&#10;</span></span><span class="line"><span class="cl">&lt; permissions-policy: interest-cohort=()&#10;</span></span><span class="line"><span class="cl">&lt; last-modified: Sat, 29 Oct 2022 03:46:53 GMT&#10;</span></span><span class="line"><span class="cl">&lt; access-control-allow-origin: *&#10;</span></span><span class="line"><span class="cl">&lt; etag: &#34;635ca22d-88fd&#34;&#10;</span></span><span class="line"><span class="cl">&lt; expires: Thu, 03 Nov 2022 22:08:53 GMT&#10;</span></span><span class="line"><span class="cl">&lt; cache-control: max-age=600&#10;</span></span><span class="line"><span class="cl">&lt; x-proxy-cache: MISS&#10;</span></span><span class="line"><span class="cl">&lt; x-github-request-id: 8B94:479F:70D593:739994:6364399D&#10;</span></span><span class="line"><span class="cl">&lt; accept-ranges: bytes&#10;</span></span><span class="line"><span class="cl">&lt; date: Thu, 03 Nov 2022 21:58:53 GMT&#10;</span></span><span class="line"><span class="cl">&lt; via: 1.1 varnish&#10;</span></span><span class="line"><span class="cl">&lt; age: 0&#10;</span></span><span class="line"><span class="cl">&lt; x-served-by: cache-mad22067-MAD&#10;</span></span><span class="line"><span class="cl">&lt; x-cache: MISS&#10;</span></span><span class="line"><span class="cl">&lt; x-cache-hits: 0&#10;</span></span><span class="line"><span class="cl">&lt; x-timer: S1667512734.552326,VS0,VE132&#10;</span></span><span class="line"><span class="cl">&lt; vary: Accept-Encoding&#10;</span></span><span class="line"><span class="cl">&lt; x-fastly-request-id: 3c819d3e28b1a87d6c2f80b4606c3530bcc35fbe&#10;</span></span><span class="line"><span class="cl">&lt; content-length: 35069&#10;</span></span><span class="line"><span class="cl">&lt; &#10;</span></span><span class="line"><span class="cl">&lt;!DOCTYPE html&gt;&#10;</span></span><span class="line"><span class="cl">&lt;html lang=&#34;es&#34;&gt;&#10;</span></span><span class="line"><span class="cl">&lt;head&gt;&#10;</span></span><span class="line"><span class="cl">	&lt;meta name=&#34;generator&#34; content=&#34;Hugo 0.102.3&#34; /&gt;&#10;</span></span><span class="line"><span class="cl">  &lt;meta name=&#34;base&#34; href=&#34;https://picodotdev.github.io/blog-bitix/blog-bitix/&#34;&gt;&#10;</span></span><span class="line"><span class="cl">  &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;&gt;&#10;</span></span><span class="line"><span class="cl">  &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&gt;&#10;</span></span><span class="line"><span class="cl">  &lt;meta name=&#34;author&#34; content=&#34;picodotdev&#34;&gt;&#10;</span></span><span class="line"><span class="cl">  &lt;meta name=&#34;keywords&#34; content=&#34;java, programacion, software, hardware, tapestry, software libre, gnu, linux, gnu/linux, unix, arch, arch linux, web, html, css, javascript, tutorial, guía, básico, avanzado, análisis, tecnología, juegos, productos&#34;&gt;&#10;</span></span><span class="line"><span class="cl">  &lt;meta name=&#34;description&#34; content=&#34;Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.&#34;&gt;&#10;</span></span><span class="line"><span class="cl">  &lt;meta name=&#34;theme-color&#34; content=&#34;#FFFFFF&#34;/&gt;&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  &lt;title&gt;Blog Bitix&lt;/title&gt;&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.out</span>
    </div>
</div>
<h3 id="postman">Postman</h3>
<p>La aplicación con interfaz gráfica <a href="https://www.postman.com/">Postman</a> realiza en gran medida las mismas funciones que el comando curl pero con una aplicación de escritorio y con interfaz gráfica. Permite crear peticiones, añadir cabeceras en las peticiones y ver los resultados, cabeceras y código de estado devueltos en las peticiones HTTP.</p>
<p>Adicionalmente ofrece otras funcionalidades como soporte para trabajar en equipos compuesto por varios desarrolladores para compartir colecciones y entornos y mantenerlos sincronizados entre los diferentes miembros del equipo. Otras funciones que tiene es la de poder ejecutar <em>scripts</em> de código antes de realizar la petición para calcular algún dato y enviarlo en la petición. Los entornos permiten crear colecciones de variables y cambiando de un entorno a otro utilizando en las peticiones diferentes valores, por ejemplo las credenciales de autorización para invocar un <em>endpoint</em>.</p>
<p>Postman es una herramienta muy conocida y utilizada, ofrece una aplicación de escritorio para los diferentes sistemas operativos incluyendo <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> como una aplicación <a href="https://flatpak.org/">Flatpak</a>. Sin embargo, no es gratuita y en entornos profesionales requiere una licencia de uso que está en función del número de usuarios que la utilizan. Es cara y tiene un coste significativo para una herramienta aunque útil cuando se usa es una herramienta que se usa ocasionalmente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/images/postman_hu96ea76b13850717ac94d4c1d6cc66d76_133523_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Postman"><img src="https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/images/postman_hu96ea76b13850717ac94d4c1d6cc66d76_133523_650x450_fit_q90_h2_box_3.webp" width="583" height="450" alt="Postman" title="Postman" class="&#34; " loading="lazy"></a></p>
<figcaption>Postman</figcaption>
</figure>
</div>
<h3 id="hoppscotch-alternativa-a-postman">Hoppscotch, alternativa a Postman</h3>
<p>Alternativas a Postman hay varias algunas como complementos para el editor de texto y código <a href="https://code.visualstudio.com/">Visual Studio Code</a>. De las alternativas a Postman la más parecida y que tiene funcionalidades equivalentes y suficiente como para reemplazarla es <a href="https://hoppscotch.io/">Hoppscotch</a>.</p>
<p>Al igual que Postman la aplicación Hoppscotch es una aplicación destinada a realizar peticiones a servicios utilizando HTTP y soportando otros protocolos como GraphQL, Websockets y MQTT. Una de las ventajas de Hoppscotch sobre Postman está en su licencia ya que es de código abierto y sin coste de licencia. La interfaz de usuario de Hoppscotch está muy cuidada y es similar a la de Postman permitiendo crear peticiones junto a sus cabeceras así como ver el resultado devuelto, cabeceras y código de estado.</p>
<p>Entre las funcionalidades que ofrece Hoppscotch están:</p>
<ul>
<li>Posibilidad de trabajar en equipos y compartir colecciones</li>
<li>Scripts previos a la petición</li>
<li>Soporta múltiples métodos de autenticación</li>
<li>Entornos y variables</li>
<li>Posibilidad de mostrar el curl e importar el curl</li>
<li>Importar desde OpenAPI y Postman, exportar como JSON</li>
<li>Posibilidad de ejecutarlo desde su web, en local como un contenedor <a href="https://www.docker.com/">Docker</a> o paquete npm</li>
</ul>
<p>Aunque Hoppscotch tiene una licencia sin coste los desarrolladores ofrecen ser patrocinados en <a href="https://github.com/hoppscotch/hoppscotch">su repositorio de GitHub</a> para seguir realizando cambios e implementando mejoras. Si es útil y se utiliza en un entorno profesional se anima a realizar en la medida de lo posible una contribución económica a los desarrolladores.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/images/hoppscotch_hu5acee9062fc6b8ef34cd56148770b1cc_170461_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Hoppscotch"><img src="https://picodotdev.github.io/blog-bitix/2022/11/realizar-peticiones-a-apis-con-herramientas-de-linea-comandos-e-interfaz-grafica/images/hoppscotch_hu5acee9062fc6b8ef34cd56148770b1cc_170461_650x450_fit_q90_h2_box_3.webp" width="584" height="450" alt="Hoppscotch" title="Hoppscotch" class="&#34; " loading="lazy"></a></p>
<figcaption>Hoppscotch</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/</id>
        <title>Cómo descargar vídeos, música o audio de YouTube y otras webs</title>
        <updated>2022-10-05T21:00:00+02:00</updated>
        <published>2022-10-05T21:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En caso de buscar un vídeo o música es probable que esté subido en YouTube, en el caso de las canciones muchas incluyen el vídeo original que acompaña la canción y de artistas de varias décadas anteriores al inicio de YouTube. Además de contenido antiguo hay muchas personas dedicadas a crear contenido nuevo ya sea como <em>videoblogs</em> o <em>podcasts</em>. Con todo el contenido disponible en YouTube descargar un vídeo o solo audio de un vídeo es algo deseado pero que no permite YouTube directamente pero hay aplicaciones que permiten descargar el contenido de YouTube.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/youtube.svg" width="400" height="89" alt="YouTube" title="YouTube" class="" loading="false&#34;"></p>
</div>
<p>El servicio de vídeo <a href="https://www.youtube.com/">YouTube</a> se ha convertido en la plataforma mayoritaria para compartir contenido en formato de vídeo. Prácticamente cualquier contenido de vídeo se puede encontrar en YouTube, incluso vídeos antiguos anteriores a la existencia de YouTube como una buena colección de música.</p>
<p>Algo que no facilita YouTube es descargar su contenido para consumirlo fuera de línea lo que impide a algunos usuarios consumir su contenido según sus necesidades en vez de las que solo permite YouTube.</p>
<p>Algunos usuarios desean guardar sus canciones favoritas y escucharlas fuera de línea como por ejemplo en un <em>smartphone</em> sin necesidad de conexión a internet en cualquier lugar que se disponga del <em>smartphone</em>. También para evitar buena cantidad de publicidad que inserta YouTube que son los ingresos que percibe el servicio y los creadores de contenido pero que dada la cantidad de publicidad resulta molesta para los usuarios.</p>
<p>Hay algunas aplicaciones que permiten descargar los vídeos de páginas como YouTube, aplicaciones tanto con interfaz gráfica como de línea de comandos.</p>
<p>Una vez descargado el vídeo o el audio quizá dependiendo del dispositivo donde se pretenda reproducir quizá haya que cambiar el formato de del archivo o se desee extraer únicamente el audio.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/cambiar-el-formato-de-archivos-de-video-o-peliculas-en-gnu-linux/">Cambiar el formato de archivos de vídeo o películas en GNU/Linux</a></li>
</ul>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="aplicaciones-para-descargar-vídeos-de-youtube">Aplicaciones para descargar vídeos de YouTube</h3>
<p>Una aplicación con interfaz gráfica en principio es muy intuitiva de usar y no requiere tanto conocimiento inicial para usarla, por el otro lado una aplicación con interfaz de línea de comandos aunque requiere conocer las opciones del comando para realizar la tarea deseada una vez conocido es más rápido conseguir lo que se desea que con una aplicación de interfaz gráfica, para conocer el comando exacto y las opciones se suelen proporcionar ejemplos de uso.</p>
<p>Los gestores de descargas son simplemente una de las categorías de programas que un usuario puede considerar de utilidad. Para cada tarea o necesidad de un usuario es casi seguro que exista un programa específico.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/listado-de-programas-esenciales-segun-categoria-para-gnu-linux/">Listado de programas esenciales según categoría para GNU/Linux</a></li>
<li><a href="https://wiki.archlinux.org/title/List_of_applications#Download_managers">Download managers</a></li>
</ul>
<h4 id="con-interfaz-gráfica">Con interfaz gráfica</h4>
<p>Un gestor de descargas, permite gestionar las descargas de cualquier fuente lo único necesario es el enlace del contenido a descargar. Algunos gestores de descargas entre las fuentes de descarga que permite está YouTube y es posible descargar un vídeo como únicamente el audio o la música.</p>
<p>Una aplicación específica para descargar vídeos y audio de YouTube eligiendo el formato deseado y en diferentes calidades que ofrece YouTube es <a href="https://clipgrab.de/es">ClipGrab</a>, un gestor de descargas que soporta descargar vídeos de YouTube o el audio de los vídeos es <a href="https://beta.jdownloader.org/">JDownloader</a>. ClipGrab solo permite descargar de YouTube y JDownloader permite descargar vídeos de otras muchas páginas. Las dos aplicaciones tienen versiones para los sistemas operativos <a href="https://www.microsoft.com/es-es/windows/">Windows</a>, <a href="https://www.apple.com/macos/">macOS</a> así como <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/clipgrab_huf9459247fc44dbb45c99219b58e1c9c4_261222_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="ClipGrab"><img src="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/clipgrab_huf9459247fc44dbb45c99219b58e1c9c4_261222_300x250_fit_q90_h2_box_3.webp" width="300" height="219" alt="ClipGrab" title="ClipGrab" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/jdownloader_hu20b3ba12ba1cfce073fb8e953e94b513_73059_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="JDownloader"><img src="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/jdownloader_hu20b3ba12ba1cfce073fb8e953e94b513_73059_300x250_fit_q90_h2_box_3.webp" width="300" height="218" alt="JDownloader" title="JDownloader" class="&#34; " loading="lazy"></a></p>
<figcaption>ClipGrab y JDownloader</figcaption>
</figure>
</div>
<p>Este es un vídeo descargado de YouTube con un corto de animación de los varios que ha creado la fundación <a href="https://www.blender.org/">Blender</a> que desarrolla el programa de animación 3D y reproducido con aun aplicación reproductor instalado en la computadora.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/spring_hu034d4698824260e9b33e342b2f0c52ae_1754294_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Spring"><img src="https://picodotdev.github.io/blog-bitix/2022/10/como-descargar-videos-musica-o-audio-de-youtube-y-otras-webs/images/spring_hu034d4698824260e9b33e342b2f0c52ae_1754294_300x250_fit_q90_h2_box_3.webp" width="300" height="165" alt="Spring" title="Spring" class="&#34; " loading="lazy"></a></p>
<figcaption>Spring</figcaption>
</figure>
</div>
<h4 id="de-línea-de-comandos">De línea de comandos</h4>
<p>La línea de comandos es más rápida conociendo el comando y hace fácil la descarga. La opción más conocida es <a href="https://github.com/ytdl-org/youtube-dl/">youtube-dl</a> y un <em>fork</em> de esta es <a href="https://github.com/yt-dlp/yt-dlp">yt-dlp</a> que incorpora algunas características adicionales.</p>
<p>Dado que ambos programas están relacionados las opciones del comando son las mismas. Para descargar un vídeo y solo el audio se utiliza el siguiente comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ youtube-dl -f <span class="s1">&#39;bestvideo,bestaudio&#39;</span> -o <span class="s1">&#39;%(title)s.f%(format_id)s.%(ext)s&#39;</span> <span class="o">[</span>URL<span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">$ youtube-dl -f <span class="s1">&#39;bestvideo&#39;</span> -o <span class="s1">&#39;%(title)s.f%(format_id)s.%(ext)s&#39;</span> <span class="s2">&#34;https://www.youtube.com/watch?v=NJe4rEyfQ3g&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ youtube-dl -f <span class="s1">&#39;bestaudio&#39;</span> -o <span class="s1">&#39;%(title)s.f%(format_id)s.%(ext)s&#39;</span> <span class="s2">&#34;https://www.youtube.com/watch?v=NJe4rEyfQ3g&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>youtube-dl.sh</span>
    </div>
</div>
<p>El comando youtube-dl permite otras muchas opciones como la descarga de una imagen y otras opciones de selección para la calidad del vídeo tanto en resolución como en tamaño de archivo descargado así como variables para nombrar el archivo descargado, más opciones para casos de uso avanzados que las aplicaciones más sencillas pero más fáciles de usar con interfaz gráfica.</p>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/</id>
        <title>Herramientas de productividad para gestionar tareas y notas</title>
        <updated>2022-06-02T19:00:00+02:00</updated>
        <published>2022-06-02T19:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Para uso personal, el blog y las tareas en el trabajo he estado usando Google Docs y posteriormente Evernote. En mi flujo de trabajo estas herramientas no eran todo lo que necesitaba para la gestión de las tareas en los tres usos que les daba. De modo que he estado buscando alguna herramienta alternativa mejor adaptada a mis necesidades, dos de estas herramientas son Notion que es la que finalmente estoy usando de momento y ClickUp que es una muy buena alternativa a Notion en algunos aspectos mejor.</strong></p>]]>
        <![CDATA[<p>Las computadoras ya son parte fundamental en muchos puestos de trabajo o tareas personales. Hay muchas aplicaciones esenciales que muchas personas usan diariamente desde el sistema operativo y sus aplicaciones integradas, aplicaciones ofimáticas para la edición de documentos o herramientas de comunicación de correo electrónico o de mensajes.</p>
<p>Los clientes de correo electrónico no sólo permiten leer el correo electrónico sino que además añaden la función de agenda que permite anotar en el calendario reuniones, citas y su duración para reservar su tiempo. Además permiten establecer recordatorios de preaviso para los eventos anotados.</p>
<p>Otras herramientas permiten comunicarse de forma mucho más inmediata que con el correo electrónico con herramientas de mensajería instantánea de forma individual o con grupos de personas en canales públicos que otras personas puedan ver o en canales privados que nadie más pueda ver si no están en el grupo. Al igual que con el correo electrónico permiten compartir archivos e imágenes.</p>
<p>Los editores de documentos ahora tienen funciones para que varias personas colaboren en la edición de un documento al mismo tiempo.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/02/las-aplicaciones-integradas-del-entorno-de-escritorio-gnome/">Las aplicaciones integradas del entorno de escritorio GNOME</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2020/03/listado-de-programas-esenciales-segun-categoria-para-gnu-linux/">Listado de programas esenciales según categoría para GNU/Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/05/descargar-e-instalar-la-distribucion-ubuntu-de-gnu-linux-paso-a-paso-desde-cero/">Descargar e instalar la distribución Ubuntu de GNU/Linux paso a paso desde cero</a></li>
</ul>
<div class="alert alert-warning pt-0 pb-0 tableofcontents"><h2>Contenido del artículo</h2><toc></toc></div>
<h3 id="herramientas-de-productividad-y-organización">Herramientas de productividad y organización</h3>
<p>Usar las aplicaciones adecuadas que faciliten la tarea o a organizarse suponen una mejora en la productividad tanto en la facilidad para realizar la tarea como en el tiempo empleado para completarla. A esta categoría pertenecen las aplicaciones de productividad.</p>
<p>Una función habitual en la categoría de productividad es tener una agenda en la que anotar información sobre cada una de las tareas que se está realizando. Anotar esta información permite que nada de lo anotado se pierda y tenerlo presente o recordarlo cuando es necesario.</p>
<p>Estas aplicaciones pueden ser utilizadas para uso personal pero también para grupos de personas con diferentes departamentos como ingeniería, producto, marketing diseño, recursos humanos, operaciones, … por diferentes organizaciones desde <em>startups</em> a empresas grandes.</p>
<p>A continuación incluyo tres aplicaciones que se utilizan para tener un registro de las tareas los aspectos más relevantes de cada una de ellas. Al final, incluyo una pequeña lista de aplicaciones alternativas a las presentadas.</p>
<h4 id="getting-things-gnome">Getting Things GNOME!</h4>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gtg.svg" width="200" height="200" alt="Getting Things GNOME!" title="Getting Things GNOME!" class="" loading="false&#34;"></p>
</div>
<p>La aplicación <a href="https://flathub.org/apps/details/org.gnome.GTG">Getting Things GNOME!</a> es una aplicación de escritorio que ofrece la funcionalidad para gestionar listas de tareas, esto permite registrarlas, priorizarlas y tener el registro para centrarse en cada momento en las más prioritarias y más importantes. Esto permite aumentar la productividad y que el cambio de contexto de tarea sea más fácil.</p>
<p>Está diseñada para el entorno de escritorio <a href="https://www.gnome.org/">GNOME</a> siguiendo sus normas de estilos y disponible para el sistema operativo <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> como una aplicación de <a href="https://flatpak.org/">Flatpak</a>.</p>
<p>GTG! destaca por ser una aplicación simple y fácil de usar que permite añadir etiquetas a las tareas, establecer colores a las etiquetas para destacar las tareas visualmente, asignar fechas de inicio a las etiquetas para ordenarlas según prioridad, añadir notas a las tareas con un editor de textos básico y crear subtareas.</p>
<p>Que esté unicamente disponible para GNU/Linux y no disponga de una versión web que permite compartir las tareas entre varios dispositivos son ventajas que tienen otras opciones.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/images/gtg_hudd55416b0f8a3896ab51731569a5d1e6_52881_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Getting Things GNOME!"><img src="https://picodotdev.github.io/blog-bitix/2022/06/herramientas-de-productividad-para-gestionar-tareas-y-notas/images/gtg_hudd55416b0f8a3896ab51731569a5d1e6_52881_650x450_fit_q90_h2_box_3.webp" width="650" height="428" alt="Getting Things GNOME!" title="Getting Things GNOME!" class="&#34; " loading="lazy"></a></p>
<figcaption>Getting Things GNOME!</figcaption>
</figure>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/0u1hQxsIB1M" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="notion">Notion</h4>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/notion.svg" width="200" height="200" alt="Notion" title="Notion" class="" loading="false&#34;"></p>
</div>
<p><a href="https://www.notion.so/product">Notion</a> ha ganado en popularidad por incorporar varias novedades en la edición de las páginas que hace que sea mucho más versátil que un simple editor de documentos y le hacen una herramienta polivalente que sirve para múltiples propósitos.</p>
<p>Como editor de páginas o documentos incorpora las funcionalidades habituales de cualquier editor de documentos cómo establecer estilos y una amplia variedad de tipos de párrafos incluyendo listas de tareas y adjuntar tanto imágenes, archivos y otros tipos de contenidos como vídeos de <a href="https://www.youtube.com/">YouTube</a>.</p>
<p>Dos de las características destacadas de Notion son la incorporación de bases de datos que permiten recoger información en una tabla con varias columnas o campos e insertar varios registros en esa tabla. Posteriormente la información de la tabla se puede visualizar en diferentes vistas como en formato de tabla, en formato de panel Kanban, línea de tiempo, calendario o galería entre otras pudiendo personalizar los campos que se muestran en cada una y pudiendo establecer filtros para mostrar la información que se desee de la tabla.</p>
<p>Otra de sus características destacadas es su capacidad de que el contenido de un bloque se pueda visualizar desde varias páginas y si se edita se actualice en todas las páginas en la que está incluido. Esto permite que la información mantenga una única fuente de la verdad, sea coherente y esté siempre actualizada en todos los documentos. Esto es muy útil si se emplea Notion como una base de conocimiento.</p>
<p>Finalmente, ofrece una amplia variedad de plantillas de páginas preconstruidas con ciertos elementos y contenido ajustadas según el propósito de la página.</p>
<p>Notion es una aplicación de pago pero dispone de una opción de uso personal sin limitaciones importantes entre sus <a href="https://www.notion.so/pricing">planes de precios</a>. Tiene cliente web y de escritorio para múltiples sistemas operativos incluidos dispositivos móviles además de permitir la colaboración entre varias personas o entre todos los miembros de una organización.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/FXIrojSK3Jo" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/BZnR2Ml17sc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/O8qdvSxDYNY" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="clickup">ClickUp</h4>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/clickup.svg" width="300" height="63" alt="ClickUp" title="ClickUp" class="" loading="false&#34;"></p>
</div>
<p><a href="https://clickup.com/">ClickUp</a> es una herramienta alternativa a Notion más centrada y preparada en la gestión de tareas, la colaboración en grupo, con características similares en la edición de documentos, algunas adicionales y en algunos aspectos mejor incluso que Notion.</p>
<p>Tiene un plan gratuito para uso personal no demasiado restrictivo y dispone de aplicaciones para dispositivos móviles. Los siguientes vídeos son una introducción a las funcionalidades que ofrece ClickUp.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/f_exDBcGYnM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/ThdUapoLWwo" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/9nCngjFyWMQ" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/SYktbpKcVp0" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h4 id="otras">Otras</h4>
<p>Tanto Notion como ClickUp son herramientas de una nueva generación que añaden nuevas características a los más simples editores de textos. Estas nuevas características les hacen muy flexibles y les permiten integrar en una única herramienta varías específicas según el propósito con el ahorro de costes y simplificación y número de de herramientas diferentes usadas.</p>
<p>Otras opciones alternativas para la gestión de tareas y edición de documentos o notas son:</p>
<ul>
<li><a href="https://todoist.com/es">Todoist</a></li>
<li><a href="https://evernote.com/intl/es/">Evernote</a></li>
<li><a href="https://obsidian.md/">Obsidian</a></li>
<li><a href="https://www.microsoft.com/es-es/microsoft-365/onenote/digital-note-taking-app">OneNote</a></li>
<li><a href="https://www.google.es/intl/es/docs/about/">Google Docs</a></li>
<li><a href="https://support.google.com/tasks/answer/7675772?hl=es">Google Tasks</a></li>
</ul>
]]>
        </content>
        
            
                <category term="software"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/</id>
        <title>Buscar en el historial desde la barra de direcciones inteligente de Firefox</title>
        <updated>2019-12-11T17:00:00+01:00</updated>
        <published>2019-12-11T17:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/firefox.svg" width="200" height="188" alt="Firefox" title="Firefox" class="" loading="false&#34;"></p>
</div>
<p>Los navegadores web guardan un historial de todas las páginas a las que se acceden, además de los marcadores que los usuarios creen. Este historial en Firefox se guarda en orden cronológico pudiendo consultar todas las páginas accedidas en el día actual, el de ayer y anteriores fechas. También es posible realizar búsquedas para encontrar una cierta página. En Firefox al historial se accede desde en menú con la opción <em>Historial &gt; Mostrar todo el historial</em>. El historial se muestra en una ventana.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/historial-firefox_huafb4b7f59bbf1e2f6492c5417b522249_48002_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Historial de páginas en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/historial-firefox_huafb4b7f59bbf1e2f6492c5417b522249_48002_650x450_fit_q90_h2_box_3.webp" width="650" height="346" alt="Historial de páginas en Firefox" title="Historial de páginas en Firefox" class="&#34; " loading="lazy"></a></p>
<figcaption>Historial de páginas en Firefox</figcaption>
</figure>
</div>
<p>Acceder al historial requiere abrir una ventana y luego hacer una búsqueda pero sin necesidad de abrir la ventana del historial desde la barra de direcciones inteligente también pueden hacerse búsquedas, no solo para las páginas del historial sino también entre los marcadores, pestañas abiertas, por títulos de página o por coincidencias en la dirección web. Con ciertos caracteres especiales se determina el comportamiento de la búsqueda.</p>
<ul>
<li><code>^</code>: para buscar coincidencias en el historial de búsqueda.</li>
<li><code>*</code>: para buscar coincidencias en los marcadores.</li>
<li><code>+</code>: para buscar coincidencias en las etiquetas de las páginas.</li>
<li><code>%</code>: para buscar entre las pestañas abiertas actualmente.</li>
<li><code>#</code>: Para buscar coincidencias en usando los títulos de página.</li>
</ul>
<ul>
<li><code>$</code>: para buscar coincidencias en la dirección web.</li>
</ul>
<p>En esta captura de hace una búsqueda por el título de las páginas en el historial.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/barra-de-busqueda-firefox_huf6ad5650de6e3bff9124953c89123401_61128_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Barra de búsqueda inteligente de Firefox"><img src="https://picodotdev.github.io/blog-bitix/2019/12/buscar-en-el-historial-desde-la-barra-de-direcciones-inteligente-de-firefox/images/barra-de-busqueda-firefox_huf6ad5650de6e3bff9124953c89123401_61128_650x450_fit_q90_h2_box_3.webp" width="650" height="430" alt="Barra de búsqueda inteligente de Firefox" title="Barra de búsqueda inteligente de Firefox" class="&#34; " loading="lazy"></a></p>
<figcaption>Barra de búsqueda inteligente de Firefox</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://support.mozilla.org/en-US/kb/address-bar-autocomplete-firefox?redirectlocale=en-US&amp;redirectslug=awesome-bar-search-firefox-bookmarks-history-tabs">Address bar autocomplete in Firefox - Search your bookmarks, history and tabs</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/</id>
        <title>Nube privada para documentos personales con Nextcloud y OnlyOffice</title>
        <updated>2019-12-05T12:00:00+01:00</updated>
        <published>2019-12-05T12:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Empresas como Google ofrecen servicios gratuitos que los usuarios pueden utilizar, algunos de ellos a cambio de entregrarles documentos con información personal con la consiguiente potencial pérdida de privacidad. Algunos de estos servicios son sustituibles con alternativas como Nextcloud y OnlyOffice que permiten a sus usuarios ser dueños de su información ya sea utilizando una Raspberry Pi como servidor que debe ser administrada o incluso en la nube con servicios como DigitalOcean o AWS.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/nextcloud.svg" width="200" height="141" alt="Nextcloud" title="Nextcloud" class="" loading="false&#34;"></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/onlyoffice.svg" width="200" height="186" alt="OnlyOffice" title="OnlyOffice" class="" loading="false&#34;"></p>
</div>
<p>Una cuenta de Google da acceso a múltiples servicios gratuitos, útiles y con un servicio más que correcto. Algunas de estos servicios está el de correo electrónico de <a href="https://www.google.com/intl/es/gmail/about/">GMail</a>, la sincronización y unidad de documentos de <a href="https://www.google.es/drive/apps.html">Google Drive</a>, calendario para apuntar citas y recordatorios con <a href="https://www.google.com/calendar/about/">Google Calendar</a>, el acceso a la <em>suite</em> ofimática colaborativa <a href="https://www.google.es/intl/es/docs/about/">Google Docs</a> o fotos con <a href="https://www.google.com/photos/about/">Google Photos</a>. Estos son los servicios que uso de Google por su comodidad.</p>
<p>Los servicios en la nube permiten guardar los documentos e información fuera del dispositivo donde se usen, esto permite tener sincronizados y compartir todos los documentos entre varios dispositivos como el ordenador personal en casa, tener disponibles los documentos en el ordenador del trabajo y en un dispositivo móvil como un <em>smartphone</em> en cualquier lugar. El problema de los servicios en la nube es que no somos realmente propietarios de nuestra información y documentos, son entregados a esos servicios como los de Google, esto genera una pérdida de privacidad sin ser conscientes de los usos que le pueda dar Google. Para proteger nuestra privacidad hay alternativas para disponer de nuestra propia nube que proporcione la mayoría de estos servicios.</p>
<p><a href="https://nextcloud.com/">Nextcloud</a> es un software que permite alojar en nuestro propio servidor nuestros documentos sustituyendo a varios de los servicios de Google. Nextcloud permite almacenar archivos y documentos ofimáticos, fotos, música, calendarios, un visor de PDF, editor de <em>markdown</em>, gestor de tareas o nuestros contactos. Permite complementos con los que añadir las funcionalidad que necesitemos como un reproductor de música o un paquete ofimático con <a href="https://www.onlyoffice.com/es/">OnlyOffice</a> que sustituya a Google Docs.</p>
<p>Una <a href="https://www.raspberrypi.org/">Raspberry Pi 4</a> o una de sus <a href="https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/">7 computadoras alternativas</a> similares es una buena opción como servidor por su pequeño tamaño, bajo consumo, totalmente silencioso con un recomendable disipador pasivo y suficiente para ejecutar con normalidad Nextcloud con los 4 GiB de memoria del modelo con más capacidad. Hay <a href="https://picodotdev.github.io/blog-bitix/2018/03/7-plus-computadoras-baratas-del-tamano-de-una-tarjeta-de-credito-basadas-en-gnu-linux-y-arm/">otras placas similares</a> o incluso se puede utilizar un <a href="https://picodotdev.github.io/blog-bitix/2018/11/desempaquetado-intel-nuc-nuc8i5bek-bean-canyon-hyperx-impact-ram-y-samsung-970-evo-nvme-ssd/">Intel NUC</a> que permiten más cantidad de memoria y sus procesadores son más capaces. Para una nube privada una Raspberry Pi es interesante por su pequeño tamaño y bajo consumo eléctrico dado que su funcionamiento sería constante.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07TC2BK1X&amp;linkId=6e87726b77e92056e7ac168add1bc747" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07XNVPK8X&amp;linkId=bef0fad42b2cc046799c66f7fa220c0f" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B073JWXGNT&amp;linkId=d64d66fda7d25defd2018c4119aa7e46" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B014I8U33I&amp;linkId=df5c52be4ca21b9991d26145edb0b642" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VMXHJ4Q&amp;linkId=39ee0802cdc202ce8259d463b59224ed" title="Amazon" class="lozad"></iframe>
</div>
<p>Usando <a href="https://www.docker.com/">Docker</a> y el <a href="https://github.com/ONLYOFFICE/docker-onlyoffice-nextcloud">repositorio de GitHub</a> es sencillo iniciar el servidor de Nextcloud realizando los siguientes pasos.</p>
<ul>
<li>Instalar Docker.</li>
<li>Descargar o clonar el repositorio de GitHub.</li>
<li>Iniciar con Docker Compose los contenedores de Nextcloud y OnlyOffice.</li>
<li>Acceder <em>http://localhost</em> y realizar la configuración inicial, introducir el usuario y contraseña de administrador.</li>
<li>Ejecutar <em>bash set_configuration.sh</em>.</li>
<li>Añadir el complemento de OnlyOffice.</li>
<li>Acceder a <em>http://localhost</em>.</li>
</ul>
<p>Este archivo de Docker Compose incluye Nextcloud con OnlyOffice sin usar una base de datos externa.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;3&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">app</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">app-server</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nextcloud:fpm</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">expose</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;80&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;9000&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">app_data:/var/www/html</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">onlyoffice-document-server</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">onlyoffice-document-server</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">onlyoffice/documentserver:latest</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">expose</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;80&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s1">&#39;443&#39;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">document_data:/var/www/onlyoffice/Data</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">document_log:/var/log/onlyoffice</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">nginx</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">nginx-server</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">stdin_open</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">tty</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">always</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="m">80</span><span class="p">:</span><span class="m">80</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="m">443</span><span class="p">:</span><span class="m">443</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">./nginx.conf:/etc/nginx/nginx.conf</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">app_data:/var/www/html</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">document_data</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">document_log</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">app_data</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">mysql_data</span><span class="p">:</span><span class="w">&#10;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-compose up&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-configuracion_hu7348f075c395873d91de02a5fb57b540_592428_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Configuración de Nextcloud"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-configuracion_hu7348f075c395873d91de02a5fb57b540_592428_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Configuración de Nextcloud" title="Configuración de Nextcloud" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-inicio_hu8b8d704537521248ed406d67202f5cb8_498606_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Inicio de Nextcluod"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-inicio_hu8b8d704537521248ed406d67202f5cb8_498606_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Inicio de Nextcluod" title="Inicio de Nextcluod" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-archivos_hu0e5f45861c65c3026f8a6d9908487425_77402_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Archivos en Nextcloud"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-archivos_hu0e5f45861c65c3026f8a6d9908487425_77402_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Archivos en Nextcloud" title="Archivos en Nextcloud" class="&#34; " loading="lazy"></a></p>
<figcaption>Configuración y archivos en Nextcloud</figcaption>
</figure>
</div>
<p><a href="https://picodotdev.github.io/blog-bitix/2016/05/4-opciones-ofimaticas-alternativas-gratuitas-a-microsoft-office/">OnlyOffice es un paquete ofimático alternativa a Microsoft Office</a> que ofrece un editor de documentos de texto, una hoja de cálculo y una aplicación para realizar presentaciones integrables en Nextcloud. Son aplicaciones con menos opciones que las ofrecidas por Microsoft Office pero suficientes para un uso sencillo, también dispone de una versión como aplicaciones de escritorio.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-documento_hu75d514e1af687067042b36db0d8cca97_82529_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Documento con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-documento_hu75d514e1af687067042b36db0d8cca97_82529_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Documento con OnlyOffice" title="Documento con OnlyOffice" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-hoja-de-calculo_hu1e880885d1b87bcaeedc67cdcf30656f_90253_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Hola de cálculo con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-hoja-de-calculo_hu1e880885d1b87bcaeedc67cdcf30656f_90253_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Hola de cálculo con OnlyOffice" title="Hola de cálculo con OnlyOffice" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-presentacion_huf80b231b0357f81b45055c61fc87e78a_89511_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Presentación con OnlyOffice"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-onlyoffice-presentacion_huf80b231b0357f81b45055c61fc87e78a_89511_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Presentación con OnlyOffice" title="Presentación con OnlyOffice" class="&#34; " loading="lazy"></a></p>
<figcaption>Ofimática con OnlyOffice y Nextcloud alternativa a Google Docs</figcaption>
</figure>
</div>
<p>Otras utilidades es un reproductor de música, calendario o galería de fotos, hay un complemento para añadir estas funcionalidades.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-pdf_hu9c375447dbaadb6118d44af382ae6dc2_244274_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Visor de documento PDF"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-pdf_hu9c375447dbaadb6118d44af382ae6dc2_244274_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Visor de documento PDF" title="Visor de documento PDF" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-calendario_hua3364b511a687c3dd051fba1e58308cd_55308_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Calendario"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-calendario_hua3364b511a687c3dd051fba1e58308cd_55308_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Calendario" title="Calendario" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-fotos_hu8fa48cc6dd28b15761dd535ce8c3e54c_529797_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Visor de fotos"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-visor-fotos_hu8fa48cc6dd28b15761dd535ce8c3e54c_529797_300x200_fit_q90_h2_box_3.webp" width="300" height="198" alt="Visor de fotos" title="Visor de fotos" class="&#34; " loading="lazy"></a></p>
<figcaption>Aplicaciones y complementos</figcaption>
</figure>
</div>
<p>Con <a href="https://en.wikipedia.org/wiki/WebDAV">WebDAV</a> los documentos son accesibles como si fuese una unidad local proporcionando la misma funcionalidad de Google Drive. En GNOME con el explorador de archivos Nautilus es posible conectarse a dispositivo WebDAV, en el caso de Nextcloud la dirección es <em>dav://localhost/remote.php/dav/files/admin</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-webdav_hu654eea6c2f2a8913b74ce780deb20881_51637_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Archivos en el explorador de archivos Nautilus con WebDAV"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-webdav_hu654eea6c2f2a8913b74ce780deb20881_51637_300x200_fit_q90_h2_box_3.webp" width="289" height="200" alt="Archivos en el explorador de archivos Nautilus con WebDAV" title="Archivos en el explorador de archivos Nautilus con WebDAV" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-administracion_hub414e9a557d957a8ac86576d54dc2a39_111099_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Opciones de administración"><img src="https://picodotdev.github.io/blog-bitix/2019/12/nube-privada-para-documentos-personales-con-nextcloud-y-onlyoffice/images/nextcloud-administracion_hub414e9a557d957a8ac86576d54dc2a39_111099_300x200_fit_q90_h2_box_3.webp" width="251" height="200" alt="Opciones de administración" title="Opciones de administración" class="&#34; " loading="lazy"></a></p>
<figcaption>Archivos en el explorador de archivos Nautilus con WebDAV y opciones de administración</figcaption>
</figure>
</div>
<p>Con las <a href="https://nextcloud.com/install/#">aplicaciones para <em>smatphone</em></a> los documentos quedan accesibles en cualquier lugar teniendo un dispositivo móvil, <em>smartphone</em> o tableta. Tener una nube propia que esté accesible en internet hace necesario tener un dominio propio, añadir seguridad para lo que es necesario configurar Nextcloud de modo que utilice el protocolo seguro que cifre las comunicaciones con TLS, esto requiere obtener <a href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/">un certificado autofirmado</a> al menos o mejor obteniéndolo de <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a>, que proporciona certificados de forma automatizada y gratuita. Otra medida para aumentar la seguridad es utilizar un segundo factor de autenticación o <em>2FA</em>.</p>
<p>Hay <a href="https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/postgres/fpm/docker-compose.yml">ejemplo de archivo de Docker Compose para tener Nextcloud con un certificado</a> creado y renovado de forma automática con Let&rsquo;s Encrypt a través del contenedor <a href="https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion">jrcs/letsencrypt-nginx-proxy-companion</a> y configurando las variables de entorno <em>LETSENCRYPT_HOST</em>, <em>LETSENCRYPT_EMAIL</em> con el dominio propio para Nextcloud y un correo electrónico.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/</id>
        <title>Gestionar biblioteca y convertir entre formatos de libros electrónicos con Calibre</title>
        <updated>2019-11-22T16:00:00+01:00</updated>
        <published>2019-11-22T16:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Dado que los libros electrónicos ocupan muy poco se puede llegar a tener una biblioteca grande de libros que necesitan de una herramienta para ser catalogados y para realizar conversión entre formatos si es necesario para uno de entre los que soporte el dispositivo de libros electrónicos. Calibre es una aplicación que ofrece estas dos principales funciones.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/calibre.webp" width="200" height="80" alt="Calibre" title="Calibre" class="" loading="false&#34;"></p>
</div>
<p>Hace ya unos años que tengo un lector de libros electrónicos y estoy muy contento con él, el popular <a href="https://amzn.to/3Dd5Q8p">Amazon Kindle</a> aún echando de menos la luz integrada y el modelo <em>paperwhite</em> que tiene la pantalla más blanca de los modelos más recientes que el mío. Una de las ventajas de los libros electrónicos es que una vez leídos no ocupan espacio físico con lo que no hay que tener varias baldas de libros ocupando espacio, al ser electrónicos no son más que un archivo de ordenador que ocupan muy poco no llegando muchos de ellos al megabyte de espacio. Teniendo una gran cantidad de libros según se obtienen o se empiezan a leer un libro se puede añadir a la biblioteca para tenerlo catalogado. Para gestionar la biblioteca de libros una de las mejores opciones sino la mejor es <a href="https://calibre-ebook.com/">Calibre</a> no solo por su completa funcionalidad sino porque es software libre.</p>
<p>Calibre permite organizar los libros por autor y muestra las portadas de los mismos, además permite convertir entre formatos de libros electrónicos. Dos de los formatos mayormente soportados por los lectores de libros electrónicos son el <em>EPUB</em> y <em>MOBI</em>. Los Amazon Kindle soportan <em>MOBI</em>, <em>AZW</em>, <em>AZW3</em> y muchas de otras marcas soportan <em>EPUB</em>, dependiendo del dispositivo en que vayan a ser leídos los libros y el formato en el que se tenga el libro puede ser necesaria una conversión.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre_hu46ff9abe2a9e46774fd89681d1ab6ae2_1940986_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Biblioteca y conversor de libros electrónicos Calibre"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre_hu46ff9abe2a9e46774fd89681d1ab6ae2_1940986_300x200_fit_q90_h2_box_3.webp" width="292" height="200" alt="Biblioteca y conversor de libros electrónicos Calibre" title="Biblioteca y conversor de libros electrónicos Calibre" class="&#34; " loading="lazy"></a></p>
<figcaption>Biblioteca y conversor de libros electrónicos Calibre</figcaption>
</figure>
</div>
<p>La conversión entre formatos no tarda muchos y en ningún momento me he encontrado que el resultado sea malo si el original está correctamente formateado. Como los libros electrónicos son archivos pequeños la conversión se realiza en unos pocos decenas de segundos. Además, Calibre permite realizar la conversión de forma masiva sobre varios libros guardando los libros en diferentes formatos en la biblioteca.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-convertir_hub994f0718b34dec5877192624f544a1e_826817_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Convertir un libro electrónico a otro formato con Calibre"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-convertir_hub994f0718b34dec5877192624f544a1e_826817_300x200_fit_q90_h2_box_3.webp" width="213" height="200" alt="Convertir un libro electrónico a otro formato con Calibre" title="Convertir un libro electrónico a otro formato con Calibre" class="&#34; " loading="lazy"></a></p>
<figcaption>Convertir un libro electrónico a otro formato</figcaption>
</figure>
</div>
<p>La biblioteca se guarda en el sistema de archivos del ordenador en una estructura de directorios organizados por autor, títulos del libro y en los formatos en los que se haya realizado la conversión.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-biblioteca-autores_huc9ea6d610438a4f3fb3049ad0dc871db_88941_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Organización por autores de los archivos en la biblioteca"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-biblioteca-autores_huc9ea6d610438a4f3fb3049ad0dc871db_88941_300x200_fit_q90_h2_box_3.webp" width="300" height="160" alt="Organización por autores de los archivos en la biblioteca" title="Organización por autores de los archivos en la biblioteca" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-biblioteca-libros_huc259eb10d2e5d664a2f4e8df954d51f5_62215_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Organización por autor de los archivos en la biblioteca"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-biblioteca-libros_huc259eb10d2e5d664a2f4e8df954d51f5_62215_300x200_fit_q90_h2_box_3.webp" width="300" height="160" alt="Organización por autor de los archivos en la biblioteca" title="Organización por autor de los archivos en la biblioteca" class="&#34; " loading="lazy"></a></p>
<figcaption>Organización de los archivos en la biblioteca</figcaption>
</figure>
</div>
<p>Quizá algunos de los libros no tenga los metadatos correctos como el título, nombre del autor o el número del libro si forma parte de una serie de libros relacionados, mediante otro diálogo se puede editar y catalogar correctamente el libro.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-metadatos_hud488a9e5a6701fe8f1402d14b2a219a4_748874_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Convertir un libro electrónico a otro formato con Calibre"><img src="https://picodotdev.github.io/blog-bitix/2019/11/gestionar-biblioteca-y-convertir-entre-formatos-de-libros-electronicos-con-calibre/images/calibre-metadatos_hud488a9e5a6701fe8f1402d14b2a219a4_748874_300x200_fit_q90_h2_box_3.webp" width="300" height="191" alt="Convertir un libro electrónico a otro formato con Calibre" title="Convertir un libro electrónico a otro formato con Calibre" class="&#34; " loading="lazy"></a></p>
<figcaption>Metadatos de un libro electrónico</figcaption>
</figure>
</div>
<p>Calibre tiene más funciones pero la catalogar los libros en una biblioteca digital y la realizar la conversión entre formatos para diferentes dispositivos son las dos principales. Está <a href="https://calibre-ebook.com/download">disponible para los principales sistemas operativos</a> como <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> en forma de paquete proporcionado por la distribución o como <a href="https://flathub.org/apps/details/com.calibre_ebook.calibre">aplicación Flatpak universal para cualquier distribución</a>, <a href="https://www.microsoft.com/es-es/windows/">Windows</a> y <a href="https://www.apple.com/macos/">macOS</a>. Puedes conocer la <a href="https://calibre-ebook.com/about#history">historia de Calibre</a> y cmo surgió como una necesidad de su autor.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/11/flatpak-distribucion-e-instalacion-de-programas-de-escritorio-en-las-distribuciones-gnu-linux/">Flatpak, distribución e instalación de programas de escritorio en las distribuciones GNU/Linux</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/</id>
        <title>Microservicios con Spring Cloud, Consul, Nomad y Traefik</title>
        <updated>2020-03-11T11:00:00+01:00</updated>
        <published>2019-10-12T02:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Sin entrar a si los microservicios son adecuados o no son adecuados en una aplicación, está claro que si se utilizan estos tienen varias necesidades. Un servicio de registro y descubrimiento, configuración centralizada, tolerancia a fallos, <em>gateway/load balancer/reverse proxy</em>, trazabilidad y métricas, autenticación, orquestación, &hellip; Los microservicios quizá no sean un gran monolito, quizá mas pequeños y con funcinalidad más acotada, pero el hecho de que se comuniquen a través de un medio más complejo y menos fiable como la red en vez de una llamada a un método y sean más numerosos hacen que la complejidad sea incluso mayor. Este artículo propone un ejemplo con Spring Cloud para los servicios, Consul para el registro y descubrimiento, Nomad para la orquestación y Traefik como <em>gateway</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java" class="" loading="false&#34;"></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring" title="Spring" class="" loading="false&#34;"></p>
</div>
<p>En otro artículo mostraba un ejemplo de <a href="https://picodotdev.github.io/blog-bitix/2018/09/registro-y-descubrimiento-de-servicios-con-spring-cloud-netflix/">microservicios con Spring Cloud</a> usando únicamente herramientas de <a href="https://spring.io/">Spring</a>. Cada una de esas herramientas cubren una funcionalidad que necesitan los microservicios. Entre ellas:</p>
<ul>
<li>Registro y descubrimiento, con <a href="https://github.com/Netflix/eureka">Eureka</a>. Los microservicios son numerosos, de vida efímera creándose y destruyéndose en diferentes ubicaciones por lo tanto necesitan una forma de localizarse unos a otros, la forma para encontrarse es acudiendo a un servicio donde se registran cuando se inician y se descubren cuando necesitan la ubicación de otro servicio.</li>
<li>Configuración centralizada, con <a href="https://cloud.spring.io/spring-cloud-config/">Spring Cloud Config</a>. Dado el número de microservicios actualizar la configuración de cada uno de ellos puede ser un problema, además dado que se pueden iniciar en diferentes ubicaciones aprovisionarles la configuración adecuada es un reto. En vez de aprovisionar la configuración otra técnica es hacer que cuando se inicien la obtengan de un servicio donde queda centralizada la configuración.</li>
<li>Tolerancia a fallos, con <a href="https://github.com/Netflix/Hystrix">Hyxtrix</a> y <a href="https://github.com/resilience4j/resilience4j">Resilience4j</a>. El medio de comunicación de los microservicios es a través de la red un medio mucho menos confiable que una llamada a un método en un lenguaje de programación en una aplicación monolítica. De modo que los microservicios han de estar preparados para tolerar fallos en sus comunicaciones con otros servicios.</li>
<li><em>Gateway</em>, <em>load balancer</em> y <em>reverse proxy</em> con tolerancia a fallos, con <a href="https://github.com/Netflix/zuul">Zuul</a>. Para aumentar la disponibilidad, escalabilidad y tolerar fallos en algunos servicios se suelen crear varias instancias de cada microservicio pero tener varias instancias hace que sea necesario balancear la carga entre cada una de las instancias. Para que los clientes sean agnósticos del número de instancias se emplea un <em>gateway</em> que proporciona balanceo de carga e implementa a su vez patrones de tolerancia a fallos.</li>
<li>Trazabilidad y correlación de trazas entre diferentes servicios, con <a href="https://spring.io/projects/spring-cloud-sleuth">Spring Cloud Sleuth</a>. Una petición puede desencadenar una cadena de peticiones entre diferentes servicios ubicados en múltiples nodos, para tareas de diagnóstico en caso de querer investigar un <em>bug</em> o que ha ocurrido es necesario correlacionar todas las trazas que ha desencadenado una petición, se implementa asignado un identificativo global a la petición que es transmitido en las llamadas de microservicio a microservicio.</li>
</ul>
<p>En otro <a href="https://picodotdev.github.io/blog-bitix/2019/02/servidor-oauth-gateway-y-servicio-rest-utilizando-tokens-jwt-con-spring/">ejemplo sobre OAuth con Spring</a> mostraba otra funcionalidad:</p>
<ul>
<li><em>Gateway</em>, con <a href="https://spring.io/projects/spring-cloud-gateway">Spring Cloud Gateway</a>.</li>
<li>Autenticación y autorización, con <a href="https://spring.io/projects/spring-security-oauth">Spring Security OAuth</a>.</li>
</ul>
<p>Los microservicios también necesitan monitorización y métricas, en el ejemplo <a href="https://picodotdev.github.io/blog-bitix/2018/12/monitorizar-una-aplicacion-java-de-spring-boot-con-micrometer-prometheus-y-grafana/">Monitorizar una aplicación Java de Spring Boot con Micrometer, Prometheus y Grafana</a>:</p>
<ul>
<li>Con <a href="https://prometheus.io/">Prometheus</a> y <a href="https://grafana.com/">Grafana</a>. Nuevamente el número de instancias que requiere una arquitectura orientada a microservicios origina la necesidad en mayor medida de conocer el estado del sistema, ya sean métricas de los sistemas como uso de CPU, memoria o almacenamiento o de la aplicación como peticiones por segundo y porcentaje de correctas e incorrectas.</li>
</ul>
<p>En esta lista falta un orquestador para el despliegue de los microservicios, que se encargue de su ciclo de vida, escalado de instancias y despliegue con estrategias <em>rolling</em>, <em>blue/green</em> y <em>canary</em>. Es una cosa que le faltaba al ejemplo de microservicios con Spring Cloud.</p>
<ul>
<li>Orquestador de servicios, con <a href="https://www.nomadproject.io/">Nomad</a>. <a href="https://picodotdev.github.io/blog-bitix/2019/04/introduccion-a-nomad-para-gestionar-aplicaciones-y-microservicios/">Introducción a Nomad para gestionar aplicaciones y microservicios</a>, <a href="https://picodotdev.github.io/blog-bitix/2019/04/estrategias-de-despliegue-para-microservicios-con-nomad/">Estrategias de despliegue para microservicios con Nomad</a>.</li>
</ul>
<p>Además, en este ejemplo reemplazo varias de estas herramientas de Spring. Sustituyo el servicio de registro y descubrimiento proporcionado por Eureka por <a href="https://www.consul.io/">Consul</a>, el <em>gateway</em>, <em>load balancer</em> y <em>reverse proxy</em> proporcionado por Zuul por <a href="https://traefik.io/">Traefik</a> y añado el orquestador de microservicios <a href="https://www.nomadproject.io/">Nomad</a>.</p>
<div class="media">
<figure>
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="200" alt="Traefik" title="Traefik" class="&#34; " loading="lazy">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-nomad.svg" width="200" height="200" class="&#34; " loading="lazy">
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/traefik.svg" width="200" height="200" class="&#34; " loading="lazy"></p>
</figure>
</div>
<p>Traefik se configura con los servicios iniciados en los contenedores de Docker utilizando junto con los bloques o <em>stanzas</em> de <em>config</em> y <em>tags</em> en la definición de los servicios de Nomad. Según el criterio definido por el servicio Traefik es capaz de redirigir el tráfico que le llegue al servicio apropiado, entre las posibilidades que puede realizar Traefik es balanceo de carga entre las múltiples instancias que se hayan definido pero también implementa patrones de tolerancia a fallos con reintentos, el patrón <em>circuit breaker</em> o limitar el tráfico para evitar saturar a un servicio con demasiadas peticiones.</p>
<p>El esquema de servicios sería el siguiente. Los <em>job</em> son enviados a Nomad desde la linea de comandos que inicia los contenedores en Docker y registra los servicios en Consul, Traefik monitoriza el catálogo de servicios registrados en Consul y se autoconfigura según los <em>tags</em> asociados a los servicios, los <em>tags</em> se especificar en los archivos de los servicios para Nomad. Una vez iniciados los servicios desde la terminal con un <em>curl</em> o desde la aplicación cliente que accede a Consul para conocer la ubicación del servicio de Traefik envían una petición a Traefik que haciendo balanceo de carga la reenvía a una de las instancias del servicio, el servicio responde y Traefik envía la respuesta al cliente.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/esquema-arquitectura_hu4a60e9874e21fb74b7496e4608f1c5ff_356960_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Esquema arquitectura"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/esquema-arquitectura_hu4a60e9874e21fb74b7496e4608f1c5ff_356960_600x450_fit_q90_h2_box_3.webp" width="600" height="382" alt="Esquema arquitectura" title="Esquema arquitectura" class="&#34; " loading="lazy"></a></p>
<figcaption>Esquema arquitectura</figcaption>
</figure>
</div>
<p>La ejecución del ejemplo requiere <a href="https://www.docker.com/">Docker</a> ya que es en este caso el <em>driver</em> empleado en Nomad para ejecutar los servicios del servicio de configuración, el <em>gateway</em>, el servicio y el cliente del servicio. Nomad además se encarga de registrar los servicios en el servicio de registro y descubrimiento de Consul.</p>
<p>Los contenedores de Docker se añade a una misma red para que puedan comunicarse entre ellos, ha de ser así hasta que no se resuelva una <a href="https://github.com/docker/for-linux/issues/264">petición de Docker para que los contenedores puedan comunicarse con la máquina <em>host</em></a> que los alberga.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker network create --subnet 172.30.0.0/16 nomad&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-network-create.sh</span>
    </div>
</div>
<p>Posteriormente hay que ejecutar Consul y Nomad tras lo cual se puede acceder a sus consolas de estado.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ consul agent -dev -ui -client<span class="o">=</span>0.0.0.0&#10;</span></span><span class="line"><span class="cl">$ nomad agent -dev&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-consul-run.sh</span>
    </div>
</div>
<p>Enviar a Nomad los <em>job</em> de Traefik tras lo cual se puede acceder a su consola de estado. El siguiente paso es enviar el <em>job</em> del servicio que proporciona la configuración a los microservicios. Lo anterior únicamente es infraestructura aún no hay ningún servicio que proporcione alguna funcionalidad, la funcionalidad que proporciona el servicio implementado con Spring es simplemente devolver un mensaje como respuesta a la petición que se le realice, se envía el <em>job</em> del servicio a Nomad. Finalmente, el servicio es consumido por un cliente que realiza una petición al servicio cada 1 segundo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ./gradlew assemble&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">$ nomad job run nomad/traefik.nomad&#10;</span></span><span class="line"><span class="cl">$ nomad job run nomad/configserver.nomad&#10;</span></span><span class="line"><span class="cl">$ nomad job run nomad/service.nomad&#10;</span></span><span class="line"><span class="cl">$ nomad job run nomad/client.nomad</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-run.sh</span>
    </div>
</div>
<p>Definición de un servicio en un <em>job</em> para Nomad. <em>count</em> define cuantas instancias del servicio se inicia, la <em>stanza</em> <em>update</em> define como será la actualización cuando se actualice el servicio, la <em>stanza</em> <em>labels</em> contiene la configuración para Traefik, <em>check</em> define los parámetros para la monitorización.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="k">job</span> <span class="s2">&#34;service&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">  datacenters</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;dc1&#34;</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="k">group</span> <span class="s2">&#34;service&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;count</span> <span class="o">=</span> <span class="m">2</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">update</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  max_parallel</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="m">1</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  health_check</span>&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">=</span> <span class="s2">&#34;checks&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  min_healthy_time</span>  <span class="o">=</span> <span class="s2">&#34;20s&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  healthy_deadline</span>  <span class="o">=</span> <span class="s2">&#34;10m&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  progress_deadline</span> <span class="o">=</span> <span class="s2">&#34;20m&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  canary</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">1</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  stagger</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="o">=</span> <span class="s2">&#34;15s&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">task</span> <span class="s2">&#34;service&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;  driver</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">config</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image</span> <span class="o">=</span> <span class="s2">&#34;openjdk:11-jdk&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args</span> <span class="o">=</span> <span class="p">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;bash&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;-c&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;(cd /app &amp;&amp; java -jar /app/service/build/libs/service-1.0.jar --port</span><span class="o">=</span><span class="m">8080</span><span class="p">)</span><span class="err">&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">port_map</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  http</span> <span class="o">=</span> <span class="s2">&#34;8080&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;network_mode</span> <span class="o">=</span> <span class="s2">&#34;nomad&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extra_hosts</span> <span class="o">=</span> <span class="p">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;traefik:172.30.0.3&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;volumes</span> <span class="o">=</span> <span class="p">[</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="s2">&#34;/home/picodotdev/Software/personal/blog-ejemplos/SpringCloudConsulNomadTraefik/:/app&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">service</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name</span> <span class="o">=</span> <span class="s2">&#34;service&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port</span> <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">check</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  type</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  port</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;http&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  path</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">=</span> <span class="s2">&#34;/actuator/health&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  interval</span> <span class="o">=</span> <span class="s2">&#34;5s&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  timeout</span>  <span class="o">=</span> <span class="s2">&#34;2s&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tags</span> <span class="o">=</span> <span class="p">[</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.middlewares.service1-stripprefix.stripprefix.prefixes</span><span class="o">=</span><span class="err">/</span><span class="k">service</span><span class="err">&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.middlewares.service1-retry.retry.attempts</span><span class="o">=</span><span class="m">10</span><span class="err">&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.routers.service1.middlewares</span><span class="o">=</span><span class="k">service1</span><span class="err">-</span><span class="k">stripprefix</span><span class="p">,</span><span class="k">service1</span><span class="err">-</span><span class="k">retry</span><span class="err">&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.routers.service1.rule</span><span class="o">=</span><span class="k">PathPrefix</span><span class="p">(</span><span class="err">`/</span><span class="k">service</span><span class="err">`</span><span class="p">)</span><span class="err">&#34;</span><span class="p">,</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &#34;traefik.http.services.service1.loadbalancer.server.port</span><span class="o">=</span><span class="m">8080</span><span class="err">&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">resources</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cpu</span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">=</span> <span class="m">200</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory</span> <span class="o">=</span> <span class="m">1024</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">network</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  mbits</span> <span class="o">=</span> <span class="m">20</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="k">port</span> <span class="s2">&#34;http&#34;</span> {}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  }&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;}&#10;</span></span><span class="line"><span class="cl">  }&#10;</span></span><span class="line"><span class="cl">}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service.nomad</span>
    </div>
</div>
<p>Tanto Consul, Nomad como Traefik ofrecen una consola para ver su estado ubicadas en las siguientes direcciones respectivamente accesibles con el navegador <em>http://127.0.0.1:8500</em>, <em>http://127.0.0.1:4646</em>, <em>http://127.0.0.1:8092</em>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/consul_hud3df5263e4ff8422559f6f7fab94c175_89169_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/consul_hud3df5263e4ff8422559f6f7fab94c175_89169_200x150_fit_q90_h2_box_3.webp" width="160" height="150" alt="Consul" title="Consul" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-1_hu7dea68e7f0ccfcb1f8f0def4178aee0e_68294_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-1_hu7dea68e7f0ccfcb1f8f0def4178aee0e_68294_200x150_fit_q90_h2_box_3.webp" width="160" height="150" alt="Nomad" title="Nomad" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-2_hu8ddf74c95bb84f5e3e2ed8d218a76259_132025_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Nomad"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/nomad-2_hu8ddf74c95bb84f5e3e2ed8d218a76259_132025_200x150_fit_q90_h2_box_3.webp" width="160" height="150" alt="Nomad" title="Nomad" class="&#34; " loading="lazy"></a></p>
</figure>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-1_hu3af731e91707f43f4848927f9f158b51_144944_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Traefik"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-1_hu3af731e91707f43f4848927f9f158b51_144944_200x150_fit_q90_h2_box_3.webp" width="160" height="150" alt="Traefik" title="Traefik" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-2_huaf1df74fbd86c4da2a3168542bc294a4_157667_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Traefik"><img src="https://picodotdev.github.io/blog-bitix/2019/10/microservicios-con-spring-cloud-consul-nomad-y-traefik/images/traefik-2_huaf1df74fbd86c4da2a3168542bc294a4_157667_200x150_fit_q90_h2_box_3.webp" width="160" height="150" alt="Traefik" title="Traefik" class="&#34; " loading="lazy"></a></p>
<figcaption>Consolas de administración de Consul, Nomad y Traefik</figcaption>
</figure>
</div>
<p>El código del servicio, del cliente implementados con Spring y la salida del cliente son los siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.service</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@RestController</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultController</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">DefaultConfiguration</span> <span class="n">configuration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracing</span> <span class="n">tracing</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracer</span> <span class="n">tracer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Random</span> <span class="n">random</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Counter</span> <span class="n">counter</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">DefaultController</span><span class="o">(</span><span class="n">MeterRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">counter</span> <span class="o">=</span> <span class="n">Counter</span><span class="o">.</span><span class="na">builder</span><span class="o">(</span><span class="s">&#34;service.invocations&#34;</span><span class="o">).</span><span class="na">description</span><span class="o">(</span><span class="s">&#34;Total service invocations&#34;</span><span class="o">).</span><span class="na">register</span><span class="o">(</span><span class="n">registry</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&#34;/&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">home</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">counter</span><span class="o">.</span><span class="na">increment</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// Timeout simulation&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">//Thread.sleep(random.nextInt(4000));&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TraceContext</span><span class="o">.</span><span class="na">Extractor</span><span class="o">&lt;</span><span class="n">HttpServletRequest</span><span class="o">&gt;</span> <span class="n">extractor</span> <span class="o">=</span> <span class="n">tracing</span><span class="o">.</span><span class="na">propagation</span><span class="o">().</span><span class="na">extractor</span><span class="o">((</span><span class="n">HttpServletRequest</span> <span class="n">carrier</span><span class="o">,</span> <span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="k">return</span> <span class="n">carrier</span><span class="o">.</span><span class="na">getHeader</span><span class="o">(</span><span class="n">key</span><span class="o">);</span> <span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Span</span> <span class="n">span</span> <span class="o">=</span> <span class="n">tracer</span><span class="o">.</span><span class="na">nextSpan</span><span class="o">(</span><span class="n">extractor</span><span class="o">.</span><span class="na">extract</span><span class="o">(</span><span class="n">request</span><span class="o">));</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Service Span (traceId: %s, spanId: %s)%n&#34;</span><span class="o">,</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;Hello world (url: %s, remoteAddress_%s, localAddress: %s, traceId: %s, spanId: %s, key: %s)&#34;</span><span class="o">,</span> <span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">(),</span> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">request</span><span class="o">.</span><span class="na">getRemoteAddr</span><span class="o">(),</span> <span class="n">request</span><span class="o">.</span><span class="na">getLocalAddr</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">(),</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultController.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springcloud.client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">...</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nd">@Component</span>&#10;</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ProxyService</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">LoadBalancerClient</span> <span class="n">loadBalancer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracing</span> <span class="n">tracing</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Tracer</span> <span class="n">tracer</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">CircuitBreakerConfig</span> <span class="n">circuitBreakerConfiguration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TimeLimiterConfig</span> <span class="n">timeLimiterConfiguration</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">HttpClient</span> <span class="n">client</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">ProxyService</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">circuitBreakerConfiguration</span> <span class="o">=</span> <span class="n">CircuitBreakerConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">failureRateThreshold</span><span class="o">(</span><span class="mi">50</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">recordExceptions</span><span class="o">(</span><span class="n">IOException</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">TimeoutException</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">timeLimiterConfiguration</span> <span class="o">=</span> <span class="n">TimeLimiterConfig</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">timeoutDuration</span><span class="o">(</span><span class="n">Duration</span><span class="o">.</span><span class="na">ofMillis</span><span class="o">(</span><span class="mi">2500</span><span class="o">))</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">cancelRunningFuture</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">client</span> <span class="o">=</span> <span class="n">HttpClient</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">().</span><span class="na">version</span><span class="o">(</span><span class="n">HttpClient</span><span class="o">.</span><span class="na">Version</span><span class="o">.</span><span class="na">HTTP_2</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ServiceInstance</span> <span class="n">instance</span> <span class="o">=</span> <span class="n">loadBalancer</span><span class="o">.</span><span class="na">choose</span><span class="o">(</span><span class="s">&#34;traefik&#34;</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">URI</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getUri</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">resource</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s%s&#34;</span><span class="o">,</span> <span class="n">uri</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">replace</span><span class="o">(</span><span class="s">&#34;127.0.0.1&#34;</span><span class="o">,</span> <span class="s">&#34;traefik&#34;</span><span class="o">),</span> <span class="s">&#34;/service&#34;</span><span class="o">);</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">r</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span> <span class="o">=</span> <span class="n">HttpRequest</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">(</span><span class="k">new</span> <span class="n">URI</span><span class="o">(</span><span class="n">resource</span><span class="o">)).</span><span class="na">GET</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getFallback</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">final</span> <span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">request</span> <span class="o">=</span> <span class="n">r</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Span</span> <span class="n">span</span> <span class="o">=</span> <span class="n">tracer</span><span class="o">.</span><span class="na">newTrace</span><span class="o">().</span><span class="na">start</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TraceContext</span><span class="o">.</span><span class="na">Injector</span><span class="o">&lt;</span><span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span><span class="o">&gt;</span> <span class="n">injector</span> <span class="o">=</span> <span class="n">tracing</span><span class="o">.</span><span class="na">propagation</span><span class="o">().</span><span class="na">injector</span><span class="o">((</span><span class="n">HttpRequest</span><span class="o">.</span><span class="na">Builder</span> <span class="n">carrier</span><span class="o">,</span> <span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">String</span> <span class="n">value</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span> <span class="n">carrier</span><span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">value</span><span class="o">);</span> <span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">injector</span><span class="o">.</span><span class="na">inject</span><span class="o">(</span><span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">(),</span> <span class="n">request</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Client Span (traceId: %s, spanId: %s)%n&#34;</span><span class="o">,</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">traceIdString</span><span class="o">(),</span> <span class="n">span</span><span class="o">.</span><span class="na">context</span><span class="o">().</span><span class="na">spanIdString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CircuitBreaker</span> <span class="n">circuitBreaker</span> <span class="o">=</span> <span class="n">CircuitBreaker</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;resilience4jCircuitBreakerProxyService&#34;</span><span class="o">,</span> <span class="n">circuitBreakerConfiguration</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">TimeLimiter</span> <span class="n">timeLimiter</span> <span class="o">=</span> <span class="n">TimeLimiter</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">timeLimiterConfiguration</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Supplier</span><span class="o">&lt;</span><span class="n">CompletableFuture</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">get</span> <span class="o">=</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">CompletableFuture</span><span class="o">.</span><span class="na">supplyAsync</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">try</span> <span class="o">{</span> &#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpResponse</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">build</span><span class="o">(),</span> <span class="n">HttpResponse</span><span class="o">.</span><span class="na">BodyHandlers</span><span class="o">.</span><span class="na">ofString</span><span class="o">());</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getFallback</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getLimiter</span> <span class="o">=</span> <span class="n">TimeLimiter</span><span class="o">.</span><span class="na">decorateFutureSupplier</span><span class="o">(</span><span class="n">timeLimiter</span><span class="o">,</span> <span class="n">get</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Callable</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">getCircuitBreaker</span> <span class="o">=</span> <span class="n">CircuitBreaker</span><span class="o">.</span><span class="na">decorateCallable</span><span class="o">(</span><span class="n">circuitBreaker</span><span class="o">,</span> <span class="n">getLimiter</span><span class="o">);</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Try</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">getCircuitBreaker</span><span class="o">::</span><span class="n">call</span><span class="o">).</span><span class="na">recover</span><span class="o">((</span><span class="n">throwable</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">getFallback</span><span class="o">()).</span><span class="na">get</span><span class="o">();</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="nf">getFallback</span><span class="o">()</span> <span class="o">{</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Fallback&#34;</span><span class="o">;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;</span></span><span class="line"><span class="cl"><span class="o">}</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ProxyService.java</span>
    </div>
</div>
<p>Como hay 2 instancias del servicio y Traefik realiza balanceo de carga utilizando el algoritmo <em>round robbin</em> se observa en la salida con las respuestas que la dirección IP que ha atendido la petición es alternativamente una de las dos instancias del servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">...&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 63afa4d0cd4f466c, spanId: 4719dfcc16b6104e, key: value)&#10;</span></span><span class="line"><span class="cl">Client Span (traceId: 57eeaa436aa09238, spanId: 57eeaa436aa09238)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: 57eeaa436aa09238, spanId: 26dc213be2d933ac, key: value)&#10;</span></span><span class="line"><span class="cl">Client Span (traceId: 23c748bf222052a6, spanId: 23c748bf222052a6)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 23c748bf222052a6, spanId: 0404d949c6e04c18, key: value)&#10;</span></span><span class="line"><span class="cl">Client Span (traceId: c45d66a4ec9cf14c, spanId: c45d66a4ec9cf14c)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: c45d66a4ec9cf14c, spanId: e7f6ccf2efb8234b, key: value)&#10;</span></span><span class="line"><span class="cl">Client Span (traceId: 2fdb3b71a682d2e6, spanId: 2fdb3b71a682d2e6)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.4, traceId: 2fdb3b71a682d2e6, spanId: 24ac2a8d2bfb1e6e, key: value)&#10;</span></span><span class="line"><span class="cl">Client Span (traceId: a33b010e02709c6a, spanId: a33b010e02709c6a)&#10;</span></span><span class="line"><span class="cl">Service response: Hello world (url: http://172.30.0.3/, remoteAddress_172.30.0.3, localAddress: 172.30.0.5, traceId: a33b010e02709c6a, spanId: 0abe6074fc277af6, key: value)&#10;</span></span><span class="line"><span class="cl">...</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En un momento posterior si surge la necesidad de querer desplegar una nueva versión del microservicio basta con generar de nuevo el artefacto del microservicio, cambiando la versión en el archivo <em>build.gradle</em>. El despliegue de la nueva versión se realizan mediante la estrategia <em>canary</em>, manteniendo las instancias con la versión anterior del servicio y añadiendo una nueva con la nueva versión. Si se descubre algún error en la instancia <em>canary</em> se puede revertir el estado a la versión anterior, que consiste en detener la instancia <em>canary</em>. Una vez se comprueba que la instancia con la nueva versión funciona correctamente analizando sus trazas y métricas se envía la order a Nomad de promocionar las instancias de forma progresiva con la versión antigua a la nueva versión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ nomad job run nomad/service.nomad&#10;</span></span><span class="line"><span class="cl">$ nomad job promote service&#10;</span></span><span class="line"><span class="cl">$ nomad job revert service <span class="m">0</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nomad-job-promote.sh</span>
    </div>
</div>
<p>El servicio exporta métricas en formato para Prometheus que con Grafana. Según se realizan peticiones al servicio el valor de métrica de contador de llamadas al servicio aumenta de forma progresiva.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ curl http://127.0.0.1:8093/service/actuator/prometheus <span class="p">|</span> grep <span class="s2">&#34;service.invocations&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># HELP service_invocations_total Total service invocations</span>&#10;</span></span><span class="line"><span class="cl"><span class="c1"># TYPE service_invocations_total counter</span>&#10;</span></span><span class="line"><span class="cl">service_invocations_total 20.0&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>service-prometheus.sh</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringCloudConsulNomadTraefik">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./run.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/</id>
        <title>Guía de inicio del gestor de terminales y sesiones tmux</title>
        <updated>2019-10-04T18:00:00+02:00</updated>
        <published>2019-10-04T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las personas que usan de forma intensiva la terminal seguramente usando un multiplexador de terminales como tmux su trabajo es facilitado. Tmux permite dividir una terminal en paneles, ventanas independiente y sesiones. Usando sus múltiples combinaciones de teclas se divide una terminal o una ventana de forma horizontal y vertical en paneles del tamaño que se desee pudiendo de esta forma visualizar al mismo tiempo varias terminales ubicadas en cada panel. También se puede crear una configuración para iniciar tmux con la misma disposición de paneles, ventanas y sesiones.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU" class="" loading="false&#34;"></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux" class="" loading="false&#34;"></p>
</div>
<p>Las terminales gráficas como <a href="https://www.gnome.org/">GNOME</a> Terminal y <a href="https://www.kde.org/">KDE</a> Konsole soportan pestañas e incluso desde un entorno gráfico en GNU/Linux están disponibles según la distribución varias terminales de texto accesibles con la combinación de teclas <kbd>Ctrl+Alt+F3</kbd> y <kbd>Ctrl+Alt+F4</kbd>, con <kbd>Ctrl+Alt+F2</kbd> se puede retornar a la interfaz gráfica. Sin embargo, ninguna de estas opciones permite dividir la misma terminal en varias ventanas o paneles para realizar operaciones y ver los resultados al mismo tiempo. Por otro lado cuando realizamos una sesión SSH y esta finaliza o termina abruptamente por un fallo en la conexión los procesos que se hayan iniciado desde ella son terminados lo que es especialmente grave si se está realizando una operación importante que puede ocasionar problemas.</p>
<p><a href="https://github.com/tmux/tmux/wiki">Tmux</a> es un multiplexador de terminales con soporte para iniciar sesiones. Con tmux en una misma terminal o sesión SSH es posible dividirla en varios paneles y ventanas. También permite iniciar sesiones y salir de ellas sin que los procesos que están corriendo sean terminados lo que permite iniciar una sesión por ejemplo en el trabajo, dejarla suspendida y luego continuarla desde otro equipo, ubicación o ser iniciada por una persona y continuada por otra.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/images/tmux_hu77ea831290e4496781697c4e09451f28_32101_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Sesión de tmux en la terminal de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2019/10/guia-de-inicio-del-gestor-de-terminales-y-sesiones-tmux/images/tmux_hu77ea831290e4496781697c4e09451f28_32101_300x200_fit_q90_h2_box_3.webp" width="300" height="166" alt="Sesión de tmux en la terminal de GNOME" title="Sesión de tmux en la terminal de GNOME" class="&#34; " loading="lazy"></a></p>
<figcaption>Sesión de tmux en la terminal de GNOME</figcaption>
</figure>
</div>
<p>Tmux al ser un programa de la terminal todas sus opciones se realizan con el teclado, y no son pocas <a href="https://tmuxcheatsheet.com/">las combinaciones de teclas de su <em>cheatsheet</em> o chuleta</a>. Algunas opciones básicas necesario conocer con son:</p>
<ul>
<li>Dividir una terminal en paneles verticales y horizontales, <kbd>Ctrl-b &ldquo;</kbd>, <kbd>Ctrl-b %</kbd>.</li>
<li>Cambiar entre paneles, <kbd>Ctrl-b q 0..9</kbd>.</li>
<li>Cambiar tamaño de un panel, <kbd>Ctrl-b Up</kbd>, <kbd>Ctrl-b Down</kbd>, <kbd>Ctrl-b Left</kbd>, <kbd>Ctrl-b Right</kbd>. Una panel se maximiza y minimiza con <kbd>Ctrl-b z</kbd>.</li>
<li>Cerrar un panel, <kbd>Ctrl-b x</kbd>.</li>
<li>Cerrar una sesión <kbd>Ctrl-b :, kill-session</kbd>.</li>
<li>Crear, moverse a otra ventana y cerrar una ventana, <kbd>Ctrl-b c</kbd>, <kbd>Ctrl-b 0..9</kbd>, <kbd>Ctrl-b ,</kbd>.</li>
<li>Hacer <em>scroll</em> en las ventanas, <kbd>Ctrl-b [</kbd>.</li>
</ul>
<p>Para facilitar un poco su uso y poder cambiar entre paneles y hacer <em>scroll</em> si se usa en un entorno gráfico se pueden habilitar las funciones del ratón. Basta editar el archivo de configuración <em>~/.tmux.conf</em> o introducir la opción con <kbd>Ctrl-b :</kbd>. En un entorno gráfico habilitar el soporte para el ratón cambia el comportamiento de copiar y pegar, para seleccionar texto hay que hacer uso de la tecla <kbd>Shift</kbd> a la vez que se selecciona el texto con el botón izquierdo del ratón.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">set-option -g mouse on&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tmux.conf</span>
    </div>
</div>
<p>Para automatizar la configuración inicial de tmux soporta un archivo para personalizarlo a través de un <em>script</em> con comandos. Así por ejemplo si siempre se desea una misma configuración de paneles y ventanas con la misma disposición es posible realizarlo con un <em>script</em> como el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash&#10;</span></span></span><span class="line"><span class="cl"><span class="cp"></span>tmux new-session -s <span class="s2">&#34;Session&#34;</span> -d&#10;</span></span><span class="line"><span class="cl">tmux set-option -g mouse on&#10;</span></span><span class="line"><span class="cl">tmux split-window -h&#10;</span></span><span class="line"><span class="cl">tmux split-window -v&#10;</span></span><span class="line"><span class="cl">tmux attach-session -t <span class="s2">&#34;Session&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>tmux.sh</span>
    </div>
</div>
<p>En el <a href="http://man.openbsd.org/OpenBSD-current/man1/tmux.1">manpage de tmux</a> y los enlaces de referencia hay guías con una lista más completa que las operaciones básicas que incluyo en este artículo.</p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/gmjyMxezIWU" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://robots.thoughtbot.com/a-tmux-crash-course">A tmux Crash Course</a></li>
<li><a href="http://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/">A Quick and Easy Guide to tmux</a></li>
<li><a href="https://www.linode.com/docs/networking/ssh/persistent-terminal-sessions-with-tmux/">How to Use tmux the Terminal Multiplexer</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Tmux">Archlinux Wiki tmux</a></li>
<li><a href="https://leanpub.com/the-tao-of-tmux/read">The Tao of tmux</a></li>
<li><a href="http://www.sromero.org/wiki/linux/aplicaciones/tmux">tmux: Multiplexador de terminal</a></li>
<li><a href="https://askubuntu.com/questions/830484/how-to-start-tmux-with-several-panes-open-at-the-same-time">How to start tmux with several panes open at the same time?</a></li>
<li><a href="https://superuser.com/questions/209437/how-do-i-scroll-in-tmux#209608">How do I scroll in tmux?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/</id>
        <title>Generar credenciales de conexión a base de datos bajo demanda con Vault</title>
        <updated>2019-08-15T09:00:00+02:00</updated>
        <published>2019-08-15T09:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Una de las funcionalidades proporcionada por Vault es generar credenciales dinámicas para la conexión a bases de datos. Generar las credenciales de forma dinámica proporciona varios beneficios: no hay unas credenciales que usen las aplicaciones que tengan un tiempo de vida indefinido, las aplicaciones no necesitan guardar en su configuración las credenciales, las credenciales se rotan de forma automática y los permisos para obtenerlas se pueden revocar de forma centralizada con Vault para cuales quiera bases de datos que se utilicen. Soporta las bases de datos más populares entre ellas PostgreSQL.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault" class="" loading="false&#34;"></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="206" alt="PostgreSQL" title="PostgreSQL" class="" loading="false&#34;"></p>
</div>
<p>Las base de datos para proteger los datos realizan autenticación del usuario que se conecta. Normalmente utilizando un usuario y contraseña, una vez autenticado el usuario mediante permisos se realiza la autorización de las operaciones que puede realizar, a que bases de datos se puede conectar, que tablas puede acceder y que operaciones puede realizar.</p>
<p>Este modelo de autenticación tiene algunos inconvenientes. Uno de los inconvenientes es que los usuarios y contraseñas para mayor seguridad han de cambiarse con cierta frecuencia para evitar que si las credenciales quedan comprometidas no puedan utilizarse indefinidamente. Otro problema es que cada aplicación ha de conocer las credenciales de la base de datos, esto hace que haya múltiples posibilidades de que las credenciales queden comprometidas. Por otro lado el uso de las credenciales no queda registrado de forma centralizada que es necesario para saber ante una brecha de seguridad qué datos han sido accedidos y por quien.</p>
<p>La herramienta <a href="https://www.vaultproject.io/">Vault</a> de <a href="https://www.hashicorp.com/">HashiCorp</a> da solución a estos problemas generando credenciales de acceso a las bases de datos de forma dinámica, bajo demanda y con un tiempo de concesión limitado. Las credenciales tiene un tiempo de vida limitado si no se renueva su concesión y la generación de las credenciales queda registrado. La forma que tiene Vault de generar credenciales de forma dinámica en una base de datos relacional como <a href="https://www.postgresql.org/">PostgreSQL</a> es conectarse a la base de datos con un usuario con permisos para generarlas y ejecutar una sentencia SQL que crea las credenciales.</p>
<p>Para permitir a Vault generar credenciales de conexión hay que activar el <em>backend</em> de bases de datos, configurarlo con la sentencia SQL que se utilizará para generar las credenciales y crear el rol de Vault que genera las credenciales cuando se le solicite. En este ejemplo se muestra para la base de datos PostgreSQL pero Vault también soporta otras bases de datos como <a href="https://www.mysql.com/">MySQL</a>. En el ejemplo la base de datos PostgreSQL se ejecuta en un contenedor de <a href="https://www.docker.com/">Docker</a> en el que se asignan el usuario y contraseña del usuario <em>root</em> que utiliza Vault para generar las credenciales de forma dinámica.</p>
<p>Con las siguientes comandos se inicia <a href="https://www.consul.io/">Consul</a> y Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ consul agent -dev&#10;</span></span><span class="line"><span class="cl"><span class="o">==</span>&gt; Starting Consul agent...&#10;</span></span><span class="line"><span class="cl"><span class="o">==</span>&gt; Consul agent running!&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Version: <span class="s1">&#39;v1.5.0&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Node ID: <span class="s1">&#39;38d4f541-0958-6d7d-d49e-a31a15987286&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Node name: <span class="s1">&#39;archlinux&#39;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Datacenter: <span class="s1">&#39;dc1&#39;</span> <span class="o">(</span>Segment: <span class="s1">&#39;&lt;all&gt;&#39;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Server: <span class="nb">true</span> <span class="o">(</span>Bootstrap: <span class="nb">false</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;   Client Addr: <span class="o">[</span>127.0.0.1<span class="o">]</span> <span class="o">(</span>HTTP: 8500, HTTPS: -1, gRPC: 8502, DNS: 8600<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  Cluster Addr: 127.0.0.1 <span class="o">(</span>LAN: 8301, WAN: 8302<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vault server -dev -config vault.hcl&#10;</span></span><span class="line"><span class="cl"><span class="o">==</span>&gt; Vault server configuration:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: consul <span class="o">(</span>HA available<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;</span></span><span class="line"><span class="cl">and starts unsealed with a single unseal key. The root token is already&#10;</span></span><span class="line"><span class="cl">authenticated to the CLI, so you can immediately begin using Vault.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">You may need to <span class="nb">set</span> the following environment variable:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;</span></span><span class="line"><span class="cl">seal/unseal the Vault or re-authenticate.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Unseal Key: <span class="nv">jeW10eak6TxJzH2qFnwk7bWk7HcpDXd3KQOobi1rZTQ</span><span class="o">=</span>&#10;</span></span><span class="line"><span class="cl">Root Token: s.0YRcRzojVcPG8LbbzyUd1MEA&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Development mode should NOT be used in production installations!</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="n">ui</span> <span class="o">=</span> <span class="kt">true</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="k">storage</span> <span class="s2">&#34;consul&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">  address</span> <span class="o">=</span> <span class="s2">&#34;127.0.0.1:8500&#34;</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">  path</span>  <span class="o">=</span> <span class="s2">&#34;vault&#34;</span>&#10;</span></span><span class="line"><span class="cl">}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.hcl</span>
    </div>
</div>
<p>La base de datos se inicia en un contenedor de Docker, se crea una base de datos y una tabla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run -it -p <span class="s2">&#34;5432:5432&#34;</span> -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>postgres -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>postgres postgres:alpine&#10;</span></span><span class="line"><span class="cl">$ docker ps &#10;</span></span><span class="line"><span class="cl">CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NAMES&#10;</span></span><span class="line"><span class="cl">2792b13c36c1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">3</span> minutes ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">3</span> minutes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:5432-&gt;5432/tcp   distracted_keldysh&#10;</span></span><span class="line"><span class="cl">$ docker <span class="nb">exec</span> -it 2792b13c36c1 bash&#10;</span></span><span class="line"><span class="cl">bash-5.0# psql -U postgres&#10;</span></span><span class="line"><span class="cl">psql <span class="o">(</span>11.4<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1"># CREATE DATABASE app;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">postgres</span><span class="o">=</span><span class="c1"># \connect app</span>&#10;</span></span><span class="line"><span class="cl">You are now connected to database <span class="s2">&#34;app&#34;</span> as user <span class="s2">&#34;postgres&#34;</span>.&#10;</span></span><span class="line"><span class="cl"><span class="nv">app</span><span class="o">=</span><span class="c1"># CREATE TABLE product (</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  bigint PRIMARY KEY,&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;   varchar<span class="o">(</span>256<span class="o">)</span> NOT NULL&#10;</span></span><span class="line"><span class="cl"><span class="o">)</span><span class="p">;</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">app</span><span class="o">=</span><span class="c1"># \dt</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  List of relations&#10;</span></span><span class="line"><span class="cl"> Schema <span class="p">|</span>  Name   <span class="p">|</span> Type  <span class="p">|</span>  Owner   &#10;</span></span><span class="line"><span class="cl">--------+---------+-------+----------&#10;</span></span><span class="line"><span class="cl"> public <span class="p">|</span> product <span class="p">|</span> table <span class="p">|</span> postgres&#10;</span></span><span class="line"><span class="cl"><span class="o">(</span><span class="m">1</span> row<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">$ docker inspect -f <span class="s1">&#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39;</span> 2792b13c36c1&#10;</span></span><span class="line"><span class="cl">172.17.0.2</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql.sh</span>
    </div>
</div>
<p>En Vault hay que crear la configuración para conectarse a la base de datos y un rol que contiene la configuración para generar las credenciales y permitir obtenerlas, básicamente es un sentencia SQL con el nombre del usuario y contraseña, los permisos que se le asignan y el tiempo de concesión.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span>http://127.0.0.1:8200&#10;</span></span><span class="line"><span class="cl">$ vault login s.0YRcRzojVcPG8LbbzyUd1MEA&#10;</span></span><span class="line"><span class="cl">$ vault secrets <span class="nb">enable</span> database</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-database.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vault write database/config/app <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>   <span class="nv">plugin_name</span><span class="o">=</span>postgresql-database-plugin <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>   <span class="nv">allowed_roles</span><span class="o">=</span><span class="s2">&#34;app&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>   <span class="nv">connection_url</span><span class="o">=</span><span class="s2">&#34;postgresql://{{username}}:{{password}}@localhost:5432/?sslmode=disable&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>   <span class="nv">username</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>   <span class="nv">password</span><span class="o">=</span><span class="s2">&#34;postgres&#34;</span>&#10;</span></span><span class="line"><span class="cl">$ vault write database/roles/app <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">db_name</span><span class="o">=</span>app <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">creation_statements</span><span class="o">=</span><span class="s2">&#34;CREATE ROLE \&#34;{{name}}\&#34; WITH LOGIN PASSWORD &#39;{{password}}&#39; VALID UNTIL &#39;{{expiration}}&#39;; GRANT SELECT ON ALL TABLES IN SCHEMA public TO \&#34;{{name}}\&#34;;&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">default_ttl</span><span class="o">=</span><span class="s2">&#34;1h&#34;</span> <span class="se">\&#10;</span></span></span><span class="line"><span class="cl"><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="nv">max_ttl</span><span class="o">=</span><span class="s2">&#34;24h&#34;</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-role.sh</span>
    </div>
</div>
<p>Las credenciales se generan en el momento de leer una propiedad de Vault.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vault <span class="nb">read</span> database/roles/app&#10;</span></span><span class="line"><span class="cl">Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;</span></span><span class="line"><span class="cl">---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;</span></span><span class="line"><span class="cl">creation_statements&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[</span>CREATE ROLE <span class="s2">&#34;{{name}}&#34;</span> WITH LOGIN PASSWORD <span class="s1">&#39;{{password}}&#39;</span> VALID UNTIL <span class="s1">&#39;{{expiration}}&#39;</span><span class="p">;</span> GRANT SELECT ON ALL TABLES IN SCHEMA public TO <span class="s2">&#34;{{name}}&#34;</span><span class="p">;</span><span class="o">]</span>&#10;</span></span><span class="line"><span class="cl">db_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  app&#10;</span></span><span class="line"><span class="cl">default_ttl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  1h&#10;</span></span><span class="line"><span class="cl">max_ttl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  24h&#10;</span></span><span class="line"><span class="cl">renew_statements&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="o">[]</span>&#10;</span></span><span class="line"><span class="cl">revocation_statements&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">[]</span>&#10;</span></span><span class="line"><span class="cl">rollback_statements&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">[]</span>&#10;</span></span><span class="line"><span class="cl">$ vault <span class="nb">read</span> database/creds/app&#10;</span></span><span class="line"><span class="cl">Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;</span></span><span class="line"><span class="cl">---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;</span></span><span class="line"><span class="cl">lease_id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   database/creds/app/rFFlNmpNoxezccTVh3WufZOT&#10;</span></span><span class="line"><span class="cl">lease_duration&nbsp;&nbsp;&nbsp;&nbsp; 1h&#10;</span></span><span class="line"><span class="cl">lease_renewable&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">true</span>&#10;</span></span><span class="line"><span class="cl">password&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   A1a-6hRTGNaShFIEGLvp&#10;</span></span><span class="line"><span class="cl">username&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault-credentials.sh</span>
    </div>
</div>
<p>En PostgreSQL la conexión desde la máquina local se permiten sin necesidad de credenciales, para simular realizar la conexión desde otra máquina hay que iniciar otro contenedor. En la conexión se utilizan las credenciales que ha proporcionado Vault. Dado que se realiza una operación de red hay que desactivar el <em>firewall</em> del sistema o permitir la conexión al puerto de la base de datos que en PostgreSQL es el 5432 si fuera necesario. Listando los usuarios de la base de datos con el comando <em>\du</em> se muestra el creado por Vault y si tiempo de validez.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run -it postgres:alpine bash&#10;</span></span><span class="line"><span class="cl">bash-5.0# <span class="nv">PGPASSWORD</span><span class="o">=</span>A1a-6hRTGNaShFIEGLvp psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app&#10;</span></span><span class="line"><span class="cl">psql <span class="o">(</span>11.4<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">Type <span class="s2">&#34;help&#34;</span> <span class="k">for</span> help.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="nv">app</span><span class="o">=</span>&gt; <span class="se">\d</span>t&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  List of relations&#10;</span></span><span class="line"><span class="cl"> Schema <span class="p">|</span>  Name   <span class="p">|</span> Type  <span class="p">|</span>  Owner   &#10;</span></span><span class="line"><span class="cl">--------+---------+-------+----------&#10;</span></span><span class="line"><span class="cl"> public <span class="p">|</span> product <span class="p">|</span> table <span class="p">|</span> postgres&#10;</span></span><span class="line"><span class="cl"><span class="o">(</span><span class="m">1</span> row<span class="o">)</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">app</span><span class="o">=</span><span class="c1"># \du</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List of roles&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Role name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attributes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span> Member of &#10;</span></span><span class="line"><span class="cl">--------------------------------------------+------------------------------------------------------------+-----------&#10;</span></span><span class="line"><span class="cl"> postgres&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <span class="p">|</span> Superuser, Create role, Create DB, Replication, Bypass RLS <span class="p">|</span> <span class="o">{}</span>&#10;</span></span><span class="line"><span class="cl"> v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 <span class="p">|</span> Password valid <span class="k">until</span> 2019-08-15 09:22:55+00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span> <span class="o">{}</span>&#10;</span></span><span class="line"><span class="cl"><span class="nv">app</span><span class="o">=</span>&gt; quit</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-connect.sh</span>
    </div>
</div>
<p>Si el usuario y contraseña no es correcto no se permite la conexión a la base de datos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">bash-5.0# <span class="nv">PGPASSWORD</span><span class="o">=</span>tampered psql -U v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370 -h 172.17.0.2 -d app&#10;</span></span><span class="line"><span class="cl">psql: FATAL:  password authentication failed <span class="k">for</span> user <span class="s2">&#34;v-root-app-ydbbHqVq1gYQqsUxMuIc-1565857370&#34;</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>postgresql-connect-fail.sh</span>
    </div>
</div>
<p>En las aplicaciones Java que utilizan <a href="https://spring.io/">Spring</a> el proyecto <a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a> proporciona las utilidades para simplificar en gran medida la obtención de las credenciales a la base de datos utilizando Vault.</p>
<p>Esto permite que únicamente Vault conozca la cuenta <em>root</em> de la base de datos o una con suficientes permisos para crear credenciales, las aplicaciones no almacenan en su configuración las credenciales para conectarse la base de datos solo las de Vault que le permiten obtener unas credenciales para la base de datos con un tiempo de vida limitado y que pueden revocarse desde Vault en caso de un problema de seguridad para cuales quiera bases de datos que se utilicen.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/05/introduccion-a-la-base-de-datos-relacional-postgresql/">Introducción a la base de datos relacional PostgreSQL</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/</id>
        <title>Administrar secretos y proteger datos sensibles con Vault</title>
        <updated>2019-07-27T23:00:00+02:00</updated>
        <published>2019-07-27T18:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Herramientas de aprovisionamiento como Chef, Puppet y Ansible solucionan el problema de la seguridad de los secretos de forma similar, utilizando una única clave de cifrado. Los datos cifrados están siempre a un secreto (contraseña, clave, &hellip;) de ser descifrados y generalmente no está bien protegidos dado que en un entorno elástico cada servidor necesita disponer de este secreto para descifrar los datos. Adicionalmente el acceso a los datos cifrados no está registrado de modo que si hay una intrusión no está claro que dato ha sido accedido y por quien. Utilizar variables de entorno para proporcionar secretos tampoco es seguro, y en entornos Docker suele usarse.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vault.svg" width="200" height="286" alt="HashiCorp Vault" title="HashiCorp Vault" class="" loading="false&#34;"></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp" class="" loading="false&#34;"></p>
</div>
<p>La seguridad es un aspecto muy importante de los sistemas informáticos, no darle la consideración necesaria puede dar lugar a caídas de servicio y robo de datos potencialmente ocasionando importantes pérdidas de dinero, sanciones y pérdida de confianza de los clientes y proveedores de una organización.</p>
<p>La seguridad se mantiene mediante mecanismos de autenticación identifican al solicitante solicitante, de autorización permitiendo realiza únicamente las acciones para las que se tienen permisos y mediante firma y cifrado para impedir la modificación de los datos y el acceso a la información sin las credenciales y autorización requerida.</p>
<p>La infraestructura informática de los sistemas actuales es cada vez más compleja por el número y tipo de las distintas de piezas que emplean como bases de datos, sistemas de mensajes u otros servicios, también por el aspecto efímero en la tendencia actual de microservicios como por la utilización de entornos en la nube con una infraestructura no confiable al estar fuera del control de una organización y estar compartida con otras organizaciones.</p>
<p>No es seguro utilizar archivos sin cifrar aún utilizando los permisos del sistema de archivos dado que una intrusión en el sistema posibilita el acceso al secreto. Cifrarlos los archivos es el mismo caso de herramientas como <a href="https://www.getchef.com/">Chef</a>, <a href="https://puppet.com/">Puppet</a> y <a href="https://www.ansible.com/">Ansible</a>. Utilizar variables de entorno para proporcionar secretos tampoco es seguro ya que aunque los secretos no están en el sistema de archivos se pueden inspeccionar las variables de entorno de un proceso.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ env <span class="p">|</span> grep SECRET&#10;</span></span><span class="line"><span class="cl">$ docker inspect&#10;</span></span><span class="line"><span class="cl">$ sudo cat /proc/<span class="nv">$pid</span>/environ</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>commands.sh</span>
    </div>
</div>
<p>Por otra parte las contraseñas y claves han de rotarse regularmente para limitar en el tiempo el acceso ante el filtrado de las credenciales en un sistema o para denegar el acceso a una persona que en algún momento haya tenido credenciales de acceso como un empleado que ya no pertenece a la compañía.</p>
<h3 id="vault">Vault</h3>
<p><a href="https://www.vaultproject.io/">Vault</a> es una herramienta para acceder de forma segura a secretos. Un secreto es cualquier cosa a la que se quiera tener severamente controlado como claves de API, contraseñas y certificados. Vault proporciona una interfaz para cualquier secreto a la vez que mantiene un control de acceso y un <em>log</em> de acceso detallado.</p>
<ul>
<li><a href="https://www.vaultproject.io/docs/what-is-vault/index.html">Introduction to Vault</a></li>
<li><a href="https://www.vaultproject.io/docs/use-cases/index.html">Use Cases</a></li>
</ul>
<p>Las características principales de Vault se engloban en tres aspectos de la seguridad: cifrado, control de acceso y ciclo de vida.</p>
<ul>
<li>Almacenamiento seguro de secretos: se pueden almacenar secretos arbitrarios clave/valor. Los secretos son cifrados previamente a ser almacenados en el almacenamiento persistente de modo que obtener acceso al almacenamiento persistente no es suficiente para acceder a los secretos. Vault puede almacenar los secretos en disco, <a href="https://www.consul.io/">Consul</a> y más.</li>
<li>Secretos dinámicos: puede <a href="https://picodotdev.github.io/blog-bitix/2019/08/generar-credenciales-de-conexion-a-base-de-datos-bajo-demanda-con-vault/">generar secretos bajo demanda para bases de datos</a> o algunos sistemas como AWS. Por ejemplo, cuando una aplicación necesita acceso a una base de datos SQL solicita a Vault unas credenciales, Vault genera unas credenciales con los permisos adecuados. Después de crear estos secretos dinámicos también los revoca automáticamente una vez pasado su tiempo de concesión.</li>
<li>Cifrado de datos: puede <a href="https://picodotdev.github.io/blog-bitix/2021/02/cifrado-y-descifrado-como-servicio-con-vault/">cifrar y descifrar datos sin almacenarlos</a>. Esto permite definir parámetros de seguridad y los desarrolladores almacenar los datos cifrados en localizaciones como bases de datos sin tener que diseñar sus propios métodos de cifrado.</li>
<li>Concesión y renovación: todos los secretos en Vault tienen un tiempo de concesión asociado. Al finalizar la concesión Vault los revoca automáticamente, los clientes pueden solicitar renovar las concesiones mediante las API disponibles de Vault.</li>
<li>Revocación: integra la funcionalidad de revocación, no solo secretos individuales sino jerarquías de secretos. La revocación asiste en la rotación de las claves así como cerrar el sistema en caso de intrusión.</li>
</ul>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/VYfl-DpZ5wM" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/NxL2-XuZ3kc" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="conceptos">Conceptos</h3>
<p>Los motores de secretos son uno de los conceptos en el ámbito de Vault. Son componentes que permite almacenar, generar o cifrar datos. Algunos motores de secretos simplemente almacenan y leen datos, otros se conectan a otros servicios y generan credenciales dinámicamente bajo demanda. Otros motores de secretos proporcionan el cifrado como servicio, <em>tokens</em> de un solo uso, certificados y mucho más.</p>
<ul>
<li><a href="https://www.vaultproject.io/api/secret/index.html">Secrets Engines</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/kv/index.html">KV Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/databases/index.html">Databases Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/rabbitmq/index.html">RabbitMQ Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/pki/index.html">PKI Secrets Engine</a></li>
<li><a href="https://www.vaultproject.io/docs/secrets/ssh/index.html">SSH Secrets Engine</a></li>
</ul>
<p>Otro concepto es la <a href="https://www.vaultproject.io/docs/auth/index.html">autenticación</a>. Permiten realizar la autenticación y son responsables de asignar una identidad y un conjunto de <em>policies</em> a un usuario. Por ejemplo, para los desarrolladores el método de autenticación de GitHub es fácil de usar pero para servidores el método <em>AppRole</em> es el recomendado</p>
<p>Los secretos necesitan <a href="https://www.vaultproject.io/docs/configuration/storage/index.html">almacenamiento</a>. Algunos tipos de almacenamiento son mejores para la alta disponibilidad y otros facilitan la copia de seguridad y la restauración. Puede ser en memoria, sistema de archivos, una herramienta como Consul o varias bases de datos entre ellas bases de datos relacionales.</p>
<p>La <a href="https://www.vaultproject.io/docs/audit/index.html">auditoria</a> permite obtener una trazabilidad de las operaciones que se han realizado, dado que todas las operaciones se realizan mediante una API el <em>log</em> de auditoría es simplemente cada interacción autenticada con Vault, incluidas los errores. Puede ser un archivo o un <em>socket</em>.</p>
<p>Todo en Vault está basado en <em>paths</em>. Las <a href="https://www.vaultproject.io/docs/concepts/policies.html"><em>policies</em></a> permiten o deniegan el acceso a ciertos <em>paths</em>.  Poseen la siguiente sintaxis, donde las <em>capabilities</em> son las operaciones CRUD permitidas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="k">path</span> <span class="s2">&#34;secret/*&#34;</span> {&#10;</span></span><span class="line"><span class="cl"><span class="n">  capabilities</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;create&#34;, &#34;read&#34;, &#34;update&#34;, &#34;delete&#34;, &#34;list&#34;</span><span class="p">]</span>&#10;</span></span><span class="line"><span class="cl">}</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>policy.hcl</span>
    </div>
</div>
<h3 id="instalación-y-un-caso-de-uso">Instalación y un caso de uso</h3>
<p>La <a href="https://www.vaultproject.io/docs/install/index.html">instalación de Vault</a> es muy sencilla ya que es un único binario sin más dependencias. En una distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> estará en los repositorios oficiales. En <a href="https://www.archlinux.org/">Arch Linux</a> se instala con el comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S vault&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.sh</span>
    </div>
</div>
<p>En el siguiente ejemplo en modo desarrollo de uso de Vault se inicia, se realiza la autenticación con el <em>token</em> <em>root</em> de superusuario y se crea un secreto. Aquí solo se muestra el caso de uso de guardar y recuperar secretos, otros son generar credenciales para conectarse a una base de datos y proporcionar cifrado y descifrado como servicio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vault server -dev&#10;</span></span><span class="line"><span class="cl"><span class="o">==</span>&gt; Vault server configuration:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Api Address: http://127.0.0.1:8200&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cgo: disabled&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cluster Address: https://127.0.0.1:8201&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Listener 1: tcp <span class="o">(</span>addr: <span class="s2">&#34;127.0.0.1:8200&#34;</span>, cluster address: <span class="s2">&#34;127.0.0.1:8201&#34;</span>, max_request_duration: <span class="s2">&#34;1m30s&#34;</span>, max_request_size: <span class="s2">&#34;33554432&#34;</span>, tls: <span class="s2">&#34;disabled&#34;</span><span class="o">)</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Log Level: info&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Mlock: supported: true, enabled: <span class="nb">false</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Storage: inmem&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version: Vault v1.1.1&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Version Sha: a3dcd63451cf6da1d04928b601bbe9748d53842e&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory&#10;</span></span><span class="line"><span class="cl">and starts unsealed with a single unseal key. The root token is already&#10;</span></span><span class="line"><span class="cl">authenticated to the CLI, so you can immediately begin using Vault.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">You may need to <span class="nb">set</span> the following environment variable:&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">The unseal key and root token are displayed below in <span class="k">case</span> you want to&#10;</span></span><span class="line"><span class="cl">seal/unseal the Vault or re-authenticate.&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Unseal Key: <span class="nv">R6MKrMxcJtTTUuIjeQjwDxnv4sHbKtjmuRn0Fok98zk</span><span class="o">=</span>&#10;</span></span><span class="line"><span class="cl">Root Token: s.hQoeIivTHHgl1AtsoVz1UF1G&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Development mode should NOT be used in production installations!</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vault.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">export</span> <span class="nv">VAULT_ADDR</span><span class="o">=</span><span class="s1">&#39;http://127.0.0.1:8200&#39;</span>&#10;</span></span><span class="line"><span class="cl">$ vault kv put secret/key <span class="nv">key</span><span class="o">=</span>s3cr3t&#10;</span></span><span class="line"><span class="cl">Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;</span></span><span class="line"><span class="cl">---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;</span></span><span class="line"><span class="cl">created_time&nbsp;&nbsp;&nbsp;&nbsp; 2019-07-27T17:30:29.559274833Z&#10;</span></span><span class="line"><span class="cl">deletion_time&nbsp;&nbsp;&nbsp;&nbsp;n/a&#10;</span></span><span class="line"><span class="cl">destroyed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;</span></span><span class="line"><span class="cl">version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="m">1</span>&#10;</span></span><span class="line"><span class="cl">$ vault kv get secret/key&#10;</span></span><span class="line"><span class="cl"><span class="o">======</span> <span class="nv">Metadata</span> <span class="o">======</span>&#10;</span></span><span class="line"><span class="cl">Key&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Value&#10;</span></span><span class="line"><span class="cl">---&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  -----&#10;</span></span><span class="line"><span class="cl">created_time&nbsp;&nbsp;&nbsp;&nbsp; 2019-07-27T17:30:29.559274833Z&#10;</span></span><span class="line"><span class="cl">deletion_time&nbsp;&nbsp;&nbsp;&nbsp;n/a&#10;</span></span><span class="line"><span class="cl">destroyed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">false</span>&#10;</span></span><span class="line"><span class="cl">version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nv">1</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="o">===</span> <span class="nv">Data</span> <span class="o">===</span>&#10;</span></span><span class="line"><span class="cl">Key&nbsp;&nbsp;&nbsp;&nbsp;Value&#10;</span></span><span class="line"><span class="cl">---&nbsp;&nbsp;&nbsp;&nbsp;-----&#10;</span></span><span class="line"><span class="cl">key&nbsp;&nbsp;&nbsp;&nbsp;s3cr3t</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>secret.sh</span>
    </div>
</div>
<p>Vault al igual que otras de las herramientas de <a href="https://www.hashicorp.com/">HashiCorp</a> como Consul y <a href="https://www.nomadproject.io/">Nomad</a> posee una interfaz gráfica accesible mediante el navegador que permite realizar las mismas operaciones que a través de la API o desde la linea de comandos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Interfaz gráfica de Vault"><img src="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-1_hu835606e7b9de313fbe556011bb61b531_35945_300x200_fit_q90_h2_box_3.webp" width="300" height="188" alt="Interfaz gráfica de Vault" title="Interfaz gráfica de Vault" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_2560x1440_fit_q90_h2_box_3.webp" data-gallery=""><img src="https://picodotdev.github.io/blog-bitix/2019/07/administrar-secretos-y-proteger-datos-sensibles-con-vault/images/vault-ui-2_hu643c4f275edb6aabb6ede21353b42f5b_36609_300x200_fit_q90_h2_box_3.webp" width="300" height="188" class="&#34; " loading="lazy"></a></p>
<figcaption>Interfaz gráfica de Vault</figcaption>
</figure>
</div>
<p>Vault a igual que otras de las herramientas de HashiCorp tiene una muy buena documentación en formato de <a href="https://learn.hashicorp.com/vault">guía</a> y en formato de <a href="https://www.vaultproject.io/docs/">documentación</a>. En una aplicación Java el proyecto <a href="https://spring.io/">Spring</a> facilita su uso con <a href="https://projects.spring.io/spring-vault/">Spring Vault</a> y <a href="https://cloud.spring.io/spring-cloud-vault/">Spring Cloud Vault</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.baeldung.com/vault">An Intro to Vault</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/</id>
        <title>Comprobar la seguridad de un sitio web que use SSL/TLS</title>
        <updated>2019-06-23T12:00:00+02:00</updated>
        <published>2019-06-23T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Aunque un sitio web no trate datos sensibles como tarjetas de crédito o datos personales es muy recomendable que use el protocolo seguro HTTPS para proporcionar cifrado entre el servidor y el navegador del usuario para dotar de confidencialidad a las comunicaciones a la vez que evitar modificaciones por terceras personas de los datos transmitidos. Además, el buscador Google lo tiene en cuenta para el SEO o posicionamiento en su buscador.</p>
<p>Para usar HTTPS lo difícil era conseguir un certificado firmado por una autoridad de confianza que los navegadores tengan instalada, la obtención y renovación de un certificado tenía un coste. Desde hace un tiempo la autoridad <a href="https://letsencrypt.org/">Let&rsquo;s encrypt</a> emite certificados digitales gratuitamente que proporciona uno en pocos minutos y de forma automatizada incluida la renovación para usar un protocolo seguro. <a href="https://picodotdev.github.io/blog-bitix/2017/08/instalar-y-renovar-un-certificado-de-lets-encrypt-en-nginx/">Usar un certificado de Let&rsquo;s encrypt en el servidor web nginx</a> no es complicado.</p>
<p>Sin embargo, usar HTTPS simplemente no es suficiente y ha de configurarse el servidor web para que utilice algoritmos de cifrado fuertes y que no tengan problemas seguridad conocidos o hoy estén ya considerados débiles. Para analizar el nivel de seguridad proporcionado en las conexiones HTTPS de un servidor web se puede utilizar la herramienta <a href="https://www.ssllabs.com/">Qualys SSL Labs</a>. Por ejemplo, analizando la seguridad del protocolo HTTPS ofrecido por <a href="https://pages.github.com/">GitHub Pages</a> basta con introducir el dominio a analizar.</p>
<p>El informe que proporciona incluye información sobre el certificado del servidor entre ella su tiempo de validez y fecha de expiración, y si es de confianza para los navegadores y plataformas como Mozilla, Apple, Android, Java o Windows. Los datos de configuración como protocolos soportados, <em>cipher suites</em> y una simulación de <em>handshake</em> con una gran variedad de versiones de navegadores en diferentes plataformas y versiones incluyendo dispositivos móviles y de escritorio que permite conocer si algún dispositivo pudiera tener algún problema con la configuración de TLS en la conexión, también otros detalle del protocolo.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/images/ssllabs_hu45897026cba3d1771fd184de0c40861a_124032_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Informe de seguridad TLS"><img src="https://picodotdev.github.io/blog-bitix/2019/06/comprobar-la-seguridad-de-un-sitio-web-que-use-ssl-tls/images/ssllabs_hu45897026cba3d1771fd184de0c40861a_124032_650x450_fit_q90_h2_box_3.webp" width="373" height="450" alt="Informe de seguridad TLS" title="Informe de seguridad TLS" class="&#34; " loading="lazy"></a></p>
<figcaption>Informe de seguridad TLS</figcaption>
</figure>
</div>
<p>La herramienta proporciona una nota entre A y F siendo la A la mejor calificación posible. Como se observa en la captura para GitHub Pages la herramienta proporciona una calificación de A.</p>
<p>Hay múltiples combinaciones de algoritmos de cifrado o <em>cipher suites</em> usados en una conexión SSL/TLS. La primera parte de los siguientes se refieren a TLS, está el tamaño de la clave y el modo y el algoritmo de autenticación del mensaje. Algunas recomendaciones de uso es usar tamaños de clave de más de 128 bits, evitar usar RC4, DES y 3DES, preferir ECDHE y DHE ya que ofrecen <em>forward secrecy</em> que protege las comunicaciones pasadas aún habiéndose comprometida la clave privada del servidor.</p>
<ul>
<li>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384</li>
<li>TLS_DHE_RSA_WITH_AES_256_CBC_SHA256</li>
<li>TLS_DHE_DSS_WITH_AES_256_CBC_SHA256</li>
<li>TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDH_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_DHE_RSA_WITH_AES_256_CBC_SHA</li>
<li>TLS_DHE_DSS_WITH_AES_256_CBC_SHA</li>
<li>TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</li>
</ul>
<p>Y algunas propiedades de los servidores web <a href="https://httpd.apache.org/">Apache HTTP</a> y <a href="https://nginx.org/">nginx</a> que afectan a los algoritmos de cifrado soportados son las siguientes. Algunos navegadores antiguos puede que no soporten los últimos algoritmos de cifrado por lo que hay que permitir en el servidor web unos que sean considerados como seguros pero que también soporten los navegadores de los usuarios del sitio web.</p>
<ul>
<li><a href="https://httpd.apache.org/docs/current/mod/mod_ssl.html">Apache Module mod_ssl</a></li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html">Nginx Module ngx_http_ssl_module</a></li>
</ul>
<p>Uan vez configurada la seguridad con TLS/SSL es recomendable <a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/">redirigir el tráfico del protocolo HTTP no seguro al protocolo HTTPS seguro</a>.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/06/pruebas-de-carga-y-rendimiento-de-un-servicio-web-con-apache-bench/</id>
        <title>Pruebas de carga y rendimiento de un servicio web con Apache Bench</title>
        <updated>2019-06-14T17:00:00+02:00</updated>
        <published>2019-06-14T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/06/pruebas-de-carga-y-rendimiento-de-un-servicio-web-con-apache-bench/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En algunos que un servicio devuelva los datos esperados no es suficiente, otros requisitos no funcionales o de términos de servicio son que sus tiempos de respuesta sean menores al especificado en sus requisitos, que sea capaz de soportar cierto número de peticiones concurrentes o de atender un número de peticiones por minuto. Para asegurar que el servicio es capaz de cumplir estos requisitos funcionales hay que utilizar herramientas que permitan evaluar su desempeño, una de ellas muy fácil de utilizar y que proporciona valiosa información es Apache Bench.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache.svg" width="200" height="353" alt="Apache" title="Apache" class="" loading="false&#34;"></p>
</div>
<p>Para hacer pruebas de carga o medir el rendimiento de cualquier servicio que funcione mediante el protocolo HTTP hay multitud de herramientas. Una de las más sencillas de utilizar y con un informe con información interesante es <a href="https://httpd.apache.org/docs/current/programs/ab.html">Apache Bench</a> o simplemente <em>ab</em>. Este comando se puede utilizar con simplemente tres parámetros el <em>endpoint</em> a probar, el número de peticiones en total a realizar (<em>-n</em>) y cuantas peticiones concurrentes al mismo tiempo (<em>-c</em>). Otos parámetros son los datos POST a enviar, cabeceras (<em>-H</em>) y <em>cookies</em> (<em>-C</em>) de las peticiones, tiempos de <em>timeout</em> (<em>-s</em>) o certificado de cliente (<em>-E</em>) entre algunos otros. En vez limitar las pruebas a un número de peticiones las pruebas se pueden limitar a un tiempo determinado por ejemplo 60 segundos (<em>-t</em>).</p>
<p>Es una herramienta que se utiliza para medir el rendimiento de el servidor Apache pero utilizable para cualquier otro servicio por ejemplo una web o una API REST o <a href="https://graphql.org/">GraphQL</a>. Está disponible por supuesto para <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> pero también para <a href="https://www.apple.com/macos/">macOS</a> y para <a href="https://www.microsoft.com/es-es/windows/">Windows</a>.</p>
<p>Si quisiese medir el rendimiento en mi blog alojado en <a href="https://pages.github.com/">GitHub Pages</a> podría hacerlo lanzando 1000 peticiones para que sea una muestra suficientemente amplia con 20 usuarios de forma concurrente que son los que en los momentos de más tráfico tiene mi blog. Mi conexión de internet es un ADSL que no llega a 1 MB/s de subida por lo que la conexión en cierta medida limite el test.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ab -n <span class="m">1000</span> -c <span class="m">20</span> https://picodotdev.github.io/blog-bitix/&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ab.sh</span>
    </div>
</div>
<p>El informe de resultado que ofrece <em>ab</em> al finalizar la prueba incluye el tiempo dedicado en la conexión, en el procesado, esperando y en total con los valores para cada uno de ellos con mínimo y máximo, de media y la mediana. El tiempo total empleado por la prueba, el protocolo SSL/TLS usado, los bytes devueltos en la petición, el número de peticiones servidas por segundo, el tiempo de media empleado de media por cada petición y de media teniendo en cuenta la concurrencia, la tasa de transferencia en la respuesta y finalmente el tiempo de respuesta según percentil que van que desde el 50 al 100, es decir, que el 50% de las peticiones se han respondido en el tiempo en milisegundos indicado. Si las hubiera también muestra las peticiones fallidas y las que han devuelto un código de respuesta distinto de 200.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">This is ApacheBench, Version 2.3 &lt;$Revision: 1843412 $&gt;&#10;</span></span><span class="line"><span class="cl">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/&#10;</span></span><span class="line"><span class="cl">Licensed to The Apache Software Foundation, http://www.apache.org/&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Benchmarking picodotdev.github.io (be patient)&#10;</span></span><span class="line"><span class="cl">Completed 100 requests&#10;</span></span><span class="line"><span class="cl">Completed 200 requests&#10;</span></span><span class="line"><span class="cl">Completed 300 requests&#10;</span></span><span class="line"><span class="cl">Completed 400 requests&#10;</span></span><span class="line"><span class="cl">Completed 500 requests&#10;</span></span><span class="line"><span class="cl">Completed 600 requests&#10;</span></span><span class="line"><span class="cl">Completed 700 requests&#10;</span></span><span class="line"><span class="cl">Completed 800 requests&#10;</span></span><span class="line"><span class="cl">Completed 900 requests&#10;</span></span><span class="line"><span class="cl">Completed 1000 requests&#10;</span></span><span class="line"><span class="cl">Finished 1000 requests&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Server Software:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GitHub.com&#10;</span></span><span class="line"><span class="cl">Server Hostname:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picodotdev.github.io&#10;</span></span><span class="line"><span class="cl">Server Port:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;443&#10;</span></span><span class="line"><span class="cl">SSL/TLS Protocol:&nbsp;&nbsp;&nbsp;&nbsp;   TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128&#10;</span></span><span class="line"><span class="cl">Server Temp Key:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X25519 253 bits&#10;</span></span><span class="line"><span class="cl">TLS Server Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picodotdev.github.io&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Document Path:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  /blog-bitix/&#10;</span></span><span class="line"><span class="cl">Document Length:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;28389 bytes&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Concurrency Level:&nbsp;&nbsp;&nbsp;&nbsp;  20&#10;</span></span><span class="line"><span class="cl">Time taken for tests:   29.220 seconds&#10;</span></span><span class="line"><span class="cl">Complete requests:&nbsp;&nbsp;&nbsp;&nbsp;  1000&#10;</span></span><span class="line"><span class="cl">Failed requests:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&#10;</span></span><span class="line"><span class="cl">Total transferred:&nbsp;&nbsp;&nbsp;&nbsp;  29007394 bytes&#10;</span></span><span class="line"><span class="cl">HTML transferred:&nbsp;&nbsp;&nbsp;&nbsp;   28389000 bytes&#10;</span></span><span class="line"><span class="cl">Requests per second:&nbsp;&nbsp;&nbsp;&nbsp;34.22 [#/sec] (mean)&#10;</span></span><span class="line"><span class="cl">Time per request:&nbsp;&nbsp;&nbsp;&nbsp;   584.404 [ms] (mean)&#10;</span></span><span class="line"><span class="cl">Time per request:&nbsp;&nbsp;&nbsp;&nbsp;   29.220 [ms] (mean, across all concurrent requests)&#10;</span></span><span class="line"><span class="cl">Transfer rate:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  969.45 [Kbytes/sec] received&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Connection Times (ms)&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  min  mean[+/-sd] median   max&#10;</span></span><span class="line"><span class="cl">Connect:&nbsp;&nbsp;&nbsp;&nbsp;  149  349 149.7&nbsp;&nbsp;&nbsp;&nbsp;303&nbsp;&nbsp;&nbsp;&nbsp;1361&#10;</span></span><span class="line"><span class="cl">Processing:   122  225  75.5&nbsp;&nbsp;&nbsp;&nbsp;207&nbsp;&nbsp;&nbsp;&nbsp; 586&#10;</span></span><span class="line"><span class="cl">Waiting:&nbsp;&nbsp;&nbsp;&nbsp;   53  122  68.8&nbsp;&nbsp;&nbsp;&nbsp;108&nbsp;&nbsp;&nbsp;&nbsp; 481&#10;</span></span><span class="line"><span class="cl">Total:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;329  574 174.0&nbsp;&nbsp;&nbsp;&nbsp;512&nbsp;&nbsp;&nbsp;&nbsp;1612&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">Percentage of the requests served within a certain time (ms)&#10;</span></span><span class="line"><span class="cl">  50%&nbsp;&nbsp;&nbsp;&nbsp;512&#10;</span></span><span class="line"><span class="cl">  66%&nbsp;&nbsp;&nbsp;&nbsp;534&#10;</span></span><span class="line"><span class="cl">  75%&nbsp;&nbsp;&nbsp;&nbsp;555&#10;</span></span><span class="line"><span class="cl">  80%&nbsp;&nbsp;&nbsp;&nbsp;744&#10;</span></span><span class="line"><span class="cl">  90%&nbsp;&nbsp;&nbsp;&nbsp;832&#10;</span></span><span class="line"><span class="cl">  95%&nbsp;&nbsp;&nbsp;&nbsp;915&#10;</span></span><span class="line"><span class="cl">  98%   1104&#10;</span></span><span class="line"><span class="cl">  99%   1171&#10;</span></span><span class="line"><span class="cl"> 100%   1612 (longest request)</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ab.out</span>
    </div>
</div>
<p>Esta herramienta puede ser utilizada para par medir el rendimiento de cualquier servicio web. Un blog de <a href="https://wordpress.org/">Wordpress</a>, una página de una organización, un <em>endpoint</em> de un servicio REST o GraphQL, etc&hellip; Es muy sencilla de utilizar y genera un informe corto pero con interesante información sobre el rendimiento. Si se hacen cambios se puede medir el antes y el después y comparar los resultados para observar de que modo han afectado al rendimiento si de forma positiva o negativa y en que grado.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/</id>
        <title>Registro y descubrimiento de servicios en contenedores de Docker con Consul y Registrator</title>
        <updated>2019-05-26T11:30:00+02:00</updated>
        <published>2019-05-26T11:30:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En los microservicios se hace necesario un servicio de registro y descubrimiento como Eureka o Consul que permita conocer la ubicación de las instancias en cada momento. Las instancias de los servicios se pueden registrar ellas mismas o esta tarea se puede delegar en una en otro servicio. Al usar contenedores de Docker una herramienta que permite delegar el registro y desregistro en Consul de los servicios es GliderLabs Registrator.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-consul.svg" width="200" height="278" alt="HashiCorp Consul" title="HashiCorp Consul" class="" loading="false&#34;"></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker" class="" loading="false&#34;"></p>
</div>
<p>El registro y descubrimiento de servicios permite a los servicios registrase y a los clientes descubrir la ubicación de otros servicios, la ubicación consiste en la dirección IP y el puerto en el que contactarles. Dado la naturaleza efímera de los servicios donde nuevas instancias de servicios se inician y se detienen en diferentes máquinas y puertos el servicio de descubrimiento es esencial.</p>
<p>La funcionalidad de registro y descubrimiento consiste en dos partes, por un lado cuando se inicia una instancia de un servicio se registra su ubicación en el servicio de registro y descubrimiento y por otro lado los clientes cuando requieren una instancia de un servicio la buscan en el servicio de descubrimiento.</p>
<p>El registro en el servicio de descubrimiento puede hacerse de dos formas, que sea el propio servicio el que se registra en el servicio de descubrimiento o que se sea otro servicio el que lo registra. Para el primer caso escribí un artículo con <a href="https://www.consul.io/">Consul</a> como servicio de descubrimiento en una aplicación de <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> que se registra al iniciarse. La ventaja es que es autosuficiente pero adquiere la tarea de autoregistrarse. Por el contrario delegar la tarea de registro permite extraerla de los servicios y ofrecer esa funcionalidad por un servicio con esa misión específicamente.</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2017/01/registro-y-descubrimiento-de-servicios-con-spring-cloud-y-consul/">Registro y descubrimiento de servicios con Spring Cloud y Consul</a></li>
</ul>
<p>En este artículo se usa <a href="https://github.com/gliderlabs/registrator">GliderLabs Registrator</a> como servicio que se encarga de registrar en un servicio de descubrimiento como Consul los servicios que se inicien en <a href="https://www.docker.com/">Docker</a>, aunque soporta otros como <a href="https://etcd.io/">etcd</a>.</p>
<p>Registrator es un contenedor de Docker, su funcionamiento es escuchar los eventos del demonio de Docker y monitorizar cuando se inician nuevos contenedores o cuando se paran. La monitorización la hace a través del <em>socket</em> del servicio de Docker, para lo que hay que montar un volumen en este contenedor con el archivo <em>/var/run/docker.sock</em> del <em>host</em>.</p>
<p>Primero se inicia el servicio de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ consul agent -dev&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>consul.sh</span>
    </div>
</div>
<p>Luego se inicia el contenedor Registrator indicando la ubicación con dirección IP y puerto del servicio de Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm --name<span class="o">=</span>registrator --net<span class="o">=</span>host --volume<span class="o">=</span>/var/run/docker.sock:/tmp/docker.sock gliderlabs/registrator:latest consul://localhost:8500&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-registrator.sh</span>
    </div>
</div>
<p>Iniciados estos dos servicios en la interfaz de estado de Consul se observa que no hay ningún servicio pero cuando se inicie un nuevo contenedor será registrado en Consul por Registrator.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul_hudf2f8b03877264bacf83a564e5686ede_36482_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Dirección"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul_hudf2f8b03877264bacf83a564e5686ede_36482_300x200_fit_q90_h2_box_3.webp" width="287" height="200" alt="Dirección" title="Dirección" class="&#34; " loading="lazy"></a></p>
</figure>
</div>
<p>En este caso se utiliza como servicio una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a>. Dado que el puerto en el que esté disponible el servicio de PostgreSQL es indiferente al utilizar un servicio de registro y descubrimiento se indica el <em>-p</em> sin indicar el puerto del <em>host</em>, de este modo Docker le asigna un puerto público aleatorio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker run --rm --name postgres -e <span class="nv">POSTGRES_USER</span><span class="o">=</span>user -e <span class="nv">POSTGRES_PASSWORD</span><span class="o">=</span>password -e <span class="nv">POSTGRES_DB</span><span class="o">=</span>database -p <span class="m">5432</span> postgres:alpine&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-postgres.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker ps&#10;</span></span><span class="line"><span class="cl">CONTAINER ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IMAGE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  STATUS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  PORTS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NAMES&#10;</span></span><span class="line"><span class="cl">cb7602605725&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postgres:alpine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="s2">&#34;docker-entrypoint.s…&#34;</span>   <span class="m">54</span> seconds ago&nbsp;&nbsp;&nbsp;&nbsp;   Up <span class="m">53</span> seconds&nbsp;&nbsp;&nbsp;&nbsp;   0.0.0.0:32777-&gt;5432/tcp   postgres&#10;</span></span><span class="line"><span class="cl">d286341148cb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gliderlabs/registrator:latest   <span class="s2">&#34;/bin/registrator co…&#34;</span>   About a minute ago   Up About a minute&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registrator</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-ps.sh</span>
    </div>
</div>
<p>En la salida del contenedor de Registrator se emite una traza indicando que el servicio de PostgreSQL ha sido registrado en Consul.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plain" data-lang="plain"><span class="line"><span class="cl">2019/05/26 11:05:29 Starting registrator v7 ...&#10;</span></span><span class="line"><span class="cl">2019/05/26 11:05:29 Using consul adapter: consul://localhost:8500&#10;</span></span><span class="line"><span class="cl">2019/05/26 11:05:29 Connecting to backend (0/0)&#10;</span></span><span class="line"><span class="cl">2019/05/26 11:05:29 consul: current leader  127.0.0.1:8300&#10;</span></span><span class="line"><span class="cl">2019/05/26 11:05:29 Listening for Docker events ...&#10;</span></span><span class="line"><span class="cl">2019/05/26 11:05:29 Syncing services on 1 containers&#10;</span></span><span class="line"><span class="cl">2019/05/26 11:05:29 ignored: d286341148cb no published ports&#10;</span></span><span class="line"><span class="cl">2019/05/26 11:05:50 added: cb7602605725 archlinux:postgres:5432</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-registrator.out</span>
    </div>
</div>
<p>Una vez iniciado el servicio de postgres en la consola de Consul se muestra con su dirección y puerto en el que se encuentra, en el contenedor utiliza su puerto por defecto <em>5432</em> pero hacia el exterior en este caso al no haber especificado uno Docker le asigna un puerto aleatorio en este caso el <em>32777</em>. Este puerto aleatorio es con el que los clientes acceden a la base de datos.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-1_hu5336dadbc35299bcca8969f84d373cf0_39850_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Servicio de PostgreSQL registrado en Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-1_hu5336dadbc35299bcca8969f84d373cf0_39850_300x200_fit_q90_h2_box_3.webp" width="300" height="165" alt="Servicio de PostgreSQL registrado en Consul" title="Servicio de PostgreSQL registrado en Consul" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-2_huf0df6f6a3d2138a93d9a38f4927788b0_43545_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Servicio de PostgreSQL registrado en Consul"><img src="https://picodotdev.github.io/blog-bitix/2019/05/registro-y-descubrimiento-de-servicios-en-contenedores-de-docker-con-consul-y-registrator/images/consul-postgres-2_huf0df6f6a3d2138a93d9a38f4927788b0_43545_300x200_fit_q90_h2_box_3.webp" width="300" height="165" alt="Servicio de PostgreSQL registrado en Consul" title="Servicio de PostgreSQL registrado en Consul" class="&#34; " loading="lazy"></a></p>
<figcaption>Servicio de postgres registrado en Consul por Registrator</figcaption>
</figure>
</div>
<p>En vez de iniciar los servicios individualmente con comandos de Docker creando un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> con la definición de todos los contenedores se facilita iniciar todos los contenedores con un comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ docker-compose up&#10;</span></span><span class="line"><span class="cl">&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.7&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">consul</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">consul:latest</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">consul</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">&#34;consul&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;agent&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;-dev&#34;</span><span class="p">,</span><span class="w"> </span><span class="s2">&#34;-ui&#34;</span><span class="p">]</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">registrator</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">gliderlabs/registrator:latest</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">registrator</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">network_mode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;host&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">/var/run/docker.sock:/tmp/docker.sock</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">entrypoint</span><span class="p">:</span><span class="w"> </span><span class="l">/bin/registrator consul://localhost:8500</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">depends_on</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">consul</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">postgres</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres:alpine</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">postgres</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;5432&#34;</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_USER=user</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_PASSWORD=password</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_DB=database</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">depends_on</span><span class="p">:</span><span class="w">&#10;</span></span></span><span class="line"><span class="cl"><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">registrator</span></span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>El proyecto de <a href="https://projects.spring.io/spring-cloud/">Spring Cloud</a> ofrece soporte para ambas tareas de registrar y descubrir servicios, aunque perfectamente la tarea de registro se puede delegar como en este caso a Registrator y utilizar en los servicios de Spring Boot únicamente la parte de descubrimiento.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Registrator">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-compose-up.sh</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/</id>
        <title>Crear de forma sencilla y rápida máquinas virtuales de VirtualBox con Vagrant</title>
        <updated>2019-05-10T17:00:00+02:00</updated>
        <published>2019-05-10T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp-vagrant.svg" width="200" height="200" alt="Vagrant" title="Vagrant" class="" loading="false&#34;"></p>
</div>
<div class="logotypes">
<p><img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/hashicorp.svg" width="200" height="200" alt="HashiCorp" title="HashiCorp" class="" loading="false&#34;"></p>
</div>
<p><a href="https://www.virtualbox.org/">VirtualBox</a> es una de las herramientas que permiten virtualizar un sistema operativo completo y sus aplicaciones dentro de otra máquina. Como es un sistema operativo completo requiere que el sistema que la alberga tenga RAM suficiente para sí mismo y RAM suficiente para el sistema virtualizado, se puede configurar la cantidad de RAM y almacenamiento persistente de la máquina virtual. En el proceso de virtualización se pierde algo de rendimiento por la sobrecarga que añade virtualizar un sistema operativo completo, los procesadores modernos ofrecen soporte para que el rendimiento sea lo mayor posible pero no es igual a ejecutar el sistema de forma nativa en el sistema, sobre todo en el aspecto de interfaces gráficas y aceleración 2D y 3D.</p>
<p>La virtualización es una buena forma de probar una distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> para evaluarla o ejecutar <a href="https://www.microsoft.com/es-es/windows/">Windows</a> en un Linux. Hay otras herramientas de virtualización como <a href="https://www.qemu.org/">QEMU</a> y <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a> pero la virtud de VirtualBox es que es muy sencilla y está disponible para Windows, GNU/Linux y <a href="https://www.apple.com/macos/">macOS</a>.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox_hu714198bdeca98f2fa85206e0a2e30ff9_109657_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox_hu714198bdeca98f2fa85206e0a2e30ff9_109657_300x200_fit_q90_h2_box_3.webp" width="300" height="181" alt="VirtualBox" title="VirtualBox" class="&#34; " loading="lazy"></a></p>
<figcaption>VirtualBox</figcaption>
</figure>
</div>
<p>Para tener una máquina virtual el proceso se puede hacer desde el principio desde el medio de instalación ofrecido siguiendo los de su instalador. Pero para hacer alguna prueba de desarrollo y si se necesitan virtualizar varias máquinas el proceso manual es incómodo además de repetitivo. <a href="https://www.vagrantup.com/">Vagrant</a> es una de las herramientas ofrecidas por <a href="https://www.hashicorp.com/">HashiCorp</a> que permite automatizar la creación y aprovisionamiento de máquinas virtuales en VirtualBox mediante la especificación de un archivo de configuración. Permite replicar entornos y crear un cluster de máquinas que resulta muy útil al desarrollar o probar cierto software.</p>
<p>En este ejemplo se configura una máquina virtual usando como sistema operativo base Ubuntu 18.04, y se aprovisiona configurando ella <a href="https://www.docker.com/">Docker</a>. El aprovisionamiento se realiza mediante una serie de comandos y archivos que se añaden del <em>host</em> al sistema virtualizado tal como se hace en un sistema Ubuntu desde su estado de instalación inicial. Entre las opciones de configuración permitidas están el nombre de la máquina virtual, su sistema operativo, la cantidad de memoria que se le asigna, propiedades de red, asignar direcciones IP estáticas, &hellip;</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="err">#</span> <span class="o">-*-</span> <span class="n">mode</span><span class="o">:</span> <span class="n">ruby</span> <span class="o">-*-</span>&#10;</span></span><span class="line"><span class="cl"><span class="err">#</span> <span class="n">vi</span><span class="o">:</span> <span class="n">set</span> <span class="n">ft</span><span class="o">=</span><span class="n">ruby</span> <span class="o">:</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl"><span class="n">Vagrant</span><span class="o">.</span><span class="na">configure</span><span class="o">(</span><span class="s">&#34;2&#34;</span><span class="o">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="n">config</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">define</span> <span class="s">&#34;ubuntu-docker&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">instance</span><span class="o">|</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">box</span> <span class="o">=</span> <span class="s">&#34;ubuntu/bionic64&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provider</span> <span class="o">:</span><span class="n">virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">vb</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="s">&#34;Ubuntu Docker (Vagrant)&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">end</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">network</span> <span class="s">&#34;private_network&#34;</span><span class="o">,</span> <span class="n">ip</span><span class="o">:</span> <span class="s">&#34;192.168.33.10&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provider</span> <span class="s">&#34;virtualbox&#34;</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">vb</span><span class="o">.</span><span class="na">memory</span> <span class="o">=</span> <span class="s">&#34;1024&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provision</span> <span class="s">&#34;file&#34;</span><span class="o">,</span> <span class="n">source</span><span class="o">:</span> <span class="s">&#34;docker-compose.yml&#34;</span><span class="o">,</span> <span class="n">destination</span><span class="o">:</span> <span class="s">&#34;/home/vagrant/docker-compose.yml&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;  <span class="n">instance</span><span class="o">.</span><span class="na">vm</span><span class="o">.</span><span class="na">provision</span> <span class="s">&#34;shell&#34;</span><span class="o">,</span> <span class="n">inline</span><span class="o">:</span> <span class="n">$docker_role_script</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">end</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">end</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">  <span class="n">$docker_role_script</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="n">SCRIPT</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Updating...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">upgrade</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Installing docker...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">apt</span><span class="o">-</span><span class="n">transport</span><span class="o">-</span><span class="n">https</span> <span class="n">ca</span><span class="o">-</span><span class="n">certificates</span> <span class="n">curl</span> <span class="n">gnupg</span><span class="o">-</span><span class="n">agent</span> <span class="n">software</span><span class="o">-</span><span class="n">properties</span><span class="o">-</span><span class="n">common</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">curl</span> <span class="o">-</span><span class="n">fsSL</span> <span class="n">https</span><span class="o">:</span><span class="c1">//download.docker.com/linux/ubuntu/gpg | sudo apt-key add -&#10;</span></span></span><span class="line"><span class="cl"><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">key</span> <span class="n">fingerprint</span> <span class="mi">0</span><span class="n">EBFCD88</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">add</span><span class="o">-</span><span class="n">apt</span><span class="o">-</span><span class="n">repository</span> <span class="s">&#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&#34;</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span> <span class="n">docker</span><span class="o">-</span><span class="n">ce</span><span class="o">-</span><span class="n">cli</span> <span class="n">containerd</span><span class="o">.</span><span class="na">io</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">usermod</span> <span class="o">-</span><span class="n">aG</span> <span class="n">docker</span> <span class="n">vagrant</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="s">&#34;https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)&#34;</span> <span class="o">-</span><span class="n">o</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">compose</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">docker</span><span class="o">-</span><span class="n">compose</span>&#10;</span></span><span class="line"><span class="cl">&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">echo</span> <span class="s">&#34;Starting Docker service...&#34;</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">daemon</span><span class="o">-</span><span class="n">reload</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">enable</span> <span class="n">docker</span><span class="o">.</span><span class="na">service</span>&#10;</span></span><span class="line"><span class="cl">&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">sudo</span> <span class="n">systemctl</span> <span class="n">start</span> <span class="n">docker</span><span class="o">.</span><span class="na">service</span>&#10;</span></span><span class="line"><span class="cl">  <span class="n">SCRIPT</span>&#10;</span></span><span class="line"><span class="cl"><span class="n">end</span>&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Vagrantfile</span>
    </div>
</div>
<p>Se puede crear un archivo inicia con comentarios para empezar a configurar la máquina virtual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vagrant init ubuntu/bionic64&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-init.sh</span>
    </div>
</div>
<p>Definido el archivo de configuración para Vagrant se inician las máquina virtual con un comando. Y se detienen con otro. Si hay necesidad en el mismo archivo se pueden definir varias máquinas virtuales.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vagrant up&#10;</span></span><span class="line"><span class="cl">$ vagrant halt&#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-up.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox-vagrant-vm_hu714198bdeca98f2fa85206e0a2e30ff9_116254_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="VirtualBox Vagrant VM"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/virtualbox-vagrant-vm_hu714198bdeca98f2fa85206e0a2e30ff9_116254_300x200_fit_q90_h2_box_3.webp" width="300" height="181" alt="VirtualBox Vagrant VM" title="VirtualBox Vagrant VM" class="&#34; " loading="lazy"></a></p>
<figcaption>VirtualBox Vagrant VM</figcaption>
</figure>
</div>
<p>Una vez iniciada la máquina virtual Vagrant configura SSH para tener acceso a su terminal, hay que especificar el nombre de la máquina virtual.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vagrant ssh ubuntu-docker&#10;</span></span><span class="line"><span class="cl"> &#10;</span></span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>vagrant-ssh.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/vagrant-ssh_huf84e0a9edfdc6e443883ef5a755439df_64066_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Vagrant SSH"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/vagrant-ssh_huf84e0a9edfdc6e443883ef5a755439df_64066_300x200_fit_q90_h2_box_3.webp" width="244" height="200" alt="Vagrant SSH" title="Vagrant SSH" class="&#34; " loading="lazy"></a></p>
<figcaption>Vagrant SSH</figcaption>
</figure>
</div>
<p>La máquina en el ejemplo ha sido aprovisionada con Docker mediante un <em>script</em> con los comandos para instalarlo y un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> con un servicio del servidor web <a href="https://nginx.org/">nginx</a>. Desde la terminal de la máquina virtual se inicia el servicio con Docker que queda accesible tanto desde la propia máquina virtual como desde el <em>host</em> indicando la dirección IP que se le ha asignado.</p>
<div class="media">
<figure>
<p><a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/docker-compose-up_huee84648a7050cd57115fd67bb683562f_66997_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="docker-compose up y curl (desde la MV)"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/docker-compose-up_huee84648a7050cd57115fd67bb683562f_66997_300x200_fit_q90_h2_box_3.webp" width="281" height="200" alt="docker-compose up y curl (desde la MV)" title="docker-compose up y curl (desde la MV)" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/curl_hu26f710045e8e9b42060c9d2ccd60a851_58845_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="curl (desde el host)"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/curl_hu26f710045e8e9b42060c9d2ccd60a851_58845_300x200_fit_q90_h2_box_3.webp" width="244" height="200" alt="curl (desde el host)" title="curl (desde el host)" class="&#34; " loading="lazy"></a>
<a href="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/firefox_hue938310a76fc8e72c31d7b54d72579d5_35132_2560x1440_fit_q90_h2_box_3.webp" data-gallery="" title="Página devuelta por nginx"><img src="https://picodotdev.github.io/blog-bitix/2019/05/crear-de-forma-sencilla-y-rapida-maquinas-virtuales-de-virtualbox-con-vagrant/images/firefox_hue938310a76fc8e72c31d7b54d72579d5_35132_300x200_fit_q90_h2_box_3.webp" width="300" height="172" alt="Página devuelta por nginx" title="Página devuelta por nginx" class="&#34; " loading="lazy"></a></p>
<figcaption>docker-compose up y curl desde la MV y desde el host</figcaption>
</figure>
</div>
<p>Vagrant tiene un <a href="https://app.vagrantup.com/boxes/search">repositorio de imágenes</a> entre las que elegir para el sistema, están las más populares como <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://fedoraproject.org/">Fedora</a>, <a href="https://www.debian.org/">Debian</a> y <a href="https://www.centos.org/">CentOS</a>. Es un repositorio en donde los usuarios pueden subir sus propias imágenes aunque por defecto es mejor usar las oficiales de cada sistema.</p>
<p>Posee varias <a href="https://www.vagrantup.com/docs/index.html">páginas de documentación</a> bastante completas donde conocer los todos los detalles de uso de Vagrant.</p>
<ul>
<li><a href="https://www.vagrantup.com/docs/vagrantfile/">Vagrantfile</a></li>
<li><a href="https://www.vagrantup.com/docs/cli/">Commands</a></li>
<li><a href="https://www.vagrantup.com/docs/networking/">Networking</a></li>
<li><a href="https://www.vagrantup.com/docs/provisioning/">Provisioning</a></li>
<li><a href="https://www.vagrantup.com/docs/multi-machine/">Multi-machine</a></li>
<li><a href="https://www.vagrantup.com/docs/providers/">Providers</a></li>
<li><a href="https://www.vagrantup.com/docs/synced-folders/">Synced folders</a></li>
</ul>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Vagrant">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>vagrant up</code></p>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="software"/>
            
        
    </entry>
    
</feed>