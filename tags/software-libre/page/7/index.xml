<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/tags/software-libre/</id>
    <updated>2021-09-19T13:00:00+02:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/</id>
        <title>Generar y convertir claves y certificados con OpenSSL</title>
        <updated>2020-07-27T12:00:00+02:00</updated>
        <published>2014-02-21T17:36:21+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Usando los comandos expuestos en este artículo y con OpenSSL podemos crear una clave pública y privada para usarlo con ssh o para cifrar y descifrar mensajes, un certificado autofirmado que podremos usar en un servidor de aplicaciones para usar un protocolo seguro y también convertir las claves y certificados a uno de los formatos aceptados por la aplicación que usemos.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/openssl.svg" width="400" height="124" alt="OpenSSL" title="OpenSSL"  class=""></p>
</div>
<p>Para un uso personal como enviar correos o archivos cifrados o firmados digitalmente usar <a href="https://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html">GnuPG</a> es una buena opción. En Internet los servidores también se aprovechan del uso de criptografía para realizar comunicaciones seguras entre el usuario y el servidor.</p>
<p>Para hacer uso en un servidor de una comunicación https donde los datos viajan cifrados y sin que otras partes salvo el usuario y el servidor puedan acceder a los datos necesitamos un certificado digital. Un certificado es un archivo que contiene la clave pública sirviéndonos para verificar su autenticidad. Un certificado autofirmado es un certificado firmado con la misma clave privada asociada a la clave pública que contiene el certificado. Un certificado autofirmado es suficiente para un entorno de pruebas pero en un servidor para proporcionar confianza a los usuarios deberemos solicitar que una autoridad de certificados que nos firme con su clave nuestro certificado, si el usuario confía en esa autoridad de certificado puede de esta manera confiar en nuestro certificado y clave pública. Varias entidades de registro de dominios o alojamiento web ofrecen la compra de certificados SSL, en el artículo <a href="https://picodotdev.github.io/blog-bitix/2015/04/certificado-ssl-de-empresa-wildcard-y-de-validacion-extendida/">Certificado SSL, de empresa, «wildcard» y de validación extendida</a> comento con un poco más detalle los varios tipos de certificados y algunas opciones donde obtenerlos o comprarlos.</p>
<p>Dependiendo del tipo de certificado que solicitemos y nos entregue la autoridad de certificado el usuario podrá ver que está simplemente accediendo a un servidor con conexión segura, ver los detalles de nuestro certificado y en algunos casos el usuario podrá ver en la barra de direcciones en verde el nombre de la entidad, que puede darle al usuario más confianza y ver que realmente está accediendo al servidor correcto y no a uno que esté intentando suplantar una identidad. En este último caso la barra de direcciones no tendría en verde el nombre de la entidad, esto es algo que como usuarios debemos comprobar al acceder a determinados sitios de forma segura.</p>
<p>Con la herramienta <a href="https://www.openssl.org/">OpenSSL</a> y los siguientes comandos podemos generar claves y certificados y realizar las conversiones entre formatos que necesitemos. Una vez que disponemos de un certificado y del formato en el que necesitemos podemos hacer uso de él, por ejemplo, en un servidor de páginas web o aplicaciones para proporcionar acceso mediante el protocolo HTTPS y proporcionar seguridad SSL. En otros artículos muestro <a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">cómo configurar SSL/TLS en un servidor Tomcat, JBoss, WildFly, Lighttpd, Nginx o Apache</a>, por otro lado usar HTTPS es un requisito para <a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/">utilizar el protocolo HTTP/2 en un servidor web</a>.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="crear-claves-y-certificados">Crear claves y certificados</h3>
<h4 id="crear-una-clave-privada-y-pública">Crear una clave privada y pública</h4>
<p>Para generar un par de claves RSA pública y privada que nos permitan tanto cifrar datos como realizar firmas se emplea el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl genrsa -out localhost.key <span class="m">8192</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-1.sh</span>
    </div>
</div>
<p>Para cifrar la clave generada con el algoritmo <em>aes256</em> y protegerla por una contraseña se puede emplear el siguiente comando, en realidad al generar la clave indicando la misma opción <em>-aes256</em> en el comando anterior la clave se generará cifrada y protegida por una contraseña. Para cambiar la contraseña es el mismo comando y el segundo comando elimina la contraseña y la descifra:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl rsa -aes256 -in localhost.key -out localhost-encrypted.key&#10;$ openssl rsa -in localhost-encrypted.key -out localhost.key&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-12.sh</span>
    </div>
</div>
<p>El contenido de un archivo de clave privada sin cifrar tiene el siguiente aspecto (los tres puntos son líneas de contenido omitidas).</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">-----BEGIN RSA PRIVATE KEY-----&#10;MIISKAIBAAKCBAEAyMuPWmmTI4IkfoqQ2TWpqo79GEasdxn9McHb4I5Vk4c3rFIR&#10;ExMozoWmCVvKD6Z9lT9aJ69jlwAR4KGownT4mXN0pRN3mSf6kZ854XssB6o63/0e&#10;/D1xTYdcrP7OKMnHyZwcVKPXEz0RhUsUqH7wzIjwsoXDBDOVFM6EJ2RGo+MuTMDX&#10;wMW3X/DvnDlaxes7ZZizrQ0F+hvopFZowZxRjj/RCJRdAbzNhVEyG+2qtaYlRIC3&#10;mq/eYCJUi+jD1jnFr2daC4zFa6Cr7bGoxrXJlNg4iS1hjciaMV13kXXW1lsWOkPd&#10;exctVEb/nuH64cozPhXJoBjR7rDvXPllnhTay3UnVqK7art1iqKZXmN7FGGM2nJv&#10;w7PIYk25T7H3ucRwfT+svUzdooGNSpojKhFoaAvG4X5Z9wZgtTa24pz/T673DH+J&#10;1Hujco+ufAwJ+ZMZDfnN2g49Y2hqrJmU177e+g6vW5xYAK8raYp6RzTYRuxKLaQg&#10;mi4ctBsycbxETZUk1kSlOB2ebM6+8lArW8VOtCQGdNvvEfydrTHK3hxrEvW8oFAb&#10;j5eU3oWzZL0wTMJ1S/Crbg2eRfCkWPvBdV3e5DUUlqMp2f5urxgOlHmkYEop8gBm&#10;...&#10;...&#10;...&#10;...&#10;...&#10;...&#10;sH+8kfyWZP4x+ivVlTrtJMRPJLKAbIJ2CEN16YQtaE9tjCWcz4JjV2b7k79UEjLg&#10;mVGXSWo8koxl8MJpSFlYJMAlhiLkoanNzW+u+LPvn2Abc6174u5QD+ihk8c=&#10;-----END RSA PRIVATE KEY-----</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>localhost.key</span>
    </div>
</div>
<h4 id="exportar-la-clave-pública">Exportar la clave pública</h4>
<p>El archivo generado al crear el par de claves contiene tanto la clave pública como la privada. La privada no se debe distribuir y se debe mantener protegida de forma que solo la conozca su propietario por ejemplo guardándola en una base de datos de KeePassXC como un archivo adjunto de <a href="https://picodotdev.github.io/blog-bitix/2016/11/guardar-contrasenas-de-forma-segura-con-keepassxc/">la aplicación KeePassXC</a>. La clave pública es la que se distribuye a otras personas o entidades. Para extraer la clave pública del archivo generado anterior por OpenSSL usamos el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl rsa -in localhost.key -pubout &gt; localhost.pub&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-9.sh</span>
    </div>
</div>
<p>También se puede obtener la clave pública en formato <a href="https://www.openssh.com/">OpenSSH</a> y una representación gráfica de la huella digital.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ssh-keygen -y -f localhost.key &gt; localhost-openssh.pub&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-10.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ssh-keygen -lv -f localhost-openssh.pub&#10;<span class="m">8192</span> SHA256:mxKfFP7NwwlZsvfxMqG9CQOjJssyOA/v1I67C4j8vwM no comment <span class="o">(</span>RSA<span class="o">)</span>&#10;+---<span class="o">[</span>RSA 8192<span class="o">]</span>----+&#10;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&#10;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&#10;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;. . .&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">|</span>&#10;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;   . . <span class="o">=</span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">|</span>&#10;<span class="p">|</span>&nbsp;&nbsp;&nbsp;&nbsp;  . S * . o  <span class="p">|</span>&#10;<span class="p">|</span>o. E . + * <span class="nv">O</span> <span class="o">=</span> + <span class="p">|</span>&#10;<span class="p">|</span>o.o.o + B . <span class="nv">X</span> <span class="o">=</span> .<span class="p">|</span>&#10;<span class="p">|</span>  +<span class="o">=</span><span class="nv">o</span><span class="o">=</span> <span class="o">=</span>&nbsp;&nbsp;&nbsp;&nbsp; + <span class="o">=</span> <span class="p">|</span>&#10;<span class="p">|</span>   <span class="o">=</span>XO*&nbsp;&nbsp;&nbsp;&nbsp;   o  <span class="p">|</span>&#10;+----<span class="o">[</span>SHA256<span class="o">]</span>-----+</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-15.sh</span>
    </div>
</div>
<h4 id="obtener-la-huella-digital-de-la-clave-pública">Obtener la huella digital de la clave pública</h4>
<p>La huella digital de una clave pública sirve para comprobar que la clave es la esperada. Son una cadena de números y letras pudiendo estar cada pareja de caracteres separados por <em>:</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl dgst -sha256 -c localhost.pub&#10;SHA256<span class="o">(</span>localhost.pub<span class="o">)=</span> a4:39:88:cf:8b:cf:3c:13:23:c1:e6:f8:10:d3:e5:a4:95:6f:30:d6:11:b1:81:4b:ce:3d:c0:e5:1c:57:ca:ff&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-11.sh</span>
    </div>
</div>
<h4 id="crear-un-certificado">Crear un certificado</h4>
<p>Un certificado permite utilizar el protocolo seguro HTTPS en un servidor web y contiene la firma de una tercera parte que valida nuestra clave pública como auténtica. Para que esa tercera parte pueda firmar nuestra clave deberemos generar una petición de firma de certificado y enviársela a la autoridad de certificado que nos lo devolverá firmado. La petición firma de certificado se crea con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl req -new -key localhost.key -out localhost.csr&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-2.sh</span>
    </div>
</div>
<p>Si no queremos tratar con una autoridad de certificado, ya que cobran por la firma, podemos crear un certificado autofirmado que puede ser suficiente para un entorno de pruebas de un servidor web. El comando para generar el certificado autofirmado es, la opción <em>-subj</em> indica la información del sujeto a autenticar:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl req -new -x509 -days <span class="m">1825</span> -subj <span class="s2">&#34;/C=ES/ST=Spain/L=/O=/CN=localhost&#34;</span> -key localhost.key -out localhost.crt&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-3.sh</span>
    </div>
</div>
<h3 id="convertir-un-certificado-a-otros-formatos">Convertir un certificado a otros formatos</h3>
<p>Dependiendo de la autoridad de certificado el certificado puede estar en diferentes formatos, también dependiendo del servidor donde se quiera usar es necesario convertirlo a al formato adecuado. OpenSSL permite para hacer las conversiones entre formatos DER, PEM y PKCS#12.</p>
<h4 id="convertir-un-certificado-en-formato-der-crt-cer-der-a-pem">Convertir un certificado en formato DER (.crt .cer .der) a PEM</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ cat localhost.key localhost.crt &gt; localhost.pem&#10;$ openssl x509 -in localhost.crt -out localhost.pem&#10;$ openssl x509 -inform der -in localhost.cer -out localhost.pem</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-4.sh</span>
    </div>
</div>
<h4 id="convertir-un-certificado-en-formato-pem-a-der">Convertir un certificado en formato PEM a DER</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl x509 -outform der -in localhost.pem -out localhost.der&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-5.sh</span>
    </div>
</div>
<h4 id="convertir-un-certificado-en-formato-pem-y-una-clave-privada-a-pkcs12-pfx-p12">Convertir un certificado en formato PEM y una clave privada a PKCS#12 (.pfx .p12)</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl pkcs12 -export -out localhost.p12 -inkey localhost.key -in localhost.crt&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-6.sh</span>
    </div>
</div>
<h4 id="convertir-un-archivo-en-formato-pkcs12-pfx-p12-que-contiene-una-clave-privada-y-certificado-a-pem">Convertir un archivo en formato PKCS#12 (.pfx .p12) que contiene una clave privada y certificado a PEM</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl pkcs12 -in localhost.p12 -out localhost.pem -nodes&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-7.sh</span>
    </div>
</div>
<h4 id="convertir-pkcs12-a-keystore-jks">Convertir PKCS#12 a keystore JKS</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ keytool -importkeystore -destkeystore localhost.keystore -srckeystore localhost.p12 -srcstoretype pkcs12&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-8.sh</span>
    </div>
</div>
<h3 id="examinar-certificados">Examinar certificados</h3>
<h4 id="examinar-un-certificado">Examinar un certificado</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl x509 -text -noout -in localhost.crt&#10;Certificate:&#10;&nbsp;&nbsp;&nbsp;&nbsp;Data:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version: <span class="m">3</span> <span class="o">(</span>0x2<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serial Number:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;49:e5:32:9b:7f:be:bf:a6:90:14:34:5e:24:53:e8:96:51:8d:74:d4&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Signature Algorithm: sha256WithRSAEncryption&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Issuer: <span class="nv">C</span> <span class="o">=</span> ES, <span class="nv">ST</span> <span class="o">=</span> Spain, <span class="nv">CN</span> <span class="o">=</span> localhost&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Validity&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not Before: Jul <span class="m">27</span> 10:40:19 <span class="m">2020</span> GMT&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Not After : Jul <span class="m">26</span> 10:40:19 <span class="m">2025</span> GMT&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject: <span class="nv">C</span> <span class="o">=</span> ES, <span class="nv">ST</span> <span class="o">=</span> Spain, <span class="nv">CN</span> <span class="o">=</span> localhost&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Public Key Info:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Public Key Algorithm: rsaEncryption&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RSA Public-Key: <span class="o">(</span><span class="m">8192</span> bit<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Modulus:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;00:c8:cb:8f:5a:69:93:23:82:24:7e:8a:90:d9:35:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a9:aa:8e:fd:18:46:ac:77:19:fd:31:c1:db:e0:8e:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exponent: <span class="m">65537</span> <span class="o">(</span>0x10001<span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 extensions:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Subject Key Identifier: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;07:A0:9B:0F:8F:22:9D:AE:CF:F7:46:11:82:B7:7A:0C:43:88:58:8D&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Authority Key Identifier: &#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyid:07:A0:9B:0F:8F:22:9D:AE:CF:F7:46:11:82:B7:7A:0C:43:88:58:8D&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X509v3 Basic Constraints: critical&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CA:TRUE&#10;&nbsp;&nbsp;&nbsp;&nbsp;Signature Algorithm: sha256WithRSAEncryption&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1b:9d:d1:a5:1a:2d:23:8c:09:8b:08:6c:fb:49:f6:88:e9:51:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 86:ce:19:53:74:ab:90:01:d9:ab:d1:9e:2b:56:ca:7c:a3:53:&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-13.sh</span>
    </div>
</div>
<h4 id="examinar-el-certificado-de-un-servidor-web">Examinar el certificado de un servidor web</h4>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ openssl s_client -showcerts -connect duckduckgo.com:443&#10;CONNECTED<span class="o">(</span>00000003<span class="o">)</span>&#10;<span class="nv">depth</span><span class="o">=</span><span class="m">2</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">OU</span> <span class="o">=</span> www.digicert.com, <span class="nv">CN</span> <span class="o">=</span> DigiCert Global Root CA&#10;verify <span class="k">return</span>:1&#10;<span class="nv">depth</span><span class="o">=</span><span class="m">1</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">CN</span> <span class="o">=</span> DigiCert SHA2 Secure Server CA&#10;verify <span class="k">return</span>:1&#10;<span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> Pennsylvania, <span class="nv">L</span> <span class="o">=</span> Paoli, <span class="nv">O</span> <span class="o">=</span> <span class="s2">&#34;Duck Duck Go, Inc.&#34;</span>, <span class="nv">CN</span> <span class="o">=</span> *.duckduckgo.com&#10;verify <span class="k">return</span>:1&#10;---&#10;Certificate chain&#10; <span class="m">0</span> s:C <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> Pennsylvania, <span class="nv">L</span> <span class="o">=</span> Paoli, <span class="nv">O</span> <span class="o">=</span> <span class="s2">&#34;Duck Duck Go, Inc.&#34;</span>, <span class="nv">CN</span> <span class="o">=</span> *.duckduckgo.com&#10;   i:C <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">CN</span> <span class="o">=</span> DigiCert SHA2 Secure Server CA&#10;-----BEGIN CERTIFICATE-----&#10;MIIGNTCCBR2gAwIBAgIQAx42ydSKbld6na9pgqdX4zANBgkqhkiG9w0BAQsFADBN&#10;MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E&#10;...&#10;-----END CERTIFICATE-----&#10; <span class="m">1</span> s:C <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">CN</span> <span class="o">=</span> DigiCert SHA2 Secure Server CA&#10;   i:C <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">OU</span> <span class="o">=</span> www.digicert.com, <span class="nv">CN</span> <span class="o">=</span> DigiCert Global Root CA&#10;-----BEGIN CERTIFICATE-----&#10;MIIElDCCA3ygAwIBAgIQAf2j627KdciIQ4tyS8+8kTANBgkqhkiG9w0BAQsFADBh&#10;MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3&#10;...&#10;-----END CERTIFICATE-----&#10;---&#10;Server certificate&#10;<span class="nv">subject</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> Pennsylvania, <span class="nv">L</span> <span class="o">=</span> Paoli, <span class="nv">O</span> <span class="o">=</span> <span class="s2">&#34;Duck Duck Go, Inc.&#34;</span>, <span class="nv">CN</span> <span class="o">=</span> *.duckduckgo.com&#10;&#10;<span class="nv">issuer</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> DigiCert Inc, <span class="nv">CN</span> <span class="o">=</span> DigiCert SHA2 Secure Server CA&#10;&#10;---&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>script-14.sh</span>
    </div>
</div>
<h3 id="autoridad-de-certificación">Autoridad de certificación</h3>
<p>Los comandos anteriores permiten generar un certificado autofirmado válido para proporcionar una conexión cifrada entre un servidor y un cliente como es el caso de un servidor web y un navegador web. Pero los certificados autofirmados no permiten todas las validaciones de seguridad, el cliente no puede confiar en que realmente se está conectando al nombre del dominio del servidor que el certificado incluye y por ello en el cliente hay que eliminar la validación de comprobación del certificado. Para mayor seguridad y en un entorno de producción se ha de utilizar una autoridad de certificación, es posible <a href="https://picodotdev.github.io/blog-bitix/2020/08/comandos-para-crear-una-autoridad-de-certificacion-ca-con-openssl/">crear una autoridad de certificación propia con comandos de OpenSSL</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.openssl.org/">OpenSSL</a></li>
<li><a href="http://www.sslshopper.com/article-most-common-openssl-commands.html">The Most Common OpenSSL Commands</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="seguridad"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/</id>
        <title>Iniciar la Raspberry Pi desde un disco o memoria USB</title>
        <updated>2016-09-23T18:30:00+01:00</updated>
        <published>2014-01-10T12:41:33+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La Raspberry Pi utiliza para arrancar una tarjeta SD en todo caso, sin embargo, dada la lentitud de lectura y escritura de esta es recomendable instalar el sistema en una memoria USB o disco duro externo. No es muy complicado y el aumento de rendimiento es notable.</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/raspberrypi.svg" width="200" height="255" alt="Raspberry Pi" title="Raspberry Pi"  class=""></p>
</div>
<p>Por defecto la Raspberry Pi se instala en una tarjeta SD y se inicia desde ella, sin embargo, la tarjeta SD es muy lenta tanto en la lectura como en la escritura de datos y cuando tiene que hacerlo de forma intensiva el sistema queda sin responder y aparentemente atascado. Para aumentar muy notablemente el rendimiento de la Raspberry Pi podemos instalar la partición del sistema en una memoria USB o disco duro externo.</p>
<p>En la guía de <a href="https://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch.html">Instalación de la Raspberry Pi</a> expliqué como instalar la distribución <a href="https://archlinuxarm.org/">Arch Linux ARM</a> en una tarjeta SD, esa guía será el punto de partida para esta entrada. La Raspberry Pi inicia el sistema desde la tarjeta SD por lo que aunque instalemos el sistema en un dispositivo USB seguiremos necesitando la tarjeta SD para que contenga al menos la partición de arranque (boot).</p>
<p>Teniendo instalado en la tarjeta SD tanto la partición de arranque como la partición del sistema donde está realmente la distribución que hayamos instalado necesitaremos mover la partición del sistema a una dispositivo USB. Para ello podemos utilizar el comando dd, deberemos conocer el dispositivo asignado a la tarjeta SD cuando la introduzcamos en el ordenador, para ello podemos usar el comando <em>lsblk</em>:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/images/lsbk_hu8c4cf5de9d804ac479808dece73576ba_51781_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/images/lsbk_hu8c4cf5de9d804ac479808dece73576ba_51781_300x200_fit_box_3.png" width="300" height="167"  class="lozad "></a></p>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># dd if=/dev/mmcblk0p2 of=mmcblk0p2.img bs=4096 conv=notrunc</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>leer-particion.sh</span>
    </div>
</div>
<p>El comando dd creará un archivo en nuestro ordenador con la imagen de la partición del sistema de la Raspberry Pi. A continuación deberemos escribir esa imagen de la partición en el dispositivo USB también usando el comando dd. Hay que tener en cuenta que al escribir la imagen perderemos todos los datos que tengamos en el dispositivo destino. En el ejemplo, el dispositivo <em>/dev/sdb1</em> se corresponde con la partición del dispositivo USB en el que copiaremos la partición del sistema de la Raspberry Pi.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># dd if=mmcblk0p2.img of=/dev/sdb1 bs=4096 conv=notrunc</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>escribir-particion.sh</span>
    </div>
</div>
<p>Una vez escrita la imagen muy probablemente deberemos redimensionar la partición para aprovechar todo el espacio de almacenamiento del dispositivo. Con <a href="http://gparted.org/">GParted</a> podemos hacerlo de forma muy sencilla. Seleccionamos <em>/dev/sdb1</em>, desmontamos la partición y redimensionamos el espacio para la partición, finalmente pulsamos en la opción «Editar&gt; Aplicar operaciones».</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/images/gparted_hu4379d86290f2ec785f27113182f1f999_34060_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Redimiensionado de patición con GParted"><img src="https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/images/gparted_hu4379d86290f2ec785f27113182f1f999_34060_300x200_fit_box_3.png" width="288" height="200" alt="Redimiensionado de patición con GParted" title="Redimiensionado de patición con GParted"  class="lozad "></a></p>
</figure>
</div>
<p>El paso final que deberemos hacer es cambiar en la partición de arranque que sigue estando en la tarjeta SD un archivo para indicar que la partición del sistema ahora está en un dispositivo USB. Probablemente la partición del sistema que deberemos indicar sea <em>/dev/sda1</em>, con este valor modificamos el archivo <em>cmdline.txt</em> y lo asignamos al parámetro root, deberemos tener algo como como lo siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">smsc95xx.turbo_mode=N dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=tty1 root=/dev/sda1 rootfstype=ext4 elevator=noop rootwait&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>cmdline.txt</span>
    </div>
</div>
<p>A partir de este punto con la tarjeta SD insertada en la Raspberry Pi y el dispositivo USB conectado a uno de los puertos se iniciará la Pi desde la partición del sistema del dispositivo USB en vez de la tarjeta SD. Enseguida se nota un aumento de rendimiento considerable en el tiempo de inicio y las perdidas de respuesta porque se está leyendo o escribiendo serán mucho menores o nulos con la mayor tasa de transferencia de los dispositivos USB.</p>
<p>Aunque la tarjeta SD es suficiente para usarla como <a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/">Media Center en la Raspberry Pi</a> al navegar por los menús notaremos que se atasca y el tiempo de arranque es notable. Con la partición del sistema instalada en una memoria o disco duro externo siguiendo el método descrito en esta entrada notaremos un menor tiempo de arranque de <a href="http://www.geexbox.org/">GeeXboX</a> y evitaremos los atascos en los menus de <a href="http://xbmc.org/">XBMC</a>.</p>
<p>Los elementos básicos para usar este miniordenador son la <a href="https://amzn.to/2cN0d6L">placa de la Raspberry Pi</a>, una <a href="https://amzn.to/2dfFJT7">cargador de 3A</a> junto con una <a href="https://amzn.to/2cN0SFi">tarjeta SD</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01CD5VC92&amp;linkId=fecbf2f5ac6495bca6b3e686bc0fa2e0&amp;internal=1" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01566WOAG&amp;linkId=1a779c49b1d7df6206e1c1428af645e7&amp;internal=1" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B00J2BU7WO&amp;linkId=f3093eebc185e207e98f6b5c53cd2c3a&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch.html">Guía instalación Raspberry Pi con Arch Linux ARM (Parte I, instalación base)</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch_22.html">Guía instalación Raspberry Pi con Arch Linux ARM (Parte II, programas)</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/">Raspberry Pi como Media Center con GeeXboX</a></li>
<li><a href="http://www.diverteka.com/?p=580">RaspBerry en USB</a></li>
<li><a href="https://www.raspberrypi.org/phpBB3/viewtopic.php?f=29&amp;t=44177">HOWTO: Move the filesystem to a USB stick</a></li>
<li><a href="https://www.raspberrypi.org/phpBB3/viewtopic.php?f=91&amp;t=9117">Using usb hard drive as default boot and storage?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/</id>
        <title>Raspberry Pi como Media Center con GeeXboX</title>
        <updated>2018-02-08T16:30:00+01:00</updated>
        <published>2014-01-03T20:00:00+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/geexbox.png" width="200" height="52" alt="GeeXboX" title="GeeXboX"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/raspberrypi.svg" width="200" height="255" alt="Raspberry Pi" title="Raspberry Pi"  class=""></p>
</div>
<p>La Raspberry Pi es un computador del tamaño de una tarjeta de crédito que se puede usar para diferentes propósitos. Hasta hace no mucho a mi me servía para descargar películas mediante torrent, sin embargo, puede usarse perfectamente para otros propósitos muy interesantes como usarla como Media Center en una televisión que no es una Smart TV o como Media Center con más opciones.</p>
<p>Dada la popularidad que tiene la Raspberry Pi disponemos de varias distribuciones con soporte para usar la Raspberry Pi como centro multimedia de nuestro salón. Las principales son:</p>
<ul>
<li><a href="https://openelec.tv/">OpenELEC</a></li>
<li><a href="https://kodi.tv/">Kodi</a></li>
<li><a href="https://www.geexbox.org/">GeeXboX</a></li>
<li><a href="https://osmc.tv/">OSMC</a></li>
</ul>
<p>Las tres opciones tienen la similitud que son muy fácilmente instalables (también para alguien sin muchos conocimientos técnicos) y que se basan en el programa <a href="https://kodi.tv/">Kodi</a> para ofrecer la funcionalidad de Media Center. La mayor diferencia entre las tres opciones están en los dispositivos soportados, Raspberry Pi al ser muy popular es soportada perfectamente en las tres opciones, RaspMBC está destinada específicamente para la Pi y GeeXboX y OpenELEC soportan algunos otros dispositivos como sistemas i386, x64_86, Cubox 1 / 2 / Pro, Utilite, Cubiboard o incluso Apple TV. Otras diferencias es que RaspBMC está basado en la distribución <a href="https://www.debian.org/">Debian</a> mientras que OpenELEC y GeeXboX no se basan en ninguna y están desarrolladas específicamente para actuar como Media Center. GeeXboX tiene algunas características adicionales como un servidor HTTP, un servidor FTP, SSH, un cliente torrent con una interfaz accesible con el navegador, compatible con NFS, Samba, UPnP y DLNA.</p>
<p>XBMC permite reproducir música, vídeo, películas, ofrece soporte para subtítulos, series, fotos incluso ver y grabar en directo la televisión con <a href="https://www.mythtv.org/">MythTV</a> además puede ser controlado conectándonos vía HTTP o <a href="http://www.geexbox.org/geexbox-daily-usage-iphone-and-android-remote-control/">con nuestro teléfono inteligente</a> ya sea <a href="https://www.android.com/">Android</a> o iPhone aunque la Raspberry Pi al no disponer de WiFi de por sí deberemos tenerla conectada a la red de nuestra casa con un cable ethernet.</p>
<p>En esta entrada explicaré como instalar GeeXboX en la Raspberry Pi y de esta manera dotar a nuestra televisión de características que quizá no tenga. El proceso no es nada complicado y en muy poco tiempo podremos empezar a usar la Raspberry Pi como centro multimedia si nuestra televisión dispone de una entrada para cable HDMI. El material que necesitaremos para esta guía es:</p>
<ul>
<li>Una Rasbpberry Pi y su adaptador de energía.</li>
<li>Una tarjeta SD de unos 8 GiB o más.</li>
<li>Un cable HDMI (por el se transmitirá el sonido y la imagen).</li>
<li>Una televisión con entrada HDMI.</li>
</ul>
<p>Lo primero que haremos es <a href="http://www.geexbox.org/download/">descargar la última versión de GeeXboX</a> para la Raspberry Pi y el <a href="http://www.geexbox.org/geexbox-for-embedded-devices-creating-a-bootable-sd-card/">script para nuestro dispositivo</a> que hará todo el proceso de instalación, en este caso para la Pi. Antes de grabar la imagen en la tarjeta SD deberemos conocer el nombre del dispositivo de la tarjeta SD, para ello ejecutamos los comandos <em>lsblk</em> y <em>blkid</em> en modo superusuario antes y después de introducir la tarjeta SD. Anotamos el nombre y lo usamos para ejecutar el siguiente comando sustituyendo el dispositivo anotado por el de este comando si es distinto que copiará la imagen del sistema a la tarjeta SD.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo ./make-sdcard /dev/mmcblk0 geexbox-3.1.raspberrypi.tar.bz2&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>instalacion-geexbox.sh</span>
    </div>
</div>
<p>Este comando tardará un poco de tiempo dada la lentitud de las tarjetas SD. Una vez termine quizá debamos expandir la partición del sistema para aprovechar todo el espacio de la tarjeta SD. Para expandir la partición del sistema podemos usar <a href="http://gparted.org/">GParted</a>. Y esto es lo mínimo imprescindible para instalar GeeXboX en una tarjeta SD para la Pi. GeeXboX tiene el siguiente aspecto.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-inicio_hu14095cfdd1099308f825400c6b863e20_41205_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-inicio_hu14095cfdd1099308f825400c6b863e20_41205_300x200_fit_q90_box.jpg" width="262" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-ajustes_hudf5748fba26e5e08f4132ecad86ae975_87113_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-ajustes_hudf5748fba26e5e08f4132ecad86ae975_87113_300x200_fit_q90_box.jpg" width="262" height="200"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-ajustes-video_hu6a81883a71640b42b0aed8e136ba7b31_54712_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-ajustes-video_hu6a81883a71640b42b0aed8e136ba7b31_54712_300x200_fit_q90_box.jpg" width="262" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-apariencia-ajustes_hu7515213a32809a4c7d6a205fdeced3b3_48935_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-apariencia-ajustes_hu7515213a32809a4c7d6a205fdeced3b3_48935_300x200_fit_q90_box.jpg" width="262" height="200"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-servicios_hu42e34e584910479e390e4c74e3dce1fc_35019_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-servicios_hu42e34e584910479e390e4c74e3dce1fc_35019_300x200_fit_q90_box.jpg" width="262" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-reproduccion_hu3e550307345196d79d008cda983a37b6_61532_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/images/geexbox-reproduccion_hu3e550307345196d79d008cda983a37b6_61532_300x200_fit_q90_box.jpg" width="262" height="200"  class="lozad "></a></p>
</figure>
</div>
<p>Como apunte a tener en cuenta es que para reproducir películas en formato imagen de DVD (iso) <em>intuyo</em> que se necesita adquirir la licencia MPEG-2 en la <a href="http://www.raspberrypi.com/license-keys/">tienda de la propia página de Raspberry Pi</a>. Para otros formatos como DivX (avi) o Matroska (mkv) no tendremos ningún problema en reproducir las películas y van totalmente fluídas. Otras opciones son bastante más potentes pero Pi ya tiene capacidad suficiente para reproducir películas a 1080p.</p>
<p>A pesar de lo interesante de la Raspberry Pi esta tiene algunas incomodidades. Una incomodidad es que la tarjeta SD es muy lenta comparada con un disco duro conectado por el puerto USB. La tasa de transferencia de la tarjeta SD es suficiente para reproducir películas sin ningún problema pero al navegar entre los menús de  XBMC notaremos ciertos atascos mientas se accede a la tarjeta SD. Una tarjeta SD de 32 GB tiene espacio suficiente para almacenar varias películas y los archivos de GeeXboX.</p>
<p>Usando la <a href="https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/">Raspberry Pi con un disco duro externo o memoria USB</a> hará que GeeXboX se inicie mucho más rápido, evitaremos los atascos en la navegación de los menús y el copiar las películas al disco USB nos llevará menos tiempo que copiarlas a la tarjeta SD. Pero tampoco es una solución exenta de sus pequeños inconvenientes ya que los puertos USB de la Raspberry Pi son incapaces de proporcionar suficiente energía a un disco duro externo de 2.5&quot; para hacerlo funcionar por lo que necesitaremos un concentrador de puertos USB alimentado, son unos cuantos cables más que necesitaremos si pretendemos tener las películas almacenadas de esta forma. Si queremos usar la Raspberry Pi usando un disco duro externo USB podemos seguir las instrucciones de otra entrada que escribiré sobre como Usar la Raspberry Pi con un disco duro externo USB.</p>
<p>Otro inconveniente de la Raspberry Pi es que no dispone de WiFi (si la tercera versión de esta placa) y algunas funcionalidades de GeeXboX se proporcionan cuando la Pi está conectada a internet con lo que perderemos esas funcionalidades o deberemos tener la suerte de tener el router cerca para conectar el cable ethernet, también útil si pretendemos controlar XMBC con nuestro teléfono en vez de con un ratón. Aunque esas opciones proporcionadas al estar conectados a internet tampoco son indispensables.</p>
<p>Algunos servicios y contenidos están bloqueados según la ubicación del usuario normalmente basado en la dirección IP, <a href="https://picodotdev.github.io/blog-bitix/2019/02/proyecto-de-mejora-de-smart-tv-usando-una-vpn-para-acceder-a-contenido-restringido-por-ip/">evitar bloqueo según ubicación con una VPN</a> es una forma de acceder a los contenidos o servicios bloqueados.</p>
<p>Los elementos básicos para usar este miniordenador Pi son la <a href="https://amzn.to/3wPcyzh">placa de la Raspberry Pi</a>, una <a href="https://amzn.to/2YIN89T">carcasa</a>, una <a href="https://amzn.to/2dfFJT7">cargador de 3A</a> junto con una <a href="https://amzn.to/3opHZfL">tarjeta SD</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07BFH96M3&amp;linkId=a828c25f509cfe498f3f8be91e7c9a75" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VD5L1VY&amp;linkId=f7a5d402571fb5dd48fa2311dc169469" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01566WOAG&amp;linkId=1c7d89fa46e38c81f0e35cb1518e80ea" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07CXXBTST&amp;linkId=aee5521403e014f5b256191d116ac4b3" title="Amazon" class="lozad"></iframe>
</div>
<p>¡A disfrutar!</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/06/guia-instalacion-raspberry-pi-con-arch.html">Guía instalación Raspberry Pi con Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/">Iniciar la Raspberry Pi desde un disco o memoria USB</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/</id>
        <title>Firmar digitalmente documentos con el DNIe y Sinadura</title>
        <updated>2015-05-28T20:00:00+02:00</updated>
        <published>2013-12-21T11:34:55+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/dnie.jpg" width="200" height="150" alt="DNIe" title="DNIe"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/sinadura.png" width="200" height="118" alt="Sinadura" title="Sinadura"  class=""></p>
</div>
<p>Ya he comentado <a href="https://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html">como instalar un lector de tarjetas inteligentes en linux para usar el DNI electrónico</a> y que una vez instalado podemos darle algún uso útil como por ejemplo <a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/">autenticarnos con en DNI</a> en las páginas que lo soporten como medio de autenticación y el navegador Firefox. También he comentado <a href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/">como usar el DNI con el cliente de correo Evolution para enviar correos firmados digitalmente</a>.</p>
<p>En esta entrada voy a comentar como firmar digitalmente documentos en cualquier formato electrónico con la aplicación de software libre <a href="http://www.sinadura.net/es/">Sinadura</a>. La firma que hagamos con el DNIe sobre estos documentos puede tener la misma validez legal que la firma manuscrita.</p>
<p>Primeramente deberemos descargar la última versión de <a href="http://www.sinadura.net/es/">Sinadura</a> según la arquitectura de nuestro procesador, de 32 bits o de 64 bits y la plataforma linux o windows. El archivo descargado es un instalador que deberemos ejecutarlo, como es un programa Java deberemos tener instalado previamente un entorno de ejecución de Java como el <a href="http://openjdk.java.net/">OpenJDK</a>. Lo ejecutamos con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ java -jar sinaduraDesktop-3.3.3-unix64-installer.jar&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>instalar-sinadura.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/instalador-sinadura_hu68a4d7d461ae60dbd369a797edc59938_25927_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Instalador Sinadura"><img src="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/instalador-sinadura_hu68a4d7d461ae60dbd369a797edc59938_25927_300x200_fit_box_3.png" width="267" height="200" alt="Instalador Sinadura" title="Instalador Sinadura"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez instalado sinadura y también teniendo instalado el lector de tarjetas inteligentes para el DNI y funcionando deberemos conectarlo al ordenador e introducir el DNI. Iniciaremos sinadura con que se encuentra dentro del directorio de instalación de Sinadura:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./sinadura.sh&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>iniciar-sinadura.sh</span>
    </div>
</div>
<p>Inicialmente veremos una pantalla como la siguiente con una lista de archivos vacíos y una serie de botones para realizar varias acciones.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/sinadura_hu42008127714f391da80af9fdf141e6e0_39793_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Sinadura"><img src="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/sinadura_hu42008127714f391da80af9fdf141e6e0_39793_300x200_fit_box_3.png" width="285" height="200" alt="Sinadura" title="Sinadura"  class="lozad "></a></p>
</figure>
</div>
<p>Con Sinadura y el DNI podemos firmar digitalmente cualquier tipo de archivo pero entre los archivos de tipo pdf y el resto hay diferencias. En el caso de los pdf la firma se incrusta en el propio documento y en resto se crea un nuevo archivo con la firma y el documento original, el archivo nuevo creado tiene la extensión .sar. Para firmar un documento deberemos añadirlo a la vista con el botón «Añadir documento» y posteriormente firmarlo con el botón «Firmar». Para realizar la firma se nos pedirá que introduzcamos el PIN secreto que nos proporcionaron al emitirnos el DNI en la oficina de expedición.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/pin_hub857ad5b36930a2aa7431469900578d7_10148_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Preferencias de Sinadura"><img src="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/pin_hub857ad5b36930a2aa7431469900578d7_10148_300x200_fit_box_3.png" width="300" height="124" alt="Preferencias de Sinadura" title="Preferencias de Sinadura"  class="lozad "></a></p>
</figure>
</div>
<p>En el caso de los archivos pdf Sinadura por defecto incrusta además de la firma una marca de agua en la primera página aunque se pueden cambiar algunas preferencias en «Archivo&gt; Preferencias»:</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/preferencias-sinadura_hu2740acbab032b8a029971354229041fc_50975_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Preferencias de Sinadura"><img src="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/preferencias-sinadura_hu2740acbab032b8a029971354229041fc_50975_300x200_fit_box_3.png" width="277" height="200" alt="Preferencias de Sinadura" title="Preferencias de Sinadura"  class="lozad "></a></p>
</figure>
</div>
<p>Los archivos .sar creados para archivos que no son pdf tienen el siguiente contenido, además del archivo original una serie de archivos .xml que contendrán la firma (son archivos zip con extensión .sar):</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/sinadura-documento-firmado_hucaedab6d34c4f863070c4a81eee2f5b0_50569_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Documento firmado con Sinadura"><img src="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/images/sinadura-documento-firmado_hucaedab6d34c4f863070c4a81eee2f5b0_50569_300x200_fit_box_3.png" width="259" height="200" alt="Documento firmado con Sinadura" title="Documento firmado con Sinadura"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez firmados los archivos podemos enviarlos por correo electrónico y la persona que los reciba podrá validarlos también con Sinadura. Para ello se debe añadir el archivo y pulsar el botón «Validar».</p>
<p>Si queremos firmar muchos archivos a la vez usar la interfaz gráfica nos va a resultar lento y un trabajo repetitivo. En caso de querer hacer firmas masivas de archivos es mejor usar la linea de comandos o un proceso sh que nos haga la tarea. Sinadura también proporciona una utilidad basada en la linea de comandos que debemos usar de la siguiente forma:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./sinadura-console.sh --sign --pdf&#10;  --input /home/picodotdev/Software/personal/PlugInTapestry/PlugInTapestry.pdf&#10;  --output /home/picodotdev/Software/personal/PlugInTapestry/PlugInTapestry-signed.pdf&#10;  --preferences /home/picodotdev/.sinadura/preferences/preferences-console.properties&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sinadura-console-pdf.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ./sinadura-console.sh --sign --xades&#10;  --input /home/picodotdev/Software/personal/PlugInTapestry/PlugInTapestry.pdf.zip&#10;  --output /home/picodotdev/Software/personal/PlugInTapestry/PlugInTapestry-signed.zip&#10;  --preferences /home/picodotdev/.sinadura/preferences/preferences-console.properties</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sinadura-console-xades.sh</span>
    </div>
</div>
<p>Con el siguiente archivo de preferencias:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">preferencias.radioCertType.active=1&#10;hardware.dispositive=/usr/lib64/opensc-pkcs11.so&#10;&#10;pdf.stamp.enable=false&#10;pdf.stamp.height=122&#10;pdf.stamp.path=/home/picodotdev/.sinadura/preferences/sinadura150.png&#10;pdf.stamp.y=17&#10;pdf.stamp.x=17&#10;pdf.stamp.width=122&#10;pdf.visible=false&#10;pdf.location=Bilbao&#10;pdf.reason=powered by zylk.net&#10;pdf.certified=1&#10;&#10;ks.cache=/home/picodotdev/.sinadura/preferences/cache.jks&#10;ks.trusted=/home/picodotdev/.sinadura/preferences/trusted.jks&#10;ks.cache.pass=sinadura&#10;ks.trusted.pass=sinadura&#10;&#10;callback.handler=net.esle.sinadura.core.password.ConsoleCallbackHandler&#10;certificate.password= </code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>preferences-console.properties</span>
    </div>
</div>
<p>La linea de comandos producirá el mismo resultado que el uso con la interfaz gráfica. Realmente los ejemplos de firma por consola no me han funcionado, en ambos casos me da una excepción NullPointerException que no es muy aclarativa de lo que está sucediendo, probablemente sea que falta algo en el archivo de preferencias.</p>
<p>En definitiva, la firma digital de documentos es otro uso que le podemos dar al DNI electrónico y con Sinadura realizarlo es bastante sencillo.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html">Crear una par de claves GPG</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/como-usar-gpg-con-evolution.html">Como firmar correos electrónicos con GPG</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html">Instalar un lector de tarjetas inteligentes y usar el DNIe en Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/">Usar el DNI electrónico con Firefox en Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/">Enviar correos electrónicos firmados con el DNIe y Evolution</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
                <category term="hardware"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/</id>
        <title>Enviar correos electrónicos firmados con el DNIe y Evolution</title>
        <updated>2015-05-28T20:00:00+02:00</updated>
        <published>2013-12-13T16:39:07+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/dnie.jpg" width="200" height="150" alt="DNIe" title="DNIe"  class=""></p>
</div>
<p>Otra forma de la que podemos sacar partido al DNI electrónico además de para <a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/">identificarnos en sitios web</a> que lo soporten como medio de autenticación es usarlo para firmar digitalmente los correos electrónicos que enviamos. Ya he comentado <a href="https://elblogdepicodev.blogspot.com.es/2013/11/como-usar-gpg-con-evolution.html">como firmar correos electrónicos con GPG</a> pero hacerlo con el DNI electrónico tiene la ventaja de que no necesitaremos <a href="https://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html">crear una par de claves GPG</a> sino que con tener el DNI e <a href="https://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html">instalar un lector de tarjetas inteligentes</a> será suficiente.</p>
<p>En esta entrada explicaré como usar el DNI electrónico para firmar digitalmente correos usando el cliente de correo <a href="https://projects.gnome.org/evolution/">Evolution</a>. Primeramente necesitaremos hacer una configuración adicional a la que hemos necesitado para poder usar el lector de tarjetas inteligentes y el DNIe en Linux. Y es usar el siguiente comando tal y como está comentado en <a href="https://forja.cenatic.es/plugins/mediawiki/wiki/opendnie/index.php/Documentacion_Aplicaciones_Evolution#Configuraci.C3.B3n_del_DNIe_en_el_cliente_de_correo_Evolution">esta página</a> cambiando el directorio home del usuario por el que corresponda:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ modutil -add <span class="s2">&#34;OpenSC-OpenDNIe&#34;</span> -libfile /usr/lib/opensc-pkcs11.so -dbdir sql:/home/picodotdev/.pki/nssdb&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>comando-opensc-dnie.sh</span>
    </div>
</div>
<p>A continuación, el proceso es similar a como se configura la firma con claves GPG, con el lector de tarjetas inteligentes conectado al equipo y el DNI electrónico introducido accedemos a las propiedades de la cuenta, a la sección seguridad y en el apartado MIME seguro (S/MIME) seleccionamos nuestro certificado. Si queremos que nuestros mensajes se firmen automaticamente debemos marcar la opción «Firmar siempre los mensajes salientes cuando se use esta cuenta». Habiendo ejecutado el comando <em>modutil</em> cuando pulsemos el botón seleccionar en el apartado S/MIME se nos solicitará el PIN secreto de nuestro DNIe.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/pin_huf0595318f8af9b84115ea581f1130ed5_19486_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diálogo de solicitud de PIN con el DNIe"><img src="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/pin_huf0595318f8af9b84115ea581f1130ed5_19486_300x200_fit_box_3.png" width="300" height="105" alt="Diálogo de solicitud de PIN con el DNIe" title="Diálogo de solicitud de PIN con el DNIe"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/seleccion-certificado_hu4a5cf73c3e77d8aba937a7ed3a5b9903_28518_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Selección de certificado digital con el DNIe"><img src="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/seleccion-certificado_hu4a5cf73c3e77d8aba937a7ed3a5b9903_28518_300x200_fit_box_3.png" width="300" height="132" alt="Selección de certificado digital con el DNIe" title="Selección de certificado digital con el DNIe"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/seguridad-evolution_hu005b504728617080d8e086185b7eff8d_80407_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diálogo de preferencias de seguridad de Evolution para el DNIe"><img src="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/seguridad-evolution_hu005b504728617080d8e086185b7eff8d_80407_300x200_fit_box_3.png" width="247" height="200" alt="Diálogo de preferencias de seguridad de Evolution para el DNIe" title="Diálogo de preferencias de seguridad de Evolution para el DNIe"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez con las propiedades de la cuenta configurada para que Evolution use nuestro DNI electrónico, si no hemos marcado la opción «Firmar siempre los mensajes&hellip;» podemos realizarlo al escribir el propio correo marcando la opción «Opciones&gt; Firmar con S/MIME». Al enviar un correo electrónico firmado se añadirá automáticamente un adjunto con la firma de nombre «smime.sp7». Al contrario que GPG la firma está en un formato binario y es dificilmente legible con un lector de texto plano.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/confimacion-firma_hu89b37c564cb38f7de3b5bcbbe9cdca2b_17647_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Confirmación de firma digital con el DNIe"><img src="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/confimacion-firma_hu89b37c564cb38f7de3b5bcbbe9cdca2b_17647_300x200_fit_box_3.png" width="300" height="121" alt="Confirmación de firma digital con el DNIe" title="Confirmación de firma digital con el DNIe"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/mensaje-firmado-dnie_hu58952680ed62c9445c6bc78c98ef82a5_29346_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Mensaje firmado con el DNIe"><img src="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/images/mensaje-firmado-dnie_hu58952680ed62c9445c6bc78c98ef82a5_29346_300x200_fit_box_3.png" width="300" height="121" alt="Mensaje firmado con el DNIe" title="Mensaje firmado con el DNIe"  class="lozad "></a></p>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html">Crear una par de claves GPG</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/como-usar-gpg-con-evolution.html">Como firmar correos electrónicos con GPG</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html">Instalar un lector de tarjetas inteligentes y usar el DNIe en Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/">Usar el DNI electrónico con Firefox en Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/">Firmar digitalmente documentos con el DNIe y Sinadura</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
                <category term="hardware"/>
            
                <category term="software"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/</id>
        <title>Usar el DNI electrónico con Firefox en Linux</title>
        <updated>2015-04-10T20:00:00+02:00</updated>
        <published>2013-12-06T14:07:58+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/dnie.jpg" width="200" height="150" alt="DNIe" title="DNIe"  class=""></p>
</div>
<p>Una vez hemos conseguido <a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/">instalar el DNIe en Linux</a> correctamente podemos empezar a darle alguna utilidad más allá de cuando se nos require para acreditar nuestra identidad. Como veremos en esta entrada podemos usar el DNI electrónico para hacer varios trámites administrativos y consultas con la administración pública, empresas o entidades que en su web soporten el DNIe como medio de autenticación.</p>
<p>En esta entrada explicaré como usar el DNIe electrónico con la combinación del navegador <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> y <a href="https://www.linux.com/">Linux</a>. Para ello primeramente debemos hacer que Firefox detecte el lector de tarjetas inteligentes, desde el menú de Firefox vamos a «Preferencias&gt; Avanzado&gt; Certificados&gt; Dispositivos de seguridad».</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/preferencias-firefox_hucaf53d7461ae1426dea7330c6a0d1e20_52598_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Administrador de dispositivos (1)"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/preferencias-firefox_hucaf53d7461ae1426dea7330c6a0d1e20_52598_300x200_fit_box_3.png" width="217" height="200" alt="Administrador de dispositivos (1)" title="Administrador de dispositivos (1)"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/administrador-dispositivos-1_hu16bb73d37b6f61341e97d45a89d52e7b_43021_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/administrador-dispositivos-1_hu16bb73d37b6f61341e97d45a89d52e7b_43021_300x200_fit_box_3.png" width="300" height="116"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/administrador-dispositivos-2_hub53b461256466fa1fcd9787a028f1068_64861_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Administrador de dispositivos (2)"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/administrador-dispositivos-2_hub53b461256466fa1fcd9787a028f1068_64861_300x200_fit_box_3.png" width="300" height="100" alt="Administrador de dispositivos (2)" title="Administrador de dispositivos (2)"  class="lozad "></a></p>
</figure>
</div>
<p>En esta pantalla pulsamos el botón «Cargar» e introducimos los siguientes datos:</p>
<ul>
<li>Nombre del módulo: podemos poner cualquier cosa que nos sirva para identificar el lector de tarjetas inteligentes como «Smart Card», «Lector de tarjetas inteligentes» o «PKCS#11» como le he puesto y se ve en la imagen.</li>
<li>Archivo del módulo: en el caso de Arch Linux debemos poner «/usr/lib/opensc-pkcs11.so», en otras distribuciones será algo similar si no es lo mismo.</li>
</ul>
<p>Pulsamos «Aceptar», salimos del diálogo «Dispositivos de seguridad» y reiniciamos Firefox. Para que Firefox reconozca el lector junto con el DNIe este debe estar introducido al iniciarlo sino no se nos aparecerá el diálogo solicitando el PIN del DNIe en el momento de la autenticación y no podremos usarlo, esto es así posiblemente por algún tipo de circunstancia que impide detectar el DNIe en el momento de introducirlo en Firefox, sabiéndolo no supone mayor problema. Por lo demás, esa es toda la configuración adicional necesaria para usar el DNIe con Firefox.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/lector-dnie_hu9adb103a83278f596d043e76201c9b98_73394_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Lector de tarjetas inteligentes y DNIe"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/lector-dnie_hu9adb103a83278f596d043e76201c9b98_73394_300x200_fit_q90_box.jpg" width="149" height="200" alt="Lector de tarjetas inteligentes y DNIe" title="Lector de tarjetas inteligentes y DNIe"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/dnie_hub60523681386791181984ac3bafa2bd6_52757_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="DNI electrónico"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/dnie_hub60523681386791181984ac3bafa2bd6_52757_300x200_fit_q90_box.jpg" width="300" height="188" alt="DNI electrónico" title="DNI electrónico"  class="lozad "></a></p>
</figure>
</div>
<p>Para probar que tenemos instalado el DNIe crrectamente y que Firefox es capaz de utilizarlo podemos usar la <a href="http://www.dnielectronico.es/como_utilizar_el_dnie/verificar.html">página preparada para probar el DNI</a>. Al final de la misma hay un enlace «Comprobación de certificados» que deberemos pulsar, se nos pedirá el PIN y si todo es correcto veremos una página con diversa información de nuestro DNI.</p>
<p>Con el DNI electrónico preparado podemos hacer distintos tipos de trámites o consultas, por ejemplo, muchos bancos ofrecen medios para acceder de forma electrónica, online y mediante un navegador la consulta del saldo de nuestras cuentas y operaciones que se han realizado o para hacer transferencias. Alguno de los que he visto que soportan el DNIe como medio de autenticación son <a href="https://portal.bbk.es">BBK</a>, <a href="https://www.bancosantander.es">Santander</a> y el infame <a href="http://www.bankia.com/es/">Bankia</a>, seguro que hay unos cuantos más. También otro tipo de consulta que podemos hacer es consultar los puntos de carnet de conducir que poseemos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/bbk-dnie_hu05d4ea0a174af00ccaa42df52620b540_71495_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Autenticación BBK con DNIe"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/bbk-dnie_hu05d4ea0a174af00ccaa42df52620b540_71495_300x200_fit_box_3.png" width="163" height="200" alt="Autenticación BBK con DNIe" title="Autenticación BBK con DNIe"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/dgt-puntos-carnet_hu26441261d6317eeaa2f19cc90b1a9243_124837_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Consultar puntos cárnet DGT"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/dgt-puntos-carnet_hu26441261d6317eeaa2f19cc90b1a9243_124837_300x200_fit_q90_box.jpg" width="300" height="162" alt="Consultar puntos cárnet DGT" title="Consultar puntos cárnet DGT"  class="lozad "></a></p>
</figure>
</div>
<p>Independientemente del trámite que hagamos el proceso es el mismo si se permite la autenticación mediante DNIe, conectamos el lector de tarjetas inteligentes por USB a nuestro ordenador, introducimos el DNIe, iniciamos Firefox y accedemos con él a la página donde se ofrece hacer la consulta o trámite. Hay que tener en cuenta que deberemos tener iniciado el servicio o demonio <em>pcscd</em>, manualmente o con el inicio del sistema (<a href="https://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html">consultar la guía de instalación del DNIe en Linux</a>).</p>
<p>En algún momento en el proceso de autenticación se nos pedirá el PIN secreto que posibilita usar el DNIe, apareciéndonos una ventana similar a la siguiente para introducirlo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/pin_hu1756a39fa33825d2ad3d5be70a4342e2_13480_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diálogo de solicitud de PIN con el DNIe"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/pin_hu1756a39fa33825d2ad3d5be70a4342e2_13480_300x200_fit_box_3.png" width="300" height="114" alt="Diálogo de solicitud de PIN con el DNIe" title="Diálogo de solicitud de PIN con el DNIe"  class="lozad "></a></p>
</figure>
</div>
<p>El PIN secreto de nuestro DNI se facilita en el momento de solicitar o renovar el documento nacional de identidad, es proporcionado en un documento como el siguiente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/documento-pin-dnie-1_hu00da69e42d40cb03f1ffab5e0b8b16ae_46643_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Documento con el PIN del DNIe (1)"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/documento-pin-dnie-1_hu00da69e42d40cb03f1ffab5e0b8b16ae_46643_300x200_fit_q90_box.jpg" width="300" height="184" alt="Documento con el PIN del DNIe (1)" title="Documento con el PIN del DNIe (1)"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/documento-pin-dnie-2_hu589e0ad9bb4e2bc0c3ad396b795f5512_83191_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Documento con el PIN del DNIe (2)"><img src="https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/images/documento-pin-dnie-2_hu589e0ad9bb4e2bc0c3ad396b795f5512_83191_300x200_fit_q90_box.jpg" width="194" height="200" alt="Documento con el PIN del DNIe (2)" title="Documento con el PIN del DNIe (2)"  class="lozad "></a></p>
</figure>
</div>
<p>Al introducir el PIN hay que poner cuidado y atención, suelen ser unos cuantos números, letras y caracteres especiales que hay que teclear correctamente. Disponemos varios intentos para introducirlos correctamente, al tercero fallido el DNIe se bloqueará y tendremos que acudir a la oficina de expedición de nuestra ciudad para desbloquearlo, también podremos acudir a él para cambiar el PIN. Una vez introducido correctamente podremos continuar con nuestra consulta o trámite.</p>
<p>En definitiva, el DNIe puede evitarnos algún viaje a alguna ventanilla y podemos hacer el trámite las 24 horas sin hacer colas.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://web.cenatic.es/dnie/index.php?option=com_content&amp;view=article&amp;id=104&amp;Itemid=139">Configuración del DNI electrónico en Mozilla / Firefox</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/instalar-un-lector-de-tarjetas-inteligentes-en-arch-linux.html">Instalar un lector de tarjetas inteligentes y usar el DNIe en Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/">Enviar correos electrónicos firmados con el DNIe y Evolution</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/introduccion-la-criptografia-e-inicio-con-gpg.html">Crear una par de claves GPG</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2013/11/como-usar-gpg-con-evolution.html">Como firmar correos electrónicos con GPG</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
                <category term="hardware"/>
            
                <category term="software"/>
            
        
    </entry>
    
</feed>