name: build

on:
  workflow_call:
    inputs:
      ref:
        description: Reference to checkout
        required: true
        type: string
        default: 'main'
      java-version:
        description: Java version
        type: string
      node-version:
        description: Node version
        type: string
      setup-gradle:
        description: Setup Gradle
        type: boolean
      check-tasks:
        description: Tasks to execute for code check
        type: string
        required: true
      artifact:
        description: Artifact type
        type: string
        required: true
      artifact-name:
        description: Artifact name
        type: string
        required: true
      artifact-context:
        description: Artifact context
        type: string
        required: true
      repository:
        description: Artifact repository
        type: string
        required: true
    outputs:
      version:
        description: Next release version
        value: ${{ jobs.release.outputs.version }}
      last-version:
        description: Last release version
        value: ${{ jobs.release.outputs.last-version }}
      next-version:
        description: Next release version
        value: ${{ jobs.release.outputs.next-version }}
      sha:
        description: Release sha
        value: ${{ jobs.release.outputs.sha }}
      branch:
        description: Release branch
        value: ${{ jobs.release.outputs.branch }}
      build-number:
        description: Release build number
        value: ${{ jobs.release.outputs.build-number }}
      build-date:
        description: Release build date
        value: ${{ jobs.release.outputs.build-date }}
      image-id:
        description: Release image-id
        value: ${{ jobs.release.outputs.image-id }}
    secrets:
      GITHUB_PACKAGES_REPOSITORY_DOWNLOAD_USERNAME:
        required: true
      GITHUB_PACKAGES_REPOSITORY_DOWNLOAD_PASSWORD:
        required: true

env:
  GOOGLE_CLOUD_WORKLOAD_IDENTITY_PROVIDER: projects/118532964247/locations/global/workloadIdentityPools/runners/providers/github
  GOOGLE_CLOUD_SERVICE_ACCOUNT: gar-mgm-repository@common-1234.iam.gserviceaccount.com
  GOOGLE_ARTIFACT_REGISTRY_HOST: us-east4-docker.pkg.dev
  GOOGLE_ARTIFACT_REGISTRY_PROJECT: common-1234
  GOOGLE_ARTIFACT_REGISTRY_REPOSITORY: repository

jobs:
  check:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        task: ${{ fromJSON(inputs.check-tasks) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - name: Setup Java
        uses: ./.github/actions/setup-java
        if: ${{ inputs.java-version != null }}
        with:
          java-version: ${{ inputs.java-version }}
      - name: Setup Node
        uses: ./.github/actions/setup-node
        if: ${{ inputs.node-version != null }}
        with:
          node-version: ${{ inputs.node-version }}
      - name: Setup Gradle
        uses: ./.github/actions/setup-gradle
        if: ${{ inputs.setup-gradle }}
        with:
          github-packages-repository-download-username: ${{ secrets.GITHUB_PACKAGES_REPOSITORY_DOWNLOAD_USERNAME }}
          github-packages-repository-download-password: ${{ secrets.GITHUB_PACKAGES_REPOSITORY_DOWNLOAD_PASSWORD }}
      - name: Setup Task
        uses: ./.github/actions/setup-task
      - name: Run task ${{ matrix.task }}
        run: task ${{ matrix.task }}
  release:
    needs: [check]
    runs-on: ubuntu-22.04
    outputs:
      last-version: ${{ steps.build-information.outputs.last-version }}
      next-version: ${{ steps.build-information.outputs.next-version }}
      version: ${{ steps.build-information.outputs.version }}
      sha: ${{ steps.build-information.outputs.sha }}
      branch: ${{ steps.build-information.outputs.branch }}
      build-number: ${{ steps.build-information.outputs.build-number }}
      build-date: ${{ steps.build-information.outputs.build-date }}
      image-id: ${{ steps.docker-build-push.outputs.imageid }}
    permissions:
      contents: 'write'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - name: Setup Semantic release
        uses: ./.github/actions/setup-semantic-release
      - name: Semantic release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          unset GITHUB_ACTIONS && npx semantic-release --no-ci
      - name: Build information
        id: build-information
        shell: bash
        run: |-
          LAST_VERSION="$(cat .semantic-release-last-version)"
          NEXT_VERSION="$(cat .semantic-release-next-version)"
          VERSION="${NEXT_VERSION}"
          SHA="$(git rev-parse --short HEAD)"
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          BUILD_NUMBER="${{ github.run_number }}"
          BUILD_DATE="$(date +"%Y-%m-%dT%H-%M-%S")"
          echo "Last version: ${LAST_VERSION}"
          echo "Next version: ${NEXT_VERSION}"
          echo "Version: ${VERSION}"
          echo "SHA: ${SHA}"
          echo "Branch: ${BRANCH}"
          echo "Build number: ${BUILD_NUMBER}"
          echo "Build date: ${BUILD_DATE}"            
          echo "last-version=${LAST_VERSION}" >> $GITHUB_OUTPUT
          echo "next-version=${NEXT_VERSION}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          echo "build-number=${BUILD_NUMBER}" >> $GITHUB_OUTPUT
          echo "build-date=${BUILD_DATE}" >> $GITHUB_OUTPUT
      - name: Authenticate to Google Cloud
        id: google-cloud-auth
        uses: google-github-actions/auth@v2
        if: ${{ inputs.artifact == 'dockerfile' && inputs.repository == 'google-artifact-registry' }}
        with:
          token_format: access_token
          workload_identity_provider: ${{ env.GOOGLE_CLOUD_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GOOGLE_CLOUD_SERVICE_ACCOUNT }}
      - name: Release library
        if: ${{ inputs.artifact == 'jar-library' && github.ref_name == 'main' && github.event_name == 'push' }}
        shell: bash
        run: |-
          task release
      - name: Publish library
        if: ${{ inputs.artifact == 'jar-library' && github.ref_name == 'main' && github.event_name == 'push' }}
        run: |-
          task publish
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        if: ${{ inputs.artifact == 'dockerfile' && inputs.repository == 'google-artifact-registry' }}
        with:
          registry: ${{ env.GOOGLE_ARTIFACT_REGISTRY_HOST }}
          username: oauth2accesstoken
          password: ${{ steps.google-cloud-auth.outputs.access_token }}
      - name: Build and push docker image to Google Artifact Registry
        id: docker-build-push
        uses: docker/build-push-action@v5
        if: ${{ inputs.artifact == 'dockerfile' && inputs.repository == 'google-artifact-registry' }}
        with:
          push: true
          context: ${{ inputs.artifact-context }}
          tags: |
            ${{ env.GOOGLE_ARTIFACT_REGISTRY_HOST }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_PROJECT }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_REPOSITORY }}/${{ inputs.artifact-name }}:latest
            ${{ env.GOOGLE_ARTIFACT_REGISTRY_HOST }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_PROJECT }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_REPOSITORY }}/${{ inputs.artifact-name }}:${{ steps.build-information.outputs.sha }}
            ${{ env.GOOGLE_ARTIFACT_REGISTRY_HOST }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_PROJECT }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_REPOSITORY }}/${{ inputs.artifact-name }}:${{ steps.build-information.outputs.branch }}
            ${{ env.GOOGLE_ARTIFACT_REGISTRY_HOST }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_PROJECT }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_REPOSITORY }}/${{ inputs.artifact-name }}:${{ steps.build-information.outputs.version }}
          build-args: |
            ARTIFACT_NAME=${{ inputs.artifact-name }}
            GITHUB_PACKAGES_REPOSITORY_DOWNLOAD_USERNAME=${{ secrets.GITHUB_PACKAGES_REPOSITORY_DOWNLOAD_USERNAME }}
            GITHUB_PACKAGES_REPOSITORY_DOWNLOAD_PASSWORD=${{ secrets.GITHUB_PACKAGES_REPOSITORY_DOWNLOAD_PASSWORD }}
            VERSION=${{ steps.build-information.outputs.version }}
            SHA=${{ steps.build-information.outputs.sha }}
            BUILD_NUMBER=${{ steps.build-information.outputs.build-number }}
            BUILD_DATE=${{ steps.build-information.outputs.build-date }}
