<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/2014/</id>
    <updated>2014-12-24T16:02:04+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/</id>
        <title>Hemeroteca #6</title>
        <updated>2014-12-24T18:00:00+02:00</updated>
        <published>2014-12-24T16:02:04+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/octopress.png" width="300" height="300" alt="Octopress" title="Octopress"  class=""></p>
</div>
<p>Seis nuevos meses para el Blog Bitix cumpliendo un año como tal y siendo la continuación de los casi cuatro años de <a href="https://elblogdepicodev.blogspot.com.es">El blog de pico.dev</a>. Otro año que finaliza y toca hacer <a href="https://picodotdev.github.io/blog-bitix/2014/">recapitulación de los que he escrito durante este tiempo</a>, 26 nuevos artículos escritos con puntualidad uno por semana y publicados el viernes o sábado.</p>
<p>Aunque aún no puedo usar profesionalmente el <em>framework</em> web <a href="https://tapestry.apache.org/">Apache Tapestry</a> con el realmente me divierto programando sigo escribiendo sobre él con algunos temas interesantes tales que cómo usar un CDN, cómo crear plantillas para dar un aspecto común a todas las páginas de la aplicación, una comparativa entre el modelo «pull» que usa Tapestry y el modelo «push» que normalmente se usa en los <em>framework</em> basados en acciones, cómo crear una doble barra de botones sin duplicar el mismo código, como forzar el uso de https o la anotación Cached. Todo este contenido lo he añadido al <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">libro PlugIn Tapestry</a> y que puedes descargar de forma totalmente libre en varios formatos. No está mal y aún tengo más contenido pendiente por publicar tal que como embeber una aplicación web usando tomcat-embed de forma que la aplicación esté autocontenida y el despliegue sea más sencillo y evitemos problemas, hacer un ejemplo con el componente Grid que muestre sus grandes posibilidades y la gran cantidad de trabajo que nos puede ahorrar, &hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/actualizacion-del-libro-plugin-tapestry/">Actualización del libro PlugIn Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/doble-barra-de-botones-con-apache-tapestry/">Doble barra de botones con Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/forzar-el-uso-del-protocolo-https-en-apache-tapestry/">Forzar el uso del protocolo https en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/usar-apache-tapestry-en-una-aplicacion-standalone/">Usar Apache Tapestry en una aplicación «standalone»</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry/">Servir recursos estáticos desde un CDN en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/anotacion-cached-de-apache-tapestry/">Anotación Cached de Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/plantillas-en-apache-tapestry/">Plantillas en Apache Tapestry</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/">Modelo «push» contra modelo «pull» en <em>frameworks</em> web</a></li>
</ul>
<p>Respecto a artículos sobre programación también he escrito unos cuantos relativos a Java, me parece que cada uno de estos son interesantes mostrando algunos aspectos avanzados y útiles. Por supuesto, también tengo pendientes por escribir más artículos sobre Java, como generics, palabra reservada assert, los métodos equals y hashCode y como implementarlos&hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/">Ejercicios (katas) para mejorar habilidades de programación practicando</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/">8+ libros para mejorar como programadores</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/">Cómo filtrar contenido HTML de forma segura</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/">Qué es y cómo hacer «web scraping» en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/generar-urls-semanticas-y-amigables/">Generar URLs semánticas y amigables</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/configuracion-usando-codigo-java/">Configuración usando código Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/monitorizar-archivos-con-java/">Monitorizar archivos con Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/compilar-y-cargar-de-forma-dinamica-una-clase-java/">Compilar y cargar de forma dinámica una clase Java</a></li>
</ul>
<p>Desde hace un tiempo estoy escribiendo más sobre temas de programación que sobre Linux más que nada porque Arch Linux me va también y me da tan pocos problemas que no encuentro oportunidades grandes de escribir sobre algún tema que le pueda resultar útil a alguien más. Sin embargo, si que he escrito sobre algunas herramientas que disponemos en Linux y del software libre como <a href="https://www.docker.com/">Docker</a>, <a href="https://www.ansible.com/">Ansible</a> o <a href="https://bitnami.com/">Bitnami</a>, tengo algunos artículos más por escribir sobre <a href="https://memcached.org/">Memcached</a>, EncFS, algo más de <a href="https://www.redmine.org/">Redmine</a>, &hellip;</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Cómo instalar y guía de inicio básica de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción y características de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/agregador-blog-stack-redisenado/">Agregador Blog Stack rediseñado</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/09/procesador-de-documentos-lyx/">Procesador de documentos LyX</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/experiencia-instalando-sistema-operativo-a-ordenador-viejo/">Experiencia instalando sistema operativo a ordenador viejo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/">De Arch Linux a Arch Linux</a></li>
</ul>
<p>Si no quieres perderte ninguno de los nuevos artículos que escriba puede suscribirte al <a href="https://picodotdev.github.io/blog-bitix/index.xml">canal RSS de Blog Bitix</a>, <a href="https://twitter.com/picodotdev/">seguirme en twiter</a> o desde hace un poco de tiempo seguir la <a href="https://plus.google.com/114317443908384387611/posts">página de Google+ de Blog Bitix</a>. Por supuesto, en anteriores entregas de hemerotecas dispones de más artículos si algunos de estos te han parecido interesantes.</p>
<p>Y para finalizar quiero agradecer a <a href="https://twitter.com/fran_mosteiro">Fran Mosteiro</a>, <a href="https://twitter.com/josetesan">Jose Luís Sánchez</a>, <a href="https://twitter.com/jbravo">Joaquín Bravo</a>, <a href="https://twitter.com/mbmerayo">Marcos Bello</a> y algunos otros que esporádicamente también suelen hacer RT o marcar como favoritos los tweets de esta bitácora y que me ayudan un poquito o mucho a difundir lo que escribo ¡muchas gracias!, un saludo y ¡que comencéis bien el nuevo año 2015! :)</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/images/christmas-tux-2014_huaef2ca66353b2d132c670385d2dd34d4_553762_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Christmastux 2014"><img src="https://picodotdev.github.io/blog-bitix/2014/12/hemeroteca-6/images/christmas-tux-2014_huaef2ca66353b2d132c670385d2dd34d4_553762_600x450_fit_q90_box.jpg" width="600" height="338" alt="Christmastux 2014" title="Christmastux 2014"  class="lozad "></a></p>
<figcaption>¡Buen 2015! <br>Fuente: klowner.com</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/</id>
        <title>Introducción al gestor de proyectos y tareas Redmine</title>
        <updated>2015-01-10T12:00:00+01:00</updated>
        <published>2014-12-19T19:57:31+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/redmine.png" width="200" height="59" alt="Redmine" title="Redmine"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bitnami.svg" width="200" height="224" alt="Bitnami" title="Bitnami"  class=""></p>
</div>
<p>Para desarrollar un proyecto de software se hace imprescindible disponer de algunas herramientas que nos permitan realizar las tareas. Una de estas herramientas es un <a href="https://en.wikipedia.org/wiki/Issue_tracking_system">gestor de tareas, peticiones o errores</a>, que nos permite recoger en una herramienta gran parte de la información, conocer el estado, planificar y hacer el seguimiento las tareas necesario para desarrollar de forma ordenada, sin que perdamos nada de información y pudiendo recuperarla en cualquier momento en un futuro.</p>
<p>Como es habitual herramientas que gestionan tareas disponemos de varias algunas de las más conocidas son <a href="https://www.bugzilla.org/">Bugzilla</a>, <a href="https://www.atlassian.com/software/jira">JIRA</a>, <a href="https://www.mantisbt.org/">Mantis</a>, <a href="https://trac.edgewall.org/">Trac</a> y la herramienta de la que hablaré en este artículo, <a href="https://www.redmine.org/">Redmine</a>. Cada una de estas herramientas como gestores de tareas son parecidas pero se diferencian en algunas cosas como la licencia que tiene, el esquema de precios o la funcionalidad que ofrece. Redmine tiene una <a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html">licencia de software libre GPL</a> y por tanto la podemos usar sin ningún coste, en la siguiente tabla podemos compararla con los <a href="https://www.atlassian.com/software/jira/pricing">precios de JIRA</a> que para pocos usuarios son asumibles pero que a medida que se aumentan los usuarios empiezan a ser notables aunque posiblemente alcanzables en función del tamaño de la empresa. En cualquier siendo JIRA también una herramienta excelente Redmine cumple perfectamente con la misma función. En la wikipedia podemos encontrar <a href="https://en.wikipedia.org/wiki/Comparison_of_issue-tracking_systems">más opciones y comparar unas con otras</a>.</p>
<p>Si queremos evaluar Redmine una forma sencilla podemos hacerlo mediante una imagen de Bitnami con VirtualBox. En la <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">introducción a Bitnami</a> comento qué es y como nos puede ayudar a disponer de software que en algunos casos no es simple de instalar y que con Bitnami podemos disponer de forma sencilla y rápida, además de como usar con VirtualBox cualquier imagen de Bitnami de las herramientas ofrecidas. Una vez seguidos los pasos de la guía anterior podemos acceder a Redmine con el navegador web y una dirección similar a <em>http://192.168.0.11</em>, el usuario y contraseña para acceder es user y bitnami respectivamente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/proyecto_huc5391f3bb2fe8f890f4052d1e1603f1a_23188_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Proyecto"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/proyecto_huc5391f3bb2fe8f890f4052d1e1603f1a_23188_300x200_fit_box_3.png" width="300" height="181" alt="Proyecto" title="Proyecto"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/peticion_huee84518d778088ae20bd387a73d5293d_38867_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Petición"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/peticion_huee84518d778088ae20bd387a73d5293d_38867_300x200_fit_box_3.png" width="300" height="185" alt="Petición" title="Petición"  class="lozad "></a></p>
</figure>
</div>
<p>Con Redmine podemos adaptar el flujo de las tareas a la forma de organización que empleemos, podemos personalizar el grafo de estados que siguen las tareas y que personas tiene permisos para hacer cada uno de los cambios de estado. También podemos añadir campos personalizados que queremos recoger para cada petición, por ejemplo, podemos querer dar un tamaño a las tareas en función de si estimamos que es grande, media o pequeña. También podemos crear filtros y guardarlos para encontrar fácilmente tareas.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/estados_hue0e3162886816900263a2154c8ee2e5e_42878_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Estados"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/estados_hue0e3162886816900263a2154c8ee2e5e_42878_300x200_fit_box_3.png" width="300" height="181" alt="Estados" title="Estados"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/propiedades_hua076b1dfa17f61f58d8ee0d6df42ce47_38825_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Propiedades"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/propiedades_hua076b1dfa17f61f58d8ee0d6df42ce47_38825_300x200_fit_box_3.png" width="300" height="181" alt="Propiedades" title="Propiedades"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/consulta_hub5bad320ba6632e1084e3f266f937585_41369_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Filtros"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/consulta_hub5bad320ba6632e1084e3f266f937585_41369_300x200_fit_box_3.png" width="249" height="200" alt="Filtros" title="Filtros"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/flujo-estados_hu677460e55ab0aea1e8fac0028295eff7_59509_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Flujo estados"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/flujo-estados_hu677460e55ab0aea1e8fac0028295eff7_59509_300x200_fit_box_3.png" width="300" height="177" alt="Flujo estados" title="Flujo estados"  class="lozad "></a></p>
</figure>
</div>
<p>Además de gestionar las tareas Redmine dispone de herramientas que nos pueden ser útiles en el proyecto como una wiki para recoger documentación del proyecto y un repositorio de documentos para aquellos que no queremos incluir en la herramienta de control de versiones por su tamaño pero que queremos que estén disponibles para cualquiera que trabaje con el proyecto.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/wiki_huc8ef37bf4091738b82bd6e3b425a7926_26237_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Wiki"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/wiki_huc8ef37bf4091738b82bd6e3b425a7926_26237_300x200_fit_box_3.png" width="262" height="200" alt="Wiki" title="Wiki"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/archivos_huf26cedcb4ea27c3a1cb52eb9f4e24372_15256_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivos"><img src="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/images/archivos_huf26cedcb4ea27c3a1cb52eb9f4e24372_15256_300x200_fit_box_3.png" width="300" height="133" alt="Archivos" title="Archivos"  class="lozad "></a></p>
</figure>
</div>
<p>Pero Redmine es más que una herramienta de gestión de tareas, los complementos pueden añadirle funcionalidad adicional que permite <a href="http://www.redminecrm.com/projects/crm/pages/1">convertirla en un CRM para gestionar las comunicaciones con clientes</a> o en un <a href="http://www.redminecrm.com/projects/helpdesk/pages/1">helpdesk para atender las tareas de clientes</a>. Además de otros como <a href="http://www.redminecrm.com/projects/people/pages/1">personalizar los usuarios de Redmine</a> o crear <a href="http://www.redminecrm.com/projects/checklist/pages/1">pequeñas listas de tareas</a> que nos evitará crear subtareas.</p>
<p>En el siguiente artículo comentaré como instalar el <a href="http://www.redminecrm.com/projects/agile/pages/1">plugin agile de Redmine</a> con la imagen de Bitnami en VirtualBox de forma que podamos visualizar las tareas en un panel kanban, y de un vistazo y rápidamente conozcamos las tareas que están terminadas, que están en progreso, a punto de empezarse o en la cola de tareas por hacer.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar plugin ágil en Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
<li><a href="http://www.luisblasco.com/5-plugins-gratuitos-instalar-en-redmine/">5 plugins gratuitos para instalar a Redmine</a></li>
<li><a href="http://www.redmine.org/projects/redmine/wiki/RedmineIssueList#Applying-and-saving-filters">Aplicar y guardar filtros</a></li>
<li><a href="https://stackoverflow.com/questions/9027479/how-do-you-modify-a-filter-in-redmine">Como modificar un filtro</a></li>
<li><a href="http://www.luisblasco.com/blog/">Blog con varios artículos interesantes sobre Redmine</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/</id>
        <title>Ejercicios (katas) para mejorar habilidades de programación practicando</title>
        <updated>2014-12-13T12:06:06+01:00</updated>
        <published>2014-12-13T12:06:06+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>La semana pasada escribía sobre <a href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/">algunos libros que leer para ser mejores programadores</a>, sin embargo, toda esa teoría solo sirve cuando se interioriza para usar más tarde en la práctica. Para interiorizar parte de ese conocimiento hasta el momento creo que no se ha inventado mejor manera que escribiendo código teniendo en cuenta esos principios.</p>
<p>Las katas y dojos son unos ejercicios que se realizan para practicar, son problemas sencillos de los que se conoce la solución pero lo importante no es resolverlos sino aplicar las lecciones aprendidas y mejorar nuestras habilidades de programación que posteriormente usemos en los proyectos que trabajamos. Estos ejercicios se suelen realizar con otras personas, en la página <a href="http://katayunos.com/">Katayunos - Merendojos</a> se suelen organizar encuentros en algunas ciudades y fechas, si no nos cuadran las fechas y lugares podemos realizarlas individualmente cuando y donde prefiramos aunque una de las partes que nos perderemos es aprender de las habilidades y formas de trabajar de otras personas.</p>
<p>En la página <a href="http://codekata.com/">CodeKata</a> podemos leer una introducción a las katas y una colección de ejercicios con los que practicar. En estos ejercicios deberemos intentar aplicar varios <a href="http://javarevisited.blogspot.com.es/2012/03/10-object-oriented-design-principles.html">principios de la programación orientada a objetos</a> como el principio SOLID, DRY, abierto a extensión cerrado a modificación (OCP), <a href="https://elblogdepicodev.blogspot.com.es/2012/03/patrones-de-diseno-en-la-programacion.htmlindex-amp.html">patrones de diseño</a>, nombres de métodos y variables que hagan que el código sea expresivo, teses unitarios, refactorizaciones, &hellip; todas esas cosas que consideramos correctas para escribir buen código.</p>
<p>El primero de los ejercicios propuestos en CodeKata es <a href="http://codekata.com/kata/kata01-supermarket-pricing/">Kata01: Supermarket Pricing</a> que consiste en pensar una forma de representar los precios de los productos de un supermercado, aparte de un precio simple como puede ser $0.65 por producto, otros como tres por un dolar, $1.99 / pound o compre dos obtenga uno más gratis o con descuento. Para esta kata en internet hay comentadas varias soluciones, probablemente para representar los diferentes precios una solución sea crear una clase que calcule los diferentes tipos de precios aplicando el <a href="https://es.wikipedia.org/wiki/Strategy_%28patr%C3%B3n_de_dise%C3%B1o%29">patrón Strategy</a> en función de como se calcule el precio de cada producto.</p>
<p>Intentando implementar en código una posible solución aplicando el patrón Strategy, usando BigDecimal para los precios (en vez de double y float que no pueden representar correctamente algunos valores decimales), este ejemplo muestra como calcular el precio de un producto dada su cantidad y su tipo de precio.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.kata01</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.math.RoundingMode</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Pricing</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Offer</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="nf">calculateWithOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">);</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="nf">getNumberWithoutOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="nf">getNumberWithOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Product</span> <span class="o">{</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pricing</span> <span class="n">pricing</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Product</span><span class="o">(</span><span class="n">Pricing</span> <span class="n">pricing</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">pricing</span> <span class="o">=</span> <span class="n">pricing</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">pricing</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="n">quantity</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">SimplePricing</span> <span class="kd">implements</span> <span class="n">Pricing</span> <span class="o">{</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">unitPrice</span><span class="o">;</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SimplePricing</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">unitPrice</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">unitPrice</span> <span class="o">=</span> <span class="n">unitPrice</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">unitPrice</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">quantity</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">WeightPricing</span> <span class="kd">implements</span> <span class="n">Pricing</span> <span class="o">{</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">weightPrice</span><span class="o">;</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">WeightPricing</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">weightPrice</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">weightPrice</span> <span class="o">=</span> <span class="n">weightPrice</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">weight</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">weightPrice</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="n">weight</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">OfferPricing</span> <span class="kd">implements</span> <span class="n">Pricing</span><span class="o">,</span> <span class="n">Offer</span> <span class="o">{</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Pricing</span> <span class="n">normalPricing</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">offerQuantity</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">offerPercent</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OfferPricing</span><span class="o">(</span><span class="n">Pricing</span> <span class="n">normalPricing</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">offerQuantity</span><span class="o">,</span> <span class="n">BigDecimal</span> <span class="n">offerPercent</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">normalPricing</span> <span class="o">=</span> <span class="n">normalPricing</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">offerQuantity</span> <span class="o">=</span> <span class="n">offerQuantity</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">offerPercent</span> <span class="o">=</span> <span class="n">offerPercent</span><span class="o">;</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">withoutOfferPrice</span> <span class="o">=</span> <span class="n">normalPricing</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="n">getNumberWithoutOffer</span><span class="o">(</span><span class="n">quantity</span><span class="o">));</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">withOfferPrice</span> <span class="o">=</span> <span class="n">calculateWithOffer</span><span class="o">(</span><span class="n">getNumberWithOffer</span><span class="o">(</span><span class="n">quantity</span><span class="o">));</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">withoutOfferPrice</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">withOfferPrice</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">calculateWithOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">normalPricing</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1&#34;</span><span class="o">)).</span><span class="na">multiply</span><span class="o">(</span><span class="n">quantity</span><span class="o">).</span><span class="na">multiply</span><span class="o">(</span><span class="n">getOfferPercent</span><span class="o">());</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">getNumberWithoutOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">BigDecimal</span> <span class="n">groups</span> <span class="o">=</span> <span class="n">quantity</span><span class="o">.</span><span class="na">divide</span><span class="o">(</span><span class="n">offerQuantity</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">RoundingMode</span><span class="o">.</span><span class="na">DOWN</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">quantity</span><span class="o">.</span><span class="na">subtract</span><span class="o">(</span><span class="n">groups</span><span class="o">);</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">BigDecimal</span> <span class="nf">getNumberWithOffer</span><span class="o">(</span><span class="n">BigDecimal</span> <span class="n">quantity</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">quantity</span><span class="o">.</span><span class="na">subtract</span><span class="o">(</span><span class="n">getNumberWithoutOffer</span><span class="o">(</span><span class="n">quantity</span><span class="o">));</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">BigDecimal</span> <span class="nf">getOfferPercent</span><span class="o">()</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">BigDecimal</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">100</span><span class="o">).</span><span class="na">subtract</span><span class="o">(</span><span class="n">offerPercent</span><span class="o">).</span><span class="na">divide</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;100&#34;</span><span class="o">));</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;	<span class="o">}</span>&#10;	&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">Product</span> <span class="n">p1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">SimplePricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;2&#34;</span><span class="o">)));</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p1</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">)));</span>&#10;&#10;		<span class="n">Product</span> <span class="n">p2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">WeightPricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.35&#34;</span><span class="o">)));</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p2</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">)));</span>&#10;&#10;		<span class="n">Product</span> <span class="n">p3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">OfferPricing</span><span class="o">(</span><span class="k">new</span> <span class="n">SimplePricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;50&#34;</span><span class="o">)));</span>&#10;		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p3</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;6&#34;</span><span class="o">)));</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.kata01</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.kata01.Main.OfferPricing</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.kata01.Main.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.kata01.Main.SimplePricing</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.kata01.Main.WeightPricing</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.math.BigDecimal</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.junit.Assert</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainTest</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Test</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">simplePricing</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">Product</span> <span class="n">p1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">SimplePricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;2&#34;</span><span class="o">)));</span>&#10;		<span class="n">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;6&#34;</span><span class="o">),</span> <span class="n">p1</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">)));</span>&#10;	<span class="o">}</span> &#10;	&#10;	<span class="nd">@Test</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">weightPricing</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">Product</span> <span class="n">p2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">WeightPricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1.35&#34;</span><span class="o">)));</span>&#10;		<span class="n">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;4.05&#34;</span><span class="o">),</span> <span class="n">p2</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">)));</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Test</span>&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">offerPricing</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">Product</span> <span class="n">p3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Product</span><span class="o">(</span><span class="k">new</span> <span class="n">OfferPricing</span><span class="o">(</span><span class="k">new</span> <span class="n">SimplePricing</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;1&#34;</span><span class="o">)),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;3&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;50&#34;</span><span class="o">)));</span>&#10;		<span class="n">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;4.5&#34;</span><span class="o">),</span> <span class="n">p3</span><span class="o">.</span><span class="na">calculate</span><span class="o">(</span><span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="s">&#34;5&#34;</span><span class="o">)));</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MainTest.java</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/images/teses-junit_hufd5df9af52eaf6ce499b5244effa36fc_31631_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ejecución de teses"><img src="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/images/teses-junit_hufd5df9af52eaf6ce499b5244effa36fc_31631_300x200_fit_box_3.png" width="300" height="167" alt="Ejecución de teses" title="Ejecución de teses"  class="lozad "></a></p>
</figure>
</div>
<p>Aun practicando estas katas no va a hacer que luego nuestro código en un proyecto real sea perfecto ni siquiera algo cercano a ello más bien hará que sea un poquito mejor, estos ejercicios son bastante simples que no tienen las complejidades de algunos casos reales, aún así siguen mereciendo realizarlos. También hay que tener en cuenta que no son realmente para aprender a programar aunque si pueden servir para aprender un nuevo lenguaje sobre todo si se hacen con otra persona que ya lo conoce y mientras se realiza la kata podemos preguntarle y nos resuelva las dudas que nos vayan surgiendo de la sintaxis, API o herramientas de ese lenguaje.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li>http://codekata.com/<br></li>
<li>http://katayunos.com/<br></li>
<li>http://www.codewars.com/</li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="software-libre"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/</id>
        <title>8&#43; libros para mejorar como programadores</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-12-05T17:08:57+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/12/8-plus-libros-para-mejorar-como-programadores/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<p>Hay cantidad de información para aprender y en diferentes formatos desde libros si queremos tener un conocimiento más profundo sobre alguna materia pasando por presentaciones en <a href="https://es.slideshare.net/">SlideShare</a> o <a href="https://speakerdeck.com/">SpeakerDeck</a> que aún comentando los detalles de forma escueta sirven para conocer los detalles importantes sobre un tema, charlas de hangouts que quizá requieran menos esfuerzo y tiempo por nuestra parte que leer un libro como las compartidas en <a href="https://www.desarrolloweb.com/">desarrolloweb</a> o en <a href="http://virtualjug.com/">Virtual JUG</a>, blogs con artículos que explican un detalle específico (aquí hay una buena <a href="https://www.baeldung.com/java-blogs">colección de bitácoras sobre java</a>), <a href="http://katayunos.com/">katayunos y merendojos</a> en los que se practican técnicas de programación sobre un problema conocido, sencillos, de los que ya se conoce su solución y que se realizan junto a otras personas, convenciones como <a href="http://www.codemotion.es/">Codemotion</a>, <a href="https://es.pycon.org/">PyCon</a>, <a href="https://greachconf.com/">Greach</a>, <a href="http://www.librecon.io/">LibreCon</a>, <a href="http://agile-spain.org">CAS</a>, <a href="http://www.springio.net/">Spring I/O</a>, <a href="http://apachecon.com/">ApacheCon</a>, <a href="https://bilbostack.com/">BilboStack</a>&hellip; En estas convenciones se hacen presentaciones de alrededor de una hora para los asistentes, además siendo presenciales permiten reunirse con otras personas con los mismos intereses y de las que algunas los vídeos están disponibles en YouTube&hellip; en definitiva, para aprender lo único que se necesita es tiempo y motivación que no es poco después de una jornada laboral que ocupa la mayor parte de nuestro tiempo.</p>
<p>En este artículo comentaré algunos libros que a mí me han gustado y que mucha gente recomienda leer ya que contienen cantidad importante e interesante de información útil para realizar mejor la tarea de programación, algunos tratan sobre el código otros sobre como enfrentarnos a las tareas y problemas que nos encontramos en el desarrollo y trabajo.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="thinking-in-java">Thinking in Java</h3>
<p>Yo como programador Java el libro que recomiendo para aquellos que ya tengan unos pocos conocimientos de programación estén empezando a programar en Java es <a href="https://amzn.to/2Qo38qQ">Thinking in Java</a> aunque también es recomendable para aquellos que incluso llevan varios años programando en Java, contiene una explicación detallada de cada uno de los aspectos del lenguaje. Java 8 ha introducido numerosas novedades (streams, lambdas, mejorada la programación asíncrona, date api, default methods, programación funcional, &hellip;) y el libro <a href="https://amzn.to/2ZThJxJ">Java 8 in Action</a> nos permite conocerlas detalladamente. En otros lenguajes hay otros libros que nos pueden introducir en la materia como <a href="https://amzn.to/39GxlsU">C# 5.0 All-in-One For Dummies</a> o <a href="https://amzn.to/35oMxHG">Beginning Python</a>.</p>
<h3 id="effective-java">Effective Java</h3>
<p>Para aquellos que ya tienen varios años de experiencia el libro <a href="https://amzn.to/39C8Ehn">Effective Java</a> contiene numerosos consejos para usar Java de forma &ldquo;efectiva&rdquo; aunque algunos puntos del libro son aplicables a cualquier otro lenguaje de programación orientado objetos. La segunda edición no está actualizada con las novedades introducidas en Java 8 pero prácticamente todo sigue siendo válido, el libro <a href="v">Java 8 in Action</a> también contiene algunos consejos en la misma linea que complementan a este libro.</p>
<h3 id="head-first---design-patterns">Head First - Design Patterns</h3>
<p>Los patrones de diseño nos presentan una solución que se ha comprobado válida para resolver problemas. En varios casos tratan de hacer que los cambios no afecten de forma notable a la estructura de los programas. Hay patrones de creación, estructurales o de comportamiento, &hellip; conviene conocerlos por si en algún momento determinado podemos aplicarlos a nuestro código. El formato del libro <a href="https://amzn.to/37GFpYV">Head First Design Patterns</a> no sigue la estructura tradicional de los libros sino una estructura más esquemática y con ejemplos que hacen sencillo comprender los patrones, cuando aplicarlos, que ventajas tienen, que desventajas y como están relacionados los patrones entre ellos. Otro libro con un formato más tradicional y muy comentado es <a href="https://amzn.to/36qiq3P">Design Patterns</a>.</p>
<h3 id="clean-code">Clean Code</h3>
<p>El contenido de <a href="https://amzn.to/2T0L5IS">Clean code</a> es aplicable a cualquier lenguaje y de interés para cualquier programador, contiene consejos para escribir mejor código en nuestras aplicaciones, desde como asignar nombres, como escribir funciones, comentarios, formatear el código, objetos y estructuras de datos, &hellip;, temás relacionados con el código que escribimos. El objetivo de la programación es escribir código que funciona y resuelva necesidades pero también es casi tan importante que sea fácilmente entendible por otros programadores o nosotros mismos unas semanas más tarde ya que la mayor parte del tiempo no la dedicamos a escribir nuevo código sino a modificarlo.</p>
<h3 id="code-complete">Code Complete</h3>
<p><a href="https://amzn.to/37Gh59B">Code Complete</a> es otro libro que se centra en como mejorar el código que escribimos de forma similar a Clean Code, explica muchos principios que pueden guiar el código que desarrollamos. Aún no lo he leído pero es mencionado bastante bastantes veces en libros de lectura recomendada. Por una lectura rápida por encima parece que está bastante bien.</p>
<h3 id="the-pragmatic-programmer">The Pragmatic Programmer</h3>
<p>El libro <a href="https://amzn.to/2MXRVuZ">Pragmatic programmer</a> también es aplicable independientemente de lenguaje que utilicemos. Contienen consejos que podemos usar como guía para tomar decisiones, para escribir mejor código y también para ser mejores programadores y profesionales.</p>
<h3 id="the-clean-coder">The Clean Coder</h3>
<p>Quizá ya conocieses Clean Code pero conocías ¿<a href="https://amzn.to/2MXB4II">The Clean Coder</a>?. Del mismo autor que Clean Code pero en este caso se centra no en el código sino en el programador, explica como enfrentarnos a situaciones que nos encontramos como programadores en el trabajo, en la programación escribir código solo es una pequeña parte y comprende mucho más que escribir lineas de código, también dar solución a las necesidades del negocio y de forma correcta. Trata de explicar como comportarnos de forma profesional, el decir no, el decir sí, practicar, gestión del tiempo, estimaciones, colaboración, equipos, aprender de un mentor, ser un mentor, &hellip;</p>
<h3 id="refactoring">Refactoring</h3>
<p>Comenzar un proyecto desde el inicio no es lo habitual y aún así pasado un tiempo no muy grande el código se convierte en heredado, lo habitual es que tengamos que modificar código que ya están escrito. El libro <a href="https://amzn.to/39CyVMm">Refactoring</a> nos explica como modificar el código para que tenga mejor diseño y sea más legible o fácil de modificar en un futuro y ante los posibles cambios que se vayan introduciendo. Algunas de las acciones están relacionadas con aplicar algunos principios de los patrones de diseño explicados en Head First - Design Patterns o algunos principios comentados en Clean Code.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0131872486&amp;linkId=dae8597bb6dc4beae956320ef09df513" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1617291994&amp;linkId=70189a833eb781236f9c1b63064c8b27" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0321356683&amp;linkId=468caab01af35306c48d99ca564ebf23" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0596007124&amp;linkId=3fa600b62ab3a48a0c6a5dfc6b9c9651" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0201633612&amp;linkId=2d6122afa07f905f4c3f2a9bcc62ff23" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0132350882&amp;linkId=41b8842029752ed268fefa4ec10f03a7" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0735619670&amp;linkId=caad6be50f3166c9e6c0c6cb8f8ba3ec" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=020161622X&amp;linkId=8ce01379ebca38f4fb82221abb3b0a81" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0137081073&amp;linkId=2fb79f1801f1d0a448b7aa533cd1af8e" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0201485672&amp;linkId=7c8b407a597aff8be999138b9159d305" title="Amazon" class="lozad"></iframe>
</div>
<p>En una <a href="https://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read">pregunta y respuesta de stackoveflow</a> sobre los libros a leer por un programador, están recogidos una buena colección de los mejores de ellos.</p>
<p>De la lista de este artículo el que me falta por leer es Code Complete el resto por mi propia experiencia recomiendo leerlos incluso más de una vez dependiendo de lo bien que absorbamos el conocimiento recogido en ellos y más tarde lo tengamos presente mientras trabajamos y programamos. Estos son de los libros más mencionados en artículos similares a este como buena documentación que leer sobre programación, si los leemos y nos quedamos con un porcentaje aunque sea pequeño ya mejoraremos bastante, también es probable que algunas cosas de las comentadas en los libros ya las tengamos presentes con la experiencia que hemos adquirido por nosotros mismos, en estos libros ese conocimiento adquirido y más comprobaremos que está documentado. ¡Feliz lectura!</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">Novedades de Java 8</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/03/patrones-de-diseno-en-la-programacion.htmlindex-amp.html">Patrones de diseño en la programación orientada a objetos</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/ejercicios-katas-para-mejorar-habilidades-de-programacion-practicando/">Ejercicios (katas) para mejorar habilidades de programación practicando</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="software-libre"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/</id>
        <title>Introducción a Bitnami</title>
        <updated>2017-05-28T01:00:00+02:00</updated>
        <published>2014-11-29T10:45:45+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bitnami.svg" width="200" height="224" alt="Bitnami" title="Bitnami"  class=""></p>
</div>
<p>Instalar algunas aplicaciones, herramientas o servicios no siempre es sencillo y rápido. En la mayoría de los casos los pasos están explicados suficientemente pero en la práctica nos pueden surgir dudas o problemas que no están documentados que pueden hacer que la experiencia de instalación no sea agradable o necesitar dependencias que hay que instalar a la vez para obtener un funcionamiento correcto. Además, sin emplear una máquina virtual se necesita instalar en el propio equipo o servidor cuando quizá solo interesa evaluar el producto con lo que al hacer la desinstalación se acaba con archivos temporales que quizá no se eliminen y permanezcan ocupando espacio para siempre o hasta ser eliminados.</p>
<p><a href="https://bitnami.com/">Bitnami</a> es una amplia colección de servicios populares que permite instalarlos y disponer de ellos rápidamente completamente configurados sin necesidad de dedicar tiempo a conocer como instalarlos, además, si empleamos virtualización con <a href="https://www.virtualbox.org/">VirtualBox</a> se consigue que el equipo quede completamente limpio una vez que el servicio sea desinstalado bastando únicamente eliminar la máquina virtual. Esta colección de servicios se pueden instalar en el propio equipo, en una máquina virtual con VirtualBox, <a href="https://www.vmware.com/">VMware</a>, <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a> o en la nube por ejemplo de <a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a>, <a href="https://azure.microsoft.com/es-es/">microsoft-azure</a> o <a href="https://cloud.google.com/">Google Cloud</a> y próximamente usando <a href="https://www.docker.com/">Docker</a>.</p>
<p>¿Alguna vez has querido probar <a href="https://wordpress.org/">Wordpress</a>, <a href="https://www.redmine.org/">Redmine</a>, <a href="https://www.drupal.org/">Drupal</a>, <a href="https://www.mediawiki.org/">MediaWiki</a>, <a href="https://www.phpbb.com/">phpBB</a>, <a href="https://www.liferay.com/">Liferay</a>, <a href="https://jenkins.io/">Jenkins</a>, <a href="https://plone.org/">Plone</a>, <a href="https://www.alfresco.com/">Alfresco</a>, &hellip;? Estos son solo unos pocos ejemplos de <a href="https://bitnami.com/stacks">todos los servicios que nos ofrece Bitnami</a> listos para que empecemos a usarlos en unos pocos minutos, hay muchos otros disponibles y en un futuro se agregarán más según las peticiones que realicen los usuarios de Bitnami. Algunas aplicaciones están compuestas de una pila completa de servicios como por ejemplo LAMP (Linux, Apache, MySQL, PHP) o LAPP (Linux, Apache, PostgreSQL, PHP) que incluyen una lista completa de dependencias que necesitan como FastCGI, OpenSSL, phpMyAdmin, ModSecurity, SQLite, Varnish, ImageMagick, xDebug, Xcache, OpenLDAP, ModSecurity, Memcache, OAuth, PEAR, PECL, APC, GD o cURL. Adicionalmente podemos usar una única pila como LAMP para instalar varios <a href="https://bitnami.com/stack/lamp/modules">módulos</a> en vez de instalar cada aplicación individualmente (Drupal, MediaWiki, &hellip;) de forma que todas las aplicación compartan la infraestructura de la misma pila.</p>
<p>En un futuro parece que Bitnami ofrecerá soporte para <a href="https://www.docker.com/">Docker</a> haciendo que no necesitemos ni siquiera un entorno de virtualización, ahorrando espacio en disco y ofreciendo el máximo rendimiento que ofrezca la máquina sin ningún tipo de penalización que impone virtualizar.</p>
<h3 id="cómo-empezar-a-usar-bitnami">¿Cómo empezar a usar Bitnami?</h3>
<p>A continuación explicaré la opción de usar Bitnami con VirtualBox, para el ejemplo usaré la aplicación de <a href="https://about.gitlab.com/">GitLab</a>. En la <a href="https://docs.bitnami.com/virtual-machine/">guía de inicio rápido de Bitnami</a> están explicadas otras opciones y preguntas frecuentes, en este caso nos interesa la <a href="https://docs.bitnami.com/virtual-machine/get-started-virtualbox/">sección para VirtualBox</a>.</p>
<p>Teniendo instalado previamente VirtualBox, primeramente necesitaremos descargar la imagen del disco que contiene la <a href="https://bitnami.com/stack/gitlab">aplicación de Bitnami para GitLab</a>. Accedida a la sección <a href="https://bitnami.com/stack/gitlab/virtual-machine"><em>Local Install</em></a> pulsamos el botón <em>Download</em> según la versión del sistema operativo que prefiramos, en este caso usaré la basada en <a href="https://www.debian.org/">Debian</a>. A continuación hay que crear una máquina virtual en VirtualBox mediante la opción <em>Importar servicio virtualizado&hellip;</em> del menú <em>Archivo</em> donde hay que seleccionar el archivo de extensión <em>ova</em> y cambiaremos la memoria asignada a la máquina virtual al menos 2048 MiB.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-importar-servicio-virtualizado_huea606d4532b9c289e2b465a836172f8b_108509_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Importación de servicio virtualizado en VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-importar-servicio-virtualizado_huea606d4532b9c289e2b465a836172f8b_108509_300x200_fit_box_3.png" width="300" height="198" alt="Importación de servicio virtualizado en VirtualBox" title="Importación de servicio virtualizado en VirtualBox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-gitlab_hu8207aa8b5020809288ce6ba68fd9735a_23848_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Máquina virtual de GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/virtualbox-gitlab_hu8207aa8b5020809288ce6ba68fd9735a_23848_300x200_fit_box_3.png" width="296" height="200" alt="Máquina virtual de GitLab" title="Máquina virtual de GitLab"  class="lozad "></a></p>
<figcaption>Importación de servicio virtualizado de Bitnami en VirtualBox</figcaption>
</figure>
</div>
<p>Una vez importado el servicio y creada la máquina virtual la tratamos como cualquier otra máquina virtual para iniciarla la máquina virtual está lista para ser iniciada. Una vez iniciada completamente en la terminal se solicita un inicio de sesión con el usuario y contraseña que da acceso a una terminal para realizar tareas administrativas, en la misma página de inicio de sesión se indica el usuario y contraseña a usar y se indica la dirección IP (en el caso de las capturas mostradas es la <em>192.168.1.3</em>) que es necesario usar para acceder al servicio con el navegador. En el primer inicio de sesión se solicita cambiar la contraseña.</p>
<p>Accediendo con el navegador a la dirección <em>https://192.168.1.3</em> se accede a la aplicación de GitLab que pide un usuario y contraseña para iniciar sesión, el usuario y contraseña están indicados en la página de descarga de la imagen del servicio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab-inicio-sesion_hua827c112ebc0dfe1f95fdf1511ae6469_60472_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión de GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab-inicio-sesion_hua827c112ebc0dfe1f95fdf1511ae6469_60472_300x200_fit_box_3.png" width="284" height="200" alt="Inicio de sesión de GitLab" title="Inicio de sesión de GitLab"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab_hu1c9450aa09534aa8f5ca35bf6de1a0dd_55744_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="GitLab"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/images/gitlab_hu1c9450aa09534aa8f5ca35bf6de1a0dd_55744_300x200_fit_box_3.png" width="266" height="200" alt="GitLab" title="GitLab"  class="lozad "></a></p>
<figcaption>Servicio de GitLab</figcaption>
</figure>
</div>
<p>En definitiva, Bitnami es de utilidad si se necesita usar cualquiera de los servicios que ofrece tanto para probarlos con una máquina virtual o para instalarlos en la nube de Amazon EC2, Azure o en Google Cloud. La nube evita adquirir hardware y posibilita escalarlo según las necesidades siempre estando dispuestos a pagar su coste, en algunos casos un mini PC como los <a href="https://amzn.to/2rauzYV">Brix</a>, <a href="https://amzn.to/2s8GYtI">NUC</a> o <a href="https://amzn.to/2r07KGS">Cubi</a> que soportan cantidades de memoria de 16 GiB y algunos 32 GiB son mas que suficientes para una infraestructura interna de una empresa pequeña que incluya control de versiones, gestor de peticiones, integración continua, base de datos, servidor de aplicaciones, &hellip; estos ordenadores pequeños en tamaño pero con una capacidad de proceso y memoria nada despreciable son una opción a considerar para algunas tareas y pueden actuar perfectamente como servidores en los que alojar algunos servicios para consumo interno.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://bitnami.com">Bitnami</a></li>
<li><a href="https://en.wikipedia.org/wiki/Bitnami">Wikipedia Bitnami</a></li>
<li><a href="http://www.jsitech.com/generales/bitnami-una-tienda-de-aplicaciones-para-servidores/">Bitnami, Una tienda de Aplicaciones para Servidores</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción a Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Guía de inicio básico de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/12/introduccion-al-gestor-de-proyectos-y-tareas-redmine/">Introducción al gestor de proyectos y tareas Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/instalar-y-usar-plugin-agil-en-redmine/">Instalar y usar plugin ágil en Redmine</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/introduccion-e-inicio-a-drupal/">Introducción e inicio a Drupal</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="hardware"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/</id>
        <title>Integración entre Ansible y Docker</title>
        <updated>2014-12-29T19:00:00+01:00</updated>
        <published>2014-11-22T10:28:52+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ansible.svg" width="200" height="246" alt="Ansible" title="Ansible"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>En la <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">introducción de Docker</a> y <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">inicio básico de docker</a> explicaba como usar Docker y en la <a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">introducción a Ansible</a> explicaba las características de Ansible y como usarlo. Podemos usar <a href="https://www.docker.com/">Docker</a> y <a href="https://www.ansible.com/">Ansible</a> de forma separada pero también podemos combinarlas para beneficiarnos de las propiedades de cada una. En Ansible disponemos de dos módulos que nos permite manejar las imágenes y los contenedores de Docker, estos son <a href="http://docs.ansible.com/docker_module.html">docker</a> y <a href="http://docs.ansible.com/docker_image_module.html">docker_image</a>.</p>
<p>Usando tareas de ansible podemos automatizar el arranque del servicio de docker, la construcción de las imágenes con los Dokerfile y el inicio o parada de los contenedores de docker. En el ejemplo se construye una imagen base en la que se basarán el resto de imágenes, se crea una imagen con mysql, otra de redis y finalmente la imagen apps donde se ejecutarán las aplicaciones que usarán los servicios de mysql y redis.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nn">---</span><span class="w">&#10;</span><span class="w"></span>- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start docker service</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">name=docker state=started</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">   &#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">build docker images</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker_image</span><span class="p">:</span><span class="w"> </span><span class="l">name=&#34;{{ item.name }}&#34; tag=&#34;{{ item.tag }}&#34; state=&#34;present&#34; path={{ item.path }}</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/base&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/base&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/mysql&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/mysql&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/redis&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/redis&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;picodotdev/apps&#34;</span><span class="nt">, tag</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;1.0&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;../docker/apps&#34;</span><span class="w"> </span>}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.yml</span>
    </div>
</div>
<p>Una vez que disponemos de las imágenes de docker podemos arrancar contenedores con ellas automatizándolo con ansible. En este caso se inicia el servicio de docker, se inicializan los contenedores con los volúmenes donde se guardan los datos de forma persistente de mysql y redis, se inician los contenedores de mysql y redis usando los volúmenes anteriores y finalmente el contenedor de las aplicaciones. Al final, se muestra cierta información de las imágenes como sus direcciones IP.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml">- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start docker service</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">name=docker state=started</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start mysql data docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=busybox:latest name=picodotdev-mysql-data state=present volumes=&#34;/var/lib/mysql&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">mysql_data_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start redis data docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=busybox:latest name=picodotdev-redis-data state=present volumes=&#34;/var/lib/redis&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">redis_data_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start mysql docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/mysql:1.0 name=picodotdev-mysql state=running volumes_from=picodotdev-mysql-data hostname=mysql ports=3306:3306 command=/sbin/my_init</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">mysql_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start redis docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/redis:1.0 name=picodotdev-redis state=running volumes_from=picodotdev-redis-data volumes=&#34;{{ keys_path }}:/mnt/keys&#34; hostname=redis ports=6379:6379 command=/sbin/my_init</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">redis_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">start apps docker container</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">docker</span><span class="p">:</span><span class="w"> </span><span class="l">image=picodotdev/apps:1.0 name=picodotdev-apps state=running volumes=&#34;{{ projects_path }}:/mnt/projects,{{ grails_path }}:/root/.grails,{{ gradle_path }}:/root/.gradle,{{ keys_path }}:/mnt/keys&#34; hostname=apps ports=8080:8080,8443:8443 links=picodotdev-mysql:mysql,picodotdev-redis:redis command=/sbin/my_init</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">register</span><span class="p">:</span><span class="w"> </span><span class="l">apps_container</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">update hosts with containers ip address</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">replace</span><span class="p">:</span><span class="w"> </span><span class="l">dest=/etc/hosts regexp=&#34;^(\d+\.\d+\.\d+\.\d+)(\s+{{ item.host }})$&#34; replace=&#34;{{ item.ip }}\2&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mysql&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;redis&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;apps&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">display containers info</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">debug</span><span class="p">:</span><span class="w"> </span><span class="l">msg=&#34;info&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ mysql_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ redis_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Name&#39;] }}&#34;</span><span class="nt">, ip</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;NetworkSettings&#39;][&#39;IPAddress&#39;] }}&#34;</span><span class="nt">, id</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ apps_container[&#39;ansible_facts&#39;][&#39;docker_containers&#39;][0][&#39;Id&#39;] }}&#34;</span><span class="w"> </span>}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>start.yml</span>
    </div>
</div>
<p>Ansible <a href="http://docs.ansible.com/list_of_all_modules.html">dispone muchos módulos</a> que nos permiten automatizar las tareas:</p>
<ul>
<li><a href="http://docs.ansible.com/list_of_cloud_modules.html">Módulos para manejo de entornos cloud</a> (<a href="https://aws.amazon.com/es/ec2/">Amazon EC2</a>, <a href="https://azure.microsoft.com/es-es/">microsoft-azure</a>, <a href="https://www.digitalocean.com/">Digital Ocean</a>, <a href="https://www.openstack.org/">OpenStack</a>, <a href="https://www.rackspace.com/es">Rackspace</a>)</li>
<li><a href="http://docs.ansible.com/list_of_commands_modules.html">Módulos para ejecutar comandos</a></li>
<li><a href="http://docs.ansible.com/list_of_database_modules.html">Módulos para administración de bases de datos</a></li>
<li><a href="http://docs.ansible.com/modules_by_category.html">Módulos para manejo de archivos</a></li>
<li><a href="http://docs.ansible.com/list_of_packaging_modules.html">Módulos para manejo de paquetes</a></li>
<li><a href="http://docs.ansible.com/list_of_source_control_modules.html">Módulos para manejo de sistemas de control de versiones</a></li>
<li>Y algunos más</li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/</id>
        <title>Introducción a Ansible</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-11-15T10:35:39+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/ansible.svg" width="200" height="246" alt="Ansible" title="Ansible"  class=""></p>
</div>
<p>Siempre que nos sea posible deberíamos automatizar las tareas que realizamos. Automatizar tareas hará sencillo realizarlas permitiéndonos hacer todos los despliegues de una aplicación que queramos con menos posibilidades de cometer errores manuales o nos permitirá disponer de una nueva máquina aprovisionada exactamente como pueda estar la máquina de producción en mucho menos tiempo. En el ámbito del aprovisionamiento de máquinas y administración de la infraestructura IT hay varias opciones, entre ellas están <a href="https://www.getchef.com/">Chef</a>, <a href="https://puppet.com/">Puppet</a> y <a href="https://www.ansible.com/">Ansible</a>.</p>
<p>En este artículo haré una breve introducción de Ansible que principalmente se emplea en servidores pero también podríamos emplearlo para nuestra propia máquina. Con Ansible podremos:</p>
<ul>
<li>Automatizar el aprovisionamiento de máquinas.</li>
<li>Gestionar la configuración de los servicios de esas máquinas.</li>
<li>Realizar despliegues y orquestar los servicios.</li>
</ul>
<p>Hay que destacar que Ansible no necesita instalar un agente (al contrario de Chef o Puppet) en cada una de las máquinas del inventario que queramos administrar lo que lo hace fácil de emplear, usa un modelo «push» en el que la máquina donde se ejecuta Ansible envía por ssh los comandos necesarios a aplicar en vez de ser cada una de las máquinas las que obtienen de un repositorio las recetas a usar. En los artículos <a href="https://www.ansible.com/application-deployment">Application Deployment</a>, <a href="https://www.ansible.com/configuration-management">Configuration Management</a> y <a href="https://www.ansible.com/continuous-delivery">Continous Delivery</a> nos describen algunos casos de uso y sus ventajas empleando Ansible.</p>
<p>Para trabajar con Ansible necesitaremos inventariar las máquinas y probablemente definir algunas variables. Podría ser de la siguiente forma en el caso de una máquina para desarrollar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">devbox ansible_connection=local ansible_python_interpreter=python2&#10;&#10;[devbox]&#10;devbox&#10;&#10;[devbox:vars]&#10;path = &#34;projects&#34;&#10;subversion_user = &#34;picodotdev&#34;&#10;subversion_password = &#34;***&#34;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hosts</span>
    </div>
</div>
<p>En el inventario descrito como un archivo en formato INI se asignan los nombres del host o sus direcciones IP, también se pueden hacer agrupaciones de máquinas por ejemplo en base al rol (base de datos, servidor web, &hellip;). Una vez que disponemos del inventario podemos empezar a usar Ansible, por ejemplo haciendo un ping a todas las máquinas o instalando un determinado paquete:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ansible devbox -i hosts -m ping&#10;$ ansible devbox -i hosts -m pacman -a <span class="s2">&#34;name=docker state=installed&#34;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/images/ansible_hu0ee96d09f68b45023e964e4c0b8ce310_35028_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ansible"><img src="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/images/ansible_hu0ee96d09f68b45023e964e4c0b8ce310_35028_300x200_fit_box_3.png" width="300" height="155" alt="Ansible" title="Ansible"  class="lozad "></a></p>
</figure>
</div>
<p>El parámetro -m indica el módulo de Ansible que usamos y a continuación indicamos los parámetros. Ansible dispone de una amplia <a href="http://docs.ansible.com/list_of_all_modules.html">colección de módulos</a> que nos permiten hacer cantidad de tareas.</p>
<p>Pero en vez de usar Ansible mediante comandos podemos emplear recetas contenidas en <a href="http://docs.ansible.com/playbooks.html">playbooks</a> descritos en formato YAML en las que definimos varias tareas y podemos usar las variables del inventario. Con el siguiente playbook instalamos varios paquetes en una máquina Arch Linux y hacemos un checkout de dos proyectos de subversion, para ello usamos en la primera tarea el módulo para gestionar paquetes con pacman, hay módulos para los gestores de paquetes de otras distribuciones (apt, yum, &hellip;) y en la segunda tarea hacemos un checkout de dos proyectos usando el módulo del sistema de control de versiones subversion. Los módulos son idempotentes de forma que una vez que el sistema está en el estado deseado no se realiza la operación, esto hace que el mismo playbook pueda ser ejecutado tantas veces como se desee evitando efectos colaterales por reejecuciones, lo importante es el estado que se quiere conseguir, Ansible se encarga de realizar las acciones necesarias para llegar a él desde el estado actual del sistema.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml">- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">devbox</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">install packages (Arch Linux)</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">pacman</span><span class="p">:</span><span class="w"> </span><span class="l">name={{ item }} state=present</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">sudo</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">when</span><span class="p">:</span><span class="w"> </span><span class="l">ansible_distribution == &#34;Archlinux&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">vim</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">subversion</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">mariadb</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">redis</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">docker</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">ansible</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">python2-pip</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">python2-virtualenv</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">checkout projects</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">LANG</span><span class="p">:</span><span class="w"> </span><span class="l">es_ES.UTF-8</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">LC_CTYPE</span><span class="p">:</span><span class="w"> </span><span class="l">es_ES.UTF-8</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">subversion</span><span class="p">:</span><span class="w"> </span><span class="l">repo={{ item.url }} dest={{ projects }}/{{ item.path }} username={{ subversion_user }} password={{ subversion_password }}</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">with_items</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://server.com/svn/repos/project1/trunk&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;project1&#34;</span><span class="w"> </span>}<span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- {<span class="w"> </span><span class="nt">url</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;http://server.com/svn/repos/project2/trunk&#34;</span><span class="nt">, path</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;project2&#34;</span><span class="w"> </span>}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.yml</span>
    </div>
</div>
<p>Para ejecutar un playbook usamos el comando ansible-playbook en vez de simplemente el comando ansible.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ansible-playbook ansible/install.yml -i hosts&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ansible-playbook-install.sh</span>
    </div>
</div>
<p>En los playbooks podemos usar tareas, grupos de máquinas, variables, variables de grupos, asignar valores a variables, usar condicionales, bucles, hechos (facts, información obtenida por ansible), notificaciones y realizar acciones en base a ellas, aplicar etiquetas a tareas, hacer includes, plantillas (para los archivos de configuración de los servicios, por ejemplo de apache o mysql), esperar a condiciones, cifrar archivos que contengan información sensible y que podamos incluir en una herramienta de control de versiones sin riesgo a comprometer la información, usar roles que aplican todas estas cosas según la función que queramos que tenga una máquina.</p>
<p>El libro <a href="https://www.ansible.com/ansible-book">Ansible Up &amp; Running</a> es un buen punto de partida que explica los aspectos básicos ya en su versión de vista previa, por supuesto la propia <a href="http://docs.ansible.com/index.html">documentación del proyecto</a> y los <a href="https://www.ansible.com/resources">recursos de evangelización</a> están bastante bien. En la siguiente buena y completa presentación se explican con un poco más detalle más cosas:</p>
<div class="media">
    <script async class="speakerdeck-embed" data-id="e02a4f70ee4d01312be742839f79c6f5" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>
    <noscript>$TODO</noscript>
</div>
<p>También, en el siguiente <a href="https://github.com/ansible/ansible-examples">repositorio de GitHub hay varios ejemplos</a> que podemos revisar para ver como se organizan los archivos y carpetas y las convenciones en su estructura que se usan implícitamente.</p>
<p>Como me ha ocurrido con la <a href="https://picodotdev.github.io/blog-bitix/2014/04/introduccion-a-elasticsearch/">herramienta Elasticsearch</a> la documentación de Ansible no me ha resultado que esté escrita de forma didáctica para dominarla empezando desde ningún conocimiento, por ello un libro como <a href="https://amzn.to/37D5mIC">Ansible: Up and Running</a> es una opción interesante para aprender.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1491915323&amp;linkId=4d1cc610f8b4b9439ae029cb32f80c76" title="Amazon" class="lozad"></iframe>
</div>
<p>Habiendo hecho una <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">introducción a Docker</a> y esta a Ansible en el siguiente artículo comentaré <a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">como usar Docker con Ansible</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Ansible_%28software%29">Artículo en la wikipedia</a></li>
<li><a href="https://speakerdeck.com/slok/ansible-all-the-things">Presentación sobre Ansible</a></li>
<li><a href="https://github.com/ansible/ansible-examples">Ansible examples</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">Introducción a Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">Cómo instalar y guía de inicio básica de Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">Cómo crear una imagen para Docker usando un Dockerfile</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/</id>
        <title>Cómo crear una imagen para Docker usando un Dockerfile</title>
        <updated>2020-12-28T17:30:00+01:00</updated>
        <published>2014-11-07T19:50:17+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Podemos usar los contenedores disponibles en Docker Hub, donde están disponibles las aplicaciones de bases de datos, servidores de aplicaciones de múltiples lenguajes, servidores web más populares y entre otras muchas herramientas. Pero también podemos definir nuestras propias imágenes personalizadas con las necesidades que tengamos. Lo que necesitamos es escribir un archivo que contenga la receta para construir la imagen del contenedor, este archivo es el Dockerfile.</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>Las imágenes de <a href="https://www.docker.com/">Docker</a> son el sistema de archivos que usa el proceso o procesos que se arrancan en los contenedores. Si nos convencen las <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">características de Docker</a> y estamos decididos a usarlo y ya sabemos <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">como administrar de forma básica los contenedores</a> si queremos disponer de una imagen adaptada a los servicios que necesitamos para iniciar contenedores tendremos que crearla, en este artículo explicaré cómo crear una imagen para docker personalizada.</p>
<p>Antes de crear una imagen para docker podemos buscar en el <a href="https://registry.hub.docker.com/">registro de imágenes de Docker</a> que han creado otros usuarios y los han compartido por si hay alguna que ya se adapte a nuestras necesidades, si nos sirve alguna y es algo popular nos evitaremos tener que modificarla nosotros mismos según salgan nuevas versiones de los servicios que use. El registro de imágenes de docker es un servicio en el que las organizaciones publican versiones oficiales junto a otros usuarios que comparten y colaboran en la creación de las imágenes. Para los servicios más conocidos dispondremos ya de las imágenes como podrían ser: <a href="https://registry.hub.docker.com/_/mysql/">mysql</a>, <a href="https://registry.hub.docker.com/_/redis/">redis</a>, <a href="https://registry.hub.docker.com/_/postgres/">postgresql</a>, <a href="https://registry.hub.docker.com/_/ubuntu/">ubuntu</a>, <a href="https://registry.hub.docker.com/_/wordpress/">wordpress</a>, <a href="https://registry.hub.docker.com/_/nginx/">nginx</a>, <a href="https://registry.hub.docker.com/_/mongo/">mongodb</a>, &hellip;</p>
<p>Si no hay ninguna que se adapte totalmente a nuestras necesidades, no nos gusta como están construidas las existes o no confiamos en el mantenimiento que puedan tener esas imágenes podemos crear las nuestras propias. Para crear una imagen de docker se necesita una receta en forma de <a href="http://docs.docker.com/reference/builder/">archivo Dockerfile</a> que contiene la descripción e instrucciones para construir la imagen. Para crear un dockerfile podemos basarnos en los de las imágenes del registro de docker.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="archivo-dockerfile">Archivo Dockerfile</h3>
<p>Este podría ser el contenido y la receta de un dockerfile si quisiésemos crear una imagen de docker con el servidor web nginx como servicio basada en la distribución <a href="https://www.ubuntu.com/">Ubuntu</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="k">FROM</span><span class="s"> ubuntu:20.04</span><span class="err">&#10;</span><span class="err"></span><span class="k">MAINTAINER</span><span class="s"> picodotdev &lt;pico.dev@gmail.com&gt;</span><span class="err">&#10;</span><span class="err">&#10;</span><span class="err"></span><span class="k">RUN</span> apt-get -y update <span class="o">&amp;&amp;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;apt-get -y install nginx<span class="err">&#10;</span><span class="err"></span><span class="k">RUN</span> ln -sf /dev/stdout /var/log/nginx/access.log <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">&amp;&amp;</span> ln -sf /dev/stderr /var/log/nginx/error.log<span class="err">&#10;</span><span class="err">&#10;</span><span class="err"></span><span class="k">EXPOSE</span><span class="s"> 80</span><span class="err">&#10;</span><span class="err">&#10;</span><span class="err"></span><span class="k">CMD</span> <span class="p">[</span><span class="s2">&#34;nginx&#34;</span><span class="p">,</span> <span class="s2">&#34;-g&#34;</span><span class="p">,</span> <span class="s2">&#34;daemon off;&#34;</span><span class="p">]</span><span class="err">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Dockerfile</span>
    </div>
</div>
<p>Los archivos Dockerfile son archivos de texto con una secuencia de directivas:</p>
<ul>
<li><em>FROM</em>: indica la imagen base a partir de la cual crearemos la imagen que construirá el Dockerfile.</li>
<li><em>MAINTAINER</em>: documenta el creador de la imagen.</li>
<li><em>ENV</em>: establece el valor de una variable de entorno para los siguientes comandos <em>RUN</em>.</li>
<li><em>RUN</em>: permite ejecutar una instrucción en el contenedor, por ejemplo, para instalar algún paquete mediante el gestor de paquetes (apt-get, yum, rpm, &hellip;).</li>
<li><em>ADD</em>: permite añadir un archivo al contenedor, en muchas ocasiones se utiliza para proporcionar la configuración de los servicios (ssh, mysql, &hellip;).</li>
<li><em>VOLUME</em>: establece puntos de montaje que al usar el contenedor se pueden proporcionar, los volúmenes son al forma de externalizar un determinado directorio y proporcionar persistencia (las imágenes de docker son de solo lectura y no almacenan datos entre diferentes ejecuciones).</li>
<li><em>EXPOSE</em>: indica los puertos TCP/IP por los que se pueden acceder a los servicios del contenedor, los típicos son 22 (SSH), 80 (HTTP) u 443 (HTTP).</li>
<li><em>CMD</em>: establece el comando del proceso de inicio que se usará si no se indica uno al iniciar un contenedor con la imagen.</li>
</ul>
<h3 id="construir-una-imagen-de-docker">Construir una imagen de Docker</h3>
<p>Las instrucciones RUN y ADD permiten aprovisionar la imagen a partir de la imagen base, ejecutando comandos para instalar paquetes como Nginx y añadir archivos de configuración si los hubiera copiados de la máquina anfitrión. El archivo <em>Dockerfile</em> es la receta con la que se construye una imagen de Docker.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>docker build -t <span class="s2">&#34;picodotdev/nginx:1.0&#34;</span> .&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-build.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Sending build context to Docker daemon  10.75kB&#10;Step 1/6 : FROM ubuntu:20.04&#10; ---&gt; f643c72bc252&#10;Step 2/6 : MAINTAINER picodotdev &lt;pico.dev@gmail.com&gt;&#10; ---&gt; Using cache&#10; ---&gt; 58c7c960b513&#10;Step 3/6 : RUN apt-get -y update &amp;&amp;&nbsp;&nbsp;&nbsp;&nbsp; apt-get -y install nginx&#10; ---&gt; Running in a3dd3d05b2b9&#10;Get:1 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]&#10;Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [109 kB]&#10;...&#10;Setting up nginx (1.18.0-0ubuntu1) ...&#10;Processing triggers for libc-bin (2.31-0ubuntu9.1) ...&#10;Removing intermediate container a3dd3d05b2b9&#10; ---&gt; efa07d7c2e15&#10;Step 4/6 : RUN ln -sf /dev/stdout /var/log/nginx/access.log&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; ln -sf /dev/stderr /var/log/nginx/error.log&#10; ---&gt; Running in feb46051e784&#10;Removing intermediate container feb46051e784&#10; ---&gt; bf5cf443326a&#10;Step 5/6 : EXPOSE 80&#10; ---&gt; Running in 5ee72ef91b9d&#10;Removing intermediate container 5ee72ef91b9d&#10; ---&gt; 7c5f47295134&#10;Step 6/6 : CMD [&#34;nginx&#34;, &#34;-g&#34;, &#34;daemon off;&#34;]&#10; ---&gt; Running in 6dc6c8054938&#10;Removing intermediate container 6dc6c8054938&#10; ---&gt; d76e74522ce5&#10;Successfully built d76e74522ce5&#10;Successfully tagged picodotdev/nginx:1.0</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-build.out</span>
    </div>
</div>
<p>La imagen construida queda almacenada en el registro local de imágenes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker images&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-images.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">REPOSITORY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TAG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IMAGE ID&nbsp;&nbsp;&nbsp;&nbsp;   CREATED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SIZE&#10;picodotdev/nginx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  1.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d76e74522ce5   About an hour ago   158MB&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-images.out</span>
    </div>
</div>
<h3 id="iniciar-un-contenedor-con-la-imagen">Iniciar un contenedor con la imagen</h3>
<p>El siguiente comando inicia una instancia del contenedor con un servidor web virtual para el dominio <em>www.127.0.0.1.xip.io</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>docker run -it --rm <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-v <span class="s2">&#34;</span><span class="si">${</span><span class="nv">PWD</span><span class="si">}</span><span class="s2">/www.127.0.0.1.xip.io.conf:/etc/nginx/conf.d/www.127.0.0.1.xip.io.conf:ro&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-v <span class="s2">&#34;</span><span class="si">${</span><span class="nv">PWD</span><span class="si">}</span><span class="s2">/nginx/log:/var/log/nginx&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;-p <span class="s2">&#34;80:80&#34;</span> <span class="se">\&#10;</span><span class="se"></span>&nbsp;&nbsp;&nbsp;&nbsp;picodotdev/nginx:1.0</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-run.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="k">log_format</span> <span class="s">nginx_vcombined</span> <span class="s">&#39;</span><span class="nv">$host:$server_port</span> <span class="s">&#39;</span> <span class="s">&#39;</span><span class="nv">$remote_addr</span> <span class="s">-</span> <span class="nv">$remote_user</span> <span class="s">[</span><span class="nv">$time_local]</span> <span class="s">&#39;</span> <span class="s">&#39;&#34;</span><span class="nv">$request&#34;</span> <span class="nv">$status</span> <span class="nv">$body_bytes_sent</span> <span class="s">&#39;</span> <span class="s">&#39;&#34;</span><span class="nv">$http_referer&#34;</span> <span class="s">&#34;</span><span class="nv">$http_user_agent&#34;&#39;</span><span class="p">;</span>&#10;&#10;<span class="k">server</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span> <span class="s">www.127.0.0.1.xip.io</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">access_log</span> <span class="s">/dev/stdout</span> <span class="s">nginx_vcombined</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">access_log</span> <span class="s">/var/log/nginx/nginx-access.log</span> <span class="s">nginx_vcombined</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">error_log</span> <span class="s">/var/log/nginx/nginx-error.log</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">error_log</span> <span class="s">/dev/stderr</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">root</span>   <span class="s">/usr/share/nginx/html</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;<span class="p">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>www.127.0.0.1.xip.io.conf</span>
    </div>
</div>
<p>Otra forma de iniciar el contenedor es con un archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a> que básicamente contiene los mismos parámetros del comando <em>docker run</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3.9&#34;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">nginx</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="s2">&#34;80:80&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">${PWD}/www.127.0.0.1.xip.io.conf:/etc/nginx/conf.d/www.127.0.0.1.xip.io.conf:ro</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">${PWD}/nginx/log:/var/log/nginx</span><span class="w">&#10;</span><span class="w">&#10;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span>docker-compose up&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<p>Accediendo con el navegador al servidor nginx del contenedor se devuelve la página por defecto.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/images/nginx_hu98cd059ed574f7206fe0ebc08b9a46f4_50303_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nginx"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/images/nginx_hu98cd059ed574f7206fe0ebc08b9a46f4_50303_300x200_fit_box_3.png" width="300" height="176" alt="Nginx" title="Nginx"  class="lozad "></a></p>
</figure>
</div>
<p>Para aprender más sobre Docker es buena idea seguir un manual de referencia como los libros <a href="https://amzn.to/3DgQj7G">Docker: Up &amp; Running</a> y <a href="https://amzn.to/3pH6uEr">Docker in Action</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DockerNginx">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./docker-build.sh</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://www.nkode.io/2014/08/24/valuable-docker-links.html">Lista de enlaces sobre Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/</id>
        <title>Cómo instalar y guía de inicio básica de Docker</title>
        <updated>2015-05-26T20:00:00+01:00</updated>
        <published>2014-11-01T09:47:51+01:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La tecnología de contenedores nos ofrece múltiples ventajas para nuestras aplicaciones. Docker es una de las más nombradas y que está creciendo muy rápidamente. Es muy sencillo empezarla a usar como mostraré en unos pocos comandos a continuación.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p>En el <a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/">artículo anterior introductorio sobre Docker</a> comentaba cuales son sus principales características, que diferencias tiene con la virtualización y algunos casos y motivos por los que nos puede interesar usarlo. El objetivo de este artículo será a modo de guía rápida como empezar a usar <a href="https://www.docker.com/">Docker</a>. Comentaré cuales son los comandos básicos para manejar Docker, las imágenes y los contenedores.</p>
<p>Antes de empezar con la guía propiamente hay que tener en cuenta que otra de las características de Docker es que únicamente se inicia un solo proceso, cuando este finaliza finaliza la instancia del contenedor. Aunque en principio un contenedor solo tiene un proceso, podemos usar como proceso inicial uno que arranque otros, la <a href="https://registry.hub.docker.com/u/phusion/baseimage/">imagen pushion</a> tiene un sistema de inicio adaptado al funcionamiento de Docker (no siendo así upstart de las imágenes de ubuntu o systemd usado por otras distribuciones) con el que podemos iniciar otros procesos, en cualquier caso es recomendable que un contenedor sino tiene un solo proceso tenga unos pocos procesos relacionados con el servicio que proporciona la imagen, la recomendación es no proporcionar una imagen con un montón de servicios/procesos sino varias pequeñas cuyos servicios colaboren. Una imagen de un contenedor es básicamente el sistema de archivos que usará el proceso que iniciamos en el contenedor, necesitamos obtener o construir una imagen para iniciar los contenedores y trabajar con Docker.</p>
<p>Primeramente deberemos instalar el paquete de Docker, en el caso de <a href="https://www.archlinux.org/">Arch Linux</a> con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo pacman -S docker&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-1.sh</span>
    </div>
</div>
<p>Para poder usar Docker sin emplear el comando <em>sudo</em> hay que añadir nuestro usuario al grupo <em>docker</em>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo groupadd docker&#10;$ sudo usermod -aG docker picodotdev&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-2.sh</span>
    </div>
</div>
<p>Una vez instalado el paquete y añadido nuestro usuario al grupo <em>docker</em> podemos iniciar el servicio de Docker, en Arch Linux con systemd:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ sudo systemctl start docker.service&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-3.sh</span>
    </div>
</div>
<p>Con el comando <em>docker images</em>, <em>docker ps</em>, <em>docker ps -a</em> podemos respectivamente ver las imágenes de Docker disponibles en nuestro sistema, las instancias de los contenedores iniciadas y las instancias de los contenedores incluyendo las no iniciadas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker images&#10;$ docker ps&#10;$ docker ps -a</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-4.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-images_hu4f130814d6c33440bf1026f0b7e1b513_32467_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="docker-images"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-images_hu4f130814d6c33440bf1026f0b7e1b513_32467_300x200_fit_box_3.png" width="300" height="163" alt="docker-images" title="docker-images"  class="lozad "></a></p>
</figure>
</div>
<p>Con los comandos <em>docker rm [contenedor]</em> y <em>docker rmi [imagen]</em> podemos eliminar las instancias de contenedores y las imágenes que no estén siendo usadas por ningún contenedor, si están siendo usadas deberemos eliminar primero el contenedor.</p>
<p>Una vez conocemos los comandos básicos para gestionar las imágenes y contenedores aún nos quedan conocer los comandos para obtener las imágenes y como iniciarlas. No hace falta que las imágenes las construyamos nosotros desde cero sino que podemos utilizar las que otras personas han construido. Docker dispone de un <a href="https://registry.hub.docker.com/">registro o repositorio de imágenes</a> en el que la comunidad (otras personas) publica las que ellos han construido, en este registro podemos encontrar imágenes para cualquier servicio de los más utilizados ya sea <a href="https://www.mysql.com/">MySQL</a>, <a href="https://nginx.org/">Nginx</a>, <a href="https://redis.io/">Redis</a>, <a href="https://wordpress.org/">WordPress</a>, <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://www.ubuntu.com/">Ubuntu</a>, <a href="https://www.centos.org/">CentOS</a>, &hellip; Este repositorio de imágenes hace que podamos disponer de estos servicios muy fácilmente, sin embargo, hay que tener en cuenta que algunas imágenes no son construidas por alguien &ldquo;oficial&rdquo; de ese servicio, cualquier persona puede <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-crear-una-imagen-para-docker-usando-un-dockerfile/">construir una imagen de un servicio</a> y hacerlo disponible en el repositorio esto hace que algunas imágenes puedan no ser de la máxima calidad o que estén apropiadamente mantenidas. Por ello, es recomendable utilizar las imágenes más descargadas y usadas, a pesar de todo con Docker si una imagen no nos gusta podemos basarnos en ella para construir una que se adapte totalmente a nuestras necesidades y con la que nos sintamos cómodos.</p>
<p>Para obtener una imagen usamos el comando <em>docker pull [imagen]</em> indicando el usuario que creó la imagen, el nombre de la imagen y el tag. En el siguiente enlace en la pestaña tags podemos ver las <a href="https://registry.hub.docker.com/_/debian/">imágenes para Docker de Debian y sus tag</a>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker pull debian:7.7&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-5.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-pull_hu073f5b22e1c4ee836c55a2e8954480ce_27567_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="docker-pull"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-pull_hu073f5b22e1c4ee836c55a2e8954480ce_27567_300x200_fit_box_3.png" width="300" height="148" alt="docker-pull" title="docker-pull"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez descargada la imagen podemos iniciar un contenedor de la imagen con:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm -i -t --name debian debian:7.7 /bin/bash&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-6.sh</span>
    </div>
</div>
<p>En la terminal que se inicia podemos usar cualquier comando que usaríamos en un sistema <a href="https://www.debian.org/">debian</a> como apt-get.</p>
<p>Este es el momento para explicar otra de las peculiaridades de los contenedores de Docker y es que estos no conservan el estado de una ejecución a otra y cada vez que ejecutemos el comando se creará una nueva instancia del contenedor. Para conseguir la persistencia al crear las imágenes se pueden establecer puntos de montaje, esta persistencia está externalizada en otros contenedores con el solo propósito de servir como volúmenes de datos, también se puede montar un directorio del sistema anfitrión.</p>
<p>Si usamos el comando «uname -a» puede verse que aunque el contenedor usa el sistema de archivos de una distribución debian el kernel empleado es el del sistema anfitrión, esto es así porque los contenedores Docker en esencia no son más que procesos dentro del sistema.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-run_huad4cd875eaead8a61488f479afd6d4bb_19394_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="docker-run"><img src="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/images/docker-run_huad4cd875eaead8a61488f479afd6d4bb_19394_300x200_fit_box_3.png" width="300" height="163" alt="docker-run" title="docker-run"  class="lozad "></a></p>
</figure>
</div>
<p>Continuando esta serie de artículos sobre Docker explicaré como construir una imagen mediante los Dockerfiles con la que podamos usar una base de datos mysql y explicaré en más detalle como podemos conseguir la persistencia que necesitaremos para almacenar los datos de la base de datos usando otro contenedor con este propósito.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://registry.hub.docker.com/">Docker Hub Registry</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/</id>
        <title>Introducción y características de Docker</title>
        <updated>2017-05-02T23:00:00+02:00</updated>
        <published>2014-10-25T10:52:34+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Los contenedores no son una tecnología nueva pero Docker ha reunido las características necesarias para hacerla sencilla y popular en Linux. Suponen un cambio en la infraestructura de las aplicaciones con algunas ventajas sobre la virtualización y la instalación de los servicios directamente en el sistema.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/docker.svg" width="200" height="167" alt="Docker" title="Docker"  class=""></p>
</div>
<p><a href="https://www.docker.com/">Docker</a> es una de las herramientas de la que se está hablando mucho, esto es así ya que tiene varios aspectos interesantes que <a href="https://www.javaworld.com/article/2685223/java-app-dev/four-ways-docker-fundamentally-changes-application-development.html">cambian la forma de desarrollar aplicaciones</a>. Docker es una forma de ejecutar procesos de forma aislada pero también se compone de herramientas para construir imágenes y un repositorio para compartirlas.</p>
<p>Al contrario de la virtualización Docker no emula o virtualiza una máquina y su sistema operativo con lo que los procesos son mucho más ligeros y hace que el hardware pueda ser aprovechado más al poder aumentar la densidad de los servicios en una misma máquina. Los contenedores y servicios incluidos en ellos inician muy rápidamente, en pocos segundos. Además, no es necesario el sistema de archivos completo del sistema operativo invitado con lo que docker usa una fracción de espacio de almacenamiento necesario en la virtualización.</p>
<p>La tecnología de contenedores no es nueva y también está disponible en otros sistemas operativos como <a href="https://openvz.org/">OpenVZ</a> también en Linux, <a href="http://www.freebsd.org/doc/handbook/jails.html">FreeBSD Jails</a> o los <a href="https://www.oracle.com/technetwork/server-storage/solaris/containers-169727.html">contenedores de Solaris</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/virtual-machines_hu36dbd3e9a6507dbf52b85dcf00883824_27419_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Máquinas virtuales"><img src="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/virtual-machines_hu36dbd3e9a6507dbf52b85dcf00883824_27419_300x200_fit_box_3.png" width="300" height="114" alt="Máquinas virtuales" title="Máquinas virtuales"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/docker_hu42f46de04f57b3d5bef570e2161e1676_25641_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Docker"><img src="https://picodotdev.github.io/blog-bitix/2014/10/introduccion-y-caracteristicas-de-docker/images/docker_hu42f46de04f57b3d5bef570e2161e1676_25641_300x200_fit_box_3.png" width="300" height="110" alt="Docker" title="Docker"  class="lozad "></a></p>
</figure>
</div>
<p>Docker tiene varias características interesantes. Es ligero ya que no hay virtualización aprovechándose mejor el hardware y únicamente necesitando el sistema de archivos mínimo para que funcionen los servicios. Los contenedores son autosuficientes (aunque pueden depender de otros contenedores, por ejemplo, un wordpress que necesita una base de datos mysql) no necesitando nada más que la imagen del contenedor para que funcionen los servicios que ofrece. Las imágenes de docker son portables entre diferentes plataformas el único requisito es que en el sistema huésped esté disponible docker. Es seguro, pudiendo hacer que los contenedores se comuniquen por un túnel solo disponible para ellos, los contenedores están aislados en el sistema mediante namespaces y control groups.</p>
<p>Para los desarrolladores tiene las siguientes ventajas:</p>
<ul>
<li>Podemos disponer de un entorno de desarrollo (devbox) o servicio en varios minutos/horas en vez de algún día. Esto es así porque la configuración y los servicios necesarios están automatizados en la construcción de las imágenes de los contenedores mediante <a href="https://docs.docker.com/reference/builder/">Dockerfiles</a>.</li>
<li>Al estar los servicios en contenedores no hace falta instalarlos en la máquina en la que son alojados, de forma que podemos disponer de los servicios y después eliminarlos de forma sencilla sin &ldquo;ensuciar&rdquo; el sistema huésped.</li>
<li>Nos permite tener versiones más parecidas o iguales a las usadas en producción. Por ejemplo, en Arch Linux nos permite tener un mysql de la distribución <a href="https://www.ubuntu.com/">Ubuntu</a> usando la misma versión.</li>
</ul>
<p>El <a href="https://registry.hub.docker.com/">registro de contenedores de Docker</a> es una forma colaborativa de ofrecer imágenes. Hay disponibles multitud de contenedores con los servicios más populares: <a href="https://www.mysql.com/">MySQL</a>, <a href="https://www.postgresql.org/">PostgreSQL</a>, <a href="https://redis.io/">Redis</a>, <a href="https://nginx.org/">Nginx</a>, <a href="https://wordpress.org/">WordPress</a>, &hellip;</p>
<p>Para los administradores de sistemas tiene las siguientes ventajas:</p>
<ul>
<li>Pueden proporcionar entornos similares o iguales a los entornos de pruebas, QA o producción independientemente de la distribución que se use.</li>
<li>Es posible desplegar un contenedor en cualquier infraestructura Linux.</li>
<li>La creación de los contenedores puede ponerse bajo un sistema de control de versiones.</li>
</ul>
<p>En la siguiente presentación muy completa están ampliados muchas de sus posibilidades y funcionalidades.</p>
<div class="media">
    <script async class="speakerdeck-embed" data-id="c02e6030ee52013165c72a37516b560d" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>
    <noscript>$TODO</noscript>
</div>
<p>Una vez conocidos los aspectos básicos y en que se diferencia docker de la virtualización así como el caso de uso de por ejemplo un <em>devbox</em> o disponer de entornos similares a los de producción de una aplicación, en el siguiente artículo comentaré <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">cómo instalar docker, cómo empezar a usarlo, cómo obtener imágenes de servicios y pararlos y administrarlos</a>. En la siguiente <a href="http://www.nkode.io/2014/08/24/valuable-docker-links.html">lista de enlaces sobre Docker</a> se puede encontrar mucha información reunida dispersa en la red, desde introducciones, opiniones, como usarlo, como empaquetar las aplicaciones, como monitorizar o como usarlo en microservicios.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1492036730&amp;linkId=666d0aff3a2629cd87c205370bc5ae87" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1633430235&amp;linkId=9d344246cd59cd65a952305379c2556a" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.docker.com/">Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-ansible/">Introducción a Ansible</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/integracion-entre-ansible-y-docker/">Integración entre Ansible y Docker</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/11/introduccion-a-bitnami/">Introducción a Bitnami</a></li>
<li><a href="https://docs.docker.com/articles/security/">Seguridad Docker</a></li>
<li><a href="https://www.javaworld.com/article/2685223/java-app-dev/four-ways-docker-fundamentally-changes-application-development.html">Four ways Docker fundamentally changes application development</a></li>
<li><a href="https://openwebinars.net/docker-que-es-sus-principales-caracteristicas/">Docker, qué es y sus principales características</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/</id>
        <title>Cómo filtrar contenido HTML de forma segura</title>
        <updated>2015-01-16T12:00:00+01:00</updated>
        <published>2014-10-17T16:53:25+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Algunos sitios y aplicaciones pueden tener la necesidad de <a href="https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/">«scrapear» el contenido de sitios web</a> para extraer información de ellos y posteriormente usarla de alguna forma. El contenido «scrapeado» o obtenido de una fuente externa debe ser filtrado, si no es filtrado y posteriormente es servido a los usuarios puede enviárseles principalmente scripts con contenido malicioso (provocando un ataque <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">cross-site scripting, XSS</a>) o causar una desmaquetación al visualizar el contenido. A la hora de implementar la agregación de contenido de forma segura en <a href="https://twitter.com/blogstackinfo">Blog Stack</a>, contenido obtenido de una fuente RSS o Atom pero que en esencia es HTML he usado la librería <a href="https://jsoup.org/">jsoup</a>, de tal forma que solo el contenido considerado seguro o confiable de los artículos sea agregado.</p>
<p>¿Que puede pasar si en una fuente envía elementos &lt;script&gt;, &lt;iframe&gt; u &lt;object&gt;? Los &lt;script&gt; son código que se envía al navegador del usuario y que podrían explotar algún fallo de seguridad del navegador que usen, los &lt;iframe&gt; permiten cargar contenido de una tercera fuente. En definitiva podrían hacer que visitar Blog Stack fuese inseguro. Pero no permitir incluir estos elementos también haría que no se pudiesen mostrar vídeos de <a href="https://www.youtube.com/">YouTube</a>, <a href="https://vimeo.com/">Vimeo</a>, <a href="https://gist.github.com/">Gist</a> de GitHub, presentaciones de <a href="https://speakerdeck.com/">SpeackerDeck</a> y se perdería parte del contenido original. La solución que he aplicado en Blog Stack es permitir el contenido de esos elementos que provienen de una fuente considerada confiable, es decir, si se trata de un iframe cuyo elemento src proviene de YouTube se permite el contenido ya que se supone que YouTube y su contenido es seguro. De esta forma el contenido puede agregarse de forma segura sin perder nada del contenido original.</p>
<p>Para hacer el filtrado de HTML en java podemos usar jsoup, para ello deberemos usar la clase <a href="http://jsoup.org/apidocs/org/jsoup/safety/Whitelist.html">Whitelist</a> que proporciona jsoup o implementar una clase que la extienda con las etiquetas y sus atributos que consideramos seguros. En Blog Stack he necesitado implementar una clase Whitelist agregándole la funcionalidad que deseaba.</p>
<p>Esta es la implementación de la clase Whitelist, con el método addTag se indican los tags permitidos, con addAttributes se indican los atributos permitidos para cada etiqueta, addProtocols se indican los protocolos permitidos para cada etiqueta y atributo, finalmente el método addAttribute permite usar una expresión regular para el valor del atributo, esto se comprueba en el método isSafeAttribute:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">info.blogstack.misc</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.jsoup.nodes.Attribute</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.jsoup.nodes.Element</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.jsoup.safety.Whitelist</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppWhitelist</span> <span class="kd">extends</span> <span class="n">Whitelist</span> <span class="o">{</span>&#10;&#10;	<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">attributes</span><span class="o">;</span>&#10;&#10;	<span class="kd">private</span> <span class="nf">AppWhitelist</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">attributes</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="n">Whitelist</span> <span class="nf">relaxed</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">Whitelist</span> <span class="n">wl</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppWhitelist</span><span class="o">()</span>&#10;				<span class="o">.</span><span class="na">addTags</span><span class="o">(</span><span class="s">&#34;a&#34;</span><span class="o">,</span> <span class="s">&#34;b&#34;</span><span class="o">,</span> <span class="s">&#34;blockquote&#34;</span><span class="o">,</span> <span class="s">&#34;br&#34;</span><span class="o">,</span> <span class="s">&#34;caption&#34;</span><span class="o">,</span> <span class="s">&#34;cite&#34;</span><span class="o">,</span> <span class="s">&#34;code&#34;</span><span class="o">,</span> <span class="s">&#34;col&#34;</span><span class="o">,</span> <span class="s">&#34;colgroup&#34;</span><span class="o">,</span> <span class="s">&#34;dd&#34;</span><span class="o">,</span> <span class="s">&#34;div&#34;</span><span class="o">,</span> <span class="s">&#34;dl&#34;</span><span class="o">,</span> <span class="s">&#34;dt&#34;</span><span class="o">,</span> <span class="s">&#34;em&#34;</span><span class="o">,</span> <span class="s">&#34;h1&#34;</span><span class="o">,</span> <span class="s">&#34;h2&#34;</span><span class="o">,</span> <span class="s">&#34;h3&#34;</span><span class="o">,</span> <span class="s">&#34;h4&#34;</span><span class="o">,</span> <span class="s">&#34;h5&#34;</span><span class="o">,</span> <span class="s">&#34;h6&#34;</span><span class="o">,</span> <span class="s">&#34;i&#34;</span><span class="o">,</span>&#10;						<span class="s">&#34;img&#34;</span><span class="o">,</span> <span class="s">&#34;li&#34;</span><span class="o">,</span> <span class="s">&#34;ol&#34;</span><span class="o">,</span> <span class="s">&#34;p&#34;</span><span class="o">,</span> <span class="s">&#34;pre&#34;</span><span class="o">,</span> <span class="s">&#34;q&#34;</span><span class="o">,</span> <span class="s">&#34;small&#34;</span><span class="o">,</span> <span class="s">&#34;strike&#34;</span><span class="o">,</span> <span class="s">&#34;strong&#34;</span><span class="o">,</span> <span class="s">&#34;sub&#34;</span><span class="o">,</span> <span class="s">&#34;sup&#34;</span><span class="o">,</span> <span class="s">&#34;table&#34;</span><span class="o">,</span> <span class="s">&#34;tbody&#34;</span><span class="o">,</span> <span class="s">&#34;td&#34;</span><span class="o">,</span> <span class="s">&#34;tfoot&#34;</span><span class="o">,</span> <span class="s">&#34;th&#34;</span><span class="o">,</span> <span class="s">&#34;thead&#34;</span><span class="o">,</span> <span class="s">&#34;tr&#34;</span><span class="o">,</span> <span class="s">&#34;u&#34;</span><span class="o">,</span> <span class="s">&#34;ul&#34;</span><span class="o">)</span>&#10;&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;a&#34;</span><span class="o">,</span> <span class="s">&#34;href&#34;</span><span class="o">,</span> <span class="s">&#34;title&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;blockquote&#34;</span><span class="o">,</span> <span class="s">&#34;cite&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;col&#34;</span><span class="o">,</span> <span class="s">&#34;span&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;colgroup&#34;</span><span class="o">,</span> <span class="s">&#34;span&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;img&#34;</span><span class="o">,</span> <span class="s">&#34;align&#34;</span><span class="o">,</span> <span class="s">&#34;alt&#34;</span><span class="o">,</span> <span class="s">&#34;height&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;title&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;ol&#34;</span><span class="o">,</span> <span class="s">&#34;start&#34;</span><span class="o">,</span> <span class="s">&#34;type&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;q&#34;</span><span class="o">,</span> <span class="s">&#34;cite&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;table&#34;</span><span class="o">,</span> <span class="s">&#34;summary&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;td&#34;</span><span class="o">,</span> <span class="s">&#34;abbr&#34;</span><span class="o">,</span> <span class="s">&#34;axis&#34;</span><span class="o">,</span> <span class="s">&#34;colspan&#34;</span><span class="o">,</span> <span class="s">&#34;rowspan&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;th&#34;</span><span class="o">,</span> <span class="s">&#34;abbr&#34;</span><span class="o">,</span> <span class="s">&#34;axis&#34;</span><span class="o">,</span> <span class="s">&#34;colspan&#34;</span><span class="o">,</span> <span class="s">&#34;rowspan&#34;</span><span class="o">,</span> <span class="s">&#34;scope&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;ul&#34;</span><span class="o">,</span> <span class="s">&#34;type&#34;</span><span class="o">)</span>&#10;&#10;				<span class="o">.</span><span class="na">addProtocols</span><span class="o">(</span><span class="s">&#34;a&#34;</span><span class="o">,</span> <span class="s">&#34;href&#34;</span><span class="o">,</span> <span class="s">&#34;ftp&#34;</span><span class="o">,</span> <span class="s">&#34;http&#34;</span><span class="o">,</span> <span class="s">&#34;https&#34;</span><span class="o">,</span> <span class="s">&#34;mailto&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addProtocols</span><span class="o">(</span><span class="s">&#34;blockquote&#34;</span><span class="o">,</span> <span class="s">&#34;cite&#34;</span><span class="o">,</span> <span class="s">&#34;http&#34;</span><span class="o">,</span> <span class="s">&#34;https&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addProtocols</span><span class="o">(</span><span class="s">&#34;cite&#34;</span><span class="o">,</span> <span class="s">&#34;cite&#34;</span><span class="o">,</span> <span class="s">&#34;http&#34;</span><span class="o">,</span> <span class="s">&#34;https&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addProtocols</span><span class="o">(</span><span class="s">&#34;img&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;http&#34;</span><span class="o">,</span> <span class="s">&#34;https&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addProtocols</span><span class="o">(</span><span class="s">&#34;q&#34;</span><span class="o">,</span> <span class="s">&#34;cite&#34;</span><span class="o">,</span> <span class="s">&#34;http&#34;</span><span class="o">,</span> <span class="s">&#34;https&#34;</span><span class="o">)</span>&#10;				&#10;				<span class="c1">//&#10;</span><span class="c1"></span>				<span class="o">.</span><span class="na">addTags</span><span class="o">(</span><span class="s">&#34;script&#34;</span><span class="o">,</span> <span class="s">&#34;iframe&#34;</span><span class="o">,</span> <span class="s">&#34;noscript&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;div&#34;</span><span class="o">,</span> <span class="s">&#34;style&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;img&#34;</span><span class="o">,</span> <span class="s">&#34;style&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;script&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;data-.*&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;iframe&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">,</span> <span class="s">&#34;height&#34;</span><span class="o">,</span> <span class="s">&#34;frameborder&#34;</span><span class="o">,</span> <span class="s">&#34;allowfullscreen&#34;</span><span class="o">,</span> <span class="s">&#34;style&#34;</span><span class="o">,</span> <span class="s">&#34;marginwidth&#34;</span><span class="o">,</span> <span class="s">&#34;marginheight&#34;</span><span class="o">,</span> <span class="s">&#34;frameborder&#34;</span><span class="o">,</span> <span class="s">&#34;scrolling&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;object&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">,</span> <span class="s">&#34;height&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;param&#34;</span><span class="o">,</span> <span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;value&#34;</span><span class="o">)</span>&#10;				<span class="o">.</span><span class="na">addAttributes</span><span class="o">(</span><span class="s">&#34;embed&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;type&#34;</span><span class="o">,</span> <span class="s">&#34;width&#34;</span><span class="o">,</span> <span class="s">&#34;height&#34;</span><span class="o">,</span> <span class="s">&#34;allowscriptaccess&#34;</span><span class="o">,</span> <span class="s">&#34;allowfullscreen&#34;</span><span class="o">);</span>&#10;		<span class="k">return</span> <span class="n">wl</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="n">Whitelist</span> <span class="nf">addAttribute</span><span class="o">(</span><span class="n">String</span> <span class="n">tag</span><span class="o">,</span> <span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">String</span> <span class="n">regexp</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attribute</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>&#10;		<span class="n">attribute</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;tag&#34;</span><span class="o">,</span> <span class="n">tag</span><span class="o">);</span>&#10;		<span class="n">attribute</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;key&#34;</span><span class="o">,</span> <span class="n">key</span><span class="o">);</span>&#10;		<span class="n">attribute</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&#34;regexp&#34;</span><span class="o">,</span> <span class="n">regexp</span><span class="o">);</span>&#10;		<span class="k">return</span> <span class="k">this</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="nd">@Override</span>&#10;	<span class="kd">protected</span> <span class="kt">boolean</span> <span class="nf">isSafeAttribute</span><span class="o">(</span><span class="n">String</span> <span class="n">tagName</span><span class="o">,</span> <span class="n">Element</span> <span class="n">el</span><span class="o">,</span> <span class="n">Attribute</span> <span class="n">attr</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">for</span> <span class="o">(</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attribute</span> <span class="o">:</span> <span class="n">attributes</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="n">String</span> <span class="n">tag</span> <span class="o">=</span> <span class="n">attribute</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;tag&#34;</span><span class="o">);</span>&#10;			<span class="n">String</span> <span class="n">key</span> <span class="o">=</span> <span class="n">attribute</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;key&#34;</span><span class="o">);</span>&#10;			<span class="n">String</span> <span class="n">regexp</span> <span class="o">=</span> <span class="n">attribute</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&#34;regexp&#34;</span><span class="o">);</span>&#10;&#10;			<span class="k">if</span> <span class="o">(</span><span class="n">tag</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">tagName</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">attr</span><span class="o">.</span><span class="na">getKey</span><span class="o">().</span><span class="na">matches</span><span class="o">(</span><span class="n">key</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">attr</span><span class="o">.</span><span class="na">getValue</span><span class="o">().</span><span class="na">matches</span><span class="o">(</span><span class="n">regexp</span><span class="o">))</span> <span class="o">{</span>&#10;				<span class="k">return</span> <span class="kc">true</span><span class="o">;</span>&#10;			<span class="o">}</span>&#10;		<span class="o">}</span>&#10;		<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">isSafeAttribute</span><span class="o">(</span><span class="n">tagName</span><span class="o">,</span> <span class="n">el</span><span class="o">,</span> <span class="n">attr</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppWhitelist.java</span>
    </div>
</div>
<p>Y esta es la forma de usar la clase a través de <a href="http://jsoup.org/apidocs/org/jsoup/Jsoup.html#clean%28java.lang.String">Jsoup.clean</a>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">AppWhitelist</span> <span class="n">whitelist</span> <span class="o">=</span> <span class="o">(</span><span class="n">AppWhitelist</span><span class="o">)</span> <span class="n">AppWhitelist</span><span class="o">.</span><span class="na">relaxed</span><span class="o">();</span>&#10;<span class="n">whitelist</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&#34;script&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;^http[s]?://speakerdeck.com/.*$&#34;</span><span class="o">);</span>&#10;<span class="n">whitelist</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&#34;script&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;^http[s]?://gist.github.com/.*$&#34;</span><span class="o">);</span>&#10;<span class="n">whitelist</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&#34;iframe&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;^http[s]?://www.youtube.com/embed/.*$&#34;</span><span class="o">);</span>&#10;<span class="n">whitelist</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&#34;iframe&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;^http[s]?://player.vimeo.com/video/.*$&#34;</span><span class="o">);</span>&#10;<span class="n">whitelist</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&#34;iframe&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;^http[s]?://rcm-eu.amazon-adsystem.com/.*$&#34;</span><span class="o">);</span>&#10;<span class="n">whitelist</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&#34;embed&#34;</span><span class="o">,</span> <span class="s">&#34;src&#34;</span><span class="o">,</span> <span class="s">&#34;^http[s]?://www.youtube.com/v/.*$&#34;</span><span class="o">);</span>&#10;<span class="n">String</span> <span class="n">content</span> <span class="o">=</span> <span class="n">Jsoup</span><span class="o">.</span><span class="na">clean</span><span class="o">(</span><span class="n">postContent</span><span class="o">.</span><span class="na">toString</span><span class="o">(),</span> <span class="n">source</span><span class="o">.</span><span class="na">getPageUrl</span><span class="o">(),</span> <span class="n">whitelist</span><span class="o">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>IndexServiceImpl.java</span>
    </div>
</div>
<p>El <a href="https://github.com/picodotdev/blog-stack">código fuente completo de BS</a> junto con el «scrapeado» y el uso de esta clase está disponible en un repositorio de GitHub.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/">Qué es y cómo hacer «web scraping» en Java</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/como-hacer-un-substring-de-una-cadena-html/">Cómo hacer un substring de una cadena html</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/codificar-los-datos-para-evitar-ataques-xss-en-una-pagina-web/">Codificar los datos para evitar ataques XSS en una página web</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/</id>
        <title>Qué es y cómo hacer «web scraping» en Java</title>
        <updated>2015-05-26T20:00:00+02:00</updated>
        <published>2014-10-10T21:22:40+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/10/que-es-y-como-hacer-web-scraping-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>A falta de una forma estructurada para obtener datos de una fuente podemos extraerla directamente del contenido html de una página, a esto se le denomina «web scraping». En Java y con la librería jsoup podemos obtener la información que necesitamos de forma sencilla.</strong></p>]]>
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Algunas aplicaciones en internet necesitan intercambiar información para hacer algún tipo de integración. La tendencia actual es proporcionar una API REST o algún tipo de archivo descargable con cierto formato que permita procesarlo de forma automatizada y a las aplicaciones obtener la información de forma sencilla y precisa. Sin embargo, hay ocasiones en las que las aplicaciones de las que necesitamos extraer la información no proporcionan ni una API REST ni un archivo descargable con lo que no nos queda más remedio que extraer los datos de la propias páginas web inspeccionando el código HTML, esto en inglés se le conoce como <a href="https://es.wikipedia.org/wiki/Web_scraping">«web scraping»</a>.</p>
<p>En este artículo explicaré como hacer web «scraping» usando la librería <a href="https://jsoup.org/">jsoup</a> y usando el lenguaje de programación Java. jsoup proporciona una <a href="http://jsoup.org/apidocs/">API</a> para poder extraer la información que necesitemos, ya sean las URLs de los enlaces, determinado texto que contiene una valor, imágenes, &hellip; . A través de los selectores similares a los usados en <a href="https://jquery.com/">jquery</a> podemos llegar a los elementos que queremos de forma simple sin tener que hacer complicados algoritmos.</p>
<p>Dada la URL, archivo o String con contenido HTML podemos extraer los enlaces de imágenes, enlaces, hojas de estilos, iconos como se muestra en el siguiente ejemplo:</p>
<ul>
<li><a href="http://jsoup.org/cookbook/extracting-data/example-list-links">Example program: list links</a></li>
</ul>
<p>Un ejemplo práctico en el que podríamos hacer «scraping» es por ejemplo para extraer los enlaces torrent de descarga de todos los libros de un determinado autor o determinada serie de la página <a href="https://www.epublibre.org/">epublibre</a>, esto nos ahorraría tener que hacerlo manualmente. Además si usamos transmission a través de su API podríamos automatizar la descarga.</p>
<p>El algoritmo o algoritmos que necesitemos para extraer la información será específico según la estructura HTML de cada página web, si esta cambia deberemos cambiar el algoritmo o los selectores, en cualquier caso es mejor que tener que hacer la tarea manualmente constantemente que al cabo de un tiempo será tediosa, aburrida y repetitiva.</p>
<p>Pero hay que tener cuidado con el contenido «scrapeado» y se debe tratar como una fuente de datos no segura. Por seguridad hay que tener especial cuidado con los scripts del contenido importado que podrían hacer que nuestra aplicación al mostrarlos tuviese algún problema de seguridad. La siguiente semana explicaré <a href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/">como «scrapear» contenido de forma segura</a> en un ejemplo real como es el agregador de bitácoras <a href="https://twitter.com/blogstackinfo">Blog Stack</a> donde solo se permiten los scripts de fuentes consideradas seguras como presentaciones de <a href="https://speakerdeck.com/">Speakerdeck</a>, <a href="https://gist.github.com/">Gist</a> de GitHub, <a href="https://www.youtube.com/">YouTube</a>, <a href="https://vimeo.com/">Vimeo</a> o publicidad del <a href="https://afiliados.amazon.es">programa de afiliados de Amazon</a>.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/10/como-filtrar-contenido-html-de-forma-segura/">Cómo filtrar contenido HTML de forma segura</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/como-hacer-un-substring-de-una-cadena-html/">Cómo hacer un substring de una cadena html</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/10/generar-urls-semanticas-y-amigables/</id>
        <title>Generar URLs semánticas y amigables</title>
        <updated>2015-01-31T01:00:00+01:00</updated>
        <published>2014-10-03T20:14:18+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/10/generar-urls-semanticas-y-amigables/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En algunas web las urls incluyen el identificativo del objeto de la base de datos a partir de cual se muestra el contenido principal de la página, en <a href="https://twitter.com/blogstackinfo">Blog Stack</a> esto podría ser un artículo pero en otras páginas webs podría ser un producto. Esto genera direcciones de páginas webs «feas» de cara al usuario y al <a href="https://en.wikipedia.org/wiki/Search_engine_optimization">SEO</a> de los buscadores además de exponer cierta información de la base de datos que probablemente no interese a nadie excepto al desarrollador de la página. En este artículo voy a explicar una forma de generar <a href="https://es.wikipedia.org/wiki/URL_sem%C3%A1ntica">urls semánticas</a>, «bonitas» o amigables de cara al usuario y al SEO para los buscadores y como lo he implementado en un ejemplo real como es Blog Stack.</p>
<p>Lo primero que debemos conseguir es que las direcciones urls sean únicas para cualquier página de la web, por tanto, en la url deberemos incluir tanta información como sea necesaria pero al mismo tiempo la mínima para hacerlas únicas, sean cortas y que nos permitan identificar de forma unequívoca el contenido a mostrar o el objeto que nos permite obtener la información a visualizar en la página, esta información formará el denominado <em>slug</em>. En el caso de Blog Stack las direcciones «bonitas» se emplean en este momento en dos sitios, para los artículos y para las etiquetas. La información mínima para un artículo es el nombre de la fuente, el año, el mes y el título, para las etiquetas es simplemente el nombre de la etiqueta. Este es un desglose de las partes que forman una dirección url.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">http://www.blogstack.info/post/blogbitix/2013/12/hola-nuevo-mundo/&#10;^&nbsp;&nbsp;&nbsp;&nbsp;  ^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  ^&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ^&nbsp;&nbsp;&nbsp;&nbsp;^  ^&#10;Protocolo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Página&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Año&nbsp;&nbsp;&nbsp;&nbsp; Artículo&#10;&nbsp;&nbsp;&nbsp;&nbsp;   Dominio&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bitácora&nbsp;&nbsp;&nbsp;&nbsp;   Mes&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &lt; --- Slug ----------------------- &gt;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>url.txt</span>
    </div>
</div>
<p>Pero eso no es todo además quizá queramos transliterar los caracteres de forma que las urls no tengan ciertos caracteres propios de cada idioma. La solución simple pero poco efectiva es hacer una serie de sustituciones como por ejemplo reemplazar á por a, ñ por n, etc&hellip; Esta solución aparte de tener que hacerla nosotros probablemente no seamos ni siquiera conscientes que deberíamos haber reemplazado algún carácter más, se complica más si hemos de hacer lo mismo con el resto de codificaciones de la que ni siquiera conocemos los caracteres. Una solución mejor es utilizar el comando iconv disponible en linux que hace precisamente lo que buscamos:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">echo</span> <span class="s2">&#34;áéíóúñ&#34;</span> <span class="p">|</span> iconv -f UTF-8 -t ASCII//TRANSLIT&#10;aeioun&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>iconv.sh</span>
    </div>
</div>
<p>Para que la url sea más fácilmente legible es recomendable convertir las mayúsculas a minúsculas y sustituir los caracteres de espacio por un guión (-). En Blog Stack suponiendo un <a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">artículo</a> de la fuente blogbitix publicado en diciembre de 2013 y de título «¡Hola nuevo mundo!» partiríamos de la siguiente url previamente a aplicar la transliteración de caracteres:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">/blogbitix/2013/12/¡Hola nuevo mundo!&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>paso-1.txt</span>
    </div>
</div>
<p>Convertida a minúsculas:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">/blogbitix/2013/12/¡hola nuevo mundo!&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>paso-2.txt</span>
    </div>
</div>
<p>Transliterada con iconv a ASCII:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">/blogbitix/2013/12/?hola nuevo mundo!&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>paso-3.txt</span>
    </div>
</div>
<p>Y finalmente sustituidos cualquier carácter que no esté entre en la siguiente expresión regular [^a-z1-9-] para eliminar por ejemplo signos de puntuación, múltiples guiones seguidos y si el resultado empieza o acaba por guión eliminándolo, al final tenemos el <em>slug</em> o parte de la <a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">url final</a> a la que deberíamos añadir el protocolo y el dominio:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">/blogbitix/2013/12/hola-nuevo-mundo&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>paso-4.txt</span>
    </div>
</div>
<p>Todo esto en código java se traduce en:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">info.blogstack.misc</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Utils</span> <span class="o">{</span>&#10;&#10;	<span class="o">...</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="n">Object</span><span class="o">[]</span> <span class="nf">getContext</span><span class="o">(</span><span class="n">Post</span> <span class="n">post</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">String</span> <span class="n">f</span> <span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getAlias</span><span class="o">();</span>&#10;		<span class="n">String</span> <span class="n">y</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">getConsolidatedPublishDate</span><span class="o">().</span><span class="na">getYear</span><span class="o">());</span>&#10;		<span class="n">String</span> <span class="n">m</span> <span class="o">=</span> <span class="n">StringUtils</span><span class="o">.</span><span class="na">leftPad</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">getConsolidatedPublishDate</span><span class="o">().</span><span class="na">getMonthOfYear</span><span class="o">()),</span> <span class="n">2</span><span class="o">,</span> <span class="s">&#34;0&#34;</span><span class="o">);</span>&#10;		<span class="n">String</span> <span class="n">e</span> <span class="o">=</span> <span class="n">Utils</span><span class="o">.</span><span class="na">urlize</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>&#10;		<span class="k">return</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="n">f</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">m</span><span class="o">,</span> <span class="n">e</span> <span class="o">};</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="n">Object</span><span class="o">[]</span> <span class="nf">getContext</span><span class="o">(</span><span class="n">Label</span> <span class="n">label</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">String</span> <span class="n">l</span> <span class="o">=</span> <span class="n">Utils</span><span class="o">.</span><span class="na">urlize</span><span class="o">(</span><span class="n">label</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;		<span class="k">return</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="n">l</span> <span class="o">};</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">urlize</span><span class="o">(</span><span class="n">String</span> <span class="n">text</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="n">Utils</span><span class="o">.</span><span class="na">transliterate</span><span class="o">(</span><span class="n">text</span><span class="o">.</span><span class="na">toLowerCase</span><span class="o">()).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&#34;[^a-z1-9-]&#34;</span><span class="o">,</span> <span class="s">&#34;-&#34;</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&#34;-+&#34;</span><span class="o">,</span> <span class="s">&#34;-&#34;</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&#34;^-+&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&#34;-+$&#34;</span><span class="o">,</span> <span class="s">&#34;&#34;</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;	&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">transliterate</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">try</span> <span class="o">{</span>&#10;			<span class="n">Process</span> <span class="n">p</span> <span class="o">=</span> <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="s">&#34;iconv -f UTF-8 -t ASCII//TRANSLIT&#34;</span><span class="o">);</span>&#10;			<span class="n">Writer</span> <span class="n">w</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OutputStreamWriter</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>&#10;			<span class="n">Reader</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">());</span>&#10;			<span class="n">IOUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="k">new</span> <span class="n">StringReader</span><span class="o">(</span><span class="n">s</span><span class="o">),</span> <span class="n">w</span><span class="o">);</span>&#10;			<span class="n">w</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;&#10;			<span class="n">Writer</span> <span class="n">sw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringWriter</span><span class="o">();</span>&#10;			<span class="n">IOUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">r</span><span class="o">,</span> <span class="n">sw</span><span class="o">);</span>&#10;			<span class="n">r</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;&#10;			<span class="k">return</span> <span class="n">sw</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>&#10;		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>&#10;		<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="o">...</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Utils-urlize.java</span>
    </div>
</div>
<p>Pero ¿si el identificativo del artículo no está en la url como lo asociamos con el artículo? Nos queda proporcionar una solución a esta necesidad de como identificar esa dirección url semántica y más amigable con el objeto del artículo guardado en la base de datos para mostrarlo al visualizar la página solicitada.</p>
<p>La idea para asociar la url con un objeto de base de datos es crear un hash de la url y tenerlo precalculado en la base de datos, con el hash que generamos a partir de la url y su <em>slug</em> cuando recibimos la petición buscamos el objeto que en la base de datos tenga ese hash. ¿Por qué guardar el hash y no el <em>slug</em>? Un motivo es porque el hash tiene una longitud constante, probablemente mas corto que el <em>slug</em> además de mayor dispersión en el valor del dato que usando un índice de base de datos es beneficioso en la búsqueda. Si la url es única podemos suponer que el hash será único. Si en un futuro cambiásemos la información del <em>slug</em> para calcular el hash lógicamente deberíamos recalcular todos los <em>hashs</em>. Para calcular el hash podemos usar la función MD5 o SHA con el siguiente código en java.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">info.blogstack.misc</span><span class="o">;</span>&#10;&#10;<span class="o">...</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Utils</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getHash</span><span class="o">(</span><span class="n">Post</span> <span class="n">post</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="n">Utils</span><span class="o">.</span><span class="na">getHash</span><span class="o">(</span><span class="n">Utils</span><span class="o">.</span><span class="na">getContext</span><span class="o">(</span><span class="n">post</span><span class="o">));</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getHash</span><span class="o">(</span><span class="n">Object</span><span class="o">[]</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">try</span> <span class="o">{</span>&#10;			<span class="n">String</span><span class="o">[]</span> <span class="n">s</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">context</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>&#10;			<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>&#10;				<span class="n">s</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="s">&#34;%s&#34;</span><span class="o">;</span>&#10;			<span class="o">}</span>&#10;			<span class="n">String</span> <span class="n">ss</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">join</span><span class="o">(</span><span class="n">s</span><span class="o">,</span> <span class="s">&#34;/&#34;</span><span class="o">),</span> <span class="n">context</span><span class="o">);</span>&#10;			<span class="kt">byte</span><span class="o">[]</span> <span class="n">h</span> <span class="o">=</span> <span class="n">MessageDigest</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&#34;MD5&#34;</span><span class="o">).</span><span class="na">digest</span><span class="o">(</span><span class="n">ss</span><span class="o">.</span><span class="na">getBytes</span><span class="o">());</span>&#10;			<span class="k">return</span> <span class="n">Base64</span><span class="o">.</span><span class="na">encodeBase64String</span><span class="o">(</span><span class="n">h</span><span class="o">);</span>&#10;		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">NoSuchAlgorithmException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>&#10;		<span class="o">}</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="o">...</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="n">Object</span><span class="o">[]</span> <span class="nf">getContext</span><span class="o">(</span><span class="n">Post</span> <span class="n">post</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">String</span> <span class="n">f</span> <span class="o">=</span> <span class="n">post</span><span class="o">.</span><span class="na">getSource</span><span class="o">().</span><span class="na">getAlias</span><span class="o">();</span>&#10;		<span class="n">String</span> <span class="n">y</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">getConsolidatedPublishDate</span><span class="o">().</span><span class="na">getYear</span><span class="o">());</span>&#10;		<span class="n">String</span> <span class="n">m</span> <span class="o">=</span> <span class="n">StringUtils</span><span class="o">.</span><span class="na">leftPad</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">getConsolidatedPublishDate</span><span class="o">().</span><span class="na">getMonthOfYear</span><span class="o">()),</span> <span class="n">2</span><span class="o">,</span> <span class="s">&#34;0&#34;</span><span class="o">);</span>&#10;		<span class="n">String</span> <span class="n">e</span> <span class="o">=</span> <span class="n">Utils</span><span class="o">.</span><span class="na">urlize</span><span class="o">(</span><span class="n">post</span><span class="o">.</span><span class="na">getTitle</span><span class="o">());</span>&#10;		<span class="k">return</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="n">f</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">m</span><span class="o">,</span> <span class="n">e</span> <span class="o">};</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="o">...</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Utils-hash.java</span>
    </div>
</div>
<p>Esta solo es una forma de crear las urls pero suficiente para el propósito de Blog Stack. Quizá en otro caso podríamos querer generar direcciones con caracteres que no solo sean ASCII o incluyan los propios de otra codificación como por ejemplo caracteres cirílicos, chinos o japoneses. También en vez de incluir en la url la referencia a un solo objeto con el <em>slug</em> incluir los <em>slugs</em> de varios objetos, sin esta solución deberíamos incluir un segundo identificativo de la base de datos y las direcciones serán aún más feas, menos amigables y peores en cuanto a SEO.</p>
<p>El código fuente completo de la clase Utils.java lo puedes encontrar en el <a href="https://github.com/picodotdev/blog-stack/tree/master">repositorio de GitHub de Blog Stack</a>.</p>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="programacion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/09/agregador-blog-stack-redisenado/</id>
        <title>Agregador Blog Stack rediseñado</title>
        <updated>2014-09-30T21:00:00+02:00</updated>
        <published>2014-09-30T19:38:46+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/09/agregador-blog-stack-redisenado/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogstack.png" width="200" height="43" alt="Blog Stack" title="Blog Stack"  class=""></p>
</div>
<p>Estas últimas semanas he podido dedicar un poco de tiempo a al proyecto personal de <a href="https://twitter.com/blogstackinfo">Blog Stack</a>. Blog Stack es un agregador o planeta de bitácoras en español sobre linux, software libre, programación, desarrollo, metodologías ágiles y tecnología. En dos artículos anteriores explicaba más en detalle que es Blog Stack, en uno de ellos hacía una <a href="https://picodotdev.github.io/blog-bitix/2014/05/presentacion-blog-stack/">descripción y presentación</a> y en otro explicaba <a href="https://picodotdev.github.io/blog-bitix/2014/05/arquitectura-y-hospedaje-de-blog-stack/">como está hecho en el aspecto técnico</a> tanto detallando cuales son las tecnología que usa como la arquitectura del proyecto.</p>
<p>En este tiempo que he podido dedicarle he mejorado el diseño y aspecto visual de la página, destacando a dos columnas los últimos artículos agregados, incluyendo etiquetas con imágenes y modificando ligeramente el menú de navegación al <a href="http://www.blogstack.info/archive">archivo</a>, <a href="http://www.blogstack.info/faq">preguntas frecuentes</a> y <a href="http://www.blogstack.info/faq#aggregate">como solicitar agregar una bitácora</a>. Probablemente cuando tenga más ideas, un poco más de tiempo y el ánimo para implementarlas siga mejorándolo más. Pero el rediseño no ha sido todo, he credo una <a href="https://twitter.com/blogstackinfo/">cuenta de twitter</a> para BS de modo que los artículos que vaya agregando sean publicados en tweets de forma automática y posiblemente lleguen a más gente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/09/agregador-blog-stack-redisenado/images/blogstack_hubfb8575e16429578e34f16605739f2d7_134367_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Blog Stack"><img src="https://picodotdev.github.io/blog-bitix/2014/09/agregador-blog-stack-redisenado/images/blogstack_hubfb8575e16429578e34f16605739f2d7_134367_300x200_fit_q90_box.jpg" width="244" height="200" alt="Blog Stack" title="Blog Stack"  class="lozad "></a></p>
</figure>
</div>
<p>Si tienes una bitácora de la temática de BS con pocos <em>offtopics</em> y quisieras agregarla en un <a href="http://www.blogstack.info/faq#aggregate">apartado de las preguntas frecuentes</a> tienes las instrucciones, basta con un correo electrónico o una petición en GitHub y una información básica sobre tu bitácora. Blog Stack tiene algunas características que otros agregadores o planetas carecen para los editores, por ejemplo, agregar de forma segura los gist de GitHub, vídeos de youtube o vimeo, presentaciones de SpeakerDeck o publicidad de Amazon de modo que el contenido agregado se presente de forma muy parecida que en la bitácora original. Además, BS es capaz de mostrar publicidad de la bitácora agregada si usa <a href="https://www.google.com/adsense/">AdSense</a> o los comentarios de las entradas si usa <a href="https://disqus.com/">Disqus</a>. En el caso de los  lectores pueden suscribirse únicamente a determinadas etiquetas de Blog Stack si solo están interesados en determinados temas.</p>
<p>La siguiente acción que realizaré será preguntar a los autores de algunas buenas bitácoras si quisieran agregarse a BS. En muchos casos por las <a href="http://es.creativecommons.org/blog/licencias/">licencias de creative commons</a> que muchos empleamos para nuestras bitácoras podría hacerlo sin preguntar pero prefiero hacerlo antes por lo que considero las formas correctas y cortesía.</p>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2014/09/configuracion-usando-codigo-java/</id>
        <title>Configuración usando código Java</title>
        <updated>2015-11-10T19:00:00+01:00</updated>
        <published>2014-09-26T19:18:20+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2014/09/configuracion-usando-codigo-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes"> 
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>En las dos últimas entradas he explicado <a href="https://picodotdev.github.io/blog-bitix/2014/09/compilar-y-cargar-de-forma-dinamica-una-clase-java/">como compilar un archivo de código fuente Java desde una aplicación</a> y como cargar esa clase compilada de forma dinámica para ser utilizada en un programa, la segunda entrada trataba el <a href="https://picodotdev.github.io/blog-bitix/2014/09/monitorizar-archivos-con-java/">como monitorizar un directorio o archivo para ver si han tenido cambios</a> con la nueva API que a partir de Java 7 disponemos.</p>
<p>En esta entrada quiero explicar un ejemplo de como aprovechar estas dos funcionalidades diferentes en un caso práctico y que nos puede ser útil en algún caso. La idea del ejemplo es definir la configuración de una aplicación como podría ser una aplicación web en un archivo de código fuente Java y que cuando se produjese algún cambio se recargase de forma dinámica.</p>
<p>Algunas ventajas de definir la configuración de la aplicación de esta manera son las siguientes:</p>
<ul>
<li>Al ser el archivo de configuración código Java que se compila podemos aprovecharnos de la validación que hace el compilador para estar seguros de que está libre de errores léxicos y sintácticos, el archivo solo se cargará cuando está libre de errores de compilación. Al compilarlo el compilador nos advertirá de los errores que contenga de forma precisa.</li>
<li>Por otra parte al ser código en el archivo de configuración podemos usar el lenguaje Java para hacer ciertas operaciones que en un xml u otro formato de archivo de texto plano no podemos hacer. Podríamos hacer un cálculo o conectarnos a la base de datos u otro sistema para recuperar cierta información. En algunos casos el lenguaje Java puede ser mejor opción para describir la configuración que los archivos de texto, son los mismos <a href="https://elblogdepicodev.blogspot.com.es/2012/03/herramienta-de-construccion-gradle.html">problemas de ant y maven comparados con gradle</a>. También el código Java puede ser la forma más breve y útil para describir la configuración de la aplicación que archivos de texto, usando código Java podremos devolver objetos, listas, &hellip; en vez de Strings o números.</li>
<li>La recarga del archivo de configuración cuando se produzcan cambios en él nos evitará tener que reiniciar la aplicación, simplemente haremos el cambio y la configuración se aplicaría. Esto puede ser útil en las aplicaciones web evitándonos tener que hacer un reinicio de la aplicación.</li>
</ul>
<p>Una de las razones de la existencia de los archivos de configuración es tener esa configuración de forma externalizada a la aplicación de tal forma que podamos cambiar la configuración sin tener que modificar la aplicación ni tener que recompilarla. Con la compilación y carga dinámica de la clase Java de la configuración podemos tener estas mismas propiedades de los archivos de configuración. Si a esto le sumamos la recarga dinámica evitamos tener caídas de servicio en la aplicación por modificaciones en el archivo de configuración.</p>
<p>Todo esto es algo que se comenta en el <a href="https://amzn.to/2sNTtku">libro The Pragmatic Programmer</a> con las siguientes lineas:</p>
<blockquote>
<p>Many programs will scan such things only at startup, which is unfortunate. If you need to change the configuration, this forces you to
restart the application. A more flexible approach is to write programs that can reload their
configuration while they’re running. This flexibility comes at a cost: it
is more complex to implement. If it is a long-running server process, you will want to provide some way to reread and apply
metadata while the program is running.</p>
</blockquote>
<p>Esta es la teoría, veamos el código del ejemplo de configuración en Java con recarga dinámica. La mayor parte del código está en la clase <em>ConfiguracionManager</em>. Esta tiene dos métodos que son usados en la clase Main de la aplicación, el método load carga la clase y la compila, y el método monitor que monitoriza el archivo en busca de cambios y llama al método load cuando los detecte.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.config</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.nio.file.FileSystems</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.nio.file.Path</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">Path</span> <span class="n">path</span> <span class="o">=</span> <span class="n">FileSystems</span><span class="o">.</span><span class="na">getDefault</span><span class="o">().</span><span class="na">getPath</span><span class="o">(</span><span class="s">&#34;src/main/java/io/github/picodotdev/blogbitix/config/AppConfiguracion.java&#34;</span><span class="o">);</span>&#10;		<span class="n">ConfiguracionManager</span> <span class="n">manager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ConfiguracionManager</span><span class="o">(</span><span class="s">&#34;io.github.picodotdev.blogbitix.config.AppConfiguracion&#34;</span><span class="o">,</span> <span class="n">path</span><span class="o">).</span><span class="na">load</span><span class="o">().</span><span class="na">monitor</span><span class="o">();</span>&#10;		&#10;		<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>&#10;		<span class="k">while</span> <span class="o">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="n">20</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="n">2000</span><span class="o">);</span>&#10;			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">manager</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>&#10;		<span class="o">}</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span><span class="lnt">107&#10;</span><span class="lnt">108&#10;</span><span class="lnt">109&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.config</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.io.FileReader</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.io.Reader</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.nio.file.FileSystems</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.nio.file.Path</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.nio.file.StandardWatchEventKinds</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.nio.file.WatchEvent</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.nio.file.WatchKey</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.nio.file.WatchService</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.tools.JavaCompiler</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.tools.JavaFileManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.tools.JavaFileObject</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.tools.ToolProvider</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConfiguracionManager</span> <span class="o">{</span>&#10;&#10;	<span class="kd">private</span> <span class="n">String</span> <span class="n">fullName</span><span class="o">;</span>&#10;	<span class="kd">private</span> <span class="n">Path</span> <span class="n">path</span><span class="o">;</span>&#10;	<span class="kd">private</span> <span class="n">Configuracion</span> <span class="n">configuracion</span><span class="o">;</span>&#10;&#10;	<span class="kd">private</span> <span class="n">Thread</span> <span class="n">thread</span><span class="o">;</span>&#10;	<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">closed</span><span class="o">;</span>&#10;&#10;	<span class="kd">public</span> <span class="nf">ConfiguracionManager</span><span class="o">(</span><span class="n">String</span> <span class="n">fullName</span><span class="o">,</span> <span class="n">Path</span> <span class="n">path</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="k">this</span><span class="o">.</span><span class="na">fullName</span> <span class="o">=</span> <span class="n">fullName</span><span class="o">;</span>&#10;		<span class="k">this</span><span class="o">.</span><span class="na">path</span> <span class="o">=</span> <span class="n">path</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="n">Configuracion</span> <span class="nf">getConfiguracion</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="n">configuracion</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="n">Map</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="n">configuracion</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="n">ConfiguracionManager</span> <span class="nf">load</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">l</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">fullName</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&#34;\\.&#34;</span><span class="o">));</span>&#10;		<span class="n">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">l</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">l</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="n">1</span><span class="o">);</span>&#10;		<span class="n">String</span> <span class="n">source</span> <span class="o">=</span> <span class="n">loadSource</span><span class="o">();</span>&#10;&#10;		<span class="n">JavaCompiler</span> <span class="n">compiler</span> <span class="o">=</span> <span class="n">ToolProvider</span><span class="o">.</span><span class="na">getSystemJavaCompiler</span><span class="o">();</span>&#10;		<span class="n">JavaFileManager</span> <span class="n">manager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ClassFileManager</span><span class="o">(</span><span class="n">compiler</span><span class="o">.</span><span class="na">getStandardFileManager</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>&#10;&#10;		<span class="n">List</span><span class="o">&lt;</span><span class="n">JavaFileObject</span><span class="o">&gt;</span> <span class="n">files</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">JavaFileObject</span><span class="o">&gt;();</span>&#10;		<span class="n">files</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">CharSequenceJavaFileObject</span><span class="o">(</span><span class="n">fullName</span><span class="o">,</span> <span class="n">source</span><span class="o">));</span>&#10;&#10;		<span class="n">compiler</span><span class="o">.</span><span class="na">getTask</span><span class="o">(</span><span class="k">new</span> <span class="n">NullWriter</span><span class="o">(),</span> <span class="n">manager</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="n">files</span><span class="o">).</span><span class="na">call</span><span class="o">();</span>&#10;		<span class="n">configuracion</span> <span class="o">=</span> <span class="o">(</span><span class="n">Configuracion</span><span class="o">)</span> <span class="n">manager</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">(</span><span class="kc">null</span><span class="o">).</span><span class="na">loadClass</span><span class="o">(</span><span class="n">fullName</span><span class="o">).</span><span class="na">newInstance</span><span class="o">();</span>&#10;&#10;		<span class="k">return</span> <span class="k">this</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="n">ConfiguracionManager</span> <span class="nf">monitor</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">closed</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>&#10;&#10;		<span class="n">Runnable</span> <span class="n">task</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>&#10;			<span class="nd">@Override</span>&#10;			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>&#10;				<span class="k">while</span> <span class="o">(!</span><span class="n">closed</span><span class="o">)</span> <span class="o">{</span>&#10;					<span class="k">try</span> <span class="o">(</span><span class="n">WatchService</span> <span class="n">watchService</span> <span class="o">=</span> <span class="n">FileSystems</span><span class="o">.</span><span class="na">getDefault</span><span class="o">().</span><span class="na">newWatchService</span><span class="o">())</span> <span class="o">{</span>&#10;						<span class="n">path</span><span class="o">.</span><span class="na">getParent</span><span class="o">().</span><span class="na">register</span><span class="o">(</span><span class="n">watchService</span><span class="o">,</span> <span class="n">StandardWatchEventKinds</span><span class="o">.</span><span class="na">ENTRY_MODIFY</span><span class="o">);</span>&#10;						<span class="n">WatchKey</span> <span class="n">watchKey</span> <span class="o">=</span> <span class="n">watchService</span><span class="o">.</span><span class="na">take</span><span class="o">();</span>&#10;						<span class="k">if</span> <span class="o">(</span><span class="n">watchKey</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;							<span class="k">return</span><span class="o">;</span>&#10;						<span class="o">}</span>&#10;						<span class="k">for</span> <span class="o">(</span><span class="n">WatchEvent</span><span class="o">&lt;?&gt;</span> <span class="n">event</span> <span class="o">:</span> <span class="n">watchKey</span><span class="o">.</span><span class="na">pollEvents</span><span class="o">())</span> <span class="o">{</span>&#10;							<span class="n">Path</span> <span class="n">p</span> <span class="o">=</span> <span class="o">(</span><span class="n">Path</span><span class="o">)</span> <span class="n">event</span><span class="o">.</span><span class="na">context</span><span class="o">();</span>							&#10;							<span class="n">Path</span> <span class="n">pp</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="na">getParent</span><span class="o">().</span><span class="na">resolve</span><span class="o">(</span><span class="n">p</span><span class="o">);</span>&#10;							<span class="k">if</span> <span class="o">(</span><span class="n">path</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">pp</span><span class="o">))</span> <span class="o">{</span>&#10;								<span class="n">load</span><span class="o">();</span>&#10;							<span class="o">}</span>&#10;						<span class="o">}</span>&#10;					<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>&#10;						<span class="k">throw</span> <span class="k">new</span> <span class="n">RuntimeException</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>&#10;					<span class="o">}</span>&#10;				<span class="o">}</span>&#10;			<span class="o">}</span>&#10;		<span class="o">};</span>&#10;&#10;		<span class="n">thread</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="n">task</span><span class="o">);</span>&#10;		<span class="n">thread</span><span class="o">.</span><span class="na">setDaemon</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>&#10;		<span class="n">thread</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>&#10;&#10;		<span class="k">return</span> <span class="k">this</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">close</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">closed</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">private</span> <span class="n">String</span> <span class="nf">loadSource</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;		<span class="n">StringBuffer</span> <span class="n">source</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>&#10;		<span class="kt">char</span><span class="o">[]</span> <span class="n">buffer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span><span class="o">[</span><span class="n">128</span> <span class="o">*</span> <span class="n">1024</span><span class="o">];</span>&#10;		<span class="n">Reader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileReader</span><span class="o">(</span><span class="n">path</span><span class="o">.</span><span class="na">toFile</span><span class="o">());</span>&#10;		<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buffer</span><span class="o">);</span>&#10;		<span class="k">while</span> <span class="o">(</span><span class="n">n</span> <span class="o">!=</span> <span class="o">-</span><span class="n">1</span><span class="o">)</span> <span class="o">{</span>&#10;			<span class="n">source</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">buffer</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">n</span><span class="o">);</span>&#10;			<span class="n">n</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buffer</span><span class="o">);</span>&#10;		<span class="o">}</span>&#10;		<span class="k">return</span> <span class="n">source</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ConfiguracionManager.java</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2014/09/configuracion-usando-codigo-java/images/main_hu8b068bba2353bdbd15e6919d7eeefd19_24838_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Salida programa Main.java"><img src="https://picodotdev.github.io/blog-bitix/2014/09/configuracion-usando-codigo-java/images/main_hu8b068bba2353bdbd15e6919d7eeefd19_24838_300x200_fit_box_3.png" width="300" height="104" alt="Salida programa Main.java" title="Salida programa Main.java"  class="lozad "></a></p>
</figure>
</div>
<p>Esta idea de no utilizar archivos de configuración sino emplear código como la mejor forma y más breve de definirla es algo que hace <a href="https://gradle.org/">Gradle</a> con los archivos de configuración del proyecto y <a href="https://tapestry.apache.org/">apache tapestry</a> para definir los módulos y la configuración del contenedor de inversión de control, parece una tendencia por el hecho de tener las propiedades y ventajas comentadas sobre otro tipo de archivos ya sean xml o sus sustitutos más recientes como yaml, json, &hellip; que son más compactos y legibles que xml pero que siguen adoleciendo de algunos de los mismos defectos.</p>
<p>El código fuente completo puede encontrarse en el <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/ConfiguracionJava">siguiente repositorio de GitHub</a>.</p>
]]>
        </content>
        
            
                <category term="programacion"/>
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    
</feed>