<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/2016/</id>
    <updated>2016-12-24T12:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/</id>
        <title>22&#43; buenos juegos en GNU/Linux</title>
        <updated>2016-08-22T23:30:00+02:00</updated>
        <published>2016-08-21T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>¿Que en GNU/Linux no hay juegos? Los hay, ciertamente no muchos de los triple A comerciales pero hay algunos originales y otros basados en otros que fueron muy conocidos comerciales publicados con anterioridad que están muy bien.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>El número de juegos disponibles en GNU/Linux no es tan amplia como en Windows. Hay algunos clásicos como el <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/">juego del ajedrez</a> que podemos jugar contra otro humano o contra la computadora, otro clásico es el <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/">juego Go</a> o los <a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/">juegos incluidos en el entorno de escritorio GNOME</a>.</p>
<p>Si estos nos parecen pocos seguramente recordaremos con nostalgia los juegos de <em>arcade</em> de los 80 y 90 con los que tan buenos momentos pasamos en nuestra infancia, con el <a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/">emulador Mame y las ROM de los juegos</a> podremos echarnos unas partidas a algunos juegos míticos. Si estos nos parecen poco hay alguna <a href="https://wiki.archlinux.org/index.php/List_of_games">lista de otros buenos juegos en GNU/Linux</a> más actuales y otra <a href="https://es.wikipedia.org/wiki/Anexo:Videojuegos_libres">lista de juegos de software libre</a>.</p>
<p>Hace un tiempo hice una <a href="https://elblogdepicodev.blogspot.com.es/2010/12/juegos-para-gnulinux.html">pequeña lista de juegos en GNU/Linux</a> en el que comentaba varios: <a href="https://www.openttd.org/en/">OpenTTD</a>, <a href="http://www.hedgewars.org/">Hedgewars</a>, <a href="http://tomatoes.sourceforge.net/">I have no tomatoes</a>, <a href="http://www.frozen-bubble.org/">Frozen Bubble</a>, <a href="http://neverball.org/">Neverball y Neverputt</a> o <a href="http://pingus.seul.org/welcome.html">Pingus</a>. Varios de estos son reimplementaciones de los originales como <a href="https://es.wikipedia.org/wiki/Transport_Tycoon">Transport Tycoon Deluxe</a>, <a href="https://en.wikipedia.org/wiki/Worms_%28series%29">Worms</a>, Puzzle Bobble o <a href="https://es.wikipedia.org/wiki/Lemmings">Lemmings</a>. Los triple A suelen aprovechan todas las capacidades de las tarjetas gráficas y tiene una calidad de gráficos impresionante pero exigen computadoras muy potentes y con los últimos componentes que no todos pueden renovar cada pocos años. Los siguiente juegos quizá a nivel gráfico esté algo por debajo de los últimos estrenos comerciales pero en cuanto a jugabilidad y diversión proporcionada no tiene por que ser menor. De la <a href="https://wiki.archlinux.org/index.php/List_of_games">lista juegos recopilados en la wiki de Arch Linux</a> en este artículo destacaré los siguientes juegos de diferentes géneros que me han parecido de lo mejor que he encontrado con especial mención para <a href="https://www.teeworlds.com/">Teeworlds</a>, <a href="https://supertuxkart.net/Main_Page">Supertux Kart</a>, <a href="https://play0ad.com/">0 A.D</a>, <a href="https://www.wesnoth.org/">The Battle for Wesnoth</a>, <a href="http://ufoai.org/">UFO AI</a>, <a href="https://wl.widelands.org/">Widelands</a> y <a href="http://www.nethack.org/">Nethack</a>.</p>
<p>Todos estos juegos los encontraremos entre los paquetes para nuestra distribución GNU/Linux disponibles para instalar mediante el gestor de paquetes. Si queremos juegos comerciales en Linux en <a href="http://store.steampowered.com/browse/linux/?l=spanish">Steam</a> y <a href="https://www.gog.com/">GOG</a> encontraremos algunos bastante buenos.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="astromenace">Astromenace</h3>
<p>Acción y aventura. Astromenace es un juego de naves con la adición que permite mejorar las armas de la nave. Tiene un aspecto gráfico en tres dimensiones con efectos especiales de gran calidad. <a href="http://www.viewizard.com/astromenace/index_linux.php">Sitio web</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/astromenace-1_hufeeb42d8e78a620ccb9281d00cf19ec3_395731_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/astromenace-1_hufeeb42d8e78a620ccb9281d00cf19ec3_395731_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/astromenace-2_hu0c83c2909c67101df7f96de39ac0796e_372018_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/astromenace-2_hu0c83c2909c67101df7f96de39ac0796e_372018_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a></p>
</figure>
</div>
<h4 id="teeworlds">Teeworlds</h4>
<p>Disparos. Es un <em>shooter</em> en dos dimensiones para jugar contra otros jugadores y con diferentes modos de juego como todos contra todos, equipo contra equipo y capturar la bandera. <a href="https://www.teeworlds.com/">Sitio web</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/teeworlds-1_hubf21d4f6e2939e7b9286a74ebb01e8b7_135299_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/teeworlds-1_hubf21d4f6e2939e7b9286a74ebb01e8b7_135299_300x200_fit_q90_box.jpg" width="300" height="169"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/teeworlds-2_hu162ff1ba91b6a70db0943e6ca76f95da_162784_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/teeworlds-2_hu162ff1ba91b6a70db0943e6ca76f95da_162784_300x200_fit_q90_box.jpg" width="300" height="169"  class="lozad "></a></p>
</figure>
</div>
<h3 id="gcompris">GCompris</h3>
<p>Educación. Es una colección de juegos educativos con numerosas actividades para niños de entre dos y 10 años. Algunas actividades están orientadas al juego no obstante orientadas a la educación. <a href="http://gcompris.net/index-es.html">Sitio web</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/gcompris-1_huc087ca0cea20573f148ac11b2d56c389_18224_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/gcompris-1_huc087ca0cea20573f148ac11b2d56c389_18224_300x200_fit_q90_box.jpg" width="300" height="195"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/gcompris-2_hu1a6100ade2be48059a53403c889b4dbf_31076_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/gcompris-2_hu1a6100ade2be48059a53403c889b4dbf_31076_300x200_fit_q90_box.jpg" width="300" height="195"  class="lozad "></a></p>
</figure>
</div>
<h3 id="torcs">Torcs</h3>
<p>Carreras. Torcs es un juego de simulación de carreras con gráficos 3D. <a href="http://torcs.sourceforge.net/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/torcs-1_hubb261593499691e8a76523e2adedd697_274181_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/torcs-1_hubb261593499691e8a76523e2adedd697_274181_300x200_fit_q90_box.jpg" width="300" height="169"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/torcs-2_hu49e90ec2f179c2d31568e4a67acf11f6_329347_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/torcs-2_hu49e90ec2f179c2d31568e4a67acf11f6_329347_300x200_fit_q90_box.jpg" width="300" height="169"  class="lozad "></a></p>
</figure>
</div>
<h3 id="vdrift">VDrift</h3>
<p>Carreras. Otro juego de simulación de conducción. <a href="http://vdrift.net/">Sitio web</a></p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/ziUSi5ApD6w" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="supertux-kart">Supertux Kart</h3>
<p>Carreras. Similar al <a href="https://es.wikipedia.org/wiki/Super_Mario_Kart">Mario Kart</a> pero ambientado con los personajes del mundo Tux. Es un juego de carreras con múltiples circuitos, personajes y modos de juego. Es un juego con la intención de ser divertido para todas las edades más que realista. Se puede jugar contra la computadora y otros jugadores. <a href="https://supertuxkart.net/Main_Page">Sitio web</a></p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/0FEwDH7XU9Q" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="glest">Glest</h3>
<p>Estrategia. Glest es un juego de estrategia en tiempo real donde puedes controlar dos ejércitos de diferentes acciones, Tech que se compone de guerreros y dispositivos mecánicos y Magic que prefieren magos y criaturas invocadas. <a href="http://glest.org/es/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/glest-1_hu9cd5281b7888fb50c6d650ba921afd8c_149961_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/glest-1_hu9cd5281b7888fb50c6d650ba921afd8c_149961_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/glest-2_hucdb20e240dd8124b2b7501db94e0faa9_182119_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/glest-2_hucdb20e240dd8124b2b7501db94e0faa9_182119_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a></p>
</figure>
</div>
<h3 id="0-ad">0 A.D</h3>
<p>Estrategia. Un juego similar a <a href="https://www.ageofempires.com/">Age of Empires</a> que no tiene nada que envidiarle. Podremos controlar varias de las civilizaciones más conocidas de la antigüedad. <a href="https://play0ad.com/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/0ad-1_hu5d4ab2dbd018b1bbe8504f894216f59f_798815_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/0ad-1_hu5d4ab2dbd018b1bbe8504f894216f59f_798815_300x200_fit_q90_box.jpg" width="300" height="169"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/0ad-2_huddc26bd965f62ddd06feb821493bd58b_203096_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/0ad-2_huddc26bd965f62ddd06feb821493bd58b_203096_300x200_fit_q90_box.jpg" width="300" height="169"  class="lozad "></a></p>
</figure>
</div>
<h3 id="the-battle-for-wesnoth">The Battle for Wesnoth</h3>
<p>Estrategia. Está basado en turnos con una ambientación de fantasía. Deberás formar gradualmente una armada reclutando nuevos guerreros y formando veteranos. Elige personajes de una amplia selección y forma una fuerza con las habilidades correctas para luchar correctamente en diferentes terrenos.</p>
<p>Wesnoth tiene varias campañas, 200 tipos de unidades, 60 razas, 6 facciones y cientos de años de historia. El mundo de Wesnoth es muy grande. <a href="https://www.wesnoth.org/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/wesnoth-1_hu3f29fc1390a106b6208db375662edc72_769921_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/wesnoth-1_hu3f29fc1390a106b6208db375662edc72_769921_300x200_fit_q90_box.jpg" width="300" height="180"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/wesnoth-2_hu07fd0539cba4c827760a64da9d6fcd0b_551908_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/wesnoth-2_hu07fd0539cba4c827760a64da9d6fcd0b_551908_300x200_fit_q90_box.jpg" width="300" height="180"  class="lozad "></a></p>
</figure>
</div>
<h3 id="ufo-ai">UFO AI</h3>
<p>Estrategia. Un juego de estrategia basado en turnos. Formarás un grupo de resistencia para luchar contra la invasión alien. Crearás una base y equiparán a un grupo de combatientes. Está basado en el conocido juego <a href="https://es.wikipedia.org/wiki/X-COM">X-COM</a>. <a href="http://ufoai.org/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/ufo-ai-1_huc025789dfea2d9a17309843fd8c9f76d_148346_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/ufo-ai-1_huc025789dfea2d9a17309843fd8c9f76d_148346_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/ufo-ai-2_hu7d29b86d1dae37ccc70e24eab5d77cfd_844462_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/ufo-ai-2_hu7d29b86d1dae37ccc70e24eab5d77cfd_844462_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a></p>
</figure>
</div>
<h3 id="warzone-2100">Warzone 2100</h3>
<p>Estrategia. Es un juego de estrategia y táctica en tiempo real donde comandarás fuerzas para reconstruir el mundo después de que haya sido destruido por misiles nucleares. Ofrece un modo de campaña, multijugador y de un solo jugador de escaramuzas. 400 diferentes tecnologías combinado con el sistema de diseño de unidades permite una variedad de posibles unidades y tácticas. <a href="https://wz2100.net/">Sitio web</a></p>
<div class="media media-video">
  <iframe width="640" height="360" src="https://www.youtube.com/embed/Qq7qUxeTHvo" frameborder="0" class="lozad" allowfullscreen></iframe>
</div>
<h3 id="widelands">Widelands</h3>
<p>Estrategia. Inspirado en el gran juego <a href="https://en.wikipedia.org/wiki/The_Settlers_II">Settlers II</a> pero con una significante más variedad. Deberás recolectar diferentes tipos de materias y productos para hacer crecer a tu pueblo. <a href="https://wl.widelands.org/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/widelands-1_hue36fae89a86a817ffe86d8db7d326629_615803_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/widelands-1_hue36fae89a86a817ffe86d8db7d326629_615803_300x200_fit_q90_box.jpg" width="300" height="156"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/widelands-2_hu21574f379d189853d20b672003e9d813_280362_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/widelands-2_hu21574f379d189853d20b672003e9d813_280362_300x200_fit_q90_box.jpg" width="300" height="174"  class="lozad "></a></p>
</figure>
</div>
<h3 id="unknown-horizons">Unknown Horizons</h3>
<p>Estrategia. Es un juego de estrategia de simulación en tiempo real en 2D con énfasis en la economía y la construcción de ciudades. Expande tu pequeño establecimiento para forma una colonia poderosa, recolecta impuestos y proporciona a tus habitantes bienes valiosos. Incrementa tu poder con una economía bien balanceada y con comercio estratégico y diplomacia. <a href="http://www.unknown-horizons.org/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/unkonown-horizons-1_huf46d2d9743e29c9307aa1b3d18196498_427300_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/unkonown-horizons-1_huf46d2d9743e29c9307aa1b3d18196498_427300_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/unkonown-horizons-2_hu21192cd4a0109a3fa81a5478fa302585_462350_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/unkonown-horizons-2_hu21192cd4a0109a3fa81a5478fa302585_462350_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a></p>
</figure>
</div>
<h3 id="angband">Angband</h3>
<p><em>Roguelike</em>. Angband es un juego de exploración de mazmorras para un solo jugador. Está basado en texto. Jugarás con un aventurero en busca de riquezas, lucharás contra monstruos y te prepararás para una batalla final con Morgoth, el señor de la oscuridad. <a href="http://rephial.org/">Sitio web</a></p>
<h3 id="nethack">Nethack</h3>
<p><em>Roguelike</em>. Similar a Angband y uno de los juegos de su estilo más conocidos. <a href="http://www.nethack.org/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/nethack-1_hu714f2f82b0b2632c80638115b58b50c8_9329_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/nethack-1_hu714f2f82b0b2632c80638115b58b50c8_9329_300x200_fit_box_3.png" width="300" height="155"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/nethack-2_hu585893820a097ddb9cbdb30fd9dcfdd2_25332_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/nethack-2_hu585893820a097ddb9cbdb30fd9dcfdd2_25332_300x200_fit_box_3.png" width="300" height="180"  class="lozad "></a></p>
</figure>
</div>
<h3 id="shattered-pixel-dungeon">Shattered Pixel Dungeon</h3>
<p><a href="http://pixeldungeon.wikia.com/wiki/Mod-Shattered_Pixel_Dungeon">Shattered Pixel Dungeon</a> es del mismo estilo que <em>Nethack</em>, <em>roguelike</em> y RPG, pero en modo gráfico un héroe, a elegir entre cuatro, guerrero, mago, ladrón y cazadora, se adentra en una mazmorra con el objetivo de aniquilar a los monstruos y recuperar el Amuleto de Yandor. La dificultad del juego es bastante elevada y hay que usar de forma adecuada las habilidades del personaje y los objetos (no todos son buenos, algunos están malditos) que se encuentren en la mazmorra para llegar lo más lejos posible. Hay trampas, puertas secretas, nuevas armas, armaduras, posibilidad de fabricar nuevos objetos y niveles que alcanzar ganando experiencia y dos carreras que seguir.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/shattered-pixel-dungeon-1_hu87021bf65490ef8d1a355075fc6016b5_36018_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/shattered-pixel-dungeon-1_hu87021bf65490ef8d1a355075fc6016b5_36018_300x200_fit_box_3.png" width="115" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/shattered-pixel-dungeon-2_huad97742ba85f3132eec27d925c778437_30626_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/shattered-pixel-dungeon-2_huad97742ba85f3132eec27d925c778437_30626_300x200_fit_box_3.png" width="115" height="200"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/shattered-pixel-dungeon-3_hu9dfbe7fddd10895c9460c5a921a35627_69059_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/shattered-pixel-dungeon-3_hu9dfbe7fddd10895c9460c5a921a35627_69059_300x200_fit_box_3.png" width="115" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/shattered-pixel-dungeon-4_hub573463f8358e2de9601a71592838493_49898_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/shattered-pixel-dungeon-4_hub573463f8358e2de9601a71592838493_49898_300x200_fit_box_3.png" width="115" height="200"  class="lozad "></a></p>
</figure>
</div>
<h3 id="alien-arena-assaultcube-cube-2-sauerbraten-nexuiz-warsow-xonotic">Alien Arena, AssaultCube, Cube 2: Sauerbraten, Nexuiz, Warsow, Xonotic</h3>
<p>Disparos. Juegos similares a <a href="https://es.wikipedia.org/wiki/Quake">Quake</a>.</p>
<ul>
<li><a href="http://red.planetarena.org/">Sitio web Alien Arena</a></li>
<li><a href="http://assault.cubers.net/">Sitio web AssaultCube</a></li>
<li><a href="http://sauerbraten.org/">Sitio web Cube 2: Sauerbraten</a></li>
<li><a href="http://www.nexuiz.com/">Sitio web Nexuiz</a></li>
<li><a href="https://www.warsow.gg/">Sitio web Warsow</a></li>
<li><a href="http://www.xonotic.org/">Sitio web Xonotic</a></li>
</ul>
<h3 id="urban-terror">Urban Terror</h3>
<p>Disparos. Juego similar a <a href="https://es.wikipedia.org/wiki/Counter-Strike">Counter Strike</a> que es la referencia de este estilo. Posee diferentes modos de juego. Ambientado en la actualidad. <a href="http://www.urbanterror.info/home/">Sitio web</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/urban-terror-1_hu58a90a1c59808d7ccc2157f9c8368319_85496_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/urban-terror-1_hu58a90a1c59808d7ccc2157f9c8368319_85496_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/urban-terror-2_hu7dd8754563b72f45e6971f92bb6266eb_89483_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/images/urban-terror-2_hu7dd8754563b72f45e6971f92bb6266eb_89483_300x200_fit_q90_box.jpg" width="267" height="200"  class="lozad "></a></p>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://wiki.archlinux.org/index.php/List_of_games">List of games</a></li>
<li><a href="https://es.wikipedia.org/wiki/Anexo:Videojuegos_libres">Videojuegos libres</a></li>
<li><a href="https://www.humblebundle.com">Humble Bundle</a></li>
<li><a href="http://store.steampowered.com/browse/linux/?l=spanish">Steam Linux</a></li>
<li><a href="https://www.gog.com/">GOG</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/descargar-paquetes-a-actualizar-sin-instalarlos-en-arch-linux/</id>
        <title>Descargar paquetes a actualizar sin instalarlos en Arch Linux</title>
        <updated>2016-08-19T17:00:00+02:00</updated>
        <published>2016-08-19T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/descargar-paquetes-a-actualizar-sin-instalarlos-en-arch-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Arch Linux al ser una distribución de GNU/Linux <em>rolling release</em> las actualizaciones de los paquetes del sistema son tan frecuentes como deseemos, una vez a la semana, una vez al mes, una vez al día, &hellip; Si solo queremos descargar los paquetes y actualizarlos en el momento que deseemos podemos hacerlo con un opción del gestor de paquetes de Arch.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Al actualizar los paquetes de la distribución <em>rolling release</em> <a href="https://www.archlinux.org/">Arch Linux</a> puede interesarnos actualizar las bases de datos de paquetes y descargar los paquetes que estén desactualizados pero sin instalarlos. Descargando los paquetes sin instalarlos nos permite realizar la actualización en el momento que deseemos como por ejemplo en el momento que dejemos de usar el ordenador, descargar los paquetes mientras seguimos usando la computadora y hacer la actualización en el momento que deseemos sin tener que esperar a descargar los paquetes.</p>
<p>Algunos de los paquetes del sistema como el <em>kernel linux</em>, el gestor de arranque como <em>grub</em> o <em>refind</em> o el gestor del sistema como <em>systemd</em> requieren realizar un reinicio del sistema para usar las nuevas versiones. Puede que solo queramos reiniciar el sistema al finalizar la sesión pero sin tener que esperar a que se descarguen la mayoría de los paquetes del repositorio que usemos. Dependiendo de la frecuencia con que actualicemos el sistema el tamaño de la descarga variará, en mi caso que suelo hacer una actualización cada dos semanas el tamaño total de la descarga ronda entre los 300 y 500 MiB.</p>
<p>Para descargar las bases de datos de paquetes usamos la opción <code>-y</code> y para realizar la actualización completa de los paquetes desactualizados que tengamos instalados con la opción <code>-u</code>. Poniendo el comando completo usando <code>pacman</code> o la alternativa <code>yaourt</code>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pacman -Syu</span>&#10;$ yaourt -Syu --aur&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-update.sh</span>
    </div>
</div>
<p>Si queremos actualizar las bases de datos de paquetes y descargar los paquetes a actualizar pero sin realizar la actualización añadimos simplemente la opción <code>-w</code> de tal forma que los comandos anteriores nos quedarían:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pacman -Syuw</span>&#10;$ yaourt -Syuw&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-download.sh</span>
    </div>
</div>
<p>Esta opción puede ayudarnos a ahorrarnos algo de tiempo cada vez que hagamos una actualización al evitarnos esperar a la descarga de los paquetes. En la página de <a href="https://www.archlinux.org/pacman/pacman.8.html">manual de pacman</a> podemos ver la multitud de opciones que tenemos disponibles aunque como usuarios las anteriores serán las que más usemos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ man pacman&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-man.sh</span>
    </div>
</div>
<p>Si te interesa conocer cómo instalar Arch Linux recomiendo hacerlo antes en una máquina virtual con <a href="https://www.virtualbox.org/">VirtualBox</a> leyendo antes y siguiendo el <a href="https://wiki.archlinux.org/index.php/Installation_guide">manual oficial</a>, la <a href="https://wiki.archlinux.org/index.php/Beginners%27_guide">guía para principiantes</a> y para completarlo un artículo que escribí como <a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/">anexo a las guías oficiales</a> anteriores.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/05/anexo-a-la-guia-de-instalacion-y-del-principiante-de-arch-linux/">Anexo a la guía de instalación y del principiante de Arch Linux</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2010/03/de-windows-arch-linux.html">De Windows a Arch Linux</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/de-arch-linux-a-arch-linux/">De Arch Linux a Arch Linux</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/</id>
        <title>Jugar a videojuegos clásicos y míticos de arcade con Mame en GNU/Linux</title>
        <updated>2016-08-15T23:00:00+02:00</updated>
        <published>2016-08-15T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/mame.jpg" width="200" height="66" alt="MAME" title="MAME"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p><a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> no es la plataforma preferida por las empresas de desarrollo de videojuegos para lanzar sus juegos triple A. Esto hace que los juegos más destacados no esté disponibles en GNU/Linux o sea con un tiempo de retraso notable de meses y años. Pero esto no quiere decir que en la plataforma del pingüino no haya juegos algunos que ya he comentado como el <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/">ajedrez</a>, <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/">go</a>, <a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/">juegos ofrecidos en el entorno del escritorio GNOME</a> y otros de diferentes géneros como estrategia, <em>arcade</em> o simulación.</p>
<p>Los juegos actuales de las consolas y PC poseen una calidad gráfica muy notable y han evolucionado al juego en red con otros jugadores como <abbr title="Massively Multiplayer Online">MMO</abbr> siendo más sociales. Hace una décadas las máquinas de <em>arcade</em> y las consolas más modestas como la <a href="https://es.wikipedia.org/wiki/Nintendo_Entertainment_System">NES de Nintendo</a> o los juegos <a href="https://es.wikipedia.org/wiki/Neo-Geo">Neo Geo</a> eran la norma y a pesar de que no se pueden comparar con el realismo de las tres dimensiones proporcionados por las potentes tarjetas gráficas en los juegos actuales su aspecto <a href="https://es.wikipedia.org/wiki/Pixel_art">pixel-art</a> es muy notable pero sobre todo la diversión que proporcionan no tiene que envidiar a cualquier juego actual.</p>
<p>Juegos míticos como 1942, 1943, 1944, Ghouls &amp; Ghosts, Double Dragon, Super Mario 3, Golden Axe, Pengo, Amidar, Donkey Kong, Metal Slug, Rainbow Islands, Track &amp; Field, The Legend of Zelda, &hellip; y me dejo muchísimos The NewZealand Story, Super Glob, Q*bert, Jump Bug, Bagman, &hellip; que en los que andamos entre los 35 y 50 forman parte de nuestro recuerdos de infancia, solo hay que buscar en la <a href="http://www.mamedb.com">base de datos de juegos MAME</a>. Quizá sea por estos recuerdos que la comunidad de juegos retro sigue vigente hoy en día y que organiza eventos de encuentro para fans de las consolas viejas que no obsoletas e informática antigua. Quizá dentro de unas décadas los que hoy está en su infancia con la <a href="https://www.raspberrypi.org/">Raspberry Pi</a> dentro de unas décadas recuerden este pequeño ordenador de 40 € como hoy algunos consideran a la <a href="https://es.wikipedia.org/wiki/MSX">MSX</a>.</p>
<p>Voy a explicar como instalar <a href="https://www.mame.net/">Mame</a> para emular esos sistemas antiguos y con las ROMs de los juegos jugar a ellos en un sistema GNU/Linux. Si nos hacemos con un controlador de consola con la típica cruceta y cuatro o  más botones la experiencia será mejor que con el teclado y más real a la original de la máquina de <em>arcade</em> o consola. El número de  <a href="http://www.progettoemma.net/mess/sysset.php">sistemas soportados por Mame</a> llega a más de 2000 entre ellos <a href="https://en.wikipedia.org/wiki/Amiga">Amiga</a>, <a href="https://en.wikipedia.org/wiki/Amstrad">Amstrad</a>, <a href="https://en.wikipedia.org/wiki/Atari">Atari</a>, <a href="https://en.wikipedia.org/wiki/Commodore_International">Commodore</a>, <a href="https://es.wikipedia.org/wiki/Nintendo_Entertainment_System">Famicon (NES)</a>, <a href="https://es.wikipedia.org/wiki/Master_System">Master System</a>, <a href="https://es.wikipedia.org/wiki/Neo-Geo">Neo Geo</a> o <a href="https://es.wikipedia.org/wiki/Sinclair_ZX_Spectrum">ZX Spectrum</a>.</p>
<p>Deberemos instalar el paquete del <a href="https://www.archlinux.org/packages/community/x86_64/mame/">emulador Mame</a> y un lanzador que en este caso usaré <a href="https://www.archlinux.org/packages/community/x86_64/qmc2/">QMC2</a> aunque como alternativa también está <a href="https://wiki.archlinux.org/index.php/RetroArch">RetroArch</a> o <a href="https://picodotdev.github.io/blog-bitix/2018/02/consola-de-juegos-retro-con-lakka-y-una-raspberry-pi/">Lakka para una Raspberry Pi</a>. Posteriormente deberemos obtener las ROMs de los juegos de algunas de las muchas páginas que existen en internet. En <a href="https://www.archlinux.org/">Arch Linux</a> los paquetes del emulador Mame y el lanzador QMC2 los instalamos con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pacman -S sdlmame qmc2</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.sh</span>
    </div>
</div>
<p>Instalados estos paquetes y descargada una ROM de ejemplo como la de <a href="https://www.emuparadise.me/M.A.M.E._-_Multiple_Arcade_Machine_Emulator_ROMs%5c/Ghouls%27n_Ghosts_%28World%29/13191">Ghouls &amp; Gosht</a> de <a href="https://www.emuparadise.me/">Emuparadise</a> y colocada en un directorio (no hace falta descomprimir el archivo de la ROM) iniciamos el lanzador QMC2. QMC2 inicialmente nos pedirá donde se encuentra el binario del emulador y el directorio donde están las ROMs. Configurado QMC2 buscaremos el juego por su nombre del que hayamos descargado la ROM.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/qmc2_hu51c538e42128df6834b042dbb0fa2199_148026_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Lanzador QMC2"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/qmc2_hu51c538e42128df6834b042dbb0fa2199_148026_300x200_fit_box_3.png" width="239" height="200" alt="Lanzador QMC2" title="Lanzador QMC2"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/qmc2-config_huc60b1896ef7bb86e0a5c7fd9374eb9f1_111395_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de QMC2"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/qmc2-config_huc60b1896ef7bb86e0a5c7fd9374eb9f1_111395_300x200_fit_box_3.png" width="245" height="200" alt="Configuración de QMC2" title="Configuración de QMC2"  class="lozad "></a></p>
<figcaption>Lanzador QMC2 de juegos MAME y su configuración</figcaption>
</figure>
</div>
<p>Si hay varios resultados para el mismo nombre de juego iremos probando a iniciarlos uno a uno hasta que se abra una ventana emergente con el juego. Las teclas por defecto del primer jugador son las flechas del teclado, la tecla <kbd>Alt-izquierda</kbd> para el botón 1, <kbd>Ctrl-izquierdo</kbd> para el botón 2 y la <kbd>barra espaciadora</kbd> para el botón 3. Iniciado sdlmame en la sección de <em>Input &gt; Player 1</em> podremos configurar las teclas. Las teclas <kbd>1</kbd> y <kbd>2</kbd> nos permitirá seleccionar entre uno y dos jugadores y la tecla <kbd>5</kbd> introducir monedas o créditos.</p>
<p>Esta es una pequeña lista no completa de los juegos míticos que recuerdo de mi época.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/amidar_hubc4308cc35696da9b25956ccfd9855f9_13211_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Amidar"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/amidar_hubc4308cc35696da9b25956ccfd9855f9_13211_300x200_fit_box_3.png" width="146" height="200" alt="Amidar" title="Amidar"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/dark-seal_hucfe34cd8d7c7326978ad0c49b5173ba4_87015_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dark Seal"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/dark-seal_hucfe34cd8d7c7326978ad0c49b5173ba4_87015_300x200_fit_box_3.png" width="260" height="200" alt="Dark Seal" title="Dark Seal"  class="lozad "></a></p>
<figcaption>Amidar y Dark Seal</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/donkey-kong_hu10c590c485e9f50ef54f8c0b43701208_17613_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Donkey Kong"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/donkey-kong_hu10c590c485e9f50ef54f8c0b43701208_17613_300x200_fit_box_3.png" width="146" height="200" alt="Donkey Kong" title="Donkey Kong"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/donkey-kong-jr_hue26453685a6d84924ad3aac261f7e072_19015_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Donkey Kong Jr."><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/donkey-kong-jr_hue26453685a6d84924ad3aac261f7e072_19015_300x200_fit_box_3.png" width="146" height="200" alt="Donkey Kong Jr." title="Donkey Kong Jr."  class="lozad "></a></p>
<figcaption>Donkey Kong y Donkey Kong Jr.</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/ghosts-and-goblins_hu108322e18d4be2f4dc948e378284b630_33580_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ghosts and Goblins"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/ghosts-and-goblins_hu108322e18d4be2f4dc948e378284b630_33580_300x200_fit_box_3.png" width="260" height="200" alt="Ghosts and Goblins" title="Ghosts and Goblins"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/ghouls-and-ghosts_hu77532e9e85563f58ebb13aeaff83506b_56185_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Ghouls and Ghosts"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/ghouls-and-ghosts_hu77532e9e85563f58ebb13aeaff83506b_56185_300x200_fit_box_3.png" width="260" height="200" alt="Ghouls and Ghosts" title="Ghouls and Ghosts"  class="lozad "></a></p>
<figcaption>Ghosts and Goblins y Ghouls and Ghosts</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/hyper-sports_hu3d2e4ca2d58fa5f17eafecb443fb8f05_21605_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Hyper Sports"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/hyper-sports_hu3d2e4ca2d58fa5f17eafecb443fb8f05_21605_300x200_fit_box_3.png" width="260" height="200" alt="Hyper Sports" title="Hyper Sports"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/metal-slug_hubc608c0fca18849df3a72dec0161de7c_96130_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Metal Slug"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/metal-slug_hubc608c0fca18849df3a72dec0161de7c_96130_300x200_fit_box_3.png" width="260" height="200" alt="Metal Slug" title="Metal Slug"  class="lozad "></a></p>
<figcaption>Hyper Sports y Metal Slug</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/meikyu-jima_hu8ce0416d09170cfd8684589182f18350_55196_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Meikyu Jima"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/meikyu-jima_hu8ce0416d09170cfd8684589182f18350_55196_300x200_fit_box_3.png" width="260" height="200" alt="Meikyu Jima" title="Meikyu Jima"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/new-rally-x_hu7f29676f5b7d4d83612d2b1390688dcf_65770_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="New Rally X"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/new-rally-x_hu7f29676f5b7d4d83612d2b1390688dcf_65770_300x200_fit_box_3.png" width="260" height="200" alt="New Rally X" title="New Rally X"  class="lozad "></a></p>
<figcaption>Meikyu Jima y New Rally X</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/pang_hu039dbe5d6bb85c0dcec3f3eb4675e2bd_40538_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Pang"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/pang_hu039dbe5d6bb85c0dcec3f3eb4675e2bd_40538_300x200_fit_box_3.png" width="260" height="200" alt="Pang" title="Pang"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/pengo_hua6b9c8f36c3b1684f203feb6134a00b1_18044_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Pengo"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/pengo_hua6b9c8f36c3b1684f203feb6134a00b1_18044_300x200_fit_box_3.png" width="146" height="200" alt="Pengo" title="Pengo"  class="lozad "></a></p>
<figcaption>Pang y Pengo</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/puck-man_hu5513b51dacc3828534cd903de9eafec1_13167_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Puck Man"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/puck-man_hu5513b51dacc3828534cd903de9eafec1_13167_300x200_fit_box_3.png" width="146" height="200" alt="Puck Man" title="Puck Man"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/rainbow-islands_huae08d7258668302adfd449b0bcb8f47c_23852_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Rainbow Islands"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/rainbow-islands_huae08d7258668302adfd449b0bcb8f47c_23852_300x200_fit_box_3.png" width="260" height="200" alt="Rainbow Islands" title="Rainbow Islands"  class="lozad "></a></p>
<figcaption>Puck Man y Rainbow Islands</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/rygar_hub1ed6ac22854118e70c9e2788ed80807_44080_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Rygar"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/rygar_hub1ed6ac22854118e70c9e2788ed80807_44080_300x200_fit_box_3.png" width="260" height="200" alt="Rygar" title="Rygar"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/squash_huc94653a0540889e0e5da31b91cb422e0_41412_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Squash"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/squash_huc94653a0540889e0e5da31b91cb422e0_41412_300x200_fit_box_3.png" width="260" height="200" alt="Squash" title="Squash"  class="lozad "></a></p>
<figcaption>Rygar y Squash</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/super-mario-bros_hu297bf63571ff10ffc7f387b2faf44338_18390_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Super Mario Bros"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/super-mario-bros_hu297bf63571ff10ffc7f387b2faf44338_18390_300x200_fit_box_3.png" width="260" height="200" alt="Super Mario Bros" title="Super Mario Bros"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/super-mario-bros-3_hu289675d9e90190303a58fda4b168c2d3_21997_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Super Mario Bros 3"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/super-mario-bros-3_hu289675d9e90190303a58fda4b168c2d3_21997_300x200_fit_box_3.png" width="260" height="200" alt="Super Mario Bros 3" title="Super Mario Bros 3"  class="lozad "></a></p>
<figcaption>Super Mario Bros y Super Mario Bros 3</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/super-volleyball_hud63a1dc8c8babba7c140910e5523fb84_33751_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Super Volleyball"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/super-volleyball_hud63a1dc8c8babba7c140910e5523fb84_33751_300x200_fit_box_3.png" width="260" height="200" alt="Super Volleyball" title="Super Volleyball"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/tetris_hu1048f60d496882750ad873234096efc9_18422_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Tetris"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/tetris_hu1048f60d496882750ad873234096efc9_18422_300x200_fit_box_3.png" width="260" height="200" alt="Tetris" title="Tetris"  class="lozad "></a></p>
<figcaption>Super Volleyball y Tetris</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/toki_hud99c1693d78bee17b3de33e48e9fc56f_57236_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Toki"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/toki_hud99c1693d78bee17b3de33e48e9fc56f_57236_300x200_fit_box_3.png" width="260" height="200" alt="Toki" title="Toki"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/track-and-field_hu78f71d9b8b578f2ac06107693d94286e_17734_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Track and Field"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/track-and-field_hu78f71d9b8b578f2ac06107693d94286e_17734_300x200_fit_box_3.png" width="260" height="200" alt="Track and Field" title="Track and Field"  class="lozad "></a></p>
<figcaption>Toki y Track and Field</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/traverse_hu863dca9361a1937584eebf684ddf3073_20119_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Traverse"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/traverse_hu863dca9361a1937584eebf684ddf3073_20119_300x200_fit_box_3.png" width="146" height="200" alt="Traverse" title="Traverse"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/willow_hu3a388a921e53ce2fa805e7c082cef535_72970_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Willow"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/willow_hu3a388a921e53ce2fa805e7c082cef535_72970_300x200_fit_box_3.png" width="260" height="200" alt="Willow" title="Willow"  class="lozad "></a></p>
<figcaption>Traverse y Willow</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/wonder-boy_hufd6e37da3f2e002a77f7236974a8121f_25686_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Wonder Boy"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/wonder-boy_hufd6e37da3f2e002a77f7236974a8121f_25686_300x200_fit_box_3.png" width="260" height="200" alt="Wonder Boy" title="Wonder Boy"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/world-rally_hu0e0e42332c8b12faee881aafd8227d60_126031_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="World Rally"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/world-rally_hu0e0e42332c8b12faee881aafd8227d60_126031_300x200_fit_box_3.png" width="260" height="200" alt="World Rally" title="World Rally"  class="lozad "></a></p>
<figcaption>Wonder Boy y World Rally</figcaption>
</figure>
</div>
<p>Ya solo nos queda buscar con tu buscador preferido algún artículo que recopile las mejores ROMs o aquellas que recuerdes y descargarlas en el directorio de las ROMS. Algunos emuladores deberemos previamente <a href="https://www.emuparadise.me/M.A.M.E._-_Multiple_Arcade_Machine_Emulator_ROMs/Neo-Geo/15030">descargar su ROM de emulador como en el caso de Neo-Geo</a> para esta plataforma y colocarla también en el directorio de las ROMs.</p>
<p>Para jugar a los juegos de la NES de Nintendo con QMC2 no he conseguido ejecutarlos, he tenido que introducir el comando <code>sdlmame nes</code> en la terminal buscar la ROM navegando por los directorios, seleccionarla y usar la opción de <em>reset</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/sdlmame-nes_huf69c06575b84adafb546fd3c20ec4cfd_29844_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="sdlmame NES"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/sdlmame-nes_huf69c06575b84adafb546fd3c20ec4cfd_29844_300x200_fit_box_3.png" width="260" height="200" alt="sdlmame NES" title="sdlmame NES"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/sdlmame-nes-supermariobros3_hu1059f57bd650ff2901362f0d3b2158ad_17173_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="sdlmame Super Mario Bros 3"><img src="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/images/sdlmame-nes-supermariobros3_hu1059f57bd650ff2901362f0d3b2158ad_17173_300x200_fit_box_3.png" width="260" height="200" alt="sdlmame Super Mario Bros 3" title="sdlmame Super Mario Bros 3"  class="lozad "></a></p>
<figcaption>Ejecución de un juego NES con sdlmame</figcaption>
</figure>
</div>
<p>Si no usamos Linux tanto Mame como QMC2 están disponibles tanto para <a href="https://www.microsoft.com/es-es/windows/">Windows</a> como para <a href="https://www.apple.com/macos/">Mac OS X</a> en sus secciones de descarga:</p>
<ul>
<li><a href="https://www.mame.net/">mame.net</a></li>
<li><a href="http://qmc2.batcom-it.net/">qmc2.batcom-it.net</a></li>
</ul>
<p>Incluso con una <a href="https://amzn.to/2MXH57Q">Raspberry Pi</a> podremos jugar usando como pantalla una televisión. Con unos <a href="https://amzn.to/3c6hTIP">mandos de consola arcade</a> con los que tener una experiencia muy parecida a una consola. Instalando en la RPi una distribución como <a href="https://retropie.org.uk/">Retropie</a> o <a href="https://www.libretro.com/">Libretro</a> emularemos los juegos en este pequeño computador multipropósito.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B0899VXM8F&amp;linkId=d5f0684371c6b5b8fa5cbd472b276ba4" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07VD5L1VY&amp;linkId=f7a5d402571fb5dd48fa2311dc169469" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01566WOAG&amp;linkId=1c7d89fa46e38c81f0e35cb1518e80ea" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07CXXBTST&amp;linkId=aee5521403e014f5b256191d116ac4b3" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B01N59IUV5&amp;linkId=c11c054c837d2f902b2abce603f514e1" title="Amazon" class="lozad"></iframe>
</div>
<p>Ya solo nos queda disfrutar y pasar un buen rato con nuestros juegos preferidos, nada que envidiar en cuanto a diversión a una PlayStation 4 ;), ah y no ocupan 20 GiB sino menos de 1 MiB.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.emuparadise.me/">Emuparadise</a></li>
<li><a href="https://www.mamedb.com/">MAME Database</a></li>
<li><a href="https://www.xataka.com/videojuegos/emuladores-roms-y-el-debate-entre-la-nostalgia-el-amor-a-lo-retro-y-la-ilegalidad">Emuladores, ROMs y el debate entre la nostalgia, el amor a lo retro y la ilegalidad</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/</id>
        <title>Eligiendo proveedor de internet, finalmente Pepephone</title>
        <updated>2021-06-10T21:30:00+02:00</updated>
        <published>2016-08-14T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Cada unos de los operadores de telecomunicaciones más conocidos e importantes ofrecen internet ya sean con fibra óptica, ADSL o incluso 4G. Junto con la forma de ofrecer internet que en la mayoría es mediante fibra las diferencias están en el precio y las diferencias son significativas. En este artículo comentaré que opciones he barajado y por cual me he decidido finalmente.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/pepephone.svg" width="350" height="87" alt="Pepephone" title="Pepephone"  class=""></p>
</div>
<p>Después de hacer unos cuantos temas ha llegado el turno de elegir un proveedor de internet. Como en todos los casos en los que hay que tomar alguna decisión he empezado por recopilar que opciones ofrece cada compañía, con que características y precios. Hay diferencias importantes entre algunas de las ofertas de los operadores que dependiendo de nuestras necesidades alguna se adaptará mejor, no hay una oferta que de forma absoluta sea la mejor aunque puede que si para una mayoría.</p>
<p>Mis necesidades era simplemente de internet sin combinar con algún plan de móvil, así que con este simple requisito empecé a informarme. Varios operadores ofrecen internet ya sea con <abbr title="Asymmetric Digital Subscriber Line">ADSL</abbr> si no tienen cobertura de fibra entre ellos <a href="http://www.movistar.es/">Movistar</a>, <a href="http://www.vodafone.es">Vodafone</a>, <a href="https://www.orange.es/">Orange</a>, <a href="http://www.amena.com/">Amena</a>, <a href="https://www.pepephone.com/">Pepephone</a> o <a href="http://www.euskaltel.com">Euskaltel</a>. De entre estos debía buscar la oferta que más me convenciera. Una de las primeras diferencias que encontré y que me llamaron la atención aunque ya estaba informado es que en los casos de Pepephone y Amena ofrecen una modalidad de internet sin teléfono fijo lo que evita el abultado coste de la línea o ya está incluido en el precio haciendo que sean algo más baratas. Todas las ofertas que vi del resto de operadores incluían la instalación del obsoleto teléfono fijo que en mi caso no iba a utilizar. Como con el móvil tengo más que suficiente para llamadas de voz las opciones de Amena y Pepephone que no necesitan instalar teléfono junto con el precio ya era un par de buenos motivos para posicionar las opciones.</p>
<p>Aún con dos buenos motivos revisé cuales eran los precios de cada uno de los operadores. Conociéndolos la verdad es que algunos operadores se exceden en sus precios. ¿60 € o más mensuales por tener internet? Por mucho ancho de banda simétrico y megas que ofrezcan me parecía muy caro, además aún descargando mediante <abbr title="Peer-to-peer">P2P</abbr> gran cantidad de cosas es innecesario la cantidad de ancho de banda que ofrecen. 300, 100, 50, incluso 30 o menos son más de lo que necesita un porcentaje altísimo de gente para navegar por internet e incluso para hacer un uso moderado descargas por P2P el menor ancho de banda contratable es suficiente. No se quien necesitará 300 megas simétricos de bajada y subida para uso residencial, me parece más que una necesidad publicidad para endosar una factura de más de 60 €/mes a los clientes.</p>
<p>Estos son los precios aproximados finales y fuera de promociones que los operadores mayoritarios se encargan de ocultar con promociones durante unos meses para desinformar a sus futuros clientes. Salvo Pepephone y la opción de Amena en casa que lo dejan bastante claro además de ser de los mejores precios.</p>
<ul>
<li><a href="http://www.movistar.es/particulares/internet/adsl-fibra-optica?pid=PA-home-NuestrosProductos-2">Movistar: 32,30 + 17,40 (linea), 53,40 €/mes, fibra 30Mb</a></li>
<li><a href="https://www.vodafone.es/tienda/particulares/es/internet-y-fijo/tarifas-cobertura-fibra-adsl/?mostrarGE=true">Vodafone: 31,85 + 18,15 (linea), 50 €/mes, fibra 30Mb</a></li>
<li><a href="https://internet.orange.es/adsl/">Orange 25,95 + 18,15 (linea), 44,1 €/mes, fibra 50Mb</a></li>
<li><a href="https://www.euskaltel.com/CanalOnline/particulares/tienda/fijo/modalidades-internet">Euskaltel: 44 €/mes (línea incluída), cable/fibra 30 Mb</a></li>
<li><a href="https://www.jazztel.com/internet/fibra.html">Jazztel: 19,32 + 19,34, 38,64 €/mes, fibra 20 Mb</a></li>
<li><a href="http://www.amena.com/tarifas/">Amena en casa: 29,95 €/mes, 4G</a></li>
<li><a href="https://www.pepephone.com/internet-en-casa">Pepephone: 23,6 €/mes, ADSL hasta 20 Mb (la máxima que permita la linea)</a></li>
</ul>
<p>Así que las opciones mejor posicionadas como candidatas era el <a href="https://www.pepephone.com/internet-en-casa">ADSL de Pepephone</a> o la opción de <a href="http://tiendaonline2.amena.com/tarifas/amena-en-casa">Amena en casa</a>, sin teléfono fijo y de las opciones más baratas que hay. Comparando estas opciones la de Amena en casa me gustaba que no necesitaba instalación ya que funciona las redes de telefonía 4G al igual que los móviles ofreciendo velocidades similares a la fibra y mayores incluso que el ADSL. En contra de Amena en casa es que es unos 6 euros al mes más cara que el ADSL de Pepephone y que tiene un límite de tráfico de 40 GiB mensuales que no creo que la mayoría de meses superase pero alguno que hiciese descargas con P2P o alguna descarga directa puede que si, superando ese límite de tráfico no se incurre en ningún gasto adicional pero se limita la velocidad a unos ridículos 128 Kbps. Por los mismos motivos a favor de el ADSL de Pepephone tenía el precio y en su contra que necesita instalación de línea nueva que cuesta unos 90 € mas 39 € del coste del <em>router</em> ADSL, aunque adquirir el <em>router</em> es opcional y nos puede servir el de algún otro operador si ya disponemos con anterioridad, yo no tenía. Con Pepephone el coste de instalación y el <em>router</em> llega a 129 € con iva incluido, la opción de Amena en casa solo tiene el coste del <em>router</em> que es de 59 €. Una diferencia de 70 € que con el menor precio de Pepephone se compensa en 12 meses (mucho antes si lo comparamos con otra opción), 15 si incluyésemos el que nos diésemos de baja en Pepephone y la línea que tendría un coste administrativo de 18 €. Finalmente por el precio de 23,6 € al mes, por no tener límite de tráfico y por su forma de trato a sus clientes me decidí por Pepephone. El coste inicial es significativo pero pasados unos meses compensa.</p>
<p>Otro aspecto de Pepephone que me gustaba es el reconocimiento en <a href="https://picodotdev.github.io/blog-bitix/2017/06/asi-trata-pepephone-a-sus-clientes/">el trato que ofrecen a los clientes</a> que ellos mismos destacan como he comprobado unos meses más tarde. Mi experiencia anterior era con Euskaltel y estos tienen la mala costumbre cada año sin que lo pidas subir los megas pero también la factura. En vez de más megas preferiría internet más barato, los accionistas de esa empresa al igual que otras no deben pensar lo mismo. Me parece que los operadores dominantes tratan de exprimir a sus clientes con «ofertas» envenenadas, ahora están con las que incluyen televisión de pago y el fútbol. Los incautos se darán cuenta de que les llegan facturas de entre 50 y 80 euros mensuales, alguien tiene que pagar (que no cuenten conmigo) las obscenas fichas y cláusulas de rescisión de las estrellas del fútbol aunque sean <a href="http://www.eldiario.es/catalunya/Messi-condenados-carcel-fraude-fiscal_0_534396864.html">condenados a 21 meses de cárcel por fraude fiscal</a>.</p>
<p>Volviendo a Pepephone, el <em>router</em> ADSL2+ que proporciona Pepephone está bastante bien en el momento de mi contratación es un <a href="https://www.asus.com/es/Networking/DSLN14U/">ASUS DSL-N14U</a> del que en <a href="http://www.redeszone.net/">RedesZone</a> han hecho varios artículos con un análisis muy detallado. Estas son su características principales:</p>
<ul>
<li>WiFi 802.11 b/g/n de hasta 300 Mbps</li>
<li>Cuatro puertos Fast-Ethernet</li>
<li>Un puerto USB 2.0</li>
<li>64 MB memoria RAM y 16 MB de memoria <em>flash</em></li>
<li>CPU Ralink RT63365E</li>
<li>Soporta descargas por torrent y compartición con CIFS/SAMBA, FTP, DLNA, VPN PPTP</li>
</ul>
<p>Artículos analizándo el <em>router</em> ASUS DSL-N14U:</p>
<ul>
<li><a href="https://www.redeszone.net/2016/07/25/analisis-del-router-asus-dsl-n14u-del-operador-pepephone/">Análisis del <em>router</em> ASUS DSL-N14U del operador Pepephone</a></li>
<li><a href="https://www.redeszone.net/pepephone/asus-dsl-n14u-analisis/">ASUS DSL-N14U: Análisis del nuevo <em>router</em> de Pepephone para su ADSL2+</a></li>
<li><a href="https://www.redeszone.net/pepephone/asus-dsl-n14u-manual-configuracion/">ASUS DSL-N14U: Manual de configuración del nuevo <em>router</em> de Pepephone</a></li>
<li><a href="http:s//www.redeszone.net/pepephone/asus-dsl-n14u-manual-servidor-vpn-pptp/">ASUS DSL-N14U: Manual de configuración del servidor VPN PPTP</a></li>
</ul>
<p>Solicitada la instalación en unos días un técnico de Movistar me instaló la línea nueva (linea que realmente es de Vodafone) y el <em>router</em> me llegó por mensajero al día siguiente, en una semana ya disponía de internet sin complicaciones en la instalación. La velocidad bruta no es la misma que tenía con el cable de Euskaltel y será menor que la fibra pero para navegar no hay mucha diferencia y si en el precio. Como dice Pepephone el ADSL es algo más feo que la fibra y tiene razón de que <a href="http://blog.pepephone.com/index.php/5-verdades-muy-largas-sobre-el-adsl/">hay mucha tontería con los megas y otros mitos del ADSL</a>, para navegar no noto apenas diferencia. Lo noto cuando actualizo <a href="https://www.archlinux.org/">Arch Linux</a> o cuando pongo la <a href="https://www.raspberrypi.org/">Raspberry Pi</a> a descargar por P2P. Aún llegando solo a 630 KiB/s en la descarga cuando con Euskaltel llegaba a 2 MiB/s me es más que suficiente, la RPi la dejo el tiempo que haga falta y en unas horas no hay película que no pueda descargar y la actualización de Arch lleva algo más de tiempo en la descarga pero no algo excesivo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/images/57b048f847e0d91df7ed6dcc_hu016fdd390387ff533514c3c387eab517_29386_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Test de velocidad de ADSL Pepephone"><img src="https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/images/57b048f847e0d91df7ed6dcc_hu016fdd390387ff533514c3c387eab517_29386_300x200_fit_box_3.png" width="300" height="104" alt="Test de velocidad de ADSL Pepephone" title="Test de velocidad de ADSL Pepephone"  class="lozad "></a></p>
<figcaption>Test de velocidad de ADSL Pepephone</figcaption>
</figure>
</div>
<p>Estos 9 MiB de bajada y 400 KiB de subida son algo menos de la mitad teórica del ADSL y en algunas <a href="https://www.testdevelocidad.es/">pruebas de velocidad</a> que he hecho me ha dado resultados de 4 MiB / 200 KiB pero aún en el peor de los casos en la navegación no es perceptible. Respecto a la estabilidad de la linea sin ningún problema, en las pruebas de <em>ping</em> que he hecho no se pierden paquetes. Esta menor velocidad que la teórica es algo que no era una sorpresa para mí que ya me lo esperaba aunque pensaba que sería algo mejor y como he comentado la velocidad no es a lo que más importancia le he dado, si al precio.</p>
<p>Pasados casi cinco años finalmente he pasado <a href="https://picodotdev.github.io/blog-bitix/2021/06/me-cambio-del-adsl-a-la-fibra-de-pepephone/">del ADSL a la fibra de Pepephone</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/images/pepephone_hu8e90536d864b8456878cfd2391a9e510_58435_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Router ADSL de Pepephone"><img src="https://picodotdev.github.io/blog-bitix/2016/08/eligiendo-proveedor-de-internet-finalmente-pepephone/images/pepephone_hu8e90536d864b8456878cfd2391a9e510_58435_300x200_fit_q90_box.jpg" width="191" height="200" alt="Router ADSL de Pepephone" title="Router ADSL de Pepephone"  class="lozad "></a></p>
<figcaption>Router ADSL de Pepephone</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/por-que-guardar-las-fechas-en-utc-en-la-base-de-datos/</id>
        <title>Por qué guardar las fechas en UTC en la base de datos</title>
        <updated>2016-08-14T02:30:00+02:00</updated>
        <published>2016-08-13T01:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/por-que-guardar-las-fechas-en-utc-en-la-base-de-datos/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/postgresql.svg" width="200" height="206" alt="PostgreSQL" title="PostgreSQL"  class=""></p>
</div>
<p>Es rara la aplicación que trabajado con bases de datos no maneje fechas, quizá es menos habitual aplicaciones que trabajan con fechas y diferentes horarias, esto es haciendo alguna conversión entre zonas horarias. Si se nos presenta el caso de trabajar con fechas y diferentes zonas horarias haremos bien en hacer que las fechas que guardemos en la base de datos estén en la misma zona horaria al menos y convertirla posteriormente a la zona horaria que necesite la aplicación. <abbr title="Coordinated Universal Time">UTC</abbr> además de ser una zona horaria neutra evita el problema de que algunas bases de datos o lenguajes de programación para los campos fecha no guarda las zonas horarias con lo que puede ocurrirnos que guardemos la fecha en una zona horaria y la recuperemos en otra produciendo posiblemente incoherencias en las fechas por una hora.</p>
<h3 id="por-qué-elegir-utc">¿Por qué elegir UTC?</h3>
<p>Principalmente porque es una zona horaria neutra, universal y que elimina ambigüedades ya que que no tiene <abbr title="Daily Saving Time">DST</abbr> o horario de verano y podremos guardar las fechas sin temor a que al recuperarlas estén en otra zona horaria si la base de datos o el lenguaje de programación para guardarlas no las soporta.</p>
<p>Otros motivos que se mencionan en un comentario en inglés <a href="http://ideas.kentico.com/forums/239189-kentico-product-ideas/suggestions/6825844-always-store-dates-times-in-utc-in-the-database">Always store dates/times in UTC (in the database)</a> y algún otro en <a href="http://blog.abodit.com/2010/02/datetime-values-should-always-be-stored-in-utc/">DateTime values should always be stored in UTC</a> son que:</p>
<ul>
<li>Calcular duraciones de tiempo es simple. El periodo de tiempo entre la 2:30 AM UTC y las 3:30 AM UTC es siempre una hora cosa que no ocurre en las horas que hay cambio de horario pudiendo ser el periodo entre cero y dos horas.</li>
<li>No hay fechas inválidas cuando se adelanta la hora por ejemplo de las 2:00 AM a las 3:00 AM, pudiendo ser que las 2:30 AM en esa zona horaria no exista.</li>
<li>Se evitan problemas al ordenar o agrupar fechas pudiendo ser el caso de que una fecha con tiempo 2:59 AM sea antes que las 2:01 AM por causa del cambio horario.</li>
<li>Los cambios horarios están sujetos a cambios nada predecibles y varían a lo largo del tiempo con relativa frecuencia con lo para calcular de forma fiable cuantas horas hay entre dos fechas se necesita guardar las variaciones históricas de DST. Ni las fechas de cambios DST son constantes ni las zonas horarias se mantienen fijas para las localizaciones.</li>
</ul>
<p>Una vez recuperada la fecha en UTC podemos <a href="https://picodotdev.github.io/blog-bitix/2015/01/convertir-fechas-y-husos-horarios-en-java/">convertir de diferentes formas una fecha de una zona horaria a otra en Java</a> y en cualquier otro lenguaje con las facilidades que proporcione según la zona horaria a visualizar la fecha.</p>
<h3 id="cúal-es-el-caso-que-puede-dar-problemas">¿Cúal es el caso que puede dar problemas?</h3>
<p>Uno en el que la hora a guardar coincida con un cambio de hora de la zona horaria en la que guardemos las fechas. Por ejemplo, en España el año 2016 el cambio de horario de verano (DST/CEST) a horario de invierno (CET) se hará el 30 de octubre momento en el que a las 3:00 (CEST) volverán a ser las 02:00 pero con diferente zona horaria (CET).</p>
<h3 id="ejemplo">Ejemplo</h3>
<p>Supongamos que tenemos la fecha 30 de octubre a las 02:30 CEST y la guardamos en la base de datos pero sin la zona horaria pasando a estar implícita. En esta fecha y hora se produce un cambio horario de horario de verano a horario de invierno en España. Al recuperar la fecha será 30 de octubre a las 02:30 CET, la diferencia está entre el <abbr title="Central European Summer Time">CEST</abbr> y <abbr title="Central European Time">CET</abbr> o la diferencia horaria +02:00 y +01:00. Una hora de diferencia entre la original y la que recuperamos de la base de datos después de hacer la conversión.</p>
<p>Esto puede probarse con el siguiente ejemplo de código de un programa Java que guarda y recupera de una base de datos <a href="https://www.postgresql.org/">PostgreSQL</a> una fecha que está en el intervalo de cambio horario. En el ejemplo utilizaré <a href="https://picodotdev.github.io/blog-bitix/series/docker/">Docker</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.datetimedatabase</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.sql.*</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.time.ZoneId</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.time.ZonedDateTime</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.time.format.DateTimeFormatter</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">&#34;org.postgresql.Driver&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Connection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="s">&#34;jdbc:postgresql://localhost/user&#34;</span><span class="o">,</span> <span class="s">&#34;user&#34;</span><span class="o">,</span> <span class="s">&#34;user&#34;</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PreparedStatement</span> <span class="n">create</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="s">&#34;CREATE TABLE IF NOT EXISTS date (id SERIAL, date TIMESTAMP, PRIMARY KEY(id))&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">create</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PreparedStatement</span> <span class="n">delete</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="s">&#34;DELETE FROM date&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">delete</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PreparedStatement</span> <span class="n">insert</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="s">&#34;INSERT INTO date (date) VALUES (?)&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ZonedDateTime</span> <span class="n">date</span> <span class="o">=</span> <span class="n">ZonedDateTime</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">2016</span><span class="o">,</span> <span class="n">10</span><span class="o">,</span> <span class="n">30</span><span class="o">,</span> <span class="n">2</span><span class="o">,</span> <span class="n">30</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">ZoneId</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;Europe/Madrid&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Before database: %s\n&#34;</span><span class="o">,</span> <span class="n">date</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_ZONED_DATE_TIME</span><span class="o">));</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">insert</span><span class="o">.</span><span class="na">setTimestamp</span><span class="o">(</span><span class="n">1</span><span class="o">,</span> <span class="n">Timestamp</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">date</span><span class="o">.</span><span class="na">toLocalDateTime</span><span class="o">()));</span> <span class="c1">// !! timezone lost&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">insert</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PreparedStatement</span> <span class="n">select</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="s">&#34;SELECT date FROM date&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ResultSet</span> <span class="n">rs</span> <span class="o">=</span> <span class="n">select</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ZonedDateTime</span> <span class="n">date</span> <span class="o">=</span> <span class="n">ZonedDateTime</span><span class="o">.</span><span class="na">ofInstant</span><span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">getTimestamp</span><span class="o">(</span><span class="s">&#34;date&#34;</span><span class="o">).</span><span class="na">toInstant</span><span class="o">(),</span> <span class="n">ZoneId</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&#34;Europe/Madrid&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;After database: %s\n&#34;</span><span class="o">,</span> <span class="n">date</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">DateTimeFormatter</span><span class="o">.</span><span class="na">ISO_ZONED_DATE_TIME</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Before database: 2016-10-30T02:30:00+02:00[Europe/Madrid]&#10;After database: 2016-10-30T02:30:00+01:00[Europe/Madrid]&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">postgres</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">postgres</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;5432:5432&#34;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_USER=user</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_PASSWORD=user</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">POSTGRES_DB=user</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>Trabajar con fechas no es simple, es muy curioso y no debemos hacer <a href="http://infiniteundo.com/post/25509354022/more-falsehoods-programmers-believe-about-time">suposiciones sobre las fechas que son incorrectas</a> en las aplicaciones.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/DateTimeDatabase">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>cd misc/docker/postgresql/, docker-compose up, ./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/01/convertir-fechas-y-husos-horarios-en-java/">Convertir fechas y husos horarios en Java</a></li>
<li><a href="http://ideas.kentico.com/forums/239189-kentico-product-ideas/suggestions/6825844-always-store-dates-times-in-utc-in-the-database">Always store dates/times in UTC (in the database)</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2019/03/varias-consideraciones-importantes-para-trabajar-con-importes-correctamente-tipo-de-datos-precision-y-guardado/">Por qué guardar los importes con al menos un decimal más de la precisión necesaria</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/</id>
        <title>Juegos incluidos en el entorno de escritorio GNOME</title>
        <updated>2016-08-07T01:00:00+02:00</updated>
        <published>2016-08-07T01:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnome.svg" width="200" height="243" alt="GNOME" title="GNOME"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Además de los clásicos juegos de estrategia y de pensar como son el <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/">ajedrez</a> y <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/">go</a> que disponemos para instalar en <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>, en el entorno de escritorio <a href="https://www.gnome.org/">GNOME</a> tenemos otros juegos más casuales la mayoría también de pensar. En todos su mecánica es sencilla y nos servirán como pasatiempo.</p>
<p>Son los siguientes juegos con una pequeña descripción de cada uno, alguna captura de pantalla y su manual de usuario.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="aisleriot">Aisleriot</h3>
<p>Es una colección de más de 80 modos de solitario de cartas fáciles de jugar con la ayuda de un ratón. Cada modo de juego tiene sus propias reglas y disposición de cartas.</p>
<p><a href="http://library.gnome.org/users/aisleriot/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/aisleriot_hudfa9982333d058f5389e2d02b287dc43_261985_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego aisleriot"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/aisleriot_hudfa9982333d058f5389e2d02b287dc43_261985_300x200_fit_box_3.png" width="249" height="200" alt="Juego aisleriot" title="Juego aisleriot"  class="lozad "></a></p>
<figcaption>Juego aisleriot</figcaption>
</figure>
</div>
<h3 id="cinco-o-mas">Cinco o mas</h3>
<p>El objetivo del juego es alinear 5 o más objetos del mismo color y forma haciéndolos desaparecer, con cada movimiento aparecerán nuevos objetos que nos dificultará alinearlos, el objetivo es poder jugar el máximo tiempo posible .</p>
<p><a href="http://library.gnome.org/users/five-or-more/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/five-or-more_hu2c659bda0976cf2bb8db768362ff214d_22663_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego cinco o más"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/five-or-more_hu2c659bda0976cf2bb8db768362ff214d_22663_300x200_fit_box_3.png" width="239" height="200" alt="Juego cinco o más" title="Juego cinco o más"  class="lozad "></a></p>
<figcaption>Juego cinco o más</figcaption>
</figure>
</div>
<h3 id="cuatro-en-raya">Cuatro en raya</h3>
<p>El objetivo de 4 en raya es construir una línea de cuatro fichas mientras intentamos que el oponente (humano o computadora) construya su línea de 4 en raya. Una línea puede ser horizontal, vertical o diagonal.</p>
<p><a href="http://library.gnome.org/users/four-in-a-row/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/four-in-a-row_hu319f8217581a94d5e6be76073b7c6ba3_18572_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego cuatro en raya"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/four-in-a-row_hu319f8217581a94d5e6be76073b7c6ba3_18572_300x200_fit_box_3.png" width="229" height="200" alt="Juego cuatro en raya" title="Juego cuatro en raya"  class="lozad "></a></p>
<figcaption>Juego cuatro en raya</figcaption>
</figure>
</div>
<h3 id="hitori">Hitori</h3>
<p>Hitori es similar al juego de puzles Sudoku pero en el que se trata de ir eliminando números cumpliendo las restricciones del juego en vez de ir poniéndolos. Posee varios tamaños de tablero.</p>
<p><a href="https://en.wikipedia.org/wiki/Hitori">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/hitori_hu4ec9cc1865d3c23f18b5a8bac49cfaa9_40597_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego hitori"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/hitori_hu4ec9cc1865d3c23f18b5a8bac49cfaa9_40597_300x200_fit_box_3.png" width="167" height="200" alt="Juego hitori" title="Juego hitori"  class="lozad "></a></p>
<figcaption>Juego hitori</figcaption>
</figure>
</div>
<h3 id="iagno">Iagno</h3>
<p>Iango es una versión para computadora del <a href="https://es.wikipedia.org/wiki/Reversi">juego Reversi</a>, más comúnmente conocido como Othello. Es un juego para dos jugadores con ciertos parecidos a <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/">Go</a> en el que hay que capturar las fichas del oponente y dominar el tablero. El tablero es de 8 por 8 con baldosas que son blancas por un lado y negras por el otros. El objetivo de Iango es voltear tantas baldosas del oponente como sea posible sin que el oponente voltee las nuestras. El volteo se realiza atrapando las baldosas del oponente entre dos baldosas de nuestro color.</p>
<p><a href="http://library.gnome.org/users/iagno/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/iagno_hue872609d10f13769ecf3d58b65d40990_21782_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego iagno"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/iagno_hue872609d10f13769ecf3d58b65d40990_21782_300x200_fit_box_3.png" width="226" height="200" alt="Juego iagno" title="Juego iagno"  class="lozad "></a></p>
<figcaption>Juego iagno</figcaption>
</figure>
</div>
<h3 id="klotski">Klotski</h3>
<p>El objetivo es mover el bloque marcado al área con bordes verdes utilizando un menor número de movimientos para una mejor puntuación.</p>
<p><a href="http://library.gnome.org/users/gnome-klotski/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/klotski_hu271d96a1b0afbe3c58add1110ff5c2da_23040_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego klotski"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/klotski_hu271d96a1b0afbe3c58add1110ff5c2da_23040_300x200_fit_box_3.png" width="219" height="200" alt="Juego klotski" title="Juego klotski"  class="lozad "></a></p>
<figcaption>Juego klotski</figcaption>
</figure>
</div>
<h3 id="luces-fuera">Luces fuera</h3>
<p>Luces fuera es un juego de puzle donde el objetivo es apagar todas las baldosas del tablero. Cada clic intercambia el estado de la baldosa clicada y sus vecinos no diagonales.</p>
<p><a href="https://help.gnome.org/users/lightsoff/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/lights-off_hu53ffef8f630fb6eb6039aa223bc01a98_9507_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego luces fuera"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/lights-off_hu53ffef8f630fb6eb6039aa223bc01a98_9507_300x200_fit_box_3.png" width="178" height="200" alt="Juego luces fuera" title="Juego luces fuera"  class="lozad "></a></p>
<figcaption>Juego luces fuera</figcaption>
</figure>
</div>
<h3 id="mahjongg">Mahjongg</h3>
<p>Mahjongg es un solitario para un jugador donde el objetivo es seleccionar baldosas iguales que hacerlo son eliminadas del tablero. Dado el parecido de los dibujos de algunas fichas es necesario un poco de agudeza visual y memoria fotográfica.</p>
<p><a href="https://wiki.gnome.org/Apps/Mahjongg">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/mahjongg_hufabf9dcd576da55a98802131558b735e_140021_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego mahjongg"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/mahjongg_hufabf9dcd576da55a98802131558b735e_140021_300x200_fit_box_3.png" width="278" height="200" alt="Juego mahjongg" title="Juego mahjongg"  class="lozad "></a></p>
<figcaption>Juego mahjongg</figcaption>
</figure>
</div>
<h3 id="minas">Minas</h3>
<p>Mines es un juego de puzle donde hay que localizar las minas flotando en un océano usando solo tu cerebro y un poco de suerte. El juego empieza con una rejilla de cuadrados cubiertos sin idea de donde están las minas. Si descubres una casilla vacía sobrevives y tienes otra oportunidad. Se proporciona un poco de ayuda, al encontrar una casilla vacía se muestra un número que dirá cuántas minas hay en las casillas adyacentes (o sin numero si no hay minas cerca). Una vez localices unas pocas casillas vacías puedes empezar a deducir que casillas tiene minas y cuáles no. Ganas el juego una vez hayas revelado todas las minas sin minas y marcado todas las casillas con minas.</p>
<p><a href="http://library.gnome.org/users/gnome-mines/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/mines_hu3ba043035f596f8422bf02e6b6d83743_24163_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego minas"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/mines_hu3ba043035f596f8422bf02e6b6d83743_24163_300x200_fit_box_3.png" width="190" height="200" alt="Juego minas" title="Juego minas"  class="lozad "></a></p>
<figcaption>Juego minas</figcaption>
</figure>
</div>
<h3 id="nibbles">Nibbles</h3>
<p>En Nibbles es un juego donde controlas una serpiente. La serpiente se mueve alrededor del tablero comiendo diamantes a la vez que esquivando los muros de alrededor. Posee un modo de juego en red y hasta seis gusanos oponentes.</p>
<p><a href="http://library.gnome.org/users/gnome-nibbles/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/nibbles_hu4b9f896eb350f0d01f5ffb9bdedf1590_14565_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego nibbles"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/nibbles_hu4b9f896eb350f0d01f5ffb9bdedf1590_14565_300x200_fit_box_3.png" width="216" height="200" alt="Juego nibbles" title="Juego nibbles"  class="lozad "></a></p>
<figcaption>Juego nibbles</figcaption>
</figure>
</div>
<h3 id="quadrapassel">Quadrapassel</h3>
<p>Es similar al clásico <a href="https://es.wikipedia.org/wiki/Tetris">juego Tetris</a>. El objetivo del juego es crear una línea horizontal completa de bloques que desaparecerán. Los bloques se colocan en fichas de seis formas hechas de cuatro bloques cada una: una recta, dos en forma de L, un cuadrado y dos en forma de S. Los bloques caen desde arriba de la pantalla en orden aleatorio. Rotando los bloques y moviéndolos para conseguir líneas completas de bloques y consiguiendo puntos. A medida que el marcador es mayor el nivel del juego y la velocidad de caída de los bloques será mayor.</p>
<p><a href="http://library.gnome.org/users/quadrapassel/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/quadrapassel_hu2ccc342b941b9af428e6d4364b004221_21588_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego quadrapassel"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/quadrapassel_hu2ccc342b941b9af428e6d4364b004221_21588_300x200_fit_box_3.png" width="194" height="200" alt="Juego quadrapassel" title="Juego quadrapassel"  class="lozad "></a></p>
<figcaption>Juego quadrapassel</figcaption>
</figure>
</div>
<h3 id="robots">Robots</h3>
<p>Debes evitar una horda de robots que intentarán alcanzarte. En cada paso que des se acercarán más a ti. Afortunadamente no son muy listos y se destruirán si chocan entre ellos además de que que tendrás una aparato de teleportación de gran ayuda.</p>
<p><a href="https://help.gnome.org/users/gnome-robots/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/robots_hu20547e68536748a5bf8263122f3312fd_28679_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego robots"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/robots_hu20547e68536748a5bf8263122f3312fd_28679_300x200_fit_box_3.png" width="236" height="200" alt="Juego robots" title="Juego robots"  class="lozad "></a></p>
<figcaption>Juego robots</figcaption>
</figure>
</div>
<h3 id="sudoku">Sudoku</h3>
<p>Sudoku es un juego de lógica japonés donde iremos colocando números que no se han de repetir ni en la misma fila horizontal ni vertical ni en las diagonales centrales ni en su recuadro.</p>
<p><a href="http://library.gnome.org/users/gnome-sudoku/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/sudoku_hu4e97f5f6752c99382a45a4aaae87dc50_24190_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego sudoku"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/sudoku_hu4e97f5f6752c99382a45a4aaae87dc50_24190_300x200_fit_box_3.png" width="217" height="200" alt="Juego sudoku" title="Juego sudoku"  class="lozad "></a></p>
<figcaption>Juego sudoku</figcaption>
</figure>
</div>
<h3 id="swell-foop">Swell Foop</h3>
<p>Es un juego de tipo puzle cuyo objetivo es eliminar los objetos del mismo color y figura adyacentes en el menor número de movimientos posible o la mayor cantidad de ellos en cada movimiento. Los objetos restantes colapsarán para rellenar los huecos vacíos y se formarán nuevos grupos. No se pueden eliminar objetos individuales.</p>
<p><a href="http://library.gnome.org/users/swell-foop/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/swell-foop_huddb5c3a653259cf664f16245985b425f_95493_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego swell foop"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/swell-foop_huddb5c3a653259cf664f16245985b425f_95493_300x200_fit_box_3.png" width="274" height="200" alt="Juego swell foop" title="Juego swell foop"  class="lozad "></a></p>
<figcaption>Juego swell foop</figcaption>
</figure>
</div>
<h3 id="tali">Tali</h3>
<p>Es un juego de tipo poker con dados y menos dinero. Lanzas los dados tres veces intentando crear la mejor mano. Los dos relanzamientos incluyen ninguno o todos los datos.</p>
<p><a href="https://help.gnome.org/users/tali/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/tali_huc84baf04939bf6b74148f79249122279_66846_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego tali"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/tali_huc84baf04939bf6b74148f79249122279_66846_300x200_fit_box_3.png" width="255" height="200" alt="Juego tali" title="Juego tali"  class="lozad "></a></p>
<figcaption>Juego tali</figcaption>
</figure>
</div>
<h3 id="tetravex">Tetravex</h3>
<p>Es un juego tipo puzle donde las piezas han de posicionarse de modo que los mismo números estén adyacentes entre si. El juego es cronometrado y los tiempos almacenados en un marcador global al sistema.</p>
<p><a href="https://help.gnome.org/users/gnome-tetravex/stable/">Manual</a></p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/tetravex_hu789a601112772a017273f704954a3899_43680_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego tetravex"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/tetravex_hu789a601112772a017273f704954a3899_43680_300x200_fit_box_3.png" width="271" height="200" alt="Juego tetravex" title="Juego tetravex"  class="lozad "></a></p>
<figcaption>Juego tetravex</figcaption>
</figure>
</div>
<h3 id="ajedrez">Ajedrez</h3>
<p>Es el clásico juego de ajedrez donde las partidas pueden ser jugadas contra un humano o una computadora. He escrito un artículo sobre el <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/">juego de ajedrez de GNOME</a>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/chess_hub9260f779140f75e304d843676ff395c_47029_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego ajedrez"><img src="https://picodotdev.github.io/blog-bitix/2016/08/juegos-incluidos-en-el-entorno-de-escritorio-gnome/images/chess_hub9260f779140f75e304d843676ff395c_47029_300x200_fit_box_3.png" width="234" height="200" alt="Juego ajedrez" title="Juego ajedrez"  class="lozad "></a></p>
<figcaption>Juego ajedrez</figcaption>
</figure>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/</id>
        <title>Cómo y por que redirigir tráfico web del dominio raíz al subdominio www (o viceversa)</title>
        <updated>2016-08-05T18:00:00+02:00</updated>
        <published>2016-08-05T17:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La redirección del dominio raíz al subdominio es una de las cosas básicas que es recomendable realizar en todo dominio, para ello hay que añadir algo de configuración propia de cada servidor para realizar la redirección. Junto con usar el uso del protocolo HTTPS y forzar su uso con otra redirección mejoraremos el SEO y evitaremos penalizaciones por contenido duplicado.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<p>El nombre de un dominio está formado por varios subdominios separados por un caracter punto. Están los dominios de nivel superior, los genéricos y más antiguos <em>.com</em>, <em>.org</em>, <em>.info</em>, <em>.net</em>, los propios de cada país o territoriales <em>.es</em>, <em>.fr</em>, <em>.de</em> y más recientemente un montón de <a href="https://es.wikipedia.org/wiki/Dominio_de_nivel_superior">nuevos dominios de nivel superior</a> (<em>.futbol</em>, <em>.arte</em>, <em>.blog</em>, <em>.madrid</em>, &hellip;) aunque significativamente más caros. Después del dominio de nivel superior está el subdominio de la empresa, marca o personal, por ejemplo, <em>empresa.com</em> que es realmente lo que compramos cuando solicitamos registrar un dominio. En nuestro dominio <em>empresa.com</em> podemos administrar múltiples subdominios los clásicos son <em>www.empresa.com</em> para el servidor web, <em>smpt.empresa.com</em> para el correo electrónico, <em>ftp.empresa.com</em> para la transferencia de archivos y otros cualesquiera que deseemos.</p>
<p>En el caso del tráfico web debemos evitar que el servidor y la página o aplicación sea accedida por <em>empresa.com</em> y <em>www.empresa.com</em> ya que los buscadores tratarán a la página como dos diferentes y posiblemente detectando contenido duplicado que afectará negativamente o penalizando al SEO de la web. Lo que se suele hacer es hacer una <a href="https://es.wikipedia.org/wiki/HTTP_301">redirección permanente</a> (cuyo código de estado HTTP para la respuesta es 301) a nivel de servidor que redirija el tráfico de <em>empresa.com</em> a <em>www.empresa.com</em> cuando el usuario acceda con su navegador con la primera.</p>
<p>Esta es una de las cosas básicas que debemos realizar cuando instalemos un servidor web, otras cosas recomendadas para mejorar el SEO y la seguridad de los usuarios es <a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/">configurar el servidor web para usar el protocolo seguro HTTPS</a> y <a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/">configurar el servidor web para forzar el uso de HTTPS</a> también haciendo una redirección cuando la petición use el protocolo no cifrado HTTP entre otras cosas que indico en la <a href="https://picodotdev.github.io/blog-bitix/series/web/">serie web</a>.</p>
<p>Dependiendo del servidor web que utilicemos la configuración a añadir para hacer la redirección será distinta, a continuación indicaré como hacerlo en dos de los servidores web más populares como son <a href="https://nginx.org/">Nginx</a> y <a href="https://httpd.apache.org/">Apache HTTPD</a>.</p>
<h3 id="nginx">Nginx</h3>
<p>Usando Docker y el archivo de configuración completo podemos probar que funciona en local sin necesidad de instalar o cambiar la configuración de Nginx si tenemos instalado su paquete.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm -p 80:80 -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/nginx.conf:/etc/nginx/conf.d/default.conf:ro nginx:alpine&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-run-nginx.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="k">server</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="mi">80</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span>  <span class="s">localhost</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">return</span> <span class="mi">301</span> <span class="s">http://www.</span><span class="nv">$host$request_uri</span><span class="p">;</span>&#10;<span class="p">}</span>&#10;&#10;<span class="k">server</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">listen</span>&nbsp;&nbsp;&nbsp;&nbsp;   <span class="mi">80</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">server_name</span>  <span class="s">www.localhost</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">root</span>   <span class="s">/usr/share/nginx/html</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.conf</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/images/nginx_hu60b4db62b5f01597e3dc7329c4fe0959_28084_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dominio antes de acceder al sitio"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/images/nginx_hu60b4db62b5f01597e3dc7329c4fe0959_28084_300x200_fit_box_3.png" width="292" height="200" alt="Dominio antes de acceder al sitio" title="Dominio antes de acceder al sitio"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/images/nginx-www_hu3cf963a0f16d792dac9874482b297887_38309_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dominio después de acceder al sitio"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/images/nginx-www_hu3cf963a0f16d792dac9874482b297887_38309_300x200_fit_box_3.png" width="292" height="200" alt="Dominio después de acceder al sitio" title="Dominio después de acceder al sitio"  class="lozad "></a></p>
<figcaption>Dominio antes y después de acceder al sitio con Nginx</figcaption>
</figure>
</div>
<h3 id="apache">Apache</h3>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker run --rm -p 80:80 -v <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro httpd:alpine&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-run-httpd.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-apache" data-lang="apache">...&#10;&#10;<span class="nb">ServerName</span> www.localhost&#10;&#10;<span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>&#10;   <span class="nb">ServerName</span> localhost&#10;   <span class="nb">RewriteEngine</span> <span class="k">On</span>&#10;   <span class="nb">RewriteCond</span> %{HTTPS} <span class="k">off</span>&#10;   <span class="nb">RewriteRule</span> (.*) http://www.%{SERVER_NAME}$1 [R,L]&#10;<span class="nt">&lt;/VirtualHost&gt;</span>&#10;&#10;<span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>&#10;   <span class="nb">ServerName</span> www.localhost&#10;   <span class="nb">DocumentRoot</span> <span class="sx">/usr/local/apache2/htdocs</span>&#10;<span class="nt">&lt;/VirtualHost&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>httpd.conf</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/images/httpd_hu60b4db62b5f01597e3dc7329c4fe0959_28382_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dominio antes de acceder al sitio"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/images/httpd_hu60b4db62b5f01597e3dc7329c4fe0959_28382_300x200_fit_box_3.png" width="292" height="200" alt="Dominio antes de acceder al sitio" title="Dominio antes de acceder al sitio"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/images/httpd-www_hu332c6287f536a309407784d237cee026_16732_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Dominio después de acceder al sitio"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-y-por-que-redirigir-trafico-web-del-dominio-raiz-al-subdominio-www/images/httpd-www_hu332c6287f536a309407784d237cee026_16732_300x200_fit_box_3.png" width="292" height="200" alt="Dominio después de acceder al sitio" title="Dominio después de acceder al sitio"  class="lozad "></a></p>
<figcaption>Dominio antes y después de acceder al sitio con Apache HTTPD</figcaption>
</figure>
</div>
<p>Si prefieriesemos hacer la redirección al revés, del subdominio www al dominio, variaríamos los valores de los nombres del servidor y los valores de las directivas de redirección. En los enlaces de referencia se incluye un ejemplo de esta configuración.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/WebServerRedirectSubdomain">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
<p>Referencia:</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://easyengine.io/tutorials/nginx/www-non-www-redirection/">Nginx config for www to non-www and non-www to www redirection</a></li>
<li><a href="http://www.thesitewizard.com/apache/redirect-domain-www-subdomain.shtml">How to Redirect URLs from Your Root Domain to the WWW Subdomain and Vice Versa</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/</id>
        <title>Configurar Nginx para cachear respuestas del servidor de aplicaciones</title>
        <updated>2016-07-31T01:00:00+02:00</updated>
        <published>2016-07-30T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Las caches son un recurso utilizado para aumentar el rendimiento y evitar malgastar recursos. Si una petición es muy costosa pero que no cambia muy a menudo o no se necesitan que los datos estén totalmente actualizados cachear el resultado de esa petición evitará tener que recalcularla para cada petición, si se realizan muchas peticiones el aumento de rendimiento será drásticamente mejor usando además un menor número de recursos de los sistemas. Hay soluciones específicas para cacheo pero si nuestra necesidades no son extremadamente avanzadas el cacheo ofrecido por Nginx probablemente sea suficiente.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/nginx.svg" width="300" height="64" alt="Nginx" title="Nginx"  class=""></p>
</div>
<p>Los servidores web son muy eficientes devolviendo al cliente archivos estáticos. Tradicionalmente el contenido estático formado por hojas de estilo, archivos JavaScript, imágenes o vídeos de una página o aplicación web han sido devueltos por un servidor web evitando que el servidor de aplicaciones tenga que procesar una gran cantidad de peticiones, aún hoy se sigue haciendo. En caso de que los recursos estáticos estén alojados en el servidor de aplicaciones en vez de en el servidor web, porque los recursos estáticos se empaquetan con la aplicación, el servidor web puede cachearlos evitando que peticiones lleguen al servidor de aplicaciones. En este artículo comentaré cual es la configuración necesaria a añadir en el servidor web <a href="https://nginx.org/">Nginx</a> que hace de <em>proxy</em> para que cachee el resultado de las peticiones así indicadas del servidor de aplicaciones, la aplicación genera el contenido y establece las cabeceras de cache indicando como quiere que se cachee el contenido devuelto.</p>
<p>Para que el servidor web realice el cacheo de los recursos en la aplicación esta ha de devolver en las cabeceras de respuesta como quiere que los recursos sean cacheados usando las cabeceras <em>Last-Modified</em>, <em>Expires</em>, <em>Cache-Control</em> quizá <em>Etag</em>. <a href="https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/">Las cabeceras de cache del protocolo HTTP</a> establecen el comportamiento deseado para la cache.</p>
<p>Hay que modificar el archivo de configuración de Nginx para que cachee el contenido. La directiva <em>proxy_cache_path</em> indica donde se guardarán el contenido cacheado, cual es el tamaño de los metadatos de la caché y el tiempo de inactividad para cachear pasado el cual los recursos serán descartables. La directiva <em>proxy_cache_key</em> permite diferenciar los recursos en la cache, <em>add_header X-Proxy-Cache</em> añade una cabecera para la respuesta de Nginx con el resultado de cache que nos permite conocer si se produjo un acierto en la caché, un fallo o se ignoró la cache. Lo que es útil para depurar la aplicación u obtener información. Con <em>proxy_pass</em> hacemos que Nginx haga de <em>proxy</em> para el servidor de aplicaciones o la aplicación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="k">proxy_cache_path</span> <span class="s">/tmp/nginx</span> <span class="s">levels=1:2</span> <span class="s">keys_zone=localhost_zone:10m</span> <span class="s">inactive=60m</span><span class="p">;</span>&#10;<span class="k">proxy_cache_key</span> <span class="s">&#34;</span><span class="nv">$scheme$request_method$host$request_uri&#34;</span><span class="p">;</span>&#10;&#10;<span class="k">server</span> <span class="p">{</span>&#10;	<span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>&#10;&#10;	<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;		<span class="kn">proxy_cache</span> <span class="s">localhost_zone</span><span class="p">;</span>&#10;		<span class="kn">add_header</span> <span class="s">X-Proxy-Cache</span> <span class="nv">$upstream_cache_status</span><span class="p">;</span>&#10;&#10;		<span class="kn">proxy_pass</span> <span class="s">http://java:4567</span><span class="p">;</span>&#10;	<span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.conf</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">java</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">java:alpine</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">../build/libs/:/mnt/app/</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">java -classpath &#34;/mnt/app/*&#34; io.github.picodotdev.blogbitix.cache.Main</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">nginx</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx:alpine</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">./nginx.conf:/etc/nginx/conf.d/default.conf:ro</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">links</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">java</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;80:80&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>La siguiente pequeña aplicación Java que usa el <a href="https://spark.apache.org/">framework Spark</a> expone dos recursos para probar el funcionamiento de cache de Nginx, un recurso añade cabeceras de cacheo para la respuesta y otro no añade las cabeceras de respuesta. Atendiendo a las cabeceras establecidas por la aplicación y Nginx configurado para hacer de <em>proxy</em> y cache devolverá el contenido deseado de su cache o solicitándolo a la aplicación y cacheándolo si así se indica en las cabeceras de respuesta.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.cache</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.time.LocalDateTime</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.UUID</span><span class="o">;</span>&#10;&#10;<span class="kn">import static</span> <span class="nn">spark.Spark.get</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">get</span><span class="o">(</span><span class="s">&#34;/nocache&#34;</span><span class="o">,</span> <span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getMessage</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">get</span><span class="o">(</span><span class="s">&#34;/cache&#34;</span><span class="o">,</span> <span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">response</span><span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">&#34;Cache-Control&#34;</span><span class="o">,</span> <span class="s">&#34;max-age=60&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">response</span><span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">&#34;Etag&#34;</span><span class="o">,</span> <span class="n">UUID</span><span class="o">.</span><span class="na">randomUUID</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">getMessage</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;¡Hola mundo! (%s)&#34;</span><span class="o">,</span> <span class="n">LocalDateTime</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<p>La primera petición que se realiza al recurso <em>cache</em> devuelve un <a href="https://es.wikipedia.org/wiki/Anexo:C%C3%B3digos_de_estado_HTTP#2xx:_Peticiones_correctas">código de estado 200 de HTTP</a> y Nginx en la cabecera <em>X-Proxy-Cache</em> indica que se ha producido un <em>MISS</em> o fallo en la cache, la segunda petición realizada antes de que pase el minuto del tiempo de expiración devuelve un <a href="https://es.wikipedia.org/wiki/Anexo:C%C3%B3digos_de_estado_HTTP#3xx:_Redirecciones">código de estado 304</a> y Nginx en la cabecera <em>X-Proxy-Cache</em> un <em>HIT</em> o acierto en la cache, finalmente pasado más de un minuto del tiempo de expiración se devuelve un código de estado 200 y Nginx en la cabecera <em>X-Proxy-Cache</em> un <em>EXPIRED</em>. En las trazas de Nginx vemos las peticiones que se producen sus códigos de estado y después de este los bytes transferidos de contenido, nótese que en los casos de los 304 los bytes transferidos son 0, bytes de datos ahorrados y evitado que la petición llegue a la aplicación que son unos de los objetivos de las caches. En el recurso <em>nocache</em> de la aplicación Nginx no cachea el contenido devuelto ya que en este no se establecen las cabeceras de cache en la respuesta.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/images/nginx-cache-peticion-miss_hu304565c1a9343c13e420aa3d3414b984_122903_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Fallo en la cache de Nginx"><img src="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/images/nginx-cache-peticion-miss_hu304565c1a9343c13e420aa3d3414b984_122903_300x200_fit_box_3.png" width="207" height="200" alt="Fallo en la cache de Nginx" title="Fallo en la cache de Nginx"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/images/nginx-cache-peticion-hit_hu304565c1a9343c13e420aa3d3414b984_119894_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Acierto en la cache de Nginx"><img src="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/images/nginx-cache-peticion-hit_hu304565c1a9343c13e420aa3d3414b984_119894_300x200_fit_box_3.png" width="207" height="200" alt="Acierto en la cache de Nginx" title="Acierto en la cache de Nginx"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/images/nginx-cache-peticion-expired_hu304565c1a9343c13e420aa3d3414b984_124798_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Expiración en la cache de Nginx"><img src="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/images/nginx-cache-peticion-expired_hu304565c1a9343c13e420aa3d3414b984_124798_300x200_fit_box_3.png" width="207" height="200" alt="Expiración en la cache de Nginx" title="Expiración en la cache de Nginx"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/images/curl-cache-miss-hit-expired_hu4df79497678506697c712136abe7a6ae_80932_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Fallo, acierto y expiración en la cache de Nginx con curl"><img src="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/images/curl-cache-miss-hit-expired_hu4df79497678506697c712136abe7a6ae_80932_300x200_fit_box_3.png" width="252" height="200" alt="Fallo, acierto y expiración en la cache de Nginx con curl" title="Fallo, acierto y expiración en la cache de Nginx con curl"  class="lozad "></a></p>
<figcaption>Fallo, acierto y expiración que produce en la cache de Nginx al realizar peticiones</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">nginx_1  | 172.17.0.1 - - [30/Jul/2016:10:43:20 +0000] &#34;GET /cache HTTP/1.1&#34; 200 50 &#34;-&#34; &#34;Mozilla/5.0 (X11; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0&#34; &#34;-&#34;&#10;nginx_1  | 172.17.0.1 - - [30/Jul/2016:10:43:56 +0000] &#34;GET /cache HTTP/1.1&#34; 304 0 &#34;-&#34; &#34;Mozilla/5.0 (X11; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0&#34; &#34;-&#34;&#10;nginx_1  | 172.17.0.1 - - [30/Jul/2016:10:45:04 +0000] &#34;GET /cache HTTP/1.1&#34; 200 50 &#34;-&#34; &#34;Mozilla/5.0 (X11; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0&#34; &#34;-&#34;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.out</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -X GET -I http://localhost/cache&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-cache.sh</span>
    </div>
</div>
<p>Hay servidores específicos para realizar tareas de cache como <a href="https://varnish-cache.org/">Varnish</a> con más opciones de las que ofrece Nginx. Para los casos no complicados usando Nginx evitamos añadir una nueva pieza a la arquitectura de la aplicación. Entre los productos que ofrece Amazon está <a href="https://aws.amazon.com/es/cloudfront/">Cloudfront</a> que es una cache para recursos estáticos con el añadido de que de forma automática está distribuida geográficamente de forma que los recursos se sirven por un servidor más cercano al cliente evitando un mal rendimiento por la latencia. En el artículo <a href="https://picodotdev.github.io/blog-bitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry/">servir recursos estáticos de un CDN en Apache Tapestry</a> comento como usar esta red de distribución de contenido ofrecida por Amazon.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/NginxCache">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew build, cd docker, docker-compose up</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/07/servir-recursos-estaticos-desde-un-cdn-en-apache-tapestry/">Servir recursos estáticos desde un CDN en Apache Tapestry</a></li>
<li><a href="https://serversforhackers.com/nginx-caching">Nginx Caching</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/</id>
        <title>No, un tag JSP o un tag de Grails no es equivalente a un componente de Tapestry</title>
        <updated>2016-07-25T12:00:00+02:00</updated>
        <published>2016-07-25T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Alguna vez que he dado una presentación sobre Apache Tapestry después de la misma me comentaron que eso mismo que explicaba se podía hacer con el <em>framework</em> que esa persona usaba. En un proyecto la tecnología no es es lo más importante pero es una herramienta que puede facilitar en gran medida el desarrollo. Respecto a los componentes de Tapestry alguien puede pensar que son iguales a los <em>tag</em> que existen en las tecnologías de presentación como JSP o Grails. En este artículo comentaré algunas diferencias importantes que los hace más y muy interesantes junto con otras características de <em>framework</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="250" height="250" alt="Apache Tapestry" title="Apache Tapestry"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Viendo el panel <a href="https://es.wikipedia.org/wiki/Kanban_%28desarrollo%29">Kanban</a> de la herramienta de peticiones <a href="https://www.atlassian.com/software/jira">JIRA</a> que usamos para registrar y priorizar las siguiente tareas en la empresa que trabajo hay unas cuantas que consisten en dado un listado de compras poder realizar operaciones sobre múltiples filas sin salir de la pantalla del listado. La necesidad es evitar que los usuarios de la aplicación hagan las acciones de forma individual de forma repetitiva, evitarles esto harán que sean más productivos y podrán desarrollar su trabajo mejor y más rápido. Así de sencillo, aparentemente.</p>
<p>Esta necesidad que en la realidad será implementada con <a href="https://grails.org/">Grails</a> quería compararla con una implementación equivalente usando <a href="https://tapestry.apache.org/">Apache Tapestry</a> porque como en muchas otras necesidades intuyo que con Tapestry implementarlas es significativamente más sencillo y con un resultado de implementación como en este caso con el que quedo más a gusto.</p>
<h3 id="la-necesidad">La necesidad</h3>
<p>Definiendo más la necesidad hasta ahora cada fila del listado tiene un conjunto de botones para realizar acciones individuales y ahora se quiere al final del listado otro conjunto de botones para realizar acciones sobre las compras que se seleccionen de forma múltiple. Para seleccionar las compras se usará un <em>checkbox</em> colocado al inicio de cada fila. Para algunas acciones el usuario ha de introducir información adicional cosa que hará con un diálogo modal que ya existe pero que hasta ahora solo permitía hacer la acción de forma individual. Las mismas acciones se realizarán en varias páginas de la aplicación (después de la acción se deberá volver a la página en la que se estaba), solo se podrán hacer las acciones múltiples si en todas las compras seleccionadas es posible realizar esa acción y el contenido de los diálogos solicitando información adicional podrán depender de las compras seleccionadas. Las acciones en el ejemplo serán habilitar o deshabilitar. Determinar las acciones posibles de una compra es compleja y saber si una acción es posible no depende solo de información en la propia compra sino de otras entidades del sistema, en el ejemplo no será así pero se tendrá en cuenta en la implementación.</p>
<p>Esta sería una imagen del prototipo de los botones para hacer acciones múltiples, seleccionar compras y el diálogo modal para introducir información adicional.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/images/listado_hu82b1bbbc18c50562a0aca0aa33502bc7_41490_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Listado de productos"><img src="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/images/listado_hu82b1bbbc18c50562a0aca0aa33502bc7_41490_300x200_fit_box_3.png" width="300" height="162" alt="Listado de productos" title="Listado de productos"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/images/modal_hu685307d5e94b1e333fc551484f373c7e_36642_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Modal solicitando información adicional"><img src="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/images/modal_hu685307d5e94b1e333fc551484f373c7e_36642_300x200_fit_box_3.png" width="300" height="162" alt="Modal solicitando información adicional" title="Modal solicitando información adicional"  class="lozad "></a></p>
<figcaption>Listado y modal de la necesidad expuesta</figcaption>
</figure>
</div>
<p>En la necesidad real las filas son compras pero en el ejemplo usaré la entidad <em>Product</em>. Las acciones en el ejemplo serán habilitar para la que no será necesaria información adicional, la otra acción será deshabilitar para la que se necesitará introducir una razón con un modal.</p>
<h3 id="las-posibilidades">Las posibilidades</h3>
<p>Para implementar técnicamente el que solo se puedan hacer las acciones múltiples según los productos seleccionadas se habilitarán o deshabilitarán los botones con JavaScript sin peticiones AJAX adicionales al servidor para ello toda la información necesaria deberá estar en el cliente. En este caso bastará habilitar o deshabilitar cada botón según si esa acción es posible en todas los productos seleccionadas pero eso podría no bastar ya que se podría requerir que productos fuesen del mismo vendedor. En el ejemplo con un atributo en un elemento HTML de la fila que contenga las acciones posibles separadas por comas bastará. De esta forma no habrá que hacer consultas adicionales al servidor mediante peticiones AJAX en cada nueva selección.</p>
<p>Sin embargo, como el contenido de los diálogos depende del producto o productos seleccionadas se hará una petición AJAX para obtener su contenido. De esta forma el contenido de los diálogos no tendrá que estar precargado (el número de acciones podría ser una decena) en el cliente ni generarlo con JavaScript en cliente que sería algo más complicado que usar la propia tecnología para generar contenido que está presente en el servidor y posiblemente más propenso a errores por usar JavaScript.</p>
<h3 id="la-implementación-con-apache-tapestry">La implementación con Apache Tapestry</h3>
<p>Definida la necesidad y unas pocas notas voy a poner el código de como con Apache Tapestry implementar la solución. La página del listado será la siguiente. En el <em>checkbox</em> de selección se añade el atributo <em>data-product-actions</em> con las acciones posibles que se obtienen del servicio <em>AppService</em> con el método <em>getAvaliableActions</em>. El componente de Tapestry <em>actions</em> generará el código de los botones tanto para los individuales en su uso <em>&lt;t:actions&gt;</em> con el parámetro <em>product</em> como múltiples en su uso con el parámetro <em>type</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.pages</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.entities.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.services.AppService</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.services.ProductRepository</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.ComponentResources</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Property</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.beaneditor.BeanModel</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.ioc.annotations.Inject</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.BeanModelSource</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Index</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Property</span>&#10;	<span class="kd">private</span> <span class="n">Product</span> <span class="n">product</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">AppService</span> <span class="n">service</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductRepository</span> <span class="n">repository</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Inject</span>&#10;	<span class="kd">private</span> <span class="n">BeanModelSource</span> <span class="n">beanModelSource</span><span class="o">;</span>&#10;&#10;	<span class="nd">@Inject</span>&#10;	<span class="kd">private</span> <span class="n">ComponentResources</span> <span class="n">resources</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="nf">getProducts</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">1</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;	<span class="k">return</span> <span class="n">repository</span><span class="o">.</span><span class="na">findAll</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="n">BeanModel</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="nf">getModel</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="n">BeanModel</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">model</span> <span class="o">=</span> <span class="n">beanModelSource</span><span class="o">.</span><span class="na">createDisplayModel</span><span class="o">(</span><span class="n">Product</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">resources</span><span class="o">.</span><span class="na">getMessages</span><span class="o">());</span>&#10;		<span class="n">model</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;select&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">).</span><span class="na">label</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">).</span><span class="na">sortable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;		<span class="n">model</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&#34;action&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">).</span><span class="na">label</span><span class="o">(</span><span class="s">&#34;Actions&#34;</span><span class="o">).</span><span class="na">sortable</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>&#10;		<span class="n">model</span><span class="o">.</span><span class="na">include</span><span class="o">(</span><span class="s">&#34;select&#34;</span><span class="o">,</span> <span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;stock&#34;</span><span class="o">,</span> <span class="s">&#34;state&#34;</span><span class="o">,</span> <span class="s">&#34;action&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">model</span><span class="o">.</span><span class="na">reorder</span><span class="o">(</span><span class="s">&#34;select&#34;</span><span class="o">,</span> <span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="s">&#34;stock&#34;</span><span class="o">,</span> <span class="s">&#34;state&#34;</span><span class="o">,</span> <span class="s">&#34;action&#34;</span><span class="o">);</span>&#10;		<span class="k">return</span> <span class="n">model</span><span class="o">;</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="n">String</span> <span class="nf">getActions</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;	&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">service</span><span class="o">.</span><span class="na">getAvaliableActions</span><span class="o">(</span><span class="n">product</span><span class="o">).</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">a</span> <span class="o">-&gt;</span> <span class="n">a</span><span class="o">.</span><span class="na">name</span><span class="o">().</span><span class="na">toString</span><span class="o">().</span><span class="na">toLowerCase</span><span class="o">()).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;,&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;layout&#34;</span> <span class="na">title</span><span class="o">=</span><span class="s">&#34;Products&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>Products<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">t:grid</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;grid&#34;</span> <span class="na">source</span><span class="o">=</span><span class="s">&#34;products&#34;</span> <span class="na">row</span><span class="o">=</span><span class="s">&#34;product&#34;</span> <span class="na">model</span><span class="o">=</span><span class="s">&#34;model&#34;</span> <span class="na">rowsPerPage</span><span class="o">=</span><span class="s">&#34;10&#34;</span> <span class="na">lean</span><span class="o">=</span><span class="s">&#34;true&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;table table-hover&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p:selectCell</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;checkbox&#34;</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;product&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;prop:product.id&#34;</span> <span class="na">data-product-actions</span><span class="o">=</span><span class="s">&#34;prop:getActions(product)&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">p:selectCell</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p:nameCell</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${product.name}&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">p:nameCell</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p:actionCell</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:actions</span> <span class="na">product</span><span class="o">=</span><span class="s">&#34;product&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">p:actionCell</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p:empty</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>No products.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">p:empty</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">t:grid</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn-toolbar&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:actions</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;literal:product&#34;</span><span class="p">/&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">t:disableProductsModal</span><span class="p">/&gt;</span>&#10;&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.tml</span>
    </div>
</div>
<p>El código para mostrar las acciones con botones para un determinado producto o para los productos es el siguiente. El mismo componente se encargará de realizar en el servidor la acción habilitar que no necesita modal. Con un poco de <a href="https://es.wikipedia.org/wiki/JavaScript">JavaScript</a>, <a href="https://jquery.com/">jQuery</a> y <a href="https://underscorejs.org/">Underscore</a> se habilitarán o deshabilitarán los botones y se mostrará el diálogo para la acción deshabilitar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span><span class="lnt">69&#10;</span><span class="lnt">70&#10;</span><span class="lnt">71&#10;</span><span class="lnt">72&#10;</span><span class="lnt">73&#10;</span><span class="lnt">74&#10;</span><span class="lnt">75&#10;</span><span class="lnt">76&#10;</span><span class="lnt">77&#10;</span><span class="lnt">78&#10;</span><span class="lnt">79&#10;</span><span class="lnt">80&#10;</span><span class="lnt">81&#10;</span><span class="lnt">82&#10;</span><span class="lnt">83&#10;</span><span class="lnt">84&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.components</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.entities.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.misc.Utils</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.services.ProductRepository</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.BindingConstants</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.Block</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Environmental</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Parameter</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Property</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.ioc.annotations.Inject</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.ioc.services.TypeCoercer</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.RequestGlobals</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.javascript.JavaScriptSupport</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Actions</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">enum</span> <span class="n">Type</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">PRODUCT</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Parameter</span><span class="o">(</span><span class="n">defaultPrefix</span> <span class="o">=</span> <span class="n">BindingConstants</span><span class="o">.</span><span class="na">PROP</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Property</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Product</span> <span class="n">product</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Parameter</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Type</span> <span class="n">type</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Property</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">ids</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductRepository</span> <span class="n">repository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TypeCoercer</span> <span class="n">coercer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Block</span> <span class="n">productActionsBlock</span><span class="o">,</span> <span class="n">productsActionsBlock</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">RequestGlobals</span> <span class="n">globals</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Environmental</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">JavaScriptSupport</span> <span class="n">javascriptSupport</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">afterRender</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">product</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">type</span> <span class="o">==</span> <span class="n">Type</span><span class="o">.</span><span class="na">PRODUCT</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javascriptSupport</span><span class="o">.</span><span class="na">require</span><span class="o">(</span><span class="s">&#34;app/actions&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">onSuccessFromProductForm</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">repository</span><span class="o">.</span><span class="na">enable</span><span class="o">(</span><span class="n">product</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">onSuccessFromProductsForm</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">repository</span><span class="o">.</span><span class="na">enable</span><span class="o">(</span><span class="n">getProducts</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Block</span> <span class="nf">getBlock</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">product</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">productActionsBlock</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">switch</span> <span class="o">(</span><span class="n">type</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">case</span> <span class="n">PRODUCT</span><span class="o">:</span> <span class="k">return</span> <span class="n">productsActionsBlock</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getEnabled</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">isEnabled</span><span class="o">())</span> <span class="o">?</span> <span class="s">&#34;disabled&#34;</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getDisabled</span><span class="o">(</span><span class="n">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="o">(</span><span class="n">product</span><span class="o">.</span><span class="na">isDisabled</span><span class="o">())</span> <span class="o">?</span> <span class="s">&#34;disabled&#34;</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="nf">getProducts</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Utils</span><span class="o">.</span><span class="na">getProducts</span><span class="o">(</span><span class="n">ids</span><span class="o">,</span> <span class="n">coercer</span><span class="o">,</span> <span class="n">repository</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Actions.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">t:container</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">t:delegate</span> <span class="na">to</span><span class="o">=</span><span class="s">&#34;block&#34;</span> <span class="p">/&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">t:block</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;productActionsBlock&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:form</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;productForm&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:hidden</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;id&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;product&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;submit&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Enable&#34;</span> <span class="na">disabled</span><span class="o">=</span><span class="s">&#34;prop:getEnabled(product)&#34;</span> <span class="na">data-product-action</span><span class="o">=</span><span class="s">&#34;enable&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn btn-primary btn-xs&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Disable&#34;</span> <span class="na">disabled</span><span class="o">=</span><span class="s">&#34;prop:getDisabled(product)&#34;</span> <span class="na">data-product-action</span><span class="o">=</span><span class="s">&#34;disable&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn btn-danger btn-xs&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:form</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">t:block</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">t:block</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;productsActionsBlock&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:form</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;productsForm&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:hidden</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;ids&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;ids&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Enable&#34;</span> <span class="na">disabled</span><span class="o">=</span><span class="s">&#34;disabled&#34;</span> <span class="na">data-products-action</span><span class="o">=</span><span class="s">&#34;enable&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn btn-primary&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">input</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Disable&#34;</span> <span class="na">disabled</span><span class="o">=</span><span class="s">&#34;disabled&#34;</span> <span class="na">data-products-action</span><span class="o">=</span><span class="s">&#34;disable&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn btn-danger&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:form</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">t:block</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;/</span><span class="nt">t:container</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Actions.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="nx">define</span><span class="p">(</span><span class="s2">&#34;app/actions&#34;</span><span class="p">,</span> <span class="p">[</span><span class="s2">&#34;jquery&#34;</span><span class="p">,</span> <span class="s2">&#34;underscore&#34;</span><span class="p">,</span> <span class="s2">&#34;app/modals&#34;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="mi">_</span><span class="p">,</span> <span class="nx">modals</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">function</span> <span class="nx">ProductActions</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">that</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;input[type=&#39;checkbox&#39;][name=&#39;product&#39;]&#34;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">actions</span> <span class="o">=</span> <span class="nx">that</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">that</span><span class="p">.</span><span class="nx">getCheckedCheckboxes</span><span class="p">(),</span> <span class="s1">&#39;data-product-actions&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">actions</span> <span class="o">=</span> <span class="mi">_</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">actions</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">actions</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">actions</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">actions</span> <span class="o">=</span> <span class="mi">_</span><span class="p">.</span><span class="nx">intersection</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">_</span><span class="p">,</span> <span class="nx">actions</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;input[data-products-action]&#34;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;disabled&#39;</span><span class="p">,</span> <span class="s1">&#39;disabled&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="mi">_</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">actions</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">action</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;input[data-products-action=&#39;&#34;</span> <span class="o">+</span> <span class="nx">action</span> <span class="o">+</span> <span class="s2">&#34;&#39;]&#34;</span><span class="p">).</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s1">&#39;disabled&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;input[type=&#39;button&#39;][data-products-action=&#39;enable&#39;]&#34;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">ids</span> <span class="o">=</span> <span class="nx">that</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">that</span><span class="p">.</span><span class="nx">getCheckedCheckboxes</span><span class="p">(),</span> <span class="s1">&#39;value&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s1">&#39;form&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&#34;#ids&#34;</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">ids</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#productsForm&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">submit</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;input[type=&#39;button&#39;][data-product-action=&#39;disable&#39;]&#34;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">id</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="s1">&#39;form&#39;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&#34;#id&#34;</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="nx">modals</span><span class="p">.</span><span class="nx">DisableProductsModal</span><span class="p">().</span><span class="nx">show</span><span class="p">([</span><span class="nx">id</span><span class="p">]);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;input[type=&#39;button&#39;][data-products-action=&#39;disable&#39;]&#34;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">ids</span> <span class="o">=</span> <span class="nx">that</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">that</span><span class="p">.</span><span class="nx">getCheckedCheckboxes</span><span class="p">(),</span> <span class="s1">&#39;value&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="nx">modals</span><span class="p">.</span><span class="nx">DisableProductsModal</span><span class="p">().</span><span class="nx">show</span><span class="p">(</span><span class="nx">ids</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;input[type=&#39;checkbox&#39;][name=&#39;product&#39;]&#34;</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">ProductActions</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getCheckedCheckboxes</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&#34;input[type=&#39;checkbox&#39;][name=&#39;product&#39;]:checked&#34;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">ProductActions</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getAttribute</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">elements</span><span class="p">,</span> <span class="nx">attribute</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">elements</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">attribute</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}).</span><span class="nx">get</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">function</span> <span class="nx">init</span><span class="p">(</span><span class="nx">spec</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">new</span> <span class="nx">ProductActions</span><span class="p">(</span><span class="nx">spec</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">init</span><span class="p">();</span>&#10;<span class="p">});</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>actions.js</span>
    </div>
</div>
<p>El código del modal para deshabilitar sería el siguiente. En el método <em>show</em> recibe los <em>ids</em> de los productos a deshabilitar y recupera del servidor el contenido de diálogo con una petición AJAX. El componente del modal se encargará de hacer el deshabilitado de los productos y la recarga de la página si finaliza correctamente o de mostrar los errores de validación que se produzcan si no se ha introducido el motivo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">  1&#10;</span><span class="lnt">  2&#10;</span><span class="lnt">  3&#10;</span><span class="lnt">  4&#10;</span><span class="lnt">  5&#10;</span><span class="lnt">  6&#10;</span><span class="lnt">  7&#10;</span><span class="lnt">  8&#10;</span><span class="lnt">  9&#10;</span><span class="lnt"> 10&#10;</span><span class="lnt"> 11&#10;</span><span class="lnt"> 12&#10;</span><span class="lnt"> 13&#10;</span><span class="lnt"> 14&#10;</span><span class="lnt"> 15&#10;</span><span class="lnt"> 16&#10;</span><span class="lnt"> 17&#10;</span><span class="lnt"> 18&#10;</span><span class="lnt"> 19&#10;</span><span class="lnt"> 20&#10;</span><span class="lnt"> 21&#10;</span><span class="lnt"> 22&#10;</span><span class="lnt"> 23&#10;</span><span class="lnt"> 24&#10;</span><span class="lnt"> 25&#10;</span><span class="lnt"> 26&#10;</span><span class="lnt"> 27&#10;</span><span class="lnt"> 28&#10;</span><span class="lnt"> 29&#10;</span><span class="lnt"> 30&#10;</span><span class="lnt"> 31&#10;</span><span class="lnt"> 32&#10;</span><span class="lnt"> 33&#10;</span><span class="lnt"> 34&#10;</span><span class="lnt"> 35&#10;</span><span class="lnt"> 36&#10;</span><span class="lnt"> 37&#10;</span><span class="lnt"> 38&#10;</span><span class="lnt"> 39&#10;</span><span class="lnt"> 40&#10;</span><span class="lnt"> 41&#10;</span><span class="lnt"> 42&#10;</span><span class="lnt"> 43&#10;</span><span class="lnt"> 44&#10;</span><span class="lnt"> 45&#10;</span><span class="lnt"> 46&#10;</span><span class="lnt"> 47&#10;</span><span class="lnt"> 48&#10;</span><span class="lnt"> 49&#10;</span><span class="lnt"> 50&#10;</span><span class="lnt"> 51&#10;</span><span class="lnt"> 52&#10;</span><span class="lnt"> 53&#10;</span><span class="lnt"> 54&#10;</span><span class="lnt"> 55&#10;</span><span class="lnt"> 56&#10;</span><span class="lnt"> 57&#10;</span><span class="lnt"> 58&#10;</span><span class="lnt"> 59&#10;</span><span class="lnt"> 60&#10;</span><span class="lnt"> 61&#10;</span><span class="lnt"> 62&#10;</span><span class="lnt"> 63&#10;</span><span class="lnt"> 64&#10;</span><span class="lnt"> 65&#10;</span><span class="lnt"> 66&#10;</span><span class="lnt"> 67&#10;</span><span class="lnt"> 68&#10;</span><span class="lnt"> 69&#10;</span><span class="lnt"> 70&#10;</span><span class="lnt"> 71&#10;</span><span class="lnt"> 72&#10;</span><span class="lnt"> 73&#10;</span><span class="lnt"> 74&#10;</span><span class="lnt"> 75&#10;</span><span class="lnt"> 76&#10;</span><span class="lnt"> 77&#10;</span><span class="lnt"> 78&#10;</span><span class="lnt"> 79&#10;</span><span class="lnt"> 80&#10;</span><span class="lnt"> 81&#10;</span><span class="lnt"> 82&#10;</span><span class="lnt"> 83&#10;</span><span class="lnt"> 84&#10;</span><span class="lnt"> 85&#10;</span><span class="lnt"> 86&#10;</span><span class="lnt"> 87&#10;</span><span class="lnt"> 88&#10;</span><span class="lnt"> 89&#10;</span><span class="lnt"> 90&#10;</span><span class="lnt"> 91&#10;</span><span class="lnt"> 92&#10;</span><span class="lnt"> 93&#10;</span><span class="lnt"> 94&#10;</span><span class="lnt"> 95&#10;</span><span class="lnt"> 96&#10;</span><span class="lnt"> 97&#10;</span><span class="lnt"> 98&#10;</span><span class="lnt"> 99&#10;</span><span class="lnt">100&#10;</span><span class="lnt">101&#10;</span><span class="lnt">102&#10;</span><span class="lnt">103&#10;</span><span class="lnt">104&#10;</span><span class="lnt">105&#10;</span><span class="lnt">106&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.components</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.entities.Product</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.misc.Utils</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">io.github.picodotdev.blogbitix.tapestrymultipleactions.services.ProductRepository</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.commons.lang3.StringUtils</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.Block</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.ComponentResources</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Component</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Environmental</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.annotations.Property</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.corelib.components.Form</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.corelib.components.Select</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.corelib.components.Zone</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.ioc.annotations.Inject</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.ioc.services.TypeCoercer</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.RequestGlobals</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.javascript.JavaScriptSupport</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DisableProductsModal</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Property</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">ids</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Property</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductRepository</span><span class="o">.</span><span class="na">DisableReason</span> <span class="n">reason</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Property</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">url</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ProductRepository</span> <span class="n">repository</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">RequestGlobals</span> <span class="n">requestGlobals</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">TypeCoercer</span> <span class="n">coercer</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Block</span> <span class="n">reloadBlock</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Inject</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">ComponentResources</span> <span class="n">componentResources</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Environmental</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">JavaScriptSupport</span> <span class="n">javascriptSupport</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Component</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Form</span> <span class="n">form</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Component</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Select</span> <span class="n">select</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Component</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Zone</span> <span class="n">zone</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">ProductRepository</span><span class="o">.</span><span class="na">DisableReason</span><span class="o">[]</span> <span class="nf">getModel</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">ProductRepository</span><span class="o">.</span><span class="na">DisableReason</span><span class="o">.</span><span class="na">values</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kt">void</span> <span class="nf">setupRender</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">url</span> <span class="o">=</span> <span class="n">componentResources</span><span class="o">.</span><span class="na">createEventLink</span><span class="o">(</span><span class="s">&#34;show&#34;</span><span class="o">).</span><span class="na">toAbsoluteURI</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isRender</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">requestGlobals</span><span class="o">.</span><span class="na">getRequest</span><span class="o">().</span><span class="na">isXHR</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getProductsLabel</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="n">products</span> <span class="o">=</span> <span class="n">getProducts</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&#34;%s (%s)&#34;</span><span class="o">,</span> <span class="n">products</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="n">p</span> <span class="o">-&gt;</span> <span class="n">p</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&#34;, &#34;</span><span class="o">)),</span> <span class="n">products</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Object</span> <span class="nf">onShow</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">ids</span> <span class="o">=</span> <span class="n">requestGlobals</span><span class="o">.</span><span class="na">getRequest</span><span class="o">().</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&#34;ids&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">zone</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">void</span> <span class="nf">onValidateFromForm</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">StringUtils</span><span class="o">.</span><span class="na">isBlank</span><span class="o">(</span><span class="n">ids</span><span class="o">))</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">form</span><span class="o">.</span><span class="na">recordError</span><span class="o">(</span><span class="s">&#34;A product is required.&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">reason</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">form</span><span class="o">.</span><span class="na">recordError</span><span class="o">(</span><span class="n">select</span><span class="o">,</span> <span class="s">&#34;Reason is required.&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">void</span> <span class="nf">onSuccessFromForm</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">repository</span><span class="o">.</span><span class="na">disable</span><span class="o">(</span><span class="n">getProducts</span><span class="o">(),</span> <span class="n">reason</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Object</span> <span class="nf">onSubmitFromForm</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">form</span><span class="o">.</span><span class="na">getHasErrors</span><span class="o">())</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">zone</span><span class="o">.</span><span class="na">getBody</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">reloadBlock</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Product</span><span class="o">&gt;</span> <span class="nf">getProducts</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Utils</span><span class="o">.</span><span class="na">getProducts</span><span class="o">(</span><span class="n">ids</span><span class="o">,</span> <span class="n">coercer</span><span class="o">,</span> <span class="n">repository</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DisableProductsModal.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">t:container</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;disableProductsModal&#34;</span> <span class="na">data-url</span><span class="o">=</span><span class="s">&#34;prop:url&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;modal fade&#34;</span> <span class="na">tabindex</span><span class="o">=</span><span class="s">&#34;-1&#34;</span> <span class="na">role</span><span class="o">=</span><span class="s">&#34;dialog&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:zone</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;zone&#34;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;disableProductsModalZone&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:if</span> <span class="na">test</span><span class="o">=</span><span class="s">&#34;render&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;modal-dialog&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:form</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;form&#34;</span> <span class="na">zone</span><span class="o">=</span><span class="s">&#34;disableProductsModalZone&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-horizontal&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:hidden</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;ids&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;ids&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;modal-content&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;modal-header&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;close&#34;</span> <span class="na">data-dismiss</span><span class="o">=</span><span class="s">&#34;modal&#34;</span> <span class="na">aria-label</span><span class="o">=</span><span class="s">&#34;Close&#34;</span><span class="p">&gt;&lt;</span><span class="nt">span</span> <span class="na">aria-hidden</span><span class="o">=</span><span class="s">&#34;true&#34;</span><span class="p">&gt;</span><span class="ni">&amp;times;</span><span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">h4</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;modal-title&#34;</span><span class="p">&gt;</span>Disable products<span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;modal-body&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;errors&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:errors</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-group&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">label</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-sm-2 control-label&#34;</span><span class="p">&gt;</span>Products<span class="p">&lt;/</span><span class="nt">label</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-sm-10&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">p</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-control-static&#34;</span><span class="p">&gt;</span>${productsLabel}<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-group&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:label</span> <span class="na">for</span><span class="o">=</span><span class="s">&#34;select&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-sm-2 control-label&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-sm-10&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:select</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;select&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;reason&#34;</span> <span class="na">model</span><span class="o">=</span><span class="s">&#34;model&#34;</span> <span class="na">label</span><span class="o">=</span><span class="s">&#34;Reason&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-control&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;modal-footer&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">button</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;button&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn btn-default&#34;</span> <span class="na">data-dismiss</span><span class="o">=</span><span class="s">&#34;modal&#34;</span><span class="p">&gt;</span>Close<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:submit</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;btn btn-primary&#34;</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;Save&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:form</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:if</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:zone</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;</span><span class="nt">t:block</span> <span class="na">t:id</span><span class="o">=</span><span class="s">&#34;reloadBlock&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">reload</span><span class="p">();&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">t:block</span><span class="p">&gt;</span>&#10;&#10;<span class="p">&lt;/</span><span class="nt">t:container</span><span class="p">&gt;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DisableProductsModal.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="nx">define</span><span class="p">(</span><span class="s2">&#34;app/modals&#34;</span><span class="p">,</span> <span class="p">[</span><span class="s2">&#34;jquery&#34;</span><span class="p">,</span> <span class="s2">&#34;bootstrap/modal&#34;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">modal</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">function</span> <span class="nx">DisableProductsModal</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">DisableProductsModal</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">show</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ids</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">var</span> <span class="nx">that</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">.</span><span class="nx">get</span><span class="p">({</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">url</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#disableProductsModal&#39;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;data-url&#39;</span><span class="p">),</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">data</span><span class="o">:</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="s1">&#39;ids&#39;</span><span class="o">:</span> <span class="nx">ids</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">},</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">that</span><span class="p">.</span><span class="nx">reset</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#disableProductsModal&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">content</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#disableProductsModal&#39;</span><span class="p">).</span><span class="nx">modal</span><span class="p">(</span><span class="s1">&#39;show&#39;</span><span class="p">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">});</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">DisableProductsModal</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reset</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#errors&#39;</span><span class="p">,</span> <span class="s1">&#39;#disableProductsModal&#39;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">DisableProductsModal</span><span class="o">:</span> <span class="nx">DisableProductsModal</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">};</span>&#10;<span class="p">});</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>modals.js</span>
    </div>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/TapestryMultipleActions">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<h3 id="algunas-diferencias-con-servletsjsp-y-grails">Algunas diferencias con Servlets/JSP y Grails</h3>
<p>La tecnología de presentación de páginas web Java con <em>Java Server Pages</em> o JSP permiten encapsular con un <em>tag</em> la generación de un trozo de HTML no en el propio JSP sino en ese <em>tag</em> que en código Java pudiendo incluir la llamada a un JSP. Los <em>tags</em> y librerías de <em>tags</em> son una forma de reutilizar esas partes de generación de código en el mismo proyecto y entre proyectos. Los <em>tags</em> además son una forma de abstraernos del funcionamiento interno del <em>tag</em> haciendo que solo necesitemos conocer sus parámetros.</p>
<p>Si usamos JSP usar librerías de <em>tags</em> es una buena idea, sin embargo, tiene algunas limitaciones como que requieren un archivo descriptor en formato XML que las defina y aunque pudiendo saber que parámetros definen y cuáles son requeridos no define el tipo de los parámetros que requiere. Los archivos XML en la época actual han caído en desuso porque son propensos a errores, errores que no son detectados hasta tiempo de ejecución, de los peores tipos de errores. Por otro lado, que los <em>tags</em> no especifiquen el tipo de parámetro que requiere cada uno hace que debamos inspeccionar el código fuente del <em>tag</em> con lo que la ventaja de abstraerse del funcionamiento no es del todo completa. Si por algún cambio el tipo de parámetro cambia hay que adaptar todos los usos del <em>tag</em>, si alguno no se hace nuevamente se producirán errores en tiempo de ejecución.</p>
<p>Grails usa GSP, una tecnología de presentación similar a los JSP. También dispone de <em>tags</em> que no requieren definir los <em>tags</em> en un archivo XML simplificando su uso pero que igualmente adolecen de algunos problemas como los JSP. Por un lado, los <em>tags</em> de Grails no disponen un mecanismo para hacer requerido un determinado parámetro con lo que deberemos incluir la comprobación con código nosotros, tampoco define el tipo de parámetros que requiere. También aunque hacer más simple su desarrollo al no tener un descriptor XML como en los <em>tag</em> JSP hace que haya que inspeccionar el código fuente para saber qué parámetros tiene, si son requeridos y cuál es el tipo del parámetro. Todo esto hace que puedan producirse errores en tiempo de ejecución y errores que no son producidos hasta que se ejercita el <em>tag</em> con un mal uso o un uso desactualizado al igual que usando los <em>tag</em> JSP.</p>
<p>En Apache Tapestry todo son componentes, las páginas también son componentes con la característica de que no están embebidos en otro componente. Un componente de Apache Tapestry sería similar a un <em>tag</em> de JSP o un <em>tag</em> de Grails, con ciertas similitudes pero no iguales en aspectos importantes. De pronto, un componente de Tapestry define los parámetros que necesita y si son requeridos pero también define el tipo del parámetro. Como se aprecia en las páginas de documentación de los <a href="http://tapestry.apache.org/component-reference.html">componentes integrados de serie en Apache Tapestry</a> se puede conocer esta información sin necesidad de conocer el código fuente del componente, documentación que podemos generar para los componentes que nosotros desarrollemos. Los parámetros, si son requeridos y sus tipos forman el contrato del componente y es lo único que deberemos conocer para usarlos, su funcionamiento interno nos es irrelevante que incluye el código JavaScript que necesite, podría que CSS y literales internacionalizados.</p>
<p>Pero esas no son las únicas diferencias con los <em>tags</em> de JSP o de Grails y es que estas son solo tecnologías de presentación, la V del <a href="https://es.wikipedia.org/wiki/Modelo%E2%80%93vista%E2%80%93controlador">patrón MVC</a>. Los componentes de Tapestry aparte de encapsular la lógica de presentación también pueden encapsular lógica de controlador, en el conocido patrón MVC además de V pueden ser C con lo que encapsulan aún más funcionalidad. La lógica de presentación y controlador en los JSP y Grails está separada pero ambas lógicas no son independientes, están relacionadas, en Tapestry está encapsulada en el mismo componente.</p>
<p>Los componentes de Tapestry usan el <a href="https://picodotdev.github.io/blog-bitix/2014/07/modelo-push-contra-modelo-pull-en-frameworks-web/">modelo pull en vez del modelo push</a> haciendo innecesario construir un objeto <em>Map</em> que pasar a la vista, haciendo que sea la plantilla la que solicite al controlador los datos que necesita y haciendo que el controlador no sepa que datos necesita la vista. El controlador solo deberá tener las propiedades y métodos que necesite la vista. Dado que en las plantillas <em>tml</em> de la vista no se pueden incluir expresiones complejas hace que no contengan lógica que estará en el controlador asociado que es código Java donde tendremos la ayuda del compilador para detectar errores.</p>
<p>Para volver a la misma página en <a href="https://spring.io/">Spring MVC</a>, <a href="https://struts.apache.org/">Struts</a> o <a href="https://grails.org/">Grails</a> posiblemente deberíamos recibir además información para retornar a la misma página en la que estábamos cosa que es innecesaria en Tapestry por su <a href="http://tapestry.apache.org/page-navigation.html">concepto de contexto de activación de página</a> y el patrón <em>Redirect-After-Post</em> hará que al recargar la página por código con <code>window.localtion.reload();</code> después de una petición POST el navegador no muestre un diálogo modal informando al usuario de que se reenviarán datos.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/images/dialogo-recargar_hu45bf122a7cd60598d5bbb4f4ac594246_16273_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Diálogo recargar después de petición POST en Firefox"><img src="https://picodotdev.github.io/blog-bitix/2016/07/no-un-tag-jsp-o-un-tag-de-grails-no-es-equivalente-a-un-componente-de-tapestry/images/dialogo-recargar_hu45bf122a7cd60598d5bbb4f4ac594246_16273_300x200_fit_box_3.png" width="300" height="63" alt="Diálogo recargar después de petición POST en Firefox" title="Diálogo recargar después de petición POST en Firefox"  class="lozad "></a></p>
<figcaption>Diálogo recargar después de petición POST en Firefox</figcaption>
</figure>
</div>
<p><a href="https://reactjs.org/">React</a> y <a href="https://www.polymer-project.org/1.0/">Polymer</a> son tecnologías de cliente en algunos aspectos similares a los componentes de Apache Tapestry pero con la diferencia de que unos son para el navegador del cliente y otros para el servidor, nada nos impide en la misma aplicación usar en el cliente React y Polymer y en el servidor Apache Tapestry. Nótese en el código del caso anterior que Tapestry ofrece integración con JavaScript de un modo que no existe ni en Spring MVC, Struts o Grails e incorpora de serie <a href="https://requirejs.org/">RequireJS</a>, Underscore y jQuery, un componente de Tapestry puede requerir la cargar de un recurso de JavaScript y desde el componente es posible pasar datos al JavaScript usando el servicio <a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/services/javascript/JavaScriptSupport.html">JavaScriptSupport</a>.</p>
<p>Esto es solo un pequeño ejemplo de las posibilidades de Apache Tapestry me dejo muchas otras como los eventos, <em>translators</em>, <em>encoders</em>, <em>coerces</em>, librerías de componentes, <em>inversion of control</em>, AJAX, validaciones de formularios, &hellip; En un proyecto las herramientas no son lo más importante pero <a href="https://picodotdev.github.io/blog-bitix/2016/06/el-lenguaje-de-programacion-framework-y-librerias-importan/">el lenguaje de programación, <em>framework</em> y librerías importan</a>, hay <a href="https://picodotdev.github.io/blog-bitix/2015/05/10-razones-para-seguir-usando-java/">10 razones para seguir usando Java</a> y varios <a href="https://elblogdepicodev.blogspot.com.es/2011/08/motivos-para-elegir-apache-tapestry.html">motivos para elegir Apache Tapestry</a>.</p>
<h3 id="finalizando">Finalizando</h3>
<p>Lamentablemente hasta el momento no he tenido una oportunidad laboral de comprobar y demostrar que como en este ejemplo pero basado en una necesidad real que con Tapestry la implementación de la solución es más sencilla, menos propensa a errores y que la productividad no está relacionado con escribir unas pocas líneas de código menos con un lenguaje menos verboso o dejar de escribir puntos y comas al final de las líneas, más aún con las <a href="https://picodotdev.github.io/blog-bitix/2014/03/novedades-y-nuevas-caracteristicas-de-java-8/">novedades de Java 8</a>. Quizá un día llegue esa oportunidad :|.</p>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
                <category term="tapestry"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/</id>
        <title>Jugar al clásico de estrategia de tablero Go en GNU/Linux</title>
        <updated>2016-07-23T13:00:00+02:00</updated>
        <published>2016-07-23T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>En esta serie de artículos sobre juegos vamos a ver que en GNU/Linux también hay juegos a los que podemos jugar en nuestra plataforma preferida. Otro de ellos es el clásico de estrategia Go.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Otro de los juegos clásicos junto con el ajedrez también para dos personas que requiere pensar y evaluar gran cantidad de posibles movimientos es el juego de origen chino Go. En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> e instalado el paquete <a href="https://www.archlinux.org/packages/extra/x86_64/gnugo/">gnugo</a> podremos jugar a este antiguo juego de estrategia tan o más complicado que el propio ajedrez por las diferentes estrategias que se pueden desarrollar.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pacman -S gnugo</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.sh</span>
    </div>
</div>
<p>Dado que en esta versión para computadora el juego Go se basa en modo texto podremos jugarlo en cualquier sistema GNU/Linux dados su bajos requerimientos que son despreciables para cualquier computadora actual, incluso para una <a href="https://www.raspberrypi.org/">Raspberry Pi</a> u otros sistemas como la familia <a href="https://es.wikipedia.org/wiki/Berkeley_Software_Distribution">BSD</a> e incluso <a href="https://www.minix3.org/">Minix</a>.</p>
<p>El tablero clásico se compone de una matriz de 19 por 19 en el que en las intersecciones se irán colocando las fichas de forma alternativa entre cada jugador tratando de capturar las fichas del oponente rodeándolas con las que nosotros pongamos o de dominar la mayor cantidad del tablero. Cuando se da el juego por terminado se realiza el cálculo del marcador según el territorio dominado por las fichas y las piezas capturadas del oponente en el transcurso del mismo.</p>
<p>En el juego de computadora el siguiente movimiento se hace introduciendo la coordenada del tablero donde queremos colocar la siguiente piedra que se compone de una letra para la coordenada horizontal y un número para la coordenada vertical.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/images/tablero-go_hu883be6ea0c2b4998178849d710c6b25b_444935_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Tablero tradicional de Go"><img src="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/images/tablero-go_hu883be6ea0c2b4998178849d710c6b25b_444935_300x200_fit_q90_box.jpg" width="299" height="200" alt="Tablero tradicional de Go" title="Tablero tradicional de Go"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/images/tablero-gnugo_huecb56793c52f2ceac9561cf8731d8aec_18368_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Tablero de Gnugo"><img src="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/images/tablero-gnugo_huecb56793c52f2ceac9561cf8731d8aec_18368_300x200_fit_box_3.png" width="300" height="193" alt="Tablero de Gnugo" title="Tablero de Gnugo"  class="lozad "></a></p>
<figcaption>Tablero tradicional de juego y tablero de Gnugo</figcaption>
</figure>
</div>
<p>En la wikipedia está documentado de forma bastante extensa las <a href="https://es.wikipedia.org/wiki/Go#Reglas_del_go">reglas del juego Go</a>, las diferentes formas de <a href="https://es.wikipedia.org/wiki/Go#Puntuaci.C3.B3n">calcular el marcador al final del juego</a> y las <a href="https://es.wikipedia.org/wiki/Go#T.C3.A1ctica">tácticas</a> y <a href="https://es.wikipedia.org/wiki/Go#Estrategia_b.C3.A1sica">estrategias</a> para jugar de la forma más efectiva que podamos.</p>
<p>Como una partida puede durar una buena cantidad de tiempo podemos salvar una partida a medias y cargarla de nuevo con los siguientes comandos:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">save [fichero]&#10;$ gnugo -l [fichero] --mode ascii&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>save-commands.txt</span>
    </div>
</div>
<p>Con el comando <code>help</code> obtendremos una lista completa de los comandos a nuestra disposición como volver un movimiento hacia atrás si nos hemos equivocado al introducir el siguiente movimiento.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Commands:&#10; back&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Take back your last move&#10; boardsize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Set boardsize (on move 1 only)&#10; comment&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Write a comment to outputfile&#10; depth &lt;num&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set depth for reading&#10; display&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Display game board&#10; exit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit GNU Go&#10; force &lt;move&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Force a move for current color&#10; forward&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Go to next node in game tree&#10; goto &lt;movenum&gt;&nbsp;&nbsp;&nbsp;&nbsp;  Go to movenum in game tree&#10; level &lt;amount&gt;&nbsp;&nbsp;&nbsp;&nbsp;  Playing level (default = 10)&#10; handicap &lt;num&gt;&nbsp;&nbsp;&nbsp;&nbsp;  Set fixed handicap (on move 1 only)&#10; freehandicap &lt;num&gt;  Place free handicap (on move 1 only)&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Omit &lt;num&gt; to place handicap yourself&#10; help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Display this help menu&#10; helpdebug&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Display debug help menu&#10; info&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Display program settings&#10; komi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set komi (on move 1 only)&#10; last&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Goto last node in game tree&#10; pass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pass on your move&#10; play &lt;num&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Play &lt;num&gt; moves&#10; playblack&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Play as Black (switch if White)&#10; playwhite&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Play as White (switch if Black)&#10; quit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit GNU Go&#10; resign&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Resign the current game&#10; save &lt;file&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Save the current game&#10; load &lt;file&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Load a game from file&#10; score&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Toggle display of score On/Off&#10; showboard&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   Toggle display of board On/Off&#10; switch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Switch the color you are playing&#10; undo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Take the last move back (same as back)&#10; &lt;move&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  A move of the format &lt;letter&gt;&lt;number&gt;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>help.out</span>
    </div>
</div>
<p>En Amazon hay algunos libros como <a href="https://amzn.to/2anENOU">El Go, un juego oriental milenario</a> y <a href="https://amzn.to/29ULTWQ">GO para principiantes</a>, en la librería libre también hay algunos como <a href="https://openlibra.com/es/book/manual-del-juego-del-go">Manual del Juego del Go</a> y <a href="https://openlibra.com/es/book/go-utilizando-las-36-estrategias-chinas">GO: Utilizando las 36 estrategias chinas</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B015ENSU18&amp;linkId=210d272021d815869d2c44e1503b904e&amp;internal=1" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=8415211945&amp;linkId=f7342910d70bf91cda078a1ce3abbbc0&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Go_%28game%29">Juego Go</a></li>
<li><a href="https://en.wikipedia.org/wiki/Rules_of_go">Rules of go</a></li>
<li><a href="https://www.gnu.org/software/gnugo/">GNU Go</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/</id>
        <title>Las cabeceras de cache del protocolo HTTP</title>
        <updated>2016-07-24T22:00:00+02:00</updated>
        <published>2016-07-22T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Establecer directivas de cacheo en los recursos devueltos en una página o aplicación web tiene las ventajas de reducir el número de peticiones que llegan al servidor mejorando la latencia y el rendimiento pudiendo atender a más usuarios y mejora los tiempos de carga de las páginas. Usando varias directivas de cacheo la aplicación es capaz de determinar cómo quiere que el contenido devuelto o los recursos sean cacheados por los clientes o servidores de cache intermedios.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/html.svg" width="200" height="200" alt="HTML" title="HTML"  class=""></p>
</div>
<p>Cachear aquella información que es costosa de generar y es muy solicitada consigue por un lado evitar que el servidor sea capaz de atender todo el tráfico reduciendo la cantidad de capacidad necesaria del servidor y por otro lado consigue que la información sea devuelta en menor tiempo. Para aquella información que no necesite estar completamente actualizada o que no cambia cada poco tiempo es candidata a cachearla en caso necesario. La cache se puede realizar en los navegadores guardando estos recursos como imágenes y hojas de estilos que consiguen reducir el número de peticiones al servidor y mostrando la página más rápidamente al usuario. La cache también se puede hacer en el lado del servidor usando soluciones específicas como <a href="https://varnish-cache.org/">Varnish</a>, <a href="https://memcached.org/">memcached</a> o para los casos más habituales que serán la mayoría las funcionalidades incorporadas en el servidor web como en el caso de <a href="https://nginx.org/">Nginx</a>.</p>
<p>El cacheo o almacenamiento temporal de datos puede hacerse a diferentes niveles sin ser exclusivos y de diferentes tipos de información. En la base de datos, en la aplicación, a nivel de página, con servidor intermedio o en el cliente.</p>
<p>Según la cantidad de tiempo de expiración que establezcamos como cache para el contenido conseguiremos variar el número de aciertos en la cache, aumentando el tiempo unos pocos segundos el tiempo que almacenamos en la cache el contenido conseguimos aumentar el porcentaje de aciertos en mayor medida. Con un tiempo de cache de un minuto ya se consiguen porcentajes elevados de aciertos según el número de peticiones realizadas en ese periodo de tiempo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/images/cache-hit_hudc615f1ae90aec737c335abd2694f309_25816_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Petición con acierto en cache"><img src="https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/images/cache-hit_hudc615f1ae90aec737c335abd2694f309_25816_300x200_fit_box_3.png" width="300" height="80" alt="Petición con acierto en cache" title="Petición con acierto en cache"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/images/cache-miss_hudc615f1ae90aec737c335abd2694f309_26206_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Petición con fallo en cache"><img src="https://picodotdev.github.io/blog-bitix/2016/07/las-cabeceras-de-cache-del-protocolo-http/images/cache-miss_hudc615f1ae90aec737c335abd2694f309_26206_300x200_fit_box_3.png" width="300" height="80" alt="Petición con fallo en cache" title="Petición con fallo en cache"  class="lozad "></a></p>
<figcaption>Petición con acierto y fallo en la cache</figcaption>
</figure>
</div>
<p>En el protocolo HTTP 1.1 se definieron tres mecanismos para las caches:</p>
<ul>
<li>Validez: permite usar un recurso sin hacer ninguna comprobación con el servidor ni para revalidarlo. Por ejemplo, la cabecera <em>Expires</em> indica en que momento el recurso puede haberse quedado obsoleto y se debería revalidar. La cabecera <em>Cache-Control: max-age</em> indica durante cuanto tiempo el recurso puede considerarse válido. Esto evita hacer peticiones al servidor si los recursos se consideran válidos.</li>
<li>Validación: una vez que un recurso se considera que puede ser obsoleto se debería comprobar haciendo una petición al servidor para conocer si sigue siendo válido y si no lo es obtener una nueva versión. Usando las cabeceras <em>If-Modified-Since</em> o <em>Etag</em> puede comprobarse si el recurso ha sido modificado con posterioridad a una fecha o ha variado. Se ha de hacer una petición para comprobar la validez del recurso pero los casos que sigan siendo válidos no hará falta descargarlos de nuevo. Si el recurso sigue siendo válido el servidor responde con el <a href="https://es.wikipedia.org/wiki/Anexo:C%C3%B3digos_de_estado_HTTP#3xx:_Redirecciones">código de estado 304</a> y sin el contenido en la respuesta.</li>
<li>Invalidación: las peticiones que usen los métodos <em>PUT</em>, <em>POST</em> y <em>DELETE</em> pueden invalidar recursos ya que modifican el estado del servidor.</li>
</ul>
<p>El servidor especifica como quiere que el contenido o recursos que devuelve sean cacheados a través de varias directivas del protocolo HTTP, establecidas como cabeceras en la respuesta cuando se solicita el contenido o recurso. Algunas cabeceras realizan funciones similares habiendo cierto solapamiento de funcionalidad. Son las siguientes:</p>
<ul>
<li>Cache-Control: private | public, no-cache, no-store, max-age, s-maxage, must-revalidate, no-transform, proxy-revalidate
<ul>
<li>El valor <em>private</em> indica que el recurso es privado para el usuario y no debería ser cacheado. Esto no hace el recurso más seguro ya que la información no se transmite cifrada para ello hay que <a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">usar un protocolo seguro con TLS/SSL</a>.</li>
<li><em>no-cache</em> el recurso no debería ser cacheado.</li>
<li><em>no-store</em> el recurso no debería ser almacenado.</li>
<li><em>max-age</em> normalmente se ha usado la directiva <em>Expires</em> pero esta permite establecer el máximo tiempo especificado en segundos a cachear un recurso.</li>
<li><em>s-maxage</em> similar a max-age pero para las caches intermedias entre el cliente y el servidor.</li>
<li><em>must-revalidate</em> cuando un recurso se queda obsoleto no se debe usar sin antes validar contra el servidor si sigue siendo válido.</li>
<li><em>no-transform</em> indica que el contenido original no debe ser modificado, por ejemplo, modificando el recurso para optimizarlo si por ejemplo se trata de una imagen.</li>
<li><em>proxy-revalidate</em> lo mismo que <em>must-revalidate</em> pero para las caches intermedias.</li>
</ul>
</li>
<li>If-Modified-Since: si el recurso solicitado con su variante no ha sido modificado con posterioridad a una fecha se devolverá un código de estado 304 sin el contenido.</li>
<li>Expires: es una marca de tiempo que indica cuando el recurso expira, dado que se basa en el tiempo no es muy precisa ya que los relojes de cada ordenador no están perfectamente sincronizados y hay variaciones incluso de minutos. Preferiblemente es mejor usar <em>Etag</em> o <em>max-age</em>.</li>
<li><a href="https://es.wikipedia.org/wiki/HTTP_ETag">Etag</a>: <em>entity-tag</em> o <em>etag</em> es un código <em>hash</em> único del contenido que permite conocer si el recurso ha cambiado. Si el recurso no ha cambiado no hace falta devolver el recurso, si ha cambiado se devuelve en la misma petición. Al no depender de una marca de tiempo como <em>Expires</em> o <em>max-age</em> es más fiable.</li>
<li>Vary: indica que el recurso varía según alguna cabecera proporcionada por el cliente como por ejemplo <em>User-Agent</em> o <em>Accept-Encoding</em>.</li>
<li>Pragma: esta es una directiva antigua que indicada como <em>pragma: no-cache</em>, se interpreta como <em>cache-control: no-cache</em>.</li>
</ul>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://dev.mobify.com/blog/beginners-guide-to-http-cache-headers/">A Beginner’s Guide to HTTP Cache Headers</a></li>
<li><a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">Header Field Definitions</a></li>
<li><a href="https://librosweb.es/libro/symfony_2_x/capitulo_14.html">Capítulo 14. La caché de HTTP</a></li>
<li><a href="https://librosweb.es/libro/symfony_2_x/capitulo_14/introduccion_a_la_cache_de_http.html">14.3. Introducción a la caché de HTTP</a></li>
<li><a href="https://librosweb.es/libro/symfony_2_x/capitulo_14/caducidad_y_validacion_http.html">14.4. Caducidad y validación HTTP</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/</id>
        <title>Cómo crear miniaturas o vistas previas de imágenes con ImageMagick</title>
        <updated>2020-04-12T18:00:00+01:00</updated>
        <published>2016-07-17T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>En una página web es útil utilizar imágenes más pequeñas en tamaño que las originales para reducir la cantidad de kilobytes transferidos al acceder a una página consiguiendo además que cargue más rápido en conexiones lentas. Algunas imágenes en alta calidad pueden ocupar varios <em>megas</em>, es poco eficiente cargar una imagen que posteriormente en el navegador se visualizará en un tamaño más pequeño, ya que la imagen se descargará en su tamaño original pero posteriormente el navegador al visualizarla la escalará al tamaño en que la muestre.</p>
<p>Si con antelación hacemos el escalado podremos ahorrar una buena cantidad de ancho de banda que se notará en mayor medida en los dispositivos móviles que usen las redes de operadores de telefonía y ahorrará datos en aquellos usuarios que tengan algún límite de transferencia mensual en su tarifa. También afecta al SEO, el tiempo de carga de una página Google es un criterio que tiene en cuenta su algoritmo para ordenar los resultados en su página, para mejorar el tiempo de carga de una página otra cosa a considerar es <a href="https://picodotdev.github.io/blog-bitix/2020/01/mejorar-el-tiempo-de-carga-de-una-pagina-web-usando-lazy-load/">cargar las imágenes cuando se visualizan</a> y no al cargar la página.</p>
<p>Si tenemos unas pocas imágenes y no es algo que hagamos a menudo podemos usar una herramienta de retoque fotográfico como <a href="https://www.gimp.org/">GIMP</a> pero si tenemos muchas imágenes o es algo que hacemos de forma regular es conveniente automatizar la tarea, nos ahorraremos bastante tiempo de algo que es tedioso hacer de forma manual.</p>
<h3 id="crear-una-miniatura-o-vista-previa">Crear una miniatura o vista previa</h3>
<p>Al igual que podemos <a href="https://elblogdepicodev.blogspot.com.es/2012/11/convertir-imagenes-entre-formatos-y.html">convertir imágenes entre diferentes formatos</a> o <a href="https://elblogdepicodev.blogspot.com.es/2011/05/anadir-marcas-de-agua-con-imagemagick.html">añadir marcas de agua a imágenes</a> de forma automatizada con <a href="https://www.imagemagick.org">Image Magick</a> podemos escalar imágenes para generar miniaturas o <em>thumbnails</em> más pequeñas para que ocupen menos. El comando para escalar todas las imágenes de una extensión <em>jpg</em> en este caso a un tamaño original de 1600 de ancho y 1067 de alto en pixeles conservando la proporción de la imagen es el siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ convert -resize 300x200 201607.jpg -strip 201607-thumb.jpg&#10;&#10;$ <span class="k">for</span> f in *.jpg<span class="p">;</span> <span class="k">do</span> convert -resize 300x200 <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> -strip -set filename:f <span class="s2">&#34;%t-thumb.%e&#34;</span> <span class="s2">&#34;%[filename:f]&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;$ <span class="k">for</span> f in *.png<span class="p">;</span> <span class="k">do</span> convert -resize 300x200 <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> -strip -set filename:f <span class="s2">&#34;%t-thumb.%e&#34;</span> <span class="s2">&#34;%[filename:f]&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;&#10;$ <span class="k">for</span> f in *.jpg<span class="p">;</span> <span class="k">do</span> convert -resize 650x450 <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> -strip -set filename:f <span class="s2">&#34;%t-thumb.%e&#34;</span> <span class="s2">&#34;%[filename:f]&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;$ <span class="k">for</span> f in *.png<span class="p">;</span> <span class="k">do</span> convert -resize 650x4500 <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> -strip -set filename:f <span class="s2">&#34;%t-thumb.%e&#34;</span> <span class="s2">&#34;%[filename:f]&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>convert.sh</span>
    </div>
</div>
<p>El primero de los comandos sirve para hacer cambios de tamaño de forma individual a cada foto y el segundo de forma masiva usando <a href="https://es.wikipedia.org/wiki/Bash">Bash</a>. Crean nuevos archivos con las miniaturas añadiendo al nombre de cada vista previa la terminación <em>_thumb</em>, además con la opción <em>-strip</em> elimina la metainformación de la foto o imagen que se hubiera almacenado junto con ella como hacen los teléfonos móviles y cámaras.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/201607_hu155add02d6c6e28845a8452d31796ba4_1042102_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Previsualización de imagen en tamaño 450x300"><img src="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/201607_hu155add02d6c6e28845a8452d31796ba4_1042102_450x300_fit_q90_box.jpg" width="450" height="300" alt="Previsualización de imagen en tamaño 450x300" title="Previsualización de imagen en tamaño 450x300"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/201607_hu155add02d6c6e28845a8452d31796ba4_1042102_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Previsualización de imagen en tamaño 300x200"><img src="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/201607_hu155add02d6c6e28845a8452d31796ba4_1042102_300x200_fit_q90_box.jpg" width="300" height="200" alt="Previsualización de imagen en tamaño 300x200" title="Previsualización de imagen en tamaño 300x200"  class="lozad "></a></p>
<figcaption>Previsualización de imagen en tamaño 450x300 y 300x200 del original 1600x1067</figcaption>
</figure>
</div>
<p>Este sería una ejemplo de la imagen que tengo como fondo de escritorio. Su tamaño original ocupa 1 MB, la vista previa aproximadamente 210 KB en tamaño 650x450 y 50 KB en tamaño de 300x200. Una reducción de tamaño considerable.</p>
<p>Los ahorros de espacio conseguidos anteriores son consecuencia de reducir el tamaño de la imagen, <a href="https://picodotdev.github.io/blog-bitix/2019/12/comando-para-convertir-imagenes-jpeg-y-png-a-webp/">utilizar el formato de imagen WebP en vez de <em>jpg</em> y <em>png</em></a> además permite conseguir importantes reducciones de tamaño del espacio ocupado por las fotografías e imágenes originales, en torno al 20% y 60%.</p>
<h3 id="escala-de-grises">Escala de grises</h3>
<p>Los siguientes comandos permiten crear imágenes en escala de grises.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ convert -colorspace Gray -strip 201607.jpg 201607-grayscale.jpg&#10;&#10;$ <span class="k">for</span> f in *.png<span class="p">;</span> <span class="k">do</span> convert -colorspace Gray -strip <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> -set filename:f <span class="s2">&#34;%t-grayscale.%e&#34;</span> %<span class="o">[</span>filename:f<span class="o">]</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;$ <span class="k">for</span> f in *.jpg<span class="p">;</span> <span class="k">do</span> convert -colorspace Gray -strip <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> -set filename:f <span class="s2">&#34;%t-grayscale.%e&#34;</span> %<span class="o">[</span>filename:f<span class="o">]</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>convert-grayscale.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/201607-grayscale_hue8d2e8676336d3e683f83c1cad0c5c68_777197_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Imagen en escala de grises"><img src="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/201607-grayscale_hue8d2e8676336d3e683f83c1cad0c5c68_777197_300x200_fit_q90_box.jpg" width="300" height="200" alt="Imagen en escala de grises" title="Imagen en escala de grises"  class="lozad "></a></p>
<figcaption>Imagen en escala de grises</figcaption>
</figure>
</div>
<h3 id="convertir-svg-a-jpg-o-png">Convertir svg a jpg o png</h3>
<p>Si la imagen original está en el formato escalar <em>svg</em> para convertir a formatos <em>jpg</em>, <em>png</em>, o generar vistas previas el comando es similar indicando también el tamaño de la imagen deseada.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="k">for</span> f in *.svg<span class="p">;</span> <span class="k">do</span> convert -size 750x750 -resize 750x750 <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">f</span><span class="p">%.*</span><span class="si">}</span><span class="s2">.jpg&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;$ <span class="k">for</span> f in *.svg<span class="p">;</span> <span class="k">do</span> convert -size 750x750 -resize 750x750 <span class="s2">&#34;</span><span class="nv">$f</span><span class="s2">&#34;</span> <span class="s2">&#34;</span><span class="si">${</span><span class="nv">f</span><span class="p">%.*</span><span class="si">}</span><span class="s2">.png&#34;</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>convert-svg.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/linux.svg" data-gallery="data-gallery" title="Imagen en formato svg"><img src="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/linux.svg" width="300" height="200" alt="Imagen en formato svg" title="Imagen en formato svg"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/linux_hud5f503d22f4edce3a84c965f12d594f3_119982_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Imagen en formato png"><img src="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-miniaturas-o-vistas-previas-de-imagenes-con-imagemagick/images/linux_hud5f503d22f4edce3a84c965f12d594f3_119982_300x200_fit_box_3.png" width="172" height="200" alt="Imagen en formato png" title="Imagen en formato png"  class="lozad "></a></p>
<figcaption>Imagen en formato svg y en formato png</figcaption>
</figure>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://elblogdepicodev.blogspot.com.es/2011/05/anadir-marcas-de-agua-con-imagemagick.html">Añadir marcas de agua a imágenes con ImageMagick</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2012/11/convertir-imagenes-entre-formatos-y.html">Convertir imágenes entre formatos y cambiar tamaño con ImageMagick</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/</id>
        <title>Jugar al ajedrez en GNU/Linux con GNOME</title>
        <updated>2016-07-16T12:00:00+02:00</updated>
        <published>2016-07-16T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnome.svg" width="200" height="243" alt="GNOME" title="GNOME"  class=""></p>
</div>
<p><a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> no es la plataforma primaria de los juegos triple A, pero existen multitud de juegos libres y gratuitos que igualmente nos hacen pasar muy buenos ratos. Hoy en día los juegos tienen unos gráficos en tres dimensiones espectaculares cada vez más realistas para lo que hasta hace unos pocos años atrás era posible. Aún así algunos juegos no tan avanzados gráficamente son tan o más adictivos y divertidos que cualquier juego triple A y con la ventaja de que no requieren tener la última tarjeta gráfica con al última tecnología, gran cantidad de memoria y se pueden jugar en un portátil sin el riesgo de sobrecalentarlo.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/images/gnome-chess_hua891d357448f8c855f54d7c0cebc0c5a_44982_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Icono del juego de ajedrez de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/images/gnome-chess_hua891d357448f8c855f54d7c0cebc0c5a_44982_300x200_fit_box_3.png" width="200" height="200" alt="Icono del juego de ajedrez de GNOME" title="Icono del juego de ajedrez de GNOME"  class="lozad "></a></p>
<figcaption>Icono del juego de ajedrez de GNOME</figcaption>
</figure>
</div>
<p>Un juego clásico es el ajedrez y en GNU/Linux y con el entorno de escritorio <a href="https://www.gnome.org/">GNOME</a> podemos jugar contra un oponente humano o la propia computadora que en el nivel fácil ya nos pondrá en muchas dificultades si es que conseguimos ganarla. Para instalar el juego de ajedrez deberemos instalar el <a href="https://www.archlinux.org/packages/extra/x86_64/gnome-chess/">paquete gnome-chess</a> y si queremos que el oponente sea la computadora instalar el <a href="https://www.archlinux.org/packages/community/x86_64/gnuchess/">paquete gnuchess</a>. Usando <a href="https://www.archlinux.org/">Arch Linux</a> y su gestor de paquetes los instalamos de la siguiente forma:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pacman -S gnome-chess gnuchess</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.sh</span>
    </div>
</div>
<p>Iniciado el juego veremos el tablero de 8 por 8 casillas con las fichas posicionadas en las casillas de inicio.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/images/gnome-chess-tablero_hubbe885730450091cb1400539f604646b_45643_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Juego de ajedrez de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/images/gnome-chess-tablero_hubbe885730450091cb1400539f604646b_45643_300x200_fit_box_3.png" width="235" height="200" alt="Juego de ajedrez de GNOME" title="Juego de ajedrez de GNOME"  class="lozad "></a></p>
<figcaption>Juego de ajedrez de GNOME</figcaption>
</figure>
</div>
<p>En la sección de preferencias del juego configuramos si el oponente es otro humano o la computadora, en caso de ser la computadora su nivel de inteligencia o dificultad, si queremos jugar con las fichas blancas o negras si queremos establecer un tiempo límite para la partida para cada jugador y el tipo de reloj para el tiempo límite. En el apartado del aspecto podemos cambiar la apariencia de las fichas, el formato de la última jugada, la orientación del tablero, si queremos numeración y si queremos sugerencias.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/images/gnome-chess-preferencias-juego_hu1011da7fac410ad49f87d2194b7a4299_24890_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Preferencias de juego de ajedrez de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/images/gnome-chess-preferencias-juego_hu1011da7fac410ad49f87d2194b7a4299_24890_300x200_fit_box_3.png" width="221" height="200" alt="Preferencias de juego de ajedrez de GNOME" title="Preferencias de juego de ajedrez de GNOME"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/images/gnome-chess-preferencias-aspecto_hu5aef004cab90a9b42d002761955e69fa_20829_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Preferencias de aspecto de ajedrez de GNOME"><img src="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/images/gnome-chess-preferencias-aspecto_hu5aef004cab90a9b42d002761955e69fa_20829_300x200_fit_box_3.png" width="221" height="200" alt="Preferencias de aspecto de ajedrez de GNOME" title="Preferencias de aspecto de ajedrez de GNOME"  class="lozad "></a></p>
<figcaption>Preferencias del juego</figcaption>
</figure>
</div>
<p>También podemos guardar la partida para continuarla con posterioridad. Solo nos queda practicar la diferentes aperturas que forman una parte esencial de juego seguir alguna estrategia para el juego medio y como finalizar la partida con las piezas que no hayan sido eliminadas por el oponente. En la wikipedia hay algún <a href="https://es.wikipedia.org/wiki/Ajedrez">buen artículo introductorio al ajedrez</a> y <a href="https://es.wikipedia.org/wiki/Apertura_%28ajedrez%29">algunos artículos sobre las aperturas</a> donde encontraremos las más conocidas y seguro que otras muchas que no conocíamos e incluso si estamos aprendiendo la <a href="https://es.wikipedia.org/wiki/Leyes_del_ajedrez">reglas del juego</a>.</p>
<p>En Amazon hay varios libros que serán más didácticos sobre estrategia para el juego del ajedrez como <a href="https://amzn.to/29Cj30T">Ajedrez para niños</a> o <a href="https://amzn.to/29CiOTD">El ajedrez de torneo</a> y en la biblioteca libre <a href="https://openlibra.com">OpenLibra</a> hay algunos de libre acceso como <a href="https://openlibra.com/es/book/ajedrez-y-su-ensenanza-libro-de-aperturas">Ajedrez y su Enseñanza: Libro de Aperturas</a>. Leyendo alguno de estos libros obtendremos pautas y tácticas que podemos emplear para mejorar nuestras jugadas.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=8425517893&amp;linkId=c1e1fc606e2606fec91e2db08cadcfa7&amp;internal=1" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=842450397X&amp;linkId=b78575ac7587361ca5bb1405a9a2de99&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/</id>
        <title>Cómo crear un proxy inverso entre el servidor web Nginx y un servidor de aplicaciones Java</title>
        <updated>2016-07-16T13:30:00+02:00</updated>
        <published>2016-07-15T18:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Continuando la serie de artículos sobre varios aspectos realizados muy comúnmente en las aplicaciones y servidores web en este artículo explicaré como hacer que un servidor web nginx haga de <em>proxy</em> inverso para un servidor de aplicaciones Java en este caso Tomcat.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/nginx.svg" width="300" height="64" alt="Nginx" title="Nginx"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/tomcat.svg" width="200" height="133" alt="Tomcat" title="Tomcat"  class=""></p>
</div>
<p>Las aplicaciones web dinámicas Java se despliegan en un contenedor de <em>servlets</em> o un <a href="https://picodotdev.github.io/blog-bitix/2014/02/el-servidor-de-aplicaciones-jboss-slash-wildfly/">servidor de aplicaciones como WildFly</a> que implementa las <a href="https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/">especificaciones de los estándares de Java EE</a> pero es habitual que los usuarios no accedan directamente al contenedor de aplicaciones Java sino que se ponga delante un servidor web como <a href="https://httpd.apache.org/">Apache</a> o <a href="https://nginx.org/">Nginx</a> con la tarea de que realice algunas tareas. Las tareas que puede realizar un servidor web son varias como:</p>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">Realizar la conexión TLS/SSL</a> sin necesidad de que llegue al servidor de aplicaciones.</li>
<li>Servir el contenido estático.</li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-como-balanceador-de-carga/">Balanceo de carga</a> con la que podremos tener varios servidores de aplicaciones Java en caso de que la aplicación deba soportar muchos usuarios.</li>
<li>Cacheo de páginas y contenido.</li>
<li>Redirecciones y reescritura de URL.</li>
<li>Seguridad.</li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/08/forzar-el-uso-del-protocolo-https-en-apache-tapestry/">Forzar el uso del protocolo seguro HTTPS</a>.</li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/02/configurar-http-2-en-nginx-apache-httpd-wildfly-o-jetty/">Ofrecer el protocolo HTTP/2</a>.</li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/images/reverse-proxy_hucb2175c82081c16158c94c9e724fcd73_17320_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Esquema de un proxy inverso"><img src="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/images/reverse-proxy_hucb2175c82081c16158c94c9e724fcd73_17320_300x200_fit_box_3.png" width="300" height="113" alt="Esquema de un proxy inverso" title="Esquema de un proxy inverso"  class="lozad "></a></p>
<figcaption>Un proxy inverso recibe las peticiones de internet y las reenvía a los servidores de una red interna sin necesidad de que los clientes conozcan la red interna</figcaption>
</figure>
</div>
<p>Para que un servidor web como Nginx actúe como <em>proxy</em> inverso o <em>reverse proxy</em> para un servidor de aplicaciones debemos añadir unas pocas directivas al archivo de configuración del servidor web. En el caso de Nginx usando la directiva <em>proxy_pass</em> donde indicamos para una localización la URL del servidor de aplicaciones a la que se le solicitará el contenido, en el ejemplo usando un servidor <a href="https://tomcat.apache.org/">Tomcat</a>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-nginx" data-lang="nginx"><span class="k">server</span> <span class="p">{</span>&#10;	<span class="kn">listen</span> <span class="mi">80</span><span class="p">;</span>&#10;&#10;	<span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>&#10;		<span class="kn">proxy_pass</span> <span class="s">http://tomcat:8080</span><span class="p">;</span>&#10;		<span class="kn">proxy_set_header</span> <span class="s">Host</span> <span class="nv">$host</span><span class="p">;</span>&#10;		<span class="kn">proxy_set_header</span> <span class="s">X-Real-IP</span> <span class="nv">$remote_addr</span><span class="p">;</span>&#10;		<span class="kn">proxy_set_header</span> <span class="s">X-Forwarded-Proto</span> <span class="s">https</span><span class="p">;</span>&#10;	<span class="p">}</span>&#10;<span class="p">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>nginx.conf</span>
    </div>
</div>
<p>Una forma fácil de probarlo es usando <a href="https://www.docker.com/">Docker</a> y <a href="https://docs.docker.com/compose/">Docker Compose</a> que en varios artículos introductorios siendo el primero el <a href="https://picodotdev.github.io/blog-bitix/2014/11/como-instalar-y-guia-de-inicio-basica-de-docker/">inicio básico de Docker</a> comento como empezar a usarlo y en que consiste esta nueva forma de ejecución para las aplicaciones. Con el siguiente archivo de Docker Compose creamos dos contenedores uno para Nginx en el que proporcionamos su configuración personalizada y otro contenedor para Tomcat.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">tomcat</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">tomcat</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">nginx</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">nginx:alpine</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">volumes</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">./nginx.conf:/etc/nginx/conf.d/default.conf:ro</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">links</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">tomcat</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="s2">&#34;80:80&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<p>Al hacer un <em>proxy</em> inverso debemos tener en cuenta que el servidor Tomcat si devuelve URL absolutas las haga siendo las del servidor web por las que se accede a la aplicación, si únicamente genera URL relativas no deberemos hacer nada pero en el caso de absolutas el servidor Tomcat deberá conocer el protocolo usado en el servidor web (HTTP o HTTPS) y el puerto del servidor web que suele ser 80 para HTTP y 443 para HTTPS pero que en el servidor Tomcat suele ser 8080 para HTTP y 8443 para HTTPS. Si el protocolo y puerto usado en el servidor web y servidor de aplicaciones es diferente y una aplicación genera URL absolutas el servidor de aplicaciones deberá tener esto en cuenta que es lo que se usa el en servidor web.</p>
<p>En la documentación se comentan varios <a href="https://tomcat.apache.org/tomcat-8.0-doc/config/http.html">parámetros de configuración de Tomcat</a> como <em>proxyPort</em> y <em>scheme</em> que ajustan la información devuelta por los métodos <em>request.getServerPort()</em> y <em>request.getScheme()</em> y que nos servirá en caso de tener que generar URLs absolutas.</p>
<p>Arrancado los contenedores con el comando <code>docker-compose up</code> accediendo al servidor web veremos que el contenido proporcionado es el ofrecido por Tomcat, que con la configuración del ejemplo es la página de inicio de Tomcat. En las cabeceras de respuesta Nginx añade una, <em>Server</em>, indicando su versión.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/images/nginx-tomcat_hu65abe743fc3bbc70de8b5763b0e01416_165612_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Nginx configurado como proxy inverso de un servidor de aplicaciones Tomcat"><img src="https://picodotdev.github.io/blog-bitix/2016/07/como-crear-un-proxy-inverso-entre-el-servidor-web-nginx-y-un-servidor-de-aplicaciones-java/images/nginx-tomcat_hu65abe743fc3bbc70de8b5763b0e01416_165612_300x200_fit_box_3.png" width="278" height="200" alt="Nginx configurado como proxy inverso de un servidor de aplicaciones Tomcat" title="Nginx configurado como proxy inverso de un servidor de aplicaciones Tomcat"  class="lozad "></a></p>
<figcaption>Nginx configurado como proxy inverso de un servidor de aplicaciones Tomcat</figcaption>
</figure>
</div>
<p>En la <a href="https://www.nginx.com/resources/admin-guide/reverse-proxy/">documentación sobre <em>reverse proxy</em> de Nginx</a> se explican algunas directivas más para pasar al servidor Tomcat la dirección IP del usuario usando cabeceras HTTP, en la configuración de Nginx usando <em>proxy_set_header</em>.</p>
<p>Nginx y Apache como <em>proxys</em> inversos cubren algunos casos en los que son suficientes, aquellos en los que la configuración como <em>proxys</em> no es reducida y estática ya que requieren reiniciar el servidor web. Para la computación en la nube y arquitecturas de microservicios <a href="https://picodotdev.github.io/blog-bitix/2021/09/el-proxy-inverso-traefik-caracteristicas-y-funcionalidades-que-ofrece/">el <em>proxy</em> inverso Traefik</a> está mejor adaptado ya que su configuración de enrutado es dinámica al tomarse de diferentes proveedores como <a href="https://www.consul.io/">Consul</a>, <a href="https://www.docker.com/">Docker</a> o <a href="https://kubernetes.io/">Kubernetes</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/NginxReverseProxy">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>docker-compose up</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.nginx.com/resources/admin-guide/reverse-proxy/">NGINX Reverse Proxy</a></li>
<li><a href="https://elblogdepicodev.blogspot.com.es/2011/02/unir-apache-httpd-y-tomcat-mediante-un.html">Unir Apache HTTPD y Tomcat mediante un reverse proxy</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software"/>
            
                <category term="software-libre"/>
            
                <category term="web"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/</id>
        <title>Guía básica del intérprete de comandos Bash</title>
        <updated>2016-07-10T11:00:00+02:00</updated>
        <published>2016-07-10T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La línea de comandos sigue siendo una poderosa herramienta que aunque menos intuitiva que una interfaz gráfica permite hacer las tareas de forma más sencilla, directa y que se puede automatizar. Conocer las opciones del intérprete de comandos es básico para aprovechar su máximo potencial. Desde las combinaciones de teclas hasta los <em>scripts</em> o archivos de lotes. Tuberías y redirecciones, comandos con ejecución condicional, variables, interpolación de cadenas, <em>scrtips</em>, argumentos, funciones, <em>for</em>, <em>switch</em>, <em>if</em>, comparaciones, &hellip;</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/gnu.svg" width="200" height="196" alt="GNU" title="GNU"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>Automatizar las tareas que realizamos permite ahorrarnos el tiempo de tener que hacerlo manualmente y evita los errores que se puede producir. En <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> el uso de la terminal no es algo extraño y muchas tareas son realizadas más fácil y rápido con un comando que con un programa con interfaz gráfica, además tiene la ventaja de que puede automatizarse creando un <em>script</em> <a href="https://es.wikipedia.org/wiki/Bash">Bash</a>.</p>
<p>El intérprete de comandos Bash junto con la combinación de otros programas proporcionados por la parte GNU de los sistemas Linux presentes en la mayoría de las distribuciones por defecto es suficiente para automatizar la mayor parte de tareas que necesitemos conociendo que hacen <a href="https://picodotdev.github.io/blog-bitix/2020/04/50-plus-comandos-basicos-y-utiles-de-gnu-linux/">50 comandos útiles de línea de comandos</a>. Para aumentar la productividad es necesario aprender <a href="https://picodotdev.github.io/blog-bitix/2016/06/combinacion-de-teclas-para-copiar-y-pegar-en-la-terminal/">las combinaciones de teclas del intérprete Bash y del emulador de la terminal</a>.</p>
<div class="alert alert-warning tableofcontents">
    <h2>Contenido del artículo</h2>
    <toc></toc>
</div>
<h3 id="tuberías-y-redirecciones">Tuberías y redirecciones</h3>
<p>Al ejecutar un comando podemos querer encadenar la salida de un comando con la entrada de otro, mediante una tubería. Uno de los puntos de la filosofía de los programas de los sistemas Unix es que realicen una o pocas tareas pero que lo hagan muy bien. Usando varios programas especializados en una tarea podemos juntarlos como si fuese piezas de Lego para realizarla tarea compleja que necesitamos, encadenando la salida de un comando como la entrada del siguiente.</p>
<p>Una de las cosas buenas de Bash es que está presente por defecto en la mayoría de las distribuciones Linux y si no es este intérprete de comandos será otro similar por lo que no necesitamos instalar nada más adicional para usarlo. Aún así si necesitaremos algo más potente que Bash como lenguaje de programación podemos optar por un lenguaje de programación como <a href="https://www.python.org/">Python</a> para realizar los <em>scripts</em> aunque necesitaremos instalar su paquete y las dependencias que los <em>scripts</em> usen.</p>
<p>Por ejemplo, dada una lista de concursantes habilitados en un sorteo podemos obtener 3 ganadores de forma aleatoria con la combinación de los siguientes comandos. El comando <code>grep</code> permite aplicar una expresión regular a cada línea de un fichero que si la cumple es enviada a la salida, <code>shuf</code> reordena las líneas de forma aleatoria y con la opción <code>-n 3</code> emite las 3 primeras. Los comandos proporcionados por GNU en los sistemas Linux proporcionan multitud de comandos como estos muy útiles, combinándolos conseguimos tareas más capaces que lo que son los comandos individualmente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ grep <span class="s2">&#34;^[^#]&#34;</span> sorteo.txt <span class="p">|</span> shuf -n <span class="m">3</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sorteo-1.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/sorteo_huc36cd599563a8744a46d8e6f869842e1_34801_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Sorteo implementado con dos comandos de GNU/Linux"><img src="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/sorteo_huc36cd599563a8744a46d8e6f869842e1_34801_300x200_fit_box_3.png" width="300" height="193" alt="Sorteo implementado con dos comandos de GNU/Linux" title="Sorteo implementado con dos comandos de GNU/Linux"  class="lozad "></a></p>
<figcaption>Sorteo implementado con dos comandos de GNU/Linux</figcaption>
</figure>
</div>
<p>Por defecto la salida estándar de un comando es la terminal pero podemos redirigirla a un fichero con la opción <code>&gt;</code>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ grep <span class="s2">&#34;^[^#]&#34;</span> sorteo.txt <span class="p">|</span> shuf -n <span class="m">3</span> &gt; ganadores.txt&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sorteo-2.sh</span>
    </div>
</div>
<p>Además de la salida estándar los programas tienen la salida de errores que podemos redirigir con <code>2&gt;</code>, si queremos redirigir la salida estándar y la de error podemos usar la redirección <code>&amp;&gt;</code>. Tanto la opción <code>&gt;</code> y <code>2&gt;</code> crean un fichero con la salida redirigida, si en vez de sobrescribir el contenido del archivo queremos añadirlo al final podemos hacer la redirección con <code>&gt;&gt;</code>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ grep <span class="s2">&#34;^[^#]&#34;</span> sorteo.txt <span class="p">|</span> shuf -n <span class="m">3</span> &gt;&gt; ganadores.txt&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>sorteo-3.sh</span>
    </div>
</div>
<h3 id="múltiples-comandos">Múltiples comandos</h3>
<p>Si necesitamos ejecutar dos comandos seguidos podemos introducirlos en la misma línea en vez de individualmente, ejecutar un comando si el anterior se ha ejecutado correctamente con <code>&amp;&amp;</code> o al contrario ejecutar un comando si el anterior ha fallado con <code>||</code>. Si en la ubicación de trabajo que estamos existe un directorio no se podrá crear otro con el mismo nombre, dependiendo de las opciones de encadenamiento según el resultado del comando anterior se ejecutará o no el siguiente comando.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ mkdir directorio <span class="p">;</span> mkdir directorio <span class="p">;</span> <span class="nb">echo</span> <span class="s2">&#34;Directorio creado&#34;</span>&#10;$ mkdir directorio <span class="o">&amp;&amp;</span> mkdir directorio <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&#34;Directorio creado&#34;</span>&#10;$ mkdir directorio <span class="p">&amp;</span>&gt; /dev/null <span class="o">||</span> <span class="nb">echo</span> <span class="s2">&#34;La creación de directorio ha fallado&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>multiples-comandos.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/multiples-comandos_hu446b606788cc2904d57fcc928566576f_38242_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Múltiples comandos en la misma línea"><img src="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/multiples-comandos_hu446b606788cc2904d57fcc928566576f_38242_300x200_fit_box_3.png" width="300" height="131" alt="Múltiples comandos en la misma línea" title="Múltiples comandos en la misma línea"  class="lozad "></a></p>
<figcaption>Múltiples comandos en la misma línea</figcaption>
</figure>
</div>
<h3 id="variables-e-interpolación-de-cadenas">Variables e interpolación de cadenas</h3>
<p>Podemos definir variables locales en el <em>script</em> o exportarlas para que estén accesibles en otros procesos e incluso interpolarlas en cadenas de la siguiente forma:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="nv">name</span><span class="o">=</span><span class="s2">&#34;picodotdev&#34;</span>&#10;<span class="nb">export</span> <span class="nv">name</span><span class="o">=</span><span class="s2">&#34;picodotdev&#34;</span>&#10;&#10;$ <span class="nb">echo</span> <span class="nv">$name</span>&#10;$ <span class="nb">echo</span> <span class="s2">&#34;Hola </span><span class="nv">$name</span><span class="s2">!&#34;</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>variables-1.sh</span>
    </div>
</div>
<p>También podemos interpolar la salida de un comando dentro de una cadena:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ <span class="nb">echo</span> <span class="s2">&#34;Hola </span><span class="nv">$name</span><span class="s2">! a las `date`&#34;</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>variables-2.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/variables_hu1324bce569120ddba446a5fc6e95a5ee_36485_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Interpolación en cadenas de variables y comandos"><img src="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/variables_hu1324bce569120ddba446a5fc6e95a5ee_36485_300x200_fit_box_3.png" width="300" height="193" alt="Interpolación en cadenas de variables y comandos" title="Interpolación en cadenas de variables y comandos"  class="lozad "></a></p>
<figcaption>Interpolación en cadenas de variables y comandos</figcaption>
</figure>
</div>
<h3 id="invocaciones-de-comandos-anteriores">Invocaciones de comandos anteriores</h3>
<p>Con el comando <code>history</code> podemos ver el historial completo de comandos que hemos ejecutado con anterioridad. Al lado de cada comando vemos un identificador numérico que podemos usar para ejecutarlo de nuevo con <code>![identificador]</code>. Con el siguiente historial podemos ejecutar el comando con identificador 512 indicando una exclamación y el identificador, <code>!512</code>. Si queremos ejecutar el último comando introducido podemos usar la doble exclamación <code>!!</code>. Si queremos ejecutar el último comando completo de cierto comando podemos usar <code>![comando]</code> en vez de su identificador.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/history_hudd076ba80f1bdd464ff3e6b38e8a63fc_62037_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Historial de comandos"><img src="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/history_hudd076ba80f1bdd464ff3e6b38e8a63fc_62037_300x200_fit_box_3.png" width="300" height="193" alt="Historial de comandos" title="Historial de comandos"  class="lozad "></a></p>
<figcaption>Historial de comandos</figcaption>
</figure>
</div>
<p>Hay más <a href="http://www.softpanorama.org/Scripting/Shellorama/bash_command_history_reuse.shtml">formas de ejecutar comandos del historial</a>. Si quisieramos invocar un comando del historial cambiando algún argumento podemos hacer una búsqueda en orden inverso con <kbd>Ctrl+r</kbd>.</p>
<h3 id="scripts">Scripts</h3>
<p>Los <em>scritps</em> son archivos de texto con permisos de ejecución interpretados por Bash u otro intérprete que ejecuta los comandos del <em>script</em>, es la forma de automatizar varios comandos. Al inicio de los <em>scripts</em> se suele incluir el <a href="https://es.wikipedia.org/wiki/Shebang">shebang</a> donde se indica el programa encargado de interpretar el <em>script</em>, puede ser Bash o un programa escrito en un lenguaje de programación como <a href="https://www.python.org/">Python</a>. Se puede indicar de varias formas pero las preferidas son las siguientes:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="cp">#!/usr/bin/env bash&#10;</span><span class="cp"></span><span class="c1">#!/usr/bin/env python</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>scripts-1.sh</span>
    </div>
</div>
<p>Una vez escrito el <em>script</em> antes de ejecutarlo debemos darle permisos de ejecución con el comando <code>chmod</code>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ chmod +x script.sh&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>scripts-2.sh</span>
    </div>
</div>
<h3 id="argumentos">Argumentos</h3>
<p>Al igual que los comandos pueden recibir opciones y argumentos los <em>scripts</em> también, hacer uso de ellos son mediante las siguientes variables:</p>
<ul>
<li>$0: contiene nombre del <em>script</em>.</li>
<li>$1: primer argumento, $2 segundo argumento, &hellip;</li>
<li>$#: número de argumentos al invocar el <em>script</em>.</li>
<li>$*: todos los argumentos al invocar el <em>script</em>.</li>
<li>$?: valor del estado de salida del último comando ejecutado. Normalmente se usa <em>0</em> para los comandos ejecutados correctamente y <em>1</em> para los que han terminado incorrectamente.</li>
</ul>
<h3 id="funciones-_for_-_switch_-_if_-comparaciones">Funciones, <em>for</em>, <em>switch</em>, <em>if</em>, comparaciones</h3>
<p>En los <em>scripts</em> Bash se pueden definir funciones para reutilizar parte del <em>script</em>. Pueden incluir argumentos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="k">function</span><span class="o">()</span> <span class="o">{</span>&#10;   <span class="nb">echo</span> <span class="s2">&#34;Hola </span><span class="nv">$1</span><span class="s2">!&#34;</span>&#10;<span class="o">}</span>&#10;&#10;<span class="k">function</span><span class="o">(</span><span class="s2">&#34;picodotdev&#34;</span><span class="o">)</span>&#10;&#10;Además los _scripts_ pueden incluir ciertas sentencias para controlar el flujo de ejecución del _script_ con expresiones condicionales, bucles y comparaciones.&#10;&#10;<span class="k">for</span> file in /etc/* <span class="k">do</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nb">echo</span> <span class="nv">$file</span>&#10;<span class="k">done</span>&#10;<span class="o">{{</span>% gist <span class="nv">id</span><span class="o">=</span><span class="s2">&#34;&#34;</span> <span class="nv">file</span><span class="o">=</span><span class="s2">&#34;&#34;</span> %<span class="o">}}</span>&#10;&#10;<span class="k">while</span> <span class="nb">getopts</span> <span class="s2">&#34;:df&#34;</span> opt<span class="p">;</span> <span class="k">do</span>&#10;  <span class="k">case</span> <span class="nv">$opt</span> in&#10;	d<span class="o">)</span>&#10;  	<span class="nb">echo</span> <span class="s2">&#34;Opción «d» indicada&#34;</span>&#10;  	<span class="p">;;</span>&#10;	f<span class="o">)</span>&#10;  	<span class="nb">echo</span> <span class="s2">&#34;Opción «f» indicada&#34;</span>&#10;  	<span class="p">;;</span>&#10;	<span class="se">\?</span><span class="o">)</span>&#10;  	<span class="nb">echo</span> <span class="s2">&#34;Opción inválida: -</span><span class="nv">$OPTARG</span><span class="s2">&#34;</span>&#10;  	<span class="p">;;</span>&#10;  <span class="k">esac</span>&#10;<span class="k">done</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>funciones-1.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/opciones_huc5bd046ba171874ce5c02dd19b2d7bdd_44239_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Opciones de un script"><img src="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/opciones_huc5bd046ba171874ce5c02dd19b2d7bdd_44239_300x200_fit_box_3.png" width="300" height="193" alt="Opciones de un script" title="Opciones de un script"  class="lozad "></a></p>
<figcaption>Opciones de un script</figcaption>
</figure>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="k">if</span> <span class="o">[</span> -f <span class="nv">$1</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>&#10;	<span class="nb">echo</span> <span class="s2">&#34;El archivo existe.&#34;</span>&#10;<span class="k">fi</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>funciones-2.sh</span>
    </div>
</div>
<p>Los <em>scripts</em> de Bash suelen manejar ficheros y disponemos de una buena cantidad de opciones para comparar:</p>
<ul>
<li>[ -a FILE ]: verdadero si el fichero existe.</li>
<li>[ -d FILE ]: verdadero si el fichero existe y es un directorio.</li>
<li>[ -e FILE ]: verdadero si el fichero existe.</li>
<li>[ -f FILE ]: verdadero si el fichero existe y es un fichero regular.</li>
<li>[ -h FILE ]: verdadero si el fichero existe y es un enlace simbólico.</li>
<li>[ -r FILE ]: verdadero si el fichero existe y se puede leer.</li>
<li>[ -s FILE ]: verdadero si el fichero existe y su tamaño es mayor que cero.</li>
<li>[ -w FILE ]: verdadero si el fichero existe y se puede escribir.</li>
<li>[ -x FILE ]: verdadero si el fichero existe y se puede ejecutar.</li>
<li>[ -N FILE ]: verdadero si el fichero existe y ha sido modificado desde la última lectura.</li>
<li>[ FILE1 -nt FILE2 ]: verdadero si <em>FILE1</em> ha sido modificado más recientemente que <em>FILE2</em> o si <em>FILE1</em> existe y <em>FILE2</em> no.</li>
<li>[ FILE1 -ot FILE2 ]: verdadero si <em>FILE2</em> ha sido modificado más recientemente que <em>FILE1</em> o si <em>FILE2</em> existe y <em>FILE1</em> no.</li>
<li>[ FILE1 -ef FILE2 ]: verdadero si <em>FILE1</em> y <em>FILE2</em> se refieren al mismo dispositivo y número de inodo.</li>
</ul>
<p>Y otros menos comunes:</p>
<ul>
<li>[ -S FILE ]: verdadero si el fichero existe y es un <em>socket</em>.</li>
<li>[ -b FILE ]: verdadero si el fichero existe y es un fichero especial de bloques.</li>
<li>[ -c FILE ]: verdadero si el fichero existe y es un fichero especial de caracteres.</li>
<li>[ -g FILE ]: verdadero si el fichero existe y su bit <em>SGID</em> está establecido.</li>
<li>[ -k FILE ]: verdadero si el fichero existe y su bit <em>sticky</em> está establecido.</li>
<li>[ -p FILE ]: verdadero si el fichero existe y es una tubería con nombre (FIFO).</li>
<li>[ -t FD ]: verdadero si el descriptor de fichero está abierto y refiere a una terminal.</li>
<li>[ -u FILE ]: verdadero si el fichero existe y su bit <em>SUID</em> está establecido.</li>
<li>[ -O FILE ]: verdadero si el fichero existe y el ID del usuario efectivo es su propietario.</li>
<li>[ -G FILE ]: verdadero si el fichero existe y el ID del grupo efectivo es su propietario.</li>
<li>[ -L FILE ]: verdadero si el fichero existe y es un enlace simbólico.</li>
</ul>
<p>Y algunos otros:</p>
<ul>
<li>[ -o OPTIONNAME ]: verdadero si la copión <em>OPTIONNAME</em> está activa.</li>
<li>[ -z STRING ]: verdadero si la longitud de <em>STRING</em> es cero.</li>
<li>[ -n STRING ] o [ STRING ]: verdadero si la longitud de <em>STRING</em> no es cero.</li>
<li>[ STRING1 == STRING2 ]: verdadero si las cadenas son iguales.</li>
<li>[ STRING1 != STRING2 ]: verdadero si las cadenas no son iguales.</li>
<li>[ STRING1 &lt; STRING2 ]: verdadero si léxicamente <em>STRING1</em> se ordena antes que <em>STRING2</em> en el <em>locale</em> actual.</li>
<li>[ STRING1 &gt; STRING2 ]: verdadero si léxicamente <em>STRING1</em> se ordena después que <em>STRING2</em> en el <em>locale</em> actual.</li>
<li>[ ARG1 OP ARG2 ]: donde <em>OP</em> es un operador de entre <em>-eq</em>, <em>-ne</em>, <em>-lt</em>, <em>-le</em>, <em>-gt</em> o <em>-ge</em>. Estas operaciones aritméticas binarias retornan verdadero si <em>ARG1</em> es igual a, no igual a, menor que, menor que o igual, mayor que o mayor que o igual que <em>ARG2</em>, respectivamente. <em>ARG1</em> y <em>ARG2</em> son valores enteros.</li>
</ul>
<p>Las expresiones anteriores se pueden combinar:</p>
<ul>
<li>[ ! EXPR ]: verdadero si <em>EXPR</em> es false.</li>
<li>[ ( EXPR ) ]: retorna el valor de <em>EXPR</em>, puede usarse para cambiar la precedencia de operadores.</li>
<li>[ EXPR1 -a EXPR2 ]: verdadero si ambas <em>EXPR1</em> y <em>EXPR2</em> son verdadero, operador <em>and</em>.</li>
<li>[ EXPR1 -o EXPR2 ]: verdadero si alguna de <em>EXPR1</em> y <em>EXPR2</em> son verdadero, operador <em>or</em>.</li>
</ul>
<h3 id="control-de-trabajos">Control de trabajos</h3>
<p>El comando <code>jobs</code> obtenemos una lista de trabajos que se está ejecutando junto con su identificador y estado, con la combinación de teclas <kbd>Ctrl+z</kbd> dejamos el proceso actual detenido y en segundo plano, con <code>fg</code> lo devolvemos a primer plano y si estaba detenido se continua su ejecución, con <code>bg</code> si estaba detenido continua su ejecución en segundo plano.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/trabajos_hu237159f04275eed2c9a1df42001006ea_76447_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Trabajos en primer y segundo plano"><img src="https://picodotdev.github.io/blog-bitix/2016/07/guia-basica-del-interprete-de-comandos-bash/images/trabajos_hu237159f04275eed2c9a1df42001006ea_76447_300x200_fit_box_3.png" width="289" height="200" alt="Trabajos en primer y segundo plano" title="Trabajos en primer y segundo plano"  class="lozad "></a></p>
<figcaption>Trabajos en primer y segundo plano</figcaption>
</figure>
</div>
<p>Esta guía es parte de un tema de los explicados en el completo libro sobre la administración sobre sistemas Unix, <a href="https://amzn.to/29vctVP">UNIX and Linux System Administration Handbook</a>. Un libro con cantidad de temas para conocer más en detalle nuestros sistemas basados en la filosofía Unix. Casi 1300 páginas de documentación con información básica y detallada que deberíamos obligarnos a conocer. Redes, seguridad, virtualización, hospedaje web, copias de seguridad, procesos periódicos, instalación de software, control de procesos y muchos temas más. Otros buenos documentos son <a href="http://www.tldp.org/LDP/abs/html/index.html">Advanced Bash-Scripting Guide</a> y
el siguiente <a href="http://bash.cyberciti.biz/guide/Main_Page">manual de Bash</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0131480057&amp;linkId=28302f39b86c5d07ee3db2bc5752c2ed&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="http://www.howtogeek.com/howto/44997/how-to-use-bash-history-to-improve-your-command-line-productivity/">How To Use Bash History to Improve Your Command-Line Productivity</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    
</feed>