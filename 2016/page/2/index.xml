<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text">Blog Bitix</title>
    <subtitle type="text">Blog sobre al lenguaje de programación Java y la distribución GNU/Linux que uso habitualmente, Arch Linux, lo que aprendo sobre el software libre, la programación web y otros temas relacionados con la tecnología y la informática. El contenido puede contener trazas de asuntos fuera de tema.</subtitle>
    <link rel="self" href="https://picodotdev.github.io/blog-bitix/index.xml"/>
    <link href="https://picodotdev.github.io/blog-bitix/" />
    <id>https://picodotdev.github.io/blog-bitix/2016/</id>
    <updated>2016-12-24T12:00:00+01:00</updated>
    <author><name>picodotdev</name></author>
    <generator>Hugo</generator>
    <icon>https://picodotdev.github.io/blog-bitix/assets/favicon.ico</icon>
    <logo>https://picodotdev.github.io/blog-bitix/assets/images/blog-bitix.svg</logo>
    <rights>https://creativecommons.org/licenses/by-sa/4.0/</rights>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/</id>
        <title>Componente select de Apache Tapestry con funcionalidades adicionales usando bootstrap-select</title>
        <updated>2016-10-25T12:30:00+02:00</updated>
        <published>2016-10-15T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apache-tapestry-icon-light.svg" width="250" height="250" alt="Apache Tapestry" title="Apache Tapestry"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El selector de opciones implementado en los navegadores es muy simple pudiendo seleccionar un elemento de una lista, mostrar los elementos agrupados por categorías o seleccionar múltiples elementos pero mostrándolos en formato de una lista en vez de como un desplegable. <a href="https://silviomoreto.github.io/bootstrap-select/">bootstrap-select</a> es una librería que utiliza los estilos de <a href="https://getbootstrap.com/">Bootstrap</a> y que añade algunas funcionalidades más a los componentes de selección de opciones de los formularios de una página web.</p>
<p>Algunas de estas funcionalidades adicionales está explicadas más detalladamente en los <a href="https://silviomoreto.github.io/bootstrap-select/examples/">ejemplos</a>, que son:</p>
<ul>
<li>Cuadro de búsqueda</li>
<li>Búsqueda por palabras clave</li>
<li>Limitar el número de opciones seleccionables</li>
<li>Texto personalizado de opción no seleccionada</li>
<li>Texto personalizado de opción seleccionada (distinto al texto de la opción)</li>
<li>Texto de opciones seleccionadas personalizado</li>
<li>Estilos personalizados</li>
<li>Marca en la opción seleccionada</li>
<li>Flecha hacia el campo del formulario en el desplegable</li>
<li>Estilos  personalizados en opciones individuales</li>
<li>Anchuras personalizables</li>
<li>Iconos en las opciones</li>
<li>Contenido personalizado en las opciones</li>
<li>Subtextos</li>
<li>Tamaño de menú personalizado</li>
<li>Opciones de selección y deselección</li>
<li>Divisores</li>
<li>Cabecera</li>
<li>Posición desplegable</li>
<li>Deshabilitar <em>select</em>, opción o grupo de opciones</li>
</ul>
<p>Todas estas capacidades de personalización se consiguen bien añadiendo atributos a las etiquetas <abbr title="HyperText Markup Language">HTML</abbr> <em>select</em> o a las etiquetas <em>option</em> y <em>optgroup</em> con lo que usar el componente <em>bootstrap-select</em> consiste básicamente generar el marcado HTML adecuado. Con JavaScript se puede construir el componente donde podemos indicar las mismas <a href="https://silviomoreto.github.io/bootstrap-select/options/">opciones adicionales</a> que con los atributos <em>data-</em>, también tiene <a href="https://silviomoreto.github.io/bootstrap-select/methods/">métodos</a> para manipular su comportamiento de forma programática como por ejemplo recibir eventos cuando cambia la selección.</p>
<p>Usando <a href="https://tapestry.apache.org/">Apache Tapestry</a> con su concepto de parámetros informales añadiremos las atributos necesarios en la etiqueta <em>select</em> y con el modelo de datos proporcionado en <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/SelectModel.html">SelectModel</a>, <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/OptionGroupModel.html">OptionGroupModel</a> y <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/OptionModel.html">OptionModel</a> podremos proporcionar los atributos adicionales para las etiquetas de los <em>option</em> y <em>optgroup</em>. El modelo de datos de una etiqueta <em>select</em> es una lista de opciones y grupos de opciones, cada opción tiene una etiqueta que se le mostrará al usuario, si está habilitada o no, el valor que se enviará al servidor cuando esté seleccionada y un mapa de atributos a añadir en la etiqueta de la opción.</p>
<p>Este sería el código para crear una instancia de <em>SelectModel</em> para un componente <a href="https://tapestry.apache.org/current/apidocs/org/apache/tapestry5/corelib/components/Select.html">Select</a> de Tapestry para un ficticio selector de país. En el ejemplo en vez de usar un mapa vacío con <em>Collections.EMPTY_MAP</em> se podría sustituir por un mapa con atributos que se añadirían a la opción para usar alguna otra funcionalidad de <em>bootstrap-select</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.pages</span><span class="o">;</span>&#10;<span class="o">...</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Index</span> <span class="o">{</span>&#10;&#10;  <span class="o">...</span>  &#10;  <span class="nd">@Property</span>&#10;  <span class="nd">@Persist</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="n">PersistenceConstants</span><span class="o">.</span><span class="na">FLASH</span><span class="o">)</span>&#10;  <span class="kd">private</span> <span class="n">String</span> <span class="n">pais</span><span class="o">;</span>	&#10;  <span class="o">...</span>&#10;  <span class="nd">@Environmental</span>&#10;  <span class="kd">private</span> <span class="n">JavaScriptSupport</span> <span class="n">javascriptSupport</span><span class="o">;</span>&#10;  <span class="o">...</span>&#10;  <span class="kt">void</span> <span class="nf">afterRender</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">javascriptSupport</span><span class="o">.</span><span class="na">require</span><span class="o">(</span><span class="s">&#34;app/index&#34;</span><span class="o">).</span><span class="na">invoke</span><span class="o">(</span><span class="s">&#34;init&#34;</span><span class="o">);</span>&#10;  <span class="o">}</span>&#10;  <span class="o">...</span>&#10;&#10;  <span class="kd">public</span> <span class="n">SelectModel</span> <span class="nf">getPaisesSelectModel</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">AbstractSelectModel</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionGroupModel</span><span class="o">&gt;</span> <span class="nf">getOptionGroups</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">espana</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;España&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;espana&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">francia</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Francia&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;francia&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">alemania</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Alemania&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;alemania&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">eeuu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;EEUU&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;eeuu&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">mexico</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Mexico&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;mexico&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">argentina</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Argentina&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;argentina&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">china</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;China&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;china&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">japon</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;Japón&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="s">&#34;japon&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionModel</span> <span class="n">india</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionModel</span><span class="o">(</span><span class="s">&#34;India&#34;</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="s">&#34;india&#34;</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">europa</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;Europa&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">espana</span><span class="o">,</span> <span class="n">francia</span><span class="o">,</span> <span class="n">alemania</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">america</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;America&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">eeuu</span><span class="o">,</span> <span class="n">mexico</span><span class="o">,</span> <span class="n">argentina</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">OptionGroupModel</span> <span class="n">asia</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AppOptionGroupModel</span><span class="o">(</span><span class="s">&#34;Asia&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">EMPTY_MAP</span><span class="o">,</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">china</span><span class="o">,</span> <span class="n">japon</span><span class="o">,</span> <span class="n">india</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">europa</span><span class="o">,</span> <span class="n">america</span><span class="o">,</span> <span class="n">asia</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="nf">getOptions</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;  <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">};</span>&#10;  <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html">...&#10;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-group&#34;</span><span class="p">&gt;</span>&#10;  <span class="p">&lt;</span><span class="nt">t:select</span> <span class="na">value</span><span class="o">=</span><span class="s">&#34;pais&#34;</span> <span class="na">model</span><span class="o">=</span><span class="s">&#34;paisesSelectModel&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;selectpicker&#34;</span> <span class="na">data-size</span><span class="o">=</span><span class="s">&#34;6&#34;</span> <span class="na">data-none-selected-text</span><span class="o">=</span><span class="s">&#34;Nada seleccionado&#34;</span><span class="p">/&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;...&#10;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;form-group&#34;</span><span class="p">&gt;</span>&#10;  ...&#10;  País seleccionado: ${pais}&#10;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;...</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.misc</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.OptionGroupModel</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.OptionModel</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppOptionGroupModel</span> <span class="kd">implements</span> <span class="n">OptionGroupModel</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">label</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">disabled</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AppOptionGroupModel</span><span class="o">(</span><span class="n">String</span> <span class="n">label</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">disabled</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">label</span> <span class="o">=</span> <span class="n">label</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">disabled</span> <span class="o">=</span> <span class="n">disabled</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">attributes</span> <span class="o">=</span> <span class="n">attributes</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">options</span> <span class="o">=</span> <span class="n">options</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getLabel</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">label</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isDisabled</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">disabled</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="nf">getAttributes</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">attributes</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">OptionModel</span><span class="o">&gt;</span> <span class="nf">getOptions</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">options</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppOptionGroupModel.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.plugintapestry.misc</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.OptionModel</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppOptionModel</span> <span class="kd">implements</span> <span class="n">OptionModel</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">label</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">disabled</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Object</span> <span class="n">value</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AppOptionModel</span><span class="o">(</span><span class="n">String</span> <span class="n">label</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">disabled</span><span class="o">,</span> <span class="n">Object</span> <span class="n">value</span><span class="o">,</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">attributes</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">label</span> <span class="o">=</span> <span class="n">label</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">disabled</span> <span class="o">=</span> <span class="n">disabled</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">attributes</span> <span class="o">=</span> <span class="n">attributes</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getLabel</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">label</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isDisabled</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">disabled</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="nf">getAttributes</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">attributes</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Object</span> <span class="nf">getValue</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">value</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppOptionModel.java</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/images/select-1_huea54e05f9d5753b922b38d6939c0cdbc_15559_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Componente selector con bootstrap-select"><img src="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/images/select-1_huea54e05f9d5753b922b38d6939c0cdbc_15559_300x200_fit_box_3.png" width="300" height="186" alt="Componente selector con bootstrap-select" title="Componente selector con bootstrap-select"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/images/select-2_hu2f5e5c7660717b7773a03dbd729e0045_20170_2560x1440_fit_box_3.png" data-gallery="data-gallery"><img src="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-de-apache-tapestry-con-funcionalidades-adicionales-usando-bootstrap-select/images/select-2_hu2f5e5c7660717b7773a03dbd729e0045_20170_300x200_fit_box_3.png" width="300" height="186"  class="lozad "></a></p>
<figcaption>Componente selector con bootstrap-select</figcaption>
</figure>
</div>
<p>Al ser enviado el formulario que contiene el <em>select</em> el valor seleccionado los tendremos en la propiedad que hayamos indicado en el parámetro <em>value</em> del componente <em>Select</em>, este caso en la propiedad <em>pais</em> de la clase <em>Index</em> que representa la página.</p>
<p>En la clase <em>PlugInStack</em> hay que especificar los recursos CSS y de JavaScript necesarios para usar <em>bootstrap-select</em>, además de inicializar los selectores con JavaScript.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PlugInStack</span> <span class="kd">implements</span> <span class="n">JavaScriptStack</span> <span class="o">{</span>&#10;&#10;  <span class="o">...</span>&#10;&#10;  <span class="nd">@Override</span>&#10;  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Asset</span><span class="o">&gt;</span> <span class="nf">getJavaScriptLibraries</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">Asset</span><span class="o">&gt;</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">assetSource</span><span class="o">.</span><span class="na">getClasspathAsset</span><span class="o">(</span><span class="s">&#34;META-INF/assets/tapestry5/bootstrap/js/dropdown.js&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">UrlAsset</span><span class="o">(</span><span class="s">&#34;https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.11.2/js/bootstrap-select.min.js&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">r</span><span class="o">;</span>&#10;  <span class="o">}</span>&#10;	&#10;  <span class="o">...</span>&#10;&#10;  <span class="nd">@Override</span>&#10;  <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">StylesheetLink</span><span class="o">&gt;</span> <span class="nf">getStylesheets</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">StylesheetLink</span><span class="o">&gt;</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">StylesheetLink</span><span class="o">(</span><span class="s">&#34;https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.11.2/css/bootstrap-select.min.css&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">r</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">StylesheetLink</span><span class="o">(</span><span class="n">assetSource</span><span class="o">.</span><span class="na">getContextAsset</span><span class="o">(</span><span class="s">&#34;css/app.css&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">)));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">r</span><span class="o">;</span>&#10;  <span class="o">}</span>&#10;&#10;  <span class="o">...</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>PlugInStack.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="nx">define</span><span class="p">(</span><span class="s2">&#34;app/index&#34;</span><span class="p">,</span> <span class="p">[</span><span class="s2">&#34;jquery&#34;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">{</span>&#10;  <span class="kd">function</span> <span class="nx">init</span><span class="p">(</span><span class="nx">spec</span><span class="p">)</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.selectpicker&#39;</span><span class="p">).</span><span class="nx">selectpicker</span><span class="p">();</span>&#10;  <span class="p">}</span>&#10;&#10;  <span class="k">return</span> <span class="p">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nx">init</span><span class="o">:</span> <span class="nx">init</span>&#10;  <span class="p">}</span>&#10;<span class="p">});</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>index.js</span>
    </div>
</div>
<p>En el artículo <a href="https://picodotdev.github.io/blog-bitix/2016/10/componente-select-multiple-en-apache-tapestry/">Componente select múltiple en Apache Tapestry</a> explico como crear un <em>select</em> múltiple que por defecto no incluye Tapestry pero el estándar HTML soporta y en algún caso nos será necesario y en <a href="https://picodotdev.github.io/blog-bitix/2016/10/anadir-botones-selectores-de-opciones-a-select-multiple-de-bootstrap-select/">añadir botones selectores de opciones</a> como incluir selectores adicionales además de Todos y Ninguno.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://silviomoreto.github.io/bootstrap-select/">Bootstrap Select</a></li>
<li><a href="https://silviomoreto.github.io/bootstrap-select/examples/">Bootstrap Select Examples</a></li>
<li><a href="https://silviomoreto.github.io/bootstrap-select/methods/">Bootstrap Select Methods</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="javascript"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="tapestry"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/</id>
        <title>Sobre el rápido avance de la tecnología</title>
        <updated>2016-10-14T22:00:00+02:00</updated>
        <published>2016-10-12T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/sobre-el-rapido-avance-de-la-tecnologia/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>La tecnología en un periodo tan corto como un año avanza significativamente, una buena decisión es comprar un producto cuando realmente lo necesitemos o suponga una mejora notable en las posibilidades que nos ofrece respecto a lo que ya poseemos.</strong></p>]]>
        <![CDATA[<p>El mundo de la tecnología avanza muy rápido, las mejoras son constantes y en el tiempo de pocos meses o un año los dispositivos son notablemente más capaces generalmente manteniendo o incluso a un pequeño menor precio. Los procesadores, las tarjetas gráficas, la cantidad de memoria RAM, la capacidad de los discos duros, los discos de estado sólido es raro que cada año no tengan nuevas generaciones que prometen más rendimiento en los ordenadores personales. Más recientemente los teléfonos inteligentes con una cantidad de memoria RAM mayor que no hace tanto tenían los ordenadores personales, quizá en no mucho tiempo puedan sustituir en muchas tareas para la mayoría de usuarios a los PC con <a href="https://picodotdev.github.io/blog-bitix/2016/06/la-siguiente-disrupcion-tecnologica-la-convergencia/">la convergencia que baticino será la siguiente disrupción tecnológica</a>, los televisores con capacidad de obtener contenidos de internet y que próximamente veremos con una resolución 4K y en un futuro con 8K cuando aún algunas cadenas de televisión no emiten aún ni en verdadera resolución 1080p, el ancho de banda de internet que aún no se quien puede necesitar 300 Mbps simétricos en el hogar pero que ya se ofrecen, &hellip;</p>
<p>Mucha gente cambia de <em>smartphone</em> pagando un precio considerable entre los 600 y 800 € en la gama alta en el plazo de un año para tener la última edición aún cuando el que tienen les puede servir perfectamente. Muchas empresas dan soporte a sus productos durante muy poco tiempo con lo que impide a sus usuarios instalar las últimas versiones de software como es el caso de <a href="https://www.android.com/">Android</a> y su conocida fragmentación dado que incluso los teléfonos con el sello de <a href="https://www.google.es/">Google</a> en dos años dejan de tener actualizaciones o en el caso de los controladores en el caso del sistema operativo <a href="https://www.microsoft.com/es-es/windows/">Windows</a> que no todos funcionan en las nuevas versiones y cierto hardware queda abandonado. Los productos se quedan obsoletos aún cuando siguen siendo perfectamente capaces y aún no siendo lo último siguen siendo útiles. Otro ejemplo se da en los juegos donde muchos de los nuevos títulos tiene unos requisitos que para jugarlos a una calidad gráfica notable requieren de una de las tarjetas gráficas de última generación, penúltima o poco más.</p>
<p>Lo anterior junto con la enorme cantidad de información o publicidad incitando a comprar hacen que muchas personas gasten su dinero en los nuevos productos. Las empresas de tecnología necesitan que los consumidores compren sus productos, en un exceso de consumismo, que en un periodo de meses o menos de un año quedan superados por nuevos productos más mejores y los predecesores se devalúan al mismo tiempo y así se continua este ciclo vicioso. Al menos en cuanto tecnología considero que hay que comprar algo cuando realmente nos vaya a ser útil ni antes ni mucho más tarde resistiendo el bombardeo de publicidad e información que incita a adquirir la innecesaria cara última novedad, cuando hagamos la compra el producto nos saldrá más barato o será más capaz. Esto tampoco significa que estemos constantemente esperando a un nuevo producto ya que en muchos acaba de salir una novedad y ya se está hablando de su sucesora a un año vista prometiendo mejoras.</p>
<p>Hoy en día hay personas que siguen divirtiéndose con sus consolas de varias décadas o con <a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/">emuladores y juegos míticos</a> que en cuanto a jugabilidad y ratos entretenidos no tienen nada que envidiar a algunos de los títulos y consolas actuales. También hay personas que con equipos antiguos o limitados como una <a href="https://www.raspberrypi.org/">Raspberry Pi</a> y sus conocimientos son capaces de realizar proyectos interesantes.</p>
<p>Tener lo último en tecnología es efímero, nada que no sepa alguien con cierta edad, además de innecesario, exprime la mayor utilidad de lo que tengas, compra solo cuando sea necesario o la mejora sea realmente notable y no por capricho.</p>
]]>
        </content>
        
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/</id>
        <title>Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot</title>
        <updated>2016-10-08T00:30:00+02:00</updated>
        <published>2016-10-07T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>OAuth es un protocolo usado para permitir a una aplicación acceder a los recursos de un usuario sin que este proporcione a la aplicación cliente sus credenciales y manteniendo el control de revocar los permisos concedidos. Es ampliamente usado por los servicios de redes sociales de las empresas más conocidas, también lo podemos usar en nuestras aplicaciones. En el ejemplo usaré Keycloak y una aplicación Java con Spring Boot, Apache Shiro y Apache Tapestry.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/keycloak.png" width="200" height="45" alt="Keycloak" title="Keycloak"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>El protocolo <a href="https://oauth.net/">OAuth</a> permite a una aplicación cliente acceder a los recursos de un usuario almacenados en otra aplicación sin que el usuario proporcione a la aplicación cliente sus credenciales, además el usuario tiene la capacidad de revocar en caulquier momento los permisos concedidos a la aplicación cliente. El protocolo OAuth es ampliamente usado por empresas como <a href="https://www.google.es/">Google</a>, <a href="https://www.facebook.com/">Facebook</a>, <a href="https://twitter.com/">Twitter</a> en sus aplicaciones y servicios. También aplicando una arquitectura de microservicios, al dividir una aplicación en varios módulos o simplemente varias aplicaciones independientes pero que son usadas al mismo tiempo por el mismo usuario para evitar que el usuario se autentique en cada aplicación individualmente y que cada aplicación implemente la funcionalidad de autenticación podemos centralizarla usando OAuth a modo de autenticación única o <a href="https://es.wikipedia.org/wiki/Single_Sign-On"><abbr title="Single Sign-On">SSO</abbr></a>. Usando <a href="https://www.keycloak.org/">Keycloak</a> como servidor de OAuth podemos integrarlo en una aplicación Java que use <a href="https://shiro.apache.org/">Apache Shiro</a> para la autorización, <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> para iniciar la aplicación y <a href="https://tapestry.apache.org/">Apache Tapestry</a> como <em>framework</em> web.</p>
<p>En el protocolo OAuth se diferencia las aplicaciones cliente que son capaces de mantener seguras sus credenciales como es el caso de una aplicación web ejecutada en el servidor o las aplicaciones que no son capaces de mantener sus credenciales seguras como es el caso de una aplicación cliente ejecutada en el navegador o en algunos casos nativa en el móvil. Independientemente de la aplicación cliente o de los <a href="https://tools.ietf.org/html/rfc6749#page-8">varios flujos de autenticación</a> el acceso a los recursos del usuario se hace mediante la obtención de un <em>token</em> que es una cadena de caracteres opaca de cierta longitud pero que descifrada contiene información del usuario autenticado también está firmada digitalmente por el servidor de OAuth para evitar alteraciones. El protocolo define varios flujos para obtener un <em>token</em>, obtenido el <em>token</em> con cualquiera de ellos el acceso a los recursos es indiferente del flujo que haya sido empleado.</p>
<p>En una aplicación segura con el <em>grant</em> de tipo <em>authorization code</em> los pasos que se siguen son los siguientes:</p>
<ul>
<li>El servidor redirige al usuario al servidor de OAuth cuando intenta acceder a una URL protegida.</li>
<li>El usuario introduce sus credenciales en una página de inicio de sesión proporcionada por el servidor OAuth, normalmente un usuario y contraseña.</li>
<li>El servidor OAuth envía al navegador una redirección hacia la aplicación proporcionado un código de autorización en la URL que puede intercambiarse por un <em>token</em>.</li>
<li>El navegador con la redirección envía el código de autorización al servidor, el servidor obtiene de la URL, obtiene el código de autorización y lo usa para intercambiarlo por un <em>token</em> del servidor OAuth proporcionado además las credenciales del cliente.</li>
<li>Obtenido el <em>token</em> con los permisos adecuados la aplicación ya puede permitir acceso o acceder a los recursos.</li>
</ul>
<p>Para obtener el <em>token</em> el servidor mantiene seguras sus credenciales como cliente OAuth. Nótese también que con el <em>token</em> el servidor (cliente OAuth) no necesita comunicarse con el servidor OAuth para validar el <em>token</em> ya que está firmado digitalmente, cifrado y tiene concedido un periodo de validez.</p>
<p>Un cliente se considera inseguro si la aplicación cliente no puede mantener seguras sus credenciales, si las credenciales de la aplicación están en el navegador o en una aplicación nativa del móvil se considera que las credenciales podrían obtenerse. En una aplicación web en un servidor las credenciales de la aplicación se mantienen seguras en el servidor.</p>
<p>El siguiente ejemplo muestra como autenticar con Keycloak como proveedor de OAuth una aplicación Java que usa Shiro para la autorización, Spring Boot y el <em>framework</em> web Apache Tapestry. OAuth y Keycloak también puede usarse para <a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">securizar con OAuth un servicio REST con JAX-RS</a> y crear un <a href="https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth2-en-java/">cliente Java para acceder al servicio REST securizado con OAuth</a> empleando el flujo <em>client credentials</em>. Lo mostrado en este artículo solo es una pequeña parte de las opciones y posibilidades que ofrece Keycloak, en las capturas de pantalla mostradas hay muchas pestañas, opciones y campos con funcionalidades adicionales.</p>
<p>Iniciar el servidor OAuth de Keycloak usando <a href="https://www.docker.com/">Docker</a> es muy sencillo con el siguiente comando y archivo de <a href="https://docs.docker.com/compose/">Docker Compose</a>, en el primer acceso se nos solicitará una clave y contraseña de administración:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">keycloak</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">jboss/keycloak</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="m">9080</span><span class="p">:</span><span class="m">8080</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">KEYCLOAK_USER=admin</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">KEYCLOAK_PASSWORD=admin</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker-compose up&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.sh</span>
    </div>
</div>
<p>Para el ejemplo crearé un nuevo <em>realm</em> que contendrá los usuarios y en el que registraremos la aplicación cliente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-realm_hu1d1fec568cafaf0c4a23e9f295b30ecc_70773_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Keycloak realm"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-realm_hu1d1fec568cafaf0c4a23e9f295b30ecc_70773_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak realm" title="Keycloak realm"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-client_hud33412f067151d1d2f67a878d1fb164c_79720_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Keycloak client"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-client_hud33412f067151d1d2f67a878d1fb164c_79720_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak client" title="Keycloak client"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-client-roles_hud33412f067151d1d2f67a878d1fb164c_77167_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Keycloak client roles"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-client-roles_hud33412f067151d1d2f67a878d1fb164c_77167_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak client roles" title="Keycloak client roles"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-roles_huc42e6e2008d8cf33b44a24ca8766c23a_73652_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Keycloak roles"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-roles_huc42e6e2008d8cf33b44a24ca8766c23a_73652_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak roles" title="Keycloak roles"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-users_hu5d853bad32b06a2ad31bca8dfab4cf2c_65165_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Keycloak users"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-users_hu5d853bad32b06a2ad31bca8dfab4cf2c_65165_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak users" title="Keycloak users"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-users-role-mappings_hu0a5c44eb141b4ccfc2088e9012d1f722_85070_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Keycloak users role mappings"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/keycloak-users-role-mappings_hu0a5c44eb141b4ccfc2088e9012d1f722_85070_300x200_fit_box_3.png" width="300" height="173" alt="Keycloak users role mappings" title="Keycloak users role mappings"  class="lozad "></a></p>
</figure>
</div>
<p>Usando uno de los <a href="https://keycloak.gitbooks.io/securing-client-applications-guide/content/v/2.2/topics/overview/supported-platforms.html">adaptadores proporcionados por Keycloak</a> para la integración en servidores y aplicaciones su uso no es complicado, en este caso usaré el adaptador para Spring Boot. Usándolo básicamente deberemos proporcionar en la configuración las credenciales de la aplicación cliente que hemos registrado previamente en Keycloak. Además indicaremos que URLs de la aplicación requiere autenticación y que roles han de poseer los usuarios autenticados. Al acceder a estas URLs el adaptador de Keycloak redirigirá al servidor para que el usuario se autentique, una vez autenticado se redirigirá a la aplicación de nuevo.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8443</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ssl</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-store</span><span class="p">:</span><span class="w"> </span><span class="l">classpath:keystore.jks</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-store-password</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-password</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">management</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8090</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">context-path</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;/management&#39;</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&#10;</span><span class="w"></span><span class="nt">endpoints</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">metrics</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">sensitive</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">shutdown</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">enabled</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">keycloak</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">realm</span><span class="p">:</span><span class="w"> </span><span class="l">keycloak</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">realmKey</span><span class="p">:</span><span class="w"> </span><span class="l">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArx9/6b9koplCBta5vy0/GEYVUYaYSUcHIiTyE2utfSUlfL8Px//0haNgk5FFfeTuSa/Ha2mO+kP5qTBN5Muov+1ytONrkbGOSCkOH9rVRjsZfpdW3Z+wYdZ8tAiEzUcjbCYxPszgT00Pxr/NJ6nLJoPT5s+8osl4c2j0JyR2qYV9e7loeJs2ciJe/ZzHNptz4JrExhzxTJGjo6ZNuBtIfyoK6EFA4VKzj2152FrQSYIafOmTBM/42cyd2kyxx04TogCZYzj7Pe78aT6uxPoGsk8PK1YkAtINROJVqJZsLTsso2kB9R8UkjF1MEYHPrdoXVveeLv/1Ci6uWNbgDMCywIDAQAB</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">auth-server-url</span><span class="p">:</span><span class="w"> </span><span class="l">http://localhost:9080/auth</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ssl-required</span><span class="p">:</span><span class="w"> </span><span class="l">external</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">resource</span><span class="p">:</span><span class="w"> </span><span class="l">web</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">credentials.secret</span><span class="p">:</span><span class="w"> </span><span class="l">6db55aa0-5466-4432-aca7-97c2ab2246ee</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">use-resource-role-mappings</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">securityConstraints[0]</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">securityCollections[0]</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">user</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">authRoles</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">user</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">patterns</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/user</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">securityConstraints[1]</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">securityCollections[0]</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">admin</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">authRoles</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">admin</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">patterns</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">/admin</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application.yml</span>
    </div>
</div>
<p>Autenticado el usuario podemos obtener la instancia de <a href="https://www.keycloak.org/docs/javadocs/org/keycloak/representations/AccessToken.html">AccessToken</a> que representa el <em>token</em> de OAuth, para la autorización podemos usar Apache Shiro y para ellos deberemos implementar un Realm de tipo <a href="https://shiro.apache.org/static/1.3.2/apidocs/org/apache/shiro/realm/AuthorizingRealm.html">AuthorizingRealm</a>. Tiene dos métodos que deberemos implementar <a href="https://shiro.apache.org/static/1.3.2/apidocs/org/apache/shiro/realm/AuthenticatingRealm.html#doGetAuthenticationInfo-org.apache.shiro.authc.AuthenticationToken-">doGetAuthenticationInfo</a> y <a href="https://shiro.apache.org/static/1.3.2/apidocs/org/apache/shiro/realm/AuthorizingRealm.html#doGetAuthorizationInfo-org.apache.shiro.subject.PrincipalCollection-">doGetAuthorizationInfo</a>, el primero lo usaremos para autenticar al usuario que en este caso teniendo el <em>AccessToken</em> ya estará autenticado con Keycloak y el segundo método nos permitirá obtener los roles y permisos asociados al usuario que podríamos obtenerlos de una base de datos relacional, en el ejemplo los roles también se obtienen del token. Con un filtro realizaremos el inicio de sesión de forma programática del usuario representado por el <em>AccessToken</em> cuando esté presente en la petición.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.services</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.SecurityUtils</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.HttpServletRequestFilter</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.tapestry5.services.HttpServletRequestHandler</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.keycloak.KeycloakPrincipal</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.keycloak.representations.AccessToken</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.tynamo.security.federatedaccounts.oauth.tokens.OauthAccessToken</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">KeycloakFilter</span> <span class="kd">implements</span> <span class="n">HttpServletRequestFilter</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">service</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">,</span> <span class="n">HttpServletRequestHandler</span> <span class="n">handler</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AccessToken</span> <span class="n">accessToken</span> <span class="o">=</span> <span class="n">getAccessToken</span><span class="o">(</span><span class="n">request</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(</span><span class="n">accessToken</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">SecurityUtils</span><span class="o">.</span><span class="na">getSubject</span><span class="o">().</span><span class="na">login</span><span class="o">(</span><span class="k">new</span> <span class="n">OauthAccessToken</span><span class="o">(</span><span class="n">accessToken</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">.</span><span class="na">getExpiration</span><span class="o">()));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">handler</span><span class="o">.</span><span class="na">service</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="n">response</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">AccessToken</span> <span class="nf">getAccessToken</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">if</span> <span class="o">(!(</span><span class="n">request</span><span class="o">.</span><span class="na">getUserPrincipal</span><span class="o">()</span> <span class="k">instanceof</span> <span class="n">KeycloakPrincipal</span><span class="o">))</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">KeycloakPrincipal</span> <span class="n">principal</span> <span class="o">=</span> <span class="o">(</span><span class="n">KeycloakPrincipal</span><span class="o">)</span> <span class="n">request</span><span class="o">.</span><span class="na">getUserPrincipal</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">principal</span><span class="o">.</span><span class="na">getKeycloakSecurityContext</span><span class="o">().</span><span class="na">getToken</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>KeycloakFilter.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.services</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.authc.AuthenticationException</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.authc.AuthenticationInfo</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.authc.AuthenticationToken</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.authc.SimpleAuthenticationInfo</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.authz.AuthorizationInfo</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.authz.SimpleAuthorizationInfo</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.cache.MemoryConstrainedCacheManager</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.realm.AuthorizingRealm</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.subject.PrincipalCollection</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.keycloak.representations.AccessToken</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.tynamo.security.federatedaccounts.oauth.tokens.OauthAccessToken</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AppRealm</span> <span class="kd">extends</span> <span class="n">AuthorizingRealm</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">AppRealm</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">super</span><span class="o">(</span><span class="k">new</span> <span class="n">MemoryConstrainedCacheManager</span><span class="o">());</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">setAuthenticationTokenClass</span><span class="o">(</span><span class="n">OauthAccessToken</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="n">AuthenticationInfo</span> <span class="nf">doGetAuthenticationInfo</span><span class="o">(</span><span class="n">AuthenticationToken</span> <span class="n">authenticationToken</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">AuthenticationException</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AccessToken</span> <span class="n">accessToken</span> <span class="o">=</span> <span class="o">(</span><span class="n">AccessToken</span><span class="o">)</span> <span class="n">authenticationToken</span><span class="o">.</span><span class="na">getPrincipal</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">SimpleAuthenticationInfo</span><span class="o">(</span><span class="n">accessToken</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">protected</span> <span class="n">AuthorizationInfo</span> <span class="nf">doGetAuthorizationInfo</span><span class="o">(</span><span class="n">PrincipalCollection</span> <span class="n">principalCollection</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">AccessToken</span> <span class="n">accessToken</span> <span class="o">=</span> <span class="o">(</span><span class="n">AccessToken</span><span class="o">)</span> <span class="n">principalCollection</span><span class="o">.</span><span class="na">getPrimaryPrincipal</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">SimpleAuthorizationInfo</span><span class="o">(</span><span class="n">accessToken</span><span class="o">.</span><span class="na">getRealmAccess</span><span class="o">().</span><span class="na">getRoles</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>AppRealm.java</span>
    </div>
</div>
<p>Con Apache Tapestry el filtro se registra en el módulo de la aplicación y con Shiro podemos realizar la autorización necesaria en las páginas u acciones de la aplicación usando anotaciones. En este caso una página pública que no requiere estar autenticado, una página accesible por un usuario autenticado y con rol <em>user</em> y finalmente una página de administración que requiere rol <em>admin</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.pages</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Index</span> <span class="o">{</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.pages</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.authz.annotation.RequiresUser</span><span class="o">;</span>&#10;&#10;<span class="nd">@RequiresUser</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>User.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.keycloak.pages</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.shiro.authz.annotation.RequiresRoles</span><span class="o">;</span>&#10;&#10;<span class="nd">@RequiresRoles</span><span class="o">(</span><span class="s">&#34;admin&#34;</span><span class="o">)</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Admin</span> <span class="o">{</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Admin.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>OAuth, Keycloak, Apache Shiro, Apache Tapestry y Spring Boot<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Open+Sans:400,700&amp;amp;subset=latin,latin-ext&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Cantarell:400,700&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;jumbotron&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/keycloak.png&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/apache-tapestry.png&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:security.guest</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola invitado!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:security.guest</span><span class="p">&gt;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:security.user</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola usuario!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:security.user</span><span class="p">&gt;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:security.hasRole</span> <span class="na">role</span><span class="o">=</span><span class="s">&#34;admin&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola administrador!&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">t:security.hasRole</span><span class="p">&gt;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;user&#34;</span><span class="p">&gt;</span>Página de usuario<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>, <span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;admin&#34;</span><span class="p">&gt;</span>Página de administrador<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Index.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Keycloak<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Open+Sans:400,700&amp;amp;subset=latin,latin-ext&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Cantarell:400,700&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;jumbotron&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/keycloak.png&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/apache-tapestry.png&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola usuario!, <span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;index&#34;</span><span class="p">&gt;</span>página de inicio<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>User.tml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">html</span> <span class="na">xmlns</span><span class="o">=</span><span class="s">&#34;http://www.w3.org/1999/xhtml&#34;</span> <span class="na">xmlns:t</span><span class="o">=</span><span class="s">&#34;http://tapestry.apache.org/schema/tapestry_5_4.xsd&#34;</span> <span class="na">xmlns:p</span><span class="o">=</span><span class="s">&#34;tapestry:parameter&#34;</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>Keycloak<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Open+Sans:400,700&amp;amp;subset=latin,latin-ext&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;	<span class="p">&lt;</span><span class="nt">link</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;http://fonts.googleapis.com/css?family=Cantarell:400,700&#34;</span> <span class="na">rel</span><span class="o">=</span><span class="s">&#34;stylesheet&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/css&#34;</span><span class="p">/&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>&#10;<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;jumbotron&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/keycloak.png&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">img</span> <span class="na">t:type</span><span class="o">=</span><span class="s">&#34;any&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;context:images/apache-tapestry.png&#34;</span><span class="p">/&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;row&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;col-md-12&#34;</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;¡Hola administrador!, <span class="p">&lt;</span><span class="nt">t:pagelink</span> <span class="na">page</span><span class="o">=</span><span class="s">&#34;index&#34;</span><span class="p">&gt;</span>página de inicio<span class="p">&lt;/</span><span class="nt">t:pagelink</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>&#10;<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Admin.tml</span>
    </div>
</div>
<p>Como la página de inicio no requiere autenticación es accesible por cualquier usuario. Al navegar a la página de usuario o administrador se iniciará el proceso de autenticación primeramente redirigiéndonos al servidor Keycloak para que introduzcamos las credenciales.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-index_hu415ca9630e7399f9007d16ba267384ff_60394_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Index"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-index_hu415ca9630e7399f9007d16ba267384ff_60394_300x200_fit_box_3.png" width="300" height="185" alt="Index" title="Index"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-keycloak-login_hud91081120a1e60e7ab23e636a0928ce5_81321_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Login"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-keycloak-login_hud91081120a1e60e7ab23e636a0928ce5_81321_300x200_fit_box_3.png" width="300" height="185" alt="Login" title="Login"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-user_hu0e1ae465e9f38667a2f2180922ea5f7b_59305_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="User"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-user_hu0e1ae465e9f38667a2f2180922ea5f7b_59305_300x200_fit_box_3.png" width="300" height="169" alt="User" title="User"  class="lozad "></a></p>
</figure>
</div>
<p>Si intentamos acceder a la página de usuario o administrador sin estar autenticados se nos mostrará la página de error 403 y al acceder a la página de administración con un usuario sin rol <em>admin</em> se nos mostrará la página de error 401.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-error403_huf74fad06d3e886ca07bb6b96686692df_57636_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Error 403"><img src="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/images/tapestry-error403_huf74fad06d3e886ca07bb6b96686692df_57636_300x200_fit_box_3.png" width="300" height="169" alt="Error 403" title="Error 403"  class="lozad "></a></p>
</figure>
</div>
<p>Un buen libro sobre OAuth que he leído es <a href="https://amzn.to/2cUkF9d">Mastering OAuth 2.0</a> que explica detalladamente el protocolo OAuth junto con el resto de formas de obtener un <em>token</em> además del mostrado en este artículo usando las credenciales del cliente.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1784395404&amp;linkId=726dc0d3e4914bc672e6b127da045db2&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<p>Este artículo solo es introductorio a las posibilidades de OAuth y Keycloak, entre otras posibilidades que ofrece Keycloak creo que está permitir registrarse a los usuarios o personalizar los estilos y páginas de autenticación.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/Keycloak">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle run</code></p>
</div>
<div class="alert alert-warning">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/misc/PugInTapestry.png" alt="Portada libro: PlugIn Tapestry" title="Portada libro: PlugIn Tapestry" style="float: left; margin-right: 1.5em;" class="lozad">
    <h3>Libro PlugIn Tapestry</h3>
    <p>Si te interesa Apache Tapestry descarga gratis el libro de más de 300 páginas que he escrito sobre este <i>framework</i> en el formato que prefieras, <a href="https://picodotdev.github.io/blog-bitix/2014/02/libro-sobre-desarrollo-de-aplicaciones-con-apache-tapestry/">PlugIn Tapestry: Desarrollo de aplicaciones y páginas web con Apache Tapestry</a>, y el código de ejemplo asociado. En el libro comento detalladamente muchos aspectos que son necesarios en una aplicación web como persistencia, pruebas unitarias y de integración, inicio rápido, seguridad, formularios, internacionalización (i18n) y localización (l10n), AJAX, ... y como abordarlos usando Apache Tapestry.</p>
    <br style="clear: both;">
    <div class="buttons">
        <a href="https://picodotdev.github.io/blog-bitix/assets/custom/PlugInTapestry.pdf" class="btn btn-lg btn-success">PDF</a>
        <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/PlugInTapestry" class="btn btn-lg btn-success">Código fuente ejemplos</a>
    </div>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://oauth.net/getting-started/">OAuth Getting Started</a></li>
<li><a href="https://oauth.net/2/">OAuth Documentation</a></li>
<li><a href="https://www.youtube.com/watch?v=z-sUzl9eG6M">Keycloak Basics Tutorial Part 1</a></li>
<li><a href="https://www.youtube.com/watch?v=CXDrGJoCVhc">Keycloak Basics Tutorial Part 2</a></li>
<li><a href="https://www.youtube.com/watch?v=B-qIkB9lsLs">Keycloak Demo Part 1</a></li>
<li><a href="https://www.youtube.com/watch?v=QgWgUg5F_JQ">Keycloak Demo Part 2</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/generacion-de-codigo-en-tiempo-de-ejecucion-con-byte-buddy/</id>
        <title>Generación de código en tiempo de ejecución con Byte Buddy</title>
        <updated>2016-10-07T09:15:00+02:00</updated>
        <published>2016-10-02T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/generacion-de-codigo-en-tiempo-de-ejecucion-con-byte-buddy/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>El tipado seguro y el sistema de tipos es sin duda una de las características más importante del lenguaje de programación Java que han contribuido a su éxito. Cuando no conocemos los tipos en tiempo de compilación el sistema de tipos es una limitación donde los lenguajes dinámicos son capaces de resolver el problema sin necesidad de los tipos pero perdiendo la ayuda del compilador. Usando una librería de generación de código en tiempo de compilación o ejecución tenemos la posibilidad en Java de realizar algunas tareas que los lenguajes dinámicos permiten.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/bytebuddy.png" width="200" height="181" alt="Byte Buddy" title="Byte Buddy"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Java posee un sistema de tipos estricto con el que detectar errores de compilación y hace que el código sea más legible, con un <abbr title="Integrated Development Environment">IDE</abbr> los errores de compilación los detectaremos inmediatamente según escribimos código. Este sistema de tipos estricto es deseable en aplicaciones de negocio y empresariales ya que ayuda a que las aplicaciones tengan menos errores o errores de compilación pasen inadvertidos y ser descubiertos incluso semanas después de haber sido desplegados en producción. Su sistema de tipos es uno de los responsables del éxito de Java. Sin embargo, el sistema de tipos estricto impone restricciones en otro tipo de ámbitos como en una biblioteca de propósito general ya que no se conocerán los tipos en tiempo de compilación y no podrán por tanto ser referenciados o alternativamente hayan ser definidos como interfaces o clases abstractas que posteriormente son implementadas o extendidas.</p>
<p>Para acceder a propiedades e invocar métodos de tipos desconocidos en tiempo de compilación en Java disponemos de la <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/package-summary.html">reflection API</a> o API de introspección aunque tiene los siguientes inconvenientes:</p>
<ul>
<li>Es lenta: más que la invocación directa de un método. La API de introspección usa <abbr title="Java Native Interface">JNI</abbr> y requiere hacer un análisis del objeto costosa para invocar el método del objeto.</li>
<li>Inutiliza el tipado seguro: la API de introspección no es <em>type-safe</em>. La comprobación de los tipos de los argumentos en la invocación de un método es retrasada hasta el momento de ejecución.</li>
</ul>
<p>Usando la  API de introspección perdemos una de las grandes características de Java, el tipado seguro, adicionalmente el rendimiento será menor. Conocidas estas limitaciones hay varias librerías que las palían generando código en tiempo de ejecución, algunas de las más conocidas son <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Proxy.html">Java Proxy</a> que está incluida en el propio JDK, <a href="https://github.com/cglib/cglib">cglib</a>, <a href="https://www.javassist.org/">Javassists</a> o <a href="https://asm.ow2.io/">ASM</a>.</p>
<p>Leyendo uno de los artículos de la publicación gratuita <a href="https://blogs.oracle.com/javamagazine/">Java Magazine</a> de <a href="http://www.javamagazine.mozaicreader.com/NovDec2015/Twitter">Nov/Dic 2015</a> conocí otra alternativa llamada <a href="https://bytebuddy.net/">Byte Buddy</a> con la que al contrario de otras posibilidades no estamos limitados a generar clases que implementen interfaces conocidas (como en Java proxies), tiene un mantenimiento activo y soporta las nuevas características de las últimas versiones del lenguaje (al contrario de cglib), no está tan limitada (como Javassists) y no hay que tener conocimientos de <em>byte code</em> (como con ASM).</p>
<p>La generación de código se ha vuelto ubicua en muchas de las librerías más populares de Java y se usa profusamente en <a href="https://spring.io/">Spring</a>, <a href="https://hibernate.org/">Hibernate</a> o <a href="https://tapestry.apache.org/">Apache Tapestry</a> para aplicar seguridad, gestión de transacciones, mapeo modelo relacional-objeto o pruebas unitarias o de integración (<em>mocking</em>, &hellip;) y de manera similar a lo ofrecido por los <a href="http://groovy-lang.org/metaprogramming.html"><abbr title="Abstract Syntax Tree">AST</abbr></a> de <a href="https://www.groovy-lang.org/">Groovy</a>. Permite emular algunas propiedades que solo están accesibles al programar con lenguajes dinámicos sin perder las comprobaciones de tipos. Las clases generadas por Byte Buddy no se distinguen de las clases generadas por el compilador.</p>
<p>Un ejemplo sencillo de la definición de una nueva clase en tiempo de ejecución con el método <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#toString--">String.toString()</a> que devuelve un valor fijo sería la siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="c1">// Create a Class&#10;</span><span class="c1"></span><span class="n">DynamicType</span><span class="o">.</span><span class="na">Unloaded</span><span class="o">&lt;?&gt;</span> <span class="n">unloaded</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ByteBuddy</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">subclass</span><span class="o">(</span><span class="n">Object</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">&#34;io.github.picodotdev.blobitix.holamundobytebuddy.Object&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">method</span><span class="o">(</span><span class="n">named</span><span class="o">(</span><span class="s">&#34;toString&#34;</span><span class="o">)).</span><span class="na">intercept</span><span class="o">(</span><span class="n">FixedValue</span><span class="o">.</span><span class="na">value</span><span class="o">(</span><span class="s">&#34;Hello World!&#34;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">make</span><span class="o">();</span>&#10;&#10;<span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">objectClass</span> <span class="o">=</span> <span class="n">unloaded</span><span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">(),</span> <span class="n">ClassLoadingStrategy</span><span class="o">.</span><span class="na">Default</span><span class="o">.</span><span class="na">WRAPPER</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">getLoaded</span><span class="o">();</span>&#10;&#10;<span class="n">Object</span> <span class="n">object</span> <span class="o">=</span> <span class="n">objectClass</span><span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s: %s\n&#34;</span><span class="o">,</span> <span class="n">object</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">(),</span> <span class="n">object</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-1.java</span>
    </div>
</div>
<p>Con los métodos <a href="http://bytebuddy.net/javadoc/1.4.28/net/bytebuddy/dynamic/DynamicType.html#saveIn-java.io.File-">saveIn</a>, <a href="http://bytebuddy.net/javadoc/1.4.28/net/bytebuddy/dynamic/DynamicType.html#inject-java.io.File-">inject</a> y <a href="http://bytebuddy.net/javadoc/1.4.28/net/bytebuddy/dynamic/DynamicType.html#toJar-java.io.File-">toJar</a> de <a href="http://bytebuddy.net/javadoc/1.4.28/net/bytebuddy/dynamic/DynamicType.Unloaded.html">DynamicType.Unloaded</a> podemos generar las clases en el momento de construcción de la aplicación previo a que sea desplegada y guardarlas en archivos <em>.class</em> o en librerías <em>.jar</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="n">unloaded</span><span class="o">.</span><span class="na">saveIn</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>&#10;<span class="n">unloaded</span><span class="o">.</span><span class="na">inject</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>&#10;<span class="n">unloaded</span><span class="o">.</span><span class="na">toJar</span><span class="o">(</span><span class="n">file</span><span class="o">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-2.java</span>
    </div>
</div>
<p>Usando los selectores adecuados como <em>method</em>, <em>field</em>, <em>constructor</em>, <em>named</em> entre muchos otros de la clase <a href="http://bytebuddy.net/javadoc/1.4.28/net/bytebuddy/matcher/ElementMatchers.html">ElementMatchers</a> seremos capaces de interceptar las llamadas a los métodos y establecerles el comportamiento que deseemos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="c1">// Intercept methods&#10;</span><span class="c1"></span><span class="n">Foo</span> <span class="n">foo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ByteBuddy</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">subclass</span><span class="o">(</span><span class="n">Foo</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">method</span><span class="o">(</span><span class="n">isDeclaredBy</span><span class="o">(</span><span class="n">Foo</span><span class="o">.</span><span class="na">class</span><span class="o">)).</span><span class="na">intercept</span><span class="o">(</span><span class="n">FixedValue</span><span class="o">.</span><span class="na">value</span><span class="o">(</span><span class="s">&#34;One!&#34;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">method</span><span class="o">(</span><span class="n">named</span><span class="o">(</span><span class="s">&#34;foo&#34;</span><span class="o">)).</span><span class="na">intercept</span><span class="o">(</span><span class="n">FixedValue</span><span class="o">.</span><span class="na">value</span><span class="o">(</span><span class="s">&#34;Two!&#34;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">method</span><span class="o">(</span><span class="n">named</span><span class="o">(</span><span class="s">&#34;foo&#34;</span><span class="o">).</span><span class="na">and</span><span class="o">(</span><span class="n">takesArguments</span><span class="o">(</span><span class="n">1</span><span class="o">))).</span><span class="na">intercept</span><span class="o">(</span><span class="n">FixedValue</span><span class="o">.</span><span class="na">value</span><span class="o">(</span><span class="s">&#34;Three!&#34;</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">make</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">(),</span> <span class="n">ClassLoadingStrategy</span><span class="o">.</span><span class="na">Default</span><span class="o">.</span><span class="na">WRAPPER</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">getLoaded</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">newInstance</span><span class="o">();</span>&#10;&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s.bar(): %s\n&#34;</span><span class="o">,</span> <span class="n">foo</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">(),</span> <span class="n">foo</span><span class="o">.</span><span class="na">bar</span><span class="o">());</span>&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s.foo(): %s\n&#34;</span><span class="o">,</span> <span class="n">foo</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">(),</span> <span class="n">foo</span><span class="o">.</span><span class="na">foo</span><span class="o">());</span>&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;%s.foo(Object o): %s\n&#34;</span><span class="o">,</span> <span class="n">foo</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">(),</span> <span class="n">foo</span><span class="o">.</span><span class="na">foo</span><span class="o">(</span><span class="s">&#34;¡Hello World!&#34;</span><span class="o">));</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-3.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundobytebuddy</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Foo</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">bar</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">foo</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span> <span class="o">}</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">foo</span><span class="o">(</span><span class="n">Object</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span> <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Foo.java</span>
    </div>
</div>
<p>Byte Buddy permite tres tipos de extensiones:</p>
<ul>
<li><em>subclass</em>: crea un nuevo tipo subclase de otro.</li>
<li><em>redefine</em>: redefine el comportamiento de un tipo existente.</li>
<li><em>rebase</em>: redefine el comportamiento de un tipo existente y renombra los métodos redefinidos de modo que siguen estando disponibles internamente.</li>
</ul>
<p>Devolver valores fijos en un método seguramente no será lo que deseemos en muchos casos pero podemos delegar el comportamiento de un método en otro y esta es una forma muy sencilla de manipular el comportamiento de un método sin conocer absolutamente nada de <em>bytecode</em> ya que todo el código que proporcionamos es código Java. En el método en que se delega la llamada de uno interceptado es posible usar varias anotaciones para obtener diversos parámetros adicionales, <em>@Argument(n)</em>, <em>@AllArguments</em>, <em>@This</em>, <em>@Super</em>, <em>@Origin</em> (Method, Constructor, Executable, Class, MethodHandle, MethodType, String o int), <em>@SuperCall</em>, <em>@RuntimeType</em>, <em>@DefaultCall</em>, <em>@Default</em>. El <a href="http://bytebuddy.net/javadoc/1.4.28/net/bytebuddy/implementation/bind/annotation/package-summary.html">listado completo de anotaciones</a> está disponible en la API Javadoc.</p>
<p>Podemos proporcionar implementaciones de métodos de la siguiente forma, suponiendo que queremos redefinir el método <em>hello</em> de la clase <em>Source</em> con el comportamiento implementado en la clase <em>Target</em>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="c1">// Delegating a method call&#10;</span><span class="c1"></span><span class="n">Class</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">Source</span><span class="o">&gt;</span> <span class="n">sourceClass</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ByteBuddy</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">subclass</span><span class="o">(</span><span class="n">Source</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">method</span><span class="o">(</span><span class="n">named</span><span class="o">(</span><span class="s">&#34;hello&#34;</span><span class="o">)).</span><span class="na">intercept</span><span class="o">(</span><span class="n">MethodDelegation</span><span class="o">.</span><span class="na">to</span><span class="o">(</span><span class="n">Target</span><span class="o">.</span><span class="na">class</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">make</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">load</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">(),</span> <span class="n">ClassLoadingStrategy</span><span class="o">.</span><span class="na">Default</span><span class="o">.</span><span class="na">WRAPPER</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">getLoaded</span><span class="o">();</span>&#10;&#10;<span class="n">String</span> <span class="n">message</span> <span class="o">=</span> <span class="n">sourceClass</span><span class="o">.</span><span class="na">newInstance</span><span class="o">().</span><span class="na">hello</span><span class="o">(</span><span class="s">&#34;World&#34;</span><span class="o">);</span>&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>&#10;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">message</span><span class="o">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main-4.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundobytebuddy</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Source</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">hello</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span> <span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Source.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.holamundobytebuddy</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Target</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">hello</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="s">&#34;Hello &#34;</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="s">&#34;!&#34;</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Target.java</span>
    </div>
</div>
<p>Dicho esto, la generación de código en tiempo de ejecución o compilación nos permite nuevas posibilidades que solo ofrecían lenguajes dinámicos o de resolver problemas con <a href="https://en.wikipedia.org/wiki/Aspect-oriented_programming">programación orientada a aspectos</a>. Aún así hay que tener en cuenta que las clases Java son elementos especiales para la la máquina virtual y nunca son recolectadas por el recolector de basura mientras su <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ClassLoader.html">ClassLoader</a> este en uso por alguna de las clases que hay cargadas en la aplicación.</p>
<p>Ejecutando esta pequeña aplicación obtenemos el siguiente resultado en la terminal.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">io.github.picodotdev.blobitix.holamundobytebuddy.Object: Hello World!&#10;&#10;io.github.picodotdev.blogbitix.holamundobytebuddy.Foo$ByteBuddy$7lxtAhIy.bar(): One!&#10;io.github.picodotdev.blogbitix.holamundobytebuddy.Foo$ByteBuddy$7lxtAhIy.foo(): Two!&#10;io.github.picodotdev.blogbitix.holamundobytebuddy.Foo$ByteBuddy$7lxtAhIy.foo(Object o): Three!&#10;&#10;Hello World!</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En el <a href="http://bytebuddy.net/#/tutorial">tutorial de Byte Buddy</a> encontraremos más información y más detallada de las posibilidades que nos ofrece esta interesante librería en la plataforma <abbr title="Java Virtual Machine">JVM</abbr> para manipular <em>bytecode</em> y tipos con el lenguaje Java en tiempo de ejecución.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/HolaMundoByteBuddy">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://bytebuddy.net/">Byte Buddy</a></li>
<li><a href="http://bytebuddy.net/#/tutorial">Tutorial de Byte Buddy</a></li>
<li><a href="http://www.javamagazine.mozaicreader.com/NovDec2015/Twitter">Java Magazine Nov/Dic 2015</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth-en-java/</id>
        <title>Cliente de un servicio REST autenticado con OAuth en Java</title>
        <updated>2016-10-01T11:00:00+02:00</updated>
        <published>2016-10-01T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth-en-java/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Teniendo un servicio REST securizado con OAuth2 al invocarlo deberemos realizar el flujo necesario para obtener un <em>access token</em> y posteriormente enviarlo al servicio REST como forma de autenticación y autorización. Usando un cliente programado en el lenguaje Java y usando la librería HttpClient podemos hacer las peticiones HTTP necesarias para la invocación del servicio.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Explicaba como llamar a un servicio REST autenticado con OAuth2 en el artículo <a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</a>. Para ello usaba la utilidad <em>curl</em> para hacer las peticiones HTTP <em>get</em> y <em>post</em> necesarias tanto para obtener el <em>access token</em> usando el flujo <em>client_credentials</em> como para una vez obtenido el <em>access token</em> llamar al servicio REST. En una aplicación usaremos un lenguaje de programación para llamar al servicio, en este ejemplo mostraré como llamarlo usando un cliente programado en lenguaje Java que hará las mismas peticiones <em>get</em> y <em>post</em> pero usando la librería <a href="https://hc.apache.org/">HttpComponents</a> en vez de <em>curl</em>.</p>
<p>Primero añadiremos como dependencia del proyecto la librería HttpComponents. Como en las diferentes llamadas el intercambio de datos se realiza mediante el <a href="https://json.org/">formato JSON</a> añadiremos otro par dependencias para procesar los datos en este formato, en este caso usando la API de <a href="https://javaee.github.io/jsonp/">JSON-P</a> y una implementación.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="n">dependencies</span> <span class="o">{</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-jersey&#39;</span><span class="o">)</span>&#10;&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.keycloak:keycloak-spring-boot-adapter:2.2.0.Final&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.keycloak:keycloak-tomcat8-adapter:2.2.0.Final&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.keycloak:keycloak-core:2.2.0.Final&#39;</span><span class="o">)</span>&#10;&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.apache.httpcomponents:httpcomponents-client:4.5.2&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;javax.json:javax.json-api:1.0&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish:javax.json:1.0.4&#39;</span><span class="o">)</span>&#10;&#10;	<span class="n">testCompile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-test&#39;</span><span class="o">)</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Este sencillo cliente realiza varias peticiones <em>get</em> y <em>post</em>. Una para obtener la configuración de los <em>endpoints</em>, el que nos interesa es el de obtener un <em>access token</em>, otra petición para obtener el <em>access token</em> y finalmente con el <em>access token</em> invocar al servicio mediante otra petición.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span><span class="lnt">31&#10;</span><span class="lnt">32&#10;</span><span class="lnt">33&#10;</span><span class="lnt">34&#10;</span><span class="lnt">35&#10;</span><span class="lnt">36&#10;</span><span class="lnt">37&#10;</span><span class="lnt">38&#10;</span><span class="lnt">39&#10;</span><span class="lnt">40&#10;</span><span class="lnt">41&#10;</span><span class="lnt">42&#10;</span><span class="lnt">43&#10;</span><span class="lnt">44&#10;</span><span class="lnt">45&#10;</span><span class="lnt">46&#10;</span><span class="lnt">47&#10;</span><span class="lnt">48&#10;</span><span class="lnt">49&#10;</span><span class="lnt">50&#10;</span><span class="lnt">51&#10;</span><span class="lnt">52&#10;</span><span class="lnt">53&#10;</span><span class="lnt">54&#10;</span><span class="lnt">55&#10;</span><span class="lnt">56&#10;</span><span class="lnt">57&#10;</span><span class="lnt">58&#10;</span><span class="lnt">59&#10;</span><span class="lnt">60&#10;</span><span class="lnt">61&#10;</span><span class="lnt">62&#10;</span><span class="lnt">63&#10;</span><span class="lnt">64&#10;</span><span class="lnt">65&#10;</span><span class="lnt">66&#10;</span><span class="lnt">67&#10;</span><span class="lnt">68&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrsoauth</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.apache.http.NameValuePair</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.client.entity.UrlEncodedFormEntity</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.client.methods.CloseableHttpResponse</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.client.methods.HttpGet</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.client.methods.HttpPost</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.conn.ssl.NoopHostnameVerifier</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.conn.ssl.SSLConnectionSocketFactory</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.conn.ssl.TrustSelfSignedStrategy</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.impl.client.CloseableHttpClient</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.impl.client.HttpClients</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.message.BasicNameValuePair</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.apache.http.ssl.SSLContexts</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.json.Json</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.json.JsonObject</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClientMain</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CloseableHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">HttpClients</span><span class="o">.</span><span class="na">custom</span><span class="o">()</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">setSSLSocketFactory</span><span class="o">(</span><span class="k">new</span> <span class="n">SSLConnectionSocketFactory</span><span class="o">(</span><span class="n">SSLContexts</span><span class="o">.</span><span class="na">custom</span><span class="o">().</span><span class="na">loadTrustMaterial</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="k">new</span> <span class="n">TrustSelfSignedStrategy</span><span class="o">()).</span><span class="na">build</span><span class="o">(),</span> <span class="n">NoopHostnameVerifier</span><span class="o">.</span><span class="na">INSTANCE</span><span class="o">))</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">.</span><span class="na">build</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// curl -i http://localhost:9080/auth/realms/springbootjaxrs/.well-known/openid-configuration&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Getting configuration...&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpGet</span> <span class="n">configurationRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpGet</span><span class="o">(</span><span class="s">&#34;http://localhost:9080/auth/realms/springbootjaxrs/.well-known/openid-configuration&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CloseableHttpResponse</span> <span class="n">configurationResponse</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">configurationRequest</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonObject</span> <span class="n">configurarionObject</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createReader</span><span class="o">(</span><span class="n">configurationResponse</span><span class="o">.</span><span class="na">getEntity</span><span class="o">().</span><span class="na">getContent</span><span class="o">()).</span><span class="na">readObject</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">tokenEndpoint</span> <span class="o">=</span> <span class="n">configurarionObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&#34;token_endpoint&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">configurationResponse</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// curl -i http://localhost:9080/auth/realms/springbootjaxrs/protocol/openid-connect/token -d &#34;grant_type=client_credentials&amp;client_id=client&amp;client_secret=06212c72-8734-4cd7-898d-7c4afb17e0a2&#34;&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Getting an access token...&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpPost</span> <span class="n">tokenRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpPost</span><span class="o">(</span><span class="n">tokenEndpoint</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">List</span><span class="o">&lt;</span><span class="n">NameValuePair</span><span class="o">&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">NameValuePair</span><span class="o">&gt;();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">data</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">BasicNameValuePair</span><span class="o">(</span><span class="s">&#34;grant_type&#34;</span><span class="o">,</span> <span class="s">&#34;client_credentials&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">data</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">BasicNameValuePair</span><span class="o">(</span><span class="s">&#34;client_id&#34;</span><span class="o">,</span> <span class="s">&#34;client&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">data</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">BasicNameValuePair</span><span class="o">(</span><span class="s">&#34;client_secret&#34;</span><span class="o">,</span> <span class="s">&#34;06212c72-8734-4cd7-898d-7c4afb17e0a2&#34;</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">tokenRequest</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="k">new</span> <span class="n">UrlEncodedFormEntity</span><span class="o">(</span><span class="n">data</span><span class="o">));</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CloseableHttpResponse</span> <span class="n">tokenResponse</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">tokenRequest</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonObject</span> <span class="n">tokenObject</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createReader</span><span class="o">(</span><span class="n">tokenResponse</span><span class="o">.</span><span class="na">getEntity</span><span class="o">().</span><span class="na">getContent</span><span class="o">()).</span><span class="na">readObject</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">accessToken</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&#34;access_token&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Integer</span> <span class="n">expiresIn</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&#34;expires_in&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Integer</span> <span class="n">refreshExpires</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&#34;refresh_expires_in&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">String</span> <span class="n">refreshToken</span> <span class="o">=</span> <span class="n">tokenObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&#34;refresh_token&#34;</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Access token: %s%n&#34;</span><span class="o">,</span> <span class="n">accessToken</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Expires in: %d%n&#34;</span><span class="o">,</span> <span class="n">expiresIn</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Refresh expires in: %d%n&#34;</span><span class="o">,</span> <span class="n">refreshExpires</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Refresh token: %s%n&#34;</span><span class="o">,</span> <span class="n">refreshToken</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="c1">// curl -ik -H &#34;Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ3THpCZ20tcUZTdmlOUFA3V0RwYlF0N0tpaHhvM2t3dmxiTTNXODRuTVFnIn0.eyJqdGkiOiI5YTg0NzI5MS05MDkzLTRmNzMtOGIyMC0yZjIyY2NjN2FiMmQiLCJleHAiOjE0NzUzMDg5NzQsIm5iZiI6MCwiaWF0IjoxNDc1MzA4Njc0LCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjkwODAvYXV0aC9yZWFsbXMvc3ByaW5nYm9vdGpheHJzIiwiYXVkIjoiY2xpZW50Iiwic3ViIjoiYzE4ZWExOGMtMDVlYS00MjE5LTg4YjEtMDIyNjU0ZDUzMWYxIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiY2xpZW50IiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiNDI4NDZlYjgtN2MxZS00NzM1LWFhMTYtMDdjYjY1Zjg4NWM4IiwiYWNyIjoiMSIsImNsaWVudF9zZXNzaW9uIjoiYjlhYzcwZDQtMThlOS00Mjk1LThmMWYtNDQ0ZGVhNGUwNTJiIiwiYWxsb3dlZC1vcmlnaW5zIjpbXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImFwaSJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImNsaWVudCI6eyJyb2xlcyI6WyJhcGkiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJ2aWV3LXByb2ZpbGUiXX19LCJjbGllbnRIb3N0IjoiMTcyLjE3LjAuMSIsImNsaWVudElkIjoiY2xpZW50IiwibmFtZSI6IiIsInByZWZlcnJlZF91c2VybmFtZSI6InNlcnZpY2UtYWNjb3VudC1hcGkiLCJjbGllbnRBZGRyZXNzIjoiMTcyLjE3LjAuMSIsImVtYWlsIjoic2VydmljZS1hY2NvdW50LWFwaUBwbGFjZWhvbGRlci5vcmcifQ.flw8cW1isddPqDGZVDQOrbtx6K1r-4Fzz5M39JmRsJkEyVyrNOWC5V1i5ks0zfEIzO9OED0vMFgQF7D2aAMgdCMsulGdGoeg0yi4ErI5-FNzAYYxRidKixmYOWo_fBSUSCoxEmzSkr-NJT6zHBwvx71bLZmeLCXHkuj0FegTVY09rh76isj4xmnPhVj2AgazGvbAIajX7YxMtPMevBs-SrxjoYZ_8w40VI1wV49lOAHCPhHANFqUJKdUytfONOq61PsEnzn_N7fXHNsJlHZ5Otduh--AjsGN0S5K4WmcIJlSgCJsABwp4FjU11sDzOpoAI3_Ktqs0uT_ka8wndhKKQ&#34; https://localhost:8443/api/message?message=Hola&#10;</span><span class="c1"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Calling oauth secured service...&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">HttpGet</span> <span class="n">serviceRequest</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpGet</span><span class="o">(</span><span class="s">&#34;https://localhost:8443/api/message?message=Hola&#34;</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">serviceRequest</span><span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&#34;Authorization&#34;</span><span class="o">,</span> <span class="s">&#34;Bearer &#34;</span> <span class="o">+</span> <span class="n">accessToken</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">CloseableHttpResponse</span> <span class="n">serviceResponse</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">serviceRequest</span><span class="o">);</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">JsonObject</span> <span class="n">serviceObject</span> <span class="o">=</span> <span class="n">Json</span><span class="o">.</span><span class="na">createReader</span><span class="o">(</span><span class="n">serviceResponse</span><span class="o">.</span><span class="na">getEntity</span><span class="o">().</span><span class="na">getContent</span><span class="o">()).</span><span class="na">readObject</span><span class="o">();</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&#34;Result: %s%n&#34;</span><span class="o">,</span> <span class="n">serviceObject</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ClientMain.java</span>
    </div>
</div>
<p>Iniciado <a href="https://www.keycloak.org/">Keycloak</a> con <a href="https://www.docker.com/">Docker</a>, configurado el <em>realm</em> y creado un cliente junto con un rol e iniciado el servicio REST podemos ejecutar el cliente que invoque al servicio. El resultado de las trazas que obtendremos en la terminal será el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">Getting configuration...&#10;...&#10;Getting an access token...&#10;...&#10;Access token: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ3THpCZ20tcUZTdmlOUFA3V0RwYlF0N0tpaHhvM2t3dmxiTTNXODRuTVFnIn0.eyJqdGkiOiI5YTg0NzI5MS05MDkzLTRmNzMtOGIyMC0yZjIyY2NjN2FiMmQiLCJleHAiOjE0NzUzMDg5NzQsIm5iZiI6MCwiaWF0IjoxNDc1MzA4Njc0LCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjkwODAvYXV0aC9yZWFsbXMvc3ByaW5nYm9vdGpheHJzIiwiYXVkIjoiY2xpZW50Iiwic3ViIjoiYzE4ZWExOGMtMDVlYS00MjE5LTg4YjEtMDIyNjU0ZDUzMWYxIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiY2xpZW50IiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiNDI4NDZlYjgtN2MxZS00NzM1LWFhMTYtMDdjYjY1Zjg4NWM4IiwiYWNyIjoiMSIsImNsaWVudF9zZXNzaW9uIjoiYjlhYzcwZDQtMThlOS00Mjk1LThmMWYtNDQ0ZGVhNGUwNTJiIiwiYWxsb3dlZC1vcmlnaW5zIjpbXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImFwaSJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImNsaWVudCI6eyJyb2xlcyI6WyJhcGkiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJ2aWV3LXByb2ZpbGUiXX19LCJjbGllbnRIb3N0IjoiMTcyLjE3LjAuMSIsImNsaWVudElkIjoiY2xpZW50IiwibmFtZSI6IiIsInByZWZlcnJlZF91c2VybmFtZSI6InNlcnZpY2UtYWNjb3VudC1hcGkiLCJjbGllbnRBZGRyZXNzIjoiMTcyLjE3LjAuMSIsImVtYWlsIjoic2VydmljZS1hY2NvdW50LWFwaUBwbGFjZWhvbGRlci5vcmcifQ.flw8cW1isddPqDGZVDQOrbtx6K1r-4Fzz5M39JmRsJkEyVyrNOWC5V1i5ks0zfEIzO9OED0vMFgQF7D2aAMgdCMsulGdGoeg0yi4ErI5-FNzAYYxRidKixmYOWo_fBSUSCoxEmzSkr-NJT6zHBwvx71bLZmeLCXHkuj0FegTVY09rh76isj4xmnPhVj2AgazGvbAIajX7YxMtPMevBs-SrxjoYZ_8w40VI1wV49lOAHCPhHANFqUJKdUytfONOq61PsEnzn_N7fXHNsJlHZ5Otduh--AjsGN0S5K4WmcIJlSgCJsABwp4FjU11sDzOpoAI3_Ktqs0uT_ka8wndhKKQ&#10;Expires in: 300&#10;Refresh expires in: 1800&#10;Refresh token: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ3THpCZ20tcUZTdmlOUFA3V0RwYlF0N0tpaHhvM2t3dmxiTTNXODRuTVFnIn0.eyJqdGkiOiIwNWEyZDcxZC0wMDIyLTQ5MGMtYTQ5NC00YWFlNjYzNGQ2NTciLCJleHAiOjE0NzUzMTA0NzQsIm5iZiI6MCwiaWF0IjoxNDc1MzA4Njc0LCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjkwODAvYXV0aC9yZWFsbXMvc3ByaW5nYm9vdGpheHJzIiwiYXVkIjoiY2xpZW50Iiwic3ViIjoiYzE4ZWExOGMtMDVlYS00MjE5LTg4YjEtMDIyNjU0ZDUzMWYxIiwidHlwIjoiUmVmcmVzaCIsImF6cCI6ImNsaWVudCIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjQyODQ2ZWI4LTdjMWUtNDczNS1hYTE2LTA3Y2I2NWY4ODVjOCIsImNsaWVudF9zZXNzaW9uIjoiYjlhYzcwZDQtMThlOS00Mjk1LThmMWYtNDQ0ZGVhNGUwNTJiIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImFwaSJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImNsaWVudCI6eyJyb2xlcyI6WyJhcGkiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJ2aWV3LXByb2ZpbGUiXX19fQ.LE9odwHMNeFVxIcW7ZT8hu37LeHObThTyQtefsE_iTk0BPGxv4B2rcZT4Ayxrg32QNRuJxFtlQQJP_JVcHoSxFmEw8k-vKi1hlMFYUzzYeDUD7a6CNYgQyoLNVwGvuUtqz8UgulPBfxwFDB_cjmDMBRTGTv_M-OXe4og97WuXSSjjas2A4NJrxDHRgM7r8QBcyCNsVYQC3tSHNsCrh1tKuUZpAKgStW0RXbsXrlbuTsSCnSLji0Z9Va8pTW99KkLv1qeaPmbJ2Q0B0nCfMakI-o5j7HpI5sJnSHpvDxV2IJ9Jay0H5RM2E30XXski7zC-ZuVod6zBzOqYI65aSz12A&#10;Calling oauth secured service...&#10;...&#10;Result: {&#34;message&#34;:&#34;Hola&#34;,&#34;date&#34;:1475308675870}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>System.out</span>
    </div>
</div>
<p>En las trazas vemos el <em>endpoint</em> para obtener <em>access token</em>, el <em>access token</em> obtenido, <em>refresh token</em> y tiempos de expiración de los mismos, finalmente los datos devueltos por el servicio. Como se observa los <em>access token</em> son una cadena opaca bastante larga de caracteres, y es que está cifrada, firmada digitalmente y contiene información como el rol y tiempos de expiración. Enviado el <em>access token</em> al servicio REST el <a href="https://keycloak.gitbooks.io/securing-client-applications-guide/content/v/2.2/topics/oidc/java/java-adapters.html">adaptador de Keycloak para Spring Boot</a> validará la firma digital del <em>token</em>, descifrará la información, validará su tiempo de expiración y se comprobará si tiene el rol necesario para acceder al <em>endpoint</em> del servicio REST. Notar que con la información incluida en el token y el hecho de que está firmado digitalmente no es necesario que el servicio REST se comunique con el proveedor de OAuth para hacer la validación.</p>
<p>El cliente no tiene más salvo que usando la clase <a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/client/HttpClient.html">HttpClient</a> y haciendo una petición HTTPS con un certificado autofirmado en el servidor deberemos ignorar las comprobaciones de seguridad. Para ello se usan un <a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/conn/ssl/SSLConnectionSocketFactory.html">SSLConnectionSocketFactory</a> que las ignore.</p>
<p>Un buen libro sobre OAuth que he leído es <a href="https://amzn.to/2cUkF9d">Mastering OAuth 2.0</a> que explica detalladamente el protocolo OAuth junto con el resto de formas de obtener un <em>token</em> además del mostrado en este artículo usando las credenciales del cliente.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1784395404&amp;linkId=726dc0d3e4914bc672e6b127da045db2&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringBootJaxrsOauth">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub.</p>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/</id>
        <title>Gestionar los enlaces de una bitácora con Hugo</title>
        <updated>2016-09-30T23:00:00+02:00</updated>
        <published>2016-09-30T23:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/gestionar-los-enlaces-de-una-bitacora-con-hugo/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Incluir enlaces a otras web u otras páginas o artículos dentro del mismo sitio es el fundamento de internet y como tal es muy común. En el momento que queramos cambiar la URL de un enlace que haya sido incluido múltiples veces en un sitio puede que no nos sea una tarea sencilla, ni para buscarlos o por hacerlo uno a uno. Usando Hugo sigo la forma que explico a continuación para simplificar el sustituir una URL que cambia y para simplificar el hacer referencia e insertar los enlaces.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/blogbitix.svg" width="200" height="200" alt="Blog Bitix" title="Blog Bitix"  class=""></p>
</div>
<p>Una de las tareas más comunes en una página web o en una bitácora es incluir enlaces a otras páginas, el enlace es uno de los elementos básicos que forman la web. Es probable que en muchas páginas o artículos incluyamos repetidamente los mismos enlaces y como resultado tendremos en muchas páginas y artículos los mismos enlaces. El día que unos de esos enlaces cambie de alguna forma su dirección URL deberíamos actualizar todas las páginas o artículos para referenciar la nueva URL y no tener enlaces rotos. Puede no ser una tarea sencilla, más si usamos <a href="https://wordpress.org/">WordPress</a>, <a href="https://www.blogger.com/">Blogger</a> o una herramienta similar. Voy a comentar como he resuelto este posible problema en mi bitácora en la que uso <a href="https://gohugo.io/">Hugo</a>.</p>
<p>Hace un par de años cambié <a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">de usar Blogger a usar Octopress</a> y después de un tiempo <a href="https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/">de usar Octopress a usar Hugo</a>. <a href="http://octopress.org/">Octopress</a> o <a href="https://jekyllrb.com/">Jeckyll</a> y Hugo son herramientas muy similares, básicamente los dos son generadores estáticos de páginas web o bitácoras que después de alojan en cualquier servidor web o en servicios como <a href="https://pages.github.com/">GitHub Pages</a>.</p>
<p>Para no incluir en las páginas o artículos las mismas URLs una y otra vez tengo un archivo de referencias a enlaces en el que en formato <a href="https://es.wikipedia.org/wiki/Markdown">markdown</a> a cada URL le doy un identificativo. Posteriormente hago uso de una facilidad que proporciona Hugo que son los <a href="https://gohugo.io/extras/shortcodes/">shortcodes</a> similares a pequeños contenidos que pueden ser incluídos en los archivos de contenido u otras plantillas, este sería un trozo de un archivo de enlaces:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html">[abiword] : https://www.abiword.org/&#10;[activiti] : https://activiti.org/&#10;[adobe-acrobat-reader] : https://get.adobe.com/es/reader/otherversions/&#10;[adblockplus] : https://adblockplus.org/es/&#10;[alfresco] : https://www.alfresco.com/&#10;[amazon] : https://www.amazon.es/&#10;[amazon-ec2] : https://aws.amazon.com/es/ec2/&#10;[amd] : https://www.amd.com/&#10;[android] : https://www.android.com/&#10;[angular] : https://angularjs.org/&#10;[ansible] : https://www.ansible.com&#10;[apache] : https://httpd.apache.org/&#10;[apache-httpcomponents] : https://hc.apache.org/&#10;[apache-poi] : https://poi.apache.org/&#10;[appfog] : https://www.appfog.com/</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>links.html</span>
    </div>
</div>
<p>El día que un enlace cambie basta con que lo modifique en el archivo enlaces sin tener que revisar, buscar, reemplazar y editar los archivos de contenido.</p>
<p>Esto para los enlaces externos hacia otras páginas pero de forma similar lo aplico a los enlaces internos hacia otras páginas de la bitácora. A cada artículo le asigno un número secuencial según los voy escribiendo y publicando, con esa secuencia creo un identificativo para el artículo y le asocio su URL.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html">[blogbitix-0] : https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/&#10;[blogbitix-1] : https://picodotdev.github.io/blog-bitix/2013/12/usar-el-dni-electronico-con-firefox-en-linux/&#10;[blogbitix-2] : https://picodotdev.github.io/blog-bitix/2013/12/enviar-correos-electronicos-firmados-con-el-dnie-y-evolution/&#10;[blogbitix-3] : https://picodotdev.github.io/blog-bitix/2013/12/firmar-digitalmente-documentos-con-el-dnie-y-sinadura/&#10;[blogbitix-4] : https://picodotdev.github.io/blog-bitix/2013/12/hemeroteca-4/&#10;[blogbitix-5] : https://picodotdev.github.io/blog-bitix/2014/01/raspberry-pi-como-media-center-con-geexbox/&#10;[blogbitix-6] : https://picodotdev.github.io/blog-bitix/2014/01/iniciar-la-raspberry-pi-desde-un-disco-o-memoria-usb/&#10;[blogbitix-7] : https://picodotdev.github.io/blog-bitix/2014/01/mi-experiencia-y-consejos-para-un-blog/&#10;[blogbitix-8] : https://picodotdev.github.io/blog-bitix/2014/01/ejemplo-del-patron-de-diseno-no-operation/&#10;[blogbitix-9] : https://picodotdev.github.io/blog-bitix/2014/01/logging-usando-marcadores-con-slf4j-y-logback/&#10;[blogbitix-10] : https://picodotdev.github.io/blog-bitix/2014/02/servidor-de-aplicaciones-jboss-slash-wildfly/&#10;&#10;...&#10;&#10;[elblogdepicodev-0] : https://elblogdepicodev.blogspot.com.es/2010/02/hola-mundo_06.html&#10;[elblogdepicodev-1] : https://elblogdepicodev.blogspot.com.es/2010/02/cambiando-el-fondo-de-pantalla-del.html&#10;[elblogdepicodev-2] : https://elblogdepicodev.blogspot.com.es/2010/02/cambiar-el-fondo-de-pantalla-de-gdm.html&#10;[elblogdepicodev-3] : https://elblogdepicodev.blogspot.com.es/2010/02/configurar-modo-grafico-de-grub-2.html&#10;[elblogdepicodev-4] : https://elblogdepicodev.blogspot.com.es/2010/02/enlaces-de-la-semana-6-del-2010.html&#10;[elblogdepicodev-5] : https://elblogdepicodev.blogspot.com.es/2010/02/escuchar-radios-traves-de-internet-con.html&#10;[elblogdepicodev-6] : https://elblogdepicodev.blogspot.com.es/2010/02/alternativas-tus-programas-propietarios.html&#10;[elblogdepicodev-7] : https://elblogdepicodev.blogspot.com.es/2010/02/cambiar-los-punteros-del-raton-en-arch.html&#10;[elblogdepicodev-8] : https://elblogdepicodev.blogspot.com.es/2010/02/enlaces-de-la-semana-7-de-2010.html&#10;[elblogdepicodev-9] : https://elblogdepicodev.blogspot.com.es/2010/02/publicado-calendario-gnome-30.html&#10;[elblogdepicodev-10] : https://elblogdepicodev.blogspot.com.es/2010/02/instalar-el-tema-de-iconos-gnome-colors.html</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>links-posts.html</span>
    </div>
</div>
<p>Con estos archivos usando la <a href="https://daringfireball.net/projects/markdown/syntax#link">sintaxis de markdown</a> con <code>\[texto enlace\]\[identificativo-enlace\]</code>, por ejemplo <code>\[¡Hola nuevo mundo!\]\[blogbitix-0\]</code>, puedo hacer referencia a los enlaces con su identificativo y al generar el contenido estas referencias será sustituidas por los enlaces referenciados.</p>
<p>Rastreando la página web o bitácora podremos encontrar y posteriormente corregir los enlaces rotos que encontremos. En el artículo <a href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/">cómo buscar los enlaces rotos de un sitio web</a> comento varias formas de descubrir estos enlaces que en su momento lo fueron pero han dejado de ser válidos y que proporcionan una mala experiencia al usuario.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://gohugo.io/">Hugo</a></li>
<li><a href="http://octopress.org/">Octopress</a></li>
<li><a href="https://wordpress.org/">WordPress</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">¡Hola nuevo mundo!</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2014/01/mi-experiencia-y-consejos-para-un-blog/">Mi experiencia y consejos para un blog</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2018/05/generador-de-paginas-web-estaticas-y-bitacoras-con-hugo/">Generador de páginas web estáticas y bitácoras Hugo</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/05/nuevo-diseno-en-blog-bitix/">Nuevo diseño en Blog Bitix</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2015/12/como-buscar-los-enlaces-rotos-de-un-sitio-web/">Cómo buscar los enlaces rotos de un sitio web</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="blog"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/</id>
        <title>Cómo instalar y probar macOS con VirtualBox en Windows o GNU/Linux</title>
        <updated>2020-07-04T23:30:00+02:00</updated>
        <published>2016-09-25T11:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>¿Quieres comprar un Mac, tienes dudas o deseas probar su sistema operativo antes? Aunque el rendimiento será menor que una máquina real y la experiencia de usuario será peor, usando un <em>hackintosh</em> mediante VirtuaBox ya sea con Windows o GNU/Linux podremos probarlo en detalle y hacernos una idea de su funcionamiento y aspecto visual.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apple.svg" width="200" height="200" alt="Apple" title="Apple"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/macos.svg" width="300" height="70" alt="macOS" title="macOS"  class=""></p>
</div>
<p>Estaría leyendo alguna noticia, ahora no me acuerdo que me despertaría la curiosidad pero me pregunté si es posible usar de forma virtualizada <a href="https://www.apple.com/macos/">macOS</a> con <a href="https://www.virtualbox.org/">VirtualBox</a> tanto en <a href="https://www.microsoft.com/es-es/windows/">Windows</a> como en <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a>. Usar lo que se conoce como <em>hackintosh</em>, esto es <em>hackear</em> el sistema operativo Macinstosh que solo está soportado y destinado funcionar en los equipos de <a href="https://www.apple.com/">Apple</a> para que se ejecute en cualquier un dispositivo no soportado. En la página web <a href="https://hackintosh.com/">hackintosh</a> hay información diversa sobre el tema como instrucciones, vídeos, comunidades, &hellip; Es política de Apple que su sistema operativo solo pueda ser ejecutado en sus equipos que los vende de forma conjunta a un notable precio. No se si alguien usa macOS en un sistema no Mac con garantías de que en alguna actualización el sistema deje de funcionar teniendo en cuenta la política de Apple para con sus productos.</p>
<p>Ya sea por curiosidad o por probar antes de hacer una compra se puede tener interés en cómo probar el sistema operativo macOS para saber si nos convence y nos gusta, sin embargo como macOS solo está soportado en sistemas Apple es difícil probarlo sin haber comprado antes un equipo. VirtualBox es un software de virtualización que permite ejecutar un sistema operativo dentro de otro con el que es posible ejecutar macOS en un sistema que tenga instalado Windows o GNU/Linux o probar GNU/Linux en un sistema Windows o macOS.</p>
<p>Si te gusta y convence macOS estos son varios de los equipos Apple en formato de escritorio y portátil.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08N5RFKN5&amp;linkId=d1f95d35db6b8e0e11e5ba1953c3af47" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08N5TLVQ2&amp;linkId=914771447d7c5205a8454f8a87650415" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B09JQWX6PY&amp;linkId=75a974e00a03e65401da8a06c8165836" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B08F9Y3RJ9&amp;linkId=4c3a173fe7f45b2cc5648f33a881b97e" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=B07922WLRF&amp;linkId=e3a47715b60f846d9d1fd81a4fcb82ae" title="Amazon" class="lozad"></iframe>
</div>
<p>En esta guía muestro como instalar y probar macOS 10.15 Catalina con VirtualBox, los pasos on similares para las versiones 10.14 Mojave y 10.13 High Sierra.</p>
<h3 id="requerimientos-mínimos">Requerimientos mínimos</h3>
<p>Los requerimientos mínimos de macOS en la versión Catalina son los siguientes:</p>
<ul>
<li>4 GiB de memoria RAM</li>
<li>12.5GB de espacio de almacenamiento</li>
<li>MacBook (principios de 2015 o más nuevo)</li>
<li>MacBook Air (mediados de 2012 o más nuevo)</li>
<li>MacBook Pro (mediados de 2012 o más nuevo)</li>
<li>Mac mini (final de 2012 o más nuevo)</li>
<li>iMac (final de 2012 o más nuevo)</li>
<li>iMac Pro (2017)</li>
<li>Mac Pro (final de 2013 o más nuevo)</li>
</ul>
<p>Algunas características requieren una conexión a internet estable con una velocidad de descarga mínima de 5 Mbps para una buena experiencia de usuario. Para comprobar tu conexión haz una prueba de velocidad y estabilidad en <a href="https://www.speedcheck.org/es">www.speedcheck.org</a>.</p>
<p>Dado que al virtualizar se están ejecutando dos sistemas operativos a la vez los requerimientos de la computadora anfitrión donde se ejecutan ambos son más elevados en cuando a memoria y almacenamiento siendo recomendable tener al menos 8 GiB de memoria, asignando 4 GiB a la máquina virtual y 25 GiB de almacenamiento. Para probar macOS Catalina en VirtualBox es necesario asignar a la máquina virtual 8 GiB de modo que es necesario tener en el sistema al menos 16 GiB.</p>
<h3 id="descargar-la-imagen-de-macos-para-virtualbox">Descargar la imagen de macOS para Virtualbox</h3>
<p>Los pasos para instalar macOS en una máquina virtual con VirtualBox requieren descargar un archivo <em>torrent</em> con la imagen del disco duro de macOS y una vez creada la máquina virtual en VirtualBox ejecutar unos comandos para cambiar algunos parámetros del sistema de arranque EFI. Hay que descomprimir la imagen del disco duro para obtener el archivo de extensión <em>vmdk</em> y proceder a crear la máquina virtual. Hay que elegir crear una máquina virtual de tipo macOS, cambiando algunas opciones, asignando unos 2 o 3 GiB de memoria, seleccionar el disco duro con la imagen <em>vmdk</em> descomprimida y cambiar la memoria asignada a la pantalla.</p>
<p>De macOS hay múltiples versiones que con el tiempo Apple ha publicado incorporando mejoras en el sistema operativo. Entre ellas:</p>
<ul>
<li>10.15, Catalina publicada en octubre de 2019</li>
<li>10.14, Mojave con la ultima versión menor de actualización publicada en mayo de 2019</li>
<li>10.13, High Sierra con la ultima versión menor de actualización publicada en septiembre de 2017</li>
</ul>
<p>Los archivos <em>torrent</em> permiten descargar las imágenes de instalación de macOS que ocupan entre 5 y 10 GiB mediante compartición de archivos entre usuarios <em>torrent</em> con programas como <a href="https://transmissionbt.com/">Transmission</a> o <a href="https://www.utorrent.com/intl/es/">uTorrent</a>. Dependiendo de la velocidad de conexión a internet la descarga tarda más o menos.</p>
<ul>
<li><a href="/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/resources/macOS-10.15-Catalina.torrent" title="">Archivo de descarga macOS-10.15-Catalina</a></li>
<li><a href="/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/resources/macOS-10.14-Mojave.torrent" title="">Archivo de descarga macOS-10.14-Mojave</a></li>
<li><a href="/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/resources/macOS-10.13-High-Sierra.torrent" title="">Archivo de descarga macOS-10.13-High-Sierra</a></li>
</ul>
<p>Una vez descargados los archivos hay que descomprimirlos, <strong>si al descomprimir el archivo <em>rar</em> se solicita la contraseña es <code>Geekrar.com</code></strong>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/descargar-macos-virtualbox_hueaac611ca421d82b07680bfb37a0037c_55704_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Descarga de macOS mediante torrent"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/descargar-macos-virtualbox_hueaac611ca421d82b07680bfb37a0037c_55704_300x200_fit_box_3.png" width="275" height="200" alt="Descarga de macOS mediante torrent" title="Descarga de macOS mediante torrent"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/archivo-imagen-macos-catalina-vmdk_hu47bbabd48b51b19759e7515173c1be26_35337_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Archivo VMDK de instalación de macOS para Virtualbox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/archivo-imagen-macos-catalina-vmdk_hu47bbabd48b51b19759e7515173c1be26_35337_300x200_fit_box_3.png" width="300" height="181" alt="Archivo VMDK de instalación de macOS para Virtualbox" title="Archivo VMDK de instalación de macOS para Virtualbox"  class="lozad "></a></p>
<figcaption>Descarga de macOS mediante torrent y archivo VMDK para VirtualBox</figcaption>
</figure>
</div>
<h3 id="crear-la-máquina-virtual-en-virtualbox">Crear la máquina virtual en VirtualBox</h3>
<p>VirtualBox es un software de virtualización gratuito disponible para varios sistemas operativos entre ellos Windows, GNU/Linux y macOS. De modo que probar macOS se puede hacer en cualquiera de estas plataformas. Instalado Virtuabox hay que crear una nueva máquina virtual asignar los parámetros de memoria RAM, almacenamiento de disco, memoria de vídeo y seleccionar usar un disco duro virtual existente que será el archivo <em>vmdk</em> descomprimido descargado mediante <em>torrent</em>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-1_huc83a2a28917b0def8dc9c5c67f258043_95864_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de la máquina virtual macOS con VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-1_huc83a2a28917b0def8dc9c5c67f258043_95864_200x150_fit_box_3.png" width="200" height="132" alt="Configuración de la máquina virtual macOS con VirtualBox" title="Configuración de la máquina virtual macOS con VirtualBox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-2_hu6059666d121d92cfaa0ea04d6ba69118_81917_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de la máquina virtual macOS con VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-2_hu6059666d121d92cfaa0ea04d6ba69118_81917_200x150_fit_box_3.png" width="200" height="140" alt="Configuración de la máquina virtual macOS con VirtualBox" title="Configuración de la máquina virtual macOS con VirtualBox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-3_hucae84facd5ff0b1ea672fe558291eae1_67484_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de la máquina virtual macOS con VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-3_hucae84facd5ff0b1ea672fe558291eae1_67484_200x150_fit_box_3.png" width="200" height="140" alt="Configuración de la máquina virtual macOS con VirtualBox" title="Configuración de la máquina virtual macOS con VirtualBox"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-4_huf679cf2ec231d34ba50b1f9c997dbece_159712_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de la máquina virtual macOS con VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-4_huf679cf2ec231d34ba50b1f9c997dbece_159712_200x150_fit_box_3.png" width="200" height="130" alt="Configuración de la máquina virtual macOS con VirtualBox" title="Configuración de la máquina virtual macOS con VirtualBox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-5_hu8972b1962423777b41a7da2a62b6e35a_163413_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de la máquina virtual macOS con VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-5_hu8972b1962423777b41a7da2a62b6e35a_163413_200x150_fit_box_3.png" width="200" height="131" alt="Configuración de la máquina virtual macOS con VirtualBox" title="Configuración de la máquina virtual macOS con VirtualBox"  class="lozad "></a></p>
<figcaption>Configuración de la máquina virtual macOS con VirtualBox</figcaption>
</figure>
</div>
<p>Una vez creada la máquina virtual antes de iniciarla si se usa Windows hay que ejecutar los siguientes comandos en modo administrador, sustituyendo <em>macOS 10.15 Catalina</em> por el nombre que le hayamos dado a la máquina virtual al crearla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-Batchfile" data-lang="Batchfile"><span class="k">cd</span> <span class="s2">&#34;C:\Program Files\Oracle\VirtualBox\&#34;</span>&#10;VBoxManage.exe modifyvm <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> --cpuidset 00000001 000106e5 00100800 0098e3fd bfebfbff&#10;VBoxManage.exe setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/efi/0/Config/DmiSystemProduct&#34;</span> <span class="s2">&#34;iMac11,3&#34;</span>&#10;VBoxManage.exe setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/efi/0/Config/DmiSystemVersion&#34;</span> <span class="s2">&#34;1.0&#34;</span>&#10;VBoxManage.exe setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/efi/0/Config/DmiBoardProduct&#34;</span> <span class="s2">&#34;Mac-F2238BAE&#34;</span>&#10;VBoxManage.exe setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/smc/0/Config/DeviceKey&#34;</span> <span class="s2">&#34;ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc&#34;</span>&#10;VBoxManage.exe setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC&#34;</span> 1</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>windows.cmd</span>
    </div>
</div>
<p>En el caso de Linux el archivo de comandos es similar aunque no es necesario ejecutar los comandos con permiso de administrador. Igualmente hay que sustituir <em>macOS 10.15 Catalina</em> por el nombre que le hayamos dado a la máquina virtual al crearla.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">VBoxManage modifyvm <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> --cpuidset <span class="m">00000001</span> 000106e5 <span class="m">00100800</span> 0098e3fd bfebfbff&#10;VBoxManage setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/efi/0/Config/DmiSystemProduct&#34;</span> <span class="s2">&#34;iMac11,3&#34;</span>&#10;VBoxManage setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/efi/0/Config/DmiSystemVersion&#34;</span> <span class="s2">&#34;1.0&#34;</span>&#10;VBoxManage setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/efi/0/Config/DmiBoardProduct&#34;</span> <span class="s2">&#34;Mac-F2238BAE&#34;</span>&#10;VBoxManage setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/smc/0/Config/DeviceKey&#34;</span> <span class="s2">&#34;ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc&#34;</span>&#10;VBoxManage setextradata <span class="s2">&#34;macOS 10.15 Catalina&#34;</span> <span class="s2">&#34;VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC&#34;</span> <span class="m">1</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>linux.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-6_hu30e628a7949a85666ec3d1366ec191c0_70083_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Configuración de la máquina virtual macOS con VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/configuracion-maquina-virtual-macos-6_hu30e628a7949a85666ec3d1366ec191c0_70083_300x200_fit_box_3.png" width="300" height="132" alt="Configuración de la máquina virtual macOS con VirtualBox" title="Configuración de la máquina virtual macOS con VirtualBox"  class="lozad "></a></p>
<figcaption>Comandos de configuración de la máquina virtual macOS con VirtualBox</figcaption>
</figure>
</div>
<p>Hecho estos dos pasos podemos proceder a iniciar la máquina virtual.</p>
<h3 id="instalar-macos-en-una-máquina-virtual">Instalar macOS en una máquina virtual</h3>
<p>Al iniciar la ejecución de la máquina virtual de macOS en los primeros segundos empiezan a salir unos cuantos mensajes en modo texto hasta que se inicia el sistema gráfico con un proceso que inicia la instalación que tarda varios minutos pudiendo llegar a más de la media hora.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/inicio-instalacion-macos-1_hued2cd836c4b83aa25372de02c2dd74d8_71986_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/inicio-instalacion-macos-1_hued2cd836c4b83aa25372de02c2dd74d8_71986_300x200_fit_box_3.png" width="240" height="200" alt="Inicio de la instalación de macOS Catalina" title="Inicio de la instalación de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/inicio-instalacion-macos-2_huc20ae19b41286941b6f5e3b03a64ce3c_29290_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/inicio-instalacion-macos-2_huc20ae19b41286941b6f5e3b03a64ce3c_29290_300x200_fit_box_3.png" width="240" height="200" alt="Inicio de la instalación de macOS Catalina" title="Inicio de la instalación de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/inicio-instalacion-macos-3_hua2c37d01d257c788a428751c828c6fbc_269665_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de la instalación de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/inicio-instalacion-macos-3_hua2c37d01d257c788a428751c828c6fbc_269665_300x200_fit_box_3.png" width="240" height="200" alt="Inicio de la instalación de macOS Catalina" title="Inicio de la instalación de macOS Catalina"  class="lozad "></a></p>
<figcaption>Inicio de la instalación de macOS Catalina</figcaption>
</figure>
</div>
<p>Después de completar la instalación inicial, un reinicio y otros minutos de espera se inicia el asistente de instalación y configuración inicial que consta de varios pasos con una pantalla de bienvenida seguido de otras para introducir algunos datos como el idioma, la disposición del teclado, opciones de localización, privacidad, &hellip; en los que básicamente es dar varias veces al botón siguiente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-1_hu1037fe66ee3aa005a944de78d3560de8_258284_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-1_hu1037fe66ee3aa005a944de78d3560de8_258284_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-2_hub79f015ad38f92a1c54c2804336d7d3b_225533_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-2_hub79f015ad38f92a1c54c2804336d7d3b_225533_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-3_hu7ed440e47c2e0cb66aab25183dc24121_205663_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-3_hu7ed440e47c2e0cb66aab25183dc24121_205663_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-4_hu1bf3ef37d094636e8f57c4bae685c092_224232_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-4_hu1bf3ef37d094636e8f57c4bae685c092_224232_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-5_hu9105b4fcc39c8a4326f3a97552ac1427_233258_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-5_hu9105b4fcc39c8a4326f3a97552ac1427_233258_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-6_hu9dc6f5ff68e34b4e8e75b5e10675a1ab_230762_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-6_hu9dc6f5ff68e34b4e8e75b5e10675a1ab_230762_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-7_hub6e81922a58dd54e1d807c97c74f22f7_244140_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-7_hub6e81922a58dd54e1d807c97c74f22f7_244140_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-8_huc13f6a10b4ebc5e5ea2d8297e2b7a209_277186_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-8_huc13f6a10b4ebc5e5ea2d8297e2b7a209_277186_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-9_hue274f505edab535f277742a822fc90cf_217909_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-9_hue274f505edab535f277742a822fc90cf_217909_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-10_hu2c1176acdefe14c14ab5209276ee4f3a_221823_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-10_hu2c1176acdefe14c14ab5209276ee4f3a_221823_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-11_hu84a227982677ddf82abfb5372b9ef4c9_211745_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-11_hu84a227982677ddf82abfb5372b9ef4c9_211745_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-12_hu05c5982c7716bf137f4bda70a06ebede_243790_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-12_hu05c5982c7716bf137f4bda70a06ebede_243790_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-13_hu705117ded9443ce449a30b779e76b09c_345696_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-13_hu705117ded9443ce449a30b779e76b09c_345696_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-14_hua6a9ef3deb7822717614cffde58e67ee_341874_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-14_hua6a9ef3deb7822717614cffde58e67ee_341874_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-15_hu6ff7f73cec46084504e279c52026dcc1_353275_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-15_hu6ff7f73cec46084504e279c52026dcc1_353275_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-16_hu52626fcb23528949cc9a738213ac374d_280286_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-16_hu52626fcb23528949cc9a738213ac374d_280286_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-17_hua0611c3d4f79a96b3bfbeb76c4a120fc_193996_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente de instalación y configuración inicial de macOS Catalina"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/asistente-de-instalacion-y-configuracion-inicial-17_hua0611c3d4f79a96b3bfbeb76c4a120fc_193996_200x150_fit_box_3.png" width="180" height="150" alt="Asistente de instalación y configuración inicial de macOS Catalina" title="Asistente de instalación y configuración inicial de macOS Catalina"  class="lozad "></a></p>
<figcaption>Asistente de instalación y configuración inicial de macOS Catalina</figcaption>
</figure>
</div>
<h3 id="primer-inicio-de-sesión-con-macos">Primer inicio de sesión con macOS</h3>
<p>Completados los pasos del asistente se entra en el escritorio con el fondo de pantalla característico según la versión de macOS y algunas de las aplicaciones incorporadas en el propio sistema por defecto en la barra de tareas inferior.</p>
<p>También se puede probar a <a href="https://picodotdev.github.io/blog-bitix/2016/11/instalar-programas-con-homebrew-en-macos/">instalar otros programas con Homebrew</a>, para instalar programas de la <a href="https://www.apple.com/es/ios/app-store/">Apple Store</a> es necesario tener una cuenta.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/primer-inicio-macos-1_hu4c360b647f3c6757fb631d8ef1479561_1185611_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Primer inicio de macOS Catalina en VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/primer-inicio-macos-1_hu4c360b647f3c6757fb631d8ef1479561_1185611_200x150_fit_box_3.png" width="180" height="150" alt="Primer inicio de macOS Catalina en VirtualBox" title="Primer inicio de macOS Catalina en VirtualBox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/primer-inicio-macos-2_hubd0bbfbb8235d2f0ed3f188111f1e7bd_894758_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Primer inicio de macOS Catalina en VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/primer-inicio-macos-2_hubd0bbfbb8235d2f0ed3f188111f1e7bd_894758_200x150_fit_box_3.png" width="180" height="150" alt="Primer inicio de macOS Catalina en VirtualBox" title="Primer inicio de macOS Catalina en VirtualBox"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/primer-inicio-macos-3_hu05245d39d88aecb6999de2b61001464b_699651_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Primer inicio de macOS Catalina en VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/primer-inicio-macos-3_hu05245d39d88aecb6999de2b61001464b_699651_200x150_fit_box_3.png" width="180" height="150" alt="Primer inicio de macOS Catalina en VirtualBox" title="Primer inicio de macOS Catalina en VirtualBox"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/primer-inicio-macos-4_hu7bfaeaf233495c6f7083c08ea074ce90_464959_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Primer inicio de macOS Catalina en VirtualBox"><img src="https://picodotdev.github.io/blog-bitix/2016/09/como-instalar-y-probar-macos-con-virtualbox-en-windows-o-gnu-linux/images/primer-inicio-macos-4_hu7bfaeaf233495c6f7083c08ea074ce90_464959_300x150_fit_box_3.png" width="180" height="150" alt="Primer inicio de macOS Catalina en VirtualBox" title="Primer inicio de macOS Catalina en VirtualBox"  class="lozad "></a></p>
<figcaption>Primer inicio de macOS Catalina en VirtualBox</figcaption>
</figure>
</div>
<h3 id="conclusión">Conclusión</h3>
<p>Como partidario del software libre y la privacidad además de <a href="https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/">los ínfimos impuestos que paga Apple</a> usando reprobable ingeniería fiscal y su software privativo no recomiendo usar un Mac pero si alguien quiere probar este sistema operativo antes de decidirse a hacer una compra usarlo de forma virtualizado es una buena ayuda para tomar una decisión y ver si nos gusta su sistema operativo aparte del propio equipo junto con su precio que podemos ver en las tiendas. Si no nos convence ni su software ni su abultado precio podemos optar por un portátil de <a href="https://slimbook.es/">Slimbook</a> mucho más económico y con características notables con los que no tendremos que pagar tampoco <a href="https://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.htmlindex-amp.html">el impuesto Windows</a> ya que podemos elegir entre varias la distribución GNU/Linux preinstalada que deseamos.</p>
<p>Hay que tener en cuenta que al probar macOS con VirtualBox el rendimiento de la máquina virtual no será exactamente el mismo que en un equipo real por la sobrecarga impuesta por la virtualización. La experiencia de usuario puede cambiar significativamente junto con el hecho de que los portátiles Mac tiene una pantalla bastante mejor y con más resolución que la mayoría de portátiles diseñados para Windows o GNU/Linux y un SSD de gran rendimiento además de la falta de su <em>touchpad</em>, todo esto puede marcar diferencias en la experiencia de uso global.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.geekrar.com/install-macos-catalina-on-virtualbox-on-windows-pc/">Install macOS Catalina on VirtualBox on Windows PC</a></li>
<li><a href="http://www.wikigain.com/install-macos-sierra-10-12-virtualbox/">How to Install macOS Sierra 10.12 on VirtualBox?</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="apple"/>
            
                <category term="gnu-linux"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/</id>
        <title>Autenticación con OAuth y Keycloak en un servicio REST con JAX-RS y Spring Boot</title>
        <updated>2016-10-07T09:00:00+02:00</updated>
        <published>2016-09-24T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Keycloak es un proveedor de OAuth que podemos usar en nuestras aplicaciones y servicios para proporcionar autenticación, autorización, SSO y también añadir seguridad a los servicios REST que desarrollemos como muestro en este artículo. OAuth tiene varias ventajas sobre usar autenticación <em>Basic</em>.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/keycloak.png" width="200" height="45" alt="Keycloak" title="Keycloak"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<p>Una forma de autenticar a los clientes de un servicio REST es usar <a href="https://en.wikipedia.org/wiki/Basic_access_authentication">autenticación Basic</a> que se basa en añadir una cabecera en la petición en la que se incluye un usuario y contraseña. La autenticación Basic es sencilla pero para que sea segura ha de <a href="https://picodotdev.github.io/blog-bitix/2014/02/configurar-ssl-en-un-servidor-tomcat-jboss-wildfly-lighttpd-nginx-apache/">usar el protocolo seguro HTTPS</a>.</p>
<p>Sin embargo, presenta otros inconvenientes y es que si al servicio van a acceder varios clientes y a uno queremos impedirle el acceso no podremos hacerlo sin cambiar el usuario y contraseña lo que obligará al resto de clientes actualizarse para usar las nuevas credenciales si las comparten, que no siempre es posible sobre todo si esos clientes están fuera de nuestro control. Para solventar el segundo problema tenemos la posibilidad de securizar el servicio REST con el <a href="https://oauth.net/">protocolo OAuth</a>.</p>
<p>Teniendo un <a href="https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/">servicio web REST implementado con JAX-RS y Spring Boot</a> añadirle seguridad con OAuth mediante el proveedor <a href="https://www.keycloak.org/">Keycloak</a> es lo que muestro en este artículo. En el servicio REST bastará que usemos el <a href="https://keycloak.gitbooks.io/securing-client-applications-guide/content/v/latest/topics/oidc/java/java-adapters.html">adaptador para Spring Boot de Keycloak</a> y añadamos en Keycloak cierta configuración que consistirá en un <em>realm</em> y el registro de un cliente. Para acceder al servicio REST usaremos el flujo <em>client_credentials</em> que nos permitirá obtener un <em>token</em> usando las credenciales del cliente.</p>
<p>Iniciado Keycloak con <a href="https://www.docker.com/">Docker</a> y <a href="https://docs.docker.com/compose/">Docker Compose</a> accedemos al panel de administración con el navegador, en mi caso en <em>http://localhost:9080</em> con el usuario <em>admin</em> y contraseña <em>admin</em> según lo indicado en el archivo <em>docker-compose.yml</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">keycloak</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">jboss/keycloak</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ports</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="m">9080</span><span class="p">:</span><span class="m">8080</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">environment</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">KEYCLOAK_USER=admin</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>- <span class="l">KEYCLOAK_PASSWORD=admin</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ docker-compose up&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>docker-compose-up.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-login_hu0ec9394193d8bbbf68380a77dba4d5a3_130625_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Inicio de sesión de Keycloak"><img src="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-login_hu0ec9394193d8bbbf68380a77dba4d5a3_130625_300x200_fit_box_3.png" width="300" height="183" alt="Inicio de sesión de Keycloak" title="Inicio de sesión de Keycloak"  class="lozad "></a></p>
</figure>
</div>
<p>Creamos un <em>realm</em>, en el ejemplo llamado <em>springbootjaxrs</em> y un cliente con id <em>client</em>, además crearemos un rol <em>api</em> y se lo asignaremos al cliente.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-add-client_hu0d578958d6bc77546f209532dc988bf2_70695_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Registro del cliente"><img src="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-add-client_hu0d578958d6bc77546f209532dc988bf2_70695_300x200_fit_box_3.png" width="300" height="164" alt="Registro del cliente" title="Registro del cliente"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-add-role_huf5ee2852477b4051ac9706654bff3bd2_68986_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Creación de rol"><img src="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-add-role_huf5ee2852477b4051ac9706654bff3bd2_68986_300x200_fit_box_3.png" width="300" height="183" alt="Creación de rol" title="Creación de rol"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-service-account-roles_hu476d0958a34d6ac0a8cdc494ca9a225f_88309_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asignación de roles al cliente"><img src="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-service-account-roles_hu476d0958a34d6ac0a8cdc494ca9a225f_88309_300x200_fit_box_3.png" width="300" height="183" alt="Asignación de roles al cliente" title="Asignación de roles al cliente"  class="lozad "></a></p>
</figure>
</div>
<p>Una vez realizada la configuración en el servidor de OAuth/Keycloak obtendremos la configuración para el adaptador de Keycloak para el servicio REST desde la pestaña <em>Installation</em> que añadiremos en el fichero de configuración de Spring Boot <em>application.yml</em>. Además, indicaremos que el cliente solo aceptará <em>access tokens</em> mediante la opción <em>bearer-only</em> de modo que no hará redirecciones para autenticar.</p>
<p>Indicaremos también el rol que deberá poseer el cliente para acceder al servicio REST junto que URLs del servicio estarán autenticadas por OAuth. Añadida la configuración al archivo <em>application.yml</em> el servicio REST es totalmente inconsciente de la autenticación que se realizará con OAuth y Keycloak.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">server</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">port</span><span class="p">:</span><span class="w"> </span><span class="m">8443</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">ssl</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-store</span><span class="p">:</span><span class="w"> </span><span class="l">classpath:keystore.jks</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-store-password</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="nt">key-password</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">&#10;</span><span class="w">&#10;</span><span class="w"></span><span class="nt">keycloak</span><span class="p">:</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">realm</span><span class="p">:</span><span class="w"> </span><span class="l">springbootjaxrs</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">realmKey</span><span class="p">:</span><span class="w"> </span><span class="l">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkTsyao42k7UyRE5LLlHXUaA7yM5MIMdQYqhaypZCOC5tOX8c+QlbBVzyhS55sDqmar5pelKyHT/6Zpr40GtxCnOqTBJ1pI28QXdOnPC8OVXJSNttuyeb2b3PK6xstm/jCpi1Dduw7fVmQDBKUXhmQwTdoOGQe8F3O0OaL2ht/H3Tu+LcvobWGtfN2vj1LACfUCO4qom9soWS755Km7KqE2xNnOPaEZ+IxDfTNJu7VHekak+OjbjM3EZdhOWkhw6M3+pnQ+9FKgHczPfYHiIG3wRlQm2ly7FQUnW1LKnvrMsjdaTlebCDnSmCcn6ByT+vC53URbGdb8a0+UAh+66kowIDAQAB</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">bearer-only</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">auth-server-url</span><span class="p">:</span><span class="w"> </span><span class="l">http://localhost:9080/auth</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">ssl-required</span><span class="p">:</span><span class="w"> </span><span class="l">external</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">resource</span><span class="p">:</span><span class="w"> </span><span class="l">client</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">use-resource-role-mappings</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">&#10;</span><span class="w">  </span><span class="nt">securityConstraints[0]</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">securityCollections[0]</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">api</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">authRoles</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">api</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span><span class="nt">patterns</span><span class="p">:</span><span class="w">&#10;</span><span class="w">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span>- <span class="l">/api/*</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>application.yml</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrsoauth</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.ws.rs.GET</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.ws.rs.Path</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.ws.rs.Produces</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.ws.rs.QueryParam</span><span class="o">;</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="nd">@Path</span><span class="o">(</span><span class="s">&#34;/message&#34;</span><span class="o">)</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MessageResource</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">MessageService</span> <span class="n">messageService</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GET</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Produces</span><span class="o">(</span><span class="s">&#34;application/json&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Message</span> <span class="nf">message</span><span class="o">(</span><span class="nd">@QueryParam</span><span class="o">(</span><span class="s">&#34;message&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">messageService</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MessageResource.java</span>
    </div>
</div>
<p>Iniciado Keycloak y el servicio REST con el comando <code>gradlew run</code> podemos iniciar el proceso de obtención de un <em>access token</em> y llamar al servicio proporcionando el <em>access token</em> obtenido y ver que pasa si no proporcionamos <em>token</em> o uno modificado o inválido. Para obtener el <em>access token</em> podemos emplear <em>curl</em> accediendo al <em>endpoint</em> de Keycloak para obtenerlos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -i http://localhost:9080/auth/realms/springbootjaxrs/.well-known/openid-configuration&#10;$ curl -i http://localhost:9080/auth/realms/springbootjaxrs/protocol/openid-connect/token -d <span class="s2">&#34;grant_type=client_credentials&amp;client_id=client&amp;client_secret=751e83fe-ee29-4239-81f8-ceafab189c66&#34;</span>&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-token.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-access-token_hu3c9c3fd1cd5f0d81ab0d4597529d12ea_278842_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Obtención de un token"><img src="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/keycloak-access-token_hu3c9c3fd1cd5f0d81ab0d4597529d12ea_278842_300x200_fit_box_3.png" width="300" height="164" alt="Obtención de un token" title="Obtención de un token"  class="lozad "></a></p>
</figure>
</div>
<p>Obtenido el <em>access token</em> si no lo proporcionamos en la llamada al servicio REST observaremos que la respuesta que obtenemos es un <a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes">código de estado HTTP 401</a> indicando que se necesitan proporcionar las credenciales que con OAuth es un <em>token</em>.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -ik https://localhost:8443/api/message?message<span class="o">=</span>Hola&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl-401.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/client-no-token_huea5aeabab77440df127b63b74c89a6dc_33962_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Llamada al servicio REST sin token"><img src="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/client-no-token_huea5aeabab77440df127b63b74c89a6dc_33962_300x200_fit_box_3.png" width="300" height="195" alt="Llamada al servicio REST sin token" title="Llamada al servicio REST sin token"  class="lozad "></a></p>
</figure>
</div>
<p>Proporcionando el token mediante una cabecera de la petición el servicio nos devolverá los datos que proporciona. Si el <em>token</em> no es válido obtendremos un error HTTP 401.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -ik -H <span class="s2">&#34;Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJteEh2a2FwRC1xSXRUVEhqZXZnRDdxYXVKeXU5Ry01RFp4VVpqMjJlZVc0In0.eyJqdGkiOiJiMWY0OTA5YS00N2JkLTRkNGMtOGVlNS0yMTE1ZmMxODliMGQiLCJleHAiOjE0NzQ3MDg4ODMsIm5iZiI6MCwiaWF0IjoxNDc0NzA4NTgzLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjkwODAvYXV0aC9yZWFsbXMvc3ByaW5nYm9vdGpheHJzIiwiYXVkIjoiY2xpZW50Iiwic3ViIjoiNzcyZWU4MDktMDJjOC00NGEyLTllMTctYTUxMzllYTkwM2Y5IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiY2xpZW50IiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiNzY2MzY2OTktZTQzOS00ZjE4LTgxMzMtODFjYTU4NjNhZjg0IiwiYWNyIjoiMSIsImNsaWVudF9zZXNzaW9uIjoiYjUwYTRjOWQtMDI1Yy00ZTU1LWFjOWYtYmUxMzE3YTY5ZGUxIiwiYWxsb3dlZC1vcmlnaW5zIjpbXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImFwaSJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImNsaWVudCI6eyJyb2xlcyI6WyJhcGkiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJ2aWV3LXByb2ZpbGUiXX19LCJjbGllbnRIb3N0IjoiMTcyLjE3LjAuMSIsImNsaWVudElkIjoiY2xpZW50IiwibmFtZSI6IiIsInByZWZlcnJlZF91c2VybmFtZSI6InNlcnZpY2UtYWNjb3VudC1zcHJpbmdib290amF4cnMiLCJjbGllbnRBZGRyZXNzIjoiMTcyLjE3LjAuMSIsImVtYWlsIjoic2VydmljZS1hY2NvdW50LXNwcmluZ2Jvb3RqYXhyc0BwbGFjZWhvbGRlci5vcmcifQ.QvS5azEf5DgHon-Nd5ghhB95CR7z7aVxz611gfWOfEOMxhHlVvahcyCYzHpott1AOj7h9tbjNJe1abUX_BlVlbQ7jvQg_zp1h67dHl5u1kdqxUZlWaucp0bWaDlmfHQV-JJOOp7lpfWcM2H63A0fu6uMVIrumKlwaprw_R5_wTxmEuNdekEVCRaPh2X2s3c92AGOWtqvfDed5nW6DECH6mt1I4nA56RQPs0FAb6DTh-oYR-ZHFsDTprrUu-HZ5R9bl8459zyqFDl08e9qe8HgdSd5vAiHsfmzMd2T6ZqCRHI391rIs-at947OKQH82r4wvSYCwlTB75m2Lhzidto_A&#34;</span> https://localhost:8443/api/message?message<span class="o">=</span>Hola&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/client-ouath_hu8975a3bd1d49dfd03cc9671f420fb963_127240_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Llamada al servicio REST con token"><img src="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/client-ouath_hu8975a3bd1d49dfd03cc9671f420fb963_127240_300x200_fit_box_3.png" width="300" height="164" alt="Llamada al servicio REST con token" title="Llamada al servicio REST con token"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/client-token-tampered_hu8975a3bd1d49dfd03cc9671f420fb963_126066_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Llamada al servicio REST con token inválido"><img src="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/images/client-token-tampered_hu8975a3bd1d49dfd03cc9671f420fb963_126066_300x200_fit_box_3.png" width="300" height="164" alt="Llamada al servicio REST con token inválido" title="Llamada al servicio REST con token inválido"  class="lozad "></a></p>
</figure>
</div>
<p>Para usar Keycloak en una aplicación Java con Spring Boot deberemos añadir algunas dependencias al proyecto que usando <a href="https://gradle.org/">Gradle</a> como herramienta de construcción serían las siguientes.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="o">...</span>&#10;&#10;<span class="n">dependencies</span> <span class="o">{</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-jersey&#39;</span><span class="o">)</span>&#10;&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.keycloak:keycloak-spring-boot-adapter:2.2.0.Final&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.keycloak:keycloak-tomcat8-adapter:2.2.0.Final&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.keycloak:keycloak-core:2.2.0.Final&#39;</span><span class="o">)</span>&#10;&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.apache.httpcomponents:httpcomponents-client:4.5.2&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;javax.json:javax.json-api:1.0&#39;</span><span class="o">)</span>&#10;	<span class="n">compile</span><span class="o">(</span><span class="s1">&#39;org.glassfish:javax.json:1.0.4&#39;</span><span class="o">)</span>&#10;&#10;	<span class="n">testCompile</span><span class="o">(</span><span class="s1">&#39;org.springframework.boot:spring-boot-starter-test&#39;</span><span class="o">)</span>&#10;<span class="o">}</span>&#10;&#10;<span class="o">...</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>build.gradle</span>
    </div>
</div>
<p>Un buen libro sobre OAuth que he leído es <a href="https://amzn.to/2cUkF9d">Mastering OAuth 2.0</a> que explica detalladamente el protocolo OAuth junto con el resto de formas de obtener un <em>token</em> además del mostrado en este artículo usando las credenciales del cliente.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1784395404&amp;linkId=726dc0d3e4914bc672e6b127da045db2&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<p>En el siguiente artículo mostraré un <a href="https://picodotdev.github.io/blog-bitix/2016/10/cliente-de-un-servicio-rest-autenticado-con-oauth2-en-java/">cliente del servicio REST autenticado con OAuth en Java</a> que haga las mismas llamadas que con <em>curl</em> pero usando código Java mediante la librería <a href="https://hc.apache.org/">HttpComponents</a>.</p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringBootJaxrsOauth">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradle run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/">Servicio web REST implementado con JAX-RS y Spring Boot</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/10/integrar-autenticacion-oauth-con-keycloak-shiro-apache-tapestry-y-spring-boot/">Integrar autenticación OAuth con Keycloak, Shiro, Apache Tapestry y Spring Boot&quot;</a></li>
<li><a href="https://blog.pivotal.io/pivotal-cloud-foundry/products/securing-restful-web-services-with-oauth2">Securing RESTful Web Services with OAuth2</a></li>
<li><a href="http://docs.apigee.com/api-services/content/oauth-20-client-credentials-grant-type">Implementing the client credentials grant type</a></li>
<li><a href="https://stackoverflow.com/questions/28658735/what-are-keycloaks-oauth2-openid-connect-endpoints">What are Keycloak’s OAuth2 / OpenID Connect endpoints?</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/series/docker/">Serie de artículos sobre Docker</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/monitorizar-con-eventos-de-google-analytics-una-pagina-web/</id>
        <title>Monitorizar con eventos de Google Analytics una página web</title>
        <updated>2016-09-19T23:00:00+02:00</updated>
        <published>2016-09-18T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/monitorizar-con-eventos-de-google-analytics-una-pagina-web/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Conociendo cómo usar los eventos de Analytics podemos conocer información interesante acerca de qué forma los usuarios interactúan con nuestra propia página web. Cualquier cosa que podamos realizar con JavaScript o ante cualquier evento que podamos reaccionar podemos medirla con Analytics.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/google-analytics.svg" width="200" height="200" alt="Google Analytics" title="Google Analytics"  class=""></p>
</div>
<p>No se mucho de <a href="https://www.google.es/intl/es/analytics/">Google Analytics</a> únicamente lo que he aprendido aplicándolo en mi propia bitácora. Cuando <a href="https://picodotdev.github.io/blog-bitix/2013/12/hola-nuevo-mundo/">cambié de herramienta para generar de forma estática la bitácora</a> pude personalizar en mucha mayor medida que lo que podía primeramente con <a href="https://www.blogger.com/">Blogger</a> y después tenía con <a href="http://octopress.org/">Octopress</a>.</p>
<p>Google Analytics además de proporcionarnos diversa información interesante sobre las visitas que recibimos en una página web puede servirnos para analizar el comportamiento de los usuarios, como interaccionan con la página, qué acciones realizan o que funcionalidades son usadas. La forma con la que podemos agregar información propia de la aplicación o página web es mediante los eventos de Analytics. Después de <a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/">instalar el <em>script</em> de Analytics</a> podemos enviar eventos simplemente con la siguiente linea de código JavaScript.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;ins.adsbygoogle&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;mouseenter&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;  <span class="nx">ga</span><span class="p">(</span><span class="s1">&#39;send&#39;</span><span class="p">,</span> <span class="s1">&#39;event&#39;</span><span class="p">,</span> <span class="s1">&#39;ad&#39;</span><span class="p">,</span> <span class="s1">&#39;enter&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;data-type&#39;</span><span class="p">),</span> <span class="p">{</span><span class="s1">&#39;nonInteraction&#39;</span><span class="o">:</span> <span class="mi">1</span><span class="p">});</span>&#10;<span class="p">});</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ad-enter.js</span>
    </div>
</div>
<p>La información del evento de compone de categoría (<em>category</em>), acción (<em>action</em>), etiqueta (<em>opt_label</em>), valor  (<em>opt_value</em>) y si no supone interacción (<em>opt_noninteraction</em>). Deberemos proporcionar valores según queramos estructurar los eventos obligatoriamente para categoría y acción siendo el resto opcionales. En mi bitácora uso Analytics para además de visualizar la información que proporciona sobre visitas, ubicación de los usuarios, idioma, plataforma y navegador que usan, páginas más visitadas, origen de las visitas para lanzar unos cuantos eventos que me proporcionen información sobre las pulsaciones que se realizan en el menú de categorías y en los enlaces de redes sociales, en la lista de artículos recientes, artículos destacados y en el <em>widget</em> de ShareThis y si se hace en el del inicio del artículo o en el del final. En la sección <em>Comportamiento &gt; Eventos</em> se agrega toda la información de los eventos, además podremos monitorizar en tiempo real los eventos que se estén produciendo en la sección <em>Tiempo real &gt; Eventos</em>.</p>
<p>El parámetro <em>opt_noninteraction</em> afecta al porcentaje de rebote, un evento interactivo se considerará como una acción que ha realizado el usuario después de visitar la página, si ese evento lo consideramos como un objetivo podemos hacer que esa interacción no se considere en el porcentaje de rebote. Por ejemplo, si el usuario permanece en la página 30 segundos podemos lanzar un evento que indique tal circunstancia con un <em>timeout</em> y esa visita no se considere en el porcentaje de rebote.</p>
<p>Podemos medir cualquier cosa que deseemos incluso podemos conocer cuantos usuarios usan un bloqueador de anuncios como <a href="https://adblockplus.org/es/">AdBlock</a>. Este es el código JavaScript que uso para conocer cuantos usuarios lo tiene activado o no.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>&#10;  <span class="kd">var</span> <span class="nx">ads</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;ins.adsbygoogle&#39;</span><span class="p">);</span>&#10;  <span class="kd">var</span> <span class="nx">adblock</span> <span class="o">=</span> <span class="p">(</span><span class="nx">ads</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">ads</span><span class="p">.</span><span class="nx">html</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s/g</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">).</span><span class="nx">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">);</span>&#10;  <span class="nx">ga</span><span class="p">(</span><span class="s1">&#39;send&#39;</span><span class="p">,</span> <span class="s1">&#39;event&#39;</span><span class="p">,</span> <span class="s1">&#39;client&#39;</span><span class="p">,</span> <span class="s1">&#39;adblock&#39;</span><span class="p">,</span> <span class="p">(</span><span class="nx">adblock</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;true&#39;</span> <span class="o">:</span> <span class="s1">&#39;false&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;nonInteraction&#39;</span><span class="o">:</span> <span class="mi">1</span><span class="p">});</span>&#10;&#10;  <span class="c1">// ...&#10;</span><span class="c1"></span><span class="p">},</span> <span class="mi">3000</span><span class="p">);</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ad-block.js</span>
    </div>
</div>
<p>En la sección <a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/events">Seguimiento de eventos</a> de la documentación de Google Analytics y en el resto de secciónes hay más detalles sobre esta herramienta. Para cualquier cosa que podamos reaccionar mediante un evento con JavaScript podemos medirla con Analytics, sirviéndonos para extraer información valiosa sobre los usuarios que nos permitan medir, entender y luego mejorar la experiencia de usuario de nuestra propia página web.</p>
<p>Como para cualquier otra cosa en la que queramos profundizar una buena forma es con algunos libros específicos dedicados al tema. Los siguientes son dos libros de los <a href="https://amzn.to/2cH8SXR">muchos libros sobre Google Analytics</a> disponibles en <a href="https://amzn.to/2flFhHA">Amazon</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0596158009&amp;linkId=4babfb60d80236251c0ef398bc3ab757&amp;internal=1" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=148420266X&amp;linkId=c179f357fbd31e18d25e93fd13c9729e&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/</id>
        <title>Ejemplo de API REST en Java con JAX-RS y Spring Boot</title>
        <updated>2016-09-17T12:00:00+02:00</updated>
        <published>2016-09-17T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/ejemplo-de-api-rest-en-java-con-jax-rs-y-spring-boot/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/java.svg" width="200" height="366" alt="Java" title="Java"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/spring.svg" width="200" height="200" alt="Spring Framework" title="Spring Framework"  class=""></p>
</div>
<p>En Java a través de JAX-RS, una de entre las varias <a href="https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/">especificaciones de JavaEE</a>, podemos desarrollar servicios web basados en <a href="https://es.wikipedia.org/wiki/Representational_State_Transfer"><abbr title="Representational State Transfer">REST</abbr></a> y <a href="https://json.org/"><abbr title="JavaScript Object Notation">JSON</abbr></a>. Estos servicios web al usar la infraestructura de la web y el protocolo HTTP podemos hacer uso de facilidades que proporciona como <a href="https://picodotdev.github.io/blog-bitix/2016/07/configurar-nginx-para-cachear-respuestas-del-servidor-de-aplicaciones/">cacheo</a>, <a href="https://picodotdev.github.io/blog-bitix/2016/06/como-redirigir-peticiones-de-http-a-https-en-nginx-apache-tomcat-jetty-y-wildfly/">protocolo seguro</a>, <a href="https://picodotdev.github.io/blog-bitix/2016/02/introduccion-al-protocolo-http-2/">HTTP/2</a>, <a href="https://picodotdev.github.io/blog-bitix/2016/07/como-optimizar-un-sitio-web-con-compresion-gzip-en-nginx-y-apache-httpd/">compresión</a> o autenticación. Usando <a href="https://projects.spring.io/spring-boot/">Spring Boot</a> podemos desarrollar servicios web autocontenidos al igual que podemos hacer con las aplicaciones web tradicionales.</p>
<p>Para facilitar el inicio de los proyectos podemos usar <a href="https://start.spring.io/">Spring Initializr</a> seleccionando los módulos web y JAX-RS con la implementación de referencia <a href="https://jersey.github.io/">Jersey</a>. Al proyecto creado deberemos añadir los servicios que queramos proporcionar. En el ejemplo añadiré uno muy sencillo que devuelva un nuevo mensaje creado en un servicio inyectado en la clase del recurso del servicio REST.</p>
<p>Esta es la definición del <em>bean</em> del servicio que creará el mensaje para el contenedor de inversión de control, también definimos el recurso del servicio REST para Jersey.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrs</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>&#10;&#10;<span class="nd">@SpringBootApplication</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>&#10;&#10;	<span class="nd">@Bean</span>&#10;	<span class="n">MessageService</span> <span class="nf">buillMessageService</span><span class="o">()</span> <span class="o">{</span>&#10;		<span class="k">return</span> <span class="k">new</span> <span class="n">DefaultMessageService</span><span class="o">();</span>&#10;	<span class="o">}</span>&#10;&#10;	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>&#10;		<span class="n">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Main</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>&#10;	<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Main.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrs</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.glassfish.jersey.server.ResourceConfig</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JerseyConfig</span> <span class="kd">extends</span> <span class="n">ResourceConfig</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">JerseyConfig</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">register</span><span class="o">(</span><span class="n">MessageResource</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>JerseyConfig.java</span>
    </div>
</div>
<p>El servicio lo definimos en una interfaz y una clase que la implementa.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrs</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">MessageService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="n">Message</span> <span class="nf">create</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">);</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MessageService.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span><span class="lnt">6&#10;</span><span class="lnt">7&#10;</span><span class="lnt">8&#10;</span><span class="lnt">9&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrs</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DefaultMessageService</span> <span class="kd">implements</span> <span class="n">MessageService</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Override</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Message</span> <span class="nf">create</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="k">new</span> <span class="n">Message</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>DefaultMessageService.java</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span><span class="lnt">25&#10;</span><span class="lnt">26&#10;</span><span class="lnt">27&#10;</span><span class="lnt">28&#10;</span><span class="lnt">29&#10;</span><span class="lnt">30&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrs</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>&#10;&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Message</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">String</span> <span class="n">message</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">Date</span> <span class="n">date</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="nf">Message</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">message</span> <span class="o">=</span> <span class="n">message</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Date</span><span class="o">();</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">String</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">message</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setMessage</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">message</span> <span class="o">=</span> <span class="n">message</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Date</span> <span class="nf">getDate</span><span class="o">()</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">date</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDate</span><span class="o">(</span><span class="n">Date</span> <span class="n">date</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">this</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="n">date</span><span class="o">;</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>Message.java</span>
    </div>
</div>
<p>Es habitual que los servicios REST produzca como resultado un JSON como formato para devolver los datos. No necesitaremos hacer nada especial para convertir el <em>Java Bean</em> de la clase <em>Message</em> a JSON, de ello se encargará automáticamente JAX-RS. Con anotaciones como <a href="https://docs.oracle.com/javaee/7/api/javax/ws/rs/QueryParam.html">@QueryParam</a> podemos obtener los parámetros del <em>query string</em>, de la URL o cabeceras enviadas.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span><span class="lnt">15&#10;</span><span class="lnt">16&#10;</span><span class="lnt">17&#10;</span><span class="lnt">18&#10;</span><span class="lnt">19&#10;</span><span class="lnt">20&#10;</span><span class="lnt">21&#10;</span><span class="lnt">22&#10;</span><span class="lnt">23&#10;</span><span class="lnt">24&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">io.github.picodotdev.blogbitix.springbootjaxrs</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>&#10;&#10;<span class="kn">import</span> <span class="nn">javax.ws.rs.GET</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.ws.rs.Path</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.ws.rs.Produces</span><span class="o">;</span>&#10;<span class="kn">import</span> <span class="nn">javax.ws.rs.QueryParam</span><span class="o">;</span>&#10;&#10;<span class="nd">@Component</span>&#10;<span class="nd">@Path</span><span class="o">(</span><span class="s">&#34;/message&#34;</span><span class="o">)</span>&#10;<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MessageResource</span> <span class="o">{</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Autowired</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">private</span> <span class="n">MessageService</span> <span class="n">messageService</span><span class="o">;</span>&#10;&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@GET</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="nd">@Produces</span><span class="o">(</span><span class="s">&#34;application/json&#34;</span><span class="o">)</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="kd">public</span> <span class="n">Message</span> <span class="nf">message</span><span class="o">(</span><span class="nd">@QueryParam</span><span class="o">(</span><span class="s">&#34;message&#34;</span><span class="o">)</span> <span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="k">return</span> <span class="n">messageService</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>&#10;&nbsp;&nbsp;&nbsp;&nbsp;<span class="o">}</span>&#10;&#10;<span class="o">}</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>MessageResource.java</span>
    </div>
</div>
<p>Iniciada la aplicación con <code>./gradlew run</code> y con la siguiente comando de <code>curl</code> y URL obtendremos el mensaje en formato JSON en la salida.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ curl -v http://localhost:8080/message?message<span class="o">=</span>Hola&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>curl.sh</span>
    </div>
</div>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt"> 1&#10;</span><span class="lnt"> 2&#10;</span><span class="lnt"> 3&#10;</span><span class="lnt"> 4&#10;</span><span class="lnt"> 5&#10;</span><span class="lnt"> 6&#10;</span><span class="lnt"> 7&#10;</span><span class="lnt"> 8&#10;</span><span class="lnt"> 9&#10;</span><span class="lnt">10&#10;</span><span class="lnt">11&#10;</span><span class="lnt">12&#10;</span><span class="lnt">13&#10;</span><span class="lnt">14&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">*   Trying ::1...&#10;* Connected to localhost (::1) port 8080 (#0)&#10;&gt; GET /message?message=Hola HTTP/1.1&#10;&gt; Host: localhost:8080&#10;&gt; User-Agent: curl/7.50.1&#10;&gt; Accept: */*&#10;&gt; &#10;&lt; HTTP/1.1 200 &#10;&lt; Content-Type: application/json&#10;&lt; Content-Length: 39&#10;&lt; Date: Sat, 17 Sep 2016 09:55:29 GMT&#10;&lt; &#10;* Connection #0 to host localhost left intact&#10;{&#34;message&#34;:&#34;Hola&#34;,&#34;date&#34;:1474106129856}</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>out.txt</span>
    </div>
</div>
<p>Al diseñar APIs REST más complejas que este sencillo ejemplo conviene conocer el término <a href="https://en.wikipedia.org/wiki/HATEOAS">HATEOAS</a>. Deberemos definir como organizar la información devuelta por los diferentes que los libros <a href="https://amzn.to/2cxWMRo">RESTful Web APIs</a> y <a href="https://amzn.to/2cEzQz5">REST in Practice</a> además de <a href="https://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api">artículos con consejos sobre como diseñar APIs RESTful</a>.</p>
<div class="media media-amazon">
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=1449358063&amp;linkId=e0cd589f357dfc1c77cfb004e6668fa5&amp;internal=1" title="Amazon" class="lozad"></iframe>
  <iframe style="width:120px;height:240px;" width="120" height="240" scrolling="no" frameborder="0" src="https://rcm-eu.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=blobit-21&amp;language=es_ES&amp;o=30&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=0596805829&amp;linkId=3b1ee2b6ff595b6b3c2fd7c70eb35cc7&amp;internal=1" title="Amazon" class="lozad"></iframe>
</div>
<p>Una vez que disponemos del servicio REST podemos <a href="https://picodotdev.github.io/blog-bitix/2016/09/autenticacion-con-oauth-y-keycloak-en-un-servicio-rest-con-jax-rs-y-spring-boot/">añadir autenticación y autorización con Keycloak como proveedor de OAuth</a>.</p>
<p>Otra alternativa a una interfaz REST es usar <a href="https://graphql.org/">GraphQL</a> que muestro en el artículo <a href="https://picodotdev.github.io/blog-bitix/2017/11/que-es-graphql-y-ejemplo-para-una-interfaz-de-un-servicio-con-spring-boot-y-java/">Qué es GraphQL y ejemplo para una interfaz de un servicio con Spring Boot y Java</a></p>
<div class="alert alert-secondary sourcecode">
    <img src="https://picodotdev.github.io/blog-bitix/assets/images/icons/terminal.svg" width="64" height="64" alt="Terminal" title="Terminal" class="lozad sourcecode-icon">
    <p>
            El <a href="https://github.com/picodotdev/blog-ejemplos/tree/master/SpringBootJaxrs">código fuente completo del ejemplo</a> puedes descargarlo del repositorio de ejemplos de Blog Bitix alojado en GitHub y probarlo en tu equipo ejecutando siguiente comando:<br><code>./gradlew run</code></p>
</div>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/03/introduccion-y-nuevas-caracteristicas-de-java-ee-7/">Introducción y nuevas características de Java EE 7</a></li>
<li><a href="https://picodotdev.github.io/blog-bitix/2016/04/aplicacion-de-ejemplo-usando-varias-especificaciones-de-java-ee-7/">Aplicación de ejemplo usando varias especificaciones de Java EE 7</a></li>
<li><a href="https://elbauldelprogramador.com/buenas-practicas-para-el-diseno-de-una-api-restful-pragmatica/">Buenas prácticas para el diseño de una API RESTful pragmática</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="java"/>
            
                <category term="planeta-codigo"/>
            
                <category term="programacion"/>
            
                <category term="spring"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/</id>
        <title>Artículo #2 de Yo apoyo al software libre</title>
        <updated>2016-09-09T23:30:00+02:00</updated>
        <published>2016-09-09T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Recibidas nuevas transferencias de Google y Amazon por la publicidad AdSense y los enlaces de afiliado respectivamente que incluyo en esta bitácora he realizado unas pequeñas nuevas donaciones económicas a varios proyectos de software libre que uso habitualmente.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/firefox.svg" width="200" height="188" alt="Firefox" title="Firefox"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/wikipedia.svg" width="200" height="181" alt="Wikipedia" title="Wikipedia"  class=""></p>
</div>
<p>En diciembre de 2015 escribía un <a href="https://picodotdev.github.io/blog-bitix/2015/12/yo-apoyo-al-software-libre-tu-tambien/">artículo sobre la primera donación económica</a> que hacía un proyecto de software libre. En esa primera donación compré un par de camisetas a la <a href="https://fsfe.org/index.en.html">Free Software Foundation Europe</a> o FSFE. Pasados ocho nuevos meses desde entonces me llegó una nueva transferencia de Google por la publicidad AdSense que incluyo en esta bitácora de alrededor de 80 €, hace unos meses recibí otra por los enlaces de afiliado de Amazon que en este caso fue de alrededor de 25 €. Como la bitácora no me genera ningún tipo de gasto ni para el hospedaje ni para el dominio (salvo buena parte de mi tiempo, que no es poco) me planteo hacer una nueva donación a algún proyecto o algunos proyectos.</p>
<p>Pensando que proyectos serían los siguientes y que cantidad me he decidido por los siguientes <a href="https://www.archlinux.org/">Arch Linux</a>, <a href="https://archlinuxarm.org/">Arch Linux ARM</a>, <a href="https://www.mozilla.org/es-ES/firefox/new/">Firefox</a> y <a href="https://es.wikipedia.org/wiki/Wikipedia:Portada">Wikipedia</a> con 10 € cada uno para un total de 40 €, que al final solo han sido 20 € porque el medio para hacer el pago utilizando de <a href="http://spi-inc.org/">Software in the Public Interest</a> tanto en Arch Linux como en Arch Linux ARM por algún motivo no me acepta la tarjeta bancaria virtual, en la siguiente donación quizá lo intente de nuevo o de otra forma por ejemplo comprando una camiseta en <a href="https://www.freewear.org/?page=list_items&amp;org=Archlinux">FreeWear</a>.</p>
<p>Como sistema sistema operativo uso GNU/Linux y la distribución Arch Linux tanto a modo personal en mi portátil y en el trabajo y a pesar de ser una distribución <em>rolling release</em> o en constante actualización raras han sido las veces que he tenido algún problema desde hace ya más de 6 años. Esta es la distribución con la que al final personalmente he acabado más contento después de pasar por <a href="https://fedoraproject.org/">Fedora</a>, <a href="https://www.debian.org/">Debian</a> y <a href="https://www.ubuntu.com/">Ubuntu</a>. Arch Linux ARM lo utilizo en una Raspberry Pi 1 modelo B (la que tiene 256 MiB de memoria) para hacer descargas y también muy contento ya que tampoco me da problemas. Firefox es el navegador de mi preferencia después de una no muy extensa época usando <a href="https://www.chromium.org/">Chromium</a>, lo uso a modo personal y en el trabajo como desarrollador web. Finalmente, aunque no sea un proyecto de software libre es un proyecto colaborativo de libre acceso y desde hace tiempo una gran fuente de conocimiento acumulada de la que suelo incluir muchos enlaces en esta bitácora, es la Wikipedia.</p>
<p>Las cantidades que he donado no son muy elevadas pero espero que ayuden a estos proyectos a continuar su desarrollo y seguir mejorando. Esta de las pocas veces que «pago» algo por el software que utilizo exceptuando las veces en las que lo he hecho por el <a href="https://elblogdepicodev.blogspot.com.es/2011/05/impuesto-windows.htmlindex-amp.html">impuesto Windows</a>.</p>
<p>Hubo una época que usaba el sistema operativo de Microsoft sin licencia de Windows XP. Hoy en día <a href="https://picodotdev.github.io/blog-bitix/2016/01/windows-10-y-office-2016-tan-faciles-de-usar-sin-licencia-como-siempre/">Windows 10 y Office 2016 siguen siendo fáciles de usar sin licencia</a> un buen porcentaje de usuarios tampoco pagará por el software que usa lo que en realidad afecta negativamente al software libre ya que le impide ganar cuota de uso. El software libre no es sinónimo de gratis, aunque en la mayoría de los casos lo es, sino que proporciona a sus usuarios las 4 libertades explicadas en <a href="https://www.gnu.org/philosophy/free-sw.es.html">¿Qué es el software libre?</a>.</p>
<p>Estas son las pruebas fehacientes que muestran las donaciones que he hecho a los dos proyectos anteriores.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/images/donacion-mozilla_hub5d909bf33246ec93ee1835886588d07_74345_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Donación Mozilla"><img src="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/images/donacion-mozilla_hub5d909bf33246ec93ee1835886588d07_74345_300x200_fit_box_3.png" width="300" height="195" alt="Donación Mozilla" title="Donación Mozilla"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/images/donacion-mozilla-email_hu418a1921409714c9a484395f44a18a47_67474_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Donación Mozilla"><img src="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/images/donacion-mozilla-email_hu418a1921409714c9a484395f44a18a47_67474_300x200_fit_box_3.png" width="300" height="134" alt="Donación Mozilla" title="Donación Mozilla"  class="lozad "></a></p>
<figcaption>Donación Mozilla</figcaption>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/images/donacion-wikipedia_hue8c8e9c6d567a97ff20099d270429f65_147014_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Donación Wikipedia"><img src="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/images/donacion-wikipedia_hue8c8e9c6d567a97ff20099d270429f65_147014_300x200_fit_box_3.png" width="300" height="196" alt="Donación Wikipedia" title="Donación Wikipedia"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/images/donacion-wikipedia-email_hu8aead06210dd9db52883396b8f6c9608_95971_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Donación Wikipedia"><img src="https://picodotdev.github.io/blog-bitix/2016/09/articulo-2-de-yo-apoyo-al-software-libre/images/donacion-wikipedia-email_hu8aead06210dd9db52883396b8f6c9608_95971_300x200_fit_box_3.png" width="300" height="159" alt="Donación Wikipedia" title="Donación Wikipedia"  class="lozad "></a></p>
<figcaption>Donación Wikipedia</figcaption>
</figure>
</div>
<p>Probablemente dentro de alrededor de otros 8 meses cuando reciba nuevas transferencias de Google y Amazon haré una nueva donación a otra serie de proyectos que uso quizá en ese caso a <a href="https://www.libreoffice.org/">LibreOffice</a>, <a href="https://www.videolan.org/vlc/">VLC</a>, <a href="https://www.gnome.org/">GNOME</a>, <a href="https://www.gimp.org/">GIMP</a>, &hellip; o lo intente de nuevo con Arch Linux. Y estos serán proyectos muy conocidos que no necesiten tanta colaboración económica seguro que hay muchos proyectos menos conocidos pero muy importantes que también necesitan financiación.</p>
<p>Puede que ni siquiera uses GNU/Linux o software libre pero al visitar esta bitácora puedes considerar que tú también has colaborado con el software libre ;) y simplemente usarlo o promocionarlo ya es una buena forma de apoyarlo. Si lo hicieses, ¿a que proyectos harías tú una donación?</p>
<p><a href="https://www.gnu.org/">Yo apoyo al software libre</a></p>
<table class="table">
    <thead>
        <tr class="thead-dark">
            <th colspan="4">Donaciones que he realizado hasta la última fecha</th>
        </tr>
        <tr class="thead-light">
            <th>#</th>
            <th>Fecha</th>
            <th>Proyecto</th>
            <th>Donación</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>1</td>
            <td>2015/12</td>
            <td>Free Software Foundation Europe (FSFE)</td>
            <td>40 €</td>
        </tr>
        <tr>
            <td>2</td>
            <td>2016/09</td>
            <td>Wikipedia, Mozilla/Firefox</td>
            <td>10 €, 10 €</td>
        </tr>
        <tr>
            <td>3</td>
            <td>2017/01</td>
            <td>elementaryOS, Libre Office, Arch Linux ARM</td>
            <td>10 €, 10 €, 10 €</td>
        </tr>
        <tr>
            <td>4</td>
            <td>2017/05</td>
            <td>GNOME, VideoLAN (VLC), Arch Linux</td>
            <td>15,31 €, 10 €, 0,31 €</td>
        </tr>
        <tr>
            <td>5</td>
            <td>2018/01</td>
            <td>LineageOS, Replicant</td>
            <td>15 €, 15 €</td>
        </tr>
        <tr>
            <td>6</td>
            <td>2018/12</td>
            <td>Wine</td>
            <td>$20</td>
        </tr>
        <tr>
            <td>7</td>
            <td>2019/12</td>
            <td>Calibre</td>
            <td>$10</td>
        </tr>
        <tr>
            <td>8</td>
            <td>2020/12</td>
            <td>Phoronix, Mozilla/Firefox, GnuPG</td>
            <td>$12, 10 €, 10 €</td>
        </tr>
        <tr>
            <td colspan="3">Total</td>
            <td>165 €, $42</td>
        </tr>
    </tbody>
</table>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://wikimediafoundation.org/wiki/Donaciones">Donaciones Wikipedia</a></li>
<li><a href="https://wiki.mozilla.org/Donate">Donaciones Mozilla</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="planeta-codigo"/>
            
                <category term="software-libre"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/09/localizacion-de-un-comando-y-paquete-propietario-de-un-archivo-en-gnu-linux/</id>
        <title>Localización de un comando y paquete propietario de un archivo en GNU/Linux</title>
        <updated>2016-09-03T13:00:00+02:00</updated>
        <published>2016-09-03T13:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/09/localizacion-de-un-comando-y-paquete-propietario-de-un-archivo-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<p>Usando alguna distribución <a href="https://www.gnu.org/">GNU</a>/<a href="https://www.linux.com/">Linux</a> en algún momento nos interesará saber a qué paquete de los que tenemos instalados pertenece un determinado comando o a qué paquete pertenece un determinado archivo del sistema.</p>
<p>Para saber en qué paquete está un determinado archivo primero deberemos conocer la ruta absoluta del archivo en cuestión. Si se trata de un comando con el comando <code>which</code> conoceremos la ubicación absoluta. Por ejemplo, para conocer la ubicación de el comando <code>java</code> usamos:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ which java&#10;/usr/bin/java&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>which.sh</span>
    </div>
</div>
<p>Conociendo la ruta absoluta del archivo y con el gestor de paquetes de la distribución podremos conocer en qué paquete está contenido y por qué paquete ha sido instalado o es su propietario. En <a href="https://www.archlinux.org/">Arch Linux</a> se averigua con el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ pacman -Qo /usr/bin/java&#10;/usr/bin/java está contenido en java-runtime-common 2-2&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-java.sh</span>
    </div>
</div>
<p>En Arch Linux <em>java-runtime-common</em> es un paquete que nos permite cambiar la versión de la máquina virtual a usar en el sistema pudiendo intercambiar entre Java 7 y Java 8, esto se realiza con algunos enlaces simbólicos.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ ls -l /usr/bin/java&#10;lrwxrwxrwx <span class="m">1</span> root root <span class="m">37</span> nov  <span class="m">2</span>  <span class="m">2014</span> /usr/bin/java -&gt; /usr/lib/jvm/default-runtime/bin/java&#10;&#10;$ ls -l /usr/lib/jvm/default-runtime&#10;lrwxrwxrwx <span class="m">1</span> root root <span class="m">18</span> dic  <span class="m">4</span>  <span class="m">2014</span> /usr/lib/jvm/default-runtime -&gt; java-8-openjdk/jre</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>ls.sh</span>
    </div>
</div>
<p>Si queremos conocer el paquete del binario <code>java</code> usaremos la ruta absoluta en el comando para averiguarlo con el gestor de paquetes ya sea con <code>pacman</code> o <code>yaourt</code>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ pacman -Qo /usr/lib/jvm/java-8-openjdk/bin/java&#10;/usr/lib/jvm/java-8-openjdk/bin/java está contenido en jdk8-openjdk 8.u102-1&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman-java8.sh</span>
    </div>
</div>
<p>En las distribuciones basadas en paquetes <em>.deb</em> como <a href="https://www.debian.org/">Debian</a> o <a href="https://www.ubuntu.com/">Ubuntu</a> el comando es el siguiente:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ dpkg -S /usr/bin/java&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>dpkg.sh</span>
    </div>
</div>
<p>Y en las distribuciones basadas en <em>.rpm</em> como como <a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux">RedHat</a> y <a href="https://fedoraproject.org/">Fedora</a>:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ rpm -qf /usr/bin/java&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>rpm.sh</span>
    </div>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/</id>
        <title>Sobre los ínfimos impuestos que paga Apple</title>
        <updated>2016-09-02T23:30:00+02:00</updated>
        <published>2016-08-31T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/apple.svg" width="200" height="200" alt="Apple" title="Apple"  class=""></p>
</div>
<p>El 30 de agosto de 2016 la Comisión Europea anunciaba que <a href="https://www.apple.com/">Apple</a> debía devolver a Irlanda la cantidad correspondiente obtenida por las ventajas fiscales que considera irregulares, una cantidad astronómica de unos 13000 millones de euros mas los intereses desde 2003. Si ya Irlanda ofrece una fiscalidad ventajosa al tener un tipo impositivo del 12,5% de los beneficios, Apple con acuerdos conseguía pagar un 1% y un 0,005%. Acuerdos que la comisión Europea considera irregulares porque solo se aplica a algunas empresas como Apple siendo una desventaja y trato de favor respecto a otras empresas establecidas en Irlanda. Esta fiscalidad ventajosa es el motivo de que otras muchas empresas tecnológicas de EEUU tengan su sede europea en Irlanda, en España por ejemplo debería haber pagado un 25%.</p>
<p>Algunos medios informaban así de la noticia:</p>
<ul>
<li><a href="https://www.eldiario.es/economia/Bruselas-Apple-fiscales-ilegales-Irlanda_0_553644787.html">Bruselas obliga a Apple a devolver 13.000 millones por ayudas fiscales ilegales en Irlanda</a></li>
<li><a href="https://economia.elpais.com/economia/2016/08/30/actualidad/1472548799_072096.html">Bruselas sanciona a Apple con la devolución de 13.000 millones por ventajas fiscales</a></li>
<li><a href="https://www.elespanol.com/economia/macroeconomia/20160830/151735181_0.html">Así es como defraudan a Hacienda las grandes tecnológicas</a></li>
<li><a href="https://www.eldiario.es/economia/cifras-detras-impuestos-debe-Apple_0_553645153.html">Ocho cifras que explican qué supone para Apple pagar 13.000 millones a Irlanda</a></li>
<li><a href="https://economia.elpais.com/economia/2016/08/31/actualidad/1472634892_118904.html">¿Por qué Irlanda no quiere recuperar el dinero de Apple? Las claves de la sanción de Bruselas</a></li>
<li><a href="https://www.elespanol.com/economia/empresas/20160901/152235690_0.html">Apple y su ridícula factura fiscal en España: 19 millones en 10 años</a></li>
</ul>
<p>Horas después Apple en su web publicaba una carta firmada por Tim Cook indicando lo mucho que contribuye en empleos e inversiones en Europa que se verán amenazadas además de afirmar que no ha recibido ninguna ventaja fiscal de la que se le acusa.</p>
<ul>
<li><a href="https://www.apple.com/es/customer-letter/">Un mensaje para la comunidad de Apple en Europa</a></li>
</ul>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/images/apple-tim-cook-letter_hu508d5000ab305867ddd60716196a572c_562240_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Carta de Apple a su comunidad en Europa"><img src="https://picodotdev.github.io/blog-bitix/2016/08/sobre-los-infimos-impuestos-que-paga-apple/images/apple-tim-cook-letter_hu508d5000ab305867ddd60716196a572c_562240_300x200_fit_box_3.png" width="107" height="200" alt="Carta de Apple a su comunidad en Europa" title="Carta de Apple a su comunidad en Europa"  class="lozad "></a></p>
<figcaption>Carta de Apple a su comunidad en Europa</figcaption>
</figure>
</div>
<p>Hasta aquí los hechos.</p>
<p>Lo primero que hay que destacar es que en realidad la Comisión Europea no le pone una multa a Apple ni a Irlanda por cometer una irregularidad sino que simplemente le obliga a devolver lo que debería haber pagado y no durante todo el tiempo que cometió la irregularidad sino simplemente desde el 2003, las ventajas fiscales se remontan a 1991. Pagar menos impuestos de los que debe le sale barato a Apple, si no le obligan esos miles de millones que no paga en impuestos, si le obligan solo tiene que devolver lo que debería haber pagado igual que si no hubiera hecho la trampa y solo a partir de una fecha en que la situación no ha prescrito. Toda una oportunidad para obtener máximos beneficios.</p>
<p>La carta de Tim Cook demuestra el tono con el que actúa y por el medio en el que la publica, en su propio sitio web, parece más bien dirigida a salvar su imagen entre sus usuarios y clientes que a la Comisión Europea. «la dirección de Apple supo ver un lugar rico en talento» a lo que seguidamente se atribuye también ser ejemplo para otras multinacionales, ya sería más bien por las ventajas fiscales del lugar. Un buena parte de la carta está dirigida a expresar la cantidad de empleos e inversión que según Apple genera ya sea directamente, que solo son unos paupérrimos 6000 para su volumen de negocio, y un millón y medio según ellos entre desarrolladores de aplicaciones y pequeñas y medianas empresas que dependen de Apple. Por este mensaje parece que Apple se debe consentir su irregularidad en aras de mantener esta actividad que alardea de generar. En la carta por supuesto dice que su ingeniería fiscal está de acuerdo a la legalidad y que no ha recibido las ventajas fiscales de las que le acusa la Comisión Europea. Comisión Europea que no debe estar de acuerdo después de años de observación e investigación.</p>
<p>Apple junto con Estados Unidos e Irlanda recurrirán la resolución. Irlanda con su tipo impositivo reducido y prácticamente inexistente para Apple <a href="https://economia.elpais.com/economia/2010/12/07/actualidad/1291710775_850215.html">en 2010 fué rescatada</a> por importe de 45000 millones de euros. Estados Unidos interviniendo en un asunto para proteger los intereses de una de sus empresas más grandes. Y todo esto sin el infame <a href="https://economia.elpais.com/economia/2015/03/02/actualidad/1425256390_372094.html">acuerdo de inversiones y libre comercio TTIP</a> que el estado norteamericano quiere acordar con la Unión Europea con el que esta disputa se resolvería en un tribunal supranacional que reduciría la soberanía de la Unión Europea y sus estados miembro. Parece que son los EEUU los que más intereses tienen y rápido en aprobar el TTIP ya que con seguridad les sea muy y más ventajoso para ellos y sus empresas. En época de paz una forma de dominio y nueva forma de guerra fría es la económica. Si EEUU es capaz de espiar a ciudadanos y <a href="http://www.20minutos.es/noticia/2503946/0/eeuu-espia/bce-merkel/wikileaks/">presidentes de gobiernos aliados</a> no sería de extrañar que espiase también a empresas extranjeras para proteger a la suyas y darles ventajas competitivas o su economía capitalista.</p>
<p>En este caso la elegida ha sido Apple siendo la empresa de referencia pero otras empresas tecnológicas norteamericanas emplean la misma ingeniería fiscal para reducir a la mínima expresión los impuestos que pagan en sus actividades en todo el continente europeo. ¿Habrá alguna siguiente obligada a pagar los impuestos que le correspondían?. Ingeniería fiscal que no está al alcance de las pequeñas y medianas empresas ni de los ciudadanos y por ello es injusta. No es casualidad y tampoco es porque los irlandeses sean especialmente listos, talentosos o más trabajadores que otras empresas como <a href="https://www.microsoft.com/">Microsoft</a>, <a href="https://www.google.es/">Google</a>, <a href="https://amzn.to/2flFhHA">Amazon</a> o <a href="https://www.facebook.com/">Facebook</a> entre otras grandes también tengan su sede europea en Irlanda.</p>
<p>Hay otras disputas como en el caso de <a href="https://www.adslzone.net/2016/04/20/europa-acusa-oficialmente-google-monopolio-android/">Google acusada de monopolio en Europa</a> que puede acarrearle en este caso sí alguna cuantiosa sanción económica. O la <a href="https://es.globalvoices.org/2016/02/15/netizen-report-la-ue-se-enfrenta-a-facebook-en-materia-de-privacidad/">privacidad de los ciudadanos europeos por parte de Facebook</a>.</p>
<p>Es tu decisión y responsabilidad también sabiendo esta información de que empresas y productos consumes. Si esta es la legalidad no se a que esperan los políticos honestos, con coraje y determinación para cambiarla y hacerla justa.</p>
]]>
        </content>
        
            
                <category term="apple"/>
            
                <category term="opinion"/>
            
                <category term="planeta-codigo"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/</id>
        <title>Cómo configurar una impresora HP en red en Arch Linux</title>
        <updated>2016-08-28T15:00:00+02:00</updated>
        <published>2016-08-28T10:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Después de mucho tiempo sin tener configurada una impresora en red decidí dedicarle un tiempo a realizar la configuración. Con un par de errores que me encontré finalmente conseguí realizar correctamente la impresión de prueba con el modelo de impresora en concreto del que dispongo.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/archlinux.svg" width="250" height="186" alt="Arch Linux" title="Arch Linux"  class=""></p>
</div>
<p>Uso <a href="https://www.archlinux.org/">Arch Linux</a> desde hace ya más de un lustro, en mi equipo personal e incluso en el equipo del trabajo. Hasta hace poco cuando necesitaba imprimir llevaba el documento en formato PDF en una memoria USB a una copistería y allí los imprimía dado que no tenía configurado mi equipo para usar la impresora en red, más que nada porque no le había dedicado de tiempo para hacerlo. Por último, encontré un momento y realice la configuración de un impresora en red <em>Hewlett Packard Color LaserJet MFP M476dw</em> con <abbr title="Common Unix Printing System"><a href="https://www.cups.org/">CUPS</a></abbr> en Arch Linux no sin encontrarme con algunos algunos problemas que finalmente conseguí resolver.</p>
<p>La <a href="https://wiki.archlinux.org/">wiki de Arch Linux</a> es una de la mejores documentaciones que hay en GNU/Linux pero en el caso de la <a href="https://wiki.archlinux.org/index.php/CUPS">versión en inglés de CUPS</a> tiene bastantes secciones desactualizadas, la <a href="https://wiki.archlinux.org/index.php/CUPS_%28Espa%C3%B1ol%29">versión en español de CUPS</a> está mejor pero aún así siguiéndolas no conseguí instalar la impresora. Tuve que hacer varias búsquedas en foros.</p>
<p>Lo primero necesario a instalar es el paquete de CUPS y el controlador de la impresora en este caso HP, posteriormente iniciar como superusuarios el servicio de CUPS con systemd y avahi para el descubrimiento de impresoras y activarlos con el inicio del sistema si así lo deseamos:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span><span class="lnt">3&#10;</span><span class="lnt">4&#10;</span><span class="lnt">5&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ yaourt -S cups hplip&#10;<span class="c1"># systemctl start org.cups.cupsd.service</span>&#10;<span class="c1"># systemctl start avahi-daemon.service</span>&#10;<span class="c1"># systemctl enable org.cups.cupsd.service</span>&#10;<span class="c1"># systemctl enable avahi-daemon.service</span></code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>install.sh</span>
    </div>
</div>
<p>CUPS posee un panel de administración accesible con el navegador en la dirección <em>http://localhost:631/admin</em>. Pulsando el botón <em>Añadir impresora</em> en el panel de administración de CUPS iniciamos el asistente para añadir la impresora en el que avahi nos detectará la impresora en red y deberemos seleccionar la marca junto con el modelo específico. Al añadir la impresora se nos preguntará por un usuario y contraseña, como nombre usuario deberemos introducir <em>root</em> y como contraseña la que hayamos establecido en el sistema para el superusuario. Desde el panel de impresoras de <a href="https://www.gnome.org/">GNOME</a> se debería poder añadir la impresora, sin embargo, a mi me daba algún tipo de error de modo que lo hice desde CUPS.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-administracion_hudc430c1d0b79fc37f54e2fb488136a47_99627_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Administración de CUPS"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-administracion_hudc430c1d0b79fc37f54e2fb488136a47_99627_300x200_fit_box_3.png" width="192" height="200" alt="Administración de CUPS" title="Administración de CUPS"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-anadir-impresora-1_hu23672d541ad28c4b3621647a2a188942_87595_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente añadir impresora en CUPS"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-anadir-impresora-1_hu23672d541ad28c4b3621647a2a188942_87595_300x200_fit_box_3.png" width="192" height="200" alt="Asistente añadir impresora en CUPS" title="Asistente añadir impresora en CUPS"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-anadir-impresora-2_hua295b5680d61f0c97e4275a5bb18d9ca_76911_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente añadir impresora en CUPS"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-anadir-impresora-2_hua295b5680d61f0c97e4275a5bb18d9ca_76911_300x200_fit_box_3.png" width="192" height="200" alt="Asistente añadir impresora en CUPS" title="Asistente añadir impresora en CUPS"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-anadir-impresora-3_hua295b5680d61f0c97e4275a5bb18d9ca_88341_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente añadir impresora en CUPS"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-anadir-impresora-3_hua295b5680d61f0c97e4275a5bb18d9ca_88341_300x200_fit_box_3.png" width="192" height="200" alt="Asistente añadir impresora en CUPS" title="Asistente añadir impresora en CUPS"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-anadir-impresora-4_hua295b5680d61f0c97e4275a5bb18d9ca_125293_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Asistente añadir impresora en CUPS"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-anadir-impresora-4_hua295b5680d61f0c97e4275a5bb18d9ca_125293_300x200_fit_box_3.png" width="192" height="200" alt="Asistente añadir impresora en CUPS" title="Asistente añadir impresora en CUPS"  class="lozad "></a></p>
</figure>
</div>
<p>Finalizado el asistente en la sección <em>Impresoras</em> examinado los detalles de la misma podremos ver los documentos imprimidos o en proceso de impresión. En el desplegable <em>Mantenimiento</em> podremos imprimir una página de prueba con la que comprobaremos que funciona correctamente además de otras acciones sobre los trabajos, en el desplegable <em>Administración</em> podemos eliminarla o modificarla.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-impresoras-1_hu5041c41fde2be410fec7a6c4369d0318_66047_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Impresoras en CUPS"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-impresoras-1_hu5041c41fde2be410fec7a6c4369d0318_66047_300x200_fit_box_3.png" width="192" height="200" alt="Impresoras en CUPS" title="Impresoras en CUPS"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-impresoras-2_hu621dbe82b10816177c727ee19c6ff5a8_105575_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Impresoras en CUPS"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/cups-impresoras-2_hu621dbe82b10816177c727ee19c6ff5a8_105575_300x200_fit_box_3.png" width="200" height="200" alt="Impresoras en CUPS" title="Impresoras en CUPS"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/gnome-impresoras_hua2343e369c76890d056f3a0712231109_38405_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="Impresoras en GNOME"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/gnome-impresoras_hua2343e369c76890d056f3a0712231109_38405_300x200_fit_box_3.png" width="300" height="164" alt="Impresoras en GNOME" title="Impresoras en GNOME"  class="lozad "></a></p>
</figure>
</div>
<p>Si la página de prueba no funciona en el archivo <em>/var/log/cups/error_log</em> encontraremos mensajes de error con pistas que nos ayudarán a saber que está fallando. Algunos de los mensajes de error que me encontré al realizar la configuración fué el siguiente.</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">[Client 1497] Request from &#34;localhost&#34; using invalid Host: field &#34;HP.local:631&#34;.&#10;No se ha podido obtener el estado de la impresora.&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>error_log</span>
    </div>
</div>
<p>A raíz de este mensaje tuve que añadir en el archivo <em>/etc/hosts</em> el <em>host</em> <em>HP.local</em> con la dirección IP de la impresora en red que averigüé usando la pantalla táctil que ofrece este modelo de impresora (las mayúsculas y minúsculas son importantes).</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-plaintext" data-lang="plaintext">192.168.88.170&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HP.local&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>hosts</span>
    </div>
</div>
<p>Con todo configurado la prueba de impresión realizable tanto desde la página de administración de CUPS como de GNOME se realizó correctamente y este es el resultado. Una vez que esta prueba es satisfactoria podemos imprimir documentos desde las aplicaciones usando el diálogo de impresión donde aparecerá la impresora en red configurada. Además podremos cambiar algunas opciones como imprimir a dos caras o solo a una, imprimir en blanco y negro o a color o usar un perfil de impresión para ahorro de tinta.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/prueba-de-impresion-cups_hu962b3332c45455165946e79fd4853d69_302122_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Prueba de impresión con CUPS"><img src="https://picodotdev.github.io/blog-bitix/2016/08/como-configurar-una-impresora-hp-en-red-en-arch-linux/images/prueba-de-impresion-cups_hu962b3332c45455165946e79fd4853d69_302122_300x200_fit_q90_box.jpg" width="179" height="200" alt="Prueba de impresión con CUPS" title="Prueba de impresión con CUPS"  class="lozad "></a></p>
</figure>
</div>
<p>Para otras marcas y modelos de impresoras deberemos instalar otro controlador, en la siguiente <a href="http://www.openprinting.org/printers">base de datos de impresoras</a> encontraremos el controlador aconsejado si en nuestra distribución no está documentado.</p>
<div class="reference">
    Referencia:<br>
<ul>
<li><a href="https://www.cups.org/">CUPS</a></li>
<li><a href="https://es.wikipedia.org/wiki/Common_Unix_Printing_System">CUPS</a> (wikipedia)</li>
<li><a href="https://www.cups.org/documentation.html">Documentación de CUPS</a></li>
</ul>
</div>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
        
    </entry>
    <entry>
        <id>https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/</id>
        <title>Varios juegos de culto con ScummVM en GNU/Linux</title>
        <updated>2016-08-26T23:00:00+02:00</updated>
        <published>2016-08-26T12:00:00+02:00</published>
        <link rel="alternate" type="text/html" href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/"/>
        <author><name>picodotdev</name></author>
        <content type="html">
        <![CDATA[<p><strong>Un juego puede gustar por sus gráficos espectaculares, sin embargo, no será venerado si no proporciona gran cantidad de diversión. Hay algunos juegos en que gran parte de la diversión es proporcionada por la historia o guión. Este son los casos de varios juegos de apuntar y pinchar de hace algunos lustros que quedaron en el recuerdo de muchos de sus jugadores que hoy en día son jugables con ScummVM.</strong></p>]]>
        <![CDATA[<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/scummvm.png" width="200" height="54" alt="ScummVM" title="ScummVM"  class=""></p>
</div>
<div class="logotypes">
<p>
<img src="https://picodotdev.github.io/blog-bitix/assets/images/logotypes/linux.svg" width="200" height="232" alt="Linux" title="Linux"  class=""></p>
</div>
<p>A día de hoy hay una buena colección de juegos que ya tiene varias décadas pero que están muy bien y han alcanzado el calificativo de míticos. Los clásicos del <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-ajedrez-en-gnu-linux-con-gnome/">juego del ajedrez</a> y el <a href="https://picodotdev.github.io/blog-bitix/2016/07/jugar-al-clasico-de-estrategia-de-tablero-go-en-gnu-linux/">juego go</a> son atemporales, en GNU/Linux también otros <a href="https://picodotdev.github.io/blog-bitix/2016/08/jugar-a-videojuegos-clasicos-y-miticos-de-arcade-con-mame-en-gnu-linux/">clásicos del arcade y consolas con el emulador Mame</a>, también en GNU/Linux hay <a href="https://picodotdev.github.io/blog-bitix/2016/08/22-plus-buenos-juegos-en-gnu-linux/">otros más actuales</a> algunos basados en originales de distintos géneros como Arcade, FPS, estrategia con gráficos en tres dimensiones o basados en texto jugables desde la terminal y que no requieren computadoras potentes. Otros juegos buenos, muy conocidos y míticos son <a href="https://en.wikipedia.org/wiki/Monkey_Island_%28series%29">Monkey Island</a>, <a href="https://es.wikipedia.org/wiki/Maniac_Mansion">Maniac Mansion</a>, <a href="https://es.wikipedia.org/wiki/Day_of_the_Tentacle">El día del tentáculo</a>, <a href="https://es.wikipedia.org/wiki/Indiana_Jones_and_the_Fate_of_Atlantis">Indiana Jones</a>, &hellip; jugables con el emulador <a href="https://www.scummvm.org/">ScummVM</a>.</p>
<p>Con ScummVM podemos jugar a esos juegos del estilo <em>point-and-click</em> en los que se trata de probar diferentes acciones algunas lógicas otras no tanto con los objetos que tenemos o el escenario de la pantalla. Para los días de hoy gráficamente no son muy avanzados aunque sigue siendo notable su arte pixelado, pero lo principal de estos juegos no son los gráficos sino la historia que se desarrolla en los mismos. Historia que incluye bastante humor que ha hecho que perduren en el recuerdo de sus jugadores. Algunas de estas aventuras gráficas más conocidas son Monkey Island, Maniac Mansion, El día del tentáculo o Indiana Jones entre los que yo conocí.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/the-secret-of-monkey-island_hud87552317052dccad8ce28b2fd6e1dbc_203415_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="The Secret of Monkey Island"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/the-secret-of-monkey-island_hud87552317052dccad8ce28b2fd6e1dbc_203415_300x200_fit_q90_box.jpg" width="150" height="200" alt="The Secret of Monkey Island" title="The Secret of Monkey Island"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/lechuck-revenge_hu5bf8fb38aa61e6bdba4a33ecc71edc80_164246_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="LeChuck&amp;#39;s Revenge"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/lechuck-revenge_hu5bf8fb38aa61e6bdba4a33ecc71edc80_164246_300x200_fit_q90_box.jpg" width="150" height="200" alt="LeChuck&amp;#39;s Revenge" title="LeChuck&amp;#39;s Revenge"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/the-curse-of-monkey-island_hue765b700a9738a44a40abd63046e6639_148635_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="The Curse of Monkey Island"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/the-curse-of-monkey-island_hue765b700a9738a44a40abd63046e6639_148635_300x200_fit_q90_box.jpg" width="150" height="200" alt="The Curse of Monkey Island" title="The Curse of Monkey Island"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/escape-from-monkey-island_hu9a471dccb6cd2c6f1d677635735964aa_197246_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Escape from Monkey Island"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/escape-from-monkey-island_hu9a471dccb6cd2c6f1d677635735964aa_197246_300x200_fit_q90_box.jpg" width="151" height="200" alt="Escape from Monkey Island" title="Escape from Monkey Island"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/tales-of-monkey-island_hu39749b5666c93d71ac8bbde13552b5e3_34904_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Tales of Monkey Island"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/tales-of-monkey-island_hu39749b5666c93d71ac8bbde13552b5e3_34904_300x200_fit_q90_box.jpg" width="148" height="200" alt="Tales of Monkey Island" title="Tales of Monkey Island"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/indiana-jones-fate-of-atlantis_hua4a9e3eeeb7546b2550857cb695b4508_144968_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Indiana Jones and the Fate of Atlantis"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/indiana-jones-fate-of-atlantis_hua4a9e3eeeb7546b2550857cb695b4508_144968_300x200_fit_q90_box.jpg" width="151" height="200" alt="Indiana Jones and the Fate of Atlantis" title="Indiana Jones and the Fate of Atlantis"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/maniac-mansion_hucd69759e39296888cd02da9a42385006_129371_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Maniac Mansion"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/maniac-mansion_hucd69759e39296888cd02da9a42385006_129371_300x200_fit_q90_box.jpg" width="150" height="200" alt="Maniac Mansion" title="Maniac Mansion"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/day-of-the-tentacle_hu4faa1307f1270c992e90bd41d0bc1824_137850_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Maniac Mansion 2: Day of the Tentacle"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/day-of-the-tentacle_hu4faa1307f1270c992e90bd41d0bc1824_137850_300x200_fit_q90_box.jpg" width="150" height="200" alt="Maniac Mansion 2: Day of the Tentacle" title="Maniac Mansion 2: Day of the Tentacle"  class="lozad "></a></p>
</figure>
</div>
<p>En GNU/Linux podemos seguir jugando a estos juegos, para ello debemos instalar el emulador ScummVM y descargar la ROM de los mismos. En <a href="https://www.archlinux.org/">Arch Linux</a> instalamos el emulador con el <a href="https://www.archlinux.org/packages/community/x86_64/scummvm/">paquete scummvm</a> y el siguiente comando:</p>
<div class="code">
    <div class="highlight"><div class="chroma">&#10;<table class="lntable"><tr><td class="lntd">&#10;<pre tabindex="0" class="chroma"><code><span class="lnt">1&#10;</span><span class="lnt">2&#10;</span></code></pre></td>&#10;<td class="lntd">&#10;<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># pacman -S scummvm</span>&#10;&#10;</code></pre></td></tr></table>&#10;</div>&#10;</div>
    <div class="highlight-meta">
        <span>pacman.sh</span>
    </div>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/scummvm_hu14f4cfc74fb50704e3fd04483861c1e5_55420_2560x1440_fit_box_3.png" data-gallery="data-gallery" title="ScummVM"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/scummvm_hu14f4cfc74fb50704e3fd04483861c1e5_55420_300x200_fit_box_3.png" width="293" height="200" alt="ScummVM" title="ScummVM"  class="lozad "></a></p>
</figure>
</div>
<p>Son juegos en los que se desarrollan diálogos y hay que leer texto por lo que si no dominamos el inglés deberemos descargarlos en su versión en español. Descargar las ROMs en algunos casos es igual de ilegal que piratear un juego, en otros casos al ser juegos muy antiguos y que se consideran software abandonado o <em>abandonware</em> no es ilegal y se considera una forma de conservación del software, en cualquier caso dejo esta decisión al lector. Algunos juegos han sido reeditados para nuevas plataformas como tabletas o móviles. Hay varios sitios web dedicados a almacenar las ROMs de los juegos. La que he utilizado y en la que he encontrado los juegos de los que hablo en este artículo es <a href="https://www.emuparadise.me/">Emuparadise</a>, en esta página hay listados unos <a href="https://www.emuparadise.me/ScummVM_Games/21">500 juegos para ScummVM</a>.</p>
<p>Instalado ScummVM y con las ROMs descomprimidas iniciamos el emulador, seleccionamos <em>Add game&hellip;</em> y buscamos el directorio descomprimido del juego usando el botón <em>Go up</em> en caso de ser necesario para navegar el árbol de directorios. Añadido los juegos los iniciamos con el botón <em>Start</em> y a partir de este momento ya podemos empezar a jugar. Algunos juegos originalmente tenían una protección anticopia que en las ROMs y ScummVM queda desactivada. En el <a href="https://raw.githubusercontent.com/scummvm/scummvm/v1.8.1/README">manual de usuario de ScummVM</a> tenemos el listado de juegos soportados así como las teclas usables y sus funciones. Como son juegos que deberemos continuar en múltiples partidas deberemos guardar el estado del juego con <kbd>Alt 0-9</kbd> y cargar para continuar con <kbd>Ctrl 0-9</kbd>.</p>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/the-secret-of-monkey-island-game_hud07040c58009e7e55e663d11e3bad96f_86305_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="The Secret of Monkey Island"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/the-secret-of-monkey-island-game_hud07040c58009e7e55e663d11e3bad96f_86305_300x200_fit_q90_box.jpg" width="293" height="200" alt="The Secret of Monkey Island" title="The Secret of Monkey Island"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/lechuck-revenge-game_hub1aecd85076160c7b9edbdb4e9f81f1a_177150_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="LeChuck&amp;#39;s Revenge"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/lechuck-revenge-game_hub1aecd85076160c7b9edbdb4e9f81f1a_177150_300x200_fit_q90_box.jpg" width="293" height="200" alt="LeChuck&amp;#39;s Revenge" title="LeChuck&amp;#39;s Revenge"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/the-curse-of-monkey-island-game_huc3a876346101c4fd389ebf417656c5fa_147004_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="The Curse of Monkey Island"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/the-curse-of-monkey-island-game_huc3a876346101c4fd389ebf417656c5fa_147004_300x200_fit_q90_box.jpg" width="248" height="200" alt="The Curse of Monkey Island" title="The Curse of Monkey Island"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/indiana-jones-fate-of-atlantis-game_hub9bee2152da343f62a3a7726ece4e42f_135828_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Indiana Jones and the Fate of Atlantis"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/indiana-jones-fate-of-atlantis-game_hub9bee2152da343f62a3a7726ece4e42f_135828_300x200_fit_q90_box.jpg" width="293" height="200" alt="Indiana Jones and the Fate of Atlantis" title="Indiana Jones and the Fate of Atlantis"  class="lozad "></a></p>
</figure>
</div>
<div class="media">
<figure>
<p>
<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/maniac-mansion-game_hue28032979efdb7a92fb5ddf7ff60d160_80603_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Maniac Mansion"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/maniac-mansion-game_hue28032979efdb7a92fb5ddf7ff60d160_80603_300x200_fit_q90_box.jpg" width="293" height="200" alt="Maniac Mansion" title="Maniac Mansion"  class="lozad "></a>

<a href="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/day-of-the-tentacle-game_hudbff18d51eec44e2541ff4293caf0463_110363_2560x1440_fit_q90_box.jpg" data-gallery="data-gallery" title="Maniac Mansion 2: Day of the Tentacle"><img src="https://picodotdev.github.io/blog-bitix/2016/08/varios-juegos-de-culto-con-scummvm-en-gnu-linux/images/day-of-the-tentacle-game_hudbff18d51eec44e2541ff4293caf0463_110363_300x200_fit_q90_box.jpg" width="293" height="200" alt="Maniac Mansion 2: Day of the Tentacle" title="Maniac Mansion 2: Day of the Tentacle"  class="lozad "></a></p>
</figure>
</div>
<p>¡A disfrutar! Lamentablemente ya no tengo el tiempo que tenía antes para jugar a juegos y a veces tampoco las ganas de dedicar ese tiempo a los juegos pero estoy seguro que a aquellos sigan disfrutando de los juegos les será interesante.</p>
<blockquote>
<p>¡Hola! Me llamo Guybrush Threepwood, ¡y quiero ser un pirata!</p>
<p>&ndash; <cite>Guybrush Threepwood, The Secret of Monkey Island</cite></p>
</blockquote>
]]>
        </content>
        
            
                <category term="gnu-linux"/>
            
        
    </entry>
    
</feed>